    .INCLUDE "asm/macro.inc"
    .SYNTAX UNIFIED

	thumb_func_start func_0803A8A4
func_0803A8A4: @ 0x0803A8A4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r6, [sp, #0x10]
	adds r1, r5, #0
	subs r1, #0x34
	ldr r0, _0803A8C4 @ =0x000001FF
	cmp r1, r0
	bhi _0803A908
	subs r0, #0xcc
	cmp r5, r0
	ble _0803A8CC
	ldr r0, _0803A8C8 @ =0xFFFFFECC
	adds r4, r5, r0
	movs r0, #1
	b _0803A8D0
	.align 2, 0
_0803A8C4: .4byte 0x000001FF
_0803A8C8: .4byte 0xFFFFFECC
_0803A8CC:
	adds r4, r1, #0
	movs r0, #0
_0803A8D0:
	cmp r4, #0
	bne _0803A8D8
	movs r0, #0x38
	b _0803AB28
_0803A8D8:
	cmp r4, #9
	bne _0803A8E4
	cmp r0, #1
	bne _0803A8E4
	movs r0, #0x3d
	b _0803AB28
_0803A8E4:
	adds r0, r4, #0
	movs r1, #5
	bl __umodsi3
	cmp r0, #0
	bne _0803A8F4
	movs r0, #0x39
	b _0803AB28
_0803A8F4:
	adds r0, r4, #0
	movs r1, #3
	bl __umodsi3
	cmp r0, #0
	bne _0803A904
	movs r0, #0x3a
	b _0803AB28
_0803A904:
	movs r0, #0x3b
	b _0803AB28
_0803A908:
	cmp r5, #0x33
	bls _0803A90E
	b _0803AB26
_0803A90E:
	lsls r0, r5, #2
	ldr r1, _0803A918 @ =_0803A91C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0803A918: .4byte _0803A91C
_0803A91C: @ jump table
	.4byte _0803AA3C @ case 0
	.4byte _0803AA1C @ case 1
	.4byte _0803A9EC @ case 2
	.4byte _0803AA28 @ case 3
	.4byte _0803AA32 @ case 4
	.4byte _0803AA04 @ case 5
	.4byte _0803A9F8 @ case 6
	.4byte _0803AA10 @ case 7
	.4byte _0803AA46 @ case 8
	.4byte _0803AAD6 @ case 9
	.4byte _0803AADA @ case 10
	.4byte _0803AADE @ case 11
	.4byte _0803AAC2 @ case 12
	.4byte _0803AAB6 @ case 13
	.4byte _0803AAF6 @ case 14
	.4byte _0803AAAA @ case 15
	.4byte _0803AAAE @ case 16
	.4byte _0803AA50 @ case 17
	.4byte _0803AAFE @ case 18
	.4byte _0803AABA @ case 19
	.4byte _0803AABE @ case 20
	.4byte _0803AA9E @ case 21
	.4byte _0803AAA2 @ case 22
	.4byte _0803AAA6 @ case 23
	.4byte _0803AAC6 @ case 24
	.4byte _0803AACA @ case 25
	.4byte _0803AACE @ case 26
	.4byte _0803AAD2 @ case 27
	.4byte _0803AAFA @ case 28
	.4byte _0803AA74 @ case 29
	.4byte _0803AAF2 @ case 30
	.4byte _0803AA8E @ case 31
	.4byte _0803AA92 @ case 32
	.4byte _0803AA96 @ case 33
	.4byte _0803AA9A @ case 34
	.4byte _0803AB02 @ case 35
	.4byte _0803AAB2 @ case 36
	.4byte _0803AA62 @ case 37
	.4byte _0803AAEA @ case 38
	.4byte _0803AB06 @ case 39
	.4byte _0803AAEE @ case 40
	.4byte _0803AAE2 @ case 41
	.4byte _0803AAE6 @ case 42
	.4byte _0803AB0A @ case 43
	.4byte _0803AB1E @ case 44
	.4byte _0803AB1E @ case 45
	.4byte _0803AB1E @ case 46
	.4byte _0803AB22 @ case 47
	.4byte _0803AB0E @ case 48
	.4byte _0803AB12 @ case 49
	.4byte _0803AB16 @ case 50
	.4byte _0803AB1A @ case 51
_0803A9EC:
	movs r0, #0
	cmp r4, #3
	beq _0803A9F4
	b _0803AB28
_0803A9F4:
	movs r0, #1
	b _0803AB28
_0803A9F8:
	movs r0, #3
	cmp r4, #3
	bne _0803AA00
	b _0803AB28
_0803AA00:
	movs r0, #2
	b _0803AB28
_0803AA04:
	movs r0, #5
	cmp r4, #3
	bne _0803AA0C
	b _0803AB28
_0803AA0C:
	movs r0, #4
	b _0803AB28
_0803AA10:
	movs r0, #7
	cmp r4, #3
	bne _0803AA18
	b _0803AB28
_0803AA18:
	movs r0, #6
	b _0803AB28
_0803AA1C:
	movs r0, #9
	cmp r4, #3
	bne _0803AA24
	b _0803AB28
_0803AA24:
	movs r0, #8
	b _0803AB28
_0803AA28:
	movs r0, #0xd
	cmp r4, #3
	beq _0803AB28
	movs r0, #0xc
	b _0803AB28
_0803AA32:
	movs r0, #0xb
	cmp r4, #3
	beq _0803AB28
	movs r0, #0xa
	b _0803AB28
_0803AA3C:
	movs r0, #0xf
	cmp r4, #3
	beq _0803AB28
	movs r0, #0xe
	b _0803AB28
_0803AA46:
	movs r0, #0x11
	cmp r4, #3
	beq _0803AB28
	movs r0, #0x10
	b _0803AB28
_0803AA50:
	cmp r3, #0
	beq _0803AA5A
	cmp r3, #1
	beq _0803AA5E
	b _0803AB26
_0803AA5A:
	movs r0, #0x24
	b _0803AB28
_0803AA5E:
	movs r0, #0x25
	b _0803AB28
_0803AA62:
	cmp r6, #0
	beq _0803AA6C
	cmp r6, #1
	beq _0803AA70
	b _0803AB26
_0803AA6C:
	movs r0, #0x26
	b _0803AB28
_0803AA70:
	movs r0, #0x27
	b _0803AB28
_0803AA74:
	cmp r2, #1
	beq _0803AA86
	cmp r2, #1
	blo _0803AA82
	cmp r2, #2
	beq _0803AA8A
	b _0803AB26
_0803AA82:
	movs r0, #0x29
	b _0803AB28
_0803AA86:
	movs r0, #0x2a
	b _0803AB28
_0803AA8A:
	movs r0, #0x2b
	b _0803AB28
_0803AA8E:
	movs r0, #0x12
	b _0803AB28
_0803AA92:
	movs r0, #0x13
	b _0803AB28
_0803AA96:
	movs r0, #0x14
	b _0803AB28
_0803AA9A:
	movs r0, #0x15
	b _0803AB28
_0803AA9E:
	movs r0, #0x16
	b _0803AB28
_0803AAA2:
	movs r0, #0x17
	b _0803AB28
_0803AAA6:
	movs r0, #0x18
	b _0803AB28
_0803AAAA:
	movs r0, #0x19
	b _0803AB28
_0803AAAE:
	movs r0, #0x1a
	b _0803AB28
_0803AAB2:
	movs r0, #0x1b
	b _0803AB28
_0803AAB6:
	movs r0, #0x1c
	b _0803AB28
_0803AABA:
	movs r0, #0x1d
	b _0803AB28
_0803AABE:
	movs r0, #0x1e
	b _0803AB28
_0803AAC2:
	movs r0, #0x1f
	b _0803AB28
_0803AAC6:
	movs r0, #0x20
	b _0803AB28
_0803AACA:
	movs r0, #0x21
	b _0803AB28
_0803AACE:
	movs r0, #0x22
	b _0803AB28
_0803AAD2:
	movs r0, #0x23
	b _0803AB28
_0803AAD6:
	movs r0, #0x28
	b _0803AB28
_0803AADA:
	movs r0, #0x2c
	b _0803AB28
_0803AADE:
	movs r0, #0x2d
	b _0803AB28
_0803AAE2:
	movs r0, #0x2e
	b _0803AB28
_0803AAE6:
	movs r0, #0x2f
	b _0803AB28
_0803AAEA:
	movs r0, #0x30
	b _0803AB28
_0803AAEE:
	movs r0, #0x31
	b _0803AB28
_0803AAF2:
	movs r0, #0x32
	b _0803AB28
_0803AAF6:
	movs r0, #0x33
	b _0803AB28
_0803AAFA:
	movs r0, #0x34
	b _0803AB28
_0803AAFE:
	movs r0, #0x35
	b _0803AB28
_0803AB02:
	movs r0, #0x36
	b _0803AB28
_0803AB06:
	movs r0, #0x37
	b _0803AB28
_0803AB0A:
	movs r0, #0x3c
	b _0803AB28
_0803AB0E:
	movs r0, #0x3e
	b _0803AB28
_0803AB12:
	movs r0, #0x3f
	b _0803AB28
_0803AB16:
	movs r0, #0x40
	b _0803AB28
_0803AB1A:
	movs r0, #0x41
	b _0803AB28
_0803AB1E:
	movs r0, #0x10
	b _0803AB28
_0803AB22:
	movs r0, #0x11
	b _0803AB28
_0803AB26:
	movs r0, #0
_0803AB28:
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803AB30
func_0803AB30: @ 0x0803AB30
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	mov sb, r0
	mov sl, r1
	mov r6, sb
	stm r6!, {r1}
	movs r7, #2
	add r0, sp, #0x20
	mov r8, r0
	mov r1, sp
	adds r1, #0x24
	str r1, [sp, #0x2c]
	movs r5, #0
	adds r4, r6, #0
_0803AB54:
	str r5, [r4]
	strh r5, [r4, #4]
	str r5, [r4, #8]
	strh r5, [r4, #0xc]
	str r5, [r4, #0x10]
	strh r5, [r4, #0x14]
	str r5, [r4, #0x18]
	strh r5, [r4, #0x1c]
	adds r0, r6, #0
	adds r0, #0x20
	bl func_08007874
	str r5, [r4, #0x24]
	adds r4, #0x2c
	adds r6, #0x2c
	subs r7, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r7, r0
	bne _0803AB54
	mov r6, sb
	adds r6, #0x88
	movs r0, #0
	str r0, [r6]
	mov r0, sb
	adds r0, #0x9c
	movs r4, #1
	strb r4, [r0]
	mov r2, sl
	ldr r0, [r2]
	ldr r2, [r0, #0x48]
	mov r0, sl
	movs r1, #0xf
	bl _call_via_r2
	mov r3, r8
	strb r0, [r3]
	adds r5, r6, #0
	ldr r2, [r5]
	cmp r4, r2
	bls _0803ABCA
	mov r0, sb
	adds r0, #0x8c
	adds r2, #4
	adds r2, r5, r2
	ldrb r1, [r3]
	subs r2, r2, r0
	bl memset
	ldr r2, [r5]
	adds r0, r2, #4
	adds r0, r5, r0
	add r1, sp, #0x20
	ldrb r1, [r1]
	subs r2, r4, r2
	bl memset
	str r4, [r5]
	b _0803ABEA
_0803ABCA:
	mov r0, sb
	adds r0, #0x8c
	mov r4, sb
	adds r4, #0x8d
	mov r2, r8
	ldrb r1, [r2]
	subs r2, r4, r0
	bl memset
	ldr r0, [r5]
	adds r0, #4
	adds r0, r5, r0
	subs r0, r0, r4
	ldr r1, [r6]
	subs r1, r1, r0
	str r1, [r6]
_0803ABEA:
	mov r3, sl
	ldr r0, [r3]
	ldr r1, [r0, #0x68]
	mov r0, sl
	bl _call_via_r1
	mov r8, r0
	movs r7, #0
_0803ABFA:
	movs r0, #0x2c
	adds r6, r7, #0
	muls r6, r0, r6
	add r6, sb
	adds r4, r6, #4
	ldr r0, _0803AC74 @ =0x0000091A
	adds r2, r7, r0
	mov r1, r8
	ldr r5, [r1]
	ldr r0, [sp, #0x2c]
	ldr r3, [r5, #0xc]
	bl _call_via_r3
	ldr r0, [sp, #0x24]
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r5, #0x10]
	mov r1, r8
	bl _call_via_r3
	mov r0, sp
	mov r1, sp
	movs r2, #0x20
	bl memcpy
	mov r0, sp
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	ldm r0!, {r2, r3}
	stm r4!, {r2, r3}
	adds r4, r6, #0
	adds r4, #0x24
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_08007B54
	adds r1, r0, #0
	str r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	strh r0, [r6, #0x2c]
	adds r7, #1
	cmp r7, #2
	bls _0803ABFA
	mov r0, sb
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0803AC74: .4byte 0x0000091A

	thumb_func_start func_0803AC78
func_0803AC78: @ 0x0803AC78
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	mov r8, r1
	ldr r0, [r6]
	ldr r2, [r0]
	adds r4, r6, #0
	adds r4, #0x88
	adds r1, r6, #0
	adds r1, #0x8c
	ldrb r1, [r1]
	ldr r2, [r2, #0x4c]
	bl _call_via_r2
	adds r0, r6, #4
	cmp r0, #0
	beq _0803ACBE
	adds r5, r4, #0
	cmp r0, r5
	beq _0803ACBE
	adds r7, r0, #0
_0803ACA4:
	subs r5, #0x2c
	adds r4, r5, #0
	adds r4, #0x20
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	cmp r7, r5
	bne _0803ACA4
_0803ACBE:
	movs r0, #1
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _0803ACCE
	adds r0, r6, #0
	bl __builtin_delete
_0803ACCE:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0803ACD8
func_0803ACD8: @ 0x0803ACD8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	mov sb, r0
	adds r5, r1, #0
	movs r0, #0
	mov sl, r0
_0803ACEC:
	movs r0, #0x2c
	mov r1, sl
	muls r1, r0, r1
	adds r0, r1, #0
	adds r4, r0, #4
	add r4, sb
	adds r6, r4, #0
	adds r6, #8
	ldr r7, [r4, #8]
	add r0, sb
	adds r0, #0x24
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [r4, #8]
	movs r3, #0
	cmp r0, #0
	beq _0803AD14
	ldrh r3, [r6, #4]
_0803AD14:
	lsls r2, r2, #5
	ldr r4, _0803AD50 @ =0x06010000
	adds r2, r2, r4
	mov r0, sp
	adds r1, r7, #0
	bl func_08008F0C
	mov r6, sp
	str r6, [sp, #0x18]
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0803AD54
	cmp r1, #0
	beq _0803AD3E
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0803AD3E:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	movs r4, #1
	add sl, r4
	mov r6, sb
	adds r6, #0x8c
	str r6, [sp, #0x1c]
	b _0803AE28
	.align 2, 0
_0803AD50: .4byte 0x06010000
_0803AD54:
	str r1, [sp, #0x20]
	movs r0, #1
	str r0, [sp, #0x14]
	ldr r1, [r5]
	ldr r7, [sp, #0x20]
	subs r0, r7, r1
	asrs r4, r0, #4
	str r4, [sp, #0x10]
	add r2, sp, #0x14
	add r0, sp, #0x10
	cmp r4, #1
	bhs _0803AD6E
	adds r0, r2, #0
_0803AD6E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0803AD8E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0803AD8A
	mov r0, r8
	bl func_080D3BC0
_0803AD8A:
	ldr r1, [r5]
	b _0803AD92
_0803AD8E:
	movs r0, #0
	mov r8, r0
_0803AD92:
	adds r4, r0, #0
	str r4, [sp, #0x24]
	adds r2, r1, #0
	adds r3, r4, #0
	movs r0, #1
	add sl, r0
	mov r1, sb
	adds r1, #0x8c
	str r1, [sp, #0x1c]
	ldr r4, [sp, #0x20]
	cmp r2, r4
	beq _0803ADC4
_0803ADAA:
	cmp r3, #0
	beq _0803ADBA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0803ADBA:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x20]
	cmp r2, r6
	bne _0803ADAA
_0803ADC4:
	adds r4, r3, #0
	ldr r0, [sp, #0x14]
	cmp r0, #1
	bne _0803ADE0
	cmp r4, #0
	beq _0803ADDC
	adds r0, r4, #0
	ldr r1, [sp, #0x18]
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0803ADDC:
	adds r4, #0x10
	b _0803AE02
_0803ADE0:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0803AE00
_0803ADE8:
	cmp r2, #0
	beq _0803ADF8
	adds r0, r2, #0
	ldr r1, [sp, #0x18]
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0803ADF8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0803ADE8
_0803AE00:
	adds r4, r2, #0
_0803AE02:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _0803AE12
_0803AE0C:
	adds r0, #0x10
	cmp r0, r2
	bne _0803AE0C
_0803AE12:
	cmp r1, #0
	beq _0803AE1C
	adds r0, r1, #0
	bl free
_0803AE1C:
	ldr r0, [sp, #0x24]
	add r0, r8
	ldr r1, [sp, #0x24]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0803AE28:
	mov r2, sl
	cmp r2, #2
	bhi _0803AE30
	b _0803ACEC
_0803AE30:
	mov r3, sb
	ldr r0, [r3]
	ldr r3, [r0]
	mov r4, sb
	ldr r1, [r4, #0x14]
	ldr r6, [sp, #0x1c]
	ldrb r2, [r6]
	ldr r4, [r3, #0x54]
	movs r3, #1
	bl _call_via_r4
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0803AE58
func_0803AE58: @ 0x0803AE58
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0x14
	ldr r5, [sp, #0x28]
	movs r4, #0x2c
	muls r4, r5, r4
	adds r4, #4
	adds r4, r0, r4
	ldrh r5, [r4, #0x28]
	mov r8, r5
	movs r5, #0x80
	lsls r5, r5, #8
	ldr r6, [r0]
	adds r0, #0x88
	str r5, [sp]
	str r4, [sp, #4]
	str r6, [sp, #8]
	mov r4, r8
	str r4, [sp, #0xc]
	str r0, [sp, #0x10]
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0xaa
	ldr r4, _0803AE9C @ =func_030004DC
	bl _call_via_r4
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0803AE9C: .4byte func_030004DC

	thumb_func_start func_0803AEA0
func_0803AEA0: @ 0x0803AEA0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x68
	adds r6, r0, #0
	mov sb, r1
	mov sl, r2
	str r3, [sp, #0x50]
	str r1, [r6]
	movs r1, #0
	str r1, [r6, #4]
	adds r5, r6, #0
	adds r5, #0xd0
	str r1, [r5]
	adds r0, #0xe4
	add r2, sp, #0x50
	ldrb r2, [r2]
	strb r2, [r0]
	adds r2, r6, #0
	adds r2, #0xe5
	movs r0, #1
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0xe6
	strb r1, [r0]
	adds r0, #2
	str r1, [r0]
	mov r3, sl
	ldr r1, [r3]
	add r4, sp, #0x48
	adds r0, r4, #0
	ldr r3, [r1, #0xc]
	mov r1, sl
	movs r2, #0
	bl _call_via_r3
	ldr r0, [sp, #0x48]
	movs r1, #0
	cmp r0, #0
	beq _0803AEF6
	ldrh r1, [r4, #4]
_0803AEF6:
	str r1, [sp, #0x54]
	movs r4, #0
	str r4, [sp, #0x64]
	str r5, [sp, #0x60]
	cmp r4, r1
	bhs _0803AF9E
	add r7, sp, #0x28
	mov r8, r7
	add r5, sp, #0x20
	adds r0, r6, #4
	str r0, [sp, #0x58]
_0803AF0C:
	mov r1, sl
	ldr r3, [r1]
	ldr r2, [sp, #0x64]
	lsls r1, r2, #2
	ldr r0, [sp, #0x48]
	adds r0, r0, r1
	ldrh r2, [r0]
	mov r0, r8
	ldr r3, [r3, #0x10]
	mov r1, sl
	bl _call_via_r3
	mov r1, sp
	mov r0, r8
	ldm r0!, {r3, r4, r7}
	stm r1!, {r3, r4, r7}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #0
	bl func_08007B54
	str r0, [r5, #4]
	ldr r1, [r6, #4]
	cmp r1, #4
	bhi _0803AF82
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, #4
	ldr r3, [sp, #0x58]
	adds r4, r3, r0
	cmp r4, #0
	beq _0803AF7C
	adds r1, r4, #0
	mov r0, sp
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	adds r4, #0x20
	adds r0, r4, #0
	bl func_08007874
	ldr r1, [r5, #4]
	adds r0, r4, #0
	bl func_08007CD8
	str r0, [r4, #4]
_0803AF7C:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
_0803AF82:
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007C28
	adds r0, r5, #0
	movs r1, #2
	bl func_080079E8
	ldr r3, [sp, #0x64]
	adds r3, #1
	str r3, [sp, #0x64]
	ldr r4, [sp, #0x54]
	cmp r3, r4
	blo _0803AF0C
_0803AF9E:
	ldr r7, [sp, #0x50]
	cmp r7, #0
	beq _0803AFA8
	cmp r7, #1
	beq _0803AFAC
_0803AFA8:
	movs r1, #0x10
	b _0803AFAE
_0803AFAC:
	movs r1, #0x11
_0803AFAE:
	mov r2, sb
	ldr r0, [r2]
	ldr r2, [r0, #0x48]
	mov r0, sb
	bl _call_via_r2
	adds r2, r0, #0
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	cmp r0, #0xf
	bhi _0803AFD6
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0803AFCE
	strb r2, [r0]
_0803AFCE:
	ldr r3, [sp, #0x60]
	ldr r0, [r3]
	adds r0, #1
	str r0, [r3]
_0803AFD6:
	movs r4, #0
	mov r8, r4
	movs r2, #0
	mov r7, sb
	ldr r3, [r7]
	ldr r0, [sp, #0x54]
	cmp r8, r0
	bhs _0803AFF6
	ldr r1, [sp, #0x48]
_0803AFE8:
	ldrh r0, [r1, #2]
	add r8, r0
	adds r1, #4
	adds r2, #1
	ldr r4, [sp, #0x54]
	cmp r2, r4
	blo _0803AFE8
_0803AFF6:
	ldr r1, [r3, #0x18]
	mov r0, sb
	bl _call_via_r1
	str r0, [sp, #0x5c]
	mov r7, sb
	ldr r0, [r7]
	ldr r1, [r0, #0x1c]
	mov r0, sb
	bl _call_via_r1
	mov sb, r0
	movs r0, #0
	str r0, [sp, #0x64]
	ldr r1, [sp, #0x88]
	cmp r0, r1
	bhs _0803B096
	mov r5, sp
_0803B01A:
	mov r0, sp
	mov r1, sl
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	mov r2, r8
	cmp r2, #0
	beq _0803B03A
	bl rand
	mov r1, r8
	bl __umodsi3
	b _0803B03C
_0803B03A:
	movs r0, #0
_0803B03C:
	cmp r0, #0
	beq _0803B050
	movs r3, #0x10
	ldrsh r4, [r5, r3]
	lsls r0, r0, #8
	strh r0, [r5, #0x10]
	mov r0, sp
	bl func_0805E8F0
	strh r4, [r5, #0x10]
_0803B050:
	add r4, sp, #0x14
	adds r0, r4, #0
	mov r1, sp
	ldr r2, [sp, #0x5c]
	mov r3, sb
	bl func_0803B454
	adds r2, r6, #0
	adds r2, #0xe8
	ldr r1, [r2]
	cmp r1, #0x1f
	bhi _0803B08A
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r2, r0
	cmp r0, #0
	beq _0803B084
	adds r1, r4, #0
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [sp, #0x2c]
	str r1, [r0]
_0803B084:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0803B08A:
	ldr r4, [sp, #0x64]
	adds r4, #1
	str r4, [sp, #0x64]
	ldr r7, [sp, #0x88]
	cmp r4, r7
	blo _0803B01A
_0803B096:
	adds r0, r6, #0
	add sp, #0x68
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0803B0A8
func_0803B0A8: @ 0x0803B0A8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r0, #0
	mov r8, r1
	ldr r0, [r7]
	ldr r2, [r0]
	adds r1, r7, #0
	adds r1, #0xd4
	ldrb r1, [r1]
	ldr r2, [r2, #0x4c]
	bl _call_via_r2
	adds r2, r7, #0
	adds r2, #0xe8
	ldr r1, [r2]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r2, r0
	adds r0, r7, #0
	adds r0, #0xec
	cmp r0, r2
	beq _0803B0E0
_0803B0DA:
	adds r0, #0x1c
	cmp r0, r2
	bne _0803B0DA
_0803B0E0:
	adds r2, r7, #4
	ldr r1, [r7, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, #4
	adds r6, r2, r0
	adds r5, r2, #4
	cmp r5, r6
	beq _0803B10E
_0803B0F4:
	adds r4, r5, #0
	adds r4, #0x20
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	adds r5, #0x28
	cmp r5, r6
	bne _0803B0F4
_0803B10E:
	movs r0, #1
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _0803B11E
	adds r0, r7, #0
	bl __builtin_delete
_0803B11E:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0803B128
func_0803B128: @ 0x0803B128
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	str r0, [sp, #0x18]
	adds r7, r1, #0
	adds r2, r0, #0
	adds r2, #4
	adds r5, r2, #4
	ldr r1, [r0, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, #4
	adds r2, r2, r0
	str r2, [sp, #0x1c]
	cmp r5, r2
	bne _0803B152
	b _0803B280
_0803B152:
	adds r0, r5, #0
	adds r0, #8
	ldr r4, [r5, #8]
	movs r6, #0
	cmp r4, #0
	beq _0803B160
	ldrh r6, [r0, #4]
_0803B160:
	adds r0, r5, #0
	adds r0, #0x28
	str r0, [sp, #0x20]
	cmp r6, #0
	bne _0803B16C
	b _0803B276
_0803B16C:
	subs r0, #8
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r2, r0, #0
	lsls r2, r2, #5
	ldr r1, _0803B1A8 @ =0x06010000
	adds r2, r2, r1
	mov r0, sp
	adds r1, r4, #0
	adds r3, r6, #0
	bl func_08008F0C
	mov sl, sp
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _0803B1AC
	cmp r1, #0
	beq _0803B1A0
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0803B1A0:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _0803B276
	.align 2, 0
_0803B1A8: .4byte 0x06010000
_0803B1AC:
	str r1, [sp, #0x24]
	movs r0, #1
	str r0, [sp, #0x14]
	ldr r1, [r7]
	ldr r6, [sp, #0x24]
	subs r0, r6, r1
	asrs r4, r0, #4
	str r4, [sp, #0x10]
	add r2, sp, #0x14
	add r0, sp, #0x10
	cmp r4, #1
	bhs _0803B1C6
	adds r0, r2, #0
_0803B1C6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0803B1E6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0803B1E2
	mov r0, sb
	bl func_080D3BC0
_0803B1E2:
	ldr r1, [r7]
	b _0803B1EA
_0803B1E6:
	movs r0, #0
	mov sb, r0
_0803B1EA:
	adds r4, r0, #0
	mov r8, r4
	adds r2, r1, #0
	mov r3, r8
	adds r5, #0x28
	str r5, [sp, #0x20]
	b _0803B20C
_0803B1F8:
	cmp r3, #0
	beq _0803B208
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0803B208:
	adds r2, #0x10
	adds r3, #0x10
_0803B20C:
	ldr r0, [sp, #0x24]
	cmp r2, r0
	bne _0803B1F8
	adds r4, r3, #0
	ldr r0, [sp, #0x14]
	cmp r0, #1
	bne _0803B22E
	cmp r4, #0
	beq _0803B22A
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_0803B22A:
	adds r4, #0x10
	b _0803B250
_0803B22E:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0803B24E
_0803B236:
	cmp r2, #0
	beq _0803B246
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0803B246:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0803B236
_0803B24E:
	adds r4, r2, #0
_0803B250:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _0803B260
_0803B25A:
	adds r0, #0x10
	cmp r0, r2
	bne _0803B25A
_0803B260:
	cmp r1, #0
	beq _0803B26A
	adds r0, r1, #0
	bl free
_0803B26A:
	mov r0, sb
	add r0, r8
	mov r6, r8
	str r6, [r7]
	str r4, [r7, #4]
	str r0, [r7, #0xc]
_0803B276:
	ldr r5, [sp, #0x20]
	ldr r0, [sp, #0x1c]
	cmp r5, r0
	beq _0803B280
	b _0803B152
_0803B280:
	ldr r1, [sp, #0x18]
	ldm r1!, {r0}
	ldr r3, [r0]
	ldr r1, [r1, #0x14]
	ldr r2, [sp, #0x18]
	adds r2, #0xd4
	ldrb r2, [r2]
	ldr r4, [r3, #0x54]
	movs r3, #1
	bl _call_via_r4
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0803B2A8
func_0803B2A8: @ 0x0803B2A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r4, r0, #0
	adds r0, #0xe4
	ldrb r2, [r0]
	lsls r1, r2, #4
	ldr r0, _0803B2D8 @ =0x080F1948
	adds r1, r1, r0
	mov sl, r1
	movs r7, #0
	movs r0, #0
	mov r8, r0
	cmp r2, #0
	beq _0803B2D0
	cmp r2, #1
	beq _0803B2DC
_0803B2D0:
	movs r1, #2
	str r1, [sp]
	b _0803B2E0
	.align 2, 0
_0803B2D8: .4byte 0x080F1948
_0803B2DC:
	movs r0, #3
	str r0, [sp]
_0803B2E0:
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r1, [r1, #0x18]
	bl _call_via_r1
	str r0, [sp, #4]
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r1, [r1, #0x1c]
	bl _call_via_r1
	str r0, [sp, #8]
	adds r0, r4, #0
	adds r0, #0xe8
	ldr r0, [r0]
	mov sb, r0
	movs r6, #0
	cmp r6, sb
	bhs _0803B356
	adds r4, #0xec
	lsls r0, r7, #3
	mov r1, sl
	adds r5, r0, r1
_0803B30E:
	adds r0, r4, #0
	bl func_0805E8F0
	lsls r0, r0, #0x1d
	cmp r0, #0
	bge _0803B324
	adds r0, r4, #0
	ldr r1, [sp, #4]
	ldr r2, [sp, #8]
	bl func_0803B474
_0803B324:
	movs r0, #1
	add r8, r0
	ldr r1, [sp]
	cmp r8, r1
	blo _0803B33E
	adds r5, #8
	adds r7, #1
	cmp r7, #1
	bls _0803B33A
	mov r5, sl
	movs r7, #0
_0803B33A:
	movs r0, #0
	mov r8, r0
_0803B33E:
	ldr r0, [r4, #0x14]
	ldr r1, [r5]
	adds r0, r0, r1
	str r0, [r4, #0x14]
	ldr r0, [r4, #0x18]
	ldr r1, [r5, #4]
	adds r0, r0, r1
	str r0, [r4, #0x18]
	adds r4, #0x1c
	adds r6, #1
	cmp r6, sb
	blo _0803B30E
_0803B356:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0803B368
func_0803B368: @ 0x0803B368
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	mov sb, r0
	str r1, [sp, #0x14]
	adds r0, #0xe8
	ldr r0, [r0]
	lsrs r3, r0, #1
	mov r2, sb
	adds r2, #0xe6
	ldrb r1, [r2]
	cmp r1, #0
	beq _0803B38C
	cmp r1, #1
	beq _0803B394
_0803B38C:
	movs r4, #0
	mov sl, r3
	movs r0, #1
	b _0803B39A
_0803B394:
	adds r4, r3, #0
	mov sl, r0
	movs r0, #0
_0803B39A:
	strb r0, [r2]
	mov r1, sb
	ldr r0, [r1]
	ldr r1, [r0]
	ldr r1, [r1, #0x18]
	bl _call_via_r1
	str r0, [sp, #0x18]
	mov r2, sb
	ldr r0, [r2]
	ldr r1, [r0]
	ldr r1, [r1, #0x1c]
	bl _call_via_r1
	str r0, [sp, #0x1c]
	mov r8, r4
	cmp r8, sl
	bhs _0803B43E
	mov r0, sb
	adds r0, #4
	str r0, [sp, #0x20]
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #2
	adds r0, #0xf0
	mov r1, sb
	adds r7, r0, r1
	adds r1, #0xd0
	str r1, [sp, #0x24]
_0803B3D4:
	ldrh r1, [r7, #8]
	lsls r1, r1, #2
	ldr r0, [r7]
	adds r0, r0, r1
	ldrh r0, [r0]
	movs r2, #0x12
	ldrsh r6, [r7, r2]
	ldr r1, [sp, #0x18]
	subs r6, r6, r1
	adds r6, #8
	movs r2, #0xff
	ands r6, r2
	subs r6, #8
	movs r1, #0x16
	ldrsh r5, [r7, r1]
	ldr r2, [sp, #0x1c]
	subs r5, r5, r2
	adds r5, #8
	movs r1, #0xff
	ands r5, r1
	subs r5, #8
	lsls r4, r0, #2
	adds r4, r4, r0
	lsls r4, r4, #3
	adds r4, #4
	ldr r2, [sp, #0x20]
	adds r4, r2, r4
	adds r0, r4, #0
	adds r0, #0x20
	ldr r1, [r0, #4]
	bl func_08007D4C
	mov r2, sb
	ldr r1, [r2]
	movs r2, #0
	str r2, [sp]
	str r4, [sp, #4]
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x24]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x14]
	adds r1, r6, #0
	adds r2, r5, #0
	movs r3, #0x55
	ldr r4, _0803B450 @ =func_030004DC
	bl _call_via_r4
	adds r7, #0x1c
	movs r1, #1
	add r8, r1
	cmp r8, sl
	blo _0803B3D4
_0803B43E:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803B450: .4byte func_030004DC

	thumb_func_start func_0803B454
func_0803B454: @ 0x0803B454
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldm r1!, {r5, r6, r7}
	stm r0!, {r5, r6, r7}
	ldm r1!, {r5, r6}
	stm r0!, {r5, r6}
	adds r0, r4, #0
	adds r1, r2, #0
	adds r2, r3, #0
	bl func_0803B474
	adds r0, r4, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803B474
func_0803B474: @ 0x0803B474
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	bl rand
	movs r1, #0xf0
	bl __modsi3
	adds r4, r4, r0
	lsls r4, r4, #0x10
	str r4, [r6, #0x14]
	bl rand
	movs r1, #0xa0
	bl __modsi3
	adds r5, r5, r0
	lsls r5, r5, #0x10
	str r5, [r6, #0x18]
	bl rand
	movs r1, #0x90
	ands r1, r0
	adds r1, #0x60
	strh r1, [r6, #0x10]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0803B4B0
func_0803B4B0: @ 0x0803B4B0
	push {r4, lr}
	adds r2, r0, #0
	ldr r0, _0803B4D8 @ =vtable_unk_080E76E8
	str r0, [r2]
	str r1, [r2, #4]
	adds r0, r2, #0
	adds r0, #8
	movs r1, #3
	movs r4, #0
	movs r3, #1
	rsbs r3, r3, #0
_0803B4C6:
	strb r4, [r0]
	adds r0, #0x18
	subs r1, #1
	cmp r1, r3
	bne _0803B4C6
	adds r0, r2, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0803B4D8: .4byte vtable_unk_080E76E8
_0803B4DC:
	.byte 0xF0, 0xB5, 0x88, 0xB0
	.byte 0x06, 0x1C, 0x0D, 0x1C, 0x04, 0x49, 0x50, 0x18, 0x0C, 0x28, 0x00, 0xD9, 0xD7, 0xE0, 0x80, 0x00
	.byte 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46, 0xDF, 0x00, 0xFF, 0xFF, 0x00, 0xB5, 0x03, 0x08
	.byte 0x34, 0xB5, 0x03, 0x08, 0x70, 0xB5, 0x03, 0x08, 0xA8, 0xB5, 0x03, 0x08, 0x28, 0xB6, 0x03, 0x08
	.byte 0x34, 0xB6, 0x03, 0x08, 0x34, 0xB6, 0x03, 0x08, 0x34, 0xB6, 0x03, 0x08, 0x34, 0xB6, 0x03, 0x08
	.byte 0xBC, 0xB5, 0x03, 0x08, 0xD0, 0xB5, 0x03, 0x08, 0x50, 0xB6, 0x03, 0x08, 0x5C, 0xB6, 0x03, 0x08
	.byte 0x68, 0xB6, 0x03, 0x08, 0x68, 0x68, 0x14, 0x30, 0xCE, 0xF7, 0xF2, 0xFA, 0x00, 0x06, 0x00, 0x28
	.byte 0x0C, 0xD0, 0x68, 0x68, 0x03, 0x49, 0x40, 0x18, 0x00, 0x78, 0x40, 0x07, 0x00, 0x28, 0x05, 0xDA
	.byte 0x01, 0x4D, 0x8D, 0xE0, 0xC8, 0x21, 0x00, 0x00, 0x74, 0x19, 0x0F, 0x08, 0x68, 0x68, 0x03, 0x49
	.byte 0x40, 0x18, 0xD2, 0xF7, 0xBD, 0xFF, 0x05, 0x1C, 0x83, 0xE0, 0x00, 0x00, 0xD8, 0x1B, 0x00, 0x00
	.byte 0x68, 0x68, 0x14, 0x30, 0xCE, 0xF7, 0xC4, 0xFA, 0x6F, 0x46, 0x00, 0x28, 0x03, 0xD0, 0x5F, 0xF0
	.byte 0x39, 0xFE, 0x05, 0x1C, 0x00, 0xE0, 0x07, 0x4D, 0x28, 0x1C, 0x98, 0xF0, 0xF5, 0xFA, 0x04, 0x1C
	.byte 0x1F, 0x2C, 0x00, 0xD9, 0x1F, 0x24, 0x38, 0x1C, 0x29, 0x1C, 0x22, 0x1C, 0x98, 0xF0, 0xFA, 0xF9
	.byte 0x39, 0x19, 0x73, 0xE0, 0x80, 0x19, 0x0F, 0x08, 0x68, 0x68, 0x03, 0x49, 0x40, 0x18, 0x5F, 0xF0
	.byte 0x21, 0xFE, 0x05, 0x1C, 0x5D, 0xE0, 0x00, 0x00, 0x70, 0x1C, 0x00, 0x00, 0x68, 0x68, 0x03, 0x49
	.byte 0x40, 0x18, 0xD2, 0xF7, 0x8F, 0xFF, 0x05, 0x1C, 0x53, 0xE0, 0x00, 0x00, 0xD8, 0x1B, 0x00, 0x00
	.byte 0x68, 0x68, 0x08, 0x49, 0x40, 0x18, 0x64, 0xF0, 0xD5, 0xFE, 0x07, 0x1C, 0x00, 0x2F, 0x0B, 0xD0
	.byte 0x68, 0x68, 0x04, 0x49, 0x40, 0x18, 0x64, 0xF0, 0xCD, 0xFE, 0x63, 0xF0, 0x6F, 0xFA, 0x05, 0x1C
	.byte 0x3F, 0xE0, 0x00, 0x00, 0xD4, 0x1C, 0x00, 0x00, 0x0A, 0x4D, 0x28, 0x1C, 0x98, 0xF0, 0xBC, 0xFA
	.byte 0x04, 0x1C, 0x1F, 0x2C, 0x00, 0xD9, 0x1F, 0x24, 0x68, 0x46, 0x29, 0x1C, 0x22, 0x1C, 0x98, 0xF0
	.byte 0xC1, 0xF9, 0x69, 0x46, 0x08, 0x19, 0x07, 0x70, 0x01, 0x20, 0x30, 0x70, 0x30, 0x1D, 0x98, 0xF0
	.byte 0x83, 0xFA, 0x43, 0xE0, 0x84, 0x19, 0x0F, 0x08, 0x68, 0x68, 0x14, 0x30, 0xCE, 0xF7, 0x62, 0xFA
	.byte 0x05, 0x1C, 0x1E, 0xE0, 0x01, 0x24, 0x51, 0x00, 0x89, 0x18, 0xC9, 0x00, 0x49, 0x19, 0x03, 0x48
	.byte 0x09, 0x18, 0x68, 0x46, 0x98, 0xF0, 0x70, 0xFA, 0x34, 0x70, 0x23, 0xE0, 0x90, 0x14, 0xE8, 0xFF
	.byte 0x68, 0x68, 0x01, 0x49, 0x0B, 0xE0, 0x00, 0x00, 0xE0, 0x21, 0x00, 0x00, 0x68, 0x68, 0x01, 0x49
	.byte 0x05, 0xE0, 0x00, 0x00, 0xF0, 0x21, 0x00, 0x00, 0x68, 0x68, 0x88, 0x21, 0x89, 0x01, 0x45, 0x18
	.byte 0x28, 0x1C, 0x98, 0xF0, 0x81, 0xFA, 0x04, 0x1C, 0x1F, 0x2C, 0x00, 0xD9, 0x1F, 0x24, 0x68, 0x46
	.byte 0x29, 0x1C, 0x22, 0x1C, 0x98, 0xF0, 0x86, 0xF9, 0x68, 0x46, 0x01, 0x19, 0x00, 0x20, 0x08, 0x70
	.byte 0x01, 0x20, 0x30, 0x70, 0x30, 0x1D, 0x69, 0x46, 0x98, 0xF0, 0x46, 0xFA, 0x06, 0xE0, 0x69, 0x46
	.byte 0x00, 0x20, 0x08, 0x70, 0x30, 0x70, 0x30, 0x1D, 0x98, 0xF0, 0x3E, 0xFA, 0x30, 0x1C, 0x08, 0xB0
	.byte 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00

	thumb_func_start func_0803B6B8
func_0803B6B8: @ 0x0803B6B8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r7, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	adds r0, r5, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x16
	bls _0803B6D0
	movs r4, #0x16
_0803B6D0:
	mov r0, sp
	adds r1, r5, #0
	adds r2, r4, #0
	bl memcpy
	mov r0, sp
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #3
	adds r0, r0, r7
	adds r0, #8
	mov r1, sp
	bl strcpy
	add sp, #0x18
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0803B6FC
func_0803B6FC: @ 0x0803B6FC
	push {r4, lr}
	ldr r3, _0803B714 @ =vtable_unk_080E7748
	str r3, [r0]
	ldr r4, [r1]
	movs r3, #0
	str r3, [r1]
	str r4, [r0, #4]
	str r2, [r0, #8]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0803B714: .4byte vtable_unk_080E7748

	thumb_func_start func_0803B718
func_0803B718: @ 0x0803B718
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r7, r0, #0
	adds r4, r1, #0
	movs r0, #0xe9
	lsls r0, r0, #2
	bl __builtin_new
	adds r5, r0, #0
	ldr r0, [r4, #4]
	movs r6, #0
	str r6, [r4, #4]
	str r0, [sp, #4]
	ldr r4, [r4, #8]
	ldr r0, _0803B828 @ =0x080E59CC
	str r0, [r5]
	ldr r0, _0803B82C @ =vtable_unk_080E7738
	adds r1, r5, #0
	stm r1!, {r0}
	adds r0, r1, #0
	bl func_08008444
	adds r0, r5, #0
	adds r0, #0xc
	bl func_0803EE94
	ldr r0, _0803B830 @ =vtable_unk_080E7708
	str r0, [r5, #8]
	movs r0, #0xd6
	lsls r0, r0, #2
	adds r1, r5, r0
	ldr r0, _0803B834 @ =vtable_unk_080E7714
	str r0, [r1]
	ldr r0, _0803B838 @ =vtable_unk_080E7728
	str r0, [r5]
	movs r0, #0xd7
	lsls r0, r0, #2
	adds r1, r5, r0
	ldr r0, [sp, #4]
	str r6, [sp, #4]
	str r0, [r1]
	movs r1, #0xd8
	lsls r1, r1, #2
	adds r0, r5, r1
	str r4, [r0]
	adds r1, #8
	adds r0, r5, r1
	str r6, [r0]
	adds r1, #4
	adds r0, r5, r1
	str r6, [r0]
	adds r1, #4
	adds r0, r5, r1
	str r6, [r0]
	adds r1, #4
	adds r0, r5, r1
	movs r1, #0
	bl func_08008B54
	movs r1, #0xde
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r1, #1
	bl func_08008B54
	movs r1, #0xdf
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r1, #2
	bl func_08008B54
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r1, #3
	bl func_08008B54
	movs r1, #0xe1
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r1, #4
	bl func_08008B54
	movs r1, #0xe2
	lsls r1, r1, #2
	adds r0, r5, r1
	str r6, [r0]
	str r6, [r0, #4]
	adds r1, #8
	adds r0, r5, r1
	str r6, [r0, #4]
	adds r1, #8
	adds r0, r5, r1
	movs r2, #0
	strh r6, [r0]
	adds r1, #4
	adds r0, r5, r1
	str r6, [r0]
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r1, r5, r0
	movs r0, #1
	strb r0, [r1]
	ldr r1, _0803B83C @ =0x000003A1
	adds r0, r5, r1
	strb r2, [r0]
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _0803B7FE
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0803B7FE:
	str r5, [sp]
	mov r0, sp
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	str r6, [r0]
	str r5, [r7]
	ldr r1, [sp]
	cmp r1, #0
	beq _0803B81C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0803B81C:
	adds r0, r7, #0
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0803B828: .4byte 0x080E59CC
_0803B82C: .4byte vtable_unk_080E7738
_0803B830: .4byte vtable_unk_080E7708
_0803B834: .4byte vtable_unk_080E7714
_0803B838: .4byte vtable_unk_080E7728
_0803B83C: .4byte 0x000003A1

	thumb_func_start func_0803B840
func_0803B840: @ 0x0803B840
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	ldrh r2, [r4, #0x1c]
	lsls r2, r2, #0x11
	lsrs r2, r2, #0x16
	adds r2, #3
	ldr r1, _0803B8C0 @ =0x000003FF
	adds r0, r1, #0
	ands r2, r0
	ldr r0, [r4, #0x1c]
	lsls r0, r0, #0xd
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0xc
	orrs r2, r0
	lsls r0, r2, #0x10
	orrs r2, r0
	ldrb r1, [r4, #0x1c]
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x10
	movs r5, #0xc0
	lsls r5, r5, #0x13
	adds r1, r1, r5
	str r2, [sp, #0xc]
	add r0, sp, #0xc
	ldr r2, _0803B8C4 @ =0x010000A0
	bl func_080D374C
	ldrb r0, [r4, #0x1c]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x10
	adds r0, r0, r5
	ldr r1, [r4, #0xc]
	ldr r3, [r4, #0x14]
	ldr r2, [r4, #0x18]
	str r2, [sp]
	ldrh r2, [r4, #0x1c]
	lsls r2, r2, #0x11
	lsrs r2, r2, #0x16
	str r2, [sp, #4]
	ldr r2, [r4, #0x1c]
	lsls r2, r2, #0xd
	lsrs r2, r2, #0x1c
	str r2, [sp, #8]
	movs r2, #0
	bl func_08051320
	ldr r1, [r4, #0x1c]
	lsls r1, r1, #0xd
	lsrs r1, r1, #0x1c
	ldr r0, _0803B8C8 @ =0x080F9F78
	ldr r0, [r0]
	lsls r1, r1, #5
	movs r2, #0xa0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	movs r2, #8
	bl func_080D374C
	movs r0, #0
	add sp, #0x10
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0803B8C0: .4byte 0x000003FF
_0803B8C4: .4byte 0x010000A0
_0803B8C8: .4byte 0x080F9F78

	thumb_func_start func_0803B8CC
func_0803B8CC: @ 0x0803B8CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov ip, r0
	ldr r0, [sp, #0x2c]
	ldr r5, [sp, #0x30]
	ldr r4, [sp, #0x34]
	ldr r6, [sp, #0x38]
	movs r7, #0
	mov sb, r7
	mov r7, ip
	strh r1, [r7]
	strh r2, [r7, #2]
	strh r3, [r7, #4]
	strh r0, [r7, #6]
	movs r0, #3
	ands r5, r0
	ldrb r0, [r7, #8]
	movs r1, #4
	rsbs r1, r1, #0
	mov r8, r1
	mov r2, r8
	ands r2, r0
	orrs r2, r5
	adds r0, r4, #0
	movs r7, #0x1f
	ands r0, r7
	lsls r0, r0, #2
	subs r1, #0x79
	ands r2, r1
	orrs r2, r0
	mov r8, r2
	mov r0, ip
	strb r2, [r0, #8]
	lsrs r1, r4, #3
	movs r0, #3
	ands r1, r0
	lsls r1, r1, #7
	mov r2, ip
	ldrh r0, [r2, #8]
	ldr r3, _0803BA7C @ =0xFFFFFE7F
	ands r3, r0
	orrs r3, r1
	strh r3, [r2, #8]
	movs r0, #7
	ands r4, r0
	lsls r4, r4, #6
	adds r4, #0x14
	ldr r7, _0803BA80 @ =0x000003FF
	str r7, [sp]
	lsls r4, r4, #9
	ldr r5, [r2, #8]
	ldr r0, _0803BA84 @ =0xFFF801FF
	ands r5, r0
	orrs r5, r4
	str r5, [r2, #8]
	movs r0, #0xf
	ands r6, r0
	lsls r6, r6, #3
	ldrb r0, [r2, #0xa]
	movs r1, #0x79
	rsbs r1, r1, #0
	mov sl, r1
	mov r2, sl
	ands r2, r0
	orrs r2, r6
	mov sl, r2
	mov r6, ip
	strb r2, [r6, #0xa]
	movs r0, #0xff
	ldr r1, [sp, #0x3c]
	ands r1, r0
	lsls r1, r1, #7
	ldrh r2, [r6, #0xa]
	ldr r0, _0803BA88 @ =0xFFFF807F
	ands r0, r2
	orrs r0, r1
	strh r0, [r6, #0xa]
	ldrb r1, [r6, #0xb]
	movs r0, #0x7f
	ands r0, r1
	strb r0, [r6, #0xb]
	ldrb r1, [r6, #0xc]
	movs r0, #0x80
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r6, #0xc]
	movs r7, #0
	strb r7, [r6, #0xd]
	mov r2, ip
	adds r2, #0x10
	mov r0, sb
	str r0, [r6, #0x10]
	str r0, [r2, #4]
	ldr r0, _0803BA8C @ =vtable_unk_080E5BB4
	str r0, [r2, #8]
	adds r1, r2, #0
	adds r1, #0x10
	str r1, [r2, #0xc]
	mov r6, sb
	str r6, [r1, #4]
	ldr r0, _0803BA90 @ =vtable_unk_080E5BD8
	str r0, [r1, #8]
	mov r0, ip
	adds r0, #0x1c
	str r0, [r2, #0x10]
	str r1, [r2, #0x14]
	lsls r3, r3, #0x17
	lsrs r3, r3, #0x1e
	lsls r5, r5, #0xd
	lsrs r7, r5, #0x16
	lsls r3, r3, #9
	adds r2, r3, r7
	ldr r0, _0803BA94 @ =0x080F9F74
	ldr r0, [r0]
	lsrs r5, r0, #5
	movs r4, #0
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _0803B9C4
	movs r4, #1
_0803B9C4:
	mov r1, ip
	adds r1, #0x2c
	ldr r0, _0803BA98 @ =0x080F9F70
	ldr r3, [r0]
	lsls r2, r2, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	mov r6, sb
	mov r0, ip
	str r6, [r0, #0x2c]
	str r6, [r1, #4]
	ldr r0, _0803BA9C @ =vtable_unk_080E7768
	str r0, [r1, #8]
	str r3, [r1, #0xc]
	str r2, [r1, #0x10]
	strb r5, [r1, #0x14]
	strb r4, [r1, #0x15]
	movs r2, #0
	strb r2, [r1, #0x16]
	mov r6, ip
	movs r1, #0
	ldrsh r0, [r6, r1]
	cmp r0, #0
	bge _0803B9F8
	adds r0, #7
_0803B9F8:
	asrs r0, r0, #3
	str r0, [sp, #4]
	mov r2, ip
	movs r0, #2
	ldrsh r6, [r2, r0]
	cmp r6, #0
	bge _0803BA08
	adds r6, #7
_0803BA08:
	asrs r6, r6, #3
	str r6, [sp, #8]
	mov r1, ip
	ldrh r4, [r1, #4]
	lsrs r4, r4, #3
	ldrh r1, [r1, #6]
	lsrs r1, r1, #3
	mov r2, r8
	lsls r3, r2, #0x19
	lsrs r3, r3, #0x1b
	mov r6, sl
	lsls r5, r6, #0x19
	mov r2, ip
	adds r2, #0x44
	mov r0, sb
	mov r6, ip
	str r0, [r6, #0x44]
	str r0, [r2, #4]
	ldr r0, _0803BAA0 @ =vtable_unk_080E7758
	str r0, [r2, #8]
	ldr r0, [sp, #4]
	str r0, [r2, #0xc]
	ldr r6, [sp, #8]
	str r6, [r2, #0x10]
	str r4, [r2, #0x14]
	str r1, [r2, #0x18]
	movs r0, #0x1f
	ands r3, r0
	ldrb r1, [r2, #0x1c]
	subs r0, #0x3f
	ands r0, r1
	orrs r0, r3
	strb r0, [r2, #0x1c]
	ldr r1, [sp]
	ands r7, r1
	lsls r3, r7, #5
	ldrh r1, [r2, #0x1c]
	ldr r0, _0803BAA4 @ =0xFFFF801F
	ands r0, r1
	orrs r0, r3
	strh r0, [r2, #0x1c]
	lsrs r5, r5, #0x1c
	lsls r5, r5, #0xf
	ldr r0, [r2, #0x1c]
	ldr r1, _0803BAA8 @ =0xFFF87FFF
	ands r0, r1
	orrs r0, r5
	str r0, [r2, #0x1c]
	mov r0, ip
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0803BA7C: .4byte 0xFFFFFE7F
_0803BA80: .4byte 0x000003FF
_0803BA84: .4byte 0xFFF801FF
_0803BA88: .4byte 0xFFFF807F
_0803BA8C: .4byte vtable_unk_080E5BB4
_0803BA90: .4byte vtable_unk_080E5BD8
_0803BA94: .4byte 0x080F9F74
_0803BA98: .4byte 0x080F9F70
_0803BA9C: .4byte vtable_unk_080E7768
_0803BAA0: .4byte vtable_unk_080E7758
_0803BAA4: .4byte 0xFFFF801F
_0803BAA8: .4byte 0xFFF87FFF

	thumb_func_start func_0803BAAC
func_0803BAAC: @ 0x0803BAAC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	mov sb, r1
	adds r4, r2, #0
	mov sl, r3
	ldrb r2, [r7, #0xb]
	lsrs r1, r2, #7
	ldrb r0, [r7, #0xc]
	movs r3, #0x7f
	ands r0, r3
	lsls r0, r0, #1
	orrs r0, r1
	cmp r0, #1
	beq _0803BADC
	cmp r0, #1
	ble _0803BB18
	cmp r0, #2
	beq _0803BAFC
	b _0803BB18
_0803BADC:
	ldrb r0, [r7, #0xd]
	cmp r0, #8
	bls _0803BAF8
	movs r0, #0x80
	orrs r0, r2
	strb r0, [r7, #0xb]
	ldrb r1, [r7, #0xc]
	movs r0, #0x80
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	strb r0, [r7, #0xc]
	b _0803BB18
_0803BAF8:
	adds r0, #1
	b _0803BB16
_0803BAFC:
	ldrb r0, [r7, #0xd]
	cmp r0, #0
	bne _0803BB14
	adds r0, r3, #0
	ands r0, r2
	strb r0, [r7, #0xb]
	ldrb r1, [r7, #0xc]
	movs r0, #0x80
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r7, #0xc]
	b _0803BB18
_0803BB14:
	subs r0, #1
_0803BB16:
	strb r0, [r7, #0xd]
_0803BB18:
	adds r3, r7, #0
	adds r3, #0x10
	movs r2, #0
	adds r1, r3, #0
	adds r1, #0x10
	ldr r0, [r3, #0xc]
	cmp r0, r1
	bne _0803BB2A
	movs r2, #1
_0803BB2A:
	cmp r2, #0
	bne _0803BB3A
	ldr r0, [r4, #8]
	ldr r2, [r0, #0x1c]
	adds r0, r4, #0
	adds r1, r3, #0
	bl _call_via_r2
_0803BB3A:
	ldrb r0, [r7, #0xb]
	lsrs r0, r0, #7
	ldrb r1, [r7, #0xc]
	movs r2, #0x7f
	ands r1, r2
	lsls r1, r1, #1
	orrs r1, r0
	cmp r1, #0
	bne _0803BB4E
	b _0803BCA8
_0803BB4E:
	movs r0, #0
	mov r8, r0
	ldrb r4, [r7, #8]
	lsls r2, r4, #0x1e
	lsrs r2, r2, #0x1e
	movs r0, #0x80
	lsls r0, r0, #1
	lsls r0, r2
	movs r3, #0x80
	lsls r3, r3, #6
	adds r1, r3, #0
	orrs r0, r1
	mov r5, sb
	ldrh r1, [r5]
	orrs r0, r1
	strh r0, [r5]
	lsls r3, r2, #1
	lsls r2, r2, #2
	mov r5, sp
	ldrh r1, [r7, #8]
	lsls r1, r1, #0x17
	lsrs r1, r1, #0x1e
	lsls r1, r1, #2
	lsls r0, r4, #0x19
	lsrs r0, r0, #0x1b
	lsls r0, r0, #8
	orrs r1, r0
	movs r0, #0x40
	orrs r1, r0
	strh r1, [r5]
	adds r3, #8
	add r3, sb
	strh r1, [r3]
	mov r0, sp
	mov r1, r8
	strh r1, [r0]
	adds r0, r2, #0
	adds r0, #0x10
	add r0, sb
	strh r1, [r0]
	mov r1, sp
	ldrh r5, [r7, #2]
	rsbs r0, r5, #0
	strh r0, [r1]
	adds r2, #0x12
	add r2, sb
	strh r0, [r2]
	ldrb r6, [r7, #0xd]
	strb r4, [r1, #4]
	cmp r6, #8
	bls _0803BBDC
	mov r3, sp
	ldrh r0, [r7]
	lsls r2, r0, #8
	ldrh r1, [r7, #4]
	adds r0, r0, r1
	orrs r2, r0
	strh r2, [r3]
	mov r0, sb
	adds r0, #0x40
	strh r2, [r0]
	mov r2, sp
	lsls r1, r5, #8
	ldrh r0, [r7, #6]
	adds r0, r5, r0
	orrs r1, r0
	strh r1, [r2]
	mov r0, sb
	adds r0, #0x44
	strh r1, [r0]
	b _0803BC44
_0803BBDC:
	ldrh r4, [r7, #6]
	adds r0, r4, #0
	muls r0, r6, r0
	movs r1, #9
	bl func_080D0EDA
	mov r8, r0
	movs r2, #2
	ldrsh r5, [r7, r2]
	adds r4, r5, r4
	adds r5, r5, r4
	lsrs r0, r5, #0x1f
	adds r5, r5, r0
	asrs r5, r5, #1
	mov r3, r8
	lsrs r0, r3, #0x1f
	add r0, r8
	asrs r0, r0, #1
	subs r5, r5, r0
	ldrh r4, [r7, #4]
	adds r0, r4, #0
	muls r0, r6, r0
	movs r1, #9
	bl func_080D0EDA
	movs r1, #0
	ldrsh r2, [r7, r1]
	adds r4, r2, r4
	adds r2, r2, r4
	lsrs r1, r2, #0x1f
	adds r2, r2, r1
	asrs r2, r2, #1
	lsrs r1, r0, #0x1f
	adds r1, r0, r1
	asrs r1, r1, #1
	subs r2, r2, r1
	mov r3, sp
	lsls r1, r2, #8
	adds r2, r2, r0
	orrs r1, r2
	strh r1, [r3]
	mov r0, sb
	adds r0, #0x40
	strh r1, [r0]
	mov r1, sp
	lsls r0, r5, #8
	add r5, r8
	orrs r0, r5
	strh r0, [r1]
	mov r1, sb
	adds r1, #0x44
	strh r0, [r1]
_0803BC44:
	mov r0, sp
	movs r1, #0x3f
	strh r1, [r0]
	mov r3, sb
	adds r3, #0x48
	strh r1, [r3]
	mov r2, sp
	ldrb r4, [r2, #4]
	lsls r0, r4, #0x1e
	lsrs r0, r0, #0x1e
	movs r4, #1
	lsls r4, r0
	bics r1, r4
	strh r1, [r2]
	mov r0, sb
	adds r0, #0x4a
	strh r1, [r0]
	ldrh r0, [r7, #0xa]
	lsls r0, r0, #0x11
	lsrs r2, r0, #0x18
	cmp r2, #2
	bne _0803BC80
	ldrh r0, [r3]
	movs r1, #0x20
	orrs r0, r1
	strh r0, [r3]
	ldr r0, _0803BCA4 @ =0x08083F40
	orrs r4, r0
	mov r5, sb
	str r4, [r5, #0x50]
_0803BC80:
	cmp r2, #1
	bne _0803BCD8
	adds r3, r7, #0
	adds r3, #0x2c
	ldr r1, [r7, #0x2c]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0803BCD8
	mov r1, sl
	ldr r0, [r1, #8]
	ldr r2, [r0, #0x10]
	mov r0, sl
	adds r1, r3, #0
	bl _call_via_r2
	b _0803BCD8
	.align 2, 0
_0803BCA4: .4byte 0x08083F40
_0803BCA8:
	ldrb r0, [r7, #8]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	movs r1, #0x80
	lsls r1, r1, #1
	lsls r1, r0
	mov r2, sb
	ldrh r0, [r2]
	bics r0, r1
	strh r0, [r2]
	adds r3, r7, #0
	adds r3, #0x2c
	ldr r1, [r7, #0x2c]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0803BCD8
	mov r4, sl
	ldr r0, [r4, #8]
	ldr r2, [r0, #0x14]
	mov r0, sl
	adds r1, r3, #0
	bl _call_via_r2
_0803BCD8:
	ldrb r1, [r7, #0xb]
	lsrs r1, r1, #7
	ldrb r0, [r7, #0xc]
	movs r2, #0x7f
	ands r0, r2
	lsls r0, r0, #1
	orrs r0, r1
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803BCF8
func_0803BCF8: @ 0x0803BCF8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldrb r0, [r4, #0xb]
	lsrs r0, r0, #7
	ldrb r1, [r4, #0xc]
	movs r2, #0x7f
	ands r1, r2
	lsls r5, r1, #1
	orrs r5, r0
	cmp r5, #0
	bne _0803BD32
	ldrh r0, [r4, #0xa]
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x18
	adds r6, r4, #0
	adds r6, #0x10
	cmp r0, #1
	beq _0803BD26
	adds r1, r4, #0
	adds r1, #0x2c
	adds r0, r6, #0
	bl func_08009940
_0803BD26:
	adds r1, r4, #0
	adds r1, #0x44
	adds r0, r6, #0
	bl func_08009940
	strb r5, [r4, #0xd]
_0803BD32:
	ldrb r3, [r4, #0xb]
	lsrs r0, r3, #7
	ldrb r1, [r4, #0xc]
	movs r2, #0x7f
	ands r1, r2
	lsls r1, r1, #1
	orrs r1, r0
	cmp r1, #0
	blt _0803BD58
	cmp r1, #2
	bgt _0803BD58
	movs r0, #0x80
	orrs r0, r3
	strb r0, [r4, #0xb]
	ldrb r1, [r4, #0xc]
	movs r0, #0x80
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r4, #0xc]
_0803BD58:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0803BD60
func_0803BD60: @ 0x0803BD60
	push {r4, lr}
	adds r4, r0, #0
	bl func_0803BCF8
	ldrb r0, [r4, #0xb]
	movs r1, #0x80
	orrs r0, r1
	strb r0, [r4, #0xb]
	ldrb r1, [r4, #0xc]
	movs r0, #0x80
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	strb r0, [r4, #0xc]
	movs r0, #9
	strb r0, [r4, #0xd]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start func_0803BD88
func_0803BD88: @ 0x0803BD88
	push {r4, lr}
	adds r2, r0, #0
	ldrb r3, [r2, #0xb]
	lsrs r1, r3, #7
	ldrb r0, [r2, #0xc]
	movs r4, #0x7f
	ands r0, r4
	lsls r0, r0, #1
	orrs r0, r1
	cmp r0, #0
	beq _0803BDB2
	adds r0, r4, #0
	ands r0, r3
	strb r0, [r2, #0xb]
	ldrb r1, [r2, #0xc]
	movs r0, #0x80
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	strb r0, [r2, #0xc]
_0803BDB2:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start func_0803BDB8
func_0803BDB8: @ 0x0803BDB8
	push {r4, lr}
	adds r2, r0, #0
	ldrb r3, [r2, #0xb]
	lsrs r1, r3, #7
	ldrb r0, [r2, #0xc]
	movs r4, #0x7f
	ands r0, r4
	lsls r0, r0, #1
	orrs r0, r1
	cmp r0, #0
	beq _0803BDDE
	adds r0, r4, #0
	ands r0, r3
	strb r0, [r2, #0xb]
	ldrb r1, [r2, #0xc]
	movs r0, #0x80
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0xc]
_0803BDDE:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start func_0803BDE4
func_0803BDE4: @ 0x0803BDE4
	strh r1, [r0]
	strh r2, [r0, #2]
	bx lr
	.align 2, 0

	thumb_func_start func_0803BDEC
func_0803BDEC: @ 0x0803BDEC
	ldrh r3, [r0]
	adds r3, r3, r1
	strh r3, [r0]
	ldrh r1, [r0, #2]
	adds r1, r1, r2
	strh r1, [r0, #2]
	bx lr
	.align 2, 0

	thumb_func_start func_0803BDFC
func_0803BDFC: @ 0x0803BDFC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r4, r0, #0
	mov r8, r1
	mov sb, r2
	mov sl, r3
	ldr r5, [sp, #0x34]
	ldr r6, [sp, #0x38]
	ldr r7, [sp, #0x3c]
	ldr r0, _0803BE4C @ =vtable_unk_080E7778
	str r0, [r4, #4]
	movs r0, #0x64
	bl __builtin_new
	str r5, [sp]
	str r6, [sp, #4]
	str r7, [sp, #8]
	ldr r1, [sp, #0x40]
	str r1, [sp, #0xc]
	ldr r1, [sp, #0x44]
	str r1, [sp, #0x10]
	mov r1, r8
	mov r2, sb
	mov r3, sl
	bl func_0803B8CC
	str r0, [r4]
	adds r0, r4, #0
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0803BE4C: .4byte vtable_unk_080E7778

	thumb_func_start func_0803BE50
func_0803BE50: @ 0x0803BE50
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r0, _0803BE98 @ =vtable_unk_080E7778
	str r0, [r5, #4]
	ldr r4, [r5]
	cmp r4, #0
	beq _0803BE84
	adds r0, r4, #0
	adds r0, #0x44
	movs r1, #2
	bl func_080098AC
	adds r0, r4, #0
	adds r0, #0x2c
	movs r1, #2
	bl func_080098AC
	adds r0, r4, #0
	adds r0, #0x10
	movs r1, #2
	bl func_080098DC
	adds r0, r4, #0
	bl __builtin_delete
_0803BE84:
	movs r0, #1
	ands r0, r6
	cmp r0, #0
	beq _0803BE92
	adds r0, r5, #0
	bl __builtin_delete
_0803BE92:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0803BE98: .4byte vtable_unk_080E7778

	thumb_func_start func_0803BE9C
func_0803BE9C: @ 0x0803BE9C
	ldr r0, [r0]
	ldrb r2, [r0, #0xb]
	lsrs r2, r2, #7
	ldrb r0, [r0, #0xc]
	movs r1, #0x7f
	ands r0, r1
	lsls r0, r0, #1
	orrs r0, r2
	bx lr
	.align 2, 0

	thumb_func_start func_0803BEB0
func_0803BEB0: @ 0x0803BEB0
	push {lr}
	ldr r0, [r0]
	bl func_0803BAAC
	pop {r1}
	bx r1

	thumb_func_start func_0803BEBC
func_0803BEBC: @ 0x0803BEBC
	push {lr}
	ldr r0, [r0]
	bl func_0803BCF8
	pop {r0}
	bx r0

	thumb_func_start func_0803BEC8
func_0803BEC8: @ 0x0803BEC8
	push {lr}
	ldr r0, [r0]
	bl func_0803BD60
	pop {r0}
	bx r0

	thumb_func_start func_0803BED4
func_0803BED4: @ 0x0803BED4
	push {lr}
	ldr r0, [r0]
	bl func_0803BD88
	pop {r0}
	bx r0

	thumb_func_start func_0803BEE0
func_0803BEE0: @ 0x0803BEE0
	push {lr}
	ldr r0, [r0]
	bl func_0803BDB8
	pop {r0}
	bx r0

	thumb_func_start func_0803BEEC
func_0803BEEC: @ 0x0803BEEC
	ldr r0, [r0]
	movs r1, #0
	ldrsh r0, [r0, r1]
	bx lr

	thumb_func_start func_0803BEF4
func_0803BEF4: @ 0x0803BEF4
	ldr r0, [r0]
	movs r1, #2
	ldrsh r0, [r0, r1]
	bx lr

	thumb_func_start func_0803BEFC
func_0803BEFC: @ 0x0803BEFC
	push {lr}
	ldr r0, [r0]
	bl func_0803BDE4
	pop {r0}
	bx r0

	thumb_func_start func_0803BF08
func_0803BF08: @ 0x0803BF08
	push {lr}
	ldr r0, [r0]
	bl func_0803BDEC
	pop {r0}
	bx r0
_0803BF14:
	.byte 0xF0, 0xB5, 0x05, 0x9C, 0x84, 0x61, 0x06, 0x9E, 0x07, 0x9D, 0x08, 0x9F
	.byte 0x00, 0x24, 0x04, 0x60, 0x44, 0x60, 0x10, 0x4C, 0x84, 0x60, 0xC1, 0x60, 0x02, 0x61, 0x43, 0x61
	.byte 0x1F, 0x21, 0x0E, 0x40, 0x02, 0x7F, 0x20, 0x21, 0x49, 0x42, 0x11, 0x40, 0x31, 0x43, 0x01, 0x77
	.byte 0x0A, 0x4A, 0x11, 0x1C, 0x0D, 0x40, 0x6D, 0x01, 0x82, 0x8B, 0x09, 0x49, 0x11, 0x40, 0x29, 0x43
	.byte 0x81, 0x83, 0x0F, 0x21, 0x0F, 0x40, 0xFB, 0x03, 0xC1, 0x69, 0x06, 0x4A, 0x11, 0x40, 0x19, 0x43
	.byte 0xC1, 0x61, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x58, 0x77, 0x0E, 0x08, 0xFF, 0x03, 0x00, 0x00
	.byte 0x1F, 0x80, 0xFF, 0xFF, 0xFF, 0x7F, 0xF8, 0xFF

	thumb_func_start func_0803BF78
func_0803BF78: @ 0x0803BF78
	push {r4, r5, r6, lr}
	sub sp, #0x14
	adds r4, r0, #0
	ldr r5, [sp, #0x24]
	ldr r6, [sp, #0x28]
	movs r0, #0x18
	str r0, [sp]
	str r1, [sp, #4]
	str r2, [sp, #8]
	str r3, [sp, #0xc]
	str r5, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x88
	movs r3, #0xf0
	bl func_0803BDFC
	ldr r0, _0803BFC0 @ =vtable_unk_080E77A4
	str r0, [r4, #4]
	ldr r0, _0803BFC4 @ =0x0000041C
	bl __builtin_new
	bl func_080E0A94
	str r0, [r4, #8]
	movs r0, #0
	strb r6, [r4, #0xc]
	strb r0, [r4, #0xd]
	movs r0, #1
	strb r0, [r4, #0xe]
	strb r0, [r4, #0xf]
	adds r0, r4, #0
	add sp, #0x14
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0803BFC0: .4byte vtable_unk_080E77A4
_0803BFC4: .4byte 0x0000041C

	thumb_func_start func_0803BFC8
func_0803BFC8: @ 0x0803BFC8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0803BFEC @ =vtable_unk_080E77A4
	str r0, [r4, #4]
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _0803BFDE
	movs r1, #3
	bl func_080E0C38
_0803BFDE:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_0803BE50
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0803BFEC: .4byte vtable_unk_080E77A4
_0803BFF0:
	.byte 0x30, 0xB5, 0x83, 0xB0, 0x06, 0x9C, 0x07, 0x9D, 0x00, 0x94, 0x01, 0x95, 0x00, 0x24, 0x02, 0x94
	.byte 0x00, 0xF0, 0x12, 0xF8, 0x03, 0xB0, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47

	thumb_func_start func_0803C00C
func_0803C00C: @ 0x0803C00C
	push {r4, r5, r6, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x1c]
	ldr r5, [sp, #0x20]
	ldr r6, [sp, #0x24]
	str r4, [sp]
	str r5, [sp, #4]
	str r6, [sp, #8]
	bl func_0803C028
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start func_0803C028
func_0803C028: @ 0x0803C028
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x74
	adds r7, r0, #0
	adds r4, r1, #0
	str r2, [sp, #0x44]
	adds r1, r3, #0
	ldr r3, [sp, #0x98]
	ldr r5, [sp, #0x9c]
	ldr r2, [sp, #0x94]
	bl func_0803BEB0
	str r0, [sp, #0x48]
	cmp r0, #0
	bge _0803C04E
	b _0803C506
_0803C04E:
	cmp r0, #2
	bgt _0803C054
	b _0803C506
_0803C054:
	cmp r0, #3
	beq _0803C05A
	b _0803C506
_0803C05A:
	movs r0, #0
	str r0, [sp, #0x4c]
	ldrb r0, [r7, #0xf]
	cmp r0, #0
	beq _0803C0DC
	ldrh r3, [r4, #8]
	adds r2, r3, #0
	lsls r1, r2, #0x1a
	lsrs r1, r1, #0x1f
	lsls r0, r2, #0x1b
	lsrs r0, r0, #0x1f
	orrs r1, r0
	cmp r1, #0
	beq _0803C0C8
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _0803C08C
	ldrb r0, [r7, #0xc]
	cmp r0, #0
	bne _0803C088
	movs r0, #6
	b _0803C0A4
_0803C088:
	subs r0, #1
	b _0803C0A4
_0803C08C:
	movs r0, #0x10
	ands r2, r0
	cmp r2, #0
	beq _0803C0A6
	ldrb r0, [r7, #0xc]
	cmp r0, #6
	bne _0803C0A2
	add r1, sp, #0x4c
	ldrb r1, [r1]
	strb r1, [r7, #0xc]
	b _0803C0A6
_0803C0A2:
	adds r0, #1
_0803C0A4:
	strb r0, [r7, #0xc]
_0803C0A6:
	cmp r5, #0
	beq _0803C0B2
	adds r0, r5, #0
	movs r1, #0xcb
	bl func_08008B6C
_0803C0B2:
	ldr r0, _0803C0C4 @ =0x080F1A34
	ldrb r1, [r7, #0xc]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	str r1, [sp, #0x4c]
	movs r0, #0x14
	strb r0, [r7, #0xe]
	b _0803C0DC
	.align 2, 0
_0803C0C4: .4byte 0x080F1A34
_0803C0C8:
	movs r0, #1
	ands r3, r0
	cmp r3, #0
	beq _0803C0DC
	cmp r5, #0
	beq _0803C0DC
	adds r0, r5, #0
	movs r1, #0xc5
	bl func_08008B6C
_0803C0DC:
	ldrb r0, [r7, #0xd]
	cmp r0, #0
	beq _0803C142
	ldr r4, [r7, #8]
	ldr r0, [r4, #0x50]
	ldr r1, [r0, #0x20]
	ldr r3, [r1]
	ldrh r2, [r0, #0x2c]
	lsls r2, r2, #2
	ldr r0, [r0, #0x24]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r5, [sp, #0x14]
	adds r0, r4, #0
	adds r0, #0x30
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	add r1, sp, #0x14
	ldr r0, [sp, #0x14]
	movs r3, #0
	cmp r0, #0
	beq _0803C116
	ldrh r3, [r1, #4]
_0803C116:
	adds r1, r4, #0
	adds r1, #0x38
	lsls r0, r2, #5
	ldr r2, _0803C4D0 @ =0x05000200
	adds r0, r0, r2
	str r5, [r1, #0xc]
	str r0, [r1, #0x10]
	str r3, [r1, #0x14]
	ldr r3, [sp, #0x94]
	ldr r0, [r3, #8]
	ldr r2, [r0, #0x10]
	adds r0, r3, #0
	bl _call_via_r2
	ldr r1, _0803C4D4 @ =0x080F1A34
	ldrb r0, [r7, #0xc]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #0x4c]
	movs r0, #0
	strb r0, [r7, #0xd]
_0803C142:
	ldrb r0, [r7, #0xe]
	subs r0, #1
	strb r0, [r7, #0xe]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803C152
	movs r0, #0x28
	strb r0, [r7, #0xe]
_0803C152:
	ldrb r0, [r7, #0xe]
	cmp r0, #0x13
	bhi _0803C24E
	ldr r0, [r7, #8]
	ldrb r1, [r7, #0xc]
	lsls r1, r1, #4
	adds r1, #0x10
	mov r8, r1
	ldr r4, [r0, #0x50]
	adds r0, #0x30
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r6, r4, #0
	mov sb, r0
	adds r5, r6, #0
	adds r5, #0x20
	adds r0, r5, #0
	bl func_0805E8F0
	adds r4, r0, #0
	lsls r4, r4, #0x1e
	lsrs r4, r4, #0x1f
	ldr r1, [r6, #0x20]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r0, [r6, #0x24]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	cmp r4, #0
	beq _0803C1CE
	ldr r4, [sp, #0xc]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl func_08007D4C
	adds r2, r0, #0
	add r1, sp, #0xc
	ldr r0, [sp, #0xc]
	movs r3, #0
	cmp r0, #0
	beq _0803C1B2
	ldrh r3, [r1, #4]
_0803C1B2:
	adds r1, r6, #0
	adds r1, #8
	lsls r0, r2, #5
	ldr r5, _0803C4D8 @ =0x06010000
	adds r0, r0, r5
	str r4, [r1, #0xc]
	str r0, [r1, #0x10]
	str r3, [r1, #0x14]
	ldr r2, [sp, #0x94]
	ldr r0, [r2, #8]
	ldr r2, [r0, #0x10]
	ldr r0, [sp, #0x94]
	bl _call_via_r2
_0803C1CE:
	ldr r0, [sp, #4]
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [sp, #0x24]
	str r1, [sp, #0x28]
	ldr r3, [sp, #0x24]
	lsls r0, r3, #7
	lsrs r0, r0, #0x17
	add r0, r8
	ldr r1, _0803C4DC @ =0x000001FF
	ands r0, r1
	lsls r0, r0, #0x10
	ldr r2, _0803C4E0 @ =0xFE00FFFF
	ands r2, r3
	orrs r2, r0
	str r2, [sp, #0x24]
	add r4, sp, #0x24
	ldrb r0, [r4]
	adds r0, #0x96
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _0803C4E4 @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0x24]
	mov r3, sb
	lsls r1, r3, #0x10
	lsrs r1, r1, #0x10
	movs r0, #0xf
	ands r1, r0
	lsls r1, r1, #0xc
	ldr r2, _0803C4E8 @ =0xFFFF0FFF
	ldr r0, [r4, #4]
	ands r0, r2
	orrs r0, r1
	str r0, [r4, #4]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl func_08007D4C
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0803C4EC @ =0xFFFFFC00
	ldr r1, [r4, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r4, #4]
	movs r0, #0x80
	lsls r0, r0, #5
	ldr r1, [sp, #0x24]
	orrs r1, r0
	str r1, [sp, #0x24]
	ldr r5, [sp, #0x44]
	ldrb r2, [r5]
	cmp r2, #0x7f
	bhi _0803C24E
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r5, r0
	str r1, [r0]
	ldrh r1, [r4, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r5]
_0803C24E:
	ldr r0, [r7, #8]
	mov sl, r0
	movs r1, #0
	mov sb, r1
	mov r2, sp
	adds r2, #0x2c
	str r2, [sp, #0x60]
	ldr r3, [sp, #0x4c]
	rsbs r3, r3, #0
	str r3, [sp, #0x68]
	mov r4, sp
	adds r4, #0x3c
	str r4, [sp, #0x64]
	movs r5, #0x10
	str r5, [sp, #0x6c]
_0803C26C:
	mov r1, sb
	lsls r0, r1, #2
	add r0, sl
	ldr r4, [r0, #0x54]
	mov r0, sl
	adds r0, #0x30
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r6, r4, #0
	mov r8, r0
	adds r5, r6, #0
	adds r5, #0x20
	adds r0, r5, #0
	bl func_0805E8F0
	adds r4, r0, #0
	lsls r4, r4, #0x1e
	lsrs r4, r4, #0x1f
	ldr r1, [r6, #0x20]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r0, [r6, #0x24]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	cmp r4, #0
	beq _0803C2E0
	ldr r4, [sp, #0xc]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl func_08007D4C
	adds r2, r0, #0
	add r1, sp, #0xc
	ldr r0, [sp, #0xc]
	movs r3, #0
	cmp r0, #0
	beq _0803C2C4
	ldrh r3, [r1, #4]
_0803C2C4:
	adds r1, r6, #0
	adds r1, #8
	lsls r0, r2, #5
	ldr r2, _0803C4D8 @ =0x06010000
	adds r0, r0, r2
	str r4, [r1, #0xc]
	str r0, [r1, #0x10]
	str r3, [r1, #0x14]
	ldr r3, [sp, #0x94]
	ldr r0, [r3, #8]
	ldr r2, [r0, #0x10]
	adds r0, r3, #0
	bl _call_via_r2
_0803C2E0:
	ldr r0, [sp, #4]
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [sp, #0x2c]
	str r1, [sp, #0x30]
	ldr r3, [sp, #0x2c]
	lsls r0, r3, #7
	lsrs r0, r0, #0x17
	ldr r4, [sp, #0x6c]
	adds r0, r0, r4
	ldr r1, _0803C4DC @ =0x000001FF
	ands r0, r1
	lsls r0, r0, #0x10
	ldr r2, _0803C4E0 @ =0xFE00FFFF
	ands r2, r3
	orrs r2, r0
	str r2, [sp, #0x2c]
	ldr r5, [sp, #0x60]
	ldrb r1, [r5]
	adds r1, #0x96
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r0, _0803C4E4 @ =0xFFFFFF00
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x2c]
	mov r0, r8
	lsls r1, r0, #0x10
	lsrs r1, r1, #0x10
	movs r2, #0xf
	ands r1, r2
	lsls r1, r1, #0xc
	add r4, sp, #0x2c
	ldr r0, [r4, #4]
	ldr r3, _0803C4E8 @ =0xFFFF0FFF
	ands r0, r3
	orrs r0, r1
	str r0, [r4, #4]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl func_08007D4C
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0803C4EC @ =0xFFFFFC00
	ldr r1, [r4, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r4, #4]
	ldr r1, [sp, #0x2c]
	movs r5, #0x80
	lsls r5, r5, #5
	orrs r1, r5
	str r1, [sp, #0x2c]
	ldr r0, [sp, #0x44]
	ldrb r2, [r0]
	cmp r2, #0x7f
	bhi _0803C366
	lsls r0, r2, #3
	adds r0, #4
	ldr r3, [sp, #0x44]
	adds r0, r3, r0
	str r1, [r0]
	ldrh r1, [r4, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r3]
_0803C366:
	ldr r4, [sp, #0x6c]
	adds r4, #0x10
	str r4, [sp, #0x6c]
	movs r5, #1
	add sb, r5
	mov r0, sb
	cmp r0, #6
	bhi _0803C378
	b _0803C26C
_0803C378:
	ldr r7, [r7, #8]
	mov r8, r7
	ldr r1, [sp, #0x4c]
	cmp r1, #0
	beq _0803C3B0
	add r0, sp, #0x34
	movs r4, #0xc
	movs r5, #2
	strh r4, [r0]
	strh r5, [r0, #2]
	ldr r0, [sp, #0x34]
	mov r6, r8
	adds r6, #0x74
	adds r1, r6, #0
	movs r2, #0
	bl func_0804E7A0
	add r0, sp, #0x38
	strh r4, [r0]
	strh r5, [r0, #2]
	ldr r0, [sp, #0x38]
	ldr r2, [sp, #0x4c]
	str r2, [sp]
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
_0803C3B0:
	mov r0, r8
	adds r0, #0x30
	ldr r1, [r0, #4]
	bl func_080074C0
	ldr r3, [sp, #0x68]
	ldr r4, [sp, #0x4c]
	orrs r3, r4
	mov r5, r8
	adds r5, #0x70
	str r5, [sp, #0x50]
	lsrs r1, r3, #0x1f
	str r1, [sp, #0x54]
	movs r1, #0
	movs r2, #0
	str r1, [sp, #0x3c]
	str r2, [sp, #0x40]
	ldr r2, _0803C4F0 @ =0x3FFFFFFF
	ldr r1, [sp, #0x3c]
	ands r1, r2
	movs r2, #0x80
	lsls r2, r2, #0x18
	orrs r1, r2
	ldr r2, _0803C4F4 @ =0xFFFF3FFF
	ands r1, r2
	movs r2, #0x80
	lsls r2, r2, #7
	orrs r1, r2
	str r1, [sp, #0x3c]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r2, #0xf
	ands r0, r2
	lsls r0, r0, #0xc
	ldr r3, [sp, #0x64]
	ldr r1, [r3, #4]
	ldr r4, _0803C4E8 @ =0xFFFF0FFF
	ands r1, r4
	orrs r1, r0
	str r1, [r3, #4]
	ldr r0, [sp, #0x3c]
	ldr r5, _0803C4E4 @ =0xFFFFFF00
	ands r0, r5
	movs r1, #0x8e
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [sp, #0x3c]
	movs r4, #0
	mov r2, r8
	adds r2, #0x74
	str r2, [sp, #0x58]
_0803C41A:
	lsls r0, r4, #3
	ldr r3, [sp, #0x50]
	adds r0, r0, r3
	movs r5, #0xc1
	lsls r5, r5, #2
	adds r0, r0, r5
	ldr r1, [r0, #4]
	bl func_08007D4C
	mov r8, r0
	lsls r0, r4, #5
	mov sl, r0
	adds r1, r4, #1
	str r1, [sp, #0x5c]
	ldr r2, [sp, #0x54]
	cmp r2, #0
	beq _0803C498
	movs r3, #0
	lsls r2, r4, #1
	lsls r1, r4, #2
	movs r4, #0x80
	mov sb, r4
	adds r1, r1, r2
	lsls r1, r1, #3
	ldr r5, [sp, #0x50]
	movs r4, #0xca
	lsls r4, r4, #2
	adds r0, r5, r4
	adds r4, r1, r0
	mov r5, r8
	lsls r0, r5, #5
	ldr r5, _0803C4D8 @ =0x06010000
	adds r7, r0, r5
	lsls r2, r2, #6
	ldr r0, [sp, #0x58]
	adds r6, r2, r0
	ldr r2, [sp, #0x50]
	movs r5, #0xc7
	lsls r5, r5, #2
	adds r0, r2, r5
	adds r5, r1, r0
_0803C46C:
	str r6, [r4]
	str r7, [r4, #4]
	mov r0, sb
	str r0, [r4, #8]
	ldr r1, [sp, #0x94]
	ldr r0, [r1, #8]
	ldr r2, [r0, #0x10]
	adds r0, r1, #0
	adds r1, r5, #0
	str r3, [sp, #0x70]
	bl _call_via_r2
	adds r4, #0x18
	adds r7, #0x80
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r6, r6, r2
	adds r5, #0x18
	ldr r3, [sp, #0x70]
	adds r3, #1
	cmp r3, #1
	bls _0803C46C
_0803C498:
	mov r3, r8
	lsls r1, r3, #0x16
	lsrs r1, r1, #0x16
	ldr r2, _0803C4EC @ =0xFFFFFC00
	ldr r4, [sp, #0x64]
	ldr r0, [r4, #4]
	ands r0, r2
	orrs r0, r1
	str r0, [r4, #4]
	mov r1, sl
	adds r1, #0x88
	ldr r0, _0803C4DC @ =0x000001FF
	ands r1, r0
	lsls r1, r1, #0x10
	ldr r0, _0803C4E0 @ =0xFE00FFFF
	ldr r2, [sp, #0x3c]
	ands r2, r0
	orrs r2, r1
	str r2, [sp, #0x3c]
	ldr r5, [sp, #0x44]
	ldrb r3, [r5]
	cmp r3, #0x7f
	bhi _0803C500
	lsls r0, r3, #3
	adds r0, #4
	adds r0, r5, r0
	str r2, [r0]
	b _0803C4F8
	.align 2, 0
_0803C4D0: .4byte 0x05000200
_0803C4D4: .4byte 0x080F1A34
_0803C4D8: .4byte 0x06010000
_0803C4DC: .4byte 0x000001FF
_0803C4E0: .4byte 0xFE00FFFF
_0803C4E4: .4byte 0xFFFFFF00
_0803C4E8: .4byte 0xFFFF0FFF
_0803C4EC: .4byte 0xFFFFFC00
_0803C4F0: .4byte 0x3FFFFFFF
_0803C4F4: .4byte 0xFFFF3FFF
_0803C4F8:
	ldrh r1, [r4, #4]
	strh r1, [r0, #4]
	adds r0, r3, #1
	strb r0, [r5]
_0803C500:
	ldr r4, [sp, #0x5c]
	cmp r4, #2
	bls _0803C41A
_0803C506:
	ldr r0, [sp, #0x48]
	add sp, #0x74
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0803C518
func_0803C518: @ 0x0803C518
	push {r4, lr}
	adds r4, r0, #0
	bl func_0803BEBC
	movs r0, #1
	strb r0, [r4, #0xd]
	strb r0, [r4, #0xf]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start func_0803C52C
func_0803C52C: @ 0x0803C52C
	push {r4, lr}
	adds r4, r0, #0
	bl func_0803BEC8
	movs r0, #1
	strb r0, [r4, #0xd]
	strb r0, [r4, #0xf]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start func_0803C540
func_0803C540: @ 0x0803C540
	ldrb r0, [r0, #0xc]
	bx lr

	thumb_func_start func_0803C544
func_0803C544: @ 0x0803C544
	movs r1, #0
	strb r1, [r0, #0xf]
	bx lr
	.align 2, 0

	thumb_func_start func_0803C54C
func_0803C54C: @ 0x0803C54C
	push {r4, r5, lr}
	sub sp, #0x14
	adds r4, r0, #0
	ldr r5, [sp, #0x20]
	movs r0, #0x18
	str r0, [sp]
	str r1, [sp, #4]
	str r2, [sp, #8]
	str r3, [sp, #0xc]
	str r5, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #0x80
	movs r2, #0x88
	movs r3, #0x70
	bl func_0803BDFC
	ldr r0, _0803C584 @ =vtable_unk_080E77E0
	str r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #8
	bl func_0803C5B0
	adds r0, r4, #0
	add sp, #0x14
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0803C584: .4byte vtable_unk_080E77E0

	thumb_func_start func_0803C588
func_0803C588: @ 0x0803C588
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0803C5AC @ =vtable_unk_080E77E0
	str r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #8
	movs r1, #2
	bl func_0803C7A0
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_0803BE50
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0803C5AC: .4byte vtable_unk_080E77E0

	thumb_func_start func_0803C5B0
func_0803C5B0: @ 0x0803C5B0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	str r0, [sp, #0x20]
	movs r0, #0xd7
	lsls r0, r0, #2
	bl __builtin_new
	adds r7, r0, #0
	ldr r1, _0803C78C @ =0x0875B444
	bl func_0805E6CC
	adds r0, r7, #0
	adds r0, #0x30
	ldr r1, _0803C790 @ =0x086678A0
	bl func_0805E6CC
	adds r4, r7, #0
	adds r4, #0x60
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	adds r0, r7, #0
	adds r0, #0x68
	movs r4, #0
	str r4, [r7, #0x68]
	str r4, [r0, #4]
	ldr r1, _0803C794 @ =vtable_unk_080E77D0
	mov r8, r1
	str r1, [r0, #8]
	str r4, [r0, #0xc]
	str r4, [r0, #0x10]
	str r4, [r0, #0x14]
	adds r0, #0x18
	movs r6, #1
	strb r6, [r0]
	movs r2, #0xc2
	lsls r2, r2, #1
	adds r5, r7, r2
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #3
	bl func_08007B54
	str r0, [r5, #4]
	movs r0, #0xc6
	lsls r0, r0, #1
	adds r0, r0, r7
	mov sl, r0
	strb r6, [r0]
	movs r1, #0xc8
	lsls r1, r1, #1
	adds r0, r7, r1
	str r4, [r0]
	str r4, [r0, #4]
	mov r2, r8
	str r2, [r0, #8]
	str r4, [r0, #0xc]
	str r4, [r0, #0x10]
	str r4, [r0, #0x14]
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r5, r7, r0
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #3
	bl func_08007B54
	str r0, [r5, #4]
	movs r1, #0xac
	lsls r1, r1, #2
	adds r1, r1, r7
	mov sb, r1
	strb r6, [r1]
	movs r2, #0xad
	lsls r2, r2, #2
	adds r0, r7, r2
	str r4, [r0]
	str r4, [r0, #4]
	mov r1, r8
	str r1, [r0, #8]
	str r4, [r0, #0xc]
	str r4, [r0, #0x10]
	str r4, [r0, #0x14]
	adds r2, #0x18
	adds r0, r7, r2
	strb r4, [r0]
	movs r0, #0xb4
	lsls r0, r0, #2
	adds r5, r7, r0
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r5, #4]
	movs r1, #0xb6
	lsls r1, r1, #2
	adds r0, r7, r1
	str r4, [r0]
	str r4, [r0, #4]
	mov r2, r8
	str r2, [r0, #8]
	str r4, [r0, #0xc]
	str r4, [r0, #0x10]
	str r4, [r0, #0x14]
	adds r1, #0x18
	adds r0, r7, r1
	strb r6, [r0]
	ldr r2, _0803C798 @ =0x000002F1
	adds r0, r7, r2
	strb r4, [r0]
	movs r0, #0xbd
	lsls r0, r0, #2
	adds r5, r7, r0
	adds r0, r5, #0
	bl func_08007128
	adds r0, r5, #0
	bl func_0800736C
	str r0, [r5, #4]
	movs r1, #0xbf
	lsls r1, r1, #2
	adds r0, r7, r1
	str r4, [r0]
	str r4, [r0, #4]
	mov r2, r8
	str r2, [r0, #8]
	str r4, [r0, #0xc]
	str r4, [r0, #0x10]
	str r4, [r0, #0x14]
	movs r0, #0xc5
	lsls r0, r0, #2
	adds r5, r7, r0
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r5, #4]
	movs r1, #0xc7
	lsls r1, r1, #2
	adds r0, r7, r1
	str r4, [r0]
	str r4, [r0, #4]
	mov r2, r8
	str r2, [r0, #8]
	str r4, [r0, #0xc]
	str r4, [r0, #0x10]
	str r4, [r0, #0x14]
	adds r1, #0x18
	adds r0, r7, r1
	strb r6, [r0]
	movs r2, #0xce
	lsls r2, r2, #2
	adds r5, r7, r2
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r5, #4]
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	str r4, [r0]
	str r4, [r0, #4]
	mov r2, r8
	str r2, [r0, #8]
	str r4, [r0, #0xc]
	str r4, [r0, #0x10]
	str r4, [r0, #0x14]
	adds r1, #0x18
	adds r0, r7, r1
	strb r6, [r0]
	ldr r1, _0803C79C @ =0x0875A440
	movs r2, #0xe8
	lsls r2, r2, #2
	adds r1, r1, r2
	movs r2, #0x92
	lsls r2, r2, #1
	adds r0, r7, r2
	movs r2, #0x20
	bl memcpy
	mov r0, sl
	strb r6, [r0]
	mov r0, sp
	movs r1, #0
	movs r2, #0x20
	bl memset
	movs r1, #0xa2
	lsls r1, r1, #2
	adds r0, r7, r1
	mov r1, sp
	movs r2, #0x20
	bl memcpy
	mov r2, sb
	strb r6, [r2]
	movs r1, #0x82
	lsls r1, r1, #2
	adds r0, r7, r1
	mov r1, sp
	movs r2, #0x20
	bl memcpy
	mov r2, sb
	strb r6, [r2]
	ldr r0, [sp, #0x20]
	str r7, [r0]
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0803C78C: .4byte 0x0875B444
_0803C790: .4byte 0x086678A0
_0803C794: .4byte vtable_unk_080E77D0
_0803C798: .4byte 0x000002F1
_0803C79C: .4byte 0x0875A440

	thumb_func_start func_0803C7A0
func_0803C7A0: @ 0x0803C7A0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _0803C7B2
	movs r1, #3
	bl func_080E0D70
_0803C7B2:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _0803C7C0
	adds r0, r4, #0
	bl __builtin_delete
_0803C7C0:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0803C7C8
func_0803C7C8: @ 0x0803C7C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x6c
	mov sb, r1
	mov sl, r2
	mov r8, r3
	ldr r6, [r0]
	adds r2, r6, #0
	adds r2, #0x60
	ldr r1, [r2, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0803C7EC
	b _0803CD28
_0803C7EC:
	adds r0, r2, #0
	bl func_080074C0
	str r0, [sp, #0x58]
	adds r7, r6, #0
	adds r7, #0x80
	ldrb r0, [r7]
	cmp r0, #0
	beq _0803C83A
	adds r4, r6, #0
	adds r4, #0x68
	ldr r1, [r6, #0x68]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r5, r0, #0x1f
	cmp r5, #0
	bne _0803C83A
	mov r0, sp
	adds r1, r6, #0
	movs r2, #0
	bl func_0805E790
	ldr r2, [sp, #0x10]
	ldr r1, [sp, #0x58]
	lsls r0, r1, #5
	ldr r1, _0803CBC8 @ =0x05000200
	adds r0, r0, r1
	movs r1, #0x20
	str r2, [r4, #0xc]
	str r0, [r4, #0x10]
	str r1, [r4, #0x14]
	ldr r2, [sp, #0x8c]
	ldr r0, [r2, #8]
	ldr r2, [r0, #0x10]
	ldr r0, [sp, #0x8c]
	adds r1, r4, #0
	bl _call_via_r2
	strb r5, [r7]
_0803C83A:
	mov r0, sb
	adds r0, #4
	str r0, [sp, #0x5c]
	mov r1, sl
	adds r1, #4
	str r1, [sp, #0x60]
	adds r7, r6, #0
	adds r7, #0x84
	movs r0, #0xc2
	lsls r0, r0, #1
	adds r2, r6, r0
	ldr r1, [r2, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0803C922
	adds r0, r2, #0
	bl func_08007D4C
	mov sb, r0
	movs r1, #0xc6
	lsls r1, r1, #1
	adds r5, r6, r1
	ldrb r0, [r5]
	cmp r0, #0
	beq _0803C8A2
	movs r2, #0xc8
	lsls r2, r2, #1
	adds r3, r6, r2
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r4, r0, #0x1f
	cmp r4, #0
	bne _0803C8A2
	mov r1, sb
	lsls r0, r1, #5
	ldr r2, _0803CBCC @ =0x06010000
	adds r0, r0, r2
	movs r1, #0x80
	lsls r1, r1, #1
	str r7, [r3, #0xc]
	str r0, [r3, #0x10]
	str r1, [r3, #0x14]
	ldr r1, [sp, #0x8c]
	ldr r0, [r1, #8]
	ldr r2, [r0, #0x10]
	adds r0, r1, #0
	adds r1, r3, #0
	bl _call_via_r2
	strb r4, [r5]
_0803C8A2:
	movs r0, #0
	movs r1, #0
	str r0, [sp, #0x20]
	str r1, [sp, #0x24]
	movs r1, #0x80
	lsls r1, r1, #5
	ldr r0, [sp, #0x20]
	orrs r0, r1
	ldr r1, _0803CBD0 @ =0xFFFF3FFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #7
	orrs r0, r1
	ldr r1, _0803CBD4 @ =0x3FFFFFFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x18
	orrs r0, r1
	ldr r2, [sp, #0x60]
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _0803CBD8 @ =0xFFFFFF00
	ands r0, r2
	orrs r0, r1
	ldr r1, _0803CBDC @ =0x000001FF
	ldr r2, [sp, #0x5c]
	ands r1, r2
	lsls r1, r1, #0x10
	ldr r2, _0803CBE0 @ =0xFE00FFFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x20]
	mov r1, sb
	lsls r0, r1, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0803CBE4 @ =0xFFFFFC00
	add r3, sp, #0x20
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	ldr r2, [sp, #0x58]
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	movs r2, #0xf
	ands r0, r2
	lsls r0, r0, #0xc
	ldr r2, _0803CBE8 @ =0xFFFF0FFF
	ands r1, r2
	orrs r1, r0
	str r1, [r3, #4]
	mov r0, r8
	ldrb r2, [r0]
	cmp r2, #0x7f
	bhi _0803C922
	lsls r0, r2, #3
	adds r0, #4
	add r0, r8
	ldr r1, [sp, #0x20]
	str r1, [r0]
	ldrh r1, [r3, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	mov r1, r8
	strb r0, [r1]
_0803C922:
	movs r2, #0xd4
	lsls r2, r2, #1
	adds r2, r2, r6
	mov sb, r2
	ldr r5, [sp, #0x5c]
	adds r5, #0x20
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r2, r6, r0
	ldr r1, [r2, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0803CA06
	adds r0, r2, #0
	bl func_08007D4C
	mov sl, r0
	movs r1, #0xac
	lsls r1, r1, #2
	adds r7, r6, r1
	ldrb r0, [r7]
	cmp r0, #0
	beq _0803C988
	movs r2, #0xad
	lsls r2, r2, #2
	adds r3, r6, r2
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r4, r0, #0x1f
	cmp r4, #0
	bne _0803C988
	mov r1, sl
	lsls r0, r1, #5
	ldr r2, _0803CBCC @ =0x06010000
	adds r0, r0, r2
	movs r1, #0x80
	lsls r1, r1, #1
	mov r2, sb
	str r2, [r3, #0xc]
	str r0, [r3, #0x10]
	str r1, [r3, #0x14]
	ldr r1, [sp, #0x8c]
	ldr r0, [r1, #8]
	ldr r2, [r0, #0x10]
	adds r0, r1, #0
	adds r1, r3, #0
	bl _call_via_r2
	strb r4, [r7]
_0803C988:
	movs r0, #0
	movs r1, #0
	str r0, [sp, #0x28]
	str r1, [sp, #0x2c]
	movs r1, #0x80
	lsls r1, r1, #5
	ldr r0, [sp, #0x28]
	orrs r0, r1
	ldr r1, _0803CBD0 @ =0xFFFF3FFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #7
	orrs r0, r1
	ldr r1, _0803CBD4 @ =0x3FFFFFFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x18
	orrs r0, r1
	ldr r2, [sp, #0x60]
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _0803CBD8 @ =0xFFFFFF00
	ands r0, r2
	orrs r0, r1
	ldr r1, _0803CBDC @ =0x000001FF
	ands r5, r1
	lsls r2, r5, #0x10
	ldr r1, _0803CBE0 @ =0xFE00FFFF
	ands r0, r1
	orrs r0, r2
	str r0, [sp, #0x28]
	mov r1, sl
	lsls r0, r1, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0803CBE4 @ =0xFFFFFC00
	add r3, sp, #0x28
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	ldr r2, [sp, #0x58]
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	movs r2, #0xf
	ands r0, r2
	lsls r0, r0, #0xc
	ldr r2, _0803CBE8 @ =0xFFFF0FFF
	ands r1, r2
	orrs r1, r0
	str r1, [r3, #4]
	mov r0, r8
	ldrb r2, [r0]
	cmp r2, #0x7f
	bhi _0803CA06
	lsls r0, r2, #3
	adds r0, #4
	add r0, r8
	ldr r1, [sp, #0x28]
	str r1, [r0]
	ldrh r1, [r3, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	mov r1, r8
	strb r0, [r1]
_0803CA06:
	movs r0, #0
	movs r1, #0
	str r0, [sp, #0x64]
	str r1, [sp, #0x68]
	movs r1, #0x80
	lsls r1, r1, #5
	str r1, [sp, #0x64]
	movs r0, #0x80
	lsls r0, r0, #0x17
	orrs r1, r0
	str r1, [sp, #0x64]
	movs r1, #0xb4
	lsls r1, r1, #2
	adds r2, r6, r1
	ldr r1, [r2, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0803CB02
	adds r0, r2, #0
	bl func_08007D4C
	mov sl, r0
	movs r2, #0xbc
	lsls r2, r2, #2
	adds r2, r2, r6
	mov sb, r2
	ldrb r0, [r2]
	cmp r0, #0
	beq _0803CA9A
	movs r0, #0xb6
	lsls r0, r0, #2
	adds r5, r6, r0
	ldr r1, [r5]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r7, r0, #0x1f
	cmp r7, #0
	bne _0803CA9A
	movs r1, #0xb3
	lsls r1, r1, #2
	adds r0, r6, r1
	ldrb r2, [r0]
	ldr r4, [r6]
	add r0, sp, #0x30
	ldr r3, [r4, #0xc]
	adds r1, r6, #0
	bl _call_via_r3
	ldr r0, [sp, #0x30]
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r4, #0x10]
	adds r1, r6, #0
	bl _call_via_r3
	ldr r2, [sp, #8]
	mov r1, sl
	lsls r0, r1, #5
	ldr r1, _0803CBCC @ =0x06010000
	adds r0, r0, r1
	movs r1, #0x80
	str r2, [r5, #0xc]
	str r0, [r5, #0x10]
	str r1, [r5, #0x14]
	ldr r2, [sp, #0x8c]
	ldr r0, [r2, #8]
	ldr r2, [r0, #0x10]
	ldr r0, [sp, #0x8c]
	adds r1, r5, #0
	bl _call_via_r2
	mov r0, sb
	strb r7, [r0]
_0803CA9A:
	ldr r1, [sp, #0x64]
	ldr r2, [sp, #0x68]
	str r1, [sp, #0x38]
	str r2, [sp, #0x3c]
	ldr r2, [sp, #0x60]
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _0803CBD8 @ =0xFFFFFF00
	ldr r0, [sp, #0x38]
	ands r0, r2
	orrs r0, r1
	ldr r1, [sp, #0x5c]
	adds r1, #0x40
	ldr r2, _0803CBDC @ =0x000001FF
	ands r1, r2
	lsls r1, r1, #0x10
	ldr r2, _0803CBE0 @ =0xFE00FFFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x38]
	mov r1, sl
	lsls r0, r1, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0803CBE4 @ =0xFFFFFC00
	add r3, sp, #0x38
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	ldr r2, [sp, #0x58]
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	movs r2, #0xf
	ands r0, r2
	lsls r0, r0, #0xc
	ldr r2, _0803CBE8 @ =0xFFFF0FFF
	ands r1, r2
	orrs r1, r0
	str r1, [r3, #4]
	mov r0, r8
	ldrb r2, [r0]
	cmp r2, #0x7f
	bhi _0803CB02
	lsls r0, r2, #3
	adds r0, #4
	add r0, r8
	ldr r1, [sp, #0x38]
	str r1, [r0]
	ldrh r1, [r3, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	mov r1, r8
	strb r0, [r1]
_0803CB02:
	movs r2, #0xc5
	lsls r2, r2, #2
	adds r3, r6, r2
	ldr r1, [r3, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0803CB14
	b _0803CD28
_0803CB14:
	movs r0, #0xbd
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, [r4, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0803CB26
	b _0803CD28
_0803CB26:
	ldr r1, [sp, #0x64]
	ldr r2, [sp, #0x68]
	str r1, [sp, #0x48]
	str r2, [sp, #0x4c]
	ldr r2, [sp, #0x60]
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _0803CBD8 @ =0xFFFFFF00
	ldr r0, [sp, #0x48]
	ands r0, r2
	orrs r0, r1
	ldr r1, [sp, #0x5c]
	adds r1, #0x58
	ldr r2, _0803CBDC @ =0x000001FF
	ands r1, r2
	lsls r1, r1, #0x10
	ldr r2, _0803CBE0 @ =0xFE00FFFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x48]
	ldr r1, _0803CBEC @ =0x000002F1
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0803CB5A
	b _0803CC72
_0803CB5A:
	ldr r1, [r3, #4]
	adds r0, r3, #0
	bl func_08007D4C
	mov sb, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	mov sl, r0
	movs r2, #0xcd
	lsls r2, r2, #2
	adds r7, r6, r2
	ldrb r0, [r7]
	cmp r0, #0
	beq _0803CC32
	ldr r1, _0803CBF0 @ =0x000002F2
	adds r0, r6, r1
	ldrh r2, [r0]
	adds r5, r6, #0
	adds r5, #0x30
	ldr r4, [r6, #0x30]
	add r0, sp, #0x40
	ldr r3, [r4, #0xc]
	adds r1, r5, #0
	bl _call_via_r3
	ldr r0, [sp, #0x40]
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r4, #0x10]
	adds r1, r5, #0
	bl _call_via_r3
	movs r2, #0xc7
	lsls r2, r2, #2
	adds r3, r6, r2
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0803CBFE
	ldr r2, [sp, #8]
	mov r1, sb
	lsls r0, r1, #5
	ldr r1, _0803CBCC @ =0x06010000
	adds r0, r0, r1
	movs r1, #0x80
	str r2, [r3, #0xc]
	str r0, [r3, #0x10]
	str r1, [r3, #0x14]
	ldr r2, [sp, #0x8c]
	ldr r0, [r2, #8]
	b _0803CBF4
	.align 2, 0
_0803CBC8: .4byte 0x05000200
_0803CBCC: .4byte 0x06010000
_0803CBD0: .4byte 0xFFFF3FFF
_0803CBD4: .4byte 0x3FFFFFFF
_0803CBD8: .4byte 0xFFFFFF00
_0803CBDC: .4byte 0x000001FF
_0803CBE0: .4byte 0xFE00FFFF
_0803CBE4: .4byte 0xFFFFFC00
_0803CBE8: .4byte 0xFFFF0FFF
_0803CBEC: .4byte 0x000002F1
_0803CBF0: .4byte 0x000002F2
_0803CBF4:
	ldr r2, [r0, #0x10]
	ldr r0, [sp, #0x8c]
	adds r1, r3, #0
	bl _call_via_r2
_0803CBFE:
	movs r0, #0xbf
	lsls r0, r0, #2
	adds r3, r6, r0
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0803CC2E
	ldr r2, [sp, #0x10]
	mov r1, sl
	lsls r0, r1, #5
	ldr r1, _0803CD38 @ =0x05000200
	adds r0, r0, r1
	movs r1, #0x20
	str r2, [r3, #0xc]
	str r0, [r3, #0x10]
	str r1, [r3, #0x14]
	ldr r2, [sp, #0x8c]
	ldr r0, [r2, #8]
	ldr r2, [r0, #0x10]
	ldr r0, [sp, #0x8c]
	adds r1, r3, #0
	bl _call_via_r2
_0803CC2E:
	movs r0, #0
	strb r0, [r7]
_0803CC32:
	mov r1, sb
	lsls r0, r1, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0803CD3C @ =0xFFFFFC00
	add r3, sp, #0x48
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	mov r2, sl
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	movs r2, #0xf
	ands r0, r2
	lsls r0, r0, #0xc
	ldr r2, _0803CD40 @ =0xFFFF0FFF
	ands r1, r2
	orrs r1, r0
	str r1, [r3, #4]
	mov r0, r8
	ldrb r2, [r0]
	cmp r2, #0x7f
	bhi _0803CC72
	lsls r0, r2, #3
	adds r0, #4
	add r0, r8
	ldr r1, [sp, #0x48]
	str r1, [r0]
	ldrh r1, [r3, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	mov r1, r8
	strb r0, [r1]
_0803CC72:
	movs r0, #0xce
	lsls r0, r0, #2
	adds r2, r6, r0
	ldr r1, [r2, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0803CD28
	adds r0, r2, #0
	bl func_08007D4C
	adds r7, r0, #0
	movs r1, #0xd6
	lsls r1, r1, #2
	adds r1, r1, r6
	mov sl, r1
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803CCEC
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r5, r6, r2
	ldr r1, [r5]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	mov sb, r0
	cmp r0, #0
	bne _0803CCEC
	ldr r4, [r6]
	add r0, sp, #0x50
	ldr r3, [r4, #0xc]
	adds r1, r6, #0
	movs r2, #5
	bl _call_via_r3
	ldr r0, [sp, #0x50]
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r4, #0x10]
	adds r1, r6, #0
	bl _call_via_r3
	ldr r2, [sp, #8]
	lsls r0, r7, #5
	ldr r1, _0803CD44 @ =0x06010000
	adds r0, r0, r1
	movs r1, #0x80
	str r2, [r5, #0xc]
	str r0, [r5, #0x10]
	str r1, [r5, #0x14]
	ldr r2, [sp, #0x8c]
	ldr r0, [r2, #8]
	ldr r2, [r0, #0x10]
	ldr r0, [sp, #0x8c]
	adds r1, r5, #0
	bl _call_via_r2
	mov r1, sb
	mov r0, sl
	strb r1, [r0]
_0803CCEC:
	add r3, sp, #0x48
	ldr r2, _0803CD48 @ =0x000003FF
	adds r0, r2, #0
	ands r7, r0
	ldrh r1, [r3, #4]
	ldr r0, _0803CD3C @ =0xFFFFFC00
	ands r0, r1
	orrs r0, r7
	strh r0, [r3, #4]
	ldr r0, [sp, #0x58]
	lsls r2, r0, #4
	ldrb r1, [r3, #5]
	movs r0, #0xf
	ands r0, r1
	orrs r0, r2
	strb r0, [r3, #5]
	mov r1, r8
	ldrb r2, [r1]
	cmp r2, #0x7f
	bhi _0803CD28
	lsls r0, r2, #3
	adds r0, #4
	add r0, r8
	ldr r1, [sp, #0x48]
	str r1, [r0]
	ldrh r1, [r3, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	mov r2, r8
	strb r0, [r2]
_0803CD28:
	add sp, #0x6c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803CD38: .4byte 0x05000200
_0803CD3C: .4byte 0xFFFFFC00
_0803CD40: .4byte 0xFFFF0FFF
_0803CD44: .4byte 0x06010000
_0803CD48: .4byte 0x000003FF

	thumb_func_start func_0803CD4C
func_0803CD4C: @ 0x0803CD4C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	str r1, [sp, #0x20]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp, #0x24]
	ldr r7, [r0]
	ldrb r0, [r1, #1]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	beq _0803CD7E
	cmp r0, #1
	ble _0803CD78
	cmp r0, #2
	beq _0803CD84
	cmp r0, #3
	beq _0803CD8A
_0803CD78:
	movs r5, #0xb
	movs r6, #0xc
	b _0803CD8E
_0803CD7E:
	movs r5, #0xd
	movs r6, #0xe
	b _0803CD8E
_0803CD84:
	movs r5, #0xf
	movs r6, #0x10
	b _0803CD8E
_0803CD8A:
	movs r5, #0x11
	movs r6, #0x12
_0803CD8E:
	adds r0, r7, #0
	adds r0, #0x84
	lsls r1, r5, #5
	ldr r2, _0803CE30 @ =0x0875A440
	mov sl, r2
	add r1, sl
	movs r2, #0x20
	bl memcpy
	movs r0, #0xc6
	lsls r0, r0, #1
	adds r4, r7, r0
	movs r1, #1
	mov r8, r1
	mov r2, r8
	strb r2, [r4]
	lsls r1, r6, #5
	add r1, sl
	adds r0, r7, #0
	adds r0, #0xa4
	movs r2, #0x20
	bl memcpy
	mov r0, r8
	strb r0, [r4]
	ldr r1, [sp, #0x20]
	ldrb r3, [r1, #1]
	lsls r0, r3, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	adds r5, r0, #0
	ldrb r2, [r1]
	lsls r2, r2, #0x1d
	lsrs r2, r2, #0x1d
	lsls r3, r3, #0x1e
	lsrs r3, r3, #0x1e
	adds r2, #6
	lsls r1, r3, #4
	subs r1, r1, r3
	lsls r1, r1, #1
	lsls r0, r2, #4
	subs r0, r0, r2
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r1, r1, r5
	subs r1, #1
	mov sb, r4
	cmp r1, #6
	bls _0803CDFA
	adds r0, r1, #0
	movs r1, #7
	bl __umodsi3
	adds r1, r0, #0
_0803CDFA:
	movs r0, #7
	adds r6, r0, #0
	ands r6, r1
	adds r0, r5, #0
	movs r1, #0xa
	bl func_080D0EDA
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0xa
	bl __umodsi3
	adds r5, r0, #0
	cmp r4, #0
	ble _0803CE34
	lsls r1, r4, #5
	add r1, sl
	adds r0, r7, #0
	adds r0, #0xc4
	movs r2, #0x20
	bl memcpy
	mov r0, r8
	mov r2, sb
	strb r0, [r2]
	b _0803CE50
	.align 2, 0
_0803CE30: .4byte 0x0875A440
_0803CE34:
	mov r0, sp
	movs r1, #0
	movs r2, #0x20
	bl memset
	adds r0, r7, #0
	adds r0, #0xc4
	mov r1, sp
	movs r2, #0x20
	bl memcpy
	mov r2, r8
	mov r1, sb
	strb r2, [r1]
_0803CE50:
	lsls r1, r5, #5
	ldr r0, _0803CE74 @ =0x0875A440
	adds r1, r1, r0
	adds r0, r7, #0
	adds r0, #0xe4
	movs r2, #0x20
	bl memcpy
	movs r0, #1
	mov r1, sb
	strb r0, [r1]
	cmp r6, #6
	bhi _0803CE98
	lsls r0, r6, #2
	ldr r1, _0803CE78 @ =_0803CE7C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0803CE74: .4byte 0x0875A440
_0803CE78: .4byte _0803CE7C
_0803CE7C: @ jump table
	.4byte _0803CE98 @ case 0
	.4byte _0803CEA4 @ case 1
	.4byte _0803CEB0 @ case 2
	.4byte _0803CEBC @ case 3
	.4byte _0803CEC8 @ case 4
	.4byte _0803CED4 @ case 5
	.4byte _0803CEE0 @ case 6
_0803CE98:
	movs r0, #0x60
	str r0, [sp]
	movs r0, #0x61
	str r0, [sp, #4]
	movs r0, #0x62
	b _0803CEEA
_0803CEA4:
	movs r0, #0x63
	str r0, [sp]
	movs r0, #0x64
	str r0, [sp, #4]
	movs r0, #0x65
	b _0803CEEA
_0803CEB0:
	movs r0, #0x66
	str r0, [sp]
	movs r0, #0x67
	str r0, [sp, #4]
	movs r0, #0x68
	b _0803CEEA
_0803CEBC:
	movs r0, #0x69
	str r0, [sp]
	movs r0, #0x6a
	str r0, [sp, #4]
	movs r0, #0x6b
	b _0803CEEA
_0803CEC8:
	movs r0, #0x6c
	str r0, [sp]
	movs r0, #0x6d
	str r0, [sp, #4]
	movs r0, #0x6e
	b _0803CEEA
_0803CED4:
	movs r0, #0x6f
	str r0, [sp]
	movs r0, #0x70
	str r0, [sp, #4]
	movs r0, #0x71
	b _0803CEEA
_0803CEE0:
	movs r0, #0x72
	str r0, [sp]
	movs r0, #0x73
	str r0, [sp, #4]
	movs r0, #0x74
_0803CEEA:
	str r0, [sp, #8]
	movs r2, #0xd4
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r1, [sp]
	lsls r1, r1, #5
	ldr r2, _0803CF90 @ =0x0875A440
	mov r8, r2
	add r1, r8
	movs r2, #0x20
	bl memcpy
	movs r0, #0xac
	lsls r0, r0, #2
	adds r4, r7, r0
	movs r6, #1
	strb r6, [r4]
	ldr r1, [sp, #4]
	lsls r1, r1, #5
	add r1, r8
	movs r2, #0xe4
	lsls r2, r2, #1
	adds r0, r7, r2
	movs r2, #0x20
	bl memcpy
	strb r6, [r4]
	ldr r1, [sp, #8]
	lsls r1, r1, #5
	add r1, r8
	movs r2, #0xf4
	lsls r2, r2, #1
	adds r0, r7, r2
	movs r2, #0x20
	bl memcpy
	strb r6, [r4]
	ldr r1, [sp, #0x20]
	ldr r0, [r1]
	lsls r0, r0, #0xb
	lsrs r0, r0, #0x1b
	adds r5, r0, #0
	movs r1, #0x1e
	str r4, [sp, #0x2c]
	cmp r5, #0xb
	bhi _0803CF48
	movs r1, #0x1c
_0803CF48:
	lsls r1, r1, #5
	add r1, r8
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r7, r2
	movs r2, #0x20
	bl memcpy
	mov r0, sb
	strb r6, [r0]
	movs r4, #0xc
	cmp r5, #0xc
	beq _0803CF6A
	adds r4, r5, #0
	cmp r4, #0xb
	bls _0803CF6A
	subs r4, #0xc
_0803CF6A:
	adds r0, r4, #0
	movs r1, #0xa
	bl func_080D0EDA
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xa
	bl __umodsi3
	adds r4, r0, #0
	cmp r5, #0
	ble _0803CF94
	lsls r1, r5, #5
	ldr r0, _0803CF90 @ =0x0875A440
	adds r1, r1, r0
	movs r2, #0xa2
	lsls r2, r2, #1
	adds r0, r7, r2
	b _0803CFA6
	.align 2, 0
_0803CF90: .4byte 0x0875A440
_0803CF94:
	mov r0, sp
	movs r1, #0
	movs r2, #0x20
	bl memset
	movs r2, #0xa2
	lsls r2, r2, #1
	adds r0, r7, r2
	mov r1, sp
_0803CFA6:
	movs r2, #0x20
	bl memcpy
	movs r0, #1
	mov r1, sb
	strb r0, [r1]
	lsls r1, r4, #5
	ldr r2, _0803D050 @ =0x0875A440
	mov sl, r2
	add r1, sl
	movs r2, #0xb2
	lsls r2, r2, #1
	adds r0, r7, r2
	movs r2, #0x20
	bl memcpy
	movs r0, #1
	mov r8, r0
	mov r2, r8
	mov r1, sb
	strb r2, [r1]
	ldr r1, [sp, #0x20]
	ldr r0, [r1]
	lsls r0, r0, #5
	lsrs r0, r0, #0x1a
	movs r1, #0xa
	bl func_080D0EDA
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r4, r0, #2
	adds r4, r4, r0
	lsls r4, r4, #1
	adds r0, r4, #0
	movs r1, #0xa
	bl func_080D0EDA
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xa
	bl __umodsi3
	adds r4, r0, #0
	lsls r5, r5, #5
	add r5, sl
	movs r2, #0x8a
	lsls r2, r2, #2
	adds r6, r7, r2
	movs r1, #0x92
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r1, r5, #0
	movs r2, #0x20
	bl memcpy
	mov r0, r8
	ldr r2, [sp, #0x2c]
	strb r0, [r2]
	lsls r4, r4, #5
	add r4, sl
	movs r1, #0x9a
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r0, r8
	ldr r2, [sp, #0x2c]
	strb r0, [r2]
	ldr r1, [sp, #0x24]
	cmp r1, #0
	beq _0803D054
	movs r1, #0xa0
	lsls r1, r1, #1
	add r1, sl
	adds r0, r6, #0
	movs r2, #0x20
	bl memcpy
	mov r0, r8
	ldr r2, [sp, #0x2c]
	strb r0, [r2]
	b _0803D06E
	.align 2, 0
_0803D050: .4byte 0x0875A440
_0803D054:
	mov r0, sp
	movs r1, #0
	movs r2, #0x20
	bl memset
	adds r0, r6, #0
	mov r1, sp
	movs r2, #0x20
	bl memcpy
	mov r2, r8
	ldr r1, [sp, #0x2c]
	strb r2, [r1]
_0803D06E:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0803D080
func_0803D080: @ 0x0803D080
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r7, [r0]
	cmp r1, #1
	beq _0803D09E
	cmp r1, #1
	ble _0803D096
	cmp r1, #2
	beq _0803D0A6
	cmp r1, #3
	beq _0803D0AE
_0803D096:
	movs r0, #0xb
	str r0, [sp]
	movs r2, #0xc
	b _0803D0B4
_0803D09E:
	movs r0, #0xd
	str r0, [sp]
	movs r2, #0xe
	b _0803D0B4
_0803D0A6:
	movs r0, #0xf
	str r0, [sp]
	movs r2, #0x10
	b _0803D0B4
_0803D0AE:
	movs r0, #0x11
	str r0, [sp]
	movs r2, #0x12
_0803D0B4:
	str r2, [sp, #4]
	adds r0, r7, #0
	adds r0, #0x84
	ldr r2, [sp]
	lsls r1, r2, #5
	ldr r5, _0803D0EC @ =0x0875A440
	adds r1, r1, r5
	movs r2, #0x20
	bl memcpy
	movs r0, #0xc6
	lsls r0, r0, #1
	adds r6, r7, r0
	movs r4, #1
	strb r4, [r6]
	ldr r2, [sp, #4]
	lsls r1, r2, #5
	adds r1, r1, r5
	adds r0, r7, #0
	adds r0, #0xa4
	movs r2, #0x20
	bl memcpy
	strb r4, [r6]
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D0EC: .4byte 0x0875A440

	thumb_func_start func_0803D0F0
func_0803D0F0: @ 0x0803D0F0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r4, r1, #0
	adds r6, r2, #0
	ldr r7, [r0]
	adds r0, r4, #0
	movs r1, #0xa
	bl func_080D0EDA
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xa
	bl __umodsi3
	adds r4, r0, #0
	cmp r5, #0
	ble _0803D130
	lsls r1, r5, #5
	ldr r0, _0803D12C @ =0x0875A440
	adds r1, r1, r0
	adds r0, r7, #0
	adds r0, #0xc4
	movs r2, #0x20
	bl memcpy
	movs r0, #0xc6
	lsls r0, r0, #1
	adds r1, r7, r0
	b _0803D14C
	.align 2, 0
_0803D12C: .4byte 0x0875A440
_0803D130:
	mov r0, sp
	movs r1, #0
	movs r2, #0x20
	bl memset
	adds r0, r7, #0
	adds r0, #0xc4
	mov r1, sp
	movs r2, #0x20
	bl memcpy
	movs r2, #0xc6
	lsls r2, r2, #1
	adds r1, r7, r2
_0803D14C:
	movs r0, #1
	strb r0, [r1]
	lsls r1, r4, #5
	ldr r0, _0803D178 @ =0x0875A440
	adds r1, r1, r0
	adds r0, r7, #0
	adds r0, #0xe4
	movs r2, #0x20
	bl memcpy
	movs r0, #0xc6
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	cmp r6, #6
	bhi _0803D19C
	lsls r0, r6, #2
	ldr r1, _0803D17C @ =_0803D180
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0803D178: .4byte 0x0875A440
_0803D17C: .4byte _0803D180
_0803D180: @ jump table
	.4byte _0803D19C @ case 0
	.4byte _0803D1A8 @ case 1
	.4byte _0803D1B4 @ case 2
	.4byte _0803D1C0 @ case 3
	.4byte _0803D1CC @ case 4
	.4byte _0803D1D8 @ case 5
	.4byte _0803D1E4 @ case 6
_0803D19C:
	movs r0, #0x60
	str r0, [sp]
	movs r0, #0x61
	str r0, [sp, #4]
	movs r0, #0x62
	b _0803D1EE
_0803D1A8:
	movs r0, #0x63
	str r0, [sp]
	movs r0, #0x64
	str r0, [sp, #4]
	movs r0, #0x65
	b _0803D1EE
_0803D1B4:
	movs r0, #0x66
	str r0, [sp]
	movs r0, #0x67
	str r0, [sp, #4]
	movs r0, #0x68
	b _0803D1EE
_0803D1C0:
	movs r0, #0x69
	str r0, [sp]
	movs r0, #0x6a
	str r0, [sp, #4]
	movs r0, #0x6b
	b _0803D1EE
_0803D1CC:
	movs r0, #0x6c
	str r0, [sp]
	movs r0, #0x6d
	str r0, [sp, #4]
	movs r0, #0x6e
	b _0803D1EE
_0803D1D8:
	movs r0, #0x6f
	str r0, [sp]
	movs r0, #0x70
	str r0, [sp, #4]
	movs r0, #0x71
	b _0803D1EE
_0803D1E4:
	movs r0, #0x72
	str r0, [sp]
	movs r0, #0x73
	str r0, [sp, #4]
	movs r0, #0x74
_0803D1EE:
	str r0, [sp, #8]
	movs r1, #0xd4
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [sp]
	lsls r1, r1, #5
	ldr r5, _0803D23C @ =0x0875A440
	adds r1, r1, r5
	movs r2, #0x20
	bl memcpy
	movs r2, #0xac
	lsls r2, r2, #2
	adds r6, r7, r2
	movs r4, #1
	strb r4, [r6]
	ldr r1, [sp, #4]
	lsls r1, r1, #5
	adds r1, r1, r5
	subs r2, #0xe8
	adds r0, r7, r2
	movs r2, #0x20
	bl memcpy
	strb r4, [r6]
	ldr r1, [sp, #8]
	lsls r1, r1, #5
	adds r1, r1, r5
	movs r2, #0xf4
	lsls r2, r2, #1
	adds r0, r7, r2
	movs r2, #0x20
	bl memcpy
	strb r4, [r6]
	add sp, #0x20
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D23C: .4byte 0x0875A440

	thumb_func_start func_0803D240
func_0803D240: @ 0x0803D240
	push {r4, r5, r6, r7, lr}
	sub sp, #0x20
	adds r5, r1, #0
	ldr r6, [r0]
	movs r1, #0x1e
	cmp r5, #0xb
	bhi _0803D250
	movs r1, #0x1c
_0803D250:
	lsls r1, r1, #5
	ldr r0, _0803D2A4 @ =0x0875A440
	adds r1, r1, r0
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r6, r2
	movs r2, #0x20
	bl memcpy
	movs r0, #0xc6
	lsls r0, r0, #1
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	movs r4, #0xc
	adds r7, r1, #0
	cmp r5, #0xc
	beq _0803D27C
	adds r4, r5, #0
	cmp r4, #0xb
	bls _0803D27C
	subs r4, #0xc
_0803D27C:
	adds r0, r4, #0
	movs r1, #0xa
	bl func_080D0EDA
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0xa
	bl __umodsi3
	adds r4, r0, #0
	cmp r5, #0
	ble _0803D2A8
	lsls r1, r5, #5
	ldr r0, _0803D2A4 @ =0x0875A440
	adds r1, r1, r0
	movs r2, #0xa2
	lsls r2, r2, #1
	adds r0, r6, r2
	b _0803D2BA
	.align 2, 0
_0803D2A4: .4byte 0x0875A440
_0803D2A8:
	mov r0, sp
	movs r1, #0
	movs r2, #0x20
	bl memset
	movs r1, #0xa2
	lsls r1, r1, #1
	adds r0, r6, r1
	mov r1, sp
_0803D2BA:
	movs r2, #0x20
	bl memcpy
	movs r0, #1
	strb r0, [r7]
	lsls r1, r4, #5
	ldr r0, _0803D2E4 @ =0x0875A440
	adds r1, r1, r0
	movs r2, #0xb2
	lsls r2, r2, #1
	adds r0, r6, r2
	movs r2, #0x20
	bl memcpy
	movs r0, #1
	strb r0, [r7]
	add sp, #0x20
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D2E4: .4byte 0x0875A440

	thumb_func_start func_0803D2E8
func_0803D2E8: @ 0x0803D2E8
	push {r4, lr}
	sub sp, #0x20
	lsls r1, r1, #0x18
	ldr r4, [r0]
	cmp r1, #0
	beq _0803D314
	ldr r1, _0803D310 @ =0x0875A440
	movs r0, #0xa0
	lsls r0, r0, #1
	adds r1, r1, r0
	movs r2, #0x8a
	lsls r2, r2, #2
	adds r0, r4, r2
	movs r2, #0x20
	bl memcpy
	movs r0, #0xac
	lsls r0, r0, #2
	adds r1, r4, r0
	b _0803D332
	.align 2, 0
_0803D310: .4byte 0x0875A440
_0803D314:
	mov r0, sp
	movs r1, #0
	movs r2, #0x20
	bl memset
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r4, r1
	mov r1, sp
	movs r2, #0x20
	bl memcpy
	movs r2, #0xac
	lsls r2, r2, #2
	adds r1, r4, r2
_0803D332:
	movs r0, #1
	strb r0, [r1]
	add sp, #0x20
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0803D340
func_0803D340: @ 0x0803D340
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r1, #0
	ldr r7, [r0]
	adds r0, r5, #0
	movs r1, #0xa
	bl func_080D0EDA
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #0xa
	bl __umodsi3
	adds r5, r0, #0
	lsls r4, r4, #5
	ldr r0, _0803D39C @ =0x0875A440
	mov r8, r0
	add r4, r8
	movs r1, #0x92
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	movs r0, #0xac
	lsls r0, r0, #2
	adds r6, r7, r0
	movs r4, #1
	strb r4, [r6]
	lsls r5, r5, #5
	add r5, r8
	movs r1, #0x9a
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r1, r5, #0
	movs r2, #0x20
	bl memcpy
	strb r4, [r6]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D39C: .4byte 0x0875A440

	thumb_func_start func_0803D3A0
func_0803D3A0: @ 0x0803D3A0
	push {lr}
	ldr r2, [r0]
	movs r3, #0xb3
	lsls r3, r3, #2
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r1, #4
	bhi _0803D3E6
	lsls r0, r1, #2
	ldr r1, _0803D3BC @ =_0803D3C0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0803D3BC: .4byte _0803D3C0
_0803D3C0: @ jump table
	.4byte _0803D3D4 @ case 0
	.4byte _0803D3D8 @ case 1
	.4byte _0803D3DC @ case 2
	.4byte _0803D3E0 @ case 3
	.4byte _0803D3E4 @ case 4
_0803D3D4:
	movs r0, #0
	b _0803D3E6
_0803D3D8:
	movs r0, #1
	b _0803D3E6
_0803D3DC:
	movs r0, #2
	b _0803D3E6
_0803D3E0:
	movs r0, #3
	b _0803D3E6
_0803D3E4:
	movs r0, #4
_0803D3E6:
	movs r3, #0xb3
	lsls r3, r3, #2
	adds r1, r2, r3
	ldrb r3, [r1]
	cmp r0, r3
	beq _0803D3FE
	strb r0, [r1]
	movs r0, #0xbc
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #1
	strb r0, [r1]
_0803D3FE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0803D404
func_0803D404: @ 0x0803D404
	push {r4, lr}
	adds r3, r1, #0
	ldr r2, [r0]
	ldr r0, _0803D438 @ =0x000002F1
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _0803D41E
	ldr r4, _0803D43C @ =0x000002F2
	adds r0, r2, r4
	ldrh r0, [r0]
	cmp r3, r0
	beq _0803D430
_0803D41E:
	movs r0, #1
	strb r0, [r1]
	ldr r4, _0803D43C @ =0x000002F2
	adds r1, r2, r4
	strh r3, [r1]
	movs r3, #0xcd
	lsls r3, r3, #2
	adds r1, r2, r3
	strb r0, [r1]
_0803D430:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0803D438: .4byte 0x000002F1
_0803D43C: .4byte 0x000002F2

	thumb_func_start func_0803D440
func_0803D440: @ 0x0803D440
	push {lr}
	ldr r1, [r0]
	ldr r0, _0803D460 @ =0x000002F1
	adds r2, r1, r0
	ldrb r0, [r2]
	cmp r0, #0
	beq _0803D45C
	movs r0, #0
	strb r0, [r2]
	movs r0, #0xcd
	lsls r0, r0, #2
	adds r1, r1, r0
	movs r0, #1
	strb r0, [r1]
_0803D45C:
	pop {r0}
	bx r0
	.align 2, 0
_0803D460: .4byte 0x000002F1
_0803D464:
	.byte 0x00, 0xB5, 0x08, 0x30, 0xFF, 0xF7, 0xEA, 0xFF, 0x01, 0xBC, 0x00, 0x47
	.byte 0x00, 0xB5, 0x08, 0x30, 0xFF, 0xF7, 0xC6, 0xFF, 0x01, 0xBC, 0x00, 0x47, 0x00, 0xB5, 0x08, 0x30
	.byte 0xFF, 0xF7, 0x8E, 0xFF, 0x01, 0xBC, 0x00, 0x47, 0x00, 0xB5, 0x08, 0x30, 0xFF, 0xF7, 0x58, 0xFF
	.byte 0x01, 0xBC, 0x00, 0x47, 0x00, 0xB5, 0x09, 0x06, 0x09, 0x0E, 0x08, 0x30, 0xFF, 0xF7, 0x24, 0xFF
	.byte 0x01, 0xBC, 0x00, 0x47, 0x00, 0xB5, 0x08, 0x30, 0xFF, 0xF7, 0xCA, 0xFE, 0x01, 0xBC, 0x00, 0x47
	.byte 0x00, 0xB5, 0x08, 0x30, 0xFF, 0xF7, 0x1C, 0xFE, 0x01, 0xBC, 0x00, 0x47, 0x00, 0xB5, 0x08, 0x30
	.byte 0xFF, 0xF7, 0xDE, 0xFD, 0x01, 0xBC, 0x00, 0x47, 0x00, 0xB5, 0x12, 0x06, 0x12, 0x0E, 0x08, 0x30
	.byte 0xFF, 0xF7, 0x3C, 0xFC, 0x01, 0xBC, 0x00, 0x47

	thumb_func_start func_0803D4D8
func_0803D4D8: @ 0x0803D4D8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r5, r0, #0
	mov r8, r1
	adds r1, r2, #0
	adds r7, r3, #0
	ldr r3, [sp, #0x1c]
	adds r2, r7, #0
	bl func_0803BEB0
	adds r6, r0, #0
	cmp r6, #3
	bne _0803D51C
	ldr r0, [r5, #4]
	ldr r1, [r0, #0x1c]
	adds r0, r5, #0
	bl _call_via_r1
	adds r4, r0, #0
	ldr r0, [r5, #4]
	ldr r1, [r0, #0x20]
	adds r0, r5, #0
	bl _call_via_r1
	adds r2, r0, #0
	adds r0, r5, #0
	adds r0, #8
	str r7, [sp]
	adds r1, r4, #0
	mov r3, r8
	bl func_0803C7C8
_0803D51C:
	adds r0, r6, #0
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803D52C
func_0803D52C: @ 0x0803D52C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	adds r5, r1, #0
	ldrb r3, [r5, #1]
	add r4, sp, #8
	strb r3, [r4]
	ldrb r2, [r5]
	lsls r2, r2, #0x1d
	lsrs r2, r2, #0x1d
	lsls r0, r3, #0x1e
	lsrs r0, r0, #0x1e
	lsls r3, r3, #0x19
	lsrs r3, r3, #0x1b
	adds r2, #6
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #1
	lsls r0, r2, #4
	subs r0, r0, r2
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r3, r3, r1
	mov r8, r4
	cmp r3, #6
	bls _0803D572
	adds r0, r3, #0
	movs r1, #7
	bl __umodsi3
	adds r3, r0, #0
_0803D572:
	movs r1, #8
	rsbs r1, r1, #0
	movs r0, #7
	ands r0, r3
	ands r1, r6
	adds r6, r1, #0
	orrs r6, r0
	movs r3, #0xc8
	str r3, [sp]
	ldrb r0, [r5]
	lsrs r2, r0, #3
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	adds r1, r1, r0
	str r1, [sp, #4]
	add r0, sp, #4
	mov r2, sp
	cmp r3, r1
	bls _0803D59E
	adds r2, r0, #0
_0803D59E:
	ldr r4, [r2]
	ldr r0, [r5]
	lsls r0, r0, #0xb
	lsrs r0, r0, #0x1b
	cmp r0, #5
	bhi _0803D612
	mov r5, r8
	ldrb r3, [r5]
	lsls r0, r3, #0x19
	lsrs r2, r0, #0x1b
	cmp r2, #0
	bne _0803D5CE
	lsls r0, r3, #0x1e
	lsrs r0, r0, #0x1e
	movs r1, #4
	rsbs r1, r1, #0
	subs r0, #1
	movs r2, #3
	ands r0, r2
	ands r1, r3
	orrs r1, r0
	strb r1, [r5]
	movs r2, #0x1d
	b _0803D5D0
_0803D5CE:
	subs r2, #1
_0803D5D0:
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #2
	ldrb r1, [r5]
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strb r0, [r5]
	mov r0, r8
	ldrb r1, [r0]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #3
	bne _0803D5F8
	lsls r0, r1, #0x19
	lsrs r0, r0, #0x1b
	cmp r0, #0x1d
	bne _0803D5F8
	subs r4, #1
_0803D5F8:
	lsls r0, r6, #0x1d
	lsrs r0, r0, #0x1d
	movs r1, #6
	cmp r0, #1
	ble _0803D604
	subs r1, r0, #1
_0803D604:
	movs r0, #7
	ands r1, r0
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r6
	adds r6, r0, #0
	orrs r6, r1
_0803D612:
	strb r4, [r7]
	mov r1, r8
	ldrb r0, [r1]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	strb r0, [r7, #1]
	add r0, sp, #8
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	strb r0, [r7, #2]
	lsls r0, r6, #0x1d
	lsrs r0, r0, #0x1d
	strb r0, [r7, #3]
	adds r0, r7, #0
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803D644
func_0803D644: @ 0x0803D644
	push {r4, lr}
	sub sp, #8
	lsls r2, r0, #4
	subs r2, r2, r0
	lsls r2, r2, #1
	subs r2, #1
	adds r2, r2, r1
	str r2, [sp, #4]
	ldr r0, _0803D684 @ =0x080F1A66
	adds r4, r0, #0
	adds r4, #0xe
	movs r1, #0
	str r1, [sp]
	adds r1, r4, #0
	add r2, sp, #4
	movs r3, #0
	bl func_080E0E80
	adds r1, r0, #0
	movs r2, #0
	cmp r1, r4
	beq _0803D67A
	ldr r0, [sp, #4]
	ldrb r1, [r1]
	cmp r0, r1
	blo _0803D67A
	movs r2, #1
_0803D67A:
	adds r0, r2, #0
	add sp, #8
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0803D684: .4byte 0x080F1A66

	thumb_func_start func_0803D688
func_0803D688: @ 0x0803D688
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	adds r4, r1, #0
	adds r0, r2, #0
	ldr r1, [r4]
	bl _call_via_r1
	mov sl, r0
	movs r0, #0
	mov ip, r0
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0803D6C8
	mov r2, sl
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _0803D6C8
	ldrh r0, [r1]
	cmp r0, #0
	beq _0803D6C8
	ldr r0, [r1, #4]
	cmp r0, #0
	beq _0803D6C8
	ldr r0, [r0, #4]
	mov ip, r0
_0803D6C8:
	mov r0, ip
	cmp r0, #0
	beq _0803D750
	ldrh r2, [r0, #0xa]
	lsls r2, r2, #0x16
	movs r1, #6
	ldrsh r6, [r0, r1]
	movs r1, #8
	ldrsh r0, [r0, r1]
	mov r8, r0
	add r1, sp, #8
	lsrs r2, r2, #0x16
	ldrh r3, [r1]
	ldr r4, _0803D74C @ =0xFFFFFC00
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r2
	strh r0, [r1]
	lsls r6, r6, #0x10
	lsrs r2, r6, #0x10
	movs r0, #0x3f
	mov sb, r0
	ands r2, r0
	lsls r2, r2, #2
	ldrb r5, [r1, #1]
	movs r3, #3
	adds r0, r3, #0
	ands r0, r5
	orrs r0, r2
	strb r0, [r1, #1]
	lsrs r6, r6, #0x16
	ldrh r2, [r1, #2]
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r6
	strh r0, [r1, #2]
	mov r2, r8
	lsls r2, r2, #0x10
	mov r8, r2
	lsrs r0, r2, #0x10
	mov r2, sb
	ands r0, r2
	lsls r0, r0, #2
	ldrb r2, [r1, #3]
	ands r3, r2
	orrs r3, r0
	strb r3, [r1, #3]
	mov r0, r8
	lsrs r0, r0, #0x16
	mov r8, r0
	ldrh r0, [r1, #4]
	ands r4, r0
	mov r2, r8
	orrs r4, r2
	strh r4, [r1, #4]
	mov r0, ip
	ldrb r4, [r0, #0xb]
	lsls r4, r4, #0x1c
	lsrs r4, r4, #0x1e
	mov r5, sp
	mov r0, sp
	movs r2, #6
	bl memcpy
	strb r4, [r5, #6]
	b _0803D78E
	.align 2, 0
_0803D74C: .4byte 0xFFFFFC00
_0803D750:
	add r1, sp, #0x10
	movs r4, #0x8d
	lsls r4, r4, #2
	ldrh r2, [r1]
	ldr r3, _0803D7D8 @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1]
	movs r5, #0
	ldrb r4, [r1, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r4
	strb r0, [r1, #1]
	ldrh r4, [r1, #2]
	adds r0, r3, #0
	ands r0, r4
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	ands r2, r0
	strb r2, [r1, #3]
	ldrh r0, [r1, #4]
	ands r3, r0
	strh r3, [r1, #4]
	mov r4, sp
	mov r0, sp
	movs r2, #6
	bl memcpy
	strb r5, [r4, #6]
_0803D78E:
	adds r0, r7, #0
	mov r1, sp
	bl SetLocation__3NpcRC13ActorLocation
	movs r0, #0x1f
	mov r1, sl
	ands r1, r0
	mov sl, r1
	ldrb r1, [r7, #0xc]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r1
	mov r2, sl
	orrs r0, r2
	strb r0, [r7, #0xc]
	ldrh r1, [r7, #0xc]
	ldr r0, _0803D7DC @ =0xFFFFFC1F
	ands r0, r1
	strh r0, [r7, #0xc]
	ldrb r1, [r7, #0xd]
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r7, #0xd]
	ldr r0, [r7, #0xc]
	ldr r1, _0803D7E0 @ =0xFE007FFF
	ands r0, r1
	str r0, [r7, #0xc]
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0803D7D8: .4byte 0xFFFFFC00
_0803D7DC: .4byte 0xFFFFFC1F
_0803D7E0: .4byte 0xFE007FFF

	thumb_func_start func_0803D7E4
func_0803D7E4: @ 0x0803D7E4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r0, #0x70
	ldr r1, _0803D9A4 @ =0x080F280C
	adds r2, r5, #0
	bl func_0803D688
	adds r0, r4, #0
	adds r0, #0x84
	ldr r1, _0803D9A8 @ =0x080F1A80
	adds r2, r5, #0
	bl func_0803D688
	adds r0, r4, #0
	adds r0, #0x98
	ldr r1, _0803D9AC @ =0x080F1FC0
	adds r2, r5, #0
	bl func_0803D688
	adds r0, r4, #0
	adds r0, #0xb0
	ldr r1, _0803D9B0 @ =0x080F8678
	adds r2, r5, #0
	bl func_0803D688
	adds r0, r4, #0
	adds r0, #0xc4
	ldr r1, _0803D9B4 @ =0x080F81BC
	adds r2, r5, #0
	bl func_0803D688
	adds r0, r4, #0
	adds r0, #0xd8
	ldr r1, _0803D9B8 @ =0x080F77FC
	adds r2, r5, #0
	bl func_0803D688
	adds r0, r4, #0
	adds r0, #0xf0
	ldr r1, _0803D9BC @ =0x080F7294
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9C0 @ =0x080F6370
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9C4 @ =0x080F66C4
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0x96
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9C8 @ =0x080F49C0
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xa0
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9CC @ =0x080F5540
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xaa
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9D0 @ =0x080F4D74
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xb6
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9D4 @ =0x080F59CC
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xc0
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9D8 @ =0x080F6B4C
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xca
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9DC @ =0x080F33B8
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xd4
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9E0 @ =0x080F61FC
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xde
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9E4 @ =0x080F3408
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xe8
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9E8 @ =0x080F3FD8
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9EC @ =0x080F35E4
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xfe
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _0803D9F0 @ =0x080F3010
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0x84
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803D9F4 @ =0x080F5D94
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803D9F8 @ =0x080F6DE8
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0x8f
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803D9FC @ =0x080F2AF8
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0x94
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803DA00 @ =0x080F42F0
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0x99
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803DA04 @ =0x080F43DC
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803DA08 @ =0x080F6FF8
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xa4
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803DA0C @ =0x080F7B40
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803DA10 @ =0x080F2DC0
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xaf
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803DA14 @ =0x080F597C
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xc4
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803DA18 @ =0x080F6B10
	adds r2, r5, #0
	bl func_0803D688
	movs r1, #0xca
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _0803DA1C @ =0x080F4974
	adds r2, r5, #0
	bl func_0803D688
	adds r0, r4, #0
	bl func_080A0A04
	cmp r0, #0
	beq _0803D99E
	ldr r1, _0803DA20 @ =0x080F29C0
	adds r2, r5, #0
	bl func_0803D688
_0803D99E:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0803D9A4: .4byte 0x080F280C
_0803D9A8: .4byte 0x080F1A80
_0803D9AC: .4byte 0x080F1FC0
_0803D9B0: .4byte 0x080F8678
_0803D9B4: .4byte 0x080F81BC
_0803D9B8: .4byte 0x080F77FC
_0803D9BC: .4byte 0x080F7294
_0803D9C0: .4byte 0x080F6370
_0803D9C4: .4byte 0x080F66C4
_0803D9C8: .4byte 0x080F49C0
_0803D9CC: .4byte 0x080F5540
_0803D9D0: .4byte 0x080F4D74
_0803D9D4: .4byte 0x080F59CC
_0803D9D8: .4byte 0x080F6B4C
_0803D9DC: .4byte 0x080F33B8
_0803D9E0: .4byte 0x080F61FC
_0803D9E4: .4byte 0x080F3408
_0803D9E8: .4byte 0x080F3FD8
_0803D9EC: .4byte 0x080F35E4
_0803D9F0: .4byte 0x080F3010
_0803D9F4: .4byte 0x080F5D94
_0803D9F8: .4byte 0x080F6DE8
_0803D9FC: .4byte 0x080F2AF8
_0803DA00: .4byte 0x080F42F0
_0803DA04: .4byte 0x080F43DC
_0803DA08: .4byte 0x080F6FF8
_0803DA0C: .4byte 0x080F7B40
_0803DA10: .4byte 0x080F2DC0
_0803DA14: .4byte 0x080F597C
_0803DA18: .4byte 0x080F6B10
_0803DA1C: .4byte 0x080F4974
_0803DA20: .4byte 0x080F29C0

	thumb_func_start func_0803DA24
func_0803DA24: @ 0x0803DA24
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803DA3C @ =0x000021CA
	adds r0, r5, r1
	ldrb r1, [r0]
	movs r0, #0xc
	ands r0, r1
	cmp r0, #0
	beq _0803DA40
	movs r0, #0
	b _0803DA74
	.align 2, 0
_0803DA3C: .4byte 0x000021CA
_0803DA40:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803DA60
	movs r0, #4
	b _0803DA74
_0803DA60:
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803DA72
	cmp r4, #2
	bne _0803DA6E
	movs r0, #3
	b _0803DA74
_0803DA6E:
	movs r0, #1
	b _0803DA74
_0803DA72:
	movs r0, #2
_0803DA74:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0803DA7C
func_0803DA7C: @ 0x0803DA7C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803DAC8 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	cmp r0, #0
	bge _0803DA96
	b _0803DC22
_0803DA96:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r7, [r4, #1]
	ldrb r0, [r4, #2]
	mov r8, r0
	ldrb r4, [r4, #3]
	mov sb, r4
	ldr r1, _0803DACC @ =0x00001CD4
	adds r0, r5, r1
	bl func_080A0490
	adds r4, r0, #0
	cmp r4, #3
	bne _0803DB6A
	cmp r7, #2
	bne _0803DAD0
	mov r0, r8
	cmp r0, #0xd
	bne _0803DAD0
	movs r0, #0x16
	b _0803DC54
	.align 2, 0
_0803DAC8: .4byte 0x000021CA
_0803DACC: .4byte 0x00001CD4
_0803DAD0:
	ldr r1, _0803DAE4 @ =0x0000216B
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _0803DAE8
	movs r0, #0x17
	b _0803DC54
	.align 2, 0
_0803DAE4: .4byte 0x0000216B
_0803DAE8:
	ldr r1, _0803DB20 @ =0x00002148
	adds r0, r5, r1
	ldrb r6, [r0]
	ldr r1, _0803DB24 @ =0x00001CD4
	adds r0, r5, r1
	bl func_080A0384
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r4, r1, #0x1f
	adds r0, r7, #0
	mov r1, r8
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803DB14
	ldr r0, [r5, #8]
	cmp r0, #3
	beq _0803DB14
	cmp r0, #4
	bne _0803DB38
_0803DB14:
	cmp r4, #0
	beq _0803DB2C
	cmp r6, #0
	beq _0803DB28
	movs r0, #0xd
	b _0803DC54
	.align 2, 0
_0803DB20: .4byte 0x00002148
_0803DB24: .4byte 0x00001CD4
_0803DB28:
	movs r0, #0xc
	b _0803DC54
_0803DB2C:
	cmp r6, #0
	beq _0803DB34
	movs r0, #0xf
	b _0803DC54
_0803DB34:
	movs r0, #0xe
	b _0803DC54
_0803DB38:
	cmp r6, #0
	beq _0803DB4E
	mov r0, sb
	cmp r0, #0
	bne _0803DB4E
	cmp r4, #0
	beq _0803DB4A
	movs r0, #8
	b _0803DC54
_0803DB4A:
	movs r0, #0xb
	b _0803DC54
_0803DB4E:
	cmp r4, #0
	beq _0803DB5E
	cmp r6, #0
	beq _0803DB5A
	movs r0, #7
	b _0803DC54
_0803DB5A:
	movs r0, #6
	b _0803DC54
_0803DB5E:
	cmp r6, #0
	beq _0803DB66
	movs r0, #0xa
	b _0803DC54
_0803DB66:
	movs r0, #9
	b _0803DC54
_0803DB6A:
	ldr r1, _0803DB8C @ =0x00001D6C
	adds r0, r5, r1
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bls _0803DB9E
	cmp r7, #1
	bne _0803DC22
	movs r0, #1
	mov r1, r8
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803DB90
	movs r0, #0x13
	b _0803DC54
	.align 2, 0
_0803DB8C: .4byte 0x00001D6C
_0803DB90:
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803DB9A
	movs r0, #0x14
	b _0803DC54
_0803DB9A:
	movs r0, #0x15
	b _0803DC54
_0803DB9E:
	cmp r7, #2
	bne _0803DBC0
	mov r0, r8
	cmp r0, #0x1e
	bne _0803DBC0
	ldr r1, _0803DBBC @ =0x000021A3
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _0803DBC0
	movs r0, #0x11
	b _0803DC54
	.align 2, 0
_0803DBBC: .4byte 0x000021A3
_0803DBC0:
	ldr r1, _0803DBF8 @ =0x00001CD4
	adds r0, r5, r1
	movs r1, #3
	bl func_080A01F8
	cmp r7, #3
	bne _0803DC04
	mov r1, r8
	cmp r1, #0xe
	bne _0803DC04
	cmp r4, #0
	bne _0803DC04
	cmp r0, #0
	beq _0803DC04
	bl GetLove__C12Bachelorette
	ldr r1, _0803DBFC @ =0x0000270F
	cmp r0, r1
	bls _0803DC04
	ldr r1, _0803DC00 @ =0x000021A3
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _0803DC04
	movs r0, #0x12
	b _0803DC54
	.align 2, 0
_0803DBF8: .4byte 0x00001CD4
_0803DBFC: .4byte 0x0000270F
_0803DC00: .4byte 0x000021A3
_0803DC04:
	adds r0, r7, #0
	mov r1, r8
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803DC16
	movs r0, #0x10
	b _0803DC54
_0803DC16:
	ldr r1, _0803DC28 @ =0x0000215A
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	cmp r0, #0
	bge _0803DC2C
_0803DC22:
	movs r0, #0
	b _0803DC54
	.align 2, 0
_0803DC28: .4byte 0x0000215A
_0803DC2C:
	mov r0, sb
	cmp r0, #0
	bne _0803DC48
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803DC44
	cmp r7, #1
	bne _0803DC40
	movs r0, #5
	b _0803DC54
_0803DC40:
	movs r0, #3
	b _0803DC54
_0803DC44:
	movs r0, #4
	b _0803DC54
_0803DC48:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0803DC52
	movs r0, #2
	b _0803DC54
_0803DC52:
	movs r0, #1
_0803DC54:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803DC64
func_0803DC64: @ 0x0803DC64
	push {r4, lr}
	sub sp, #4
	adds r2, r0, #0
	ldr r1, _0803DC7C @ =0x000021CA
	adds r0, r2, r1
	ldrb r1, [r0]
	movs r0, #0xc
	ands r0, r1
	cmp r0, #0
	beq _0803DC80
	movs r0, #0
	b _0803DCAA
	.align 2, 0
_0803DC7C: .4byte 0x000021CA
_0803DC80:
	mov r4, sp
	adds r1, r2, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803DCA0
	movs r0, #3
	b _0803DCAA
_0803DCA0:
	cmp r4, #0
	beq _0803DCA8
	movs r0, #1
	b _0803DCAA
_0803DCA8:
	movs r0, #2
_0803DCAA:
	add sp, #4
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0803DCB4:
	.byte 0x70, 0xB5, 0x81, 0xB0, 0x05, 0x1C, 0x0A, 0x48, 0x2C, 0x18, 0x20, 0x1C
	.byte 0x62, 0xF0, 0x60, 0xFB, 0x00, 0x28, 0x00, 0xD1, 0x89, 0xE0, 0x60, 0xF0, 0x05, 0xFF, 0x3B, 0x28
	.byte 0x00, 0xD9, 0x82, 0xE0, 0x20, 0x1C, 0x62, 0xF0, 0xDB, 0xFB, 0x06, 0x1C, 0x1F, 0x2E, 0x03, 0xD1
	.byte 0x03, 0x20, 0x7D, 0xE0, 0xD4, 0x1C, 0x00, 0x00, 0x6C, 0x46, 0x29, 0x1C, 0x10, 0x31, 0x68, 0x46
	.byte 0xFF, 0xF7, 0x1C, 0xFC, 0x60, 0x78, 0xA1, 0x78, 0xE4, 0x78, 0x02, 0x28, 0x03, 0xD1, 0x0D, 0x29
	.byte 0x01, 0xD1, 0x05, 0x20, 0x6C, 0xE0, 0xFF, 0xF7, 0x9D, 0xFC, 0x00, 0x06, 0x00, 0x28, 0x4F, 0xD1
	.byte 0xA8, 0x68, 0x03, 0x28, 0x4C, 0xD0, 0x04, 0x28, 0x4A, 0xD0, 0x05, 0x49, 0x68, 0x18, 0x02, 0x78
	.byte 0xF0, 0x1E, 0x1C, 0x28, 0x57, 0xD8, 0x80, 0x00, 0x02, 0x49, 0x40, 0x18, 0x00, 0x68, 0x87, 0x46
	.byte 0x48, 0x21, 0x00, 0x00, 0x38, 0xDD, 0x03, 0x08, 0xB4, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08
	.byte 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08
	.byte 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xAC, 0xDD, 0x03, 0x08
	.byte 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08
	.byte 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xBE, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08
	.byte 0xCC, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08
	.byte 0xD2, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08
	.byte 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0xD6, 0xDD, 0x03, 0x08, 0x01, 0x2C, 0x12, 0xD1
	.byte 0x02, 0x20, 0x15, 0xE0, 0x00, 0x2A, 0xFB, 0xD0, 0x00, 0x2C, 0x0C, 0xD1, 0xF8, 0xE7, 0x00, 0x2A
	.byte 0xF6, 0xD0, 0x02, 0x2C, 0xF4, 0xD0, 0x00, 0x2C, 0x05, 0xD1, 0xF1, 0xE7, 0x03, 0x2C, 0x02, 0xD1
	.byte 0xEE, 0xE7, 0x00, 0x2A, 0xEC, 0xD0, 0x01, 0x20, 0x02, 0xE0, 0x04, 0x20, 0x00, 0xE0, 0x00, 0x20
	.byte 0x01, 0xB0, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47

	thumb_func_start func_0803DDE8
func_0803DDE8: @ 0x0803DDE8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803DE48 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	cmp r0, #0
	blt _0803DE42
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	mov r0, sp
	ldrb r6, [r0]
	ldrb r7, [r4, #1]
	ldrb r0, [r4, #2]
	mov r8, r0
	ldrb r4, [r4, #3]
	ldr r1, _0803DE4C @ =0x00002181
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _0803DE42
	subs r1, #0xc
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	cmp r0, #0
	blt _0803DE50
	cmp r6, #1
	bhi _0803DE42
	cmp r6, #1
	bne _0803DE50
	cmp r7, #3
	bne _0803DE50
	mov r0, r8
	cmp r0, #0x1c
	bls _0803DE50
_0803DE42:
	movs r0, #0
	b _0803DEBE
	.align 2, 0
_0803DE48: .4byte 0x000021CA
_0803DE4C: .4byte 0x00002181
_0803DE50:
	ldr r1, _0803DE64 @ =0x00002181
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _0803DE68
	movs r0, #5
	b _0803DEBE
	.align 2, 0
_0803DE64: .4byte 0x00002181
_0803DE68:
	adds r0, r7, #0
	mov r1, r8
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803DE7A
	movs r0, #4
	b _0803DEBE
_0803DE7A:
	cmp r6, #1
	bne _0803DE9C
	cmp r7, #2
	bne _0803DE9C
	mov r0, r8
	cmp r0, #0xf
	bne _0803DE9C
	ldr r1, _0803DE98 @ =0x00002175
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	cmp r0, #0
	bge _0803DE9C
_0803DE94:
	movs r0, #2
	b _0803DEBE
	.align 2, 0
_0803DE98: .4byte 0x00002175
_0803DE9C:
	ldr r1, _0803DEB8 @ =0x00002174
	adds r0, r5, r1
	ldr r0, [r0]
	movs r1, #0xc2
	lsls r1, r1, #0xb
	ands r0, r1
	movs r1, #0x82
	lsls r1, r1, #0xb
	cmp r0, r1
	bne _0803DEBC
	cmp r4, #6
	bne _0803DE94
	movs r0, #3
	b _0803DEBE
	.align 2, 0
_0803DEB8: .4byte 0x00002174
_0803DEBC:
	movs r0, #1
_0803DEBE:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803DECC
func_0803DECC: @ 0x0803DECC
	push {r4, lr}
	sub sp, #4
	adds r1, r0, #0
	mov r4, sp
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803DEEE
	movs r0, #1
	b _0803DEF0
_0803DEEE:
	movs r0, #2
_0803DEF0:
	add sp, #4
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start func_0803DEF8
func_0803DEF8: @ 0x0803DEF8
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803DF10 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	cmp r0, #0
	bge _0803DF14
	movs r0, #0
	b _0803DF48
	.align 2, 0
_0803DF10: .4byte 0x000021CA
_0803DF14:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803DF34
	movs r0, #4
	b _0803DF48
_0803DF34:
	cmp r4, #3
	bne _0803DF46
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803DF42
	movs r0, #2
	b _0803DF48
_0803DF42:
	movs r0, #3
	b _0803DF48
_0803DF46:
	movs r0, #1
_0803DF48:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0803DF50
func_0803DF50: @ 0x0803DF50
	push {r4, lr}
	sub sp, #4
	adds r1, r0, #0
	ldr r2, _0803DF68 @ =0x000021CA
	adds r0, r1, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	cmp r0, #0
	bge _0803DF6C
	movs r0, #0
	b _0803DF8A
	.align 2, 0
_0803DF68: .4byte 0x000021CA
_0803DF6C:
	mov r4, sp
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803DF88
	movs r0, #1
	b _0803DF8A
_0803DF88:
	movs r0, #2
_0803DF8A:
	add sp, #4
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803DF94
func_0803DF94: @ 0x0803DF94
	push {r4, lr}
	sub sp, #4
	adds r1, r0, #0
	ldr r2, _0803DFAC @ =0x000021CA
	adds r0, r1, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	cmp r0, #0
	bge _0803DFB0
	movs r0, #0
	b _0803DFE0
	.align 2, 0
_0803DFAC: .4byte 0x000021CA
_0803DFB0:
	mov r4, sp
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803DFCE
	movs r0, #4
	b _0803DFE0
_0803DFCE:
	cmp r4, #2
	bne _0803DFD6
	movs r0, #2
	b _0803DFE0
_0803DFD6:
	cmp r4, #0
	beq _0803DFDE
	movs r0, #1
	b _0803DFE0
_0803DFDE:
	movs r0, #3
_0803DFE0:
	add sp, #4
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start func_0803DFE8
func_0803DFE8: @ 0x0803DFE8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803E008 @ =0x000021CA
	adds r0, r5, r1
	ldrb r1, [r0]
	movs r0, #0xc
	ands r0, r1
	cmp r0, #0
	beq _0803E00C
	movs r0, #0
	b _0803E194
	.align 2, 0
_0803E008: .4byte 0x000021CA
_0803E00C:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	mov r8, r0
	ldrb r7, [r4, #2]
	ldrb r4, [r4, #3]
	mov sb, r4
	ldr r1, _0803E040 @ =0x00001CD4
	adds r4, r5, r1
	adds r0, r4, #0
	bl func_080A0490
	adds r6, r0, #0
	cmp r6, #0x13
	bne _0803E0EA
	mov r0, r8
	cmp r0, #2
	bne _0803E04C
	cmp r7, #9
	bne _0803E044
	movs r0, #0x15
	b _0803E194
	.align 2, 0
_0803E040: .4byte 0x00001CD4
_0803E044:
	cmp r7, #0xd
	bne _0803E04C
	movs r0, #0x16
	b _0803E194
_0803E04C:
	ldr r1, _0803E060 @ =0x0000216C
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _0803E064
	movs r0, #0x17
	b _0803E194
	.align 2, 0
_0803E060: .4byte 0x0000216C
_0803E064:
	ldr r1, _0803E09C @ =0x00002148
	adds r0, r5, r1
	ldrb r6, [r0]
	ldr r1, _0803E0A0 @ =0x00001CD4
	adds r0, r5, r1
	bl func_080A0384
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r4, r1, #0x1f
	mov r0, r8
	adds r1, r7, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803E090
	ldr r0, [r5, #8]
	cmp r0, #3
	beq _0803E090
	cmp r0, #4
	bne _0803E0B4
_0803E090:
	cmp r4, #0
	beq _0803E0A8
	cmp r6, #0
	beq _0803E0A4
	movs r0, #0x12
	b _0803E194
	.align 2, 0
_0803E09C: .4byte 0x00002148
_0803E0A0: .4byte 0x00001CD4
_0803E0A4:
	movs r0, #0x11
	b _0803E194
_0803E0A8:
	cmp r6, #0
	beq _0803E0B0
	movs r0, #0x14
	b _0803E194
_0803E0B0:
	movs r0, #0x13
	b _0803E194
_0803E0B4:
	cmp r6, #0
	beq _0803E0CE
	mov r0, sb
	cmp r0, #0
	beq _0803E0C2
	cmp r0, #2
	bne _0803E0CE
_0803E0C2:
	cmp r4, #0
	beq _0803E0CA
	movs r0, #0xd
	b _0803E194
_0803E0CA:
	movs r0, #0x10
	b _0803E194
_0803E0CE:
	cmp r4, #0
	beq _0803E0DE
	cmp r6, #0
	beq _0803E0DA
	movs r0, #0xc
	b _0803E194
_0803E0DA:
	movs r0, #0xb
	b _0803E194
_0803E0DE:
	cmp r6, #0
	beq _0803E0E6
	movs r0, #0xf
	b _0803E194
_0803E0E6:
	movs r0, #0xe
	b _0803E194
_0803E0EA:
	ldr r1, _0803E108 @ =0x00001EB8
	adds r0, r5, r1
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bls _0803E11A
	mov r0, r8
	adds r1, r7, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E10C
	movs r0, #0xa
	b _0803E194
	.align 2, 0
_0803E108: .4byte 0x00001EB8
_0803E10C:
	mov r0, sb
	cmp r0, #0
	bne _0803E116
	movs r0, #7
	b _0803E194
_0803E116:
	movs r0, #6
	b _0803E194
_0803E11A:
	adds r0, r4, #0
	movs r1, #0x13
	bl func_080A01F8
	mov r1, r8
	cmp r1, #3
	bne _0803E158
	cmp r7, #0xe
	bne _0803E158
	cmp r6, #0
	bne _0803E158
	cmp r0, #0
	beq _0803E158
	bl GetLove__C12Bachelorette
	ldr r1, _0803E150 @ =0x0000270F
	cmp r0, r1
	bls _0803E158
	ldr r1, _0803E154 @ =0x000021A4
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _0803E158
	movs r0, #9
	b _0803E194
	.align 2, 0
_0803E150: .4byte 0x0000270F
_0803E154: .4byte 0x000021A4
_0803E158:
	mov r0, r8
	adds r1, r7, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E16A
	movs r0, #8
	b _0803E194
_0803E16A:
	mov r0, sb
	cmp r0, #0
	bne _0803E174
	movs r0, #3
	b _0803E194
_0803E174:
	mov r1, sb
	cmp r1, #2
	bne _0803E188
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803E184
	movs r0, #4
	b _0803E194
_0803E184:
	movs r0, #5
	b _0803E194
_0803E188:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0803E192
	movs r0, #2
	b _0803E194
_0803E192:
	movs r0, #1
_0803E194:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803E1A4
func_0803E1A4: @ 0x0803E1A4
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803E1BC @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	cmp r0, #0
	bge _0803E1C0
	movs r0, #0
	b _0803E1F4
	.align 2, 0
_0803E1BC: .4byte 0x000021CA
_0803E1C0:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E1E0
	movs r0, #4
	b _0803E1F4
_0803E1E0:
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803E1F2
	cmp r4, #2
	bne _0803E1EE
	movs r0, #3
	b _0803E1F4
_0803E1EE:
	movs r0, #1
	b _0803E1F4
_0803E1F2:
	movs r0, #2
_0803E1F4:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0803E1FC
func_0803E1FC: @ 0x0803E1FC
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803E214 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	cmp r0, #0
	bge _0803E218
	movs r0, #0
	b _0803E25A
	.align 2, 0
_0803E214: .4byte 0x000021CA
_0803E218:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r6, [r4, #1]
	ldrb r4, [r4, #2]
	adds r0, r6, #0
	adds r1, r4, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E23A
	movs r0, #2
	b _0803E25A
_0803E23A:
	ldr r1, _0803E254 @ =0x00001CD4
	adds r0, r5, r1
	bl func_080A0490
	cmp r6, #2
	bne _0803E258
	cmp r4, #5
	bne _0803E258
	cmp r0, #0x19
	beq _0803E258
	movs r0, #3
	b _0803E25A
	.align 2, 0
_0803E254: .4byte 0x00001CD4
_0803E258:
	movs r0, #1
_0803E25A:
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803E264
func_0803E264: @ 0x0803E264
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803E280 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	cmp r0, #0
	bge _0803E284
	movs r0, #0
	b _0803E3FE
	.align 2, 0
_0803E280: .4byte 0x000021CA
_0803E284:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	mov r8, r0
	ldrb r6, [r4, #2]
	ldr r1, _0803E2B4 @ =0x00001CD4
	adds r0, r5, r1
	bl func_080A0490
	adds r4, r0, #0
	mov r0, r8
	cmp r0, #2
	bne _0803E2B8
	cmp r6, #5
	bne _0803E2B8
	cmp r4, #0x19
	beq _0803E2BC
	movs r0, #5
	b _0803E3FE
	.align 2, 0
_0803E2B4: .4byte 0x00001CD4
_0803E2B8:
	cmp r4, #0x19
	bne _0803E364
_0803E2BC:
	mov r1, r8
	cmp r1, #2
	bne _0803E2D2
	cmp r6, #9
	bne _0803E2CA
	movs r0, #0x10
	b _0803E3FE
_0803E2CA:
	cmp r6, #0xd
	bne _0803E2D2
	movs r0, #0x11
	b _0803E3FE
_0803E2D2:
	ldr r1, _0803E2F0 @ =0x0000216B
	adds r0, r5, r1
	ldrb r2, [r0]
	lsrs r2, r2, #7
	adds r1, #1
	adds r0, r5, r1
	ldrb r0, [r0]
	movs r1, #1
	ands r0, r1
	lsls r0, r0, #1
	orrs r0, r2
	cmp r0, #1
	bne _0803E2F4
	movs r0, #0x12
	b _0803E3FE
	.align 2, 0
_0803E2F0: .4byte 0x0000216B
_0803E2F4:
	ldr r1, _0803E330 @ =0x00002148
	adds r0, r5, r1
	ldrb r4, [r0]
	ldr r1, _0803E334 @ =0x00001CD4
	adds r0, r5, r1
	bl func_080A0384
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r7, r1, #0x1f
	mov sb, r7
	mov r0, r8
	adds r1, r6, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803E322
	ldr r0, [r5, #8]
	cmp r0, #3
	beq _0803E322
	cmp r0, #4
	bne _0803E348
_0803E322:
	mov r0, sb
	cmp r0, #0
	beq _0803E33C
	cmp r4, #0
	beq _0803E338
	movs r0, #0xd
	b _0803E3FE
	.align 2, 0
_0803E330: .4byte 0x00002148
_0803E334: .4byte 0x00001CD4
_0803E338:
	movs r0, #0xc
	b _0803E3FE
_0803E33C:
	cmp r4, #0
	beq _0803E344
	movs r0, #0xf
	b _0803E3FE
_0803E344:
	movs r0, #0xe
	b _0803E3FE
_0803E348:
	cmp r7, #0
	beq _0803E358
	cmp r4, #0
	beq _0803E354
	movs r0, #9
	b _0803E3FE
_0803E354:
	movs r0, #8
	b _0803E3FE
_0803E358:
	cmp r4, #0
	beq _0803E360
	movs r0, #0xb
	b _0803E3FE
_0803E360:
	movs r0, #0xa
	b _0803E3FE
_0803E364:
	ldr r1, _0803E388 @ =0x00001F38
	adds r0, r5, r1
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bls _0803E390
	mov r0, r8
	adds r1, r6, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803E3EE
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803E38C
	movs r0, #3
	b _0803E3FE
	.align 2, 0
_0803E388: .4byte 0x00001F38
_0803E38C:
	movs r0, #4
	b _0803E3FE
_0803E390:
	ldr r1, _0803E3D4 @ =0x00001CD4
	adds r0, r5, r1
	movs r1, #0x19
	bl func_080A01F8
	mov r1, r8
	cmp r1, #3
	bne _0803E3E0
	cmp r6, #0xe
	bne _0803E3E0
	cmp r4, #0
	bne _0803E3E0
	cmp r0, #0
	beq _0803E3E0
	bl GetLove__C12Bachelorette
	ldr r1, _0803E3D8 @ =0x0000270F
	cmp r0, r1
	bls _0803E3E0
	ldr r1, _0803E3DC @ =0x000021A3
	adds r0, r5, r1
	ldrb r2, [r0]
	lsrs r2, r2, #7
	adds r1, #1
	adds r0, r5, r1
	ldrb r0, [r0]
	movs r1, #1
	ands r0, r1
	lsls r0, r0, #1
	orrs r0, r2
	cmp r0, #2
	beq _0803E3E0
	movs r0, #7
	b _0803E3FE
	.align 2, 0
_0803E3D4: .4byte 0x00001CD4
_0803E3D8: .4byte 0x0000270F
_0803E3DC: .4byte 0x000021A3
_0803E3E0:
	mov r0, r8
	adds r1, r6, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E3F2
_0803E3EE:
	movs r0, #6
	b _0803E3FE
_0803E3F2:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0803E3FC
	movs r0, #2
	b _0803E3FE
_0803E3FC:
	movs r0, #1
_0803E3FE:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0803E40C
func_0803E40C: @ 0x0803E40C
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	mov r5, sp
	adds r1, r4, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r1, [r5, #3]
	ldr r0, _0803E438 @ =0x00002187
	adds r4, r4, r0
	ldrb r0, [r4]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #2
	bne _0803E43C
	cmp r1, #0
	bne _0803E43C
	movs r0, #1
	b _0803E43E
	.align 2, 0
_0803E438: .4byte 0x00002187
_0803E43C:
	movs r0, #0
_0803E43E:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803E448
func_0803E448: @ 0x0803E448
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803E460 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	cmp r0, #0
	bge _0803E464
	movs r0, #0
	b _0803E498
	.align 2, 0
_0803E460: .4byte 0x000021CA
_0803E464:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E484
	movs r0, #4
	b _0803E498
_0803E484:
	cmp r4, #1
	bne _0803E496
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803E492
	movs r0, #2
	b _0803E498
_0803E492:
	movs r0, #3
	b _0803E498
_0803E496:
	movs r0, #1
_0803E498:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0803E4A0
func_0803E4A0: @ 0x0803E4A0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803E4BC @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	cmp r0, #0
	bge _0803E4C0
	movs r0, #0
	b _0803E610
	.align 2, 0
_0803E4BC: .4byte 0x000021CA
_0803E4C0:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r7, [r4, #1]
	ldrb r6, [r4, #2]
	ldrb r4, [r4, #3]
	mov sb, r4
	ldr r0, _0803E4F0 @ =0x00001CD4
	adds r4, r5, r0
	adds r0, r4, #0
	bl func_080A0490
	mov r8, r0
	cmp r0, #0xc
	bne _0803E56E
	cmp r7, #2
	bne _0803E4FC
	cmp r6, #9
	bne _0803E4F4
	movs r0, #0x10
	b _0803E610
	.align 2, 0
_0803E4F0: .4byte 0x00001CD4
_0803E4F4:
	cmp r6, #0xd
	bne _0803E4FC
	movs r0, #0x11
	b _0803E610
_0803E4FC:
	ldr r1, _0803E510 @ =0x0000216C
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _0803E514
	movs r0, #0x12
	b _0803E610
	.align 2, 0
_0803E510: .4byte 0x0000216C
_0803E514:
	ldr r1, _0803E548 @ =0x00001CD4
	adds r0, r5, r1
	bl func_080A0384
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r4, r1, #0x1f
	mov r8, r4
	adds r0, r7, #0
	adds r1, r6, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803E53C
	ldr r0, [r5, #8]
	cmp r0, #3
	beq _0803E53C
	cmp r0, #4
	bne _0803E550
_0803E53C:
	mov r0, r8
	cmp r0, #0
	beq _0803E54C
	movs r0, #0xe
	b _0803E610
	.align 2, 0
_0803E548: .4byte 0x00001CD4
_0803E54C:
	movs r0, #0xf
	b _0803E610
_0803E550:
	mov r1, sb
	cmp r1, #1
	bne _0803E562
	cmp r4, #0
	beq _0803E55E
	movs r0, #0xb
	b _0803E610
_0803E55E:
	movs r0, #0xd
	b _0803E610
_0803E562:
	cmp r4, #0
	beq _0803E56A
	movs r0, #0xa
	b _0803E610
_0803E56A:
	movs r0, #0xc
	b _0803E610
_0803E56E:
	ldr r1, _0803E58C @ =0x00001E28
	adds r0, r5, r1
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bls _0803E5A8
	adds r0, r7, #0
	adds r1, r6, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E590
	movs r0, #9
	b _0803E610
	.align 2, 0
_0803E58C: .4byte 0x00001E28
_0803E590:
	mov r0, sb
	cmp r0, #4
	bne _0803E5A4
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803E5A0
	movs r0, #5
	b _0803E610
_0803E5A0:
	movs r0, #6
	b _0803E610
_0803E5A4:
	movs r0, #4
	b _0803E610
_0803E5A8:
	adds r0, r4, #0
	movs r1, #0xc
	bl func_080A01F8
	cmp r7, #3
	bne _0803E5E8
	cmp r6, #0xe
	bne _0803E5E8
	mov r1, r8
	cmp r1, #0
	bne _0803E5E8
	cmp r0, #0
	beq _0803E5E8
	bl GetLove__C12Bachelorette
	ldr r1, _0803E5E0 @ =0x0000270F
	cmp r0, r1
	bls _0803E5E8
	ldr r1, _0803E5E4 @ =0x000021A5
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _0803E5E8
	movs r0, #7
	b _0803E610
	.align 2, 0
_0803E5E0: .4byte 0x0000270F
_0803E5E4: .4byte 0x000021A5
_0803E5E8:
	adds r0, r7, #0
	adds r1, r6, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E5FA
	movs r0, #8
	b _0803E610
_0803E5FA:
	mov r0, sb
	cmp r0, #1
	bne _0803E60E
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803E60A
	movs r0, #2
	b _0803E610
_0803E60A:
	movs r0, #3
	b _0803E610
_0803E60E:
	movs r0, #1
_0803E610:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803E620
func_0803E620: @ 0x0803E620
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803E638 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	cmp r0, #0
	bge _0803E63C
	movs r0, #0
	b _0803E67A
	.align 2, 0
_0803E638: .4byte 0x000021CA
_0803E63C:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E65C
	movs r0, #5
	b _0803E67A
_0803E65C:
	cmp r4, #1
	bne _0803E66E
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803E66A
	movs r0, #3
	b _0803E67A
_0803E66A:
	movs r0, #4
	b _0803E67A
_0803E66E:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0803E678
	movs r0, #2
	b _0803E67A
_0803E678:
	movs r0, #1
_0803E67A:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803E684
func_0803E684: @ 0x0803E684
	push {r4, r5, r6, lr}
	sub sp, #0xc
	adds r5, r0, #0
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	adds r6, r0, #0
	ldrb r0, [r4, #2]
	adds r4, r0, #0
	adds r0, r6, #0
	adds r1, r4, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E6B0
	movs r0, #2
	b _0803E6E2
_0803E6B0:
	movs r3, #0xc8
	str r3, [sp, #4]
	ldrb r0, [r5, #0x10]
	lsrs r2, r0, #3
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	adds r1, r1, r0
	str r1, [sp, #8]
	add r2, sp, #8
	add r0, sp, #4
	cmp r3, r1
	bls _0803E6CE
	adds r0, r2, #0
_0803E6CE:
	ldr r0, [r0]
	cmp r0, #1
	bhi _0803E6E0
	cmp r6, #0
	bne _0803E6E0
	cmp r4, #2
	bhi _0803E6E0
	movs r0, #0
	b _0803E6E2
_0803E6E0:
	movs r0, #1
_0803E6E2:
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803E6EC
func_0803E6EC: @ 0x0803E6EC
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r2, [r4, #1]
	ldrb r3, [r4, #2]
	ldrb r4, [r4, #3]
	cmp r2, #3
	bne _0803E740
	cmp r3, #2
	bne _0803E740
	ldr r1, _0803E734 @ =0x00002178
	adds r0, r5, r1
	ldr r0, [r0]
	movs r1, #0x86
	lsls r1, r1, #0xb
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #6
	cmp r0, r1
	bne _0803E740
	ldr r1, _0803E738 @ =0x0000217A
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _0803E73C
	movs r0, #7
	b _0803E778
	.align 2, 0
_0803E734: .4byte 0x00002178
_0803E738: .4byte 0x0000217A
_0803E73C:
	movs r0, #0
	b _0803E778
_0803E740:
	adds r0, r2, #0
	adds r1, r3, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E752
	movs r0, #6
	b _0803E778
_0803E752:
	cmp r4, #6
	bne _0803E764
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803E760
	movs r0, #2
	b _0803E778
_0803E760:
	movs r0, #3
	b _0803E778
_0803E764:
	cmp r4, #0
	bne _0803E776
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803E772
	movs r0, #4
	b _0803E778
_0803E772:
	movs r0, #5
	b _0803E778
_0803E776:
	movs r0, #1
_0803E778:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0803E780
func_0803E780: @ 0x0803E780
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803E79C @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	cmp r0, #0
	bge _0803E7A0
	movs r0, #0
	b _0803E8DA
	.align 2, 0
_0803E79C: .4byte 0x000021CA
_0803E7A0:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r7, [r4, #1]
	ldrb r6, [r4, #2]
	ldrb r4, [r4, #3]
	mov sb, r4
	ldr r0, _0803E7D0 @ =0x00001CD4
	adds r4, r5, r0
	adds r0, r4, #0
	bl func_080A0490
	mov r8, r0
	cmp r0, #0x15
	bne _0803E84E
	cmp r7, #2
	bne _0803E7DC
	cmp r6, #9
	bne _0803E7D4
	movs r0, #0xe
	b _0803E8DA
	.align 2, 0
_0803E7D0: .4byte 0x00001CD4
_0803E7D4:
	cmp r6, #0xd
	bne _0803E7DC
	movs r0, #0xf
	b _0803E8DA
_0803E7DC:
	ldr r1, _0803E7F0 @ =0x0000216C
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _0803E7F4
	movs r0, #0x10
	b _0803E8DA
	.align 2, 0
_0803E7F0: .4byte 0x0000216C
_0803E7F4:
	ldr r1, _0803E828 @ =0x00001CD4
	adds r0, r5, r1
	bl func_080A0384
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r4, r1, #0x1f
	mov r8, r4
	adds r0, r7, #0
	adds r1, r6, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803E81C
	ldr r0, [r5, #8]
	cmp r0, #3
	beq _0803E81C
	cmp r0, #4
	bne _0803E830
_0803E81C:
	mov r0, r8
	cmp r0, #0
	beq _0803E82C
	movs r0, #0xc
	b _0803E8DA
	.align 2, 0
_0803E828: .4byte 0x00001CD4
_0803E82C:
	movs r0, #0xd
	b _0803E8DA
_0803E830:
	mov r1, sb
	cmp r1, #3
	bne _0803E842
	cmp r4, #0
	beq _0803E83E
	movs r0, #9
	b _0803E8DA
_0803E83E:
	movs r0, #0xb
	b _0803E8DA
_0803E842:
	cmp r4, #0
	beq _0803E84A
	movs r0, #8
	b _0803E8DA
_0803E84A:
	movs r0, #0xa
	b _0803E8DA
_0803E84E:
	ldr r1, _0803E86C @ =0x00001EE4
	adds r0, r5, r1
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bls _0803E87E
	adds r0, r7, #0
	adds r1, r6, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E870
	movs r0, #7
	b _0803E8DA
	.align 2, 0
_0803E86C: .4byte 0x00001EE4
_0803E870:
	mov r0, sb
	cmp r0, #3
	bne _0803E87A
	movs r0, #4
	b _0803E8DA
_0803E87A:
	movs r0, #3
	b _0803E8DA
_0803E87E:
	adds r0, r4, #0
	movs r1, #0x15
	bl func_080A01F8
	cmp r7, #3
	bne _0803E8BC
	cmp r6, #0xe
	bne _0803E8BC
	mov r1, r8
	cmp r1, #0
	bne _0803E8BC
	cmp r0, #0
	beq _0803E8BC
	bl GetLove__C12Bachelorette
	ldr r1, _0803E8B4 @ =0x0000270F
	cmp r0, r1
	bls _0803E8BC
	ldr r1, _0803E8B8 @ =0x000021A4
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _0803E8BC
	movs r0, #6
	b _0803E8DA
	.align 2, 0
_0803E8B4: .4byte 0x0000270F
_0803E8B8: .4byte 0x000021A4
_0803E8BC:
	adds r0, r7, #0
	adds r1, r6, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E8CE
	movs r0, #5
	b _0803E8DA
_0803E8CE:
	mov r0, sb
	cmp r0, #3
	beq _0803E8D8
	movs r0, #1
	b _0803E8DA
_0803E8D8:
	movs r0, #2
_0803E8DA:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0803E8E8
func_0803E8E8: @ 0x0803E8E8
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803E924 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	cmp r0, #0
	blt _0803E948
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r2, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	cmp r2, #2
	bne _0803E92C
	cmp r1, #0x1e
	bne _0803E92C
	ldr r3, _0803E928 @ =0x000021A2
	adds r0, r5, r3
	ldrb r0, [r0]
	lsrs r0, r0, #6
	cmp r0, #2
	beq _0803E92C
	movs r0, #5
	b _0803E968
	.align 2, 0
_0803E924: .4byte 0x000021CA
_0803E928: .4byte 0x000021A2
_0803E92C:
	adds r0, r2, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E93C
	movs r0, #4
	b _0803E968
_0803E93C:
	ldr r1, _0803E94C @ =0x0000215A
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	cmp r0, #0
	bge _0803E950
_0803E948:
	movs r0, #0
	b _0803E968
	.align 2, 0
_0803E94C: .4byte 0x0000215A
_0803E950:
	cmp r4, #1
	beq _0803E958
	cmp r4, #3
	bne _0803E95C
_0803E958:
	movs r0, #3
	b _0803E968
_0803E95C:
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0803E966
	movs r0, #2
	b _0803E968
_0803E966:
	movs r0, #1
_0803E968:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0803E970
func_0803E970: @ 0x0803E970
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	adds r6, r4, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803E998
	movs r0, #5
	b _0803E9DA
_0803E998:
	ldr r1, _0803E9A8 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	cmp r0, #0
	bge _0803E9AC
	movs r0, #0
	b _0803E9DA
	.align 2, 0
_0803E9A8: .4byte 0x000021CA
_0803E9AC:
	ldr r1, _0803E9C8 @ =0x00002174
	adds r0, r5, r1
	ldr r0, [r0]
	movs r1, #0xc2
	lsls r1, r1, #0xb
	ands r0, r1
	movs r1, #0x82
	lsls r1, r1, #0xb
	cmp r0, r1
	bne _0803E9D0
	cmp r4, #6
	bne _0803E9CC
	movs r0, #4
	b _0803E9DA
	.align 2, 0
_0803E9C8: .4byte 0x00002174
_0803E9CC:
	movs r0, #3
	b _0803E9DA
_0803E9D0:
	cmp r6, #6
	beq _0803E9D8
	movs r0, #1
	b _0803E9DA
_0803E9D8:
	movs r0, #2
_0803E9DA:
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803E9E4
func_0803E9E4: @ 0x0803E9E4
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r2, [r4, #3]
	adds r4, r2, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803EA0C
	movs r0, #5
	b _0803EA52
_0803EA0C:
	ldr r1, _0803EA1C @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	cmp r0, #0
	bge _0803EA20
	movs r0, #0
	b _0803EA52
	.align 2, 0
_0803EA1C: .4byte 0x000021CA
_0803EA20:
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803EA50
	cmp r4, #6
	bne _0803EA4C
	ldr r1, _0803EA44 @ =0x00002174
	adds r0, r5, r1
	ldr r0, [r0]
	movs r1, #0xc2
	lsls r1, r1, #0xb
	ands r0, r1
	movs r1, #0x82
	lsls r1, r1, #0xb
	cmp r0, r1
	bne _0803EA48
	movs r0, #4
	b _0803EA52
	.align 2, 0
_0803EA44: .4byte 0x00002174
_0803EA48:
	movs r0, #3
	b _0803EA52
_0803EA4C:
	movs r0, #1
	b _0803EA52
_0803EA50:
	movs r0, #2
_0803EA52:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803EA5C
func_0803EA5C: @ 0x0803EA5C
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	mov r5, sp
	adds r1, r4, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r1, [r5, #3]
	ldr r0, _0803EA88 @ =0x00002186
	adds r4, r4, r0
	ldrb r0, [r4]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	cmp r0, #2
	bne _0803EA8C
	cmp r1, #3
	bne _0803EA8C
	movs r0, #1
	b _0803EA8E
	.align 2, 0
_0803EA88: .4byte 0x00002186
_0803EA8C:
	movs r0, #0
_0803EA8E:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803EA98
func_0803EA98: @ 0x0803EA98
	push {r4, lr}
	sub sp, #4
	adds r1, r0, #0
	ldr r2, _0803EAB0 @ =0x000021CA
	adds r0, r1, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	cmp r0, #0
	bge _0803EAB4
	movs r0, #0
	b _0803EAD2
	.align 2, 0
_0803EAB0: .4byte 0x000021CA
_0803EAB4:
	mov r4, sp
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803EAD0
	movs r0, #1
	b _0803EAD2
_0803EAD0:
	movs r0, #2
_0803EAD2:
	add sp, #4
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803EADC
func_0803EADC: @ 0x0803EADC
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803EAF4 @ =0x000021CA
	adds r0, r5, r1
	ldrb r1, [r0]
	movs r0, #0x7c
	ands r0, r1
	cmp r0, #0
	beq _0803EAF8
	movs r0, #0
	b _0803EB38
	.align 2, 0
_0803EAF4: .4byte 0x000021CA
_0803EAF8:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	cmp r0, #2
	bne _0803EB16
	cmp r1, #3
	bne _0803EB16
	movs r0, #9
	b _0803EB38
_0803EB16:
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803EB24
	movs r0, #8
	b _0803EB38
_0803EB24:
	cmp r4, #1
	beq _0803EB32
	cmp r4, #3
	beq _0803EB32
	ldr r0, [r5, #8]
	cmp r0, #0
	beq _0803EB36
_0803EB32:
	movs r0, #1
	b _0803EB38
_0803EB36:
	movs r0, #2
_0803EB38:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0803EB40
func_0803EB40: @ 0x0803EB40
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803EB78 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	cmp r0, #0
	blt _0803EB92
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	cmp r0, #1
	bne _0803EB92
	movs r0, #1
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803EB7C
	movs r0, #4
	b _0803EB94
	.align 2, 0
_0803EB78: .4byte 0x000021CA
_0803EB7C:
	cmp r4, #0
	bne _0803EB8E
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803EB8A
	movs r0, #2
	b _0803EB94
_0803EB8A:
	movs r0, #3
	b _0803EB94
_0803EB8E:
	movs r0, #1
	b _0803EB94
_0803EB92:
	movs r0, #0
_0803EB94:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0803EB9C
func_0803EB9C: @ 0x0803EB9C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803EBB8 @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	cmp r0, #0
	bge _0803EBBC
	movs r0, #0
	b _0803EC36
	.align 2, 0
_0803EBB8: .4byte 0x000021CA
_0803EBBC:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r6, [r4, #1]
	ldrb r0, [r4, #2]
	mov r8, r0
	ldrb r4, [r4, #3]
	ldr r1, _0803EBF0 @ =0x00001E28
	adds r0, r5, r1
	bl GetRivalEventCount__C12Bachelorette
	adds r7, r0, #0
	cmp r7, #4
	bls _0803EC0A
	adds r0, r6, #0
	mov r1, r8
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803EBF4
	movs r0, #9
	b _0803EC36
	.align 2, 0
_0803EBF0: .4byte 0x00001E28
_0803EBF4:
	cmp r4, #4
	bne _0803EC06
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803EC02
	movs r0, #6
	b _0803EC36
_0803EC02:
	movs r0, #7
	b _0803EC36
_0803EC06:
	movs r0, #5
	b _0803EC36
_0803EC0A:
	adds r0, r6, #0
	mov r1, r8
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803EC1C
	movs r0, #8
	b _0803EC36
_0803EC1C:
	cmp r7, #0
	beq _0803EC34
	cmp r4, #1
	bne _0803EC28
	movs r0, #3
	b _0803EC36
_0803EC28:
	cmp r4, #4
	bne _0803EC30
	movs r0, #4
	b _0803EC36
_0803EC30:
	movs r0, #2
	b _0803EC36
_0803EC34:
	movs r0, #1
_0803EC36:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803EC44
func_0803EC44: @ 0x0803EC44
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, _0803EC5C @ =0x000021CA
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	cmp r0, #0
	bge _0803EC60
	movs r0, #0
	b _0803ECB8
	.align 2, 0
_0803EC5C: .4byte 0x000021CA
_0803EC60:
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r6, [r4, #3]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803EC80
	movs r0, #4
	b _0803ECB8
_0803EC80:
	ldr r0, _0803ECA0 @ =0x00001DAC
	adds r4, r5, r0
	adds r0, r4, #0
	bl func_0809ECD8
	cmp r0, #0
	beq _0803ECA4
	adds r0, r4, #0
	bl func_0809ECE0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803ECA4
	movs r0, #5
	b _0803ECB8
	.align 2, 0
_0803ECA0: .4byte 0x00001DAC
_0803ECA4:
	cmp r6, #4
	bne _0803ECB6
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803ECB2
	movs r0, #2
	b _0803ECB8
_0803ECB2:
	movs r0, #3
	b _0803ECB8
_0803ECB6:
	movs r0, #1
_0803ECB8:
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start func_0803ECC0
func_0803ECC0: @ 0x0803ECC0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r6, [r4, #3]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803ECE6
	movs r0, #5
	b _0803EDC4
_0803ECE6:
	ldr r7, [r5, #8]
	ldr r0, _0803ED28 @ =0x00001F64
	adds r4, r5, r0
	adds r0, r4, #0
	bl func_0809EB68
	cmp r0, #0
	beq _0803EDA4
	adds r0, r4, #0
	bl func_0809EB70
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803EDA4
	adds r0, r4, #0
	bl func_0809EB8C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0803EDA4
	subs r0, r7, #3
	cmp r0, #1
	bls _0803EDA4
	adds r0, r4, #0
	bl func_0809EB68
	cmp r0, #0xd
	bhi _0803EDA4
	lsls r0, r0, #2
	ldr r1, _0803ED2C @ =_0803ED30
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0803ED28: .4byte 0x00001F64
_0803ED2C: .4byte _0803ED30
_0803ED30: @ jump table
	.4byte _0803EDA4 @ case 0
	.4byte _0803ED68 @ case 1
	.4byte _0803ED8C @ case 2
	.4byte _0803ED90 @ case 3
	.4byte _0803ED94 @ case 4
	.4byte _0803ED98 @ case 5
	.4byte _0803ED98 @ case 6
	.4byte _0803ED98 @ case 7
	.4byte _0803ED9C @ case 8
	.4byte _0803ED9C @ case 9
	.4byte _0803ED9C @ case 10
	.4byte _0803EDA0 @ case 11
	.4byte _0803EDA0 @ case 12
	.4byte _0803EDA0 @ case 13
_0803ED68:
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r5, r1
	bl GetUpgradeLevel__C9FarmHouse
	cmp r0, #1
	beq _0803ED84
	cmp r0, #1
	blo _0803ED80
	cmp r0, #2
	beq _0803ED88
	b _0803EDA4
_0803ED80:
	movs r0, #6
	b _0803EDC4
_0803ED84:
	movs r0, #7
	b _0803EDC4
_0803ED88:
	movs r0, #0xd
	b _0803EDC4
_0803ED8C:
	movs r0, #8
	b _0803EDC4
_0803ED90:
	movs r0, #9
	b _0803EDC4
_0803ED94:
	movs r0, #0xe
	b _0803EDC4
_0803ED98:
	movs r0, #0xa
	b _0803EDC4
_0803ED9C:
	movs r0, #0xb
	b _0803EDC4
_0803EDA0:
	movs r0, #0xc
	b _0803EDC4
_0803EDA4:
	cmp r6, #5
	bgt _0803EDB2
	cmp r6, #4
	bge _0803EDBA
	cmp r6, #0
	beq _0803EDC2
	b _0803EDB6
_0803EDB2:
	cmp r6, #6
	beq _0803EDBE
_0803EDB6:
	movs r0, #1
	b _0803EDC4
_0803EDBA:
	movs r0, #2
	b _0803EDC4
_0803EDBE:
	movs r0, #3
	b _0803EDC4
_0803EDC2:
	movs r0, #4
_0803EDC4:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0803EDCC
func_0803EDCC: @ 0x0803EDCC
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r6, [r4, #1]
	ldrb r0, [r4, #2]
	adds r7, r0, #0
	ldrb r4, [r4, #3]
	adds r0, r6, #0
	adds r1, r7, #0
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803EDF8
	movs r0, #5
	b _0803EE48
_0803EDF8:
	cmp r6, #2
	bne _0803EE18
	cmp r7, #0x1e
	bne _0803EE18
	ldr r1, _0803EE14 @ =0x000021A2
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _0803EE18
	movs r0, #6
	b _0803EE48
	.align 2, 0
_0803EE14: .4byte 0x000021A2
_0803EE18:
	ldr r1, _0803EE28 @ =0x0000215A
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	cmp r0, #0
	bge _0803EE2C
	movs r0, #0
	b _0803EE48
	.align 2, 0
_0803EE28: .4byte 0x0000215A
_0803EE2C:
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803EE46
	cmp r4, #1
	bne _0803EE3A
	movs r0, #1
	b _0803EE48
_0803EE3A:
	cmp r4, #3
	bne _0803EE42
	movs r0, #2
	b _0803EE48
_0803EE42:
	movs r0, #3
	b _0803EE48
_0803EE46:
	movs r0, #4
_0803EE48:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0803EE50
func_0803EE50: @ 0x0803EE50
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	mov r4, sp
	adds r1, r5, #0
	adds r1, #0x10
	mov r0, sp
	bl func_0803D52C
	ldrb r0, [r4, #1]
	ldrb r1, [r4, #2]
	ldrb r4, [r4, #3]
	bl func_0803D644
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0803EE76
	movs r0, #4
	b _0803EE8A
_0803EE76:
	cmp r4, #1
	bne _0803EE88
	ldr r0, [r5, #8]
	cmp r0, #0
	bne _0803EE84
	movs r0, #2
	b _0803EE8A
_0803EE84:
	movs r0, #3
	b _0803EE8A
_0803EE88:
	movs r0, #1
_0803EE8A:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803EE94
func_0803EE94: @ 0x0803EE94
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xd3
	lsls r0, r0, #2
	adds r1, r4, r0
	ldr r0, _0803EEC4 @ =vtable_unk_080E7810
	str r0, [r1]
	movs r2, #0
	str r2, [r4]
	adds r0, r4, #0
	adds r0, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r4, r3
	str r2, [r1]
	movs r1, #0
	movs r2, #0xc8
	lsls r2, r2, #1
	bl memset
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0803EEC4: .4byte vtable_unk_080E7810

	thumb_func_start func_0803EEC8
func_0803EEC8: @ 0x0803EEC8
	push {lr}
	adds r3, r0, #0
	movs r0, #0xd3
	lsls r0, r0, #2
	adds r2, r3, r0
	ldr r0, _0803EEE8 @ =vtable_unk_080E7810
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0803EEE4
	adds r0, r3, #0
	bl __builtin_delete
_0803EEE4:
	pop {r0}
	bx r0
	.align 2, 0
_0803EEE8: .4byte vtable_unk_080E7810

	thumb_func_start func_0803EEEC
func_0803EEEC: @ 0x0803EEEC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r5, r0, #0
	cmp r1, #0
	beq _0803EFC8
	adds r6, r1, #0
	mov r0, sp
	movs r2, #0xc
	bl memcpy
	movs r4, #0xc
	ldr r1, [sp]
	ldr r0, _0803EF48 @ =0x46464952
	cmp r1, r0
	bne _0803EFC8
	ldr r1, [sp, #8]
	ldr r0, _0803EF4C @ =0x20524353
	cmp r1, r0
	bne _0803EFC8
	ldr r7, [sp, #4]
	movs r0, #0
	str r0, [r5, #4]
	cmp r4, r7
	bhi _0803EF8C
	add r0, sp, #0xc
	mov r8, r0
_0803EF24:
	adds r1, r6, r4
	add r0, sp, #0xc
	movs r2, #8
	bl memcpy
	adds r4, #8
	ldr r1, [sp, #0xc]
	ldr r0, _0803EF50 @ =0x45444F43
	cmp r1, r0
	bne _0803EF54
	movs r0, #0
	str r0, [r5, #8]
	adds r1, r6, r4
	ldm r1!, {r0}
	str r0, [r5, #0xc]
	str r1, [r5, #4]
	b _0803EF82
	.align 2, 0
_0803EF48: .4byte 0x46464952
_0803EF4C: .4byte 0x20524353
_0803EF50: .4byte 0x45444F43
_0803EF54:
	ldr r0, _0803EF70 @ =0x20525453
	cmp r1, r0
	bne _0803EF74
	adds r0, r6, r4
	ldr r1, [r0]
	str r1, [r5, #0x10]
	adds r0, r4, #4
	adds r0, r6, r0
	str r0, [r5, #0x14]
	lsls r1, r1, #2
	adds r0, r0, r1
	str r0, [r5, #0x18]
	b _0803EF82
	.align 2, 0
_0803EF70: .4byte 0x20525453
_0803EF74:
	ldr r0, _0803EFC4 @ =0x504D554A
	cmp r1, r0
	bne _0803EF82
	adds r1, r6, r4
	ldm r1!, {r0}
	str r0, [r5, #0x1c]
	str r1, [r5, #0x20]
_0803EF82:
	mov r1, r8
	ldr r0, [r1, #4]
	adds r4, r4, r0
	cmp r4, r7
	bls _0803EF24
_0803EF8C:
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _0803EFC8
	adds r0, r5, #0
	adds r0, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r4, #0
	str r4, [r1]
	movs r1, #0
	subs r2, #0x24
	bl memset
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r5, r1
	str r4, [r0]
	movs r2, #0xdc
	lsls r2, r2, #1
	adds r0, r5, r2
	subs r2, #0x28
	movs r1, #0
	bl memset
	movs r0, #1
	str r0, [r5]
	b _0803EFCA
	.align 2, 0
_0803EFC4: .4byte 0x504D554A
_0803EFC8:
	movs r0, #0
_0803EFCA:
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803EFD8
func_0803EFD8: @ 0x0803EFD8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _0803F024
	cmp r0, #1
	bne _0803F024
_0803EFE6:
	adds r0, r4, #0
	bl func_0803F0E0
	adds r2, r0, #0
	adds r0, r2, #3
	cmp r0, #5
	bhi _0803F020
	lsls r0, r0, #2
	ldr r1, _0803F000 @ =_0803F004
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0803F000: .4byte _0803F004
_0803F004: @ jump table
	.4byte _0803F01C @ case 0
	.4byte _0803F01C @ case 1
	.4byte _0803F01C @ case 2
	.4byte _0803F020 @ case 3
	.4byte _0803F020 @ case 4
	.4byte _0803F01C @ case 5
_0803F01C:
	movs r0, #0
	str r0, [r4]
_0803F020:
	cmp r2, #0
	beq _0803EFE6
_0803F024:
	ldr r0, [r4]
	pop {r4}
	pop {r1}
	bx r1
_0803F02C:
	.byte 0x00, 0x68, 0x70, 0x47

	thumb_func_start func_0803F030
func_0803F030: @ 0x0803F030
	ldr r0, [r0, #4]
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r0, #0x7f
	ands r0, r1
	bx lr

	thumb_func_start func_0803F03C
func_0803F03C: @ 0x0803F03C
	ldr r0, [r0, #4]
	adds r0, r0, r1
	ldrb r0, [r0]
	lsrs r0, r0, #7
	bx lr
	.align 2, 0

	thumb_func_start func_0803F048
func_0803F048: @ 0x0803F048
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl func_0803F03C
	lsls r0, r0, #0x18
	ldr r1, [r5, #4]
	adds r4, r4, r1
	ldrb r2, [r4, #1]
	ldrb r1, [r4, #2]
	lsls r1, r1, #8
	adds r2, r2, r1
	ldrb r1, [r4, #3]
	lsls r1, r1, #0x10
	adds r2, r2, r1
	ldrb r1, [r4, #4]
	lsls r1, r1, #0x18
	adds r2, r2, r1
	cmp r0, #0
	beq _0803F07A
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	adds r2, r2, r0
_0803F07A:
	adds r0, r2, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803F084
func_0803F084: @ 0x0803F084
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl func_0803F03C
	lsls r0, r0, #0x18
	ldr r1, [r5, #4]
	adds r4, r4, r1
	ldrb r2, [r4, #1]
	ldrb r1, [r4, #2]
	lsls r1, r1, #8
	adds r2, r2, r1
	cmp r0, #0
	beq _0803F0AA
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	adds r2, r2, r0
_0803F0AA:
	adds r0, r2, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0803F0B4
func_0803F0B4: @ 0x0803F0B4
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl func_0803F03C
	lsls r0, r0, #0x18
	ldr r1, [r5, #4]
	adds r4, r4, r1
	ldrb r1, [r4, #1]
	cmp r0, #0
	beq _0803F0D4
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	adds r1, r1, r0
_0803F0D4:
	adds r0, r1, #0
	pop {r4, r5}
	pop {r1}
	bx r1
_0803F0DC:
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start func_0803F0E0
func_0803F0E0: @ 0x0803F0E0
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r1, [r5, #8]
	bl func_0803F030
	cmp r0, #0x24
	bls _0803F0F2
	b _0803F7CE
_0803F0F2:
	lsls r0, r0, #2
	ldr r1, _0803F0FC @ =_0803F100
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0803F0FC: .4byte _0803F100
_0803F100: @ jump table
	.4byte _0803F622 @ case 0
	.4byte _0803F194 @ case 1
	.4byte _0803F1CA @ case 2
	.4byte _0803F204 @ case 3
	.4byte _0803F23A @ case 4
	.4byte _0803F274 @ case 5
	.4byte _0803F2B6 @ case 6
	.4byte _0803F2F2 @ case 7
	.4byte _0803F31E @ case 8
	.4byte _0803F34A @ case 9
	.4byte _0803F376 @ case 10
	.4byte _0803F3A8 @ case 11
	.4byte _0803F3E0 @ case 12
	.4byte _0803F416 @ case 13
	.4byte _0803F448 @ case 14
	.4byte _0803F45E @ case 15
	.4byte _0803F474 @ case 16
	.4byte _0803F48A @ case 17
	.4byte _0803F5BC @ case 18
	.4byte _0803F4A6 @ case 19
	.4byte _0803F4D8 @ case 20
	.4byte _0803F506 @ case 21
	.4byte _0803F52A @ case 22
	.4byte _0803F53C @ case 23
	.4byte _0803F62A @ case 24
	.4byte _0803F636 @ case 25
	.4byte _0803F65C @ case 26
	.4byte _0803F682 @ case 27
	.4byte _0803F6A8 @ case 28
	.4byte _0803F6CE @ case 29
	.4byte _0803F6F4 @ case 30
	.4byte _0803F71A @ case 31
	.4byte _0803F736 @ case 32
	.4byte _0803F740 @ case 33
	.4byte _0803F564 @ case 34
	.4byte _0803F590 @ case 35
	.4byte _0803F762 @ case 36
_0803F194:
	adds r3, r5, #0
	adds r3, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _0803F1B0
	subs r0, r1, #1
	str r0, [r2]
_0803F1B0:
	ldr r0, [r2]
	lsls r0, r0, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r1, [r0]
	lsls r1, r1, #2
	movs r3, #0xdc
	lsls r3, r3, #1
	adds r2, r5, r3
	adds r2, r2, r1
	str r4, [r0]
	str r4, [r2]
	b _0803F622
_0803F1CA:
	adds r3, r5, #0
	adds r3, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r1, r5, r4
	ldr r2, [r1]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _0803F1E6
	subs r0, r2, #1
	str r0, [r1]
_0803F1E6:
	ldr r1, [r1]
	lsls r1, r1, #2
	subs r1, #4
	adds r1, r3, r1
	ldr r0, [r1]
	lsls r0, r0, #2
	movs r3, #0xdc
	lsls r3, r3, #1
	adds r2, r5, r3
	adds r2, r2, r0
	ldr r0, [r2]
	adds r0, r0, r4
_0803F1FE:
	str r0, [r1]
	str r0, [r2]
	b _0803F622
_0803F204:
	adds r3, r5, #0
	adds r3, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r1, r5, r4
	ldr r2, [r1]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _0803F220
	subs r0, r2, #1
	str r0, [r1]
_0803F220:
	ldr r1, [r1]
	lsls r1, r1, #2
	subs r1, #4
	adds r1, r3, r1
	ldr r0, [r1]
	lsls r0, r0, #2
	movs r3, #0xdc
	lsls r3, r3, #1
	adds r2, r5, r3
	adds r2, r2, r0
	ldr r0, [r2]
	subs r0, r0, r4
	b _0803F1FE
_0803F23A:
	adds r3, r5, #0
	adds r3, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _0803F256
	subs r0, r1, #1
	str r0, [r2]
_0803F256:
	ldr r0, [r2]
	lsls r0, r0, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r1, [r0]
	lsls r1, r1, #2
	movs r3, #0xdc
	lsls r3, r3, #1
	adds r2, r5, r3
	adds r2, r2, r1
	ldr r1, [r2]
	muls r1, r4, r1
	str r1, [r0]
	str r1, [r2]
	b _0803F622
_0803F274:
	adds r4, r5, #0
	adds r4, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r3, r5, r0
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0803F290
	subs r0, r2, #1
	str r0, [r3]
_0803F290:
	ldr r0, [r3]
	lsls r0, r0, #2
	subs r0, #4
	adds r6, r4, r0
	ldr r0, [r6]
	cmp r1, #0
	bne _0803F2A0
	b _0803F3C8
_0803F2A0:
	lsls r0, r0, #2
	movs r2, #0xdc
	lsls r2, r2, #1
	adds r4, r5, r2
	adds r4, r4, r0
	ldr r0, [r4]
	bl __divsi3
_0803F2B0:
	str r0, [r6]
	str r0, [r4]
	b _0803F622
_0803F2B6:
	adds r4, r5, #0
	adds r4, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r3, r5, r0
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0803F2D2
	subs r0, r2, #1
	str r0, [r3]
_0803F2D2:
	ldr r0, [r3]
	lsls r0, r0, #2
	subs r0, #4
	adds r6, r4, r0
	ldr r0, [r6]
	cmp r1, #0
	beq _0803F3C8
	lsls r0, r0, #2
	movs r2, #0xdc
	lsls r2, r2, #1
	adds r4, r5, r2
	adds r4, r4, r0
	ldr r0, [r4]
	bl __modsi3
	b _0803F2B0
_0803F2F2:
	adds r3, r5, #0
	adds r3, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _0803F30E
	subs r0, r1, #1
	str r0, [r2]
_0803F30E:
	ldr r0, [r2]
	lsls r0, r0, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r1, [r0]
	adds r1, r1, r4
	str r1, [r0]
	b _0803F622
_0803F31E:
	adds r3, r5, #0
	adds r3, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _0803F33A
	subs r0, r1, #1
	str r0, [r2]
_0803F33A:
	ldr r0, [r2]
	lsls r0, r0, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r1, [r0]
	subs r1, r1, r4
	str r1, [r0]
	b _0803F622
_0803F34A:
	adds r3, r5, #0
	adds r3, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r2, r5, r1
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _0803F366
	subs r0, r1, #1
	str r0, [r2]
_0803F366:
	ldr r0, [r2]
	lsls r0, r0, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r1, [r0]
	muls r1, r4, r1
	str r1, [r0]
	b _0803F622
_0803F376:
	adds r3, r5, #0
	adds r3, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0803F392
	subs r0, r2, #1
	str r0, [r4]
_0803F392:
	cmp r1, #0
	beq _0803F3C8
	ldr r4, [r4]
	lsls r4, r4, #2
	subs r4, #4
	adds r4, r3, r4
	ldr r0, [r4]
	bl __divsi3
	str r0, [r4]
	b _0803F622
_0803F3A8:
	adds r3, r5, #0
	adds r3, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0803F3C4
	subs r0, r2, #1
	str r0, [r4]
_0803F3C4:
	cmp r1, #0
	bne _0803F3CE
_0803F3C8:
	movs r0, #2
	rsbs r0, r0, #0
	b _0803F7D6
_0803F3CE:
	ldr r4, [r4]
	lsls r4, r4, #2
	subs r4, #4
	adds r4, r3, r4
	ldr r0, [r4]
	bl __modsi3
	str r0, [r4]
	b _0803F622
_0803F3E0:
	adds r4, r5, #0
	adds r4, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r2, r5, r1
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _0803F3FC
	subs r0, r1, #1
	str r0, [r2]
_0803F3FC:
	ldr r0, [r2]
	lsls r0, r0, #2
	subs r0, #4
	adds r1, r4, r0
	movs r2, #0
	ldr r0, [r1]
	cmp r0, #0
	beq _0803F412
	rsbs r0, r3, #0
	orrs r0, r3
	lsrs r2, r0, #0x1f
_0803F412:
	str r2, [r1]
	b _0803F622
_0803F416:
	adds r3, r5, #0
	adds r3, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r4, [r0]
	cmp r1, #0
	beq _0803F432
	subs r0, r1, #1
	str r0, [r2]
_0803F432:
	ldr r0, [r2]
	lsls r0, r0, #2
	subs r0, #4
	adds r1, r3, r0
	movs r2, #0
	ldr r0, [r1]
	cmp r0, #0
	bne _0803F4A2
	cmp r4, #0
	beq _0803F412
	b _0803F4A2
_0803F448:
	movs r1, #0xda
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x20
	ldr r1, [r0]
	adds r1, #1
	str r1, [r0]
	b _0803F622
_0803F45E:
	movs r2, #0xda
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x20
	ldr r1, [r0]
	subs r1, #1
	str r1, [r0]
	b _0803F622
_0803F474:
	movs r3, #0xda
	lsls r3, r3, #1
	adds r0, r5, r3
	ldr r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r0, #0x20
	ldr r1, [r0]
	rsbs r1, r1, #0
	str r1, [r0]
	b _0803F622
_0803F48A:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r0, r5, r4
	ldr r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r5
	adds r1, r0, #0
	adds r1, #0x20
	movs r2, #0
	ldr r0, [r1]
	cmp r0, #0
	bne _0803F412
_0803F4A2:
	movs r2, #1
	b _0803F412
_0803F4A6:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	adds r4, r5, #0
	adds r4, #0x24
	lsls r0, r0, #2
	adds r1, r0, r5
	movs r0, #0xdc
	lsls r0, r0, #1
	adds r1, r1, r0
	movs r2, #0xda
	lsls r2, r2, #1
	adds r3, r5, r2
	ldr r2, [r3]
	cmp r2, #0x63
	bls _0803F4CA
	b _0803F7C6
_0803F4CA:
	lsls r0, r2, #2
	adds r0, r4, r0
	ldr r1, [r1]
	str r1, [r0]
	adds r0, r2, #1
	str r0, [r3]
	b _0803F7C6
_0803F4D8:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r2, r2, #2
	adds r2, r2, r5
	lsls r0, r0, #2
	adds r4, #4
	adds r1, r5, r4
	adds r1, r1, r0
	ldr r0, [r2, #0x20]
	str r0, [r1]
	ldr r0, [r3]
	cmp r0, #0
	bne _0803F500
	b _0803F7C6
_0803F500:
	subs r0, #1
	str r0, [r3]
	b _0803F7C6
_0803F506:
	adds r4, r5, #0
	adds r4, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	ldr r1, [r6]
	lsls r2, r1, #2
	subs r0, r2, #4
	adds r0, r4, r0
	ldr r3, [r0]
	cmp r1, #0x63
	bls _0803F520
	b _0803F622
_0803F520:
	adds r0, r4, r2
	str r3, [r0]
	adds r0, r1, #1
	str r0, [r6]
	b _0803F622
_0803F52A:
	movs r2, #0xda
	lsls r2, r2, #1
	adds r1, r5, r2
	ldr r0, [r1]
	cmp r0, #0
	beq _0803F622
	subs r0, #1
	str r0, [r1]
	b _0803F622
_0803F53C:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	adds r4, r0, #0
	adds r3, r5, #0
	adds r3, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	cmp r1, #0x63
	bls _0803F558
	b _0803F7C6
_0803F558:
	lsls r0, r1, #2
	adds r0, r3, r0
	str r4, [r0]
	adds r0, r1, #1
	str r0, [r2]
	b _0803F7C6
_0803F564:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F084
	adds r4, r0, #0
	adds r3, r5, #0
	adds r3, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r2, r5, r1
	ldr r1, [r2]
	cmp r1, #0x63
	bhi _0803F588
	lsls r0, r1, #2
	adds r0, r3, r0
	str r4, [r0]
	adds r0, r1, #1
	str r0, [r2]
_0803F588:
	ldr r0, [r5, #8]
	adds r0, #3
	str r0, [r5, #8]
	b _0803F7D4
_0803F590:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F0B4
	adds r4, r0, #0
	adds r3, r5, #0
	adds r3, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	cmp r1, #0x63
	bhi _0803F5B4
	lsls r0, r1, #2
	adds r0, r3, r0
	str r4, [r0]
	adds r0, r1, #1
	str r0, [r2]
_0803F5B4:
	ldr r0, [r5, #8]
	adds r0, #2
	str r0, [r5, #8]
	b _0803F7D4
_0803F5BC:
	adds r4, r5, #0
	adds r4, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r3, r5, r1
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _0803F5D8
	subs r0, r1, #1
	str r0, [r3]
_0803F5D8:
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _0803F5EA
	subs r0, r1, #1
	str r0, [r3]
_0803F5EA:
	cmp r2, r6
	ble _0803F5FC
	ldr r2, [r3]
	cmp r2, #0x63
	bhi _0803F622
	lsls r0, r2, #2
	adds r0, r4, r0
	movs r1, #1
	b _0803F61C
_0803F5FC:
	cmp r2, r6
	bge _0803F610
	ldr r2, [r3]
	cmp r2, #0x63
	bhi _0803F622
	lsls r0, r2, #2
	adds r0, r4, r0
	movs r1, #1
	rsbs r1, r1, #0
	b _0803F61C
_0803F610:
	ldr r2, [r3]
	cmp r2, #0x63
	bhi _0803F622
	lsls r0, r2, #2
	adds r0, r4, r0
	movs r1, #0
_0803F61C:
	str r1, [r0]
	adds r0, r2, #1
	str r0, [r3]
_0803F622:
	ldr r0, [r5, #8]
	adds r0, #1
	str r0, [r5, #8]
	b _0803F7D4
_0803F62A:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	str r0, [r5, #8]
	b _0803F7D4
_0803F636:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	adds r2, r0, #0
	ldr r0, [r5, #8]
	adds r0, #5
	str r0, [r5, #8]
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r0, [r1]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0, #0x20]
	cmp r0, #0
	bge _0803F72A
	str r2, [r5, #8]
	b _0803F72A
_0803F65C:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	adds r2, r0, #0
	ldr r0, [r5, #8]
	adds r0, #5
	str r0, [r5, #8]
	movs r4, #0xda
	lsls r4, r4, #1
	adds r1, r5, r4
	ldr r0, [r1]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0, #0x20]
	cmp r0, #0
	bgt _0803F72A
	str r2, [r5, #8]
	b _0803F72A
_0803F682:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	adds r2, r0, #0
	ldr r0, [r5, #8]
	adds r0, #5
	str r0, [r5, #8]
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	ldr r0, [r1]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0, #0x20]
	cmp r0, #0
	bne _0803F72A
	str r2, [r5, #8]
	b _0803F72A
_0803F6A8:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	adds r2, r0, #0
	ldr r0, [r5, #8]
	adds r0, #5
	str r0, [r5, #8]
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r0, [r1]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0, #0x20]
	cmp r0, #0
	beq _0803F72A
	str r2, [r5, #8]
	b _0803F72A
_0803F6CE:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	adds r2, r0, #0
	ldr r0, [r5, #8]
	adds r0, #5
	str r0, [r5, #8]
	movs r4, #0xda
	lsls r4, r4, #1
	adds r1, r5, r4
	ldr r0, [r1]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0, #0x20]
	cmp r0, #0
	blt _0803F72A
	str r2, [r5, #8]
	b _0803F72A
_0803F6F4:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	adds r2, r0, #0
	ldr r0, [r5, #8]
	adds r0, #5
	str r0, [r5, #8]
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	ldr r0, [r1]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0, #0x20]
	cmp r0, #0
	ble _0803F72A
	str r2, [r5, #8]
	b _0803F72A
_0803F71A:
	movs r2, #0xda
	lsls r2, r2, #1
	adds r1, r5, r2
	ldr r0, [r1]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0, #0x20]
	str r0, [r5, #8]
_0803F72A:
	ldr r0, [r1]
	cmp r0, #0
	beq _0803F7D4
	subs r0, #1
	str r0, [r1]
	b _0803F7D4
_0803F736:
	ldr r0, [r5, #8]
	adds r0, #1
	str r0, [r5, #8]
	movs r0, #2
	b _0803F7D6
_0803F740:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	adds r1, r0, #0
	ldr r0, [r5, #8]
	adds r0, #5
	str r0, [r5, #8]
	movs r3, #0xd3
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r2, [r0, #0x10]
	adds r0, r5, #0
	bl _call_via_r2
	b _0803F7D6
_0803F762:
	ldr r1, [r5, #8]
	adds r0, r5, #0
	bl func_0803F048
	ldr r1, [r5, #0x20]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	adds r4, r1, r0
	adds r3, r4, #0
	adds r3, #8
	ldr r0, [r4]
	lsls r0, r0, #3
	adds r0, #8
	adds r6, r4, r0
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r0, [r0, #0x20]
	str r0, [sp, #4]
	cmp r1, #0
	beq _0803F798
	subs r0, r1, #1
	str r0, [r2]
_0803F798:
	movs r0, #0
	str r0, [sp]
	adds r0, r3, #0
	adds r1, r6, #0
	add r2, sp, #4
	movs r3, #0
	bl func_080E0EB4
	adds r2, r0, #0
	cmp r2, r6
	beq _0803F7BC
	ldr r1, [r2]
	ldr r0, [sp, #4]
	cmp r1, r0
	bne _0803F7BC
	ldr r0, [r2, #4]
	str r0, [r5, #8]
	b _0803F7D4
_0803F7BC:
	ldr r0, [r4, #4]
	cmp r0, #0
	ble _0803F7C6
	str r0, [r5, #8]
	b _0803F7D4
_0803F7C6:
	ldr r0, [r5, #8]
	adds r0, #5
	str r0, [r5, #8]
	b _0803F7D4
_0803F7CE:
	movs r0, #1
	rsbs r0, r0, #0
	b _0803F7D6
_0803F7D4:
	movs r0, #0
_0803F7D6:
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0803F7E0:
	.byte 0x00, 0xB5, 0x02, 0x1C, 0x10, 0x69, 0x81, 0x42, 0x04, 0xD9, 0x01, 0x48, 0x08, 0xE0, 0x00, 0x00
	.byte 0xA4, 0x9E, 0x0F, 0x08, 0x50, 0x69, 0x89, 0x00, 0x09, 0x18, 0x90, 0x69, 0x09, 0x68, 0x40, 0x18
	.byte 0x02, 0xBC, 0x08, 0x47

	thumb_func_start func_0803F804
func_0803F804: @ 0x0803F804
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	bl func_0803EE94
	movs r0, #0xd3
	lsls r0, r0, #2
	adds r1, r5, r0
	ldr r0, _0803F838 @ =vtable_unk_080E7824
	str r0, [r1]
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	str r4, [r0]
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	movs r1, #0
	str r1, [r0]
	adds r2, #4
	adds r0, r5, r2
	str r1, [r0]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0803F838: .4byte vtable_unk_080E7824
_0803F83C:
	.byte 0x70, 0xB5, 0x06, 0x1C
	.byte 0x0C, 0x1C, 0x15, 0x1C, 0xFF, 0xF7, 0x26, 0xFB, 0xD3, 0x20, 0x80, 0x00, 0x31, 0x18, 0x09, 0x48
	.byte 0x08, 0x60, 0xD4, 0x21, 0x89, 0x00, 0x70, 0x18, 0x04, 0x60, 0x04, 0x31, 0x70, 0x18, 0x05, 0x60
	.byte 0xD6, 0x20, 0x80, 0x00, 0x31, 0x18, 0x00, 0x20, 0x08, 0x60, 0x30, 0x1C, 0x70, 0xBC, 0x02, 0xBC
	.byte 0x08, 0x47, 0x00, 0x00, 0x24, 0x78, 0x0E, 0x08

	thumb_func_start func_0803F878
func_0803F878: @ 0x0803F878
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r2, #0
	ldr r0, _0803F89C @ =0x080F89D4
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r1, [r1]
	adds r0, r4, #0
	bl func_0803EEEC
	movs r0, #0xd6
	lsls r0, r0, #2
	adds r4, r4, r0
	str r5, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0803F89C: .4byte 0x080F89D4

	thumb_func_start func_0803F8A0
func_0803F8A0: @ 0x0803F8A0
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r0, r2
	str r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start func_0803F8AC
func_0803F8AC: @ 0x0803F8AC
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r1, #0
	str r1, [r0]
	bx lr

	thumb_func_start func_0803F8B8
func_0803F8B8: @ 0x0803F8B8
	push {r4, lr}
	adds r4, r1, #0
	adds r1, r0, #0
	adds r1, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r3, r0, r2
	ldr r2, [r3]
	cmp r2, #0x63
	bhi _0803F8D6
	lsls r0, r2, #2
	adds r0, r1, r0
	str r4, [r0]
	adds r0, r2, #1
	str r0, [r3]
_0803F8D6:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start func_0803F8DC
func_0803F8DC: @ 0x0803F8DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	adds r5, r0, #0
	movs r0, #0xa3
	lsls r0, r0, #1
	cmp r1, r0
	bls _0803F8F6
	bl _08045572
_0803F8F6:
	lsls r0, r1, #2
	ldr r1, _0803F900 @ =_0803F904
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0803F900: .4byte _0803F904
_0803F904: @ jump table
	.4byte _0803FE20 @ case 0
	.4byte _0803FE28 @ case 1
	.4byte _0803FE40 @ case 2
	.4byte _0803FEB2 @ case 3
	.4byte _0803FEEC @ case 4
	.4byte _0803FF26 @ case 5
	.4byte _0804000A @ case 6
	.4byte _0803FFC4 @ case 7
	.4byte _08040044 @ case 8
	.4byte _0804009E @ case 9
	.4byte _080400F6 @ case 10
	.4byte _08040150 @ case 11
	.4byte _080401A8 @ case 12
	.4byte _080401D6 @ case 13
	.4byte _0804021C @ case 14
	.4byte _0804024A @ case 15
	.4byte _080402FE @ case 16
	.4byte _08040278 @ case 17
	.4byte _080402D0 @ case 18
	.4byte _080411C4 @ case 19
	.4byte _08041260 @ case 20
	.4byte _0803FF6C @ case 21
	.4byte _08040344 @ case 22
	.4byte _080403AC @ case 23
	.4byte _08040404 @ case 24
	.4byte _0804041C @ case 25
	.4byte _08040480 @ case 26
	.4byte _08040498 @ case 27
	.4byte _080404DE @ case 28
	.4byte _08045484 @ case 29
	.4byte _080404F6 @ case 30
	.4byte _0804050E @ case 31
	.4byte _08040526 @ case 32
	.4byte _080405DC @ case 33
	.4byte _0804053E @ case 34
	.4byte _0804058C @ case 35
	.4byte _080406C0 @ case 36
	.4byte _0804077C @ case 37
	.4byte _08040868 @ case 38
	.4byte _08040980 @ case 39
	.4byte _08040A10 @ case 40
	.4byte _08040ACC @ case 41
	.4byte _08040BB8 @ case 42
	.4byte _08040CD4 @ case 43
	.4byte _0804062C @ case 44
	.4byte _0804065A @ case 45
	.4byte _080406A8 @ case 46
	.4byte _08040E1C @ case 47
	.4byte _08040E4A @ case 48
	.4byte _08040E62 @ case 49
	.4byte _08040E90 @ case 50
	.4byte _08040EA8 @ case 51
	.4byte _08040EF6 @ case 52
	.4byte _08040F44 @ case 53
	.4byte _08040F92 @ case 54
	.4byte _08040FBC @ case 55
	.4byte _08040FEC @ case 56
	.4byte _08041032 @ case 57
	.4byte _0804108A @ case 58
	.4byte _080410F0 @ case 59
	.4byte _0804110C @ case 60
	.4byte _08041164 @ case 61
	.4byte _0804118C @ case 62
	.4byte _0804129A @ case 63
	.4byte _08041332 @ case 64
	.4byte _08041384 @ case 65
	.4byte _080413D6 @ case 66
	.4byte _0804143C @ case 67
	.4byte _080414A4 @ case 68
	.4byte _08041500 @ case 69
	.4byte _08041514 @ case 70
	.4byte _0804152C @ case 71
	.4byte _08041580 @ case 72
	.4byte _080415C0 @ case 73
	.4byte _08041612 @ case 74
	.4byte _080412B8 @ case 75
	.4byte _08041652 @ case 76
	.4byte _08041690 @ case 77
	.4byte _080416A2 @ case 78
	.4byte _080416F4 @ case 79
	.4byte _0804173C @ case 80
	.4byte _08041860 @ case 81
	.4byte _08041884 @ case 82
	.4byte _080418BC @ case 83
	.4byte _080418F4 @ case 84
	.4byte _08041930 @ case 85
	.4byte _08041948 @ case 86
	.4byte _0804196C @ case 87
	.4byte _080419B4 @ case 88
	.4byte _080419FC @ case 89
	.4byte _08045456 @ case 90
	.4byte _0804428C @ case 91
	.4byte _08043FDE @ case 92
	.4byte _080440CE @ case 93
	.4byte _080440F8 @ case 94
	.4byte _08044122 @ case 95
	.4byte _080451EE @ case 96
	.4byte _08044A94 @ case 97
	.4byte _08044AAC @ case 98
	.4byte _08044AC4 @ case 99
	.4byte _08044FA0 @ case 100
	.4byte _08044FB4 @ case 101
	.4byte _08044FC8 @ case 102
	.4byte _08044FDC @ case 103
	.4byte _08044FF0 @ case 104
	.4byte _08045010 @ case 105
	.4byte _08045028 @ case 106
	.4byte _0804503C @ case 107
	.4byte _08044AE8 @ case 108
	.4byte _08044B0A @ case 109
	.4byte _08044B2C @ case 110
	.4byte _08044050 @ case 111
	.4byte _0804407A @ case 112
	.4byte _080440A4 @ case 113
	.4byte _08044206 @ case 114
	.4byte _08044234 @ case 115
	.4byte _0804425C @ case 116
	.4byte _08044274 @ case 117
	.4byte _080451BE @ case 118
	.4byte _08041A44 @ case 119
	.4byte _08041A8C @ case 120
	.4byte _08041AD4 @ case 121
	.4byte _08041B18 @ case 122
	.4byte _08041B5C @ case 123
	.4byte _08041BCC @ case 124
	.4byte _08041C10 @ case 125
	.4byte _08041C64 @ case 126
	.4byte _08041CB8 @ case 127
	.4byte _08041CFC @ case 128
	.4byte _08041D38 @ case 129
	.4byte _08041D80 @ case 130
	.4byte _08041DC8 @ case 131
	.4byte _08041E10 @ case 132
	.4byte _08041E4C @ case 133
	.4byte _08041E94 @ case 134
	.4byte _08041ED8 @ case 135
	.4byte _08041F2C @ case 136
	.4byte _08041F80 @ case 137
	.4byte _08041FC6 @ case 138
	.4byte _08041FF4 @ case 139
	.4byte _0804200C @ case 140
	.4byte _0804206A @ case 141
	.4byte _08042082 @ case 142
	.4byte _0804209A @ case 143
	.4byte _080420B2 @ case 144
	.4byte _080420CA @ case 145
	.4byte _080420E2 @ case 146
	.4byte _080420FA @ case 147
	.4byte _08042112 @ case 148
	.4byte _0804212A @ case 149
	.4byte _0804203A @ case 150
	.4byte _08042052 @ case 151
	.4byte _08042142 @ case 152
	.4byte _08042170 @ case 153
	.4byte _08042188 @ case 154
	.4byte _080421A0 @ case 155
	.4byte _080421B8 @ case 156
	.4byte _080421D0 @ case 157
	.4byte _080421E8 @ case 158
	.4byte _08042200 @ case 159
	.4byte _080424F0 @ case 160
	.4byte _08042508 @ case 161
	.4byte _08042520 @ case 162
	.4byte _08043532 @ case 163
	.4byte _08042538 @ case 164
	.4byte _08042550 @ case 165
	.4byte _08042568 @ case 166
	.4byte _0804259C @ case 167
	.4byte _080425CA @ case 168
	.4byte _080425E2 @ case 169
	.4byte _08042218 @ case 170
	.4byte _08042230 @ case 171
	.4byte _08042248 @ case 172
	.4byte _08042260 @ case 173
	.4byte _08042278 @ case 174
	.4byte _08042290 @ case 175
	.4byte _08042436 @ case 176
	.4byte _0804245E @ case 177
	.4byte _080424CE @ case 178
	.4byte _08043648 @ case 179
	.4byte _08043676 @ case 180
	.4byte _08043718 @ case 181
	.4byte _08043746 @ case 182
	.4byte _080422A8 @ case 183
	.4byte _080422DE @ case 184
	.4byte _08043798 @ case 185
	.4byte _080437C6 @ case 186
	.4byte _08044B4E @ case 187
	.4byte _08044B70 @ case 188
	.4byte _08044BA4 @ case 189
	.4byte _08042322 @ case 190
	.4byte _08042378 @ case 191
	.4byte _080423D8 @ case 192
	.4byte _08044BFE @ case 193
	.4byte _08044C20 @ case 194
	.4byte _08044C54 @ case 195
	.4byte _08044E3C @ case 196
	.4byte _08044E4A @ case 197
	.4byte _08043578 @ case 198
	.4byte _08044E58 @ case 199
	.4byte _08044E82 @ case 200
	.4byte _0804249E @ case 201
	.4byte _080424B6 @ case 202
	.4byte _08042610 @ case 203
	.4byte _08042654 @ case 204
	.4byte _08042698 @ case 205
	.4byte _080426F0 @ case 206
	.4byte _08042738 @ case 207
	.4byte _080427A0 @ case 208
	.4byte _08042808 @ case 209
	.4byte _08042844 @ case 210
	.4byte _0804287E @ case 211
	.4byte _080428DA @ case 212
	.4byte _080428AC @ case 213
	.4byte _08042908 @ case 214
	.4byte _08042920 @ case 215
	.4byte _0804294E @ case 216
	.4byte _080429A8 @ case 217
	.4byte _080429C0 @ case 218
	.4byte _080429F4 @ case 219
	.4byte _08042A0C @ case 220
	.4byte _08042A34 @ case 221
	.4byte _08042A58 @ case 222
	.4byte _08042A7C @ case 223
	.4byte _08042AA4 @ case 224
	.4byte _08042AD4 @ case 225
	.4byte _08042AEC @ case 226
	.4byte _08042C98 @ case 227
	.4byte _08042CBC @ case 228
	.4byte _08042CE4 @ case 229
	.4byte _08042D1A @ case 230
	.4byte _08042D38 @ case 231
	.4byte _08042D4E @ case 232
	.4byte _08042D72 @ case 233
	.4byte _08042D94 @ case 234
	.4byte _08042D04 @ case 235
	.4byte _08042DB2 @ case 236
	.4byte _08042DD4 @ case 237
	.4byte _08042E04 @ case 238
	.4byte _08043618 @ case 239
	.4byte _08043630 @ case 240
	.4byte _080437FC @ case 241
	.4byte _08043820 @ case 242
	.4byte _08043848 @ case 243
	.4byte _08043DBC @ case 244
	.4byte _08043E30 @ case 245
	.4byte _08043E66 @ case 246
	.4byte _08043E9C @ case 247
	.4byte _08043EC8 @ case 248
	.4byte _08043EF4 @ case 249
	.4byte _08043F0A @ case 250
	.4byte _08044DF0 @ case 251
	.4byte _080423F0 @ case 252
	.4byte _0804241E @ case 253
	.4byte _080442D2 @ case 254
	.4byte _080442EA @ case 255
	.4byte _08044336 @ case 256
	.4byte _080443C0 @ case 257
	.4byte _08044406 @ case 258
	.4byte _08044472 @ case 259
	.4byte _0804448C @ case 260
	.4byte _080444D6 @ case 261
	.4byte _08044562 @ case 262
	.4byte _080445BA @ case 263
	.4byte _08044604 @ case 264
	.4byte _0804464E @ case 265
	.4byte _08044698 @ case 266
	.4byte _0804451A @ case 267
	.4byte _080446E0 @ case 268
	.4byte _08044728 @ case 269
	.4byte _08044816 @ case 270
	.4byte _08044912 @ case 271
	.4byte _08044A34 @ case 272
	.4byte _08044A4C @ case 273
	.4byte _08044A64 @ case 274
	.4byte _08044A7C @ case 275
	.4byte _08044CAE @ case 276
	.4byte _080441AC @ case 277
	.4byte _080441C2 @ case 278
	.4byte _080441E4 @ case 279
	.4byte _08044850 @ case 280
	.4byte _08044896 @ case 281
	.4byte _080448C4 @ case 282
	.4byte _08044D58 @ case 283
	.4byte _08044D90 @ case 284
	.4byte _08044DB0 @ case 285
	.4byte _08044DD0 @ case 286
	.4byte _08042E34 @ case 287
	.4byte _0804315A @ case 288
	.4byte _08043458 @ case 289
	.4byte _08043484 @ case 290
	.4byte _080434BA @ case 291
	.4byte _080434E0 @ case 292
	.4byte _0804358E @ case 293
	.4byte _08043F2C @ case 294
	.4byte _08043F7C @ case 295
	.4byte _08044038 @ case 296
	.4byte _080453CC @ case 297
	.4byte _0804532A @ case 298
	.4byte _0804414C @ case 299
	.4byte _08044164 @ case 300
	.4byte _08044D28 @ case 301
	.4byte _080453E0 @ case 302
	.4byte _08044F48 @ case 303
	.4byte _08044F5C @ case 304
	.4byte _08044F74 @ case 305
	.4byte _08044F88 @ case 306
	.4byte _08045496 @ case 307
	.4byte _08043FF2 @ case 308
	.4byte _08044D40 @ case 309
	.4byte _08044EAC @ case 310
	.4byte _08044EE0 @ case 311
	.4byte _08044F14 @ case 312
	.4byte _08045054 @ case 313
	.4byte _080450E2 @ case 314
	.4byte _0804513A @ case 315
	.4byte _0804517A @ case 316
	.4byte _0804510C @ case 317
	.4byte _08045572 @ case 318
	.4byte _08045572 @ case 319
	.4byte _08045572 @ case 320
	.4byte _08045572 @ case 321
	.4byte _080454C8 @ case 322
	.4byte _08045572 @ case 323
	.4byte _0804551E @ case 324
	.4byte _080454FA @ case 325
	.4byte _08041794 @ case 326
_0803FE20:
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	b _0803FE2E
_0803FE28:
	movs r2, #0xda
	lsls r2, r2, #1
	adds r1, r5, r2
_0803FE2E:
	ldr r0, [r1]
	cmp r0, #0
	bne _0803FE38
	bl _08045572
_0803FE38:
	subs r0, #1
	str r0, [r1]
	bl _08045572
_0803FE40:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r2, r5, r3
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r1, #0
	beq _0803FE5E
	subs r0, r1, #1
	str r0, [r2]
_0803FE5E:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _0803FE70
	subs r0, r1, #1
	str r0, [r2]
_0803FE70:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _0803FE82
	subs r0, r1, #1
	str r0, [r2]
_0803FE82:
	ldr r4, [r2]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _0803FE94
	subs r0, r4, #1
	str r0, [r2]
_0803FE94:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _0803FEA4
	bl _08045572
_0803FEA4:
	mov r6, r8
	str r6, [sp]
	adds r2, r7, #0
	bl func_08012064
	bl _08045572
_0803FEB2:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r2, #0
	beq _0803FECE
	subs r0, r2, #1
	str r0, [r4]
_0803FECE:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	bne _0803FEDE
	bl _080448FA
_0803FEDE:
	adds r0, r1, #0
	adds r1, r3, #0
	bl func_080120A4
	adds r2, r0, #0
	bl _08045166
_0803FEEC:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r2, #0
	beq _0803FF08
	subs r0, r2, #1
	str r0, [r4]
_0803FF08:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	bne _0803FF18
	bl _080448FA
_0803FF18:
	adds r0, r1, #0
	adds r1, r3, #0
	bl func_080120C4
	adds r2, r0, #0
	bl _08045166
_0803FF26:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _0803FF42
	subs r0, r1, #1
	str r0, [r4]
_0803FF42:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _0803FF54
	subs r0, r3, #1
	str r0, [r4]
_0803FF54:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _0803FF64
	bl _08045572
_0803FF64:
	bl func_080120E4
	bl _08045572
_0803FF6C:
	adds r7, r5, #0
	adds r7, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r6, r5, r4
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _0803FF88
	subs r0, r1, #1
	str r0, [r6]
_0803FF88:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _0803FF9A
	subs r0, r1, #1
	str r0, [r6]
_0803FF9A:
	ldr r4, [r6]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _0803FFAC
	subs r0, r4, #1
	str r0, [r6]
_0803FFAC:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _0803FFBC
	bl _08045572
_0803FFBC:
	bl func_0801223C
	bl _08045572
_0803FFC4:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _0803FFE0
	subs r0, r1, #1
	str r0, [r4]
_0803FFE0:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _0803FFF2
	subs r0, r3, #1
	str r0, [r4]
_0803FFF2:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08040002
	bl _08045572
_08040002:
	bl func_08012154
	bl _08045572
_0804000A:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r2, #0
	beq _08040026
	subs r0, r2, #1
	str r0, [r4]
_08040026:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	bne _08040036
	bl _080448FA
_08040036:
	adds r0, r1, #0
	adds r1, r3, #0
	bl func_08012114
	adds r2, r0, #0
	bl _08045166
_08040044:
	adds r7, r5, #0
	adds r7, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r6, r5, r2
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08040060
	subs r0, r1, #1
	str r0, [r6]
_08040060:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08040072
	subs r0, r1, #1
	str r0, [r6]
_08040072:
	ldr r4, [r6]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _08040084
	subs r0, r4, #1
	str r0, [r6]
_08040084:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08040094
	bl _08045572
_08040094:
	lsls r3, r3, #0x10
	bl func_08012174
	bl _08045572
_0804009E:
	adds r7, r5, #0
	adds r7, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080400BA
	subs r0, r1, #1
	str r0, [r6]
_080400BA:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080400CC
	subs r0, r1, #1
	str r0, [r6]
_080400CC:
	ldr r4, [r6]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _080400DE
	subs r0, r4, #1
	str r0, [r6]
_080400DE:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080400EE
	bl _08045572
_080400EE:
	bl func_08012174
	bl _08045572
_080400F6:
	adds r7, r5, #0
	adds r7, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08040112
	subs r0, r1, #1
	str r0, [r6]
_08040112:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08040124
	subs r0, r1, #1
	str r0, [r6]
_08040124:
	ldr r4, [r6]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _08040136
	subs r0, r4, #1
	str r0, [r6]
_08040136:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08040146
	bl _08045572
_08040146:
	lsls r3, r3, #0x10
	bl func_0801219C
	bl _08045572
_08040150:
	adds r7, r5, #0
	adds r7, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _0804016C
	subs r0, r1, #1
	str r0, [r6]
_0804016C:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _0804017E
	subs r0, r1, #1
	str r0, [r6]
_0804017E:
	ldr r4, [r6]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _08040190
	subs r0, r4, #1
	str r0, [r6]
_08040190:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080401A0
	bl _08045572
_080401A0:
	bl func_0801219C
	bl _08045572
_080401A8:
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080401BE
	subs r0, r2, #1
	str r0, [r3]
_080401BE:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _080401CE
	bl _0804168A
_080401CE:
	bl func_080121C4
	bl _0804168A
_080401D6:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080401F2
	subs r0, r1, #1
	str r0, [r4]
_080401F2:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _08040204
	subs r0, r3, #1
	str r0, [r4]
_08040204:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08040214
	bl _08045572
_08040214:
	bl func_080121EC
	bl _08045572
_0804021C:
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08040232
	subs r0, r2, #1
	str r0, [r3]
_08040232:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08040242
	bl _08045572
_08040242:
	bl func_08012218
	bl _08045572
_0804024A:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08040260
	subs r0, r2, #1
	str r0, [r3]
_08040260:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08040270
	bl _08045572
_08040270:
	bl func_0801221C
	bl _08045572
_08040278:
	adds r7, r5, #0
	adds r7, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08040294
	subs r0, r1, #1
	str r0, [r6]
_08040294:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080402A6
	subs r0, r1, #1
	str r0, [r6]
_080402A6:
	ldr r4, [r6]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _080402B8
	subs r0, r4, #1
	str r0, [r6]
_080402B8:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080402C8
	bl _08045572
_080402C8:
	bl func_08012274
	bl _08045572
_080402D0:
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080402E6
	subs r0, r2, #1
	str r0, [r3]
_080402E6:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _080402F6
	bl _08045572
_080402F6:
	bl func_080122A0
	bl _08045572
_080402FE:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _0804031A
	subs r0, r1, #1
	str r0, [r4]
_0804031A:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _0804032C
	subs r0, r3, #1
	str r0, [r4]
_0804032C:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _0804033C
	bl _08045572
_0804033C:
	bl func_080122BC
	bl _08045572
_08040344:
	adds r7, r5, #0
	adds r7, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08040360
	subs r0, r1, #1
	str r0, [r6]
_08040360:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08040372
	subs r0, r1, #1
	str r0, [r6]
_08040372:
	ldr r4, [r6]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _08040384
	subs r0, r4, #1
	str r0, [r6]
_08040384:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	beq _08040394
	bl func_080122E0
_08040394:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _080403A8 @ =0x000034D8
	adds r0, r0, r1
	bl func_0809C5EC
	bl _08045572
	.align 2, 0
_080403A8: .4byte 0x000034D8
_080403AC:
	adds r7, r5, #0
	adds r7, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r6, r5, r2
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080403C8
	subs r0, r1, #1
	str r0, [r6]
_080403C8:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080403DA
	subs r0, r1, #1
	str r0, [r6]
_080403DA:
	ldr r4, [r6]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _080403EC
	subs r0, r4, #1
	str r0, [r6]
_080403EC:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080403FC
	bl _08045572
_080403FC:
	bl func_0801238C
	bl _08045572
_08040404:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08040414
	bl _0804168A
_08040414:
	bl func_080123A4
	bl _0804168A
_0804041C:
	adds r4, r5, #0
	adds r4, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r3, r5, r0
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _08040438
	subs r0, r1, #1
	str r0, [r3]
_08040438:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r2, #0
	beq _0804044A
	subs r0, r2, #1
	str r0, [r3]
_0804044A:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r4, [r0]
	cmp r4, #0
	bne _0804045A
	bl _08045572
_0804045A:
	add r0, sp, #0xc
	movs r2, #0
	movs r3, #0
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0]
	strh r1, [r0, #2]
	strh r3, [r0, #4]
	strb r2, [r0, #6]
	strb r2, [r0, #7]
	strb r2, [r0, #8]
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r7, #0
	add r3, sp, #0xc
	bl func_080123CC
	bl _08045572
_08040480:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08040490
	bl _08045572
_08040490:
	bl func_08012454
	bl _08045572
_08040498:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080404B4
	subs r0, r1, #1
	str r0, [r4]
_080404B4:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _080404C6
	subs r0, r3, #1
	str r0, [r4]
_080404C6:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080404D6
	bl _08045572
_080404D6:
	bl func_08012464
	bl _08045572
_080404DE:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _080404EE
	bl _08045572
_080404EE:
	bl func_080124C4
	bl _08045572
_080404F6:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08040506
	bl _08045572
_08040506:
	bl func_080125EC
	bl _08045572
_0804050E:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _0804051E
	bl _0804168A
_0804051E:
	bl func_080124D0
	bl _0804168A
_08040526:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08040536
	bl _0804168A
_08040536:
	bl func_08012658
	bl _0804168A
_0804053E:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r1, #0
	beq _08040554
	subs r0, r1, #1
	str r0, [r2]
_08040554:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08040564
	bl _0804168A
_08040564:
	adds r2, r0, #0
	ldr r0, [r5, #0x10]
	cmp r3, r0
	bhi _0804057A
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _0804057C
_0804057A:
	ldr r1, _08040588 @ =0x080F9EB8
_0804057C:
	adds r0, r2, #0
	movs r2, #0x40
	bl func_0801268C
	bl _0804168A
	.align 2, 0
_08040588: .4byte 0x080F9EB8
_0804058C:
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r1, #0
	beq _080405A2
	subs r0, r1, #1
	str r0, [r2]
_080405A2:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080405B2
	bl _0804168A
_080405B2:
	adds r2, r0, #0
	ldr r0, [r5, #0x10]
	cmp r3, r0
	bhi _080405C8
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _080405CA
_080405C8:
	ldr r1, _080405D8 @ =0x080F9EB8
_080405CA:
	adds r0, r2, #0
	movs r2, #0
	bl func_0801268C
	bl _0804168A
	.align 2, 0
_080405D8: .4byte 0x080F9EB8
_080405DC:
	movs r3, #0xda
	lsls r3, r3, #1
	adds r2, r5, r3
	ldr r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r1, #0
	beq _080405F2
	subs r0, r1, #1
	str r0, [r2]
_080405F2:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08040602
	bl _0804168A
_08040602:
	adds r4, r0, #0
	ldr r0, [r5, #0x10]
	cmp r3, r0
	bhi _08040618
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _0804061A
_08040618:
	ldr r1, _08040628 @ =0x080F9EB8
_0804061A:
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r4, #0
	bl func_0801268C
	bl _0804168A
	.align 2, 0
_08040628: .4byte 0x080F9EB8
_0804062C:
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08040642
	subs r0, r2, #1
	str r0, [r3]
_08040642:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08040652
	bl _08045572
_08040652:
	bl func_080126E4
	bl _08045572
_0804065A:
	movs r3, #0xda
	lsls r3, r3, #1
	adds r2, r5, r3
	ldr r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r1, #0
	beq _08040670
	subs r0, r1, #1
	str r0, [r2]
_08040670:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08040680
	bl _08045572
_08040680:
	adds r2, r0, #0
	ldr r0, [r5, #0x10]
	cmp r3, r0
	bhi _08040696
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _08040698
_08040696:
	ldr r1, _080406A4 @ =0x080F9EB8
_08040698:
	adds r0, r2, #0
	bl func_08012720
	bl _08045572
	.align 2, 0
_080406A4: .4byte 0x080F9EB8
_080406A8:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _080406B8
	bl _08045572
_080406B8:
	bl func_0801274C
	bl _08045572
_080406C0:
	adds r3, r5, #0
	adds r3, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r1, #0
	beq _080406DE
	subs r0, r1, #1
	str r0, [r2]
_080406DE:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _080406F0
	subs r0, r1, #1
	str r0, [r2]
_080406F0:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08040702
	subs r0, r1, #1
	str r0, [r2]
_08040702:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08040712
	bl _0804168A
_08040712:
	ldr r4, [r5, #0x10]
	cmp r3, r4
	bhi _08040726
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r6, r1, r0
	b _08040728
_08040726:
	ldr r6, _0804073C @ =0x080F9EB8
_08040728:
	cmp r7, r4
	bhi _08040740
	ldr r1, [r5, #0x14]
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _08040742
	.align 2, 0
_0804073C: .4byte 0x080F9EB8
_08040740:
	ldr r2, _08040758 @ =0x080F9EB8
_08040742:
	cmp r8, r4
	bhi _0804075C
	ldr r1, [r5, #0x14]
	mov r3, r8
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _0804075E
	.align 2, 0
_08040758: .4byte 0x080F9EB8
_0804075C:
	ldr r3, _08040778 @ =0x080F9EB8
_0804075E:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	movs r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	adds r1, r6, #0
	bl func_08012860
	bl _0804168A
	.align 2, 0
_08040778: .4byte 0x080F9EB8
_0804077C:
	adds r3, r5, #0
	adds r3, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r2, r5, r6
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _0804079A
	subs r0, r1, #1
	str r0, [r2]
_0804079A:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r1, #0
	beq _080407AE
	subs r0, r1, #1
	str r0, [r2]
_080407AE:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080407C0
	subs r0, r1, #1
	str r0, [r2]
_080407C0:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080407D2
	subs r0, r1, #1
	str r0, [r2]
_080407D2:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080407E2
	bl _0804168A
_080407E2:
	ldr r4, [r5, #0x10]
	cmp r3, r4
	bhi _080407F6
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r7, r1, r0
	b _080407F8
_080407F6:
	ldr r7, _0804080C @ =0x080F9EB8
_080407F8:
	cmp r6, r4
	bhi _08040810
	ldr r1, [r5, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _08040812
	.align 2, 0
_0804080C: .4byte 0x080F9EB8
_08040810:
	ldr r2, _08040828 @ =0x080F9EB8
_08040812:
	cmp r8, r4
	bhi _0804082C
	ldr r1, [r5, #0x14]
	mov r3, r8
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _0804082E
	.align 2, 0
_08040828: .4byte 0x080F9EB8
_0804082C:
	ldr r3, _08040844 @ =0x080F9EB8
_0804082E:
	cmp sb, r4
	bhi _08040848
	ldr r1, [r5, #0x14]
	mov r4, sb
	lsls r0, r4, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _0804084A
	.align 2, 0
_08040844: .4byte 0x080F9EB8
_08040848:
	ldr r1, _08040864 @ =0x080F9EB8
_0804084A:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	adds r1, r7, #0
	bl func_08012860
	bl _0804168A
	.align 2, 0
_08040864: .4byte 0x080F9EB8
_08040868:
	adds r3, r5, #0
	adds r3, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sl, r0
	cmp r1, #0
	beq _08040886
	subs r0, r1, #1
	str r0, [r2]
_08040886:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _0804089A
	subs r0, r1, #1
	str r0, [r2]
_0804089A:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r1, #0
	beq _080408AE
	subs r0, r1, #1
	str r0, [r2]
_080408AE:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080408C0
	subs r0, r1, #1
	str r0, [r2]
_080408C0:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080408D2
	subs r0, r1, #1
	str r0, [r2]
_080408D2:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080408E2
	bl _0804168A
_080408E2:
	ldr r4, [r5, #0x10]
	cmp r3, r4
	bhi _080408F6
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r7, r1, r0
	b _080408F8
_080408F6:
	ldr r7, _0804090C @ =0x080F9EB8
_080408F8:
	cmp r6, r4
	bhi _08040910
	ldr r1, [r5, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _08040912
	.align 2, 0
_0804090C: .4byte 0x080F9EB8
_08040910:
	ldr r2, _08040928 @ =0x080F9EB8
_08040912:
	cmp r8, r4
	bhi _0804092C
	ldr r1, [r5, #0x14]
	mov r3, r8
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _0804092E
	.align 2, 0
_08040928: .4byte 0x080F9EB8
_0804092C:
	ldr r3, _08040944 @ =0x080F9EB8
_0804092E:
	cmp sb, r4
	bhi _08040948
	ldr r1, [r5, #0x14]
	mov r6, sb
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r6, r1, r0
	b _0804094A
	.align 2, 0
_08040944: .4byte 0x080F9EB8
_08040948:
	ldr r6, _08040960 @ =0x080F9EB8
_0804094A:
	cmp sl, r4
	bhi _08040964
	ldr r1, [r5, #0x14]
	mov r4, sl
	lsls r0, r4, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _08040966
	.align 2, 0
_08040960: .4byte 0x080F9EB8
_08040964:
	ldr r1, _0804097C @ =0x080F9EB8
_08040966:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	str r6, [sp]
	str r1, [sp, #4]
	adds r1, r7, #0
	bl func_08012860
	bl _0804168A
	.align 2, 0
_0804097C: .4byte 0x080F9EB8
_08040980:
	adds r3, r5, #0
	adds r3, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r2, r5, r6
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _0804099C
	subs r0, r1, #1
	str r0, [r2]
_0804099C:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _080409AE
	subs r0, r1, #1
	str r0, [r2]
_080409AE:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080409BE
	bl _0804168A
_080409BE:
	ldr r4, [r5, #0x10]
	cmp r3, r4
	bhi _080409D2
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _080409D4
_080409D2:
	ldr r3, _080409E8 @ =0x080F9EB8
_080409D4:
	cmp r6, r4
	bhi _080409EC
	ldr r1, [r5, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _080409EE
	.align 2, 0
_080409E8: .4byte 0x080F9EB8
_080409EC:
	ldr r2, _08040A0C @ =0x080F9EB8
_080409EE:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	movs r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	str r1, [sp, #8]
	adds r1, r3, #0
	movs r3, #0
	bl func_080128D0
	bl _0804168A
	.align 2, 0
_08040A0C: .4byte 0x080F9EB8
_08040A10:
	adds r3, r5, #0
	adds r3, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r2, r5, r6
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r1, #0
	beq _08040A2E
	subs r0, r1, #1
	str r0, [r2]
_08040A2E:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _08040A40
	subs r0, r1, #1
	str r0, [r2]
_08040A40:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08040A52
	subs r0, r1, #1
	str r0, [r2]
_08040A52:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08040A62
	bl _0804168A
_08040A62:
	ldr r4, [r5, #0x10]
	cmp r3, r4
	bhi _08040A76
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r6, r1, r0
	b _08040A78
_08040A76:
	ldr r6, _08040A8C @ =0x080F9EB8
_08040A78:
	cmp r7, r4
	bhi _08040A90
	ldr r1, [r5, #0x14]
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _08040A92
	.align 2, 0
_08040A8C: .4byte 0x080F9EB8
_08040A90:
	ldr r2, _08040AA8 @ =0x080F9EB8
_08040A92:
	cmp r8, r4
	bhi _08040AAC
	ldr r1, [r5, #0x14]
	mov r3, r8
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _08040AAE
	.align 2, 0
_08040AA8: .4byte 0x080F9EB8
_08040AAC:
	ldr r3, _08040AC8 @ =0x080F9EB8
_08040AAE:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	movs r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	str r1, [sp, #8]
	adds r1, r6, #0
	bl func_080128D0
	bl _0804168A
	.align 2, 0
_08040AC8: .4byte 0x080F9EB8
_08040ACC:
	adds r3, r5, #0
	adds r3, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r2, r5, r6
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _08040AEA
	subs r0, r1, #1
	str r0, [r2]
_08040AEA:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r1, #0
	beq _08040AFE
	subs r0, r1, #1
	str r0, [r2]
_08040AFE:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _08040B10
	subs r0, r1, #1
	str r0, [r2]
_08040B10:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08040B22
	subs r0, r1, #1
	str r0, [r2]
_08040B22:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08040B32
	bl _0804168A
_08040B32:
	ldr r4, [r5, #0x10]
	cmp r3, r4
	bhi _08040B46
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r7, r1, r0
	b _08040B48
_08040B46:
	ldr r7, _08040B5C @ =0x080F9EB8
_08040B48:
	cmp r6, r4
	bhi _08040B60
	ldr r1, [r5, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _08040B62
	.align 2, 0
_08040B5C: .4byte 0x080F9EB8
_08040B60:
	ldr r2, _08040B78 @ =0x080F9EB8
_08040B62:
	cmp r8, r4
	bhi _08040B7C
	ldr r1, [r5, #0x14]
	mov r3, r8
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _08040B7E
	.align 2, 0
_08040B78: .4byte 0x080F9EB8
_08040B7C:
	ldr r3, _08040B94 @ =0x080F9EB8
_08040B7E:
	cmp sb, r4
	bhi _08040B98
	ldr r1, [r5, #0x14]
	mov r4, sb
	lsls r0, r4, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _08040B9A
	.align 2, 0
_08040B94: .4byte 0x080F9EB8
_08040B98:
	ldr r1, _08040BB4 @ =0x080F9EB8
_08040B9A:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	adds r1, r7, #0
	bl func_080128D0
	bl _0804168A
	.align 2, 0
_08040BB4: .4byte 0x080F9EB8
_08040BB8:
	adds r3, r5, #0
	adds r3, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sl, r0
	cmp r1, #0
	beq _08040BD6
	subs r0, r1, #1
	str r0, [r2]
_08040BD6:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _08040BEA
	subs r0, r1, #1
	str r0, [r2]
_08040BEA:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r1, #0
	beq _08040BFE
	subs r0, r1, #1
	str r0, [r2]
_08040BFE:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _08040C10
	subs r0, r1, #1
	str r0, [r2]
_08040C10:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08040C22
	subs r0, r1, #1
	str r0, [r2]
_08040C22:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08040C32
	bl _0804168A
_08040C32:
	ldr r4, [r5, #0x10]
	cmp r3, r4
	bhi _08040C46
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r7, r1, r0
	b _08040C48
_08040C46:
	ldr r7, _08040C5C @ =0x080F9EB8
_08040C48:
	cmp r6, r4
	bhi _08040C60
	ldr r1, [r5, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _08040C62
	.align 2, 0
_08040C5C: .4byte 0x080F9EB8
_08040C60:
	ldr r2, _08040C78 @ =0x080F9EB8
_08040C62:
	cmp r8, r4
	bhi _08040C7C
	ldr r1, [r5, #0x14]
	mov r3, r8
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _08040C7E
	.align 2, 0
_08040C78: .4byte 0x080F9EB8
_08040C7C:
	ldr r3, _08040C94 @ =0x080F9EB8
_08040C7E:
	cmp sb, r4
	bhi _08040C98
	ldr r1, [r5, #0x14]
	mov r6, sb
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r6, r1, r0
	b _08040C9A
	.align 2, 0
_08040C94: .4byte 0x080F9EB8
_08040C98:
	ldr r6, _08040CB0 @ =0x080F9EB8
_08040C9A:
	cmp sl, r4
	bhi _08040CB4
	ldr r1, [r5, #0x14]
	mov r4, sl
	lsls r0, r4, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _08040CB6
	.align 2, 0
_08040CB0: .4byte 0x080F9EB8
_08040CB4:
	ldr r1, _08040CD0 @ =0x080F9EB8
_08040CB6:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	str r6, [sp]
	str r1, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	adds r1, r7, #0
	bl func_080128D0
	bl _0804168A
	.align 2, 0
_08040CD0: .4byte 0x080F9EB8
_08040CD4:
	adds r3, r5, #0
	adds r3, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r2, r5, r6
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov ip, r0
	cmp r1, #0
	beq _08040CF2
	subs r0, r1, #1
	str r0, [r2]
_08040CF2:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sl, r0
	cmp r1, #0
	beq _08040D06
	subs r0, r1, #1
	str r0, [r2]
_08040D06:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _08040D1A
	subs r0, r1, #1
	str r0, [r2]
_08040D1A:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _08040D2C
	subs r0, r1, #1
	str r0, [r2]
_08040D2C:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _08040D3E
	subs r0, r1, #1
	str r0, [r2]
_08040D3E:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08040D50
	subs r0, r1, #1
	str r0, [r2]
_08040D50:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08040D60
	bl _0804168A
_08040D60:
	ldr r4, [r5, #0x10]
	cmp r3, r4
	bhi _08040D76
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	mov r8, r1
	b _08040D7A
_08040D76:
	ldr r2, _08040D8C @ =0x080F9EB8
	mov r8, r2
_08040D7A:
	cmp r6, r4
	bhi _08040D90
	ldr r1, [r5, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _08040D92
	.align 2, 0
_08040D8C: .4byte 0x080F9EB8
_08040D90:
	ldr r2, _08040DA4 @ =0x080F9EB8
_08040D92:
	cmp r7, r4
	bhi _08040DA8
	ldr r1, [r5, #0x14]
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r3, r1, r0
	b _08040DAA
	.align 2, 0
_08040DA4: .4byte 0x080F9EB8
_08040DA8:
	ldr r3, _08040DC0 @ =0x080F9EB8
_08040DAA:
	cmp sb, r4
	bhi _08040DC4
	ldr r1, [r5, #0x14]
	mov r6, sb
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r7, r1, r0
	b _08040DC6
	.align 2, 0
_08040DC0: .4byte 0x080F9EB8
_08040DC4:
	ldr r7, _08040DDC @ =0x080F9EB8
_08040DC6:
	cmp sl, r4
	bhi _08040DE0
	ldr r1, [r5, #0x14]
	mov r6, sl
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r6, r1, r0
	b _08040DE2
	.align 2, 0
_08040DDC: .4byte 0x080F9EB8
_08040DE0:
	ldr r6, _08040DF8 @ =0x080F9EB8
_08040DE2:
	cmp ip, r4
	bhi _08040DFC
	ldr r1, [r5, #0x14]
	mov r4, ip
	lsls r0, r4, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _08040DFE
	.align 2, 0
_08040DF8: .4byte 0x080F9EB8
_08040DFC:
	ldr r1, _08040E18 @ =0x080F9EB8
_08040DFE:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	str r7, [sp]
	str r6, [sp, #4]
	str r1, [sp, #8]
	mov r1, r8
	bl func_080128D0
	bl _0804168A
	.align 2, 0
_08040E18: .4byte 0x080F9EB8
_08040E1C:
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08040E32
	subs r0, r2, #1
	str r0, [r3]
_08040E32:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08040E42
	bl _08045572
_08040E42:
	bl func_08012760
	bl _08045572
_08040E4A:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08040E5A
	bl _08045572
_08040E5A:
	bl func_0801278C
	bl _08045572
_08040E62:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08040E78
	subs r0, r2, #1
	str r0, [r3]
_08040E78:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08040E88
	bl _08045572
_08040E88:
	bl func_080127A0
	bl _08045572
_08040E90:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08040EA0
	bl _08045572
_08040EA0:
	bl func_0801284C
	bl _08045572
_08040EA8:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08040EC4
	subs r0, r1, #1
	str r0, [r4]
_08040EC4:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r6, [r0]
	cmp r3, #0
	beq _08040ED6
	subs r0, r3, #1
	str r0, [r4]
_08040ED6:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r1, [r0]
	cmp r1, #0
	bne _08040EE4
	b _0804168A
_08040EE4:
	mov r3, sp
	movs r0, #1
	strb r0, [r3]
	adds r0, r1, #0
	adds r1, r6, #0
	movs r3, #1
	bl func_0801297C
	b _0804168A
_08040EF6:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08040F12
	subs r0, r1, #1
	str r0, [r4]
_08040F12:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r6, [r0]
	cmp r3, #0
	beq _08040F24
	subs r0, r3, #1
	str r0, [r4]
_08040F24:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	bne _08040F32
	b _0804168A
_08040F32:
	mov r3, sp
	movs r0, #1
	strb r0, [r3]
	adds r0, r1, #0
	adds r1, r6, #0
	movs r3, #0
	bl func_0801297C
	b _0804168A
_08040F44:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08040F60
	subs r0, r1, #1
	str r0, [r4]
_08040F60:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r6, [r0]
	cmp r3, #0
	beq _08040F72
	subs r0, r3, #1
	str r0, [r4]
_08040F72:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r1, [r0]
	cmp r1, #0
	bne _08040F80
	b _0804168A
_08040F80:
	mov r3, sp
	movs r0, #0
	strb r0, [r3]
	adds r0, r1, #0
	adds r1, r6, #0
	movs r3, #0
	bl func_0801297C
	b _0804168A
_08040F92:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08040FA8
	subs r0, r2, #1
	str r0, [r3]
_08040FA8:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08040FB6
	b _0804168A
_08040FB6:
	bl func_08012BAC
	b _0804168A
_08040FBC:
	movs r0, #0xda
	lsls r0, r0, #1
	adds r3, r5, r0
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08040FD2
	subs r0, r2, #1
	str r0, [r3]
_08040FD2:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08040FE2
	bl _08045572
_08040FE2:
	movs r2, #0
	bl func_08012B04
	bl _08045572
_08040FEC:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08041008
	subs r0, r1, #1
	str r0, [r4]
_08041008:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _0804101A
	subs r0, r3, #1
	str r0, [r4]
_0804101A:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _0804102A
	bl _08045572
_0804102A:
	bl func_08012AA4
	bl _08045572
_08041032:
	adds r7, r5, #0
	adds r7, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _0804104E
	subs r0, r1, #1
	str r0, [r6]
_0804104E:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08041060
	subs r0, r1, #1
	str r0, [r6]
_08041060:
	ldr r4, [r6]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r7, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _08041072
	subs r0, r4, #1
	str r0, [r6]
_08041072:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08041082
	bl _08045572
_08041082:
	bl func_08012ADC
	bl _08045572
_0804108A:
	adds r4, r5, #0
	adds r4, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _080410A6
	subs r0, r1, #1
	str r0, [r3]
_080410A6:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _080410B8
	subs r0, r2, #1
	str r0, [r3]
_080410B8:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080410C8
	bl _08045572
_080410C8:
	adds r3, r0, #0
	ldr r0, [r5, #0x10]
	cmp r6, r0
	bhi _080410DE
	ldr r1, [r5, #0x14]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r2, r1, r0
	b _080410E0
_080410DE:
	ldr r2, _080410EC @ =0x080F9EB8
_080410E0:
	adds r0, r3, #0
	adds r1, r4, #0
	bl func_08012ACC
	bl _08045572
	.align 2, 0
_080410EC: .4byte 0x080F9EB8
_080410F0:
	bl rand
	adds r4, r0, #0
	ldr r0, _08041108 @ =0x00007FFF
	ands r4, r0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_08041108: .4byte 0x00007FFF
_0804110C:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r7, [r0]
	cmp r2, #0
	beq _08041128
	subs r0, r2, #1
	str r0, [r4]
_08041128:
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r5, [r0]
	cmp r1, #0
	beq _0804113A
	subs r0, r1, #1
	str r0, [r4]
_0804113A:
	cmp r5, r7
	bgt _08041150
	bl rand
	subs r1, r7, r5
	adds r1, #1
	bl __modsi3
	adds r2, r0, r5
	bl _08045166
_08041150:
	ldr r2, [r4]
	cmp r2, #0x63
	bls _0804115A
	bl _08045572
_0804115A:
	lsls r0, r2, #2
	adds r0, r6, r0
	movs r1, #0
	bl _08044CF6
_08041164:
	adds r6, r5, #0
	adds r6, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041180
	subs r0, r2, #1
	str r0, [r4]
_08041180:
	adds r0, r5, #0
	bl func_0804590C
	adds r2, r0, #0
	bl _08045166
_0804118C:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080411A8
	subs r0, r1, #1
	str r0, [r4]
_080411A8:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _080411BA
	subs r0, r3, #1
	str r0, [r4]
_080411BA:
	adds r0, r5, #0
	bl func_08048FFC
	bl _08045572
_080411C4:
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r4, [r1]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r2, r0
	ldr r3, [r0]
	adds r6, r1, #0
	mov r8, r2
	cmp r4, #0
	beq _080411E4
	subs r0, r4, #1
	str r0, [r6]
_080411E4:
	cmp r3, #1
	beq _08041210
	cmp r3, #1
	bgt _080411F2
	cmp r3, #0
	beq _080411FC
	b _0804124C
_080411F2:
	cmp r3, #2
	beq _08041224
	cmp r3, #3
	beq _08041238
	b _0804124C
_080411FC:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _08041206
	bl _08045572
_08041206:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #1
	bl _0804370E
_08041210:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _0804121A
	bl _08045572
_0804121A:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #0
	bl _0804370E
_08041224:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _0804122E
	bl _08045572
_0804122E:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #3
	bl _0804370E
_08041238:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _08041242
	bl _08045572
_08041242:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #2
	bl _0804370E
_0804124C:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _08041256
	bl _08045572
_08041256:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #1
	bl _0804370E
_08041260:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r2, #0
	beq _0804127C
	subs r0, r2, #1
	str r0, [r4]
_0804127C:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	bne _0804128C
	bl _080448FA
_0804128C:
	adds r0, r1, #0
	adds r1, r3, #0
	bl func_08012134
	adds r2, r0, #0
	bl _08045166
_0804129A:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _080412B4 @ =0x00001C2C
	adds r0, r0, r3
	bl func_0800F190
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	bl _080454A8
	.align 2, 0
_080412B4: .4byte 0x00001C2C
_080412B8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _08041310 @ =0x00001C2C
	adds r4, r0, r2
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08041314
	adds r0, r4, #0
	bl func_0800F204
	adds r6, r0, #0
	cmp r6, #1
	bne _08041314
	adds r0, r4, #0
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x18
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08041314
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r3, [r1]
	cmp r3, #0x63
	bls _08041306
	bl _08045572
_08041306:
	lsls r0, r3, #2
	adds r0, r2, r0
	str r6, [r0]
	bl _080454BE
	.align 2, 0
_08041310: .4byte 0x00001C2C
_08041314:
	adds r1, r5, #0
	adds r1, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r3, [r2]
	cmp r3, #0x63
	bls _08041328
	bl _08045572
_08041328:
	lsls r0, r3, #2
	adds r0, r1, r0
	movs r1, #0
	bl sub_08045516
_08041332:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _08041360 @ =0x00001C2C
	adds r4, r0, r1
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08041364
	adds r0, r4, #0
	bl func_0800F204
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_08041360: .4byte 0x00001C2C
_08041364:
	adds r1, r5, #0
	adds r1, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r3, [r2]
	cmp r3, #0x63
	bls _08041378
	bl _08045572
_08041378:
	lsls r0, r3, #2
	adds r0, r1, r0
	movs r1, #1
	rsbs r1, r1, #0
	bl sub_08045516
_08041384:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _080413B4 @ =0x00001C2C
	adds r4, r0, r1
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080413B8
	adds r0, r4, #0
	bl func_0800F388
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_080413B4: .4byte 0x00001C2C
_080413B8:
	adds r1, r5, #0
	adds r1, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r3, [r2]
	cmp r3, #0x63
	bls _080413CC
	bl _08045572
_080413CC:
	lsls r0, r3, #2
	adds r0, r1, r0
	movs r1, #0
	bl sub_08045516
_080413D6:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _08041418 @ =0x00001C2C
	adds r4, r0, r1
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804141C
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #0
	bne _0804141C
	add r0, sp, #0xc
	adds r1, r4, #0
	bl func_0800F20C
	add r0, sp, #0xc
	bl GetId__C4Food
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_08041418: .4byte 0x00001C2C
_0804141C:
	adds r1, r5, #0
	adds r1, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r3, [r2]
	cmp r3, #0x63
	bls _08041430
	bl _08045572
_08041430:
	lsls r0, r3, #2
	adds r0, r1, r0
	movs r1, #1
	rsbs r1, r1, #0
	bl sub_08045516
_0804143C:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _08041480 @ =0x00001C2C
	adds r4, r0, r1
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08041484
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #1
	bne _08041484
	adds r0, r4, #0
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x19
	strb r1, [r0]
	bl GetId__C7Article
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_08041480: .4byte 0x00001C2C
_08041484:
	adds r1, r5, #0
	adds r1, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r3, [r2]
	cmp r3, #0x63
	bls _08041498
	bl _08045572
_08041498:
	lsls r0, r3, #2
	adds r0, r1, r0
	movs r1, #1
	rsbs r1, r1, #0
	bl sub_08045516
_080414A4:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _080414DC @ =0x00001C2C
	adds r4, r0, r1
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080414E0
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #3
	bne _080414E0
	adds r0, r4, #0
	bl func_0800F344
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_080414DC: .4byte 0x00001C2C
_080414E0:
	adds r1, r5, #0
	adds r1, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r3, [r2]
	cmp r3, #0x63
	bls _080414F4
	bl _08045572
_080414F4:
	lsls r0, r3, #2
	adds r0, r1, r0
	movs r1, #1
	rsbs r1, r1, #0
	bl sub_08045516
_08041500:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _0804150E
	b _0804168A
_0804150E:
	bl func_080141EC
	b _0804168A
_08041514:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08041524
	bl _08045572
_08041524:
	bl func_08014214
	bl _08045572
_0804152C:
	movs r2, #0xda
	lsls r2, r2, #1
	adds r3, r5, r2
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08041542
	subs r0, r2, #1
	str r0, [r3]
_08041542:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r5, [r0]
	cmp r5, #0
	bne _08041550
	b _0804168A
_08041550:
	add r4, sp, #0x10
	adds r0, r4, #0
	bl __4FoodUi
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	add r0, sp, #0xc
	bl __12RucksackItemG4Food
	adds r0, r5, #0
	add r1, sp, #0xc
	movs r2, #0
	bl func_08014164
	b _0804168A
_08041580:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08041596
	subs r0, r2, #1
	str r0, [r3]
_08041596:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r5, [r0]
	cmp r5, #0
	beq _0804168A
	mov r4, sp
	adds r4, #0x1a
	adds r0, r4, #0
	bl __7ArticleUi
	ldrb r1, [r4]
	add r0, sp, #0xc
	bl __12RucksackItemG7Article
	adds r0, r5, #0
	add r1, sp, #0xc
	movs r2, #0
	bl func_08014164
	b _0804168A
_080415C0:
	movs r0, #0xda
	lsls r0, r0, #1
	adds r3, r5, r0
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080415D6
	subs r0, r2, #1
	str r0, [r3]
_080415D6:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r5, [r0]
	cmp r5, #0
	beq _0804168A
	add r4, sp, #0x10
	adds r0, r4, #0
	bl __4FoodUi
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	add r0, sp, #0xc
	bl __12RucksackItemG4Food
	adds r0, r5, #0
	add r1, sp, #0xc
	movs r2, #1
	bl func_08014164
	b _0804168A
_08041612:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08041628
	subs r0, r2, #1
	str r0, [r3]
_08041628:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r5, [r0]
	cmp r5, #0
	beq _0804168A
	mov r4, sp
	adds r4, #0x1b
	adds r0, r4, #0
	bl __7ArticleUi
	ldrb r1, [r4]
	add r0, sp, #0xc
	bl __12RucksackItemG7Article
	adds r0, r5, #0
	add r1, sp, #0xc
	movs r2, #1
	bl func_08014164
	b _0804168A
_08041652:
	movs r4, #0
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08041668
	bl func_0801412C
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_08041668:
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r3, [r1]
	cmp r3, #0x63
	bhi _08041682
	lsls r0, r3, #2
	adds r0, r2, r0
	str r4, [r0]
	adds r0, r3, #1
	str r0, [r1]
_08041682:
	cmp r4, #0
	bne _0804168A
	bl _08045572
_0804168A:
	movs r0, #1
	bl _08045574
_08041690:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	beq _0804168A
	bl func_080141C4
	b _0804168A
_080416A2:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _080416F0 @ =0x00001C34
	adds r4, r0, r1
	movs r6, #1
	rsbs r6, r6, #0
	adds r0, r4, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080416D0
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x1c
	strb r1, [r0]
	bl GetId__C4Tool
	adds r6, r0, #0
_080416D0:
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r3, [r1]
	cmp r3, #0x63
	bls _080416E4
	bl _08045572
_080416E4:
	lsls r0, r3, #2
	adds r0, r2, r0
	str r6, [r0]
	bl _080454BE
	.align 2, 0
_080416F0: .4byte 0x00001C34
_080416F4:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _08041738 @ =0x00001C34
	adds r4, r0, r6
	movs r6, #1
	rsbs r6, r6, #0
	adds r0, r4, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08041718
	adds r0, r4, #0
	bl GetAmount__C9ToolStack
	adds r6, r0, #0
_08041718:
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	ldr r3, [r1]
	cmp r3, #0x63
	bls _0804172C
	bl _08045572
_0804172C:
	lsls r0, r3, #2
	adds r0, r2, r0
	str r6, [r0]
	bl _080454BE
	.align 2, 0
_08041738: .4byte 0x00001C34
_0804173C:
	adds r4, r5, #0
	adds r4, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r3, r5, r1
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _08041758
	subs r0, r1, #1
	str r0, [r3]
_08041758:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0804176A
	subs r0, r2, #1
	str r0, [r3]
_0804176A:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r5, [r0]
	ldr r3, _08041790 @ =0x00001C34
	adds r5, r5, r3
	mov r4, sp
	adds r4, #0x1d
	adds r0, r4, #0
	bl __4ToolUi
	ldrb r1, [r4]
	add r0, sp, #0xc
	adds r2, r6, #0
	bl __9ToolStackG4ToolUi
	adds r0, r5, #0
	b _08041874
	.align 2, 0
_08041790: .4byte 0x00001C34
_08041794:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _080417A4 @ =0x00001BD8
	adds r7, r0, r6
	movs r6, #0
	b _08041830
	.align 2, 0
_080417A4: .4byte 0x00001BD8
_080417A8:
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x1e
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #5
	beq _0804182E
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x1f
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0xd
	beq _0804182E
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x20
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x15
	beq _0804182E
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x21
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x1d
	beq _0804182E
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x22
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x25
	beq _0804182E
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x23
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x2d
	beq _0804182E
	bl _08045572
_0804182E:
	adds r6, #1
_08041830:
	cmp r6, #9
	bls _08041838
	bl _08045572
_08041838:
	adds r0, r7, #0
	bl func_0800EC4C
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _0804185C @ =0x00001C34
	adds r4, r0, r2
	adds r0, r4, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080417A8
	bl _08045572
	.align 2, 0
_0804185C: .4byte 0x00001C34
_08041860:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r4, [r0]
	ldr r6, _08041880 @ =0x00001C34
	adds r4, r4, r6
	add r0, sp, #0xc
	bl __9ToolStack
	adds r0, r4, #0
_08041874:
	add r1, sp, #0xc
	movs r2, #2
	bl memcpy
	bl _08045572
	.align 2, 0
_08041880: .4byte 0x00001C34
_08041884:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _080418A0
	subs r0, r2, #1
	str r0, [r4]
_080418A0:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _080418B8 @ =0x00001C38
	adds r0, r0, r3
	bl func_0800F6B4
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_080418B8: .4byte 0x00001C38
_080418BC:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _080418D8
	subs r0, r2, #1
	str r0, [r4]
_080418D8:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _080418F0 @ =0x00001C38
	adds r0, r0, r3
	bl func_0800F714
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_080418F0: .4byte 0x00001C38
_080418F4:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _0804190A
	subs r0, r2, #1
	str r0, [r3]
_0804190A:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r2, _0804192C @ =0x00001C38
	adds r0, r0, r2
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0xc
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r4]
	bl _08045572
	.align 2, 0
_0804192C: .4byte 0x00001C38
_08041930:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r4, _08041944 @ =0x00001C38
	adds r0, r0, r4
	bl func_0800F8A8
	bl _080454A6
	.align 2, 0
_08041944: .4byte 0x00001C38
_08041948:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _08041968 @ =0x00001C38
	adds r0, r0, r2
	bl func_0800F634
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_08041968: .4byte 0x00001C38
_0804196C:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08041988
	subs r0, r1, #1
	str r0, [r4]
_08041988:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _0804199A
	subs r0, r3, #1
	str r0, [r4]
_0804199A:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r3, _080419B0 @ =0x00001C38
	adds r0, r0, r3
	bl func_0800FDC4
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_080419B0: .4byte 0x00001C38
_080419B4:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080419D0
	subs r0, r1, #1
	str r0, [r4]
_080419D0:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _080419E2
	subs r0, r3, #1
	str r0, [r4]
_080419E2:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r3, _080419F8 @ =0x00001C38
	adds r0, r0, r3
	bl func_0800FD50
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_080419F8: .4byte 0x00001C38
_080419FC:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08041A18
	subs r0, r1, #1
	str r0, [r4]
_08041A18:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _08041A2A
	subs r0, r3, #1
	str r0, [r4]
_08041A2A:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r3, _08041A40 @ =0x00001C38
	adds r0, r0, r3
	bl func_0800FEC8
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_08041A40: .4byte 0x00001C38
_08041A44:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r2, #0
	beq _08041A60
	subs r0, r2, #1
	str r0, [r4]
_08041A60:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	adds r2, r3, #0
	cmp r3, #0
	bge _08041A70
	adds r2, r3, #7
_08041A70:
	asrs r2, r2, #3
	lsls r1, r2, #3
	subs r1, r3, r1
	ldr r3, _08041A88 @ =0x000021DC
	adds r0, r0, r3
	adds r0, r0, r2
	ldrb r2, [r0]
	asrs r2, r1
	movs r0, #1
	ands r2, r0
	bl _08045166
	.align 2, 0
_08041A88: .4byte 0x000021DC
_08041A8C:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r2, #0
	beq _08041AA8
	subs r0, r2, #1
	str r0, [r4]
_08041AA8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	adds r2, r3, #0
	cmp r3, #0
	bge _08041AB8
	adds r2, r3, #7
_08041AB8:
	asrs r2, r2, #3
	lsls r1, r2, #3
	subs r1, r3, r1
	ldr r3, _08041AD0 @ =0x000021D4
	adds r0, r0, r3
	adds r0, r0, r2
	ldrb r2, [r0]
	asrs r2, r1
	movs r0, #1
	ands r2, r0
	bl _08045166
	.align 2, 0
_08041AD0: .4byte 0x000021D4
_08041AD4:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r1, r5, r4
	ldr r2, [r1]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r2, #0
	beq _08041AEA
	subs r0, r2, #1
	str r0, [r1]
_08041AEA:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r2, [r0]
	adds r0, r3, #0
	cmp r3, #0
	bge _08041AFA
	adds r0, r3, #7
_08041AFA:
	asrs r0, r0, #3
	lsls r1, r0, #3
	subs r1, r3, r1
	ldr r3, _08041B14 @ =0x000021DC
	adds r2, r2, r3
	adds r2, r2, r0
	movs r0, #1
	lsls r0, r1
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	bl _08045572
	.align 2, 0
_08041B14: .4byte 0x000021DC
_08041B18:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r1, #0
	beq _08041B2E
	subs r0, r1, #1
	str r0, [r2]
_08041B2E:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r2, [r0]
	adds r1, r3, #0
	cmp r3, #0
	bge _08041B3E
	adds r1, r3, #7
_08041B3E:
	asrs r1, r1, #3
	lsls r0, r1, #3
	subs r0, r3, r0
	ldr r3, _08041B58 @ =0x000021DC
	adds r2, r2, r3
	adds r2, r2, r1
	movs r1, #1
	lsls r1, r0
	ldrb r0, [r2]
	bics r0, r1
	strb r0, [r2]
	bl _08045572
	.align 2, 0
_08041B58: .4byte 0x000021DC
_08041B5C:
	movs r4, #0x24
	adds r4, r4, r5
	mov r8, r4
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	ldr r2, [r6]
	lsls r0, r2, #2
	subs r0, #4
	add r0, r8
	ldr r7, [r0]
	cmp r2, #0
	beq _08041B7A
	subs r0, r2, #1
	str r0, [r6]
_08041B7A:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldrb r5, [r0, #0x11]
	ldr r2, _08041BC4 @ =0x00001CD4
	adds r4, r0, r2
	ldr r3, _08041BC8 @ =0x00001BD8
	adds r0, r0, r3
	bl func_0800E4E8
	add r2, sp, #0x24
	strb r0, [r2]
	adds r0, r4, #0
	adds r1, r7, #0
	bl func_0809FE74
	movs r3, #0
	movs r1, #0x7f
	adds r2, r1, #0
	ands r2, r5
	ands r1, r0
	cmp r2, r1
	bne _08041BAC
	movs r3, #1
_08041BAC:
	adds r2, r3, #0
	ldr r1, [r6]
	cmp r1, #0x63
	bls _08041BB8
	bl _08045572
_08041BB8:
	lsls r0, r1, #2
	add r0, r8
	str r2, [r0]
	bl _08044A2C
	.align 2, 0
_08041BC4: .4byte 0x00001CD4
_08041BC8: .4byte 0x00001BD8
_08041BCC:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041BE8
	subs r0, r2, #1
	str r0, [r4]
_08041BE8:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08041C0C @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A06B0
	movs r2, #0
	cmp r0, #0
	bne _08041C02
	bl _08045166
_08041C02:
	bl GetFriendship__C3Npc
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_08041C0C: .4byte 0x00001CD4
_08041C10:
	adds r1, r5, #0
	adds r1, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r1, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _08041C2C
	subs r0, r2, #1
	str r0, [r3]
_08041C2C:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r1, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041C3E
	subs r0, r2, #1
	str r0, [r3]
_08041C3E:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r2, _08041C60 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A06B0
	cmp r0, #0
	bne _08041C56
	bl _08045572
_08041C56:
	adds r1, r4, #0
	bl AddFriendship__3Npci
	bl _08045572
	.align 2, 0
_08041C60: .4byte 0x00001CD4
_08041C64:
	adds r1, r5, #0
	adds r1, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r1, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _08041C80
	subs r0, r2, #1
	str r0, [r3]
_08041C80:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r1, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041C92
	subs r0, r2, #1
	str r0, [r3]
_08041C92:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r2, _08041CB4 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A06B0
	cmp r0, #0
	bne _08041CAA
	bl _08045572
_08041CAA:
	adds r1, r4, #0
	bl SetFriendship__3Npci
	bl _08045572
	.align 2, 0
_08041CB4: .4byte 0x00001CD4
_08041CB8:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041CD4
	subs r0, r2, #1
	str r0, [r4]
_08041CD4:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08041CF8 @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A06B0
	movs r2, #0
	cmp r0, #0
	bne _08041CEE
	bl _08045166
_08041CEE:
	bl GetDaysSinceLastSpoken__C3Npc
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_08041CF8: .4byte 0x00001CD4
_08041CFC:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08041D12
	subs r0, r2, #1
	str r0, [r3]
_08041D12:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r2, _08041D34 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A06B0
	cmp r0, #0
	bne _08041D2A
	bl _08045572
_08041D2A:
	bl SetSpokenTo__3Npc
	bl _08045572
	.align 2, 0
_08041D34: .4byte 0x00001CD4
_08041D38:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041D54
	subs r0, r2, #1
	str r0, [r4]
_08041D54:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08041D7C @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A06B0
	movs r2, #0
	cmp r0, #0
	bne _08041D6E
	bl _08045166
_08041D6E:
	bl HasBeenSpokenToToday__C3Npc
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
	.align 2, 0
_08041D7C: .4byte 0x00001CD4
_08041D80:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041D9C
	subs r0, r2, #1
	str r0, [r4]
_08041D9C:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08041DC4 @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A06B0
	movs r2, #0
	cmp r0, #0
	bne _08041DB6
	bl _08045166
_08041DB6:
	bl HasBeenSpokenToJustNow__C3Npc
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
	.align 2, 0
_08041DC4: .4byte 0x00001CD4
_08041DC8:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041DE4
	subs r0, r2, #1
	str r0, [r4]
_08041DE4:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08041E0C @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A06B0
	movs r2, #0
	cmp r0, #0
	bne _08041DFE
	bl _08045166
_08041DFE:
	bl HasBeenMet__C3Npc
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
	.align 2, 0
_08041E0C: .4byte 0x00001CD4
_08041E10:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08041E26
	subs r0, r2, #1
	str r0, [r3]
_08041E26:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r2, _08041E48 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A06B0
	cmp r0, #0
	bne _08041E3E
	bl _08045572
_08041E3E:
	bl SetGifted__3Npc
	bl _08045572
	.align 2, 0
_08041E48: .4byte 0x00001CD4
_08041E4C:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041E68
	subs r0, r2, #1
	str r0, [r4]
_08041E68:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08041E90 @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A06B0
	movs r2, #0
	cmp r0, #0
	bne _08041E82
	bl _08045166
_08041E82:
	bl HasBeenGiftedToday__C3Npc
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
	.align 2, 0
_08041E90: .4byte 0x00001CD4
_08041E94:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041EB0
	subs r0, r2, #1
	str r0, [r4]
_08041EB0:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08041ED4 @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A0878
	movs r2, #0
	cmp r0, #0
	bne _08041ECA
	bl _08045166
_08041ECA:
	bl GetLove__C12Bachelorette
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_08041ED4: .4byte 0x00001CD4
_08041ED8:
	adds r1, r5, #0
	adds r1, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r1, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _08041EF4
	subs r0, r2, #1
	str r0, [r3]
_08041EF4:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r1, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041F06
	subs r0, r2, #1
	str r0, [r3]
_08041F06:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r2, _08041F28 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A0878
	cmp r0, #0
	bne _08041F1E
	bl _08045572
_08041F1E:
	adds r1, r4, #0
	bl AddLove__12Bachelorettei
	bl _08045572
	.align 2, 0
_08041F28: .4byte 0x00001CD4
_08041F2C:
	adds r1, r5, #0
	adds r1, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r1, r0
	ldr r4, [r0]
	cmp r2, #0
	beq _08041F48
	subs r0, r2, #1
	str r0, [r3]
_08041F48:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r1, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08041F5A
	subs r0, r2, #1
	str r0, [r3]
_08041F5A:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r2, _08041F7C @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A0878
	cmp r0, #0
	bne _08041F72
	bl _08045572
_08041F72:
	adds r1, r4, #0
	bl SetLove__12Bachelorettei
	bl _08045572
	.align 2, 0
_08041F7C: .4byte 0x00001CD4
_08041F80:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08041F9C
	subs r0, r1, #1
	str r0, [r4]
_08041F9C:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _08041FAE
	subs r0, r3, #1
	str r0, [r4]
_08041FAE:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08041FBE
	bl _08045572
_08041FBE:
	bl func_08014264
	bl _08045572
_08041FC6:
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08041FDC
	subs r0, r2, #1
	str r0, [r3]
_08041FDC:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08041FEC
	bl _08045572
_08041FEC:
	bl func_08014290
	bl _08045572
_08041FF4:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08042004
	bl _0804168A
_08042004:
	bl func_08012BBC
	bl _0804168A
_0804200C:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08042022
	subs r0, r2, #1
	str r0, [r3]
_08042022:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08042032
	bl _0804168A
_08042032:
	bl func_08012C50
	bl _0804168A
_0804203A:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0804204A
	bl _0804168A
_0804204A:
	bl func_0801323C
	bl _0804168A
_08042052:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08042062
	bl _0804168A
_08042062:
	bl func_080132D0
	bl _0804168A
_0804206A:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _0804207A
	bl _0804168A
_0804207A:
	bl func_08012CF4
	bl _0804168A
_08042082:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08042092
	bl _0804168A
_08042092:
	bl func_08012D88
	bl _0804168A
_0804209A:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _080420AA
	bl _0804168A
_080420AA:
	bl func_08012E1C
	bl _0804168A
_080420B2:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080420C2
	bl _0804168A
_080420C2:
	bl func_08012EC0
	bl _0804168A
_080420CA:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _080420DA
	bl _0804168A
_080420DA:
	bl func_08012F54
	bl _0804168A
_080420E2:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _080420F2
	bl _0804168A
_080420F2:
	bl func_08012FE8
	bl _0804168A
_080420FA:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _0804210A
	bl _0804168A
_0804210A:
	bl func_08013080
	bl _0804168A
_08042112:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08042122
	bl _0804168A
_08042122:
	bl func_08013114
	bl _0804168A
_0804212A:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0804213A
	bl _0804168A
_0804213A:
	bl func_080131A8
	bl _0804168A
_08042142:
	movs r2, #0xda
	lsls r2, r2, #1
	adds r3, r5, r2
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08042158
	subs r0, r2, #1
	str r0, [r3]
_08042158:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08042168
	bl _0804168A
_08042168:
	bl func_08013364
	bl _0804168A
_08042170:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08042180
	bl _0804168A
_08042180:
	bl func_08013408
	bl _0804168A
_08042188:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08042198
	bl _0804168A
_08042198:
	bl func_080134A4
	bl _0804168A
_080421A0:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080421B0
	bl _0804168A
_080421B0:
	bl func_08013544
	bl _0804168A
_080421B8:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _080421C8
	bl _0804168A
_080421C8:
	bl func_080135D8
	bl _0804168A
_080421D0:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _080421E0
	bl _0804168A
_080421E0:
	bl func_0801366C
	bl _0804168A
_080421E8:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080421F8
	bl _0804168A
_080421F8:
	bl func_08013700
	bl _0804168A
_08042200:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08042210
	bl _0804168A
_08042210:
	bl func_08013794
	bl _0804168A
_08042218:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08042228
	bl _08045572
_08042228:
	bl func_08014034
	bl _08045572
_08042230:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08042240
	bl _08045572
_08042240:
	bl func_0801404C
	bl _08045572
_08042248:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08042258
	bl _08045572
_08042258:
	bl func_08014064
	bl _08045572
_08042260:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08042270
	bl _08045572
_08042270:
	bl func_0801407C
	bl _08045572
_08042278:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08042288
	bl _08045572
_08042288:
	bl func_08014094
	bl _08045572
_08042290:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080422A0
	bl _08045572
_080422A0:
	bl func_080140AC
	bl _08045572
_080422A8:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _080422C4
	subs r0, r2, #1
	str r0, [r4]
_080422C4:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl HasBushelForEnt__C4CoopUi
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_080422DE:
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r2, [r1]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r4, [r0, #0x20]
	cmp r2, #0
	beq _080422F4
	subs r0, r2, #1
	str r0, [r1]
_080422F4:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r4, #0
	bl SetEntBushel__4CoopUi
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08042318
	bl _08045572
_08042318:
	adds r1, r4, #0
	bl func_080140DC
	bl _08045572
_08042322:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0804233E
	subs r0, r2, #1
	str r0, [r4]
_0804233E:
	cmp r1, #0xf
	ble _0804235E
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	subs r1, #0x10
	bl HasBushelForPregnancyStall__C4BarnUi
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_0804235E:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	bl HasBushelForStall__C4BarnUi
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_08042378:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r1, r5, r4
	ldr r2, [r1]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r4, [r0, #0x20]
	cmp r2, #0
	beq _0804238E
	subs r0, r2, #1
	str r0, [r1]
_0804238E:
	cmp r4, #0xf
	ble _080423AA
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r4, #0
	subs r1, #0x10
	bl SetBushelForPregnancyStall__4BarnUi
	b _080423BE
_080423AA:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	adds r1, r4, #0
	bl SetBushelForStall__4BarnUi
_080423BE:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _080423CE
	bl _08045572
_080423CE:
	adds r1, r4, #0
	bl func_080140C4
	bl _08045572
_080423D8:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080423E8
	bl _08045572
_080423E8:
	bl func_080140F4
	bl _08045572
_080423F0:
	movs r2, #0xda
	lsls r2, r2, #1
	adds r3, r5, r2
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08042406
	subs r0, r2, #1
	str r0, [r3]
_08042406:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08042416
	bl _08045572
_08042416:
	bl func_080142B8
	bl _08045572
_0804241E:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _0804242E
	bl _08045572
_0804242E:
	bl func_080142D4
	bl _08045572
_08042436:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetRecordPlayer__9FarmHouse
	bl HasAlbum__C12RecordPlayer
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_0804245E:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0804247A
	subs r0, r2, #1
	str r0, [r4]
_0804247A:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	beq _0804248C
	bl func_0801424C
	adds r1, r0, #0
_0804248C:
	ldr r2, [r4]
	cmp r2, #0x63
	bls _08042496
	bl _08045572
_08042496:
	lsls r0, r2, #2
	adds r0, r6, r0
	bl _08044CF6
_0804249E:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _080424AE
	bl _08045572
_080424AE:
	bl func_08016BDC
	bl _08045572
_080424B6:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080424C6
	bl _08045572
_080424C6:
	bl func_08016BF4
	bl _08045572
_080424CE:
	movs r4, #0
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	beq _080424E2
	bl func_08014234
	adds r4, r0, #0
_080424E2:
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
_080424F0:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08042500
	bl _0804168A
_08042500:
	bl func_08013828
	bl _0804168A
_08042508:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08042518
	bl _0804168A
_08042518:
	bl func_080138C0
	bl _0804168A
_08042520:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08042530
	bl _0804168A
_08042530:
	bl func_0801395C
	bl _0804168A
_08042538:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08042548
	bl _0804168A
_08042548:
	bl func_08013BDC
	bl _0804168A
_08042550:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08042560
	bl _0804168A
_08042560:
	bl func_08013C70
	bl _0804168A
_08042568:
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	ldr r2, [r1]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r2, #0
	beq _0804257E
	subs r0, r2, #1
	str r0, [r1]
_0804257E:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0804258E
	bl _0804168A
_0804258E:
	rsbs r1, r3, #0
	orrs r1, r3
	lsrs r1, r1, #0x1f
	bl func_08013D04
	bl _0804168A
_0804259C:
	movs r2, #0xda
	lsls r2, r2, #1
	adds r3, r5, r2
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080425B2
	subs r0, r2, #1
	str r0, [r3]
_080425B2:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _080425C2
	bl _0804168A
_080425C2:
	bl func_08013DC8
	bl _0804168A
_080425CA:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080425DA
	bl _0804168A
_080425DA:
	bl func_08013E6C
	bl _0804168A
_080425E2:
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080425F8
	subs r0, r2, #1
	str r0, [r3]
_080425F8:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08042608
	bl _0804168A
_08042608:
	bl func_08013EF8
	bl _0804168A
_08042610:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0804262C
	subs r0, r2, #1
	str r0, [r4]
_0804262C:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08042650 @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A0930
	movs r2, #3
	cmp r0, #0
	bne _08042646
	bl _08045166
_08042646:
	bl GetCurrentTask__C13HarvestSprite
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_08042650: .4byte 0x00001CD4
_08042654:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08042670
	subs r0, r2, #1
	str r0, [r4]
_08042670:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08042694 @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A0930
	movs r2, #0
	cmp r0, #0
	bne _0804268A
	bl _08045166
_0804268A:
	bl GetWorkDaysLeft__C13HarvestSprite
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_08042694: .4byte 0x00001CD4
_08042698:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r7, [r0]
	cmp r2, #0
	beq _080426B4
	subs r0, r2, #1
	str r0, [r4]
_080426B4:
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _080426C6
	subs r0, r2, #1
	str r0, [r4]
_080426C6:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _080426EC @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A0930
	movs r2, #0
	cmp r0, #0
	bne _080426E0
	bl _08045166
_080426E0:
	adds r1, r7, #0
	bl GetTaskExp__C13HarvestSpriteQ213HarvestSprite4Task
	adds r2, r0, #0
	bl _08045166
	.align 2, 0
_080426EC: .4byte 0x00001CD4
_080426F0:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0804270C
	subs r0, r2, #1
	str r0, [r4]
_0804270C:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08042734 @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A0930
	movs r2, #0
	cmp r0, #0
	bne _08042726
	bl _08045166
_08042726:
	bl HasPlayedMinigameToday__C13HarvestSprite
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
	.align 2, 0
_08042734: .4byte 0x00001CD4
_08042738:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r7, [r0]
	cmp r2, #0
	beq _08042754
	subs r0, r2, #1
	str r0, [r4]
_08042754:
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08042766
	subs r0, r2, #1
	str r0, [r4]
_08042766:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _0804279C @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A0930
	movs r1, #0
	cmp r0, #0
	beq _08042788
	adds r1, r7, #0
	bl GetMinigameExp__C13HarvestSpriteQ213HarvestSprite4Task
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
_08042788:
	ldr r2, [r4]
	cmp r2, #0x63
	bls _08042792
	bl _08045572
_08042792:
	lsls r0, r2, #2
	adds r0, r6, r0
	bl _08044CF6
	.align 2, 0
_0804279C: .4byte 0x00001CD4
_080427A0:
	adds r4, r5, #0
	adds r4, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _080427BC
	subs r0, r1, #1
	str r0, [r3]
_080427BC:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r2, #0
	beq _080427CE
	subs r0, r2, #1
	str r0, [r3]
_080427CE:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _080427E0
	subs r0, r2, #1
	str r0, [r3]
_080427E0:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08042804 @ =0x00001CD4
	adds r0, r0, r3
	bl func_080A0930
	cmp r0, #0
	bne _080427F8
	bl _08045572
_080427F8:
	adds r1, r6, #0
	adds r2, r7, #0
	bl StartTask__13HarvestSpriteQ213HarvestSprite4Taski
	bl _08045572
	.align 2, 0
_08042804: .4byte 0x00001CD4
_08042808:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _0804281E
	subs r0, r2, #1
	str r0, [r3]
_0804281E:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r2, _08042840 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A0930
	cmp r0, #0
	bne _08042836
	bl _08045572
_08042836:
	bl method_0809E6EC__13HarvestSprite
	bl _08045572
	.align 2, 0
_08042840: .4byte 0x00001CD4
_08042844:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08042860
	subs r0, r2, #1
	str r0, [r4]
_08042860:
	movs r2, #0
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08042872
	bl _08045166
_08042872:
	bl func_08015920
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_0804287E:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08042894
	subs r0, r2, #1
	str r0, [r3]
_08042894:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _080428A4
	bl _0804168A
_080428A4:
	bl func_080139F0
	bl _0804168A
_080428AC:
	movs r0, #0xda
	lsls r0, r0, #1
	adds r3, r5, r0
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080428C2
	subs r0, r2, #1
	str r0, [r3]
_080428C2:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _080428D2
	bl _0804168A
_080428D2:
	bl func_08013B38
	bl _0804168A
_080428DA:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080428F0
	subs r0, r2, #1
	str r0, [r3]
_080428F0:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08042900
	bl _0804168A
_08042900:
	bl func_08013A94
	bl _0804168A
_08042908:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08042918
	bl _0804168A
_08042918:
	bl func_0801437C
	bl _0804168A
_08042920:
	movs r2, #0xda
	lsls r2, r2, #1
	adds r3, r5, r2
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08042936
	subs r0, r2, #1
	str r0, [r3]
_08042936:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08042946
	bl _0804168A
_08042946:
	bl func_08014410
	bl _0804168A
_0804294E:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r1, #0
	beq _08042964
	subs r0, r1, #1
	str r0, [r2]
_08042964:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r1, [r0]
	ldr r0, _080429A4 @ =0x00002C1C
	adds r5, r1, r0
	rsbs r0, r3, #0
	orrs r0, r3
	lsrs r4, r0, #0x1f
	movs r3, #0xc8
	str r3, [sp, #0x28]
	ldrb r0, [r1, #0x10]
	lsrs r2, r0, #3
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	adds r1, r1, r0
	str r1, [sp, #0x2c]
	add r0, sp, #0x2c
	add r2, sp, #0x28
	cmp r3, r1
	bls _08042994
	adds r2, r0, #0
_08042994:
	ldr r2, [r2]
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_08057E90
	bl _08045572
	.align 2, 0
_080429A4: .4byte 0x00002C1C
_080429A8:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _080429B8
	bl _0804168A
_080429B8:
	bl func_080144BC
	bl _0804168A
_080429C0:
	movs r2, #0xda
	lsls r2, r2, #1
	adds r1, r5, r2
	ldr r2, [r1]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r2, #0
	beq _080429D6
	subs r0, r2, #1
	str r0, [r1]
_080429D6:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080429E6
	bl _0804168A
_080429E6:
	rsbs r1, r3, #0
	orrs r1, r3
	lsrs r1, r1, #0x1f
	bl func_08014550
	bl _0804168A
_080429F4:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08042A04
	bl _0804168A
_08042A04:
	bl func_080145F8
	bl _0804168A
_08042A0C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r1, [r0]
	ldr r2, _08042A2C @ =0x00002C4C
	adds r0, r1, r2
	ldr r3, _08042A30 @ =0x00001C9C
	adds r1, r1, r3
	ldr r1, [r1]
	lsls r1, r1, #0xb
	lsrs r1, r1, #0x18
	bl func_08052230
	bl _08045572
	.align 2, 0
_08042A2C: .4byte 0x00002C4C
_08042A30: .4byte 0x00001C9C
_08042A34:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _08042A54 @ =0x00002C74
	adds r0, r0, r6
	bl func_0801151C
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
	.align 2, 0
_08042A54: .4byte 0x00002C74
_08042A58:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _08042A78 @ =0x00002C74
	adds r0, r0, r2
	bl func_08011520
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_08042A78: .4byte 0x00002C74
_08042A7C:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _08042AA0 @ =0x00002C74
	adds r0, r0, r6
	bl func_08011524
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
	.align 2, 0
_08042AA0: .4byte 0x00002C74
_08042AA4:
	movs r1, #0xda
	lsls r1, r1, #1
	adds r3, r5, r1
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08042ABA
	subs r0, r2, #1
	str r0, [r3]
_08042ABA:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08042AD0 @ =0x00002C74
	adds r0, r0, r3
	bl func_08011540
	bl _08045572
	.align 2, 0
_08042AD0: .4byte 0x00002C74
_08042AD4:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _08042AE8 @ =0x00002C74
	adds r0, r0, r6
	bl func_08011544
	bl _08045572
	.align 2, 0
_08042AE8: .4byte 0x00002C74
_08042AEC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _08042B0C @ =0x00002C74
	adds r0, r0, r2
	bl func_08011520
	cmp r0, #0xf
	bls _08042B02
	b _08042C7E
_08042B02:
	lsls r0, r0, #2
	ldr r1, _08042B10 @ =_08042B14
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08042B0C: .4byte 0x00002C74
_08042B10: .4byte _08042B14
_08042B14: @ jump table
	.4byte _08042B54 @ case 0
	.4byte _08042B68 @ case 1
	.4byte _08042B7C @ case 2
	.4byte _08042B90 @ case 3
	.4byte _08042BA4 @ case 4
	.4byte _08042BB8 @ case 5
	.4byte _08042BCC @ case 6
	.4byte _08042BE0 @ case 7
	.4byte _08042BF4 @ case 8
	.4byte _08042C08 @ case 9
	.4byte _08042C1C @ case 10
	.4byte _08042C30 @ case 11
	.4byte _08042C44 @ case 12
	.4byte _08042C58 @ case 13
	.4byte _08042C6C @ case 14
	.4byte _08042C7E @ case 15
_08042B54:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl AddClock__9FarmHouse
	b _08042C7E
_08042B68:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl AddMirror__9FarmHouse
	b _08042C7E
_08042B7C:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl AddFridge__9FarmHouse
	b _08042C7E
_08042B90:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	movs r6, #0xfa
	lsls r6, r6, #1
	adds r0, r0, r6
	bl AddShelf__9FarmHouse
	b _08042C7E
_08042BA4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl AddKitchen__9FarmHouse
	b _08042C7E
_08042BB8:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl AddCarpet__9FarmHouse
	b _08042C7E
_08042BCC:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl AddLargeBed__9FarmHouse
	b _08042C7E
_08042BE0:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl AddKitchenKnife__9FarmHouse
	b _08042C7E
_08042BF4:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	movs r6, #0xfa
	lsls r6, r6, #1
	adds r0, r0, r6
	bl AddKitchenFryingPan__9FarmHouse
	b _08042C7E
_08042C08:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl AddKitchenPot__9FarmHouse
	b _08042C7E
_08042C1C:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl AddKitchenMixer__9FarmHouse
	b _08042C7E
_08042C30:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl AddKitchenWhisk__9FarmHouse
	b _08042C7E
_08042C44:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl KitchenRollingPin__9FarmHouse
	b _08042C7E
_08042C58:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	movs r6, #0xfa
	lsls r6, r6, #1
	adds r0, r0, r6
	bl AddKitchenOven__9FarmHouse
	b _08042C7E
_08042C6C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl AddKitchenSeasoningSet__9FarmHouse
_08042C7E:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r4, _08042C94 @ =0x00002C74
	adds r0, r0, r4
	bl func_08011550
	bl _08045572
	.align 2, 0
_08042C94: .4byte 0x00002C74
_08042C98:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _08042CB8 @ =0x00001AA8
	adds r0, r0, r1
	ldrb r0, [r0, #4]
	lsls r0, r0, #0x1e
	lsrs r4, r0, #0x1f
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_08042CB8: .4byte 0x00001AA8
_08042CBC:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _08042CE0 @ =0x00001CD4
	adds r0, r0, r6
	bl func_080A0518
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
	.align 2, 0
_08042CE0: .4byte 0x00001CD4
_08042CE4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	adds r0, #0x54
	bl HasShippedOneOfEachCrop__C11ShippingBin
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_08042D04:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	adds r0, #0x54
	bl HasShippedOneOfEachProduct__C11ShippingBin
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	bl _080454A8
_08042D1A:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	bl func_08010E68
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_08042D38:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	adds r0, #0x54
	bl HasShippedOneOfEachMineral__C11ShippingBin
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	bl _080454A8
_08042D4E:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	movs r2, #0xb2
	lsls r2, r2, #6
	adds r0, r0, r2
	bl func_0809CDCC
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_08042D72:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	movs r6, #0xb2
	lsls r6, r6, #6
	adds r0, r0, r6
	bl func_0809CDEC
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
_08042D94:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	bl func_08010E60
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_08042DB2:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _08042DD0 @ =0x00001AA8
	adds r0, r0, r6
	ldr r4, [r0]
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
	.align 2, 0
_08042DD0: .4byte 0x00001AA8
_08042DD4:
	movs r1, #0xda
	lsls r1, r1, #1
	adds r3, r5, r1
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08042DEA
	subs r0, r2, #1
	str r0, [r3]
_08042DEA:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08042E00 @ =0x00001AA8
	adds r0, r0, r3
	bl func_0809ABD8
	bl _08045572
	.align 2, 0
_08042E00: .4byte 0x00001AA8
_08042E04:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08042E1A
	subs r0, r2, #1
	str r0, [r3]
_08042E1A:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r2, _08042E30 @ =0x00001AA8
	adds r0, r0, r2
	bl func_0809ACC0
	bl _08045572
	.align 2, 0
_08042E30: .4byte 0x00001AA8
_08042E34:
	movs r3, #0x64
	mov sb, r3
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r4, r5, r6
	ldr r0, [r4]
	ldr r1, _08042E70 @ =0x00001CD4
	adds r0, r0, r1
	bl func_080A0490
	adds r6, r0, #0
	cmp r6, #0
	beq _08042E50
	b _08042FC2
_08042E50:
	ldr r0, [r4]
	ldr r2, _08042E74 @ =0x00001D6C
	adds r0, r0, r2
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bhi _08042E78
	ldr r0, [r4]
	ldr r3, _08042E74 @ =0x00001D6C
	adds r0, r0, r3
	bl GetLove__C12Bachelorette
	add r1, sp, #0xc
	strh r0, [r1]
	b _08042E7C
	.align 2, 0
_08042E70: .4byte 0x00001CD4
_08042E74: .4byte 0x00001D6C
_08042E78:
	add r0, sp, #0xc
	strh r6, [r0]
_08042E7C:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r4, r5, r6
	ldr r0, [r4]
	ldr r1, _08042EA0 @ =0x00001E28
	adds r0, r0, r1
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bhi _08042EA4
	ldr r0, [r4]
	ldr r2, _08042EA0 @ =0x00001E28
	adds r0, r0, r2
	bl GetLove__C12Bachelorette
	add r1, sp, #0xc
	b _08042EA8
	.align 2, 0
_08042EA0: .4byte 0x00001E28
_08042EA4:
	add r1, sp, #0xc
	movs r0, #0
_08042EA8:
	strh r0, [r1, #2]
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r4, r5, r3
	ldr r0, [r4]
	ldr r6, _08042ECC @ =0x00001EB8
	adds r0, r0, r6
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bhi _08042ED0
	ldr r0, [r4]
	adds r0, r0, r6
	bl GetLove__C12Bachelorette
	add r1, sp, #0xc
	b _08042ED4
	.align 2, 0
_08042ECC: .4byte 0x00001EB8
_08042ED0:
	add r1, sp, #0xc
	movs r0, #0
_08042ED4:
	strh r0, [r1, #4]
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r0, [r4]
	ldr r1, _08042EF8 @ =0x00001EE4
	adds r0, r0, r1
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bhi _08042EFC
	ldr r0, [r4]
	ldr r2, _08042EF8 @ =0x00001EE4
	adds r0, r0, r2
	bl GetLove__C12Bachelorette
	add r1, sp, #0xc
	b _08042F00
	.align 2, 0
_08042EF8: .4byte 0x00001EE4
_08042EFC:
	add r1, sp, #0xc
	movs r0, #0
_08042F00:
	strh r0, [r1, #6]
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r4, r5, r3
	ldr r0, [r4]
	ldr r6, _08042F24 @ =0x00001F38
	adds r0, r0, r6
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bhi _08042F28
	ldr r0, [r4]
	adds r0, r0, r6
	bl GetLove__C12Bachelorette
	add r1, sp, #0xc
	b _08042F2C
	.align 2, 0
_08042F24: .4byte 0x00001F38
_08042F28:
	add r1, sp, #0xc
	movs r0, #0
_08042F2C:
	strh r0, [r1, #8]
	movs r7, #1
	rsbs r7, r7, #0
	ldr r2, _08042F50 @ =0x00007530
	movs r4, #0
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	adds r5, #0x24
	mov r8, r5
	add r5, sp, #0xc
_08042F42:
	ldrh r0, [r5]
	cmp r0, r2
	bls _08042F54
	adds r7, r4, #0
	adds r2, r0, #0
	b _08042F74
	.align 2, 0
_08042F50: .4byte 0x00007530
_08042F54:
	cmp r0, r2
	bne _08042F74
	movs r0, #1
	rsbs r0, r0, #0
	cmp r7, r0
	beq _08042F72
	str r2, [sp, #0x3c]
	bl rand
	asrs r0, r0, #8
	movs r1, #1
	ands r0, r1
	ldr r2, [sp, #0x3c]
	cmp r0, #0
	bne _08042F74
_08042F72:
	adds r7, r4, #0
_08042F74:
	adds r5, #2
	adds r4, #1
	cmp r4, #4
	ble _08042F42
	cmp r7, #4
	bls _08042F82
	b _08043082
_08042F82:
	lsls r0, r7, #2
	ldr r1, _08042F8C @ =_08042F90
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08042F8C: .4byte _08042F90
_08042F90: @ jump table
	.4byte _08042FA4 @ case 0
	.4byte _08042FAA @ case 1
	.4byte _08042FB0 @ case 2
	.4byte _08042FB6 @ case 3
	.4byte _08042FBC @ case 4
_08042FA4:
	movs r1, #3
	mov sb, r1
	b _08043082
_08042FAA:
	movs r2, #0xc
	mov sb, r2
	b _08043082
_08042FB0:
	movs r3, #0x13
	mov sb, r3
	b _08043082
_08042FB6:
	movs r4, #0x15
	mov sb, r4
	b _08043082
_08042FBC:
	movs r0, #0x19
	mov sb, r0
	b _08043082
_08042FC2:
	ldr r0, [r4]
	ldr r1, _08042FE8 @ =0x00001CD4
	adds r0, r0, r1
	bl func_080A0490
	subs r0, #3
	movs r2, #0xda
	lsls r2, r2, #1
	adds r6, r5, r2
	movs r3, #0x24
	adds r3, r3, r5
	mov r8, r3
	cmp r0, #0x16
	bhi _08043082
	lsls r0, r0, #2
	ldr r1, _08042FEC @ =_08042FF0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08042FE8: .4byte 0x00001CD4
_08042FEC: .4byte _08042FF0
_08042FF0: @ jump table
	.4byte _0804304C @ case 0
	.4byte _08043082 @ case 1
	.4byte _08043082 @ case 2
	.4byte _08043082 @ case 3
	.4byte _08043082 @ case 4
	.4byte _08043082 @ case 5
	.4byte _08043082 @ case 6
	.4byte _08043082 @ case 7
	.4byte _08043082 @ case 8
	.4byte _08043058 @ case 9
	.4byte _08043082 @ case 10
	.4byte _08043082 @ case 11
	.4byte _08043082 @ case 12
	.4byte _08043082 @ case 13
	.4byte _08043082 @ case 14
	.4byte _08043082 @ case 15
	.4byte _0804305C @ case 16
	.4byte _08043082 @ case 17
	.4byte _08043068 @ case 18
	.4byte _08043082 @ case 19
	.4byte _08043082 @ case 20
	.4byte _08043082 @ case 21
	.4byte _08043074 @ case 22
_0804304C:
	movs r4, #3
	mov sb, r4
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	b _0804307E
_08043058:
	movs r1, #0xc
	b _08043076
_0804305C:
	movs r3, #0x13
	mov sb, r3
	movs r4, #0xda
	lsls r4, r4, #1
	adds r6, r5, r4
	b _0804307E
_08043068:
	movs r6, #0x15
	mov sb, r6
	movs r0, #0xda
	lsls r0, r0, #1
	adds r6, r5, r0
	b _0804307E
_08043074:
	movs r1, #0x19
_08043076:
	mov sb, r1
	movs r2, #0xda
	lsls r2, r2, #1
	adds r6, r5, r2
_0804307E:
	adds r5, #0x24
	mov r8, r5
_08043082:
	mov r3, sb
	cmp r3, #0x64
	bne _0804308C
	movs r4, #3
	mov sb, r4
_0804308C:
	mov r0, sb
	subs r0, #3
	cmp r0, #0x16
	bhi _08043100
	lsls r0, r0, #2
	ldr r1, _080430A0 @ =_080430A4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080430A0: .4byte _080430A4
_080430A4: @ jump table
	.4byte _08043124 @ case 0
	.4byte _08043100 @ case 1
	.4byte _08043100 @ case 2
	.4byte _08043100 @ case 3
	.4byte _08043100 @ case 4
	.4byte _08043100 @ case 5
	.4byte _08043100 @ case 6
	.4byte _08043100 @ case 7
	.4byte _08043100 @ case 8
	.4byte _08043136 @ case 9
	.4byte _08043100 @ case 10
	.4byte _08043100 @ case 11
	.4byte _08043100 @ case 12
	.4byte _08043100 @ case 13
	.4byte _08043100 @ case 14
	.4byte _08043100 @ case 15
	.4byte _08043100 @ case 16
	.4byte _08043100 @ case 17
	.4byte _08043148 @ case 18
	.4byte _08043100 @ case 19
	.4byte _08043100 @ case 20
	.4byte _08043100 @ case 21
	.4byte _08043112 @ case 22
_08043100:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _0804310A
	bl _08045572
_0804310A:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #0
	b _0804370E
_08043112:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _0804311C
	bl _08045572
_0804311C:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #1
	b _0804370E
_08043124:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _0804312E
	bl _08045572
_0804312E:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #2
	b _0804370E
_08043136:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _08043140
	bl _08045572
_08043140:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #3
	b _0804370E
_08043148:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _08043152
	bl _08045572
_08043152:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #4
	b _0804370E
_0804315A:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r7, [r0]
	ldr r0, _08043190 @ =0x00001C2C
	adds r4, r7, r0
	movs r6, #5
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804317E
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #0
	beq _08043198
_0804317E:
	ldr r0, _08043194 @ =gUnk_0300040C
	ldr r0, [r0]
	movs r1, #0xda
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r1, #0xab
	str r1, [r0]
	b _0804343A
	.align 2, 0
_08043190: .4byte 0x00001C2C
_08043194: .4byte gUnk_0300040C
_08043198:
	add r0, sp, #0xc
	adds r1, r4, #0
	bl func_0800F20C
	add r6, sp, #0xc
	ldr r0, _080431D0 @ =gUnk_0300040C
	ldr r4, [r0]
	movs r2, #0xda
	lsls r2, r2, #2
	adds r4, r4, r2
	adds r0, r6, #0
	bl GetId__C4Food
	str r0, [r4]
	ldr r3, _080431D4 @ =0x0000219B
	adds r0, r7, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r7, r0, #0x1d
	movs r4, #0
	cmp r7, #4
	bls _080431C6
	b _080433E4
_080431C6:
	lsls r0, r7, #2
	ldr r1, _080431D8 @ =_080431DC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080431D0: .4byte gUnk_0300040C
_080431D4: .4byte 0x0000219B
_080431D8: .4byte _080431DC
_080431DC: @ jump table
	.4byte _080431F0 @ case 0
	.4byte _0804323A @ case 1
	.4byte _0804336C @ case 2
	.4byte _08043398 @ case 3
	.4byte _080433AC @ case 4
_080431F0:
	adds r0, r6, #0
	bl GetId__C4Food
	cmp r0, #0x5c
	bne _080431FC
	b _080433E8
_080431FC:
	cmp r0, #0x5c
	bgt _0804321A
	cmp r0, #0x3e
	bne _08043206
	b _080433E8
_08043206:
	cmp r0, #0x3e
	bge _0804320C
	b _080433E4
_0804320C:
	cmp r0, #0x5a
	ble _08043212
	b _080433E4
_08043212:
	cmp r0, #0x54
	bge _08043218
	b _080433E4
_08043218:
	b _080433E8
_0804321A:
	cmp r0, #0x6f
	bne _08043220
	b _080433E8
_08043220:
	cmp r0, #0x6f
	bgt _0804322C
	cmp r0, #0x64
	bne _0804322A
	b _080433E8
_0804322A:
	b _080433E4
_0804322C:
	cmp r0, #0x91
	bne _08043232
	b _080433E8
_08043232:
	cmp r0, #0x9b
	beq _08043238
	b _080433E4
_08043238:
	b _080433E8
_0804323A:
	adds r0, r6, #0
	bl GetId__C4Food
	subs r0, #0x65
	cmp r0, #0x44
	bls _08043248
	b _080433E4
_08043248:
	lsls r0, r0, #2
	ldr r1, _08043254 @ =_08043258
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08043254: .4byte _08043258
_08043258: @ jump table
	.4byte _080433E8 @ case 0
	.4byte _080433E4 @ case 1
	.4byte _080433E4 @ case 2
	.4byte _080433E8 @ case 3
	.4byte _080433E8 @ case 4
	.4byte _080433E4 @ case 5
	.4byte _080433E4 @ case 6
	.4byte _080433E4 @ case 7
	.4byte _080433E4 @ case 8
	.4byte _080433E4 @ case 9
	.4byte _080433E4 @ case 10
	.4byte _080433E4 @ case 11
	.4byte _080433E8 @ case 12
	.4byte _080433E4 @ case 13
	.4byte _080433E8 @ case 14
	.4byte _080433E4 @ case 15
	.4byte _080433E8 @ case 16
	.4byte _080433E4 @ case 17
	.4byte _080433E4 @ case 18
	.4byte _080433E4 @ case 19
	.4byte _080433E4 @ case 20
	.4byte _080433E4 @ case 21
	.4byte _080433E4 @ case 22
	.4byte _080433E4 @ case 23
	.4byte _080433E4 @ case 24
	.4byte _080433E4 @ case 25
	.4byte _080433E4 @ case 26
	.4byte _080433E4 @ case 27
	.4byte _080433E4 @ case 28
	.4byte _080433E4 @ case 29
	.4byte _080433E4 @ case 30
	.4byte _080433E4 @ case 31
	.4byte _080433E4 @ case 32
	.4byte _080433E4 @ case 33
	.4byte _080433E4 @ case 34
	.4byte _080433E4 @ case 35
	.4byte _080433E4 @ case 36
	.4byte _080433E4 @ case 37
	.4byte _080433E8 @ case 38
	.4byte _080433E8 @ case 39
	.4byte _080433E4 @ case 40
	.4byte _080433E8 @ case 41
	.4byte _080433E8 @ case 42
	.4byte _080433E8 @ case 43
	.4byte _080433E4 @ case 44
	.4byte _080433E4 @ case 45
	.4byte _080433E4 @ case 46
	.4byte _080433E8 @ case 47
	.4byte _080433E4 @ case 48
	.4byte _080433E8 @ case 49
	.4byte _080433E8 @ case 50
	.4byte _080433E8 @ case 51
	.4byte _080433E4 @ case 52
	.4byte _080433E4 @ case 53
	.4byte _080433E4 @ case 54
	.4byte _080433E4 @ case 55
	.4byte _080433E8 @ case 56
	.4byte _080433E4 @ case 57
	.4byte _080433E4 @ case 58
	.4byte _080433E4 @ case 59
	.4byte _080433E4 @ case 60
	.4byte _080433E4 @ case 61
	.4byte _080433E4 @ case 62
	.4byte _080433E4 @ case 63
	.4byte _080433E4 @ case 64
	.4byte _080433E4 @ case 65
	.4byte _080433E8 @ case 66
	.4byte _080433E4 @ case 67
	.4byte _080433E8 @ case 68
_0804336C:
	adds r0, r6, #0
	bl GetId__C4Food
	cmp r0, #0x7c
	bgt _08043384
	cmp r0, #0x7a
	bge _080433E8
	cmp r0, #0x40
	beq _080433E8
	cmp r0, #0x53
	beq _080433E8
	b _080433E4
_08043384:
	cmp r0, #0x93
	bgt _08043392
	cmp r0, #0x92
	bge _080433E8
	cmp r0, #0x7e
	beq _080433E8
	b _080433E4
_08043392:
	cmp r0, #0x9e
	bne _080433E4
	b _080433E8
_08043398:
	adds r0, r6, #0
	bl GetId__C4Food
	cmp r0, #0x83
	blt _080433E4
	cmp r0, #0x86
	ble _080433E8
	cmp r0, #0x9f
	bne _080433E4
	b _080433E8
_080433AC:
	adds r0, r6, #0
	bl GetId__C4Food
	cmp r0, #0x79
	bgt _080433D2
	cmp r0, #0x76
	bge _080433E2
	cmp r0, #0x4d
	beq _080433E2
	cmp r0, #0x4d
	bgt _080433C8
	cmp r0, #0x3f
	beq _080433E2
	b _080433E4
_080433C8:
	cmp r0, #0x51
	beq _080433E2
	cmp r0, #0x6d
	beq _080433E2
	b _080433E4
_080433D2:
	cmp r0, #0x81
	beq _080433E2
	cmp r0, #0x81
	blt _080433E4
	cmp r0, #0xa6
	bgt _080433E4
	cmp r0, #0xa3
	blt _080433E4
_080433E2:
	movs r4, #1
_080433E4:
	cmp r4, #0
	beq _08043438
_080433E8:
	adds r0, r6, #0
	bl GetStaminaGain__C4Food
	adds r4, r0, #0
	adds r0, r6, #0
	bl GetFatigueGain__C4Food
	subs r4, r4, r0
	ldr r2, _08043408 @ =0x080F9EC5
	lsls r1, r7, #2
	adds r0, r1, r2
	ldrb r0, [r0]
	cmp r4, r0
	ble _0804340C
	movs r6, #0
	b _0804343A
	.align 2, 0
_08043408: .4byte 0x080F9EC5
_0804340C:
	adds r0, r2, #1
	adds r0, r1, r0
	ldrb r0, [r0]
	cmp r4, r0
	ble _0804341A
	movs r6, #1
	b _0804343A
_0804341A:
	adds r0, r2, #2
	adds r0, r1, r0
	ldrb r0, [r0]
	cmp r4, r0
	ble _08043428
	movs r6, #2
	b _0804343A
_08043428:
	adds r0, r2, #3
	adds r0, r1, r0
	movs r6, #4
	ldrb r0, [r0]
	cmp r4, r0
	ble _0804343A
	movs r6, #3
	b _0804343A
_08043438:
	movs r6, #5
_0804343A:
	adds r2, r5, #0
	adds r2, #0x24
	movs r4, #0xda
	lsls r4, r4, #1
	adds r1, r5, r4
	ldr r3, [r1]
	cmp r3, #0x63
	bls _0804344E
	bl _08045572
_0804344E:
	lsls r0, r3, #2
	adds r0, r2, r0
	str r6, [r0]
	bl _080454BE
_08043458:
	bl rand
	asrs r1, r0, #4
	movs r0, #0xff
	ands r1, r0
	movs r2, #0
	ldr r3, _08043474 @ =0x080F9ED9
_08043466:
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r1, r0
	bhi _08043478
	adds r4, r2, #1
	bl _080454A8
	.align 2, 0
_08043474: .4byte 0x080F9ED9
_08043478:
	subs r1, r1, r0
	adds r2, #1
	cmp r2, #4
	bls _08043466
	bl _08045572
_08043484:
	bl rand
	asrs r1, r0, #4
	movs r0, #0xff
	ands r1, r0
	movs r3, #0
	ldr r2, _080434A8 @ =0x080F9EE0
_08043492:
	ldrb r0, [r2]
	cmp r1, r0
	bhi _080434AC
	ldrh r4, [r2, #2]
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
	.align 2, 0
_080434A8: .4byte 0x080F9EE0
_080434AC:
	subs r1, r1, r0
	adds r2, #4
	adds r3, #1
	cmp r3, #4
	bls _08043492
	bl _08045572
_080434BA:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _080434DC @ =0x00001FE4
	adds r0, r0, r2
	bl func_0809EED0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_080434DC: .4byte 0x00001FE4
_080434E0:
	movs r4, #1
	mov sb, r4
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _08043500 @ =0x00001FE4
	adds r7, r0, r1
	movs r4, #0
	movs r2, #0xda
	lsls r2, r2, #1
	adds r6, r5, r2
	adds r5, #0x24
	mov r8, r5
	b _08043506
	.align 2, 0
_08043500: .4byte 0x00001FE4
_08043504:
	adds r4, #1
_08043506:
	cmp r4, #9
	bhi _0804351C
	adds r0, r7, #0
	adds r1, r4, #0
	bl func_0809EEA4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08043504
	movs r3, #0
	mov sb, r3
_0804351C:
	ldr r1, [r6]
	cmp r1, #0x63
	bls _08043526
	bl _08045572
_08043526:
	lsls r0, r1, #2
	add r0, r8
	mov r4, sb
	str r4, [r0]
	bl _08044A2C
_08043532:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _0804354E
	subs r0, r1, #1
	str r0, [r4]
_0804354E:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _08043560
	subs r0, r3, #1
	str r0, [r4]
_08043560:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08043570
	bl _0804168A
_08043570:
	bl func_08013F88
	bl _0804168A
_08043578:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	adds r0, #0x14
	bl func_08009B20
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	bl _080454A8
_0804358E:
	movs r0, #0xda
	lsls r0, r0, #1
	adds r3, r5, r0
	ldr r1, [r3]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r2, [r0, #0x20]
	cmp r1, #0
	beq _080435A4
	subs r0, r1, #1
	str r0, [r3]
_080435A4:
	ldr r0, [r5, #0x10]
	cmp r2, r0
	bhi _080435B8
	ldr r1, [r5, #0x14]
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r4, r1, r0
	b _080435BA
_080435B8:
	ldr r4, _080435F0 @ =0x080F9EB8
_080435BA:
	adds r0, r4, #0
	bl strlen
	cmp r0, #1
	bls _080435FC
	ldrb r0, [r4]
	lsls r0, r0, #8
	ldrb r1, [r4, #1]
	adds r0, r0, r1
	ldr r1, _080435F4 @ =0x0000FF21
	cmp r0, r1
	bne _080435FC
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r4, [r0]
	ldr r2, _080435F8 @ =0x00001BD8
	adds r4, r4, r2
	adds r0, r4, #0
	bl func_0800E4E0
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800E9A8
	bl _08045572
	.align 2, 0
_080435F0: .4byte 0x080F9EB8
_080435F4: .4byte 0x0000FF21
_080435F8: .4byte 0x00001BD8
_080435FC:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r6, _08043614 @ =0x00001BD8
	adds r0, r0, r6
	adds r1, r4, #0
	bl func_0800E9A8
	bl _08045572
	.align 2, 0
_08043614: .4byte 0x00001BD8
_08043618:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08043628
	bl _08045572
_08043628:
	bl func_080142F0
	bl _08045572
_08043630:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08043640
	bl _08045572
_08043640:
	bl func_08014304
	bl _08045572
_08043648:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _0804365E
	subs r0, r2, #1
	str r0, [r3]
_0804365E:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _0804366E
	bl _08045572
_0804366E:
	bl func_08014694
	bl _08045572
_08043676:
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	ldr r3, [r1]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r2, r0
	ldr r4, [r0]
	adds r6, r1, #0
	mov r8, r2
	cmp r3, #0
	beq _08043696
	subs r0, r3, #1
	str r0, [r6]
_08043696:
	cmp r4, #0x1d
	beq _080436BA
	cmp r4, #0x1d
	bgt _080436A4
	cmp r4, #0x12
	beq _080436E4
	b _080436A8
_080436A4:
	cmp r4, #0x27
	beq _080436F2
_080436A8:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _080436B2
	bl _08045572
_080436B2:
	lsls r0, r3, #2
	add r0, r8
	movs r1, #0
	b _0804370E
_080436BA:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl IsFireplaceLighted__C9FarmHouse
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldr r1, [r6]
	cmp r1, #0x63
	bls _080436DA
	bl _08045572
_080436DA:
	lsls r0, r1, #2
	add r0, r8
	str r2, [r0]
	bl _08044A2C
_080436E4:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldrb r0, [r0, #3]
	lsrs r1, r0, #7
	b _08043700
_080436F2:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	lsls r0, r0, #0x1f
	lsrs r1, r0, #0x1f
_08043700:
	ldr r3, [r6]
	cmp r3, #0x63
	bls _0804370A
	bl _08045572
_0804370A:
	lsls r0, r3, #2
	add r0, r8
_0804370E:
	str r1, [r0]
	adds r0, r3, #1
	str r0, [r6]
	bl _08045572
_08043718:
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _0804372E
	subs r0, r2, #1
	str r0, [r3]
_0804372E:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _0804373E
	bl _08045572
_0804373E:
	bl func_080146B0
	bl _08045572
_08043746:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r4, r5, r3
	ldr r0, [r4]
	movs r6, #0xfa
	lsls r6, r6, #1
	adds r0, r0, r6
	bl GetVaseArticleId__C9FarmHouse
	cmp r0, #0x5f
	bne _0804377C
	adds r1, r5, #0
	adds r1, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r3, [r2]
	cmp r3, #0x63
	bls _08043770
	bl _08045572
_08043770:
	lsls r0, r3, #2
	adds r0, r1, r0
	movs r1, #1
	rsbs r1, r1, #0
	bl sub_08045516
_0804377C:
	ldr r0, [r4]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetVaseArticleId__C9FarmHouse
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_08043798:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080437AE
	subs r0, r2, #1
	str r0, [r3]
_080437AE:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _080437BE
	bl _08045572
_080437BE:
	bl func_080146CC
	bl _08045572
_080437C6:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _080437E2
	subs r0, r2, #1
	str r0, [r4]
_080437E2:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl IsIncubatorOccupied__C4CoopUi
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_080437FC:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _0804381C @ =0x00001DAC
	adds r0, r0, r6
	bl func_0809ECD8
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
	.align 2, 0
_0804381C: .4byte 0x00001DAC
_08043820:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _08043844 @ =0x00001DAC
	adds r0, r0, r2
	bl func_0809ECE0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
	.align 2, 0
_08043844: .4byte 0x00001DAC
_08043848:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _08043870 @ =0x00001DAC
	adds r0, r0, r6
	bl func_0809ECD8
	mov sl, r0
	movs r6, #0x51
	movs r7, #0x5f
	subs r0, #1
	cmp r0, #0x24
	bls _08043866
	b _08043BA2
_08043866:
	lsls r0, r0, #2
	ldr r1, _08043874 @ =_08043878
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08043870: .4byte 0x00001DAC
_08043874: .4byte _08043878
_08043878: @ jump table
	.4byte _0804390C @ case 0
	.4byte _0804390C @ case 1
	.4byte _0804390C @ case 2
	.4byte _0804390C @ case 3
	.4byte _0804390C @ case 4
	.4byte _08043978 @ case 5
	.4byte _08043978 @ case 6
	.4byte _08043978 @ case 7
	.4byte _08043978 @ case 8
	.4byte _08043978 @ case 9
	.4byte _080439E4 @ case 10
	.4byte _080439E4 @ case 11
	.4byte _080439E4 @ case 12
	.4byte _080439E4 @ case 13
	.4byte _080439E4 @ case 14
	.4byte _08043A50 @ case 15
	.4byte _08043A50 @ case 16
	.4byte _08043A50 @ case 17
	.4byte _08043A50 @ case 18
	.4byte _08043A50 @ case 19
	.4byte _08043ABC @ case 20
	.4byte _08043ABC @ case 21
	.4byte _08043ABC @ case 22
	.4byte _08043ABC @ case 23
	.4byte _08043ABC @ case 24
	.4byte _08043B28 @ case 25
	.4byte _08043B28 @ case 26
	.4byte _08043B28 @ case 27
	.4byte _08043B28 @ case 28
	.4byte _08043B28 @ case 29
	.4byte _08043B94 @ case 30
	.4byte _08043B98 @ case 31
	.4byte _08043B9C @ case 32
	.4byte _08043BA0 @ case 33
	.4byte _08043BA2 @ case 34
	.4byte _08043BA2 @ case 35
	.4byte _08043BA2 @ case 36
_0804390C:
	adds r0, r5, #0
	movs r1, #0
	bl func_0804E354
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08043958
	mov r0, sl
	subs r0, #1
	cmp r0, #4
	bhi _08043944
	lsls r0, r0, #2
	ldr r1, _0804392C @ =_08043930
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0804392C: .4byte _08043930
_08043930: @ jump table
	.4byte _08043944 @ case 0
	.4byte _08043948 @ case 1
	.4byte _0804394C @ case 2
	.4byte _08043950 @ case 3
	.4byte _08043954 @ case 4
_08043944:
	movs r6, #1
	b _08043BA2
_08043948:
	movs r6, #2
	b _08043BA2
_0804394C:
	movs r6, #3
	b _08043BA2
_08043950:
	movs r6, #4
	b _08043BA2
_08043954:
	movs r6, #7
	b _08043BA2
_08043958:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _08043974 @ =0x00001BD8
	adds r0, r0, r2
	movs r1, #1
	bl func_0800EB2C
	bl func_0800EFD8
	movs r6, #0
	b _08043BA2
	.align 2, 0
_08043974: .4byte 0x00001BD8
_08043978:
	adds r0, r5, #0
	movs r1, #8
	bl func_0804E354
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080439C4
	mov r0, sl
	subs r0, #6
	cmp r0, #4
	bhi _080439B0
	lsls r0, r0, #2
	ldr r1, _08043998 @ =_0804399C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08043998: .4byte _0804399C
_0804399C: @ jump table
	.4byte _080439B0 @ case 0
	.4byte _080439B4 @ case 1
	.4byte _080439B8 @ case 2
	.4byte _080439BC @ case 3
	.4byte _080439C0 @ case 4
_080439B0:
	movs r6, #9
	b _08043BA2
_080439B4:
	movs r6, #0xa
	b _08043BA2
_080439B8:
	movs r6, #0xb
	b _08043BA2
_080439BC:
	movs r6, #0xc
	b _08043BA2
_080439C0:
	movs r6, #0xf
	b _08043BA2
_080439C4:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r4, _080439E0 @ =0x00001BD8
	adds r0, r0, r4
	movs r1, #0
	bl func_0800EB2C
	bl func_0800EFD8
	movs r6, #8
	b _08043BA2
	.align 2, 0
_080439E0: .4byte 0x00001BD8
_080439E4:
	adds r0, r5, #0
	movs r1, #0x10
	bl func_0804E354
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08043A30
	mov r0, sl
	subs r0, #0xb
	cmp r0, #4
	bhi _08043A1C
	lsls r0, r0, #2
	ldr r1, _08043A04 @ =_08043A08
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08043A04: .4byte _08043A08
_08043A08: @ jump table
	.4byte _08043A1C @ case 0
	.4byte _08043A20 @ case 1
	.4byte _08043A24 @ case 2
	.4byte _08043A28 @ case 3
	.4byte _08043A2C @ case 4
_08043A1C:
	movs r6, #0x11
	b _08043BA2
_08043A20:
	movs r6, #0x12
	b _08043BA2
_08043A24:
	movs r6, #0x13
	b _08043BA2
_08043A28:
	movs r6, #0x14
	b _08043BA2
_08043A2C:
	movs r6, #0x17
	b _08043BA2
_08043A30:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _08043A4C @ =0x00001BD8
	adds r0, r0, r1
	movs r1, #2
	bl func_0800EB2C
	bl func_0800EFD8
	movs r6, #0x10
	b _08043BA2
	.align 2, 0
_08043A4C: .4byte 0x00001BD8
_08043A50:
	adds r0, r5, #0
	movs r1, #0x18
	bl func_0804E354
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08043A9C
	mov r0, sl
	subs r0, #0x10
	cmp r0, #4
	bhi _08043A88
	lsls r0, r0, #2
	ldr r1, _08043A70 @ =_08043A74
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08043A70: .4byte _08043A74
_08043A74: @ jump table
	.4byte _08043A88 @ case 0
	.4byte _08043A8C @ case 1
	.4byte _08043A90 @ case 2
	.4byte _08043A94 @ case 3
	.4byte _08043A98 @ case 4
_08043A88:
	movs r6, #0x19
	b _08043BA2
_08043A8C:
	movs r6, #0x1a
	b _08043BA2
_08043A90:
	movs r6, #0x1b
	b _08043BA2
_08043A94:
	movs r6, #0x1c
	b _08043BA2
_08043A98:
	movs r6, #0x1f
	b _08043BA2
_08043A9C:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08043AB8 @ =0x00001BD8
	adds r0, r0, r3
	movs r1, #3
	bl func_0800EB2C
	bl func_0800EFD8
	movs r6, #0x18
	b _08043BA2
	.align 2, 0
_08043AB8: .4byte 0x00001BD8
_08043ABC:
	adds r0, r5, #0
	movs r1, #0x20
	bl func_0804E354
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08043B08
	mov r0, sl
	subs r0, #0x15
	cmp r0, #4
	bhi _08043AF4
	lsls r0, r0, #2
	ldr r1, _08043ADC @ =_08043AE0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08043ADC: .4byte _08043AE0
_08043AE0: @ jump table
	.4byte _08043AF4 @ case 0
	.4byte _08043AF8 @ case 1
	.4byte _08043AFC @ case 2
	.4byte _08043B00 @ case 3
	.4byte _08043B04 @ case 4
_08043AF4:
	movs r6, #0x21
	b _08043BA2
_08043AF8:
	movs r6, #0x22
	b _08043BA2
_08043AFC:
	movs r6, #0x23
	b _08043BA2
_08043B00:
	movs r6, #0x24
	b _08043BA2
_08043B04:
	movs r6, #0x27
	b _08043BA2
_08043B08:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _08043B24 @ =0x00001BD8
	adds r0, r0, r6
	movs r1, #4
	bl func_0800EB2C
	bl func_0800EFD8
	movs r6, #0x20
	b _08043BA2
	.align 2, 0
_08043B24: .4byte 0x00001BD8
_08043B28:
	adds r0, r5, #0
	movs r1, #0x28
	bl func_0804E354
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08043B74
	mov r0, sl
	subs r0, #0x1a
	cmp r0, #4
	bhi _08043B60
	lsls r0, r0, #2
	ldr r1, _08043B48 @ =_08043B4C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08043B48: .4byte _08043B4C
_08043B4C: @ jump table
	.4byte _08043B60 @ case 0
	.4byte _08043B64 @ case 1
	.4byte _08043B68 @ case 2
	.4byte _08043B6C @ case 3
	.4byte _08043B70 @ case 4
_08043B60:
	movs r6, #0x29
	b _08043BA2
_08043B64:
	movs r6, #0x2a
	b _08043BA2
_08043B68:
	movs r6, #0x2b
	b _08043BA2
_08043B6C:
	movs r6, #0x2c
	b _08043BA2
_08043B70:
	movs r6, #0x2f
	b _08043BA2
_08043B74:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _08043B90 @ =0x00001BD8
	adds r0, r0, r2
	movs r1, #5
	bl func_0800EB2C
	bl func_0800EFD8
	movs r6, #0x28
	b _08043BA2
	.align 2, 0
_08043B90: .4byte 0x00001BD8
_08043B94:
	movs r7, #0x2c
	b _08043BA2
_08043B98:
	movs r7, #0x2d
	b _08043BA2
_08043B9C:
	movs r7, #0x2e
	b _08043BA2
_08043BA0:
	movs r7, #0x2f
_08043BA2:
	movs r3, #3
	mov sb, r3
	movs r4, #0
	mov r8, r4
	cmp r6, #0x51
	bne _08043BB0
	b _08043D06
_08043BB0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _08043BF0 @ =0x00001C34
	adds r7, r0, r2
	adds r0, r7, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08043BF4
	add r4, sp, #0x30
	adds r0, r4, #0
	adds r1, r6, #0
	bl __4ToolUi
	ldrb r1, [r4]
	add r0, sp, #0xc
	movs r2, #1
	bl __9ToolStackG4ToolUi
	adds r0, r7, #0
	add r1, sp, #0xc
	movs r2, #2
	bl memcpy
	movs r3, #0
	mov sb, r3
	movs r4, #1
	mov r8, r4
	b _08043C78
	.align 2, 0
_08043BF0: .4byte 0x00001C34
_08043BF4:
	movs r4, #0
	adds r0, r7, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x31
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, r6
	bne _08043C18
	adds r0, r7, #0
	bl GetAmount__C9ToolStack
	cmp r0, #0x62
	bhi _08043C18
	movs r4, #1
_08043C18:
	cmp r4, #0
	beq _08043C2E
	adds r0, r7, #0
	movs r1, #1
	bl AddAmount__9ToolStackUi
	movs r6, #0
	mov sb, r6
	movs r0, #1
	mov r8, r0
	b _08043C78
_08043C2E:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r4, r5, r1
	ldr r0, [r4]
	ldr r2, _08043C50 @ =0x00001C38
	adds r0, r0, r2
	adds r1, r6, #0
	movs r2, #1
	bl func_0800FEC8
	cmp r0, #0
	bne _08043C54
	movs r3, #1
	mov sb, r3
	mov r8, r3
	b _08043C78
	.align 2, 0
_08043C50: .4byte 0x00001C38
_08043C54:
	ldr r0, [r4]
	movs r4, #0xe0
	lsls r4, r4, #2
	adds r0, r0, r4
	adds r1, r6, #0
	movs r2, #1
	bl AddAmountOf__9ToolChestUiUi
	cmp r0, #0
	bne _08043C70
	movs r6, #2
	mov sb, r6
	movs r0, #1
	mov r8, r0
_08043C70:
	mov r1, r8
	cmp r1, #0
	bne _08043C78
	b _08043D98
_08043C78:
	mov r0, sl
	subs r0, #5
	cmp r0, #0x19
	bls _08043C82
	b _08043D82
_08043C82:
	lsls r0, r0, #2
	ldr r1, _08043C8C @ =_08043C90
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08043C8C: .4byte _08043C90
_08043C90: @ jump table
	.4byte _08043CF8 @ case 0
	.4byte _08043D82 @ case 1
	.4byte _08043D82 @ case 2
	.4byte _08043D82 @ case 3
	.4byte _08043D82 @ case 4
	.4byte _08043CF8 @ case 5
	.4byte _08043D82 @ case 6
	.4byte _08043D82 @ case 7
	.4byte _08043D82 @ case 8
	.4byte _08043D82 @ case 9
	.4byte _08043CF8 @ case 10
	.4byte _08043D82 @ case 11
	.4byte _08043D82 @ case 12
	.4byte _08043D82 @ case 13
	.4byte _08043D82 @ case 14
	.4byte _08043CF8 @ case 15
	.4byte _08043D82 @ case 16
	.4byte _08043D82 @ case 17
	.4byte _08043D82 @ case 18
	.4byte _08043D82 @ case 19
	.4byte _08043CF8 @ case 20
	.4byte _08043D82 @ case 21
	.4byte _08043D82 @ case 22
	.4byte _08043D82 @ case 23
	.4byte _08043D82 @ case 24
	.4byte _08043CF8 @ case 25
_08043CF8:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	bl func_08010F48
	b _08043D82
_08043D06:
	cmp r7, #0x5f
	beq _08043D7E
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r4, r5, r3
	ldr r0, [r4]
	ldr r1, _08043D3C @ =0x00001C2C
	adds r6, r0, r1
	adds r0, r6, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08043D40
	mov r4, sp
	adds r4, #0x32
	adds r0, r4, #0
	adds r1, r7, #0
	bl __7ArticleUi
	ldrb r1, [r4]
	adds r0, r6, #0
	bl func_0800F3E8
	movs r2, #0
	mov sb, r2
	b _08043D88
	.align 2, 0
_08043D3C: .4byte 0x00001C2C
_08043D40:
	ldr r0, [r4]
	ldr r3, _08043D58 @ =0x00001C38
	adds r0, r0, r3
	adds r1, r7, #0
	movs r2, #1
	bl func_0800FDC4
	cmp r0, #0
	bne _08043D5C
	movs r4, #1
	mov sb, r4
	b _08043D88
	.align 2, 0
_08043D58: .4byte 0x00001C38
_08043D5C:
	ldr r0, [r4]
	movs r6, #0xfa
	lsls r6, r6, #1
	adds r0, r0, r6
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _08043D82
	adds r1, r7, #0
	movs r2, #1
	bl AddAmountOf__5ShelfUiUi
	cmp r0, #0
	bne _08043D82
	movs r0, #2
	mov sb, r0
	b _08043D88
_08043D7E:
	movs r1, #1
	mov r8, r1
_08043D82:
	mov r2, r8
	cmp r2, #0
	beq _08043D98
_08043D88:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r4, _08043DB8 @ =0x00001DAC
	adds r0, r0, r4
	bl func_0809ED64
_08043D98:
	adds r2, r5, #0
	adds r2, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r1, r5, r6
	ldr r3, [r1]
	cmp r3, #0x63
	bls _08043DAC
	bl _08045572
_08043DAC:
	lsls r0, r3, #2
	adds r0, r2, r0
	mov r2, sb
	str r2, [r0]
	bl _080454BE
	.align 2, 0
_08043DB8: .4byte 0x00001DAC
_08043DBC:
	adds r3, r5, #0
	adds r3, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r4, r5, r6
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08043DD8
	subs r0, r1, #1
	str r0, [r4]
_08043DD8:
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r3, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08043DEA
	subs r0, r1, #1
	str r0, [r4]
_08043DEA:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r5, [r0]
	cmp r5, #0
	bne _08043DFA
	bl _08045572
_08043DFA:
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	add r1, sp, #0x34
	movs r0, #0x1f
	ands r3, r0
	ldrb r4, [r1]
	subs r0, #0x3f
	ands r0, r4
	orrs r0, r3
	strb r0, [r1]
	movs r0, #0x3f
	ands r2, r0
	lsls r2, r2, #5
	ldrh r3, [r1]
	ldr r0, _08043E2C @ =0xFFFFF81F
	ands r0, r3
	orrs r0, r2
	strh r0, [r1]
	adds r0, r5, #0
	bl func_08014318
	bl _08045572
	.align 2, 0
_08043E2C: .4byte 0xFFFFF81F
_08043E30:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08043E4C
	subs r0, r2, #1
	str r0, [r4]
_08043E4C:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r0, r2
	bl func_0800BD14
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_08043E66:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08043E82
	subs r0, r2, #1
	str r0, [r4]
_08043E82:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r0, r0, r3
	bl func_0800BD40
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_08043E9C:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08043EB2
	subs r0, r2, #1
	str r0, [r3]
_08043EB2:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r0, r2
	bl func_0800BCB0
	bl _08045572
_08043EC8:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08043EDE
	subs r0, r2, #1
	str r0, [r3]
_08043EDE:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r0, r2
	bl func_0800BCD0
	bl _08045572
_08043EF4:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	movs r4, #0x80
	lsls r4, r4, #3
	adds r0, r0, r4
	bl func_0800BD6C
	bl _080454A6
_08043F0A:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r0, r2
	bl func_0800BDEC
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_08043F2C:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r6, r5, r4
	ldr r0, [r6]
	cmp r0, #0
	bne _08043F3C
	bl _08045572
_08043F3C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetUpgradeLevel__C9FarmHouse
	ldr r2, [r6]
	ldr r1, _08043F78 @ =0x080F9EF4
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r4, [r0]
	adds r0, r2, #0
	movs r1, #0x1d
	adds r2, r4, #0
	movs r3, #0x70
	bl func_080122E0
	ldr r0, [r6]
	movs r1, #2
	str r1, [sp]
	movs r1, #0
	adds r2, r4, #0
	movs r3, #0x70
	bl func_08012064
	bl _08045572
	.align 2, 0
_08043F78: .4byte 0x080F9EF4
_08043F7C:
	adds r4, r5, #0
	adds r4, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r3, r5, r6
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _08043F98
	subs r0, r1, #1
	str r0, [r3]
_08043F98:
	ldr r1, [r3]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r1, #0
	beq _08043FAA
	subs r0, r1, #1
	str r0, [r3]
_08043FAA:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08043FBC
	subs r0, r2, #1
	str r0, [r3]
_08043FBC:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r2, [r0]
	cmp r2, #0
	bne _08043FCC
	bl _0804168A
_08043FCC:
	lsls r0, r6, #5
	orrs r1, r0
	lsls r0, r7, #0xa
	orrs r1, r0
	adds r0, r2, #0
	bl func_080146FC
	bl _0804168A
_08043FDE:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	bl func_08014D7C
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	bl _080454A8
_08043FF2:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _0804400E
	subs r0, r1, #1
	str r0, [r4]
_0804400E:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _08044020
	subs r0, r3, #1
	str r0, [r4]
_08044020:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08044030
	bl _08045572
_08044030:
	bl func_080159B0
	bl _08045572
_08044038:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08044048
	bl _08045572
_08044048:
	bl func_08014AF8
	bl _08045572
_08044050:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0804406C
	subs r0, r2, #1
	str r0, [r4]
_0804406C:
	adds r0, r5, #0
	bl func_0804E0F8
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_0804407A:
	adds r6, r5, #0
	adds r6, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08044096
	subs r0, r2, #1
	str r0, [r4]
_08044096:
	adds r0, r5, #0
	bl func_0804E17C
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_080440A4:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _080440C0
	subs r0, r2, #1
	str r0, [r4]
_080440C0:
	adds r0, r5, #0
	bl func_0804E1D4
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_080440CE:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _080440EA
	subs r0, r2, #1
	str r0, [r4]
_080440EA:
	adds r0, r5, #0
	bl func_0804E354
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_080440F8:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08044114
	subs r0, r2, #1
	str r0, [r4]
_08044114:
	adds r0, r5, #0
	bl func_0804E2C0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_08044122:
	adds r6, r5, #0
	adds r6, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0804413E
	subs r0, r2, #1
	str r0, [r4]
_0804413E:
	adds r0, r5, #0
	bl func_0804E22C
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_0804414C:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _08044160 @ =0x000034C5
	adds r0, r0, r3
	movs r1, #1
	strb r1, [r0]
	bl _08045572
	.align 2, 0
_08044160: .4byte 0x000034C5
_08044164:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r7, [r0]
	cmp r2, #0
	beq _08044180
	subs r0, r2, #1
	str r0, [r4]
_08044180:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r5, r5, r1
	ldr r0, [r5]
	adds r0, #0x54
	adds r1, r7, #0
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	bne _0804419C
	bl _08045166
_0804419C:
	ldr r0, [r5]
	adds r0, #0x54
	adds r1, r7, #0
	bl GetAmountShipped__C11ShippingBini
	adds r2, r0, #0
	bl _08045166
_080441AC:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	bl CountCows__C4Barn
	bl _080454A6
_080441C2:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl CountSheeps__C4Barn
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_080441E4:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	movs r6, #0x82
	lsls r6, r6, #3
	adds r0, r0, r6
	bl CountChickens__C4Coop
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
_08044206:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _08044230 @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800ED14
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08044226
	bl _0804168A
_08044226:
	bl func_08014198
	bl _0804168A
	.align 2, 0
_08044230: .4byte 0x00001BD8
_08044234:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _08044258 @ =0x00001BD8
	adds r0, r0, r6
	bl func_0800E934
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
	.align 2, 0
_08044258: .4byte 0x00001BD8
_0804425C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _08044270 @ =0x00001C38
	adds r0, r0, r2
	bl func_0800FA60
	bl _08045572
	.align 2, 0
_08044270: .4byte 0x00001C38
_08044274:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r4, _08044288 @ =0x00001C38
	adds r0, r0, r4
	bl func_0800F5D8
	bl _080454A6
	.align 2, 0
_08044288: .4byte 0x00001C38
_0804428C:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080442A8
	subs r0, r1, #1
	str r0, [r4]
_080442A8:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _080442BA
	subs r0, r3, #1
	str r0, [r4]
_080442BA:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _080442CA
	bl _08045572
_080442CA:
	bl func_08014C0C
	bl _08045572
_080442D2:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080442E2
	bl _08045572
_080442E2:
	bl func_08014BD8
	bl _08045572
_080442EA:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08044306
	subs r0, r1, #1
	str r0, [r4]
_08044306:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _08044318
	subs r0, r3, #1
	str r0, [r4]
_08044318:
	adds r0, r5, #0
	bl func_0804E3D8
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
	ldr r2, [r4]
	cmp r2, #0x63
	bls _0804432E
	bl _08045572
_0804432E:
	lsls r0, r2, #2
	adds r0, r6, r0
	bl _08044CF6
_08044336:
	adds r6, r5, #0
	adds r6, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r2, r5, r1
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _08044354
	subs r0, r1, #1
	str r0, [r2]
_08044354:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r1, #0
	beq _08044368
	subs r0, r1, #1
	str r0, [r2]
_08044368:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _0804437A
	subs r0, r1, #1
	str r0, [r2]
_0804437A:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _0804438C
	subs r0, r1, #1
	str r0, [r2]
_0804438C:
	ldr r4, [r2]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r4, #0
	beq _0804439E
	subs r0, r4, #1
	str r0, [r2]
_0804439E:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _080443AE
	bl _08045572
_080443AE:
	mov r4, r8
	str r4, [sp]
	mov r6, sb
	str r6, [sp, #4]
	adds r2, r7, #0
	bl func_08014C34
	bl _08045572
_080443C0:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080443DC
	subs r0, r1, #1
	str r0, [r4]
_080443DC:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _080443EE
	subs r0, r3, #1
	str r0, [r4]
_080443EE:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _080443FE
	bl _08045572
_080443FE:
	bl func_08014D30
	bl _08045572
_08044406:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08044422
	subs r0, r1, #1
	str r0, [r4]
_08044422:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _08044434
	subs r0, r3, #1
	str r0, [r4]
_08044434:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r6, [r0]
	cmp r3, #0
	beq _08044446
	subs r0, r3, #1
	str r0, [r4]
_08044446:
	adds r0, r5, #0
	bl func_0804E3D8
	adds r1, r0, #0
	cmp r1, #0
	bne _08044456
	bl _08045572
_08044456:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r4, [r0]
	cmp r4, #0
	bne _08044466
	bl _08045572
_08044466:
	adds r0, r1, #0
	bl GetName__C6Animal
	adds r2, r0, #0
	bl sub_08044D86
_08044472:
	movs r4, #0
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08044484
	bl _080454A8
_08044484:
	bl func_08014D5C
	bl _080454A6
_0804448C:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080444A8
	subs r0, r1, #1
	str r0, [r4]
_080444A8:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _080444BA
	subs r0, r3, #1
	str r0, [r4]
_080444BA:
	adds r0, r5, #0
	bl func_0804E3D8
	adds r2, r0, #0
	cmp r2, #0
	bne _080444CA
	bl _08045166
_080444CA:
	bl HasBeenTalkedTo__C6Animal
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_080444D6:
	adds r6, r5, #0
	adds r6, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080444F2
	subs r0, r1, #1
	str r0, [r4]
_080444F2:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _08044504
	subs r0, r3, #1
	str r0, [r4]
_08044504:
	adds r0, r5, #0
	bl func_0804E3D8
	cmp r0, #0
	bne _08044512
	bl _08045572
_08044512:
	bl SetTalkedTo__6Animal
	bl _08045572
_0804451A:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08044536
	subs r0, r1, #1
	str r0, [r4]
_08044536:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _08044548
	subs r0, r3, #1
	str r0, [r4]
_08044548:
	adds r0, r5, #0
	bl func_0804E3D8
	adds r2, r0, #0
	cmp r2, #0
	bne _08044558
	bl _08045166
_08044558:
	bl GetAge__C6Animal
	adds r2, r0, #0
	bl _08045166
_08044562:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r7, [r0]
	cmp r2, #0
	beq _0804457E
	subs r0, r2, #1
	str r0, [r4]
_0804457E:
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08044590
	subs r0, r1, #1
	str r0, [r4]
_08044590:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _080445A2
	subs r0, r3, #1
	str r0, [r4]
_080445A2:
	adds r0, r5, #0
	bl func_0804E3D8
	cmp r0, #0
	bne _080445B0
	bl _08045572
_080445B0:
	adds r1, r7, #0
	bl AddAffection__6Animali
	bl _08045572
_080445BA:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080445D6
	subs r0, r1, #1
	str r0, [r4]
_080445D6:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _080445E8
	subs r0, r3, #1
	str r0, [r4]
_080445E8:
	adds r0, r5, #0
	bl func_0804E3D8
	adds r2, r0, #0
	cmp r2, #0
	bne _080445F8
	bl _08045166
_080445F8:
	bl IsUnhappy__C9Livestock
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_08044604:
	adds r6, r5, #0
	adds r6, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08044620
	subs r0, r1, #1
	str r0, [r4]
_08044620:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _08044632
	subs r0, r3, #1
	str r0, [r4]
_08044632:
	adds r0, r5, #0
	bl func_0804E3D8
	adds r2, r0, #0
	cmp r2, #0
	bne _08044642
	bl _08045166
_08044642:
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_0804464E:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _0804466A
	subs r0, r1, #1
	str r0, [r4]
_0804466A:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _0804467C
	subs r0, r3, #1
	str r0, [r4]
_0804467C:
	adds r0, r5, #0
	bl func_0804E3D8
	adds r2, r0, #0
	cmp r2, #0
	bne _0804468C
	bl _08045166
_0804468C:
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_08044698:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080446B4
	subs r0, r1, #1
	str r0, [r4]
_080446B4:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _080446C6
	subs r0, r3, #1
	str r0, [r4]
_080446C6:
	adds r0, r5, #0
	bl func_0804E3D8
	adds r2, r0, #0
	cmp r2, #0
	bne _080446D6
	bl _08045166
_080446D6:
	bl GetDaysPregnantHealthy__C10BarnAnimal
	adds r2, r0, #0
	bl _08045166
_080446E0:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _080446FC
	subs r0, r1, #1
	str r0, [r4]
_080446FC:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _0804470E
	subs r0, r3, #1
	str r0, [r4]
_0804470E:
	adds r0, r5, #0
	bl func_0804E3D8
	movs r2, #0
	cmp r0, #0
	bne _0804471E
	bl _08045166
_0804471E:
	bl GetAffection__C6Animal
	adds r2, r0, #0
	bl _08045166
_08044728:
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r3, [r1]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r2, r0
	ldr r4, [r0]
	adds r6, r1, #0
	mov r8, r2
	cmp r3, #0
	beq _08044748
	subs r0, r3, #1
	str r0, [r6]
_08044748:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	add r0, r8
	ldr r2, [r0]
	cmp r1, #0
	beq _0804475A
	subs r0, r1, #1
	str r0, [r6]
_0804475A:
	movs r7, #0
	cmp r2, #4
	bls _08044762
	b _08044A1C
_08044762:
	lsls r0, r2, #2
	ldr r1, _0804476C @ =_08044770
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0804476C: .4byte _08044770
_08044770: @ jump table
	.4byte _08044784 @ case 0
	.4byte _080447B4 @ case 1
	.4byte _080447D4 @ case 2
	.4byte _080447F4 @ case 3
	.4byte _0804479E @ case 4
_08044784:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	adds r0, #0x14
	bl func_08009C3C
	cmp r0, #0
	bne _08044798
	b _08044A1C
_08044798:
	bl GetGrowthStage__C5Horse
	b _08044812
_0804479E:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _080447B0 @ =0x00001C70
	adds r0, r0, r2
	bl GetGrowthStage__C3Dog
	b _08044812
	.align 2, 0
_080447B0: .4byte 0x00001C70
_080447B4:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r4, #0
	bl GetCow__4BarnUi
	cmp r0, #0
	bne _080447CE
	b _08044A1C
_080447CE:
	bl GetGrowthStage__C3Cow
	b _08044812
_080447D4:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	adds r1, r4, #0
	bl GetSheep__4BarnUi
	cmp r0, #0
	bne _080447EE
	b _08044A1C
_080447EE:
	bl GetGrowthStage__C5Sheep
	b _08044812
_080447F4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	adds r1, r4, #0
	bl GetChicken__4CoopUi
	cmp r0, #0
	bne _0804480E
	b _08044A1C
_0804480E:
	bl GetGrowthStage__C7Chicken
_08044812:
	adds r7, r0, #0
	b _08044A1C
_08044816:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _08044832
	subs r0, r1, #1
	str r0, [r4]
_08044832:
	adds r0, r5, #0
	movs r1, #2
	bl func_0804E3D8
	adds r2, r0, #0
	cmp r2, #0
	bne _08044844
	bl _08045166
_08044844:
	bl IsSheared__C5Sheep
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	bl _08045166
_08044850:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r2, [r0]
	cmp r1, #0
	beq _0804486C
	subs r0, r1, #1
	str r0, [r4]
_0804486C:
	ldr r3, [r4]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r3, #0
	beq _0804487E
	subs r0, r3, #1
	str r0, [r4]
_0804487E:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _0804488E
	bl _08045572
_0804488E:
	bl func_08016834
	bl _08045572
_08044896:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080448AC
	subs r0, r2, #1
	str r0, [r3]
_080448AC:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _080448BC
	bl _08045572
_080448BC:
	bl func_080168D4
	bl _08045572
_080448C4:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r2, #0
	beq _080448E0
	subs r0, r2, #1
	str r0, [r4]
_080448E0:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _080448FA
	adds r0, r1, #0
	adds r1, r3, #0
	bl func_08016AFC
	adds r2, r0, #0
	bl _08045166
_080448FA:
	ldr r3, [r4]
	cmp r3, #0x63
	bls _08044904
	bl _08045572
_08044904:
	lsls r0, r3, #2
	adds r0, r6, r0
	str r1, [r0]
	adds r0, r3, #1
	str r0, [r4]
	bl _08045572
_08044912:
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r3, [r1]
	lsls r0, r3, #2
	subs r0, #4
	adds r0, r2, r0
	ldr r0, [r0]
	mov sb, r0
	adds r6, r1, #0
	mov r8, r2
	cmp r3, #0
	beq _08044934
	subs r0, r3, #1
	str r0, [r6]
_08044934:
	ldr r1, [r6]
	lsls r0, r1, #2
	subs r0, #4
	add r0, r8
	ldr r2, [r0]
	cmp r1, #0
	beq _08044946
	subs r0, r1, #1
	str r0, [r6]
_08044946:
	movs r7, #0
	cmp r2, #4
	bhi _08044A1C
	lsls r0, r2, #2
	ldr r1, _08044958 @ =_0804495C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08044958: .4byte _0804495C
_0804495C: @ jump table
	.4byte _08044A1C @ case 0
	.4byte _08044970 @ case 1
	.4byte _080449AA @ case 2
	.4byte _080449E4 @ case 3
	.4byte _08044A1C @ case 4
_08044970:
	movs r4, #0
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r5, r5, r0
	b _08044998
_0804497A:
	ldr r0, [r5]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r4, #0
	bl GetCow__4BarnUi
	cmp r0, #0
	beq _08044996
	bl method_0809B514__C9Livestock
	cmp r0, sb
	bne _08044996
	adds r7, #1
_08044996:
	adds r4, #1
_08044998:
	ldr r0, [r5]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetCapacity__C4Barn
	cmp r4, r0
	blo _0804497A
	b _08044A1C
_080449AA:
	movs r4, #0
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r5, r5, r3
	b _080449D2
_080449B4:
	ldr r0, [r5]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r4, #0
	bl GetSheep__4BarnUi
	cmp r0, #0
	beq _080449D0
	bl method_0809B514__C9Livestock
	cmp r0, sb
	bne _080449D0
	adds r7, #1
_080449D0:
	adds r4, #1
_080449D2:
	ldr r0, [r5]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetCapacity__C4Barn
	cmp r4, r0
	blo _080449B4
	b _08044A1C
_080449E4:
	movs r4, #0
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r5, r5, r3
	b _08044A0C
_080449EE:
	ldr r0, [r5]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r4, #0
	bl GetChicken__4CoopUi
	cmp r0, #0
	beq _08044A0A
	bl method_0809B514__C9Livestock
	cmp r0, sb
	bne _08044A0A
	adds r7, #1
_08044A0A:
	adds r4, #1
_08044A0C:
	ldr r0, [r5]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetCapacity__C4Coop
	cmp r4, r0
	blo _080449EE
_08044A1C:
	ldr r1, [r6]
	cmp r1, #0x63
	bls _08044A26
	bl _08045572
_08044A26:
	lsls r0, r1, #2
	add r0, r8
	str r7, [r0]
_08044A2C:
	adds r0, r1, #1
	str r0, [r6]
	bl _08045572
_08044A34:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08044A44
	bl _0804168A
_08044A44:
	bl func_08014D9C
	bl _0804168A
_08044A4C:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08044A5C
	bl _08045572
_08044A5C:
	bl func_08015210
	bl _08045572
_08044A64:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08044A74
	bl _0804168A
_08044A74:
	bl func_0801531C
	bl _0804168A
_08044A7C:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08044A8C
	bl _08045572
_08044A8C:
	bl func_08015790
	bl _08045572
_08044A94:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08044AA4
	bl _0804168A
_08044AA4:
	bl func_080158CC
	bl _0804168A
_08044AAC:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	bne _08044ABC
	bl _0804168A
_08044ABC:
	bl func_080158F8
	bl _0804168A
_08044AC4:
	movs r4, #0
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	beq _08044ADA
	bl func_0801410C
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_08044ADA:
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
_08044AE8:
	movs r4, #0
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08044AFC
	bl func_08015950
	adds r4, r0, #0
_08044AFC:
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_08044B0A:
	movs r4, #0
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	beq _08044B1E
	bl func_08015970
	adds r4, r0, #0
_08044B1E:
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
_08044B2C:
	movs r4, #0
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08044B40
	bl func_08015990
	adds r4, r0, #0
_08044B40:
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_08044B4E:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	movs r6, #0x82
	lsls r6, r6, #3
	adds r0, r0, r6
	bl GetIncubatorCapacity__C4Coop
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	bl _080454B2
_08044B70:
	adds r6, r5, #0
	adds r6, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08044B8C
	subs r0, r2, #1
	str r0, [r4]
_08044B8C:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl ShouldHatch__4CoopUi
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	b _08045166
_08044BA4:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08044BC0
	subs r0, r2, #1
	str r0, [r4]
_08044BC0:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl AttemptHatch__4CoopUi
	adds r1, r0, #0
	ldr r2, [r4]
	cmp r2, #0x63
	bhi _08044BE4
	lsls r0, r2, #2
	adds r0, r6, r0
	str r1, [r0]
	adds r0, r2, #1
	str r0, [r4]
_08044BE4:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08044BF4
	bl _08045572
_08044BF4:
	adds r1, #0x2e
	bl func_08016CEC
	bl _08045572
_08044BFE:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetPregnancyStallCapacity__C4Barn
	adds r4, r0, #0
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	bl _080454B2
_08044C20:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08044C3C
	subs r0, r2, #1
	str r0, [r4]
_08044C3C:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	bl IsReadyToGiveBirth__C4BarnUi
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	b _08045166
_08044C54:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08044C70
	subs r0, r2, #1
	str r0, [r4]
_08044C70:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	bl AttemptBirth__4BarnUi
	adds r1, r0, #0
	ldr r2, [r4]
	cmp r2, #0x63
	bhi _08044C94
	lsls r0, r2, #2
	adds r0, r6, r0
	str r1, [r0]
	adds r0, r2, #1
	str r0, [r4]
_08044C94:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08044CA4
	bl _08045572
_08044CA4:
	adds r1, #0x36
	bl func_08016CEC
	bl _08045572
_08044CAE:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r2, #0
	beq _08044CCC
	subs r0, r2, #1
	str r0, [r4]
_08044CCC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r5, r5, r1
	ldr r0, [r5]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	mov r1, r8
	bl GetCow__4BarnUi
	adds r7, r0, #0
	cmp r7, #0
	beq _08044D00
	ldr r2, [r4]
	cmp r2, #0x63
	bls _08044CF0
	bl _08045572
_08044CF0:
	lsls r0, r2, #2
	adds r0, r6, r0
	movs r1, #1
_08044CF6:
	str r1, [r0]
	adds r0, r2, #1
	str r0, [r4]
	bl _08045572
_08044D00:
	ldr r0, [r5]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	mov r1, r8
	bl GetSheep__4BarnUi
	adds r2, r0, #0
	cmp r2, #0
	bne _08044D16
	b _08045166
_08044D16:
	ldr r1, [r4]
	cmp r1, #0x63
	bls _08044D20
	bl _08045572
_08044D20:
	lsls r0, r1, #2
	adds r0, r6, r0
	str r7, [r0]
	b _08045174
_08044D28:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08044D38
	bl _08045572
_08044D38:
	bl func_080167DC
	bl _08045572
_08044D40:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08044D50
	bl _08045572
_08044D50:
	bl func_08015E30
	bl _08045572
_08044D58:
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	ldr r2, [r1]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r6, [r0, #0x20]
	cmp r2, #0
	beq _08044D6E
	subs r0, r2, #1
	str r0, [r1]
_08044D6E:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r4, [r0]
	cmp r4, #0
	bne _08044D7E
	bl _08045572
_08044D7E:
	adds r0, r4, #0
	bl func_080167AC
	ldr r2, [r0]

	non_word_aligned_thumb_func_start sub_08044D86
sub_08044D86: @ 0x08044D86
	adds r0, r4, #0
	adds r1, r6, #0
	bl func_08012ACC
	b _08045572
_08044D90:
	movs r4, #0
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	beq _08044DA4
	bl func_080167AC
	ldrh r4, [r0, #4]
_08044DA4:
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	b _080454B2
_08044DB0:
	movs r4, #0
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	beq _08044DC4
	bl func_080167AC
	ldrb r4, [r0, #0x14]
_08044DC4:
	adds r2, r5, #0
	adds r2, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r1, r5, r0
	b _080454B2
_08044DD0:
	movs r4, #0
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08044DE4
	bl func_080167AC
	ldrb r4, [r0, #0xd]
_08044DE4:
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	b _080454B2
_08044DF0:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r1, #0
	beq _08044E06
	subs r0, r1, #1
	str r0, [r2]
_08044E06:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08044E16
	bl _0804168A
_08044E16:
	adds r2, r0, #0
	ldr r0, [r5, #0x10]
	cmp r3, r0
	bhi _08044E2C
	ldr r1, [r5, #0x14]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r1, [r5, #0x18]
	ldr r0, [r0]
	adds r1, r1, r0
	b _08044E2E
_08044E2C:
	ldr r1, _08044E38 @ =0x080F9EB8
_08044E2E:
	adds r0, r2, #0
	bl func_080126BC
	bl _0804168A
	.align 2, 0
_08044E38: .4byte 0x080F9EB8
_08044E3C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	bl func_08010F24
	b _08045572
_08044E4A:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	bl func_08010F3C
	b _08045572
_08044E58:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08044E6E
	subs r0, r2, #1
	str r0, [r3]
_08044E6E:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08044E7C
	b _08045572
_08044E7C:
	bl func_08016BA4
	b _08045572
_08044E82:
	movs r0, #0xda
	lsls r0, r0, #1
	adds r3, r5, r0
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _08044E98
	subs r0, r2, #1
	str r0, [r3]
_08044E98:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08044EA6
	b _08045572
_08044EA6:
	bl func_08016BC0
	b _08045572
_08044EAC:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r4, r5, r3
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08044EC8
	subs r0, r2, #1
	str r0, [r4]
_08044EC8:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xd2
	lsls r3, r3, #6
	adds r0, r0, r3
	bl func_0809C304
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	b _08045166
_08044EE0:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08044EFC
	subs r0, r2, #1
	str r0, [r4]
_08044EFC:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xd2
	lsls r3, r3, #6
	adds r0, r0, r3
	bl func_0809C444
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	b _08045166
_08044F14:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08044F30
	subs r0, r2, #1
	str r0, [r4]
_08044F30:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	movs r3, #0xd2
	lsls r3, r3, #6
	adds r0, r0, r3
	bl func_0809C474
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	b _08045166
_08044F48:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08044F56
	b _08045572
_08044F56:
	bl func_08016C2C
	b _08045572
_08044F5C:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08044F6C
	bl _0804168A
_08044F6C:
	bl func_08016C48
	bl _0804168A
_08044F74:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08044F82
	b _08045572
_08044F82:
	bl func_08016C6C
	b _08045572
_08044F88:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08044F98
	bl _0804168A
_08044F98:
	bl func_08016C88
	bl _0804168A
_08044FA0:
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #0
	beq _08044FB0
	bl func_08016CAC
_08044FB0:
	movs r0, #2
	b _08045574
_08044FB4:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08044FC2
	b _08045572
_08044FC2:
	bl func_08016CCC
	b _08045572
_08044FC8:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08044FD6
	b _08045572
_08044FD6:
	bl func_08016D48
	b _08045572
_08044FDC:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08044FEA
	b _08045572
_08044FEA:
	bl func_08016D80
	b _08045572
_08044FF0:
	movs r4, #0x1d
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	beq _08045004
	bl func_08016D9C
	adds r4, r0, #0
_08045004:
	adds r2, r5, #0
	adds r2, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	b _080454B2
_08045010:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _08045020
	bl _0804168A
_08045020:
	bl func_08016DB0
	bl _0804168A
_08045028:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08045036
	b _08045572
_08045036:
	bl func_08016E7C
	b _08045572
_0804503C:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0804504C
	bl _0804168A
_0804504C:
	bl func_08016E9C
	bl _0804168A
_08045054:
	adds r6, r5, #0
	adds r6, #0x24
	movs r3, #0xda
	lsls r3, r3, #1
	adds r2, r5, r3
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r0, [r0]
	mov sb, r0
	cmp r1, #0
	beq _08045072
	subs r0, r1, #1
	str r0, [r2]
_08045072:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r1, #0
	beq _08045086
	subs r0, r1, #1
	str r0, [r2]
_08045086:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08045098
	subs r0, r1, #1
	str r0, [r2]
_08045098:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _080450AA
	subs r0, r1, #1
	str r0, [r2]
_080450AA:
	ldr r4, [r2]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r6, [r0]
	cmp r4, #0
	beq _080450BC
	subs r0, r4, #1
	str r0, [r2]
_080450BC:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r1, [r0]
	cmp r1, #0
	bne _080450CA
	b _08045572
_080450CA:
	mov r0, r8
	str r0, [sp]
	mov r2, sb
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	adds r0, r1, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl func_08016EC4
	b _08045572
_080450E2:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080450F8
	subs r0, r2, #1
	str r0, [r3]
_080450F8:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _08045106
	b _08045572
_08045106:
	bl func_08016EF0
	b _08045572
_0804510C:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r5, r5, r0
	ldr r2, [r5]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08045128
	subs r0, r2, #1
	str r0, [r5]
_08045128:
	mov r4, sp
	adds r4, #0x36
	adds r0, r4, #0
	bl __4ToolUi
	adds r0, r4, #0
	bl GetIconId__C4Tool
	b _080451A6
_0804513A:
	adds r6, r5, #0
	adds r6, #0x24
	movs r1, #0xda
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r2, [r4]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08045156
	subs r0, r2, #1
	str r0, [r4]
_08045156:
	add r0, sp, #0xc
	bl __4FoodUi
	add r0, sp, #0xc
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
_08045166:
	ldr r1, [r4]
	cmp r1, #0x63
	bls _0804516E
	b _08045572
_0804516E:
	lsls r0, r1, #2
	adds r0, r6, r0
	str r2, [r0]
_08045174:
	adds r0, r1, #1
	str r0, [r4]
	b _08045572
_0804517A:
	adds r6, r5, #0
	adds r6, #0x24
	movs r2, #0xda
	lsls r2, r2, #1
	adds r5, r5, r2
	ldr r2, [r5]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _08045196
	subs r0, r2, #1
	str r0, [r5]
_08045196:
	mov r4, sp
	adds r4, #0x37
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetIconId__C7Article
_080451A6:
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldr r1, [r5]
	cmp r1, #0x63
	bls _080451B2
	b _08045572
_080451B2:
	lsls r0, r1, #2
	adds r0, r6, r0
	str r2, [r0]
	adds r0, r1, #1
	str r0, [r5]
	b _08045572
_080451BE:
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r2, [r1]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r3, [r0, #0x20]
	cmp r2, #0
	beq _080451D4
	subs r0, r2, #1
	str r0, [r1]
_080451D4:
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r5, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080451E2
	b _08045572
_080451E2:
	rsbs r1, r3, #0
	orrs r1, r3
	lsrs r1, r1, #0x1f
	bl func_08016F0C
	b _08045572
_080451EE:
	movs r6, #0xda
	lsls r6, r6, #1
	adds r2, r5, r6
	ldr r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r0, [r0, #0x20]
	mov r8, r0
	cmp r1, #0
	beq _08045206
	subs r0, r1, #1
	str r0, [r2]
_08045206:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r2, _0804525C @ =0x00001C2C
	adds r4, r0, r2
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804524A
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #1
	bne _0804524A
	adds r0, r4, #0
	bl func_0800F258
	add r1, sp, #0x38
	strb r0, [r1]
	adds r0, r1, #0
	bl GetId__C7Article
	movs r1, #0
	cmp r0, r8
	bne _08045240
	movs r1, #1
_08045240:
	cmp r1, #0
	beq _0804524A
	adds r0, r4, #0
	bl func_0800F390
_0804524A:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r4, _08045260 @ =0x00001C38
	adds r7, r0, r4
	movs r6, #0
	b _080452AC
	.align 2, 0
_0804525C: .4byte 0x00001C2C
_08045260: .4byte 0x00001C38
_08045264:
	adds r0, r7, #0
	adds r1, r6, #0
	bl func_0800FCDC
	adds r4, r0, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080452AA
	adds r0, r4, #0
	bl GetKind__C12RucksackItem
	cmp r0, #1
	bne _080452AA
	adds r0, r4, #0
	bl GetArticle__C12RucksackItem
	mov r1, sp
	adds r1, #0x39
	strb r0, [r1]
	adds r0, r1, #0
	bl GetId__C7Article
	movs r1, #0
	cmp r0, r8
	bne _0804529C
	movs r1, #1
_0804529C:
	cmp r1, #0
	beq _080452AA
	add r0, sp, #0xc
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r4]
_080452AA:
	adds r6, #1
_080452AC:
	adds r0, r7, #0
	bl func_0800F5F8
	cmp r6, r0
	blo _08045264
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r4, r5, r6
	ldr r0, [r4]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetShelf__9FarmHouse
	cmp r0, #0
	bne _080452CE
	b _08045572
_080452CE:
	ldr r0, [r4]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetShelf__9FarmHouse
	adds r7, r0, #0
	movs r5, #0
_080452DE:
	adds r0, r7, #0
	adds r1, r5, #0
	bl GetArticleStackAt__5ShelfUi
	adds r4, r0, #0
	adds r6, r4, #0
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08045322
	adds r0, r4, #0
	bl GetArticle__C12ArticleStack
	mov r1, sp
	adds r1, #0x3a
	strb r0, [r1]
	adds r0, r1, #0
	bl GetId__C7Article
	movs r1, #0
	cmp r0, r8
	bne _0804530E
	movs r1, #1
_0804530E:
	cmp r1, #0
	beq _08045322
	add r0, sp, #0xc
	bl __12ArticleStack
	adds r0, r6, #0
	add r1, sp, #0xc
	movs r2, #2
	bl memcpy
_08045322:
	adds r5, #1
	cmp r5, #0x3f
	bls _080452DE
	b _08045572
_0804532A:
	movs r3, #0xda
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r2, [r1]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r7, [r0, #0x20]
	cmp r2, #0
	beq _08045340
	subs r0, r2, #1
	str r0, [r1]
_08045340:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r4, r5, r6
	ldr r0, [r4]
	ldr r1, _08045378 @ =0x00001C70
	adds r0, r0, r1
	adds r1, r7, #0
	bl AddAffection__6Animali
	ldr r0, [r4]
	adds r0, #0x14
	bl func_08009C3C
	cmp r0, #0
	beq _0804536C
	ldr r0, [r4]
	adds r0, #0x14
	bl func_08009C3C
	adds r1, r7, #0
	bl AddAffection__6Animali
_0804536C:
	ldr r0, [r4]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r6, r0, r2
	movs r4, #0
	b _08045390
	.align 2, 0
_08045378: .4byte 0x00001C70
_0804537C:
	adds r0, r6, #0
	adds r1, r4, #0
	bl GetChicken__4CoopUi
	cmp r0, #0
	beq _0804538E
	adds r1, r7, #0
	bl AddAffection__6Animali
_0804538E:
	adds r4, #1
_08045390:
	adds r0, r6, #0
	bl GetCapacity__C4Coop
	cmp r4, r0
	blo _0804537C
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r5, r0, r4
	movs r4, #0
	b _080453C0
_080453AC:
	adds r0, r5, #0
	adds r1, r4, #0
	bl GetBarnAnimal__4BarnUi
	cmp r0, #0
	beq _080453BE
	adds r1, r7, #0
	bl AddAffection__6Animali
_080453BE:
	adds r4, #1
_080453C0:
	adds r0, r5, #0
	bl GetCapacity__C4Barn
	cmp r4, r0
	blo _080453AC
	b _08045572
_080453CC:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _080453DA
	b _08045572
_080453DA:
	bl func_08016F60
	b _08045572
_080453E0:
	adds r6, r5, #0
	adds r6, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r0, [r0]
	mov r8, r0
	cmp r1, #0
	beq _080453FE
	subs r0, r1, #1
	str r0, [r2]
_080453FE:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r3, [r0]
	cmp r1, #0
	beq _08045410
	subs r0, r1, #1
	str r0, [r2]
_08045410:
	ldr r1, [r2]
	lsls r0, r1, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r7, [r0]
	cmp r1, #0
	beq _08045422
	subs r0, r1, #1
	str r0, [r2]
_08045422:
	ldr r4, [r2]
	lsls r0, r4, #2
	subs r0, #4
	adds r0, r6, r0
	ldr r6, [r0]
	cmp r4, #0
	beq _08045434
	subs r0, r4, #1
	str r0, [r2]
_08045434:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r1, [r0]
	cmp r1, #0
	bne _08045442
	b _08045572
_08045442:
	mov r2, r8
	str r2, [sp]
	movs r0, #0
	str r0, [sp, #4]
	adds r0, r1, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl func_08016FA4
	b _08045572
_08045456:
	movs r4, #0xda
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _0804546C
	subs r0, r2, #1
	str r0, [r3]
_0804546C:
	movs r6, #0xd5
	lsls r6, r6, #2
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #0
	bne _0804547C
	bl _0804168A
_0804547C:
	bl func_08016F34
	bl _0804168A
_08045484:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08045572
	bl func_08016784
	b _08045572
_08045496:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	ldr r3, _080454C4 @ =0x00002214
	adds r0, r0, r3
	bl func_0809AA28
_080454A6:
	adds r4, r0, #0
_080454A8:
	adds r2, r5, #0
	adds r2, #0x24
	movs r6, #0xda
	lsls r6, r6, #1
	adds r1, r5, r6
_080454B2:
	ldr r3, [r1]
	cmp r3, #0x63
	bhi _08045572
	lsls r0, r3, #2
	adds r0, r2, r0
	str r4, [r0]
_080454BE:
	adds r0, r3, #1
	str r0, [r1]
	b _08045572
	.align 2, 0
_080454C4: .4byte 0x00002214
_080454C8:
	movs r0, #0xda
	lsls r0, r0, #1
	adds r3, r5, r0
	ldr r2, [r3]
	lsls r0, r2, #2
	adds r0, r0, r5
	ldr r1, [r0, #0x20]
	cmp r2, #0
	beq _080454DE
	subs r0, r2, #1
	str r0, [r3]
_080454DE:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _080454EE
	bl _0804168A
_080454EE:
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl func_0801589C
	bl _0804168A
_080454FA:
	adds r4, r5, #0
	adds r4, #0x24
	movs r3, #0xd6
	lsls r3, r3, #2
	adds r1, r5, r3
	movs r6, #0xda
	lsls r6, r6, #1
	adds r2, r5, r6
	ldr r3, [r2]
	cmp r3, #0x63
	bhi _08045572
	lsls r0, r3, #2
	adds r0, r4, r0
	ldr r1, [r1]

	non_word_aligned_thumb_func_start sub_08045516
sub_08045516: @ 0x08045516
	str r1, [r0]
	adds r0, r3, #1
	str r0, [r2]
	b _08045572
_0804551E:
	adds r4, r5, #0
	adds r4, #0x24
	movs r0, #0xda
	lsls r0, r0, #1
	adds r3, r5, r0
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r1, [r0]
	cmp r2, #0
	beq _0804553A
	subs r0, r2, #1
	str r0, [r3]
_0804553A:
	ldr r2, [r3]
	lsls r0, r2, #2
	subs r0, #4
	adds r0, r4, r0
	ldr r6, [r0]
	cmp r2, #0
	beq _0804554C
	subs r0, r2, #1
	str r0, [r3]
_0804554C:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r5, [r0]
	cmp r5, #0
	beq _08045572
	mov r4, sp
	adds r4, #0x3b
	adds r0, r4, #0
	bl __7ProductUi
	adds r0, r4, #0
	bl GetName__C7Product
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl func_08012ACC
_08045572:
	movs r0, #0
_08045574:
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_08045584
func_08045584: @ 0x08045584
	push {r4, r5, lr}
	lsls r2, r2, #0x18
	lsrs r5, r2, #0x18
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r2, _080455B8 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A0878
	adds r4, r0, #0
	cmp r4, #0
	beq _080455CE
	cmp r5, #0
	bne _080455BC
	adds r0, r4, #0
	bl GetPlayerEventCount__C12Bachelorette
	cmp r0, #5
	bne _080455CE
	adds r0, r4, #0
	bl GetDaysSincePlayerEvent_bugged__C12Bachelorette
	b _080455D0
	.align 2, 0
_080455B8: .4byte 0x00001CD4
_080455BC:
	adds r0, r4, #0
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bne _080455CE
	adds r0, r4, #0
	bl GetDaysSinceRivalEvent__C12Bachelorette
	b _080455D0
_080455CE:
	movs r0, #0
_080455D0:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_080455D8
func_080455D8: @ 0x080455D8
	push {r4, r5, r6, r7, lr}
	adds r6, r2, #0
	adds r7, r3, #0
	add r2, sp, #0x14
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrb r5, [r2]
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r4, r0, r2
	ldr r0, [r4]
	ldr r2, _08045600 @ =0x0000214C
	adds r0, r0, r2
	bl func_0809C694
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08045604
	movs r0, #1
	b _08045632
	.align 2, 0
_08045600: .4byte 0x0000214C
_08045604:
	ldr r0, [r4]
	ldr r1, _08045620 @ =0x00001CD4
	adds r0, r0, r1
	adds r1, r6, #0
	bl func_080A0878
	cmp r0, #0
	beq _0804562C
	cmp r5, #0
	bne _08045624
	bl GetPlayerEventCount__C12Bachelorette
	b _08045628
	.align 2, 0
_08045620: .4byte 0x00001CD4
_08045624:
	bl GetRivalEventCount__C12Bachelorette
_08045628:
	cmp r0, r7
	bhs _08045630
_0804562C:
	movs r0, #0
	b _08045632
_08045630:
	movs r0, #2
_08045632:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_08045638
func_08045638: @ 0x08045638
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	mov sl, r0
	str r2, [sp, #8]
	adds r5, r3, #0
	ldr r0, [sp, #0x3c]
	mov sb, r0
	add r0, sp, #0x40
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	ldrb r6, [r0]
	movs r0, #0xd4
	lsls r0, r0, #2
	add r0, sl
	ldr r0, [r0]
	ldr r1, _08045684 @ =0x0000214C
	adds r7, r0, r1
	ldr r2, _08045688 @ =0x00001CD4
	adds r0, r0, r2
	ldr r1, [sp, #8]
	bl func_080A0878
	adds r4, r0, #0
	cmp r4, #0
	bne _08045676
	b _080458F8
_08045676:
	cmp r5, #1
	beq _080456AC
	cmp r5, #1
	bgt _0804568C
	cmp r5, #0
	beq _08045692
	b _080458F8
	.align 2, 0
_08045684: .4byte 0x0000214C
_08045688: .4byte 0x00001CD4
_0804568C:
	cmp r5, #2
	beq _080456E0
	b _080458F8
_08045692:
	adds r0, r7, #0
	mov r1, r8
	bl func_0809C694
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080456A2
	b _080458F8
_080456A2:
	adds r0, r7, #0
	mov r1, r8
	bl func_0809C6B0
	b _080458F8
_080456AC:
	cmp r6, #0
	bne _080456B8
	adds r0, r4, #0
	bl GetPlayerEventCount__C12Bachelorette
	b _080456BE
_080456B8:
	adds r0, r4, #0
	bl GetRivalEventCount__C12Bachelorette
_080456BE:
	cmp r0, sb
	blo _080456C4
	b _080458F8
_080456C4:
	adds r0, r7, #0
	mov r1, r8
	bl func_0809C6AC
	b _080458F8
_080456CE:
	cmp r6, #0
	bne _080456DA
	adds r0, r4, #0
	bl PlayerEventUpdate__12Bachelorette
	b _080456E0
_080456DA:
	adds r0, r4, #0
	bl RivalEventUpdate__12Bachelorette
_080456E0:
	cmp r6, #0
	bne _080456EC
	adds r0, r4, #0
	bl GetPlayerEventCount__C12Bachelorette
	b _080456F2
_080456EC:
	adds r0, r4, #0
	bl GetRivalEventCount__C12Bachelorette
_080456F2:
	cmp r0, sb
	blo _080456CE
	adds r0, r7, #0
	mov r1, r8
	bl func_0809C694
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0804570C
	adds r0, r7, #0
	mov r1, r8
	bl func_0809C6B0
_0804570C:
	cmp r6, #0
	beq _08045712
	b _080458F8
_08045712:
	adds r0, r4, #0
	bl GetPlayerEventCount__C12Bachelorette
	cmp r0, #5
	beq _0804571E
	b _080458F8
_0804571E:
	movs r0, #0xd4
	lsls r0, r0, #2
	add r0, sl
	ldr r2, [r0]
	ldrb r1, [r2, #0x10]
	mov r0, sp
	strb r1, [r0]
	ldrb r4, [r2, #0x11]
	movs r1, #0
	lsls r0, r4, #0x19
	lsrs r0, r0, #0x1b
	adds r3, r0, #7
	cmp r3, #0x1d
	bls _0804573E
	movs r1, #1
	subs r3, #0x1e
_0804573E:
	lsls r0, r4, #0x1e
	lsrs r0, r0, #0x1e
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r0, r1
	movs r1, #3
	ands r0, r1
	ands r2, r4
	orrs r2, r0
	movs r0, #0x1f
	ands r3, r0
	lsls r1, r3, #2
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r2, r0
	orrs r2, r1
	mov r0, sp
	adds r0, #2
	strb r2, [r0]
	lsls r1, r2, #0x1e
	adds r7, r0, #0
	cmp r1, #0
	bne _080457AC
	lsls r0, r2, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	cmp r0, #7
	bhi _080457AC
	mov r4, sp
	mov r0, sp
	ldrb r3, [r0]
	lsls r0, r3, #0x1d
	lsrs r0, r0, #0x1d
	adds r2, r0, #1
	cmp r2, #6
	bls _0804579C
	movs r2, #0
	lsrs r0, r3, #3
	cmp r0, #0x1c
	bhi _0804579C
	adds r0, #1
	lsls r0, r0, #3
	movs r1, #7
	ands r1, r3
	orrs r1, r0
	mov r0, sp
	strb r1, [r0]
_0804579C:
	movs r0, #7
	ands r2, r0
	ldrb r1, [r4]
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
_080457AC:
	movs r5, #0xd4
	lsls r5, r5, #2
	add r5, sl
	ldr r0, [r5]
	ldr r3, _080457F0 @ =0x00001BD8
	adds r0, r0, r3
	bl func_0800E4E8
	mov r4, sp
	adds r4, #1
	strb r0, [r4]
	ldr r0, [r5]
	ldr r6, _080457F4 @ =0x00001CD4
	adds r0, r0, r6
	ldr r1, [sp, #8]
	adds r2, r4, #0
	bl func_0809FE74
	mov sb, r0
	movs r0, #4
	rsbs r0, r0, #0
	mov r1, sp
	ldrb r1, [r1, #0x10]
	ands r0, r1
	movs r1, #0x7d
	rsbs r1, r1, #0
	ands r0, r1
	mov r2, sp
	strb r0, [r2, #0x10]
	mov r8, r4
	adds r2, #4
	str r2, [sp, #0x18]
	b _08045892
	.align 2, 0
_080457F0: .4byte 0x00001BD8
_080457F4: .4byte 0x00001CD4
_080457F8:
	ldrb r5, [r7]
	lsls r0, r5, #0x19
	lsrs r2, r0, #0x1b
	adds r2, #1
	cmp r2, #0x1e
	bne _08045836
	lsls r1, r5, #0x1e
	movs r3, #3
	lsrs r1, r1, #0x1e
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r2, #0
	mov r4, sp
	ldrb r4, [r4, #0x14]
	ands r0, r4
	orrs r0, r1
	adds r1, #1
	ands r1, r3
	ands r0, r2
	orrs r0, r1
	mov r6, sp
	strb r0, [r6, #0x14]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	ands r0, r3
	ands r2, r5
	orrs r2, r0
	mov r0, sp
	adds r0, #2
	strb r2, [r0]
	movs r2, #0
_08045836:
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #2
	ldrb r1, [r7]
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	mov r1, sp
	adds r1, #2
	strb r0, [r1]
	movs r2, #0
	movs r1, #0x7f
	ands r0, r1
	cmp r0, #0
	bne _08045858
	movs r2, #1
_08045858:
	cmp r2, #0
	beq _08045892
	mov r5, sp
	mov r0, sp
	ldrb r3, [r0]
	lsls r0, r3, #0x1d
	lsrs r0, r0, #0x1d
	adds r2, r0, #1
	cmp r2, #6
	bls _08045882
	movs r2, #0
	lsrs r0, r3, #3
	cmp r0, #0x1c
	bhi _08045882
	adds r0, #1
	lsls r0, r0, #3
	movs r1, #7
	ands r1, r3
	orrs r1, r0
	mov r0, sp
	strb r1, [r0]
_08045882:
	movs r0, #7
	ands r2, r0
	ldrb r1, [r5]
	movs r0, #8
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strb r0, [r5]
_08045892:
	movs r6, #0
	movs r1, #0
	mov r0, sp
	adds r0, #2
	ldrb r0, [r0]
	movs r5, #0x7f
	adds r2, r5, #0
	ands r2, r0
	adds r0, r5, #0
	mov r3, sb
	ands r0, r3
	cmp r2, r0
	bne _080458AE
	movs r1, #1
_080458AE:
	cmp r1, #0
	bne _080458D2
	mov r4, r8
	ldrb r1, [r4]
	movs r3, #0
	adds r0, r5, #0
	ands r0, r1
	cmp r2, r0
	bne _080458C2
	movs r3, #1
_080458C2:
	cmp r3, #0
	bne _080458D2
	adds r0, r7, #0
	bl func_080ADBB4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080458D4
_080458D2:
	movs r6, #1
_080458D4:
	cmp r6, #0
	bne _080457F8
	movs r0, #0xd4
	lsls r0, r0, #2
	add r0, sl
	ldr r0, [r0]
	ldr r6, _08045908 @ =0x00001CD4
	adds r0, r0, r6
	mov r1, sp
	ldrb r2, [r1]
	add r1, sp, #4
	strb r2, [r1]
	ldrb r1, [r7]
	ldr r2, [sp, #0x18]
	strb r1, [r2, #1]
	ldr r1, [sp, #0x18]
	bl func_080A1478
_080458F8:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08045908: .4byte 0x00001CD4

	thumb_func_start func_0804590C
func_0804590C: @ 0x0804590C
	push {r4, r5, lr}
	mov r5, r8
	push {r5}
	sub sp, #0xc
	adds r2, r0, #0
	ldr r0, _0804592C @ =0x0000024D
	cmp r1, r0
	bls _08045920
	bl sub_08048FEC
_08045920:
	lsls r0, r1, #2
	ldr r1, _08045930 @ =_08045934
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0804592C: .4byte 0x0000024D
_08045930: .4byte _08045934
_08045934: @ jump table
	.4byte _0804626C @ case 0
	.4byte _08046296 @ case 1
	.4byte _080462A4 @ case 2
	.4byte _080462B0 @ case 3
	.4byte _080462BE @ case 4
	.4byte _080462D0 @ case 5
	.4byte _08046312 @ case 6
	.4byte _08046320 @ case 7
	.4byte _0804632E @ case 8
	.4byte _08046348 @ case 9
	.4byte _08046360 @ case 10
	.4byte _08046378 @ case 11
	.4byte _08046390 @ case 12
	.4byte _080463A8 @ case 13
	.4byte _0804640E @ case 14
	.4byte _08046424 @ case 15
	.4byte _0804643A @ case 16
	.4byte _08046450 @ case 17
	.4byte _0804645E @ case 18
	.4byte _0804646C @ case 19
	.4byte _0804647A @ case 20
	.4byte _0804648E @ case 21
	.4byte _080464AE @ case 22
	.4byte _0804653A @ case 23
	.4byte _080464C2 @ case 24
	.4byte _080464D6 @ case 25
	.4byte _080464EA @ case 26
	.4byte _080464FE @ case 27
	.4byte _08046512 @ case 28
	.4byte _08046526 @ case 29
	.4byte _080465EE @ case 30
	.4byte _08046664 @ case 31
	.4byte _0804654E @ case 32
	.4byte _08046562 @ case 33
	.4byte _08046576 @ case 34
	.4byte _0804658A @ case 35
	.4byte _0804659E @ case 36
	.4byte _080465B2 @ case 37
	.4byte _080465C6 @ case 38
	.4byte _080465DA @ case 39
	.4byte _080463C0 @ case 40
	.4byte _080463D2 @ case 41
	.4byte _080463E8 @ case 42
	.4byte _080463FE @ case 43
	.4byte _08046602 @ case 44
	.4byte _0804664C @ case 45
	.4byte _08046694 @ case 46
	.4byte _080466B8 @ case 47
	.4byte _080466E0 @ case 48
	.4byte _08046704 @ case 49
	.4byte _0804677A @ case 50
	.4byte _080467E4 @ case 51
	.4byte _08046800 @ case 52
	.4byte _08046820 @ case 53
	.4byte _08046728 @ case 54
	.4byte _0804672E @ case 55
	.4byte _08046734 @ case 56
	.4byte _0804673A @ case 57
	.4byte _08046740 @ case 58
	.4byte _08046746 @ case 59
	.4byte _08046754 @ case 60
	.4byte _0804675A @ case 61
	.4byte _08046760 @ case 62
	.4byte _08046766 @ case 63
	.4byte _0804676C @ case 64
	.4byte _0804661C @ case 65
	.4byte _08046634 @ case 66
	.4byte _08046838 @ case 67
	.4byte _08046848 @ case 68
	.4byte _08046866 @ case 69
	.4byte _08046898 @ case 70
	.4byte _080468A6 @ case 71
	.4byte _08046C98 @ case 72
	.4byte _080468B4 @ case 73
	.4byte _080468C2 @ case 74
	.4byte _080468D0 @ case 75
	.4byte _080468DE @ case 76
	.4byte _08046C34 @ case 77
	.4byte _080468EC @ case 78
	.4byte _080468FA @ case 79
	.4byte _08046908 @ case 80
	.4byte _08046CAC @ case 81
	.4byte _08046916 @ case 82
	.4byte _08046CC0 @ case 83
	.4byte _08046924 @ case 84
	.4byte _08046932 @ case 85
	.4byte _08046C48 @ case 86
	.4byte _08046940 @ case 87
	.4byte _0804694E @ case 88
	.4byte _08046CD4 @ case 89
	.4byte _0804695C @ case 90
	.4byte _08046CE8 @ case 91
	.4byte _0804696A @ case 92
	.4byte _08046CFC @ case 93
	.4byte _08046978 @ case 94
	.4byte _08046986 @ case 95
	.4byte _08046C5C @ case 96
	.4byte _08046994 @ case 97
	.4byte _080469A2 @ case 98
	.4byte _08046D10 @ case 99
	.4byte _080469B0 @ case 100
	.4byte _080469BE @ case 101
	.4byte _080469CC @ case 102
	.4byte _080469DA @ case 103
	.4byte _08046C70 @ case 104
	.4byte _080469E8 @ case 105
	.4byte _080469F4 @ case 106
	.4byte _08046A00 @ case 107
	.4byte _08046D24 @ case 108
	.4byte _08046A0C @ case 109
	.4byte _08046A18 @ case 110
	.4byte _08046A24 @ case 111
	.4byte _08046C84 @ case 112
	.4byte _08046A5C @ case 113
	.4byte _08046A6A @ case 114
	.4byte _08046A78 @ case 115
	.4byte _08046A86 @ case 116
	.4byte _08046A94 @ case 117
	.4byte _08046AA2 @ case 118
	.4byte _08046AB0 @ case 119
	.4byte _08046D38 @ case 120
	.4byte _08046D9C @ case 121
	.4byte _08046ABE @ case 122
	.4byte _08046ACC @ case 123
	.4byte _08046ADA @ case 124
	.4byte _08046AE8 @ case 125
	.4byte _08046AF6 @ case 126
	.4byte _08046B04 @ case 127
	.4byte _08046D4C @ case 128
	.4byte _08046DB0 @ case 129
	.4byte _08046B12 @ case 130
	.4byte _08046B20 @ case 131
	.4byte _08046B2E @ case 132
	.4byte _08046B3C @ case 133
	.4byte _08046B4A @ case 134
	.4byte _08046B58 @ case 135
	.4byte _08046D60 @ case 136
	.4byte _08046DC4 @ case 137
	.4byte _08046B66 @ case 138
	.4byte _08046B74 @ case 139
	.4byte _08046B82 @ case 140
	.4byte _08046B90 @ case 141
	.4byte _08046B9E @ case 142
	.4byte _08046BAC @ case 143
	.4byte _08046D74 @ case 144
	.4byte _08046DD8 @ case 145
	.4byte _08046BBA @ case 146
	.4byte _08046BD0 @ case 147
	.4byte _08046BE6 @ case 148
	.4byte _08046BFC @ case 149
	.4byte _08046C12 @ case 150
	.4byte _08046C1E @ case 151
	.4byte _08046D88 @ case 152
	.4byte _08046DEC @ case 153
	.4byte _08046E00 @ case 154
	.4byte _08046E14 @ case 155
	.4byte _08046E28 @ case 156
	.4byte _08046E3C @ case 157
	.4byte _08046E50 @ case 158
	.4byte _08046E64 @ case 159
	.4byte _08046E78 @ case 160
	.4byte _08046E8C @ case 161
	.4byte _08046EA0 @ case 162
	.4byte _08046EB4 @ case 163
	.4byte _08046ED8 @ case 164
	.4byte _08046EEC @ case 165
	.4byte _08046F00 @ case 166
	.4byte _08046F14 @ case 167
	.4byte _08046F28 @ case 168
	.4byte _08046F3C @ case 169
	.4byte _08046F50 @ case 170
	.4byte _08046F64 @ case 171
	.4byte _08046F78 @ case 172
	.4byte _08046F8C @ case 173
	.4byte _08046FA0 @ case 174
	.4byte _08046FB4 @ case 175
	.4byte _08046FC8 @ case 176
	.4byte _08046FDC @ case 177
	.4byte _08046FF0 @ case 178
	.4byte _08047004 @ case 179
	.4byte _08047028 @ case 180
	.4byte _0804703C @ case 181
	.4byte _08047050 @ case 182
	.4byte _08047064 @ case 183
	.4byte _08047078 @ case 184
	.4byte _0804708C @ case 185
	.4byte _080470A0 @ case 186
	.4byte _080470B4 @ case 187
	.4byte _080470C8 @ case 188
	.4byte _080470DC @ case 189
	.4byte _080470F0 @ case 190
	.4byte _08047104 @ case 191
	.4byte _08047118 @ case 192
	.4byte _0804712C @ case 193
	.4byte _08047140 @ case 194
	.4byte _08047154 @ case 195
	.4byte _08047178 @ case 196
	.4byte _0804718C @ case 197
	.4byte _080471A0 @ case 198
	.4byte _080471B4 @ case 199
	.4byte _080471C8 @ case 200
	.4byte _080471DC @ case 201
	.4byte _080471F0 @ case 202
	.4byte _08047204 @ case 203
	.4byte _08047218 @ case 204
	.4byte _0804722C @ case 205
	.4byte _08047240 @ case 206
	.4byte _08047254 @ case 207
	.4byte _08047268 @ case 208
	.4byte _0804727C @ case 209
	.4byte _08047290 @ case 210
	.4byte _080472A4 @ case 211
	.4byte _080472C8 @ case 212
	.4byte _080472DC @ case 213
	.4byte _080472F0 @ case 214
	.4byte _08047304 @ case 215
	.4byte _08047318 @ case 216
	.4byte _0804732C @ case 217
	.4byte _08047340 @ case 218
	.4byte _08047354 @ case 219
	.4byte _08047368 @ case 220
	.4byte _0804737C @ case 221
	.4byte _08047390 @ case 222
	.4byte _080473BC @ case 223
	.4byte _080473D0 @ case 224
	.4byte _080473E4 @ case 225
	.4byte _080473F8 @ case 226
	.4byte _0804740C @ case 227
	.4byte _08047420 @ case 228
	.4byte _08047434 @ case 229
	.4byte _08047448 @ case 230
	.4byte _0804745C @ case 231
	.4byte _08047470 @ case 232
	.4byte _08047484 @ case 233
	.4byte _08047498 @ case 234
	.4byte _080474AC @ case 235
	.4byte _080474C0 @ case 236
	.4byte _080474D4 @ case 237
	.4byte _080474E8 @ case 238
	.4byte _080474FC @ case 239
	.4byte _08047510 @ case 240
	.4byte _08047524 @ case 241
	.4byte _08047538 @ case 242
	.4byte _0804754C @ case 243
	.4byte _08047560 @ case 244
	.4byte _08047574 @ case 245
	.4byte _08047588 @ case 246
	.4byte _0804759C @ case 247
	.4byte _080475B0 @ case 248
	.4byte _080475C4 @ case 249
	.4byte _080475D8 @ case 250
	.4byte _080475EC @ case 251
	.4byte _08047600 @ case 252
	.4byte _08047614 @ case 253
	.4byte _08047628 @ case 254
	.4byte _0804763C @ case 255
	.4byte _08047650 @ case 256
	.4byte _08047664 @ case 257
	.4byte _08047678 @ case 258
	.4byte _0804768C @ case 259
	.4byte _080476A8 @ case 260
	.4byte _080476BC @ case 261
	.4byte _080476D0 @ case 262
	.4byte _080476E4 @ case 263
	.4byte _080476F8 @ case 264
	.4byte _08047708 @ case 265
	.4byte _0804771C @ case 266
	.4byte _08047730 @ case 267
	.4byte _08047744 @ case 268
	.4byte _08047758 @ case 269
	.4byte _08047774 @ case 270
	.4byte _08047788 @ case 271
	.4byte _080477AC @ case 272
	.4byte _080477C0 @ case 273
	.4byte _080477D4 @ case 274
	.4byte _080477E8 @ case 275
	.4byte _080477FC @ case 276
	.4byte _08047810 @ case 277
	.4byte _08047824 @ case 278
	.4byte _08047838 @ case 279
	.4byte _0804784C @ case 280
	.4byte _08047860 @ case 281
	.4byte _08047874 @ case 282
	.4byte _08047888 @ case 283
	.4byte _0804789C @ case 284
	.4byte _080478B0 @ case 285
	.4byte _080478C4 @ case 286
	.4byte _080478D8 @ case 287
	.4byte _080478EC @ case 288
	.4byte _080478FC @ case 289
	.4byte _0804790C @ case 290
	.4byte _0804791C @ case 291
	.4byte _0804792C @ case 292
	.4byte _08047940 @ case 293
	.4byte _08047954 @ case 294
	.4byte _08047968 @ case 295
	.4byte _0804797C @ case 296
	.4byte _08047990 @ case 297
	.4byte _080479A4 @ case 298
	.4byte _080479B8 @ case 299
	.4byte _080479CC @ case 300
	.4byte _080479E0 @ case 301
	.4byte _080479F4 @ case 302
	.4byte _08047A08 @ case 303
	.4byte _08047A1C @ case 304
	.4byte _08047A40 @ case 305
	.4byte _08047A54 @ case 306
	.4byte _08047A68 @ case 307
	.4byte _08047A7C @ case 308
	.4byte _08047A90 @ case 309
	.4byte _08047AA4 @ case 310
	.4byte _08047AB8 @ case 311
	.4byte _08047ACC @ case 312
	.4byte _08047AE0 @ case 313
	.4byte _08047AF4 @ case 314
	.4byte _08047B10 @ case 315
	.4byte _08047B24 @ case 316
	.4byte _08047B38 @ case 317
	.4byte _08047B4C @ case 318
	.4byte _08047B60 @ case 319
	.4byte _08047B74 @ case 320
	.4byte _08047B98 @ case 321
	.4byte _08047BAC @ case 322
	.4byte _08047BC0 @ case 323
	.4byte _08047BD4 @ case 324
	.4byte _08047BE8 @ case 325
	.4byte _08047BFC @ case 326
	.4byte _08047C10 @ case 327
	.4byte _08047C2C @ case 328
	.4byte _08047C40 @ case 329
	.4byte _08047C54 @ case 330
	.4byte _08047C68 @ case 331
	.4byte _08047C7C @ case 332
	.4byte _08047C90 @ case 333
	.4byte _08047CBC @ case 334
	.4byte _08047CD0 @ case 335
	.4byte _08047CE4 @ case 336
	.4byte _08047CF8 @ case 337
	.4byte _08047D0C @ case 338
	.4byte _08047D20 @ case 339
	.4byte _08047D34 @ case 340
	.4byte _08047D50 @ case 341
	.4byte _08047D64 @ case 342
	.4byte _08047D78 @ case 343
	.4byte _08047D8C @ case 344
	.4byte _08047DA0 @ case 345
	.4byte _08047DB4 @ case 346
	.4byte _08047DC8 @ case 347
	.4byte _08047DDC @ case 348
	.4byte _08047DF0 @ case 349
	.4byte _08047E04 @ case 350
	.4byte _08047E18 @ case 351
	.4byte _08047E2C @ case 352
	.4byte _08047E40 @ case 353
	.4byte _08047E54 @ case 354
	.4byte _08047E68 @ case 355
	.4byte _08047E7C @ case 356
	.4byte _08047E90 @ case 357
	.4byte _08047EA4 @ case 358
	.4byte _08047EB8 @ case 359
	.4byte _08047ECC @ case 360
	.4byte _08047EE0 @ case 361
	.4byte _08047EF4 @ case 362
	.4byte _08047F08 @ case 363
	.4byte _08047F1C @ case 364
	.4byte _08047F30 @ case 365
	.4byte _08047F44 @ case 366
	.4byte _08047F58 @ case 367
	.4byte _08047F6C @ case 368
	.4byte _08047F80 @ case 369
	.4byte _08046A32 @ case 370
	.4byte _08046A42 @ case 371
	.4byte _08047F94 @ case 372
	.4byte _08047FA8 @ case 373
	.4byte _08047FBC @ case 374
	.4byte _08047FD0 @ case 375
	.4byte _08047FE4 @ case 376
	.4byte _08047FF8 @ case 377
	.4byte _0804800C @ case 378
	.4byte _08048020 @ case 379
	.4byte _08048034 @ case 380
	.4byte _08048048 @ case 381
	.4byte _0804805C @ case 382
	.4byte _08048070 @ case 383
	.4byte _08048084 @ case 384
	.4byte _08048098 @ case 385
	.4byte _080480AC @ case 386
	.4byte _080480C0 @ case 387
	.4byte _080480D4 @ case 388
	.4byte _080480E8 @ case 389
	.4byte _080480FC @ case 390
	.4byte _08048110 @ case 391
	.4byte _0804812C @ case 392
	.4byte _08048140 @ case 393
	.4byte _08048154 @ case 394
	.4byte _08048168 @ case 395
	.4byte _08048178 @ case 396
	.4byte _08048188 @ case 397
	.4byte _080481A4 @ case 398
	.4byte _080481B8 @ case 399
	.4byte _080481CC @ case 400
	.4byte _08046884 @ case 401
	.4byte _080481F0 @ case 402
	.4byte _08048204 @ case 403
	.4byte _08048218 @ case 404
	.4byte _08048228 @ case 405
	.4byte _0804823C @ case 406
	.4byte _08048250 @ case 407
	.4byte _08048264 @ case 408
	.4byte _08048274 @ case 409
	.4byte _08048288 @ case 410
	.4byte _0804829C @ case 411
	.4byte _080482B0 @ case 412
	.4byte _080482C0 @ case 413
	.4byte _080482D4 @ case 414
	.4byte _080482E8 @ case 415
	.4byte _080482F8 @ case 416
	.4byte _08048308 @ case 417
	.4byte _0804831C @ case 418
	.4byte _08048330 @ case 419
	.4byte _08048344 @ case 420
	.4byte _08048358 @ case 421
	.4byte _0804836C @ case 422
	.4byte _08048380 @ case 423
	.4byte _08048394 @ case 424
	.4byte _080483A4 @ case 425
	.4byte _080483C0 @ case 426
	.4byte _080483D4 @ case 427
	.4byte _080483E8 @ case 428
	.4byte _080483F8 @ case 429
	.4byte _0804840C @ case 430
	.4byte _08048420 @ case 431
	.4byte _08048434 @ case 432
	.4byte _08048444 @ case 433
	.4byte _08048458 @ case 434
	.4byte _0804846C @ case 435
	.4byte _08048480 @ case 436
	.4byte _08048494 @ case 437
	.4byte _080484A8 @ case 438
	.4byte _080484BC @ case 439
	.4byte _080484D0 @ case 440
	.4byte _080484F4 @ case 441
	.4byte _08048508 @ case 442
	.4byte _0804851C @ case 443
	.4byte _08048530 @ case 444
	.4byte _08048540 @ case 445
	.4byte _08048554 @ case 446
	.4byte _08048568 @ case 447
	.4byte _0804857C @ case 448
	.4byte _0804858C @ case 449
	.4byte _0804859C @ case 450
	.4byte _080485B8 @ case 451
	.4byte _080485CC @ case 452
	.4byte _080485E0 @ case 453
	.4byte _080485F4 @ case 454
	.4byte _08048608 @ case 455
	.4byte _0804861C @ case 456
	.4byte _08048638 @ case 457
	.4byte _08048648 @ case 458
	.4byte _08048658 @ case 459
	.4byte _08048674 @ case 460
	.4byte _08048698 @ case 461
	.4byte _080486A8 @ case 462
	.4byte _080486C4 @ case 463
	.4byte _080486DC @ case 464
	.4byte _080486F0 @ case 465
	.4byte _08048704 @ case 466
	.4byte _08048718 @ case 467
	.4byte _0804872C @ case 468
	.4byte _08048740 @ case 469
	.4byte _08048754 @ case 470
	.4byte _08048768 @ case 471
	.4byte _08048778 @ case 472
	.4byte _0804878C @ case 473
	.4byte _080487A0 @ case 474
	.4byte _080487B4 @ case 475
	.4byte _080487C8 @ case 476
	.4byte _080487DC @ case 477
	.4byte _080487F0 @ case 478
	.4byte _08048804 @ case 479
	.4byte _08048814 @ case 480
	.4byte _08048828 @ case 481
	.4byte _0804883C @ case 482
	.4byte _0804884C @ case 483
	.4byte _0804885C @ case 484
	.4byte _0804886C @ case 485
	.4byte _08048888 @ case 486
	.4byte _08048898 @ case 487
	.4byte _080488A8 @ case 488
	.4byte _080488B8 @ case 489
	.4byte _080488D4 @ case 490
	.4byte _080488E4 @ case 491
	.4byte _08048900 @ case 492
	.4byte _0804891C @ case 493
	.4byte _08048944 @ case 494
	.4byte _0804895C @ case 495
	.4byte _08048974 @ case 496
	.4byte _08048984 @ case 497
	.4byte _08048994 @ case 498
	.4byte _080489A4 @ case 499
	.4byte _080489B4 @ case 500
	.4byte _080489C4 @ case 501
	.4byte _080489D4 @ case 502
	.4byte _080489E4 @ case 503
	.4byte _080489F4 @ case 504
	.4byte _08048A04 @ case 505
	.4byte _08048A14 @ case 506
	.4byte _08048A24 @ case 507
	.4byte _08048A34 @ case 508
	.4byte _08048A4C @ case 509
	.4byte _08048A64 @ case 510
	.4byte _08048A8C @ case 511
	.4byte _08048A9C @ case 512
	.4byte _08048AAC @ case 513
	.4byte _08048ABC @ case 514
	.4byte _08048ACC @ case 515
	.4byte _08048ADC @ case 516
	.4byte _08048AEC @ case 517
	.4byte _08048AFC @ case 518
	.4byte _08048B0C @ case 519
	.4byte _08048B1C @ case 520
	.4byte _08048B2C @ case 521
	.4byte _08048B3C @ case 522
	.4byte _08048B4C @ case 523
	.4byte _08048B5C @ case 524
	.4byte _08048B6C @ case 525
	.4byte _08048B84 @ case 526
	.4byte _08048B94 @ case 527
	.4byte _08048BA4 @ case 528
	.4byte _08048BB4 @ case 529
	.4byte _08048BC4 @ case 530
	.4byte _08048BD4 @ case 531
	.4byte _08048BE4 @ case 532
	.4byte _08048BF4 @ case 533
	.4byte _08048C04 @ case 534
	.4byte _08048C1C @ case 535
	.4byte _08048C2C @ case 536
	.4byte _08048C3C @ case 537
	.4byte _08048C4C @ case 538
	.4byte _08048C5C @ case 539
	.4byte _08048C6C @ case 540
	.4byte _08048C7C @ case 541
	.4byte _08048C8C @ case 542
	.4byte _08048C9C @ case 543
	.4byte _08048CAC @ case 544
	.4byte _08048CBC @ case 545
	.4byte _08048CCC @ case 546
	.4byte _08048CDC @ case 547
	.4byte _08048CEC @ case 548
	.4byte _08048CFC @ case 549
	.4byte _08048D0C @ case 550
	.4byte _08048D1C @ case 551
	.4byte _08048D2C @ case 552
	.4byte _08048D3C @ case 553
	.4byte _08048D4C @ case 554
	.4byte _08048D5C @ case 555
	.4byte _08048D6C @ case 556
	.4byte _08048D7C @ case 557
	.4byte _08048D8C @ case 558
	.4byte _08048D9C @ case 559
	.4byte _08048DAC @ case 560
	.4byte _08048DBC @ case 561
	.4byte _08048DCC @ case 562
	.4byte _08048DDC @ case 563
	.4byte _08048DEC @ case 564
	.4byte _08048DFC @ case 565
	.4byte _08048E0C @ case 566
	.4byte _08048E1C @ case 567
	.4byte _08048E2C @ case 568
	.4byte _08048E44 @ case 569
	.4byte _08048E54 @ case 570
	.4byte _08048E6C @ case 571
	.4byte _08048E84 @ case 572
	.4byte _08048E94 @ case 573
	.4byte _08048EA4 @ case 574
	.4byte _08048EBC @ case 575
	.4byte _08048ED4 @ case 576
	.4byte _08048EEC @ case 577
	.4byte _08048EFC @ case 578
	.4byte _08048F0C @ case 579
	.4byte _08048F24 @ case 580
	.4byte _08048F3C @ case 581
	.4byte _08048F54 @ case 582
	.4byte _08048F6C @ case 583
	.4byte _08048F84 @ case 584
	.4byte _08048F94 @ case 585
	.4byte _08048FA4 @ case 586
	.4byte _08048FBC @ case 587
	.4byte _08048FD4 @ case 588
	.4byte _0804667A @ case 589
_0804626C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r3, #0xc8
	str r3, [sp, #4]
	ldrb r0, [r0, #0x10]
	lsrs r2, r0, #3
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	adds r1, r1, r0
	str r1, [sp, #8]
	add r2, sp, #8
	add r0, sp, #4
	cmp r3, r1
	bhi _08046292
	b _0804688E
_08046292:
	adds r0, r2, #0
	b _0804688E
_08046296:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldrb r0, [r0, #0x11]
	bl _08048F32
_080462A4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldrb r0, [r0, #0x11]
	b _08046812
_080462B0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldrb r0, [r0, #0x12]
	bl sub_08047766
_080462BE:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldrh r0, [r0, #0x12]
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x1a
	bl _08048FEE
_080462D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldrb r2, [r0, #0x10]
	lsls r2, r2, #0x1d
	lsrs r2, r2, #0x1d
	ldrb r3, [r0, #0x11]
	lsls r0, r3, #0x1e
	lsrs r0, r0, #0x1e
	lsls r3, r3, #0x19
	lsrs r3, r3, #0x1b
	adds r2, #6
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #1
	lsls r0, r2, #4
	subs r0, r0, r2
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r3, r3, r1
	cmp r3, #6
	bls _08046308
	adds r0, r3, #0
	movs r1, #7
	bl __umodsi3
	adds r3, r0, #0
_08046308:
	movs r0, #7
	ands r3, r0
	adds r0, r3, #0
	bl _08048FEE
_08046312:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r0, [r0, #8]
	bl _08048FEE
_08046320:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r0, [r0, #0xc]
	bl _08048FEE
_0804632E:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046344 @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E4E8
	bl _08048F32
	.align 2, 0
_08046344: .4byte 0x00001BD8
_08046348:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804635C @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E4E8
	b _08046812
	.align 2, 0
_0804635C: .4byte 0x00001BD8
_08046360:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046374 @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E4F0
	bl _08048FEE
	.align 2, 0
_08046374: .4byte 0x00001BD8
_08046378:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804638C @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E51C
	bl _08048FEE
	.align 2, 0
_0804638C: .4byte 0x00001BD8
_08046390:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080463A4 @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E4FC
	bl _08048FEE
	.align 2, 0
_080463A4: .4byte 0x00001BD8
_080463A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080463BC @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E53C
	b _080466D4
	.align 2, 0
_080463BC: .4byte 0x00001BD8
_080463C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	adds r0, #0x14
	bl func_08009AF8
	bl _08048FEE
_080463D2:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetStoredBushelCount__C4Barn
	bl _08048FEE
_080463E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetStoredBushelCount__C4Coop
	bl _08048FEE
_080463FE:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	adds r0, #0x14
	bl func_08009B18
	b _080466D4
_0804640E:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetUpgradeLevel__C9FarmHouse
	bl _08048FEE
_08046424:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetUpgradeLevel__C4Coop
	bl _08048FEE
_0804643A:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetUpgradeLevel__C4Barn
	bl _08048FEE
_08046450:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	bl func_08010E48
	b _080466D4
_0804645E:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	bl func_08010E50
	b _080466D4
_0804646C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	bl func_08010E58
	b _080466D4
_0804647A:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasBathroom__C9FarmHouse
	b _080466D4
_0804648E:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetFridge__9FarmHouse
_080464A0:
	cmp r0, #0
	bne _080464A8
	bl _08048FEE
_080464A8:
	movs r0, #1
	bl _08048FEE
_080464AE:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetShelf__9FarmHouse
	b _080464A0
_080464C2:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasCarpet__C9FarmHouse
	b _080466D4
_080464D6:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasLargeBed__C9FarmHouse
	b _080466D4
_080464EA:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasMirror__C9FarmHouse
	b _080466D4
_080464FE:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasClock__C9FarmHouse
	b _080466D4
_08046512:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasVase__C9FarmHouse
	b _080466D4
_08046526:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetRecordPlayer__9FarmHouse
	b _080464A0
_0804653A:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasKitchen__C9FarmHouse
	b _080466D4
_0804654E:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasKitchenKnife__C9FarmHouse
	b _080466D4
_08046562:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasKitchenFryingPan__C9FarmHouse
	b _080466D4
_08046576:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasKitchenPot__C9FarmHouse
	b _080466D4
_0804658A:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasKitchenMixer__C9FarmHouse
	b _080466D4
_0804659E:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasKitchenWhisk__C9FarmHouse
	b _080466D4
_080465B2:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasKitchenRollingPin__C9FarmHouse
	b _080466D4
_080465C6:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasKitchenOven__C9FarmHouse
	b _080466D4
_080465DA:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasKitchenSeasoningSet__C9FarmHouse
	b _080466D4
_080465EE:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl HasStocking__C9FarmHouse
	b _080466D4
_08046602:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046618 @ =0x00001C38
	adds r0, r0, r2
	bl func_0800F5D8
	bl _08048FEE
	.align 2, 0
_08046618: .4byte 0x00001C38
_0804661C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046630 @ =0x00001C70
	adds r0, r0, r2
	bl GetGrowthStage__C3Dog
	bl _08048FEE
	.align 2, 0
_08046630: .4byte 0x00001C70
_08046634:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046648 @ =0x00001C70
	adds r0, r0, r2
	bl GetAffection__C6Animal
	bl _08048FEE
	.align 2, 0
_08046648: .4byte 0x00001C70
_0804664C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046660 @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E958
	bl _08048FEE
	.align 2, 0
_08046660: .4byte 0x00001BD8
_08046664:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetStockingArticleId__C9FarmHouse
	bl _08048FEE
_0804667A:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046690 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A039C
	bl _08048FEE
	.align 2, 0
_08046690: .4byte 0x00001CD4
_08046694:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080466B4 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A0A04
	cmp r0, #0
	bne _080466AC
	bl sub_08048FEC
_080466AC:
	bl func_0809EAD8
	bl _08048FEE
	.align 2, 0
_080466B4: .4byte 0x00001CD4
_080466B8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080466DC @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A0A04
	cmp r0, #0
	bne _080466D0
	bl sub_08048FEC
_080466D0:
	bl func_0809EAE0
_080466D4:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl _08048FEE
	.align 2, 0
_080466DC: .4byte 0x00001CD4
_080466E0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046700 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A0A04
	cmp r0, #0
	bne _080466F8
	bl sub_08048FEC
_080466F8:
	bl func_0809EAD0
	bl _08048F32
	.align 2, 0
_08046700: .4byte 0x00001CD4
_08046704:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046724 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A0A04
	cmp r0, #0
	bne _0804671C
	bl sub_08048FEC
_0804671C:
	bl func_0809EAD0
	b _08046812
	.align 2, 0
_08046724: .4byte 0x00001CD4
_08046728:
	adds r0, r2, #0
	movs r1, #0x13
	b _0804674A
_0804672E:
	adds r0, r2, #0
	movs r1, #3
	b _0804674A
_08046734:
	adds r0, r2, #0
	movs r1, #0xc
	b _0804674A
_0804673A:
	adds r0, r2, #0
	movs r1, #0x15
	b _0804674A
_08046740:
	adds r0, r2, #0
	movs r1, #0x19
	b _0804674A
_08046746:
	adds r0, r2, #0
	movs r1, #0x1f
_0804674A:
	movs r2, #0
	bl func_08045584
	bl _08048FEE
_08046754:
	adds r0, r2, #0
	movs r1, #0x13
	b _08046770
_0804675A:
	adds r0, r2, #0
	movs r1, #3
	b _08046770
_08046760:
	adds r0, r2, #0
	movs r1, #0xc
	b _08046770
_08046766:
	adds r0, r2, #0
	movs r1, #0x15
	b _08046770
_0804676C:
	adds r0, r2, #0
	movs r1, #0x19
_08046770:
	movs r2, #1
	bl func_08045584
	bl _08048FEE
_0804677A:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r5, [r0]
	ldr r0, _080467D8 @ =0x0000214C
	adds r4, r5, r0
	ldrb r1, [r4, #0x1b]
	lsrs r1, r1, #7
	ldrb r3, [r4, #0x1c]
	movs r0, #1
	ands r0, r3
	lsls r0, r0, #1
	orrs r0, r1
	cmp r0, #2
	beq _080467CC
	lsls r0, r3, #0x1d
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _080467CC
	lsls r0, r3, #0x1b
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _080467CC
	lsls r0, r3, #0x19
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _080467CC
	ldrh r0, [r4, #0x1c]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _080467CC
	ldr r1, _080467DC @ =0x00002197
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #2
	beq _080467CC
	bl sub_08048FEC
_080467CC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080467E0 @ =0x00002144
	b _0804688C
	.align 2, 0
_080467D8: .4byte 0x0000214C
_080467DC: .4byte 0x00002197
_080467E0: .4byte 0x00002144
_080467E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080467FC @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A1480
	ldrb r0, [r0, #1]
	bl _08048F32
	.align 2, 0
_080467FC: .4byte 0x00001CD4
_08046800:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804681C @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A1480
	ldrb r0, [r0, #1]
_08046812:
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	bl _08048FEE
	.align 2, 0
_0804681C: .4byte 0x00001CD4
_08046820:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046834 @ =0x00002148
	adds r0, r0, r2
	ldrb r0, [r0]
	bl _08048FEE
	.align 2, 0
_08046834: .4byte 0x00002148
_08046838:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	adds r0, #0x14
	bl func_08009C3C
	b _080464A0
_08046848:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	adds r0, #0x14
	bl func_08009C3C
	cmp r0, #0
	bne _0804685E
	bl sub_08048FEC
_0804685E:
	bl GetGrowthStage__C5Horse
	bl _08048FEE
_08046866:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	adds r0, #0x14
	bl func_08009C3C
	cmp r0, #0
	bne _0804687C
	bl sub_08048FEC
_0804687C:
	bl GetAffection__C6Animal
	bl _08048FEE
_08046884:
	ldr r0, _08046894 @ =gUnk_0300040C
	ldr r0, [r0]
	movs r2, #0xda
	lsls r2, r2, #2
_0804688C:
	adds r0, r0, r2
_0804688E:
	ldr r0, [r0]
	bl _08048FEE
	.align 2, 0
_08046894: .4byte gUnk_0300040C
_08046898:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x46
	movs r2, #0x13
	b _08046BC6
_080468A6:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x47
	movs r2, #0x13
	b _08046BDC
_080468B4:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x49
	movs r2, #0x13
	b _08046BF2
_080468C2:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x4a
	movs r2, #0x13
	b _08046C08
_080468D0:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x4b
	movs r2, #0x13
	b _08046C2A
_080468DE:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x4c
	movs r2, #0x13
	b _08046A4E
_080468EC:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x4e
	movs r2, #3
	b _08046BC6
_080468FA:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x4f
	movs r2, #3
	b _08046BDC
_08046908:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x50
	movs r2, #3
	b _08046BF2
_08046916:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x52
	movs r2, #3
	b _08046C08
_08046924:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x54
	movs r2, #3
	b _08046C2A
_08046932:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x55
	movs r2, #3
	b _08046A4E
_08046940:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x57
	movs r2, #0x19
	b _08046BC6
_0804694E:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x58
	movs r2, #0x19
	b _08046BDC
_0804695C:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x5a
	movs r2, #0x19
	b _08046BF2
_0804696A:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x5c
	movs r2, #0x19
	b _08046C08
_08046978:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x5e
	movs r2, #0x19
	b _08046C2A
_08046986:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x5f
	movs r2, #0x19
	b _08046A4E
_08046994:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x61
	movs r2, #0xc
	b _08046BC6
_080469A2:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x62
	movs r2, #0xc
	b _08046BDC
_080469B0:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x64
	movs r2, #0xc
	b _08046BF2
_080469BE:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x65
	movs r2, #0xc
	b _08046C08
_080469CC:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x66
	movs r2, #0xc
	b _08046C2A
_080469DA:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x67
	movs r2, #0xc
	b _08046A4E
_080469E8:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x69
	b _08046BC4
_080469F4:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x6a
	b _08046BDA
_08046A00:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x6b
	b _08046BF0
_08046A0C:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x6d
	b _08046C06
_08046A18:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x6e
	b _08046C28
_08046A24:
	mov r1, sp
	movs r0, #0
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x6f
	movs r2, #0x15
	b _08046A4E
_08046A32:
	movs r1, #0xb9
	lsls r1, r1, #1
	mov r3, sp
	movs r0, #0
	strb r0, [r3]
	adds r0, r2, #0
	movs r2, #0x1f
	b _08046C2A
_08046A42:
	ldr r1, _08046A58 @ =0x00000173
	mov r3, sp
	movs r0, #0
	strb r0, [r3]
	adds r0, r2, #0
	movs r2, #0x1f
_08046A4E:
	movs r3, #6
	bl func_080455D8
	bl _08048FEE
	.align 2, 0
_08046A58: .4byte 0x00000173
_08046A5C:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x71
	movs r2, #0x13
	b _08046BC6
_08046A6A:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x72
	movs r2, #0x13
	b _08046BDC
_08046A78:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x73
	movs r2, #0x13
	b _08046BF2
_08046A86:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x74
	movs r2, #0x13
	b _08046C08
_08046A94:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x75
	movs r2, #0x13
	b _08046C2A
_08046AA2:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x76
	movs r2, #0x13
	b _08046C2A
_08046AB0:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x77
	movs r2, #0x13
	b _08046C2A
_08046ABE:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x7a
	movs r2, #3
	b _08046BC6
_08046ACC:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x7b
	movs r2, #3
	b _08046BDC
_08046ADA:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x7c
	movs r2, #3
	b _08046BF2
_08046AE8:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x7d
	movs r2, #3
	b _08046C08
_08046AF6:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x7e
	movs r2, #3
	b _08046C2A
_08046B04:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x7f
	movs r2, #3
	b _08046C2A
_08046B12:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x82
	movs r2, #0x19
	b _08046BC6
_08046B20:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x83
	movs r2, #0x19
	b _08046BDC
_08046B2E:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x84
	movs r2, #0x19
	b _08046BF2
_08046B3C:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x85
	movs r2, #0x19
	b _08046C08
_08046B4A:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x86
	movs r2, #0x19
	b _08046C2A
_08046B58:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x87
	movs r2, #0x19
	b _08046C2A
_08046B66:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x8a
	movs r2, #0xc
	b _08046BC6
_08046B74:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x8b
	movs r2, #0xc
	b _08046BDC
_08046B82:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x8c
	movs r2, #0xc
	b _08046BF2
_08046B90:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x8d
	movs r2, #0xc
	b _08046C08
_08046B9E:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x8e
	movs r2, #0xc
	b _08046C2A
_08046BAC:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x8f
	movs r2, #0xc
	b _08046C2A
_08046BBA:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x92
_08046BC4:
	movs r2, #0x15
_08046BC6:
	movs r3, #1
	bl func_080455D8
	bl _08048FEE
_08046BD0:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x93
_08046BDA:
	movs r2, #0x15
_08046BDC:
	movs r3, #2
	bl func_080455D8
	bl _08048FEE
_08046BE6:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x94
_08046BF0:
	movs r2, #0x15
_08046BF2:
	movs r3, #3
	bl func_080455D8
	bl _08048FEE
_08046BFC:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x95
_08046C06:
	movs r2, #0x15
_08046C08:
	movs r3, #4
	bl func_080455D8
	bl _08048FEE
_08046C12:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x96
	b _08046C28
_08046C1E:
	mov r1, sp
	movs r0, #1
	strb r0, [r1]
	adds r0, r2, #0
	movs r1, #0x97
_08046C28:
	movs r2, #0x15
_08046C2A:
	movs r3, #5
	bl func_080455D8
	bl _08048FEE
_08046C34:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046C44 @ =0x0000215A
	bl _08048966
	.align 2, 0
_08046C44: .4byte 0x0000215A
_08046C48:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046C58 @ =0x0000215A
	bl _08048E36
	.align 2, 0
_08046C58: .4byte 0x0000215A
_08046C5C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046C6C @ =0x0000215B
	bl _080486B2
	.align 2, 0
_08046C6C: .4byte 0x0000215B
_08046C70:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046C80 @ =0x0000215B
	bl _08048E36
	.align 2, 0
_08046C80: .4byte 0x0000215B
_08046C84:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046C94 @ =0x0000215C
	bl _08048966
	.align 2, 0
_08046C94: .4byte 0x0000215C
_08046C98:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046CA8 @ =0x0000215A
	bl _08048EC6
	.align 2, 0
_08046CA8: .4byte 0x0000215A
_08046CAC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046CBC @ =0x0000215A
	bl _08048F5E
	.align 2, 0
_08046CBC: .4byte 0x0000215A
_08046CC0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046CD0 @ =0x0000215A
	bl _08048E76
	.align 2, 0
_08046CD0: .4byte 0x0000215A
_08046CD4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046CE4 @ =0x0000215B
	bl _08048EC6
	.align 2, 0
_08046CE4: .4byte 0x0000215B
_08046CE8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046CF8 @ =0x0000215B
	bl _08048C0E
	.align 2, 0
_08046CF8: .4byte 0x0000215B
_08046CFC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046D0C @ =0x0000215B
	bl _08048F46
	.align 2, 0
_08046D0C: .4byte 0x0000215B
_08046D10:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046D20 @ =0x0000215B
	bl _08048FC6
	.align 2, 0
_08046D20: .4byte 0x0000215B
_08046D24:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046D34 @ =0x0000215C
	bl _08048EC6
	.align 2, 0
_08046D34: .4byte 0x0000215C
_08046D38:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046D48 @ =0x0000215C
	bl _08048F5E
	.align 2, 0
_08046D48: .4byte 0x0000215C
_08046D4C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046D5C @ =0x0000215C
	bl _08048FC6
	.align 2, 0
_08046D5C: .4byte 0x0000215C
_08046D60:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046D70 @ =0x0000215C
	bl _08048F16
	.align 2, 0
_08046D70: .4byte 0x0000215C
_08046D74:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046D84 @ =0x0000215D
	bl _08048C0E
	.align 2, 0
_08046D84: .4byte 0x0000215D
_08046D88:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046D98 @ =0x0000215D
	bl _08048F5E
	.align 2, 0
_08046D98: .4byte 0x0000215D
_08046D9C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046DAC @ =0x0000215C
	bl _08048F76
	.align 2, 0
_08046DAC: .4byte 0x0000215C
_08046DB0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046DC0 @ =0x0000215C
	bl _08048FDE
	.align 2, 0
_08046DC0: .4byte 0x0000215C
_08046DC4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046DD4 @ =0x0000215D
	bl _08048EC6
	.align 2, 0
_08046DD4: .4byte 0x0000215D
_08046DD8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046DE8 @ =0x0000215D
	bl _08048F46
	.align 2, 0
_08046DE8: .4byte 0x0000215D
_08046DEC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046DFC @ =0x0000215D
	bl _08048F76
	.align 2, 0
_08046DFC: .4byte 0x0000215D
_08046E00:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046E10 @ =0x0000215D
	bl _08048662
	.align 2, 0
_08046E10: .4byte 0x0000215D
_08046E14:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046E24 @ =0x0000215C
	bl _0804811A
	.align 2, 0
_08046E24: .4byte 0x0000215C
_08046E28:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046E38 @ =0x0000215E
	bl _08048966
	.align 2, 0
_08046E38: .4byte 0x0000215E
_08046E3C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046E4C @ =0x0000215E
	bl _080486B2
	.align 2, 0
_08046E4C: .4byte 0x0000215E
_08046E50:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046E60 @ =0x0000215E
	bl _08048662
	.align 2, 0
_08046E60: .4byte 0x0000215E
_08046E64:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046E74 @ =0x0000215E
	bl _08048626
	.align 2, 0
_08046E74: .4byte 0x0000215E
_08046E78:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046E88 @ =0x0000215F
	bl _08048966
	.align 2, 0
_08046E88: .4byte 0x0000215F
_08046E8C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046E9C @ =0x0000215F
	bl _080486B2
	.align 2, 0
_08046E9C: .4byte 0x0000215F
_08046EA0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046EB0 @ =0x0000215F
	bl _08048662
	.align 2, 0
_08046EB0: .4byte 0x0000215F
_08046EB4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046ED0 @ =0x0000215F
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _08046ED4 @ =0x00002160
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	bl _08048A7C
	.align 2, 0
_08046ED0: .4byte 0x0000215F
_08046ED4: .4byte 0x00002160
_08046ED8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046EE8 @ =0x00002160
	bl _08048966
	.align 2, 0
_08046EE8: .4byte 0x00002160
_08046EEC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046EFC @ =0x00002160
	bl _080486B2
	.align 2, 0
_08046EFC: .4byte 0x00002160
_08046F00:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046F10 @ =0x00002160
	bl _08048662
	.align 2, 0
_08046F10: .4byte 0x00002160
_08046F14:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046F24 @ =0x00002160
	bl _08048626
	.align 2, 0
_08046F24: .4byte 0x00002160
_08046F28:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046F38 @ =0x00002161
	bl _08048966
	.align 2, 0
_08046F38: .4byte 0x00002161
_08046F3C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046F4C @ =0x00002161
	bl _080486B2
	.align 2, 0
_08046F4C: .4byte 0x00002161
_08046F50:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046F60 @ =0x00002161
	bl _08048662
	.align 2, 0
_08046F60: .4byte 0x00002161
_08046F64:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046F74 @ =0x00002160
	bl _0804811A
	.align 2, 0
_08046F74: .4byte 0x00002160
_08046F78:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046F88 @ =0x00002162
	bl _08048966
	.align 2, 0
_08046F88: .4byte 0x00002162
_08046F8C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046F9C @ =0x00002162
	bl _080486B2
	.align 2, 0
_08046F9C: .4byte 0x00002162
_08046FA0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046FB0 @ =0x00002162
	bl _08048662
	.align 2, 0
_08046FB0: .4byte 0x00002162
_08046FB4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046FC4 @ =0x00002162
	bl _08048626
	.align 2, 0
_08046FC4: .4byte 0x00002162
_08046FC8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046FD8 @ =0x00002163
	bl _08048966
	.align 2, 0
_08046FD8: .4byte 0x00002163
_08046FDC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08046FEC @ =0x00002163
	bl _080486B2
	.align 2, 0
_08046FEC: .4byte 0x00002163
_08046FF0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047000 @ =0x00002163
	bl _08048662
	.align 2, 0
_08047000: .4byte 0x00002163
_08047004:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047020 @ =0x00002163
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _08047024 @ =0x00002164
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	bl _08048A7C
	.align 2, 0
_08047020: .4byte 0x00002163
_08047024: .4byte 0x00002164
_08047028:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047038 @ =0x00002164
	bl _08048966
	.align 2, 0
_08047038: .4byte 0x00002164
_0804703C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804704C @ =0x00002164
	bl _080486B2
	.align 2, 0
_0804704C: .4byte 0x00002164
_08047050:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047060 @ =0x00002164
	bl _08048662
	.align 2, 0
_08047060: .4byte 0x00002164
_08047064:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047074 @ =0x00002164
	bl _08048626
	.align 2, 0
_08047074: .4byte 0x00002164
_08047078:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047088 @ =0x00002165
	bl _08048966
	.align 2, 0
_08047088: .4byte 0x00002165
_0804708C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804709C @ =0x00002165
	bl _080486B2
	.align 2, 0
_0804709C: .4byte 0x00002165
_080470A0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080470B0 @ =0x00002165
	bl _08048662
	.align 2, 0
_080470B0: .4byte 0x00002165
_080470B4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080470C4 @ =0x00002164
	bl _0804811A
	.align 2, 0
_080470C4: .4byte 0x00002164
_080470C8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080470D8 @ =0x00002166
	bl _08048966
	.align 2, 0
_080470D8: .4byte 0x00002166
_080470DC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080470EC @ =0x00002166
	bl _080486B2
	.align 2, 0
_080470EC: .4byte 0x00002166
_080470F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047100 @ =0x00002166
	bl _08048662
	.align 2, 0
_08047100: .4byte 0x00002166
_08047104:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047114 @ =0x00002166
	bl _08048626
	.align 2, 0
_08047114: .4byte 0x00002166
_08047118:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047128 @ =0x00002167
	bl _08048966
	.align 2, 0
_08047128: .4byte 0x00002167
_0804712C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804713C @ =0x00002167
	bl _080486B2
	.align 2, 0
_0804713C: .4byte 0x00002167
_08047140:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047150 @ =0x00002167
	bl _08048662
	.align 2, 0
_08047150: .4byte 0x00002167
_08047154:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047170 @ =0x00002167
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _08047174 @ =0x00002168
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	bl _08048A7C
	.align 2, 0
_08047170: .4byte 0x00002167
_08047174: .4byte 0x00002168
_08047178:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047188 @ =0x00002168
	bl _08048966
	.align 2, 0
_08047188: .4byte 0x00002168
_0804718C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804719C @ =0x00002168
	bl _080486B2
	.align 2, 0
_0804719C: .4byte 0x00002168
_080471A0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080471B0 @ =0x00002168
	bl _08048662
	.align 2, 0
_080471B0: .4byte 0x00002168
_080471B4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080471C4 @ =0x00002168
	bl _08048626
	.align 2, 0
_080471C4: .4byte 0x00002168
_080471C8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080471D8 @ =0x00002169
	bl _08048966
	.align 2, 0
_080471D8: .4byte 0x00002169
_080471DC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080471EC @ =0x00002169
	bl _080486B2
	.align 2, 0
_080471EC: .4byte 0x00002169
_080471F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047200 @ =0x00002169
	bl _08048662
	.align 2, 0
_08047200: .4byte 0x00002169
_08047204:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047214 @ =0x00002168
	bl _0804811A
	.align 2, 0
_08047214: .4byte 0x00002168
_08047218:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047228 @ =0x0000216A
	bl _08048966
	.align 2, 0
_08047228: .4byte 0x0000216A
_0804722C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804723C @ =0x0000216A
	bl _080486B2
	.align 2, 0
_0804723C: .4byte 0x0000216A
_08047240:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047250 @ =0x0000216A
	bl _08048662
	.align 2, 0
_08047250: .4byte 0x0000216A
_08047254:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047264 @ =0x0000216A
	bl _08048626
	.align 2, 0
_08047264: .4byte 0x0000216A
_08047268:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047278 @ =0x0000216B
	bl _08048966
	.align 2, 0
_08047278: .4byte 0x0000216B
_0804727C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804728C @ =0x0000216B
	bl _080486B2
	.align 2, 0
_0804728C: .4byte 0x0000216B
_08047290:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080472A0 @ =0x0000216B
	bl _08048662
	.align 2, 0
_080472A0: .4byte 0x0000216B
_080472A4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080472C0 @ =0x0000216B
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _080472C4 @ =0x0000216C
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	bl _08048A7C
	.align 2, 0
_080472C0: .4byte 0x0000216B
_080472C4: .4byte 0x0000216C
_080472C8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080472D8 @ =0x0000216C
	bl _08048966
	.align 2, 0
_080472D8: .4byte 0x0000216C
_080472DC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080472EC @ =0x0000216C
	bl _080486B2
	.align 2, 0
_080472EC: .4byte 0x0000216C
_080472F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047300 @ =0x0000216C
	bl _08048662
	.align 2, 0
_08047300: .4byte 0x0000216C
_08047304:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047314 @ =0x0000216C
	bl _08048626
	.align 2, 0
_08047314: .4byte 0x0000216C
_08047318:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047328 @ =0x0000216D
	bl _08048966
	.align 2, 0
_08047328: .4byte 0x0000216D
_0804732C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804733C @ =0x0000216D
	bl _080486B2
	.align 2, 0
_0804733C: .4byte 0x0000216D
_08047340:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047350 @ =0x0000216D
	bl _08048662
	.align 2, 0
_08047350: .4byte 0x0000216D
_08047354:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047364 @ =0x0000216C
	bl _0804811A
	.align 2, 0
_08047364: .4byte 0x0000216C
_08047368:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047378 @ =0x0000216E
	bl _08048966
	.align 2, 0
_08047378: .4byte 0x0000216E
_0804737C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804738C @ =0x0000216E
	bl _080486B2
	.align 2, 0
_0804738C: .4byte 0x0000216E
_08047390:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080473B4 @ =0x0000216F
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #4
	ldr r1, _080473B8 @ =0x00002170
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #7
	ands r0, r1
	lsls r0, r0, #4
	orrs r0, r2
	bl _08048FEE
	.align 2, 0
_080473B4: .4byte 0x0000216F
_080473B8: .4byte 0x00002170
_080473BC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080473CC @ =0x00002170
	bl _080486B2
	.align 2, 0
_080473CC: .4byte 0x00002170
_080473D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080473E0 @ =0x00002170
	bl _08048662
	.align 2, 0
_080473E0: .4byte 0x00002170
_080473E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080473F4 @ =0x00002170
	bl _08048626
	.align 2, 0
_080473F4: .4byte 0x00002170
_080473F8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047408 @ =0x00002171
	bl _08048966
	.align 2, 0
_08047408: .4byte 0x00002171
_0804740C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804741C @ =0x00002171
	bl _080486B2
	.align 2, 0
_0804741C: .4byte 0x00002171
_08047420:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047430 @ =0x00002171
	bl _08048662
	.align 2, 0
_08047430: .4byte 0x00002171
_08047434:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047444 @ =0x00002171
	bl _08048F16
	.align 2, 0
_08047444: .4byte 0x00002171
_08047448:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047458 @ =0x00002172
	bl _08048F2E
	.align 2, 0
_08047458: .4byte 0x00002172
_0804745C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804746C @ =0x00002172
	bl _08048E5E
	.align 2, 0
_0804746C: .4byte 0x00002172
_08047470:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047480 @ =0x00002172
	bl _08048E76
	.align 2, 0
_08047480: .4byte 0x00002172
_08047484:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047494 @ =0x00002172
	bl _08048E36
	.align 2, 0
_08047494: .4byte 0x00002172
_08047498:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080474A8 @ =0x00002173
	bl _08048F2E
	.align 2, 0
_080474A8: .4byte 0x00002173
_080474AC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080474BC @ =0x00002173
	bl _08048E5E
	.align 2, 0
_080474BC: .4byte 0x00002173
_080474C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080474D0 @ =0x00002173
	bl _08048E76
	.align 2, 0
_080474D0: .4byte 0x00002173
_080474D4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080474E4 @ =0x00002173
	bl _08048E36
	.align 2, 0
_080474E4: .4byte 0x00002173
_080474E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080474F8 @ =0x00002174
	bl _08048F2E
	.align 2, 0
_080474F8: .4byte 0x00002174
_080474FC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804750C @ =0x00002174
	bl _08048E5E
	.align 2, 0
_0804750C: .4byte 0x00002174
_08047510:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047520 @ =0x00002174
	bl _08048E76
	.align 2, 0
_08047520: .4byte 0x00002174
_08047524:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047534 @ =0x00002174
	bl _08048E36
	.align 2, 0
_08047534: .4byte 0x00002174
_08047538:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047548 @ =0x00002175
	bl _08048F2E
	.align 2, 0
_08047548: .4byte 0x00002175
_0804754C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804755C @ =0x00002175
	bl _08048E5E
	.align 2, 0
_0804755C: .4byte 0x00002175
_08047560:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047570 @ =0x00002175
	bl _08048F76
	.align 2, 0
_08047570: .4byte 0x00002175
_08047574:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047584 @ =0x00002175
	bl _08048FC6
	.align 2, 0
_08047584: .4byte 0x00002175
_08047588:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047598 @ =0x00002175
	bl _08048FDE
	.align 2, 0
_08047598: .4byte 0x00002175
_0804759C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080475AC @ =0x00002175
	bl _08048F16
	.align 2, 0
_080475AC: .4byte 0x00002175
_080475B0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080475C0 @ =0x00002176
	bl _08048EC6
	.align 2, 0
_080475C0: .4byte 0x00002176
_080475C4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080475D4 @ =0x00002176
	bl _08048966
	.align 2, 0
_080475D4: .4byte 0x00002176
_080475D8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080475E8 @ =0x00002176
	bl _080486B2
	.align 2, 0
_080475E8: .4byte 0x00002176
_080475EC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080475FC @ =0x00002176
	bl _08048662
	.align 2, 0
_080475FC: .4byte 0x00002176
_08047600:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047610 @ =0x00002176
	bl _08048626
	.align 2, 0
_08047610: .4byte 0x00002176
_08047614:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047624 @ =0x00002177
	bl _08048966
	.align 2, 0
_08047624: .4byte 0x00002177
_08047628:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047638 @ =0x00002177
	bl _08048F5E
	.align 2, 0
_08047638: .4byte 0x00002177
_0804763C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804764C @ =0x00002177
	bl _08048E76
	.align 2, 0
_0804764C: .4byte 0x00002177
_08047650:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047660 @ =0x00002177
	bl _08048E36
	.align 2, 0
_08047660: .4byte 0x00002177
_08047664:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047674 @ =0x00002178
	bl _08048EC6
	.align 2, 0
_08047674: .4byte 0x00002178
_08047678:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047688 @ =0x00002178
	bl _08048966
	.align 2, 0
_08047688: .4byte 0x00002178
_0804768C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080476A4 @ =0x00002178
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1d
	bl _08048FEE
	.align 2, 0
_080476A4: .4byte 0x00002178
_080476A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080476B8 @ =0x00002178
	bl _08048E36
	.align 2, 0
_080476B8: .4byte 0x00002178
_080476BC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080476CC @ =0x00002179
	bl _08048F2E
	.align 2, 0
_080476CC: .4byte 0x00002179
_080476D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080476E0 @ =0x00002179
	bl _08048E5E
	.align 2, 0
_080476E0: .4byte 0x00002179
_080476E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080476F4 @ =0x00002179
	bl _08048E76
	.align 2, 0
_080476F4: .4byte 0x00002179
_080476F8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047704 @ =0x00002178
	b _08047C1A
	.align 2, 0
_08047704: .4byte 0x00002178
_08047708:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047718 @ =0x0000217A
	bl _08048F46
	.align 2, 0
_08047718: .4byte 0x0000217A
_0804771C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804772C @ =0x0000217A
	bl _080486B2
	.align 2, 0
_0804772C: .4byte 0x0000217A
_08047730:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047740 @ =0x0000217A
	bl _08048662
	.align 2, 0
_08047740: .4byte 0x0000217A
_08047744:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047754 @ =0x0000217A
	bl _08048F16
	.align 2, 0
_08047754: .4byte 0x0000217A
_08047758:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047770 @ =0x0000217B
	adds r0, r0, r2
	ldrb r0, [r0]

	non_word_aligned_thumb_func_start sub_08047766
sub_08047766: @ 0x08047766
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	bl _08048FEE
	.align 2, 0
_08047770: .4byte 0x0000217B
_08047774:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047784 @ =0x0000217B
	bl _08048662
	.align 2, 0
_08047784: .4byte 0x0000217B
_08047788:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080477A4 @ =0x0000217B
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _080477A8 @ =0x0000217C
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	bl _08048A7C
	.align 2, 0
_080477A4: .4byte 0x0000217B
_080477A8: .4byte 0x0000217C
_080477AC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080477BC @ =0x0000217C
	bl _08048966
	.align 2, 0
_080477BC: .4byte 0x0000217C
_080477C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080477D0 @ =0x0000217C
	bl _080486B2
	.align 2, 0
_080477D0: .4byte 0x0000217C
_080477D4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080477E4 @ =0x0000217C
	bl _08048662
	.align 2, 0
_080477E4: .4byte 0x0000217C
_080477E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080477F8 @ =0x0000217C
	bl _08048F16
	.align 2, 0
_080477F8: .4byte 0x0000217C
_080477FC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804780C @ =0x0000217D
	bl _08048F2E
	.align 2, 0
_0804780C: .4byte 0x0000217D
_08047810:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047820 @ =0x0000217D
	bl _08048E5E
	.align 2, 0
_08047820: .4byte 0x0000217D
_08047824:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047834 @ =0x0000217D
	bl _08048E76
	.align 2, 0
_08047834: .4byte 0x0000217D
_08047838:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047848 @ =0x0000217D
	bl _08048E36
	.align 2, 0
_08047848: .4byte 0x0000217D
_0804784C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804785C @ =0x0000217E
	bl _08048F2E
	.align 2, 0
_0804785C: .4byte 0x0000217E
_08047860:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047870 @ =0x0000217E
	bl _08048E5E
	.align 2, 0
_08047870: .4byte 0x0000217E
_08047874:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047884 @ =0x0000217E
	bl _08048E76
	.align 2, 0
_08047884: .4byte 0x0000217E
_08047888:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047898 @ =0x0000217E
	bl _08048E36
	.align 2, 0
_08047898: .4byte 0x0000217E
_0804789C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080478AC @ =0x0000217F
	bl _08048F2E
	.align 2, 0
_080478AC: .4byte 0x0000217F
_080478B0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080478C0 @ =0x0000217F
	bl _08048E5E
	.align 2, 0
_080478C0: .4byte 0x0000217F
_080478C4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080478D4 @ =0x0000217F
	bl _08048E76
	.align 2, 0
_080478D4: .4byte 0x0000217F
_080478D8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080478E8 @ =0x0000217F
	bl _08048E36
	.align 2, 0
_080478E8: .4byte 0x0000217F
_080478EC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0x86
	lsls r2, r2, #6
	bl _08048F2E
_080478FC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0x86
	lsls r2, r2, #6
	bl _08048E5E
_0804790C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0x86
	lsls r2, r2, #6
	bl _08048E76
_0804791C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0x86
	lsls r2, r2, #6
	bl _08048E36
_0804792C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804793C @ =0x00002181
	bl _08048F2E
	.align 2, 0
_0804793C: .4byte 0x00002181
_08047940:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047950 @ =0x00002181
	bl _08048E5E
	.align 2, 0
_08047950: .4byte 0x00002181
_08047954:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047964 @ =0x00002181
	bl _08048E76
	.align 2, 0
_08047964: .4byte 0x00002181
_08047968:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047978 @ =0x00002181
	bl _08048E36
	.align 2, 0
_08047978: .4byte 0x00002181
_0804797C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804798C @ =0x00002182
	bl _08048F2E
	.align 2, 0
_0804798C: .4byte 0x00002182
_08047990:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080479A0 @ =0x00002182
	bl _08048F46
	.align 2, 0
_080479A0: .4byte 0x00002182
_080479A4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080479B4 @ =0x00002182
	bl _080486B2
	.align 2, 0
_080479B4: .4byte 0x00002182
_080479B8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080479C8 @ =0x00002182
	bl _08048662
	.align 2, 0
_080479C8: .4byte 0x00002182
_080479CC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080479DC @ =0x00002182
	bl _08048626
	.align 2, 0
_080479DC: .4byte 0x00002182
_080479E0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080479F0 @ =0x00002183
	bl _08048966
	.align 2, 0
_080479F0: .4byte 0x00002183
_080479F4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047A04 @ =0x00002183
	bl _080486B2
	.align 2, 0
_08047A04: .4byte 0x00002183
_08047A08:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047A18 @ =0x00002183
	bl _08048662
	.align 2, 0
_08047A18: .4byte 0x00002183
_08047A1C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047A38 @ =0x00002183
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _08047A3C @ =0x00002184
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	bl _08048A7C
	.align 2, 0
_08047A38: .4byte 0x00002183
_08047A3C: .4byte 0x00002184
_08047A40:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047A50 @ =0x00002184
	bl _08048C0E
	.align 2, 0
_08047A50: .4byte 0x00002184
_08047A54:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047A64 @ =0x00002184
	bl _08048E5E
	.align 2, 0
_08047A64: .4byte 0x00002184
_08047A68:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047A78 @ =0x00002184
	bl _08048E76
	.align 2, 0
_08047A78: .4byte 0x00002184
_08047A7C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047A8C @ =0x00002184
	bl _08048E36
	.align 2, 0
_08047A8C: .4byte 0x00002184
_08047A90:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047AA0 @ =0x00002185
	bl _08048F2E
	.align 2, 0
_08047AA0: .4byte 0x00002185
_08047AA4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047AB4 @ =0x00002185
	bl _08048E5E
	.align 2, 0
_08047AB4: .4byte 0x00002185
_08047AB8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047AC8 @ =0x00002185
	bl _08048E76
	.align 2, 0
_08047AC8: .4byte 0x00002185
_08047ACC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047ADC @ =0x00002185
	bl _08048E36
	.align 2, 0
_08047ADC: .4byte 0x00002185
_08047AE0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047AF0 @ =0x00002186
	bl _08048F2E
	.align 2, 0
_08047AF0: .4byte 0x00002186
_08047AF4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047B0C @ =0x00002186
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1d
	bl _08048FEE
	.align 2, 0
_08047B0C: .4byte 0x00002186
_08047B10:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047B20 @ =0x00002186
	bl _08048662
	.align 2, 0
_08047B20: .4byte 0x00002186
_08047B24:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047B34 @ =0x00002186
	bl _08048626
	.align 2, 0
_08047B34: .4byte 0x00002186
_08047B38:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047B48 @ =0x00002187
	bl _08048966
	.align 2, 0
_08047B48: .4byte 0x00002187
_08047B4C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047B5C @ =0x00002187
	bl _080486B2
	.align 2, 0
_08047B5C: .4byte 0x00002187
_08047B60:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047B70 @ =0x00002187
	bl _08048662
	.align 2, 0
_08047B70: .4byte 0x00002187
_08047B74:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047B90 @ =0x00002187
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _08047B94 @ =0x00002188
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	bl _08048A7C
	.align 2, 0
_08047B90: .4byte 0x00002187
_08047B94: .4byte 0x00002188
_08047B98:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047BA8 @ =0x00002188
	bl _08048966
	.align 2, 0
_08047BA8: .4byte 0x00002188
_08047BAC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047BBC @ =0x00002188
	bl _080486B2
	.align 2, 0
_08047BBC: .4byte 0x00002188
_08047BC0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047BD0 @ =0x00002188
	bl _08048662
	.align 2, 0
_08047BD0: .4byte 0x00002188
_08047BD4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047BE4 @ =0x00002188
	bl _080483AE
	.align 2, 0
_08047BE4: .4byte 0x00002188
_08047BE8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047BF8 @ =0x00002189
	bl _08048E5E
	.align 2, 0
_08047BF8: .4byte 0x00002189
_08047BFC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047C0C @ =0x00002189
	bl _08048E76
	.align 2, 0
_08047C0C: .4byte 0x00002189
_08047C10:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047C28 @ =0x00002188
_08047C1A:
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #0xe
	lsrs r0, r0, #0x1c
	bl _08048FEE
	.align 2, 0
_08047C28: .4byte 0x00002188
_08047C2C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047C3C @ =0x0000218A
	bl _08048E5E
	.align 2, 0
_08047C3C: .4byte 0x0000218A
_08047C40:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047C50 @ =0x0000218A
	bl _08048E76
	.align 2, 0
_08047C50: .4byte 0x0000218A
_08047C54:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047C64 @ =0x0000218A
	bl _08048E36
	.align 2, 0
_08047C64: .4byte 0x0000218A
_08047C68:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047C78 @ =0x0000218B
	bl _08048F2E
	.align 2, 0
_08047C78: .4byte 0x0000218B
_08047C7C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047C8C @ =0x0000218B
	bl _080486B2
	.align 2, 0
_08047C8C: .4byte 0x0000218B
_08047C90:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047CB4 @ =0x0000218B
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #5
	ldr r1, _08047CB8 @ =0x0000218C
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	ands r0, r1
	lsls r0, r0, #3
	orrs r0, r2
	bl _08048FEE
	.align 2, 0
_08047CB4: .4byte 0x0000218B
_08047CB8: .4byte 0x0000218C
_08047CBC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047CCC @ =0x0000218C
	bl _08048966
	.align 2, 0
_08047CCC: .4byte 0x0000218C
_08047CD0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047CE0 @ =0x0000218C
	bl _080486B2
	.align 2, 0
_08047CE0: .4byte 0x0000218C
_08047CE4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047CF4 @ =0x0000218C
	bl _08048662
	.align 2, 0
_08047CF4: .4byte 0x0000218C
_08047CF8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047D08 @ =0x0000218C
	bl _08048626
	.align 2, 0
_08047D08: .4byte 0x0000218C
_08047D0C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047D1C @ =0x0000218D
	bl _08048966
	.align 2, 0
_08047D1C: .4byte 0x0000218D
_08047D20:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047D30 @ =0x0000218D
	bl _080486B2
	.align 2, 0
_08047D30: .4byte 0x0000218D
_08047D34:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047D4C @ =0x0000218C
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x1c
	bl _08048FEE
	.align 2, 0
_08047D4C: .4byte 0x0000218C
_08047D50:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047D60 @ =0x0000218E
	bl _08048966
	.align 2, 0
_08047D60: .4byte 0x0000218E
_08047D64:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047D74 @ =0x0000218E
	bl _080486B2
	.align 2, 0
_08047D74: .4byte 0x0000218E
_08047D78:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047D88 @ =0x0000218E
	bl _08048FC6
	.align 2, 0
_08047D88: .4byte 0x0000218E
_08047D8C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047D9C @ =0x0000218E
	bl _08048E36
	.align 2, 0
_08047D9C: .4byte 0x0000218E
_08047DA0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047DB0 @ =0x0000218F
	bl _08048F2E
	.align 2, 0
_08047DB0: .4byte 0x0000218F
_08047DB4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047DC4 @ =0x0000218F
	bl _08048E5E
	.align 2, 0
_08047DC4: .4byte 0x0000218F
_08047DC8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047DD8 @ =0x0000218F
	bl _08048E76
	.align 2, 0
_08047DD8: .4byte 0x0000218F
_08047DDC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047DEC @ =0x0000218F
	bl _08048E36
	.align 2, 0
_08047DEC: .4byte 0x0000218F
_08047DF0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047E00 @ =0x00002190
	bl _08048F2E
	.align 2, 0
_08047E00: .4byte 0x00002190
_08047E04:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047E14 @ =0x00002190
	bl _08048E5E
	.align 2, 0
_08047E14: .4byte 0x00002190
_08047E18:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047E28 @ =0x00002190
	bl _08048E76
	.align 2, 0
_08047E28: .4byte 0x00002190
_08047E2C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047E3C @ =0x00002190
	bl _08048E36
	.align 2, 0
_08047E3C: .4byte 0x00002190
_08047E40:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047E50 @ =0x00002191
	bl _08048F2E
	.align 2, 0
_08047E50: .4byte 0x00002191
_08047E54:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047E64 @ =0x00002191
	bl _08048E5E
	.align 2, 0
_08047E64: .4byte 0x00002191
_08047E68:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047E78 @ =0x00002191
	bl _08048E76
	.align 2, 0
_08047E78: .4byte 0x00002191
_08047E7C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047E8C @ =0x00002191
	bl _08048E36
	.align 2, 0
_08047E8C: .4byte 0x00002191
_08047E90:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047EA0 @ =0x00002192
	bl _08048F2E
	.align 2, 0
_08047EA0: .4byte 0x00002192
_08047EA4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047EB4 @ =0x00002192
	bl _08048E5E
	.align 2, 0
_08047EB4: .4byte 0x00002192
_08047EB8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047EC8 @ =0x00002192
	bl _08048E76
	.align 2, 0
_08047EC8: .4byte 0x00002192
_08047ECC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047EDC @ =0x00002192
	bl _08048E36
	.align 2, 0
_08047EDC: .4byte 0x00002192
_08047EE0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047EF0 @ =0x00002193
	bl _08048F2E
	.align 2, 0
_08047EF0: .4byte 0x00002193
_08047EF4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047F04 @ =0x00002193
	bl _08048E5E
	.align 2, 0
_08047F04: .4byte 0x00002193
_08047F08:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047F18 @ =0x00002193
	bl _08048E76
	.align 2, 0
_08047F18: .4byte 0x00002193
_08047F1C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047F2C @ =0x00002193
	bl _08048E36
	.align 2, 0
_08047F2C: .4byte 0x00002193
_08047F30:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047F40 @ =0x00002194
	bl _08048F2E
	.align 2, 0
_08047F40: .4byte 0x00002194
_08047F44:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047F54 @ =0x00002194
	bl _08048E5E
	.align 2, 0
_08047F54: .4byte 0x00002194
_08047F58:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047F68 @ =0x00002194
	bl _08048E76
	.align 2, 0
_08047F68: .4byte 0x00002194
_08047F6C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047F7C @ =0x00002194
	bl _08048E36
	.align 2, 0
_08047F7C: .4byte 0x00002194
_08047F80:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047F90 @ =0x00002195
	bl _08048F2E
	.align 2, 0
_08047F90: .4byte 0x00002195
_08047F94:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047FA4 @ =0x00002195
	bl _08048E36
	.align 2, 0
_08047FA4: .4byte 0x00002195
_08047FA8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047FB8 @ =0x00002196
	bl _08048F2E
	.align 2, 0
_08047FB8: .4byte 0x00002196
_08047FBC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047FCC @ =0x00002196
	bl _08048E5E
	.align 2, 0
_08047FCC: .4byte 0x00002196
_08047FD0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047FE0 @ =0x00002196
	bl _08048E76
	.align 2, 0
_08047FE0: .4byte 0x00002196
_08047FE4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08047FF4 @ =0x00002196
	bl _08048E36
	.align 2, 0
_08047FF4: .4byte 0x00002196
_08047FF8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048008 @ =0x00002197
	bl _08048F2E
	.align 2, 0
_08048008: .4byte 0x00002197
_0804800C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804801C @ =0x00002197
	bl _08048E5E
	.align 2, 0
_0804801C: .4byte 0x00002197
_08048020:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048030 @ =0x00002197
	bl _08048E76
	.align 2, 0
_08048030: .4byte 0x00002197
_08048034:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048044 @ =0x00002197
	bl _08048E36
	.align 2, 0
_08048044: .4byte 0x00002197
_08048048:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048058 @ =0x00002198
	bl _08048F2E
	.align 2, 0
_08048058: .4byte 0x00002198
_0804805C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804806C @ =0x00002198
	bl _08048E5E
	.align 2, 0
_0804806C: .4byte 0x00002198
_08048070:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048080 @ =0x00002198
	bl _08048E76
	.align 2, 0
_08048080: .4byte 0x00002198
_08048084:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048094 @ =0x00002198
	bl _08048E36
	.align 2, 0
_08048094: .4byte 0x00002198
_08048098:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080480A8 @ =0x00002199
	bl _08048F2E
	.align 2, 0
_080480A8: .4byte 0x00002199
_080480AC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080480BC @ =0x00002199
	bl _08048F46
	.align 2, 0
_080480BC: .4byte 0x00002199
_080480C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080480D0 @ =0x00002199
	bl _08048F5E
	.align 2, 0
_080480D0: .4byte 0x00002199
_080480D4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080480E4 @ =0x00002199
	bl _08048F76
	.align 2, 0
_080480E4: .4byte 0x00002199
_080480E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080480F8 @ =0x00002199
	bl _08048FC6
	.align 2, 0
_080480F8: .4byte 0x00002199
_080480FC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804810C @ =0x00002199
	bl _08048FDE
	.align 2, 0
_0804810C: .4byte 0x00002199
_08048110:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048128 @ =0x00002198
_0804811A:
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x1e
	bl _08048FEE
	.align 2, 0
_08048128: .4byte 0x00002198
_0804812C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804813C @ =0x0000219A
	bl _08048C0E
	.align 2, 0
_0804813C: .4byte 0x0000219A
_08048140:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048150 @ =0x0000219A
	bl _08048E5E
	.align 2, 0
_08048150: .4byte 0x0000219A
_08048154:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048164 @ =0x0000219A
	bl _08048F76
	.align 2, 0
_08048164: .4byte 0x0000219A
_08048168:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048174 @ =0x0000219A
	b _08048662
	.align 2, 0
_08048174: .4byte 0x0000219A
_08048178:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048184 @ =0x0000219A
	b _08048626
	.align 2, 0
_08048184: .4byte 0x0000219A
_08048188:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080481A0 @ =0x0000219B
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1d
	bl _08048FEE
	.align 2, 0
_080481A0: .4byte 0x0000219B
_080481A4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080481B4 @ =0x0000219B
	bl _08048E76
	.align 2, 0
_080481B4: .4byte 0x0000219B
_080481B8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080481C8 @ =0x0000219B
	bl _08048FDE
	.align 2, 0
_080481C8: .4byte 0x0000219B
_080481CC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080481E8 @ =0x0000219B
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _080481EC @ =0x0000219C
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #3
	bl _08048A7C
	.align 2, 0
_080481E8: .4byte 0x0000219B
_080481EC: .4byte 0x0000219C
_080481F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048200 @ =0x0000219C
	bl _08048E5E
	.align 2, 0
_08048200: .4byte 0x0000219C
_08048204:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048214 @ =0x0000219C
	bl _08048F76
	.align 2, 0
_08048214: .4byte 0x0000219C
_08048218:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048224 @ =0x0000219C
	b _08048662
	.align 2, 0
_08048224: .4byte 0x0000219C
_08048228:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048238 @ =0x0000219C
	bl _08048F16
	.align 2, 0
_08048238: .4byte 0x0000219C
_0804823C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804824C @ =0x0000219D
	bl _08048F2E
	.align 2, 0
_0804824C: .4byte 0x0000219D
_08048250:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048260 @ =0x0000219D
	bl _08048F46
	.align 2, 0
_08048260: .4byte 0x0000219D
_08048264:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048270 @ =0x0000219D
	b _080486B2
	.align 2, 0
_08048270: .4byte 0x0000219D
_08048274:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048284 @ =0x0000219D
	bl _08048FC6
	.align 2, 0
_08048284: .4byte 0x0000219D
_08048288:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048298 @ =0x0000219D
	bl _08048E36
	.align 2, 0
_08048298: .4byte 0x0000219D
_0804829C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080482AC @ =0x0000219E
	bl _08048EC6
	.align 2, 0
_080482AC: .4byte 0x0000219E
_080482B0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080482BC @ =0x0000219E
	b _08048966
	.align 2, 0
_080482BC: .4byte 0x0000219E
_080482C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080482D0 @ =0x0000219E
	bl _08048F5E
	.align 2, 0
_080482D0: .4byte 0x0000219E
_080482D4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080482E4 @ =0x0000219E
	bl _08048E76
	.align 2, 0
_080482E4: .4byte 0x0000219E
_080482E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080482F4 @ =0x0000219E
	b _08048950
	.align 2, 0
_080482F4: .4byte 0x0000219E
_080482F8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048304 @ =0x0000219F
	b _08048966
	.align 2, 0
_08048304: .4byte 0x0000219F
_08048308:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048318 @ =0x0000219F
	bl _08048F5E
	.align 2, 0
_08048318: .4byte 0x0000219F
_0804831C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804832C @ =0x0000219F
	bl _08048E76
	.align 2, 0
_0804832C: .4byte 0x0000219F
_08048330:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048340 @ =0x0000219F
	bl _08048E36
	.align 2, 0
_08048340: .4byte 0x0000219F
_08048344:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048354 @ =0x000021A0
	bl _08048F2E
	.align 2, 0
_08048354: .4byte 0x000021A0
_08048358:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048368 @ =0x000021A0
	bl _08048F46
	.align 2, 0
_08048368: .4byte 0x000021A0
_0804836C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804837C @ =0x000021A0
	bl _08048F5E
	.align 2, 0
_0804837C: .4byte 0x000021A0
_08048380:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048390 @ =0x000021A0
	bl _08048F76
	.align 2, 0
_08048390: .4byte 0x000021A0
_08048394:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080483A0 @ =0x000021A0
	b _08048662
	.align 2, 0
_080483A0: .4byte 0x000021A0
_080483A4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080483BC @ =0x000021CA
_080483AE:
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x1d
	bl _08048FEE
	.align 2, 0
_080483BC: .4byte 0x000021CA
_080483C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080483D0 @ =0x000021A1
	bl _08048F2E
	.align 2, 0
_080483D0: .4byte 0x000021A1
_080483D4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080483E4 @ =0x000021A1
	bl _08048F46
	.align 2, 0
_080483E4: .4byte 0x000021A1
_080483E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080483F4 @ =0x000021A1
	b _080486B2
	.align 2, 0
_080483F4: .4byte 0x000021A1
_080483F8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048408 @ =0x000021A1
	bl _08048FC6
	.align 2, 0
_08048408: .4byte 0x000021A1
_0804840C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804841C @ =0x000021A1
	bl _08048E36
	.align 2, 0
_0804841C: .4byte 0x000021A1
_08048420:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048430 @ =0x000021A2
	bl _08048EC6
	.align 2, 0
_08048430: .4byte 0x000021A2
_08048434:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048440 @ =0x000021A2
	b _08048966
	.align 2, 0
_08048440: .4byte 0x000021A2
_08048444:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048454 @ =0x000021A2
	bl _08048F5E
	.align 2, 0
_08048454: .4byte 0x000021A2
_08048458:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048468 @ =0x000021A2
	bl _08048E76
	.align 2, 0
_08048468: .4byte 0x000021A2
_0804846C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804847C @ =0x000021A2
	bl _08048E36
	.align 2, 0
_0804847C: .4byte 0x000021A2
_08048480:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048490 @ =0x000021A3
	bl _08048F2E
	.align 2, 0
_08048490: .4byte 0x000021A3
_08048494:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080484A4 @ =0x000021A3
	bl _08048E5E
	.align 2, 0
_080484A4: .4byte 0x000021A3
_080484A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080484B8 @ =0x000021A3
	bl _08048E76
	.align 2, 0
_080484B8: .4byte 0x000021A3
_080484BC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080484CC @ =0x000021A3
	bl _08048FDE
	.align 2, 0
_080484CC: .4byte 0x000021A3
_080484D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080484EC @ =0x000021A3
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _080484F0 @ =0x000021A4
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	b _08048A7C
	.align 2, 0
_080484EC: .4byte 0x000021A3
_080484F0: .4byte 0x000021A4
_080484F4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048504 @ =0x000021A4
	bl _08048C0E
	.align 2, 0
_08048504: .4byte 0x000021A4
_08048508:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048518 @ =0x000021A4
	bl _08048E5E
	.align 2, 0
_08048518: .4byte 0x000021A4
_0804851C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804852C @ =0x000021A4
	bl _08048F76
	.align 2, 0
_0804852C: .4byte 0x000021A4
_08048530:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804853C @ =0x000021A4
	b _08048662
	.align 2, 0
_0804853C: .4byte 0x000021A4
_08048540:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048550 @ =0x000021A4
	bl _08048F16
	.align 2, 0
_08048550: .4byte 0x000021A4
_08048554:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048564 @ =0x000021A5
	bl _08048F2E
	.align 2, 0
_08048564: .4byte 0x000021A5
_08048568:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048578 @ =0x000021A5
	bl _08048F46
	.align 2, 0
_08048578: .4byte 0x000021A5
_0804857C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048588 @ =0x000021A5
	b _080486B2
	.align 2, 0
_08048588: .4byte 0x000021A5
_0804858C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048598 @ =0x000021A5
	b _08048662
	.align 2, 0
_08048598: .4byte 0x000021A5
_0804859C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080485B4 @ =0x000021A4
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #0xe
	lsrs r0, r0, #0x1d
	bl _08048FEE
	.align 2, 0
_080485B4: .4byte 0x000021A4
_080485B8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080485C8 @ =0x000021A6
	bl _08048F46
	.align 2, 0
_080485C8: .4byte 0x000021A6
_080485CC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080485DC @ =0x000021A6
	bl _08048F5E
	.align 2, 0
_080485DC: .4byte 0x000021A6
_080485E0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080485F0 @ =0x000021A6
	bl _08048F76
	.align 2, 0
_080485F0: .4byte 0x000021A6
_080485F4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048604 @ =0x000021A6
	bl _08048FC6
	.align 2, 0
_08048604: .4byte 0x000021A6
_08048608:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048618 @ =0x000021A6
	bl _08048FDE
	.align 2, 0
_08048618: .4byte 0x000021A6
_0804861C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048634 @ =0x000021A6
_08048626:
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1e
	bl _08048FEE
	.align 2, 0
_08048634: .4byte 0x000021A6
_08048638:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048644 @ =0x000021A7
	b _08048966
	.align 2, 0
_08048644: .4byte 0x000021A7
_08048648:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048654 @ =0x000021A7
	b _080486B2
	.align 2, 0
_08048654: .4byte 0x000021A7
_08048658:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048670 @ =0x000021A7
_08048662:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1e
	bl _08048FEE
	.align 2, 0
_08048670: .4byte 0x000021A7
_08048674:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048690 @ =0x000021A7
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _08048694 @ =0x000021A8
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	b _08048A7C
	.align 2, 0
_08048690: .4byte 0x000021A7
_08048694: .4byte 0x000021A8
_08048698:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080486A4 @ =0x000021A8
	b _08048966
	.align 2, 0
_080486A4: .4byte 0x000021A8
_080486A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080486C0 @ =0x000021A8
_080486B2:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1e
	bl _08048FEE
	.align 2, 0
_080486C0: .4byte 0x000021A8
_080486C4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080486D8 @ =0x000021A8
	adds r0, r0, r2
	ldrb r0, [r0]
	lsrs r0, r0, #5
	bl _08048FEE
	.align 2, 0
_080486D8: .4byte 0x000021A8
_080486DC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080486EC @ =0x000021A9
	bl _08048F2E
	.align 2, 0
_080486EC: .4byte 0x000021A9
_080486F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048700 @ =0x000021A9
	bl _08048E5E
	.align 2, 0
_08048700: .4byte 0x000021A9
_08048704:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048714 @ =0x000021A9
	bl _08048F76
	.align 2, 0
_08048714: .4byte 0x000021A9
_08048718:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048728 @ =0x000021A9
	bl _08048FC6
	.align 2, 0
_08048728: .4byte 0x000021A9
_0804872C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804873C @ =0x000021A9
	bl _08048FDE
	.align 2, 0
_0804873C: .4byte 0x000021A9
_08048740:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048750 @ =0x000021A9
	bl _08048F16
	.align 2, 0
_08048750: .4byte 0x000021A9
_08048754:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048764 @ =0x000021AA
	bl _08048EC6
	.align 2, 0
_08048764: .4byte 0x000021AA
_08048768:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048774 @ =0x000021AA
	b _08048C0E
	.align 2, 0
_08048774: .4byte 0x000021AA
_08048778:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048788 @ =0x000021AA
	bl _08048F46
	.align 2, 0
_08048788: .4byte 0x000021AA
_0804878C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _0804879C @ =0x000021AA
	bl _08048F5E
	.align 2, 0
_0804879C: .4byte 0x000021AA
_080487A0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080487B0 @ =0x000021AA
	bl _08048F76
	.align 2, 0
_080487B0: .4byte 0x000021AA
_080487B4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080487C4 @ =0x000021AA
	bl _08048FC6
	.align 2, 0
_080487C4: .4byte 0x000021AA
_080487C8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080487D8 @ =0x000021AA
	bl _08048FDE
	.align 2, 0
_080487D8: .4byte 0x000021AA
_080487DC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080487EC @ =0x000021AA
	bl _08048F16
	.align 2, 0
_080487EC: .4byte 0x000021AA
_080487F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048800 @ =0x000021AB
	bl _08048EC6
	.align 2, 0
_08048800: .4byte 0x000021AB
_08048804:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048810 @ =0x000021AB
	b _08048C0E
	.align 2, 0
_08048810: .4byte 0x000021AB
_08048814:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048824 @ =0x000021AB
	bl _08048F46
	.align 2, 0
_08048824: .4byte 0x000021AB
_08048828:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048838 @ =0x000021AB
	bl _08048F5E
	.align 2, 0
_08048838: .4byte 0x000021AB
_0804883C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048848 @ =0x000021B4
	b _0804890A
	.align 2, 0
_08048848: .4byte 0x000021B4
_0804884C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048858 @ =0x000021B4
	b _080488EE
	.align 2, 0
_08048858: .4byte 0x000021B4
_0804885C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048868 @ =0x000021B6
	b _0804890A
	.align 2, 0
_08048868: .4byte 0x000021B6
_0804886C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048880 @ =0x000021B7
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #6
	ldr r1, _08048884 @ =0x000021B8
	b _08048930
	.align 2, 0
_08048880: .4byte 0x000021B7
_08048884: .4byte 0x000021B8
_08048888:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048894 @ =0x000021B8
	b _0804890A
	.align 2, 0
_08048894: .4byte 0x000021B8
_08048898:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080488A4 @ =0x000021B8
	b _080488EE
	.align 2, 0
_080488A4: .4byte 0x000021B8
_080488A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080488B4 @ =0x000021BA
	b _0804890A
	.align 2, 0
_080488B4: .4byte 0x000021BA
_080488B8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080488CC @ =0x000021BB
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #6
	ldr r1, _080488D0 @ =0x000021BC
	b _08048930
	.align 2, 0
_080488CC: .4byte 0x000021BB
_080488D0: .4byte 0x000021BC
_080488D4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080488E0 @ =0x000021BC
	b _0804890A
	.align 2, 0
_080488E0: .4byte 0x000021BC
_080488E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080488FC @ =0x000021BC
_080488EE:
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #0xa
	lsrs r0, r0, #0x18
	bl _08048FEE
	.align 2, 0
_080488FC: .4byte 0x000021BC
_08048900:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048918 @ =0x000021BE
_0804890A:
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x12
	lsrs r0, r0, #0x18
	bl _08048FEE
	.align 2, 0
_08048918: .4byte 0x000021BE
_0804891C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048940 @ =0x000021BF
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #6
	movs r1, #0x87
	lsls r1, r1, #6
_08048930:
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #0x3f
	ands r0, r1
	lsls r0, r0, #2
	orrs r0, r2
	bl _08048FEE
	.align 2, 0
_08048940: .4byte 0x000021BF
_08048944:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	movs r2, #0x87
	lsls r2, r2, #6
_08048950:
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1d
	bl _08048FEE
_0804895C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048970 @ =0x000021C1
_08048966:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1e
	b _08048FEE
	.align 2, 0
_08048970: .4byte 0x000021C1
_08048974:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048980 @ =0x000021C1
	b _08048F5E
	.align 2, 0
_08048980: .4byte 0x000021C1
_08048984:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048990 @ =0x000021C1
	b _08048F76
	.align 2, 0
_08048990: .4byte 0x000021C1
_08048994:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080489A0 @ =0x000021C1
	b _08048FC6
	.align 2, 0
_080489A0: .4byte 0x000021C1
_080489A4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080489B0 @ =0x000021C1
	b _08048FDE
	.align 2, 0
_080489B0: .4byte 0x000021C1
_080489B4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080489C0 @ =0x000021C1
	b _08048F16
	.align 2, 0
_080489C0: .4byte 0x000021C1
_080489C4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080489D0 @ =0x000021C2
	b _08048EC6
	.align 2, 0
_080489D0: .4byte 0x000021C2
_080489D4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080489E0 @ =0x000021C2
	b _08048C0E
	.align 2, 0
_080489E0: .4byte 0x000021C2
_080489E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _080489F0 @ =0x000021C2
	b _08048F46
	.align 2, 0
_080489F0: .4byte 0x000021C2
_080489F4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048A00 @ =0x000021C2
	b _08048F5E
	.align 2, 0
_08048A00: .4byte 0x000021C2
_08048A04:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048A10 @ =0x000021C2
	b _08048F76
	.align 2, 0
_08048A10: .4byte 0x000021C2
_08048A14:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048A20 @ =0x000021C2
	b _08048FC6
	.align 2, 0
_08048A20: .4byte 0x000021C2
_08048A24:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048A30 @ =0x000021C2
	b _08048FDE
	.align 2, 0
_08048A30: .4byte 0x000021C2
_08048A34:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048A48 @ =0x000021C2
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x1c
	b _08048FEE
	.align 2, 0
_08048A48: .4byte 0x000021C2
_08048A4C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048A60 @ =0x000021C3
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1c
	b _08048FEE
	.align 2, 0
_08048A60: .4byte 0x000021C3
_08048A64:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048A84 @ =0x000021C3
	adds r1, r0, r2
	ldrb r2, [r1]
	lsrs r2, r2, #7
	ldr r1, _08048A88 @ =0x000021C4
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #7
_08048A7C:
	ands r0, r1
	lsls r0, r0, #1
	orrs r0, r2
	b _08048FEE
	.align 2, 0
_08048A84: .4byte 0x000021C3
_08048A88: .4byte 0x000021C4
_08048A8C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048A98 @ =0x000021C4
	b _08048F5E
	.align 2, 0
_08048A98: .4byte 0x000021C4
_08048A9C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048AA8 @ =0x000021C4
	b _08048F76
	.align 2, 0
_08048AA8: .4byte 0x000021C4
_08048AAC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048AB8 @ =0x000021C4
	b _08048FC6
	.align 2, 0
_08048AB8: .4byte 0x000021C4
_08048ABC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048AC8 @ =0x000021C4
	b _08048FDE
	.align 2, 0
_08048AC8: .4byte 0x000021C4
_08048ACC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048AD8 @ =0x000021C4
	b _08048F16
	.align 2, 0
_08048AD8: .4byte 0x000021C4
_08048ADC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048AE8 @ =0x000021C5
	b _08048EC6
	.align 2, 0
_08048AE8: .4byte 0x000021C5
_08048AEC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048AF8 @ =0x000021C5
	b _08048C0E
	.align 2, 0
_08048AF8: .4byte 0x000021C5
_08048AFC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048B08 @ =0x000021C5
	b _08048F46
	.align 2, 0
_08048B08: .4byte 0x000021C5
_08048B0C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048B18 @ =0x000021C5
	b _08048F5E
	.align 2, 0
_08048B18: .4byte 0x000021C5
_08048B1C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048B28 @ =0x000021C5
	b _08048F76
	.align 2, 0
_08048B28: .4byte 0x000021C5
_08048B2C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048B38 @ =0x000021C5
	b _08048FC6
	.align 2, 0
_08048B38: .4byte 0x000021C5
_08048B3C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048B48 @ =0x000021C5
	b _08048FDE
	.align 2, 0
_08048B48: .4byte 0x000021C5
_08048B4C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048B58 @ =0x000021C5
	b _08048F16
	.align 2, 0
_08048B58: .4byte 0x000021C5
_08048B5C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048B68 @ =0x000021C6
	b _08048EC6
	.align 2, 0
_08048B68: .4byte 0x000021C6
_08048B6C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048B80 @ =0x000021C6
	adds r0, r0, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x18
	b _08048FEE
	.align 2, 0
_08048B80: .4byte 0x000021C6
_08048B84:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048B90 @ =0x000021C7
	b _08048C0E
	.align 2, 0
_08048B90: .4byte 0x000021C7
_08048B94:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048BA0 @ =0x000021C7
	b _08048F46
	.align 2, 0
_08048BA0: .4byte 0x000021C7
_08048BA4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048BB0 @ =0x000021C7
	b _08048F5E
	.align 2, 0
_08048BB0: .4byte 0x000021C7
_08048BB4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048BC0 @ =0x000021C7
	b _08048F76
	.align 2, 0
_08048BC0: .4byte 0x000021C7
_08048BC4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048BD0 @ =0x000021C7
	b _08048FC6
	.align 2, 0
_08048BD0: .4byte 0x000021C7
_08048BD4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048BE0 @ =0x000021C7
	b _08048FDE
	.align 2, 0
_08048BE0: .4byte 0x000021C7
_08048BE4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048BF0 @ =0x000021C7
	b _08048F16
	.align 2, 0
_08048BF0: .4byte 0x000021C7
_08048BF4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048C00 @ =0x000021C8
	b _08048EC6
	.align 2, 0
_08048C00: .4byte 0x000021C8
_08048C04:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048C18 @ =0x000021C8
_08048C0E:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1f
	b _08048FEE
	.align 2, 0
_08048C18: .4byte 0x000021C8
_08048C1C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048C28 @ =0x000021AB
	b _08048E76
	.align 2, 0
_08048C28: .4byte 0x000021AB
_08048C2C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048C38 @ =0x000021AB
	b _08048E36
	.align 2, 0
_08048C38: .4byte 0x000021AB
_08048C3C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048C48 @ =0x000021AC
	b _08048F2E
	.align 2, 0
_08048C48: .4byte 0x000021AC
_08048C4C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048C58 @ =0x000021AC
	b _08048E5E
	.align 2, 0
_08048C58: .4byte 0x000021AC
_08048C5C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048C68 @ =0x000021AC
	b _08048E76
	.align 2, 0
_08048C68: .4byte 0x000021AC
_08048C6C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048C78 @ =0x000021AC
	b _08048E36
	.align 2, 0
_08048C78: .4byte 0x000021AC
_08048C7C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048C88 @ =0x000021AD
	b _08048F2E
	.align 2, 0
_08048C88: .4byte 0x000021AD
_08048C8C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048C98 @ =0x000021AD
	b _08048E5E
	.align 2, 0
_08048C98: .4byte 0x000021AD
_08048C9C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048CA8 @ =0x000021AD
	b _08048E76
	.align 2, 0
_08048CA8: .4byte 0x000021AD
_08048CAC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048CB8 @ =0x000021AD
	b _08048E36
	.align 2, 0
_08048CB8: .4byte 0x000021AD
_08048CBC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048CC8 @ =0x000021AE
	b _08048F2E
	.align 2, 0
_08048CC8: .4byte 0x000021AE
_08048CCC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048CD8 @ =0x000021AE
	b _08048E5E
	.align 2, 0
_08048CD8: .4byte 0x000021AE
_08048CDC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048CE8 @ =0x000021AE
	b _08048E76
	.align 2, 0
_08048CE8: .4byte 0x000021AE
_08048CEC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048CF8 @ =0x000021AE
	b _08048E36
	.align 2, 0
_08048CF8: .4byte 0x000021AE
_08048CFC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048D08 @ =0x000021AF
	b _08048F2E
	.align 2, 0
_08048D08: .4byte 0x000021AF
_08048D0C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048D18 @ =0x000021AF
	b _08048E5E
	.align 2, 0
_08048D18: .4byte 0x000021AF
_08048D1C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048D28 @ =0x000021AF
	b _08048E76
	.align 2, 0
_08048D28: .4byte 0x000021AF
_08048D2C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048D38 @ =0x000021AF
	b _08048E36
	.align 2, 0
_08048D38: .4byte 0x000021AF
_08048D3C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048D48 @ =0x000021B0
	b _08048F2E
	.align 2, 0
_08048D48: .4byte 0x000021B0
_08048D4C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048D58 @ =0x000021B0
	b _08048E5E
	.align 2, 0
_08048D58: .4byte 0x000021B0
_08048D5C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048D68 @ =0x000021B0
	b _08048E76
	.align 2, 0
_08048D68: .4byte 0x000021B0
_08048D6C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048D78 @ =0x000021B0
	b _08048E36
	.align 2, 0
_08048D78: .4byte 0x000021B0
_08048D7C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048D88 @ =0x000021B1
	b _08048F2E
	.align 2, 0
_08048D88: .4byte 0x000021B1
_08048D8C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048D98 @ =0x000021B1
	b _08048E5E
	.align 2, 0
_08048D98: .4byte 0x000021B1
_08048D9C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048DA8 @ =0x000021B1
	b _08048E76
	.align 2, 0
_08048DA8: .4byte 0x000021B1
_08048DAC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048DB8 @ =0x000021B1
	b _08048E36
	.align 2, 0
_08048DB8: .4byte 0x000021B1
_08048DBC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048DC8 @ =0x000021B2
	b _08048F2E
	.align 2, 0
_08048DC8: .4byte 0x000021B2
_08048DCC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048DD8 @ =0x000021B2
	b _08048E5E
	.align 2, 0
_08048DD8: .4byte 0x000021B2
_08048DDC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048DE8 @ =0x000021B2
	b _08048E76
	.align 2, 0
_08048DE8: .4byte 0x000021B2
_08048DEC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048DF8 @ =0x000021B2
	b _08048E36
	.align 2, 0
_08048DF8: .4byte 0x000021B2
_08048DFC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048E08 @ =0x000021B3
	b _08048F2E
	.align 2, 0
_08048E08: .4byte 0x000021B3
_08048E0C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048E18 @ =0x000021B3
	b _08048E5E
	.align 2, 0
_08048E18: .4byte 0x000021B3
_08048E1C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048E28 @ =0x000021B3
	b _08048E76
	.align 2, 0
_08048E28: .4byte 0x000021B3
_08048E2C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048E40 @ =0x000021B3
_08048E36:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsrs r0, r0, #6
	b _08048FEE
	.align 2, 0
_08048E40: .4byte 0x000021B3
_08048E44:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048E50 @ =0x000021B4
	b _08048F2E
	.align 2, 0
_08048E50: .4byte 0x000021B4
_08048E54:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048E68 @ =0x000021B4
_08048E5E:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1e
	b _08048FEE
	.align 2, 0
_08048E68: .4byte 0x000021B4
_08048E6C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048E80 @ =0x000021B4
_08048E76:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1e
	b _08048FEE
	.align 2, 0
_08048E80: .4byte 0x000021B4
_08048E84:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048E90 @ =0x000021C8
	b _08048F46
	.align 2, 0
_08048E90: .4byte 0x000021C8
_08048E94:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048EA0 @ =0x000021C8
	b _08048F5E
	.align 2, 0
_08048EA0: .4byte 0x000021C8
_08048EA4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048EB8 @ =0x000021C8
	adds r0, r0, r2
	ldrb r0, [r0]
	lsrs r0, r0, #4
	b _08048FEE
	.align 2, 0
_08048EB8: .4byte 0x000021C8
_08048EBC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048ED0 @ =0x000021C9
_08048EC6:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
	b _08048FEE
	.align 2, 0
_08048ED0: .4byte 0x000021C9
_08048ED4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048EE8 @ =0x000021C9
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1c
	b _08048FEE
	.align 2, 0
_08048EE8: .4byte 0x000021C9
_08048EEC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048EF8 @ =0x000021C9
	b _08048FC6
	.align 2, 0
_08048EF8: .4byte 0x000021C9
_08048EFC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048F08 @ =0x000021C9
	b _08048FDE
	.align 2, 0
_08048F08: .4byte 0x000021C9
_08048F0C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048F20 @ =0x000021C9
_08048F16:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsrs r0, r0, #7
	b _08048FEE
	.align 2, 0
_08048F20: .4byte 0x000021C9
_08048F24:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048F38 @ =0x000021CA
_08048F2E:
	adds r0, r0, r2
	ldrb r0, [r0]
_08048F32:
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	b _08048FEE
	.align 2, 0
_08048F38: .4byte 0x000021CA
_08048F3C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048F50 @ =0x000021CA
_08048F46:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1f
	b _08048FEE
	.align 2, 0
_08048F50: .4byte 0x000021CA
_08048F54:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048F68 @ =0x000021CA
_08048F5E:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1f
	b _08048FEE
	.align 2, 0
_08048F68: .4byte 0x000021CA
_08048F6C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048F80 @ =0x000021CA
_08048F76:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1f
	b _08048FEE
	.align 2, 0
_08048F80: .4byte 0x000021CA
_08048F84:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048F90 @ =0x000021CA
	b _08048FC6
	.align 2, 0
_08048F90: .4byte 0x000021CA
_08048F94:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048FA0 @ =0x000021CA
	b _08048FDE
	.align 2, 0
_08048FA0: .4byte 0x000021CA
_08048FA4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048FB8 @ =0x000021CB
	adds r0, r0, r2
	ldrb r0, [r0]
	lsrs r0, r0, #2
	b _08048FEE
	.align 2, 0
_08048FB8: .4byte 0x000021CB
_08048FBC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048FD0 @ =0x0000216E
_08048FC6:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	b _08048FEE
	.align 2, 0
_08048FD0: .4byte 0x0000216E
_08048FD4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r0, [r0]
	ldr r2, _08048FE8 @ =0x0000216E
_08048FDE:
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1f
	b _08048FEE
	.align 2, 0
_08048FE8: .4byte 0x0000216E

	thumb_func_start sub_08048FEC
sub_08048FEC: @ 0x08048FEC
	movs r0, #0
_08048FEE:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08048FFC
func_08048FFC: @ 0x08048FFC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r7, r0, #0
	mov r8, r1
	adds r6, r2, #0
	bl func_0804590C
	mov sb, r0
	mov r1, r8
	subs r1, #0x1c
	ldr r0, _0804902C @ =0x00000231
	cmp r1, r0
	bls _08049020
	bl _0804DA2E
_08049020:
	lsls r0, r1, #2
	ldr r1, _08049030 @ =_08049034
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0804902C: .4byte 0x00000231
_08049030: .4byte _08049034
_08049034: @ jump table
	.4byte _08049A24 @ case 0
	.4byte _0804DA2E @ case 1
	.4byte _08049B32 @ case 2
	.4byte _08049B4C @ case 3
	.4byte _0804DA2E @ case 4
	.4byte _0804DA2E @ case 5
	.4byte _0804DA2E @ case 6
	.4byte _0804DA2E @ case 7
	.4byte _0804DA2E @ case 8
	.4byte _0804DA2E @ case 9
	.4byte _0804DA2E @ case 10
	.4byte _0804DA2E @ case 11
	.4byte _08049928 @ case 12
	.4byte _08049956 @ case 13
	.4byte _08049990 @ case 14
	.4byte _080498FC @ case 15
	.4byte _0804DA2E @ case 16
	.4byte _0804DA2E @ case 17
	.4byte _0804DA2E @ case 18
	.4byte _080499E4 @ case 19
	.4byte _0804DA2E @ case 20
	.4byte _0804DA2E @ case 21
	.4byte _0804DA2E @ case 22
	.4byte _0804DA2E @ case 23
	.4byte _0804DA2E @ case 24
	.4byte _080499CA @ case 25
	.4byte _0804DA2E @ case 26
	.4byte _0804DA2E @ case 27
	.4byte _0804DA2E @ case 28
	.4byte _0804DA2E @ case 29
	.4byte _0804DA2E @ case 30
	.4byte _0804DA2E @ case 31
	.4byte _0804DA2E @ case 32
	.4byte _0804DA2E @ case 33
	.4byte _0804DA2E @ case 34
	.4byte _0804DA2E @ case 35
	.4byte _0804DA2E @ case 36
	.4byte _0804DA2E @ case 37
	.4byte _0804DA2E @ case 38
	.4byte _0804DA2E @ case 39
	.4byte _0804DA2E @ case 40
	.4byte _0804DA2E @ case 41
	.4byte _08049D64 @ case 42
	.4byte _08049D76 @ case 43
	.4byte _0804A25C @ case 44
	.4byte _08049D88 @ case 45
	.4byte _08049D9A @ case 46
	.4byte _08049DAC @ case 47
	.4byte _08049DBE @ case 48
	.4byte _0804A1C2 @ case 49
	.4byte _08049DD0 @ case 50
	.4byte _08049DE2 @ case 51
	.4byte _08049DF4 @ case 52
	.4byte _0804A280 @ case 53
	.4byte _08049E06 @ case 54
	.4byte _0804A2A0 @ case 55
	.4byte _08049E18 @ case 56
	.4byte _08049E2A @ case 57
	.4byte _0804A1E4 @ case 58
	.4byte _08049E3C @ case 59
	.4byte _08049E4E @ case 60
	.4byte _0804A2C0 @ case 61
	.4byte _08049E60 @ case 62
	.4byte _0804A2E4 @ case 63
	.4byte _08049E72 @ case 64
	.4byte _0804A304 @ case 65
	.4byte _08049E84 @ case 66
	.4byte _08049E96 @ case 67
	.4byte _0804A200 @ case 68
	.4byte _08049EA8 @ case 69
	.4byte _08049EBA @ case 70
	.4byte _0804A324 @ case 71
	.4byte _08049ECC @ case 72
	.4byte _08049EDE @ case 73
	.4byte _08049EF0 @ case 74
	.4byte _08049F02 @ case 75
	.4byte _0804A220 @ case 76
	.4byte _08049F14 @ case 77
	.4byte _08049F24 @ case 78
	.4byte _08049F34 @ case 79
	.4byte _0804A344 @ case 80
	.4byte _08049F44 @ case 81
	.4byte _08049F54 @ case 82
	.4byte _08049F64 @ case 83
	.4byte _0804A23C @ case 84
	.4byte _08049FA0 @ case 85
	.4byte _08049FB0 @ case 86
	.4byte _08049FC2 @ case 87
	.4byte _08049FD4 @ case 88
	.4byte _08049FE6 @ case 89
	.4byte _08049FF8 @ case 90
	.4byte _0804A00A @ case 91
	.4byte _0804A368 @ case 92
	.4byte _0804A404 @ case 93
	.4byte _0804A01C @ case 94
	.4byte _0804A02C @ case 95
	.4byte _0804A03E @ case 96
	.4byte _0804A050 @ case 97
	.4byte _0804A062 @ case 98
	.4byte _0804A074 @ case 99
	.4byte _0804A388 @ case 100
	.4byte _0804A424 @ case 101
	.4byte _0804A086 @ case 102
	.4byte _0804A096 @ case 103
	.4byte _0804A0A8 @ case 104
	.4byte _0804A0BA @ case 105
	.4byte _0804A0CC @ case 106
	.4byte _0804A0DE @ case 107
	.4byte _0804A3A8 @ case 108
	.4byte _0804A438 @ case 109
	.4byte _0804A0F0 @ case 110
	.4byte _0804A100 @ case 111
	.4byte _0804A112 @ case 112
	.4byte _0804A124 @ case 113
	.4byte _0804A136 @ case 114
	.4byte _0804A148 @ case 115
	.4byte _0804A3C4 @ case 116
	.4byte _0804A45C @ case 117
	.4byte _0804A15A @ case 118
	.4byte _0804A168 @ case 119
	.4byte _0804A178 @ case 120
	.4byte _0804A188 @ case 121
	.4byte _0804A198 @ case 122
	.4byte _0804A1A8 @ case 123
	.4byte _0804A3E4 @ case 124
	.4byte _0804A47C @ case 125
	.4byte _0804A49C @ case 126
	.4byte _0804A4BC @ case 127
	.4byte _0804A4E0 @ case 128
	.4byte _0804A500 @ case 129
	.4byte _0804A520 @ case 130
	.4byte _0804A540 @ case 131
	.4byte _0804A564 @ case 132
	.4byte _0804A584 @ case 133
	.4byte _0804A5A4 @ case 134
	.4byte _0804A5C4 @ case 135
	.4byte _0804A5FC @ case 136
	.4byte _0804A61C @ case 137
	.4byte _0804A63C @ case 138
	.4byte _0804A65C @ case 139
	.4byte _0804A680 @ case 140
	.4byte _0804A6A0 @ case 141
	.4byte _0804A6C0 @ case 142
	.4byte _0804A6E0 @ case 143
	.4byte _0804A704 @ case 144
	.4byte _0804A724 @ case 145
	.4byte _0804A744 @ case 146
	.4byte _0804A764 @ case 147
	.4byte _0804A788 @ case 148
	.4byte _0804A7A8 @ case 149
	.4byte _0804A7C8 @ case 150
	.4byte _0804A7E8 @ case 151
	.4byte _0804A820 @ case 152
	.4byte _0804A840 @ case 153
	.4byte _0804A860 @ case 154
	.4byte _0804A880 @ case 155
	.4byte _0804A8A4 @ case 156
	.4byte _0804A8C4 @ case 157
	.4byte _0804A8E4 @ case 158
	.4byte _0804A904 @ case 159
	.4byte _0804A928 @ case 160
	.4byte _0804A948 @ case 161
	.4byte _0804A968 @ case 162
	.4byte _0804A988 @ case 163
	.4byte _0804A9AC @ case 164
	.4byte _0804A9CC @ case 165
	.4byte _0804A9EC @ case 166
	.4byte _0804AA0C @ case 167
	.4byte _0804AA44 @ case 168
	.4byte _0804AA64 @ case 169
	.4byte _0804AA84 @ case 170
	.4byte _0804AAA4 @ case 171
	.4byte _0804AAEC @ case 172
	.4byte _0804AB0C @ case 173
	.4byte _0804AB2C @ case 174
	.4byte _0804AB4C @ case 175
	.4byte _0804AB70 @ case 176
	.4byte _0804AB90 @ case 177
	.4byte _0804ABB0 @ case 178
	.4byte _0804ABD0 @ case 179
	.4byte _0804ABF4 @ case 180
	.4byte _0804AC14 @ case 181
	.4byte _0804AC34 @ case 182
	.4byte _0804AC54 @ case 183
	.4byte _0804AC8C @ case 184
	.4byte _0804ACAC @ case 185
	.4byte _0804ACCC @ case 186
	.4byte _0804ACEC @ case 187
	.4byte _0804AD10 @ case 188
	.4byte _0804AD30 @ case 189
	.4byte _0804AD50 @ case 190
	.4byte _0804AD70 @ case 191
	.4byte _0804AD94 @ case 192
	.4byte _0804ADB4 @ case 193
	.4byte _0804ADD4 @ case 194
	.4byte _0804AE04 @ case 195
	.4byte _0804AE24 @ case 196
	.4byte _0804AE44 @ case 197
	.4byte _0804AE68 @ case 198
	.4byte _0804AE88 @ case 199
	.4byte _0804AEA8 @ case 200
	.4byte _0804AEC8 @ case 201
	.4byte _0804AEE4 @ case 202
	.4byte _0804AF08 @ case 203
	.4byte _0804AF28 @ case 204
	.4byte _0804AF48 @ case 205
	.4byte _0804AF64 @ case 206
	.4byte _0804AF88 @ case 207
	.4byte _0804AFA8 @ case 208
	.4byte _0804AFC8 @ case 209
	.4byte _0804AFE4 @ case 210
	.4byte _0804B008 @ case 211
	.4byte _0804B028 @ case 212
	.4byte _0804B048 @ case 213
	.4byte _0804B064 @ case 214
	.4byte _0804B088 @ case 215
	.4byte _0804B0A8 @ case 216
	.4byte _0804B0C8 @ case 217
	.4byte _0804B0E8 @ case 218
	.4byte _0804B0FC @ case 219
	.4byte _0804B118 @ case 220
	.4byte _0804B13C @ case 221
	.4byte _0804B15C @ case 222
	.4byte _0804B17C @ case 223
	.4byte _0804B19C @ case 224
	.4byte _0804B1C0 @ case 225
	.4byte _0804B1E0 @ case 226
	.4byte _0804B200 @ case 227
	.4byte _0804B220 @ case 228
	.4byte _0804B23C @ case 229
	.4byte _0804B260 @ case 230
	.4byte _0804B280 @ case 231
	.4byte _0804B2A0 @ case 232
	.4byte _0804B2BC @ case 233
	.4byte _0804B2E0 @ case 234
	.4byte _0804B300 @ case 235
	.4byte _0804B320 @ case 236
	.4byte _0804B344 @ case 237
	.4byte _0804B364 @ case 238
	.4byte _0804B384 @ case 239
	.4byte _0804B3A4 @ case 240
	.4byte _0804B3C0 @ case 241
	.4byte _0804B3E4 @ case 242
	.4byte _0804B404 @ case 243
	.4byte _0804B43C @ case 244
	.4byte _0804B45C @ case 245
	.4byte _0804B47C @ case 246
	.4byte _0804B49C @ case 247
	.4byte _0804B4B8 @ case 248
	.4byte _0804B4DC @ case 249
	.4byte _0804B4FC @ case 250
	.4byte _0804B51C @ case 251
	.4byte _0804B538 @ case 252
	.4byte _0804B55C @ case 253
	.4byte _0804B57C @ case 254
	.4byte _0804B59C @ case 255
	.4byte _0804B5B8 @ case 256
	.4byte _0804B5DC @ case 257
	.4byte _0804B5FC @ case 258
	.4byte _0804B61C @ case 259
	.4byte _0804B638 @ case 260
	.4byte _0804B658 @ case 261
	.4byte _0804B676 @ case 262
	.4byte _0804B694 @ case 263
	.4byte _0804B6AC @ case 264
	.4byte _0804B6D0 @ case 265
	.4byte _0804B6F0 @ case 266
	.4byte _0804B710 @ case 267
	.4byte _0804B72C @ case 268
	.4byte _0804B750 @ case 269
	.4byte _0804B770 @ case 270
	.4byte _0804B790 @ case 271
	.4byte _0804B7B0 @ case 272
	.4byte _0804B7D4 @ case 273
	.4byte _0804B7F4 @ case 274
	.4byte _0804B814 @ case 275
	.4byte _0804B834 @ case 276
	.4byte _0804B86C @ case 277
	.4byte _0804B88C @ case 278
	.4byte _0804B8AC @ case 279
	.4byte _0804B8CC @ case 280
	.4byte _0804B8E8 @ case 281
	.4byte _0804B90C @ case 282
	.4byte _0804B92C @ case 283
	.4byte _0804B94C @ case 284
	.4byte _0804B968 @ case 285
	.4byte _0804B98C @ case 286
	.4byte _0804B9AC @ case 287
	.4byte _0804B9CC @ case 288
	.4byte _0804B9F0 @ case 289
	.4byte _0804BA10 @ case 290
	.4byte _0804BA30 @ case 291
	.4byte _0804BA50 @ case 292
	.4byte _0804BA88 @ case 293
	.4byte _0804BAA8 @ case 294
	.4byte _0804BAC8 @ case 295
	.4byte _0804BAE8 @ case 296
	.4byte _0804BB0C @ case 297
	.4byte _0804BB2C @ case 298
	.4byte _0804BB4C @ case 299
	.4byte _0804BB70 @ case 300
	.4byte _0804BB90 @ case 301
	.4byte _0804BBB0 @ case 302
	.4byte _0804BBCC @ case 303
	.4byte _0804BBF0 @ case 304
	.4byte _0804BC10 @ case 305
	.4byte _0804BC48 @ case 306
	.4byte _0804BC68 @ case 307
	.4byte _0804BC88 @ case 308
	.4byte _0804BCA8 @ case 309
	.4byte _0804BCCC @ case 310
	.4byte _0804BCEC @ case 311
	.4byte _0804BD0C @ case 312
	.4byte _0804BD30 @ case 313
	.4byte _0804BD50 @ case 314
	.4byte _0804BD70 @ case 315
	.4byte _0804BD90 @ case 316
	.4byte _0804BDAC @ case 317
	.4byte _0804BDD0 @ case 318
	.4byte _0804BDF0 @ case 319
	.4byte _0804BE10 @ case 320
	.4byte _0804BE2C @ case 321
	.4byte _0804BE50 @ case 322
	.4byte _0804BE70 @ case 323
	.4byte _0804BE90 @ case 324
	.4byte _0804BEAC @ case 325
	.4byte _0804BED0 @ case 326
	.4byte _0804BEF0 @ case 327
	.4byte _0804BF10 @ case 328
	.4byte _0804BF2C @ case 329
	.4byte _0804BF50 @ case 330
	.4byte _0804BF70 @ case 331
	.4byte _0804BF90 @ case 332
	.4byte _0804BFAC @ case 333
	.4byte _0804BFD0 @ case 334
	.4byte _0804BFF0 @ case 335
	.4byte _0804C010 @ case 336
	.4byte _0804C02C @ case 337
	.4byte _0804C050 @ case 338
	.4byte _0804C070 @ case 339
	.4byte _0804C090 @ case 340
	.4byte _0804C0AC @ case 341
	.4byte _08049F74 @ case 342
	.4byte _08049F88 @ case 343
	.4byte _0804C0D0 @ case 344
	.4byte _0804C0EC @ case 345
	.4byte _0804C110 @ case 346
	.4byte _0804C130 @ case 347
	.4byte _0804C150 @ case 348
	.4byte _0804AAC8 @ case 349
	.4byte _0804C16C @ case 350
	.4byte _0804C18C @ case 351
	.4byte _0804C1AC @ case 352
	.4byte _0804C1C8 @ case 353
	.4byte _0804C1EC @ case 354
	.4byte _0804C20C @ case 355
	.4byte _0804C22C @ case 356
	.4byte _0804C248 @ case 357
	.4byte _0804C26C @ case 358
	.4byte _0804C28C @ case 359
	.4byte _0804C2AC @ case 360
	.4byte _0804C2CC @ case 361
	.4byte _0804C2EC @ case 362
	.4byte _0804C300 @ case 363
	.4byte _08049AAA @ case 364
	.4byte _0804C324 @ case 365
	.4byte _08049B94 @ case 366
	.4byte _0804C344 @ case 367
	.4byte _0804C364 @ case 368
	.4byte _0804C388 @ case 369
	.4byte _0804C3A8 @ case 370
	.4byte _0804C3C8 @ case 371
	.4byte _0804C3DC @ case 372
	.4byte _0804DA2E @ case 373
	.4byte _0804C414 @ case 374
	.4byte _08049A54 @ case 375
	.4byte _0804C434 @ case 376
	.4byte _08049BE0 @ case 377
	.4byte _0804C454 @ case 378
	.4byte _0804C478 @ case 379
	.4byte _0804C498 @ case 380
	.4byte _08049C24 @ case 381
	.4byte _0804C4B8 @ case 382
	.4byte _0804C4D4 @ case 383
	.4byte _0804C4F8 @ case 384
	.4byte _08049C70 @ case 385
	.4byte _0804C518 @ case 386
	.4byte _0804C538 @ case 387
	.4byte _0804C55C @ case 388
	.4byte _0804C57C @ case 389
	.4byte _0804C59C @ case 390
	.4byte _0804C5BC @ case 391
	.4byte _0804C5D8 @ case 392
	.4byte _0804C5FC @ case 393
	.4byte _0804C61C @ case 394
	.4byte _0804C63C @ case 395
	.4byte _0804C65C @ case 396
	.4byte _0804C67C @ case 397
	.4byte _0804C6A0 @ case 398
	.4byte _08049AD4 @ case 399
	.4byte _0804C6C4 @ case 400
	.4byte _08049CBC @ case 401
	.4byte _0804C6E4 @ case 402
	.4byte _0804C700 @ case 403
	.4byte _0804C724 @ case 404
	.4byte _08049D08 @ case 405
	.4byte _0804C744 @ case 406
	.4byte _0804C764 @ case 407
	.4byte _0804C780 @ case 408
	.4byte _0804C7A4 @ case 409
	.4byte _0804C7C4 @ case 410
	.4byte _0804C7E4 @ case 411
	.4byte _0804C7F8 @ case 412
	.4byte _0804C830 @ case 413
	.4byte _0804C850 @ case 414
	.4byte _0804C870 @ case 415
	.4byte _0804C890 @ case 416
	.4byte _0804C8B0 @ case 417
	.4byte _0804C8CC @ case 418
	.4byte _0804C8F0 @ case 419
	.4byte _0804C910 @ case 420
	.4byte _0804C930 @ case 421
	.4byte _0804C950 @ case 422
	.4byte _0804C970 @ case 423
	.4byte _0804C990 @ case 424
	.4byte _0804C9B0 @ case 425
	.4byte _0804C9D0 @ case 426
	.4byte _0804C9F0 @ case 427
	.4byte _0804CA04 @ case 428
	.4byte _0804CA28 @ case 429
	.4byte _0804CA48 @ case 430
	.4byte _0804CA68 @ case 431
	.4byte _0804CA88 @ case 432
	.4byte _0804CAC0 @ case 433
	.4byte _0804CAE0 @ case 434
	.4byte _0804CB00 @ case 435
	.4byte _0804CB1C @ case 436
	.4byte _0804CB40 @ case 437
	.4byte _0804CB60 @ case 438
	.4byte _0804CB80 @ case 439
	.4byte _0804CBA0 @ case 440
	.4byte _0804CBB4 @ case 441
	.4byte _0804CBD0 @ case 442
	.4byte _0804CBF4 @ case 443
	.4byte _0804CC14 @ case 444
	.4byte _0804CC34 @ case 445
	.4byte _0804CC54 @ case 446
	.4byte _0804CC74 @ case 447
	.4byte _0804CC94 @ case 448
	.4byte _0804CCA8 @ case 449
	.4byte _0804CCC4 @ case 450
	.4byte _0804CCE8 @ case 451
	.4byte _0804CD08 @ case 452
	.4byte _0804CD28 @ case 453
	.4byte _0804CD48 @ case 454
	.4byte _0804CD68 @ case 455
	.4byte _0804CD78 @ case 456
	.4byte _0804CD98 @ case 457
	.4byte _0804CDD0 @ case 458
	.4byte _0804CDF0 @ case 459
	.4byte _0804CE00 @ case 460
	.4byte _0804CE20 @ case 461
	.4byte _0804CE58 @ case 462
	.4byte _0804CE78 @ case 463
	.4byte _0804CEA0 @ case 464
	.4byte _0804CEC0 @ case 465
	.4byte _0804CEF4 @ case 466
	.4byte _0804CF14 @ case 467
	.4byte _0804CF34 @ case 468
	.4byte _0804CF54 @ case 469
	.4byte _0804CF74 @ case 470
	.4byte _0804CF94 @ case 471
	.4byte _0804CFA8 @ case 472
	.4byte _0804CFC4 @ case 473
	.4byte _0804CFE8 @ case 474
	.4byte _0804D008 @ case 475
	.4byte _0804D028 @ case 476
	.4byte _0804D048 @ case 477
	.4byte _0804D068 @ case 478
	.4byte _0804D088 @ case 479
	.4byte _0804D09C @ case 480
	.4byte _0804D0BC @ case 481
	.4byte _0804D0DC @ case 482
	.4byte _0804D118 @ case 483
	.4byte _0804D138 @ case 484
	.4byte _0804D158 @ case 485
	.4byte _0804D178 @ case 486
	.4byte _0804D18C @ case 487
	.4byte _0804D1A8 @ case 488
	.4byte _0804D1CC @ case 489
	.4byte _0804D1EC @ case 490
	.4byte _0804D20C @ case 491
	.4byte _0804D22C @ case 492
	.4byte _0804D24C @ case 493
	.4byte _0804D26C @ case 494
	.4byte _0804D280 @ case 495
	.4byte _0804D29C @ case 496
	.4byte _0804D2C0 @ case 497
	.4byte _0804D2E8 @ case 498
	.4byte _0804D308 @ case 499
	.4byte _0804D328 @ case 500
	.4byte _0804D348 @ case 501
	.4byte _0804D368 @ case 502
	.4byte _0804D388 @ case 503
	.4byte _0804D398 @ case 504
	.4byte _0804D3B0 @ case 505
	.4byte _0804D3D0 @ case 506
	.4byte _0804D3F0 @ case 507
	.4byte _0804D410 @ case 508
	.4byte _0804D428 @ case 509
	.4byte _0804D448 @ case 510
	.4byte _0804D468 @ case 511
	.4byte _0804D488 @ case 512
	.4byte _0804D4A0 @ case 513
	.4byte _0804D4C0 @ case 514
	.4byte _0804D4E0 @ case 515
	.4byte _0804D500 @ case 516
	.4byte _0804D518 @ case 517
	.4byte _0804D538 @ case 518
	.4byte _0804D558 @ case 519
	.4byte _0804D578 @ case 520
	.4byte _0804D590 @ case 521
	.4byte _0804D5B0 @ case 522
	.4byte _0804D5D0 @ case 523
	.4byte _0804D5F0 @ case 524
	.4byte _0804D608 @ case 525
	.4byte _0804D628 @ case 526
	.4byte _0804D648 @ case 527
	.4byte _0804D668 @ case 528
	.4byte _0804D680 @ case 529
	.4byte _0804D6A0 @ case 530
	.4byte _0804D6C0 @ case 531
	.4byte _0804D6E0 @ case 532
	.4byte _0804D6F8 @ case 533
	.4byte _0804D718 @ case 534
	.4byte _0804D738 @ case 535
	.4byte _0804D758 @ case 536
	.4byte _0804D770 @ case 537
	.4byte _0804D790 @ case 538
	.4byte _0804D7B0 @ case 539
	.4byte _0804D7D0 @ case 540
	.4byte _0804D7E8 @ case 541
	.4byte _0804D808 @ case 542
	.4byte _0804D828 @ case 543
	.4byte _0804D848 @ case 544
	.4byte _0804D868 @ case 545
	.4byte _0804D888 @ case 546
	.4byte _0804D8A0 @ case 547
	.4byte _0804D8C0 @ case 548
	.4byte _0804D8E0 @ case 549
	.4byte _0804D900 @ case 550
	.4byte _0804D910 @ case 551
	.4byte _0804D928 @ case 552
	.4byte _0804D948 @ case 553
	.4byte _0804D968 @ case 554
	.4byte _0804D988 @ case 555
	.4byte _0804D9A8 @ case 556
	.4byte _0804D9C8 @ case 557
	.4byte _0804D9D8 @ case 558
	.4byte _0804D9F0 @ case 559
	.4byte _0804DA10 @ case 560
	.4byte _08049B78 @ case 561
_080498FC:
	cmp r6, #0
	beq _08049904
	bl _0804DA2E
_08049904:
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r0, [r4]
	adds r0, #0x14
	bl func_08009B18
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804991C
	bl _0804DA2E
_0804991C:
	ldr r0, [r4]
	adds r0, #0x14
	bl func_08009C60
	bl _0804DA2E
_08049928:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r4, r7, r1
	ldr r0, [r4]
	adds r0, #0x14
	bl func_08009AF8
	subs r1, r6, r0
	cmp r1, #0
	blt _08049948
	ldr r0, [r4]
	adds r0, #0x14
	bl func_08009B68
	bl _0804DA2E
_08049948:
	ldr r0, [r4]
	adds r0, #0x14
	rsbs r1, r1, #0
	bl func_08009BAC
	bl _0804DA2E
_08049956:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r4, r7, r2
	ldr r0, [r4]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetStoredBushelCount__C4Barn
	subs r1, r6, r0
	cmp r1, #0
	blt _0804997E
	ldr r0, [r4]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl AddStoredBushels__4BarnUi
	bl _0804DA2E
_0804997E:
	ldr r0, [r4]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	rsbs r1, r1, #0
	bl SubtractStoredBushels__4BarnUi
	bl _0804DA2E
_08049990:
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r0, [r4]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetStoredBushelCount__C4Coop
	subs r1, r6, r0
	cmp r1, #0
	blt _080499B8
	ldr r0, [r4]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl AddStoredBushels__4CoopUi
	bl _0804DA2E
_080499B8:
	ldr r0, [r4]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	rsbs r1, r1, #0
	bl SubtractStoredBushels__4CoopUi
	bl _0804DA2E
_080499CA:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	rsbs r0, r6, #0
	orrs r0, r6
	lsrs r0, r0, #0x1f
	ldr r2, _080499E0 @ =0x00002148
	adds r1, r1, r2
	bl _0804DA2C
	.align 2, 0
_080499E0: .4byte 0x00002148
_080499E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r2, _08049A20 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A0A04
	adds r4, r0, #0
	cmp r4, #0
	bne _080499FE
	bl _0804DA2E
_080499FE:
	cmp r6, #0
	bne _08049A06
	bl _0804DA2E
_08049A06:
	bl func_0809EAE0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08049A14
	bl _0804DA2E
_08049A14:
	adds r0, r4, #0
	bl func_0809EAEC
	bl _0804DA2E
	.align 2, 0
_08049A20: .4byte 0x00001CD4
_08049A24:
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r0, [r4]
	movs r5, #0xfa
	lsls r5, r5, #1
	adds r0, r0, r5
	bl HasVase__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08049A40
	bl _0804DA2E
_08049A40:
	cmp r6, #0
	bne _08049A48
	bl _0804DA2E
_08049A48:
	ldr r0, [r4]
	adds r0, r0, r5
	bl AddVase__9FarmHouse
	bl _0804DA2E
_08049A54:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r2, [r0]
	ldr r0, _08049A8C @ =0x0000219C
	adds r2, r2, r0
	movs r0, #1
	adds r1, r6, #0
	ands r1, r0
	lsls r1, r1, #4
	ldrb r3, [r2]
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	cmp r6, #0
	beq _08049A90
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08049A88
	bl _0804DA2E
_08049A88:
	movs r1, #4
	b _08049B0A
	.align 2, 0
_08049A8C: .4byte 0x0000219C
_08049A90:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08049AA0
	bl _0804DA2E
_08049AA0:
	movs r1, #4
	bl func_080168D4
	bl _0804DA2E
_08049AAA:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r2, [r0]
	ldr r0, _08049AD0 @ =0x0000219A
	adds r2, r2, r0
	movs r0, #1
	adds r1, r6, #0
	ands r1, r0
	lsls r1, r1, #1
	ldrb r3, [r2]
	movs r0, #3
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	cmp r6, #0
	bne _08049AF8
	b _08049B18
	.align 2, 0
_08049AD0: .4byte 0x0000219A
_08049AD4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r2, [r0]
	ldr r0, _08049B14 @ =0x000021A1
	adds r2, r2, r0
	movs r0, #1
	adds r1, r6, #0
	ands r1, r0
	lsls r1, r1, #2
	ldrb r3, [r2]
	movs r0, #5
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	cmp r6, #0
	beq _08049B18
_08049AF8:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08049B08
	bl _0804DA2E
_08049B08:
	movs r1, #0
_08049B0A:
	movs r2, #0
	bl func_08016834
	bl _0804DA2E
	.align 2, 0
_08049B14: .4byte 0x000021A1
_08049B18:
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #0
	bne _08049B28
	bl _0804DA2E
_08049B28:
	movs r1, #0
	bl func_080168D4
	bl _0804DA2E
_08049B32:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl AddStocking__9FarmHouse
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	b _08049B66
_08049B4C:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	adds r1, r6, #0
	bl SetStockingArticleId__9FarmHouseUi
	movs r2, #0xd5
	lsls r2, r2, #2
	adds r0, r7, r2
_08049B66:
	ldr r0, [r0]
	cmp r0, #0
	bne _08049B70
	bl _0804DA2E
_08049B70:
	bl func_08016C10
	bl _0804DA2E
_08049B78:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r2, _08049B90 @ =0x00001CD4
	adds r0, r0, r2
	adds r1, r6, #0
	bl func_080A03A4
	bl _0804DA2E
	.align 2, 0
_08049B90: .4byte 0x00001CD4
_08049B94:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r2, [r0]
	ldr r0, _08049BDC @ =0x0000219A
	adds r2, r2, r0
	movs r0, #1
	adds r1, r6, #0
	ands r1, r0
	lsls r1, r1, #4
	ldrb r3, [r2]
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	cmp r6, #0
	bne _08049BBC
	bl _0804DA2E
_08049BBC:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08049BCC
	bl _0804DA2E
_08049BCC:
	movs r1, #0
	bl func_08016AFC
	adds r2, r0, #0
	adds r0, r7, #0
	movs r1, #0
	b _08049D4C
	.align 2, 0
_08049BDC: .4byte 0x0000219A
_08049BE0:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r1, [r0]
	ldr r0, _08049C20 @ =0x0000219C
	adds r1, r1, r0
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r3
	strb r0, [r1]
	cmp r6, #0
	bne _08049C00
	bl _0804DA2E
_08049C00:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08049C10
	bl _0804DA2E
_08049C10:
	movs r1, #4
	bl func_08016AFC
	adds r2, r0, #0
	adds r0, r7, #0
	movs r1, #4
	b _08049D4C
	.align 2, 0
_08049C20: .4byte 0x0000219C
_08049C24:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r2, [r0]
	ldr r0, _08049C6C @ =0x0000219D
	adds r2, r2, r0
	movs r0, #1
	adds r1, r6, #0
	ands r1, r0
	lsls r1, r1, #5
	ldrb r3, [r2]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	cmp r6, #0
	bne _08049C4C
	bl _0804DA2E
_08049C4C:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08049C5C
	bl _0804DA2E
_08049C5C:
	movs r1, #3
	bl func_08016AFC
	adds r2, r0, #0
	adds r0, r7, #0
	movs r1, #3
	b _08049D4C
	.align 2, 0
_08049C6C: .4byte 0x0000219D
_08049C70:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r2, [r0]
	ldr r0, _08049CB8 @ =0x0000219E
	adds r2, r2, r0
	movs r0, #1
	adds r1, r6, #0
	ands r1, r0
	lsls r1, r1, #3
	ldrb r3, [r2]
	movs r0, #9
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	cmp r6, #0
	bne _08049C98
	bl _0804DA2E
_08049C98:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08049CA8
	bl _0804DA2E
_08049CA8:
	movs r1, #1
	bl func_08016AFC
	adds r2, r0, #0
	adds r0, r7, #0
	movs r1, #1
	b _08049D4C
	.align 2, 0
_08049CB8: .4byte 0x0000219E
_08049CBC:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r2, [r0]
	ldr r0, _08049D04 @ =0x000021A1
	adds r2, r2, r0
	movs r0, #1
	adds r1, r6, #0
	ands r1, r0
	lsls r1, r1, #5
	ldrb r3, [r2]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	cmp r6, #0
	bne _08049CE4
	bl _0804DA2E
_08049CE4:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08049CF4
	bl _0804DA2E
_08049CF4:
	movs r1, #0
	bl func_08016AFC
	adds r2, r0, #0
	adds r0, r7, #0
	movs r1, #0
	b _08049D4C
	.align 2, 0
_08049D04: .4byte 0x000021A1
_08049D08:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r2, [r0]
	ldr r0, _08049D60 @ =0x000021A2
	adds r2, r2, r0
	movs r0, #1
	adds r1, r6, #0
	ands r1, r0
	lsls r1, r1, #3
	ldrb r3, [r2]
	movs r0, #9
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	cmp r6, #0
	bne _08049D30
	bl _0804DA2E
_08049D30:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08049D40
	bl _0804DA2E
_08049D40:
	movs r1, #2
	bl func_08016AFC
	adds r2, r0, #0
	adds r0, r7, #0
	movs r1, #2
_08049D4C:
	bl func_0804E3D8
	cmp r0, #0
	bne _08049D58
	bl _0804DA2E
_08049D58:
	bl SetFestivalWinner__6Animal
	bl _0804DA2E
	.align 2, 0
_08049D60: .4byte 0x000021A2
_08049D64:
	movs r0, #1
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x46
	movs r2, #0x13
	b _0804A1B8
_08049D76:
	movs r0, #2
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x47
	movs r2, #0x13
	b _0804A1B8
_08049D88:
	movs r0, #3
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x49
	movs r2, #0x13
	b _0804A1B8
_08049D9A:
	movs r0, #4
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x4a
	movs r2, #0x13
	b _0804A1B8
_08049DAC:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x4b
	movs r2, #0x13
	b _0804A1B8
_08049DBE:
	movs r0, #6
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x4c
	movs r2, #0x13
	b _0804A1B8
_08049DD0:
	movs r0, #1
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x4e
	movs r2, #3
	b _0804A1B8
_08049DE2:
	movs r0, #2
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x4f
	movs r2, #3
	b _0804A1B8
_08049DF4:
	movs r0, #3
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x50
	movs r2, #3
	b _0804A1B8
_08049E06:
	movs r0, #4
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x52
	movs r2, #3
	b _0804A1B8
_08049E18:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x54
	movs r2, #3
	b _0804A1B8
_08049E2A:
	movs r0, #6
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x55
	movs r2, #3
	b _0804A1B8
_08049E3C:
	movs r0, #1
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x57
	movs r2, #0x19
	b _0804A1B8
_08049E4E:
	movs r0, #2
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x58
	movs r2, #0x19
	b _0804A1B8
_08049E60:
	movs r0, #3
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x5a
	movs r2, #0x19
	b _0804A1B8
_08049E72:
	movs r0, #4
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x5c
	movs r2, #0x19
	b _0804A1B8
_08049E84:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x5e
	movs r2, #0x19
	b _0804A1B8
_08049E96:
	movs r0, #6
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x5f
	movs r2, #0x19
	b _0804A1B8
_08049EA8:
	movs r0, #1
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x61
	movs r2, #0xc
	b _0804A1B8
_08049EBA:
	movs r0, #2
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x62
	movs r2, #0xc
	b _0804A1B8
_08049ECC:
	movs r0, #3
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x64
	movs r2, #0xc
	b _0804A1B8
_08049EDE:
	movs r0, #4
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x65
	movs r2, #0xc
	b _0804A1B8
_08049EF0:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x66
	movs r2, #0xc
	b _0804A1B8
_08049F02:
	movs r0, #6
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x67
	movs r2, #0xc
	b _0804A1B8
_08049F14:
	movs r0, #1
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x69
	b _0804A1B6
_08049F24:
	movs r0, #2
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x6a
	b _0804A1B6
_08049F34:
	movs r0, #3
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x6b
	b _0804A1B6
_08049F44:
	movs r0, #4
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x6d
	b _0804A1B6
_08049F54:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x6e
	b _0804A1B6
_08049F64:
	movs r0, #6
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x6f
	b _0804A1B6
_08049F74:
	movs r1, #0xb9
	lsls r1, r1, #1
	movs r0, #5
	str r0, [sp]
	add r2, sp, #4
	movs r0, #0
	strb r0, [r2]
	adds r0, r7, #0
	movs r2, #0x1f
	b _0804A1B8
_08049F88:
	ldr r1, _08049F9C @ =0x00000173
	movs r0, #6
	str r0, [sp]
	add r2, sp, #4
	movs r0, #0
	strb r0, [r2]
	adds r0, r7, #0
	movs r2, #0x1f
	b _0804A1B8
	.align 2, 0
_08049F9C: .4byte 0x00000173
_08049FA0:
	movs r1, #1
	str r1, [sp]
	add r0, sp, #4
	strb r1, [r0]
	adds r0, r7, #0
	movs r1, #0x71
	movs r2, #0x13
	b _0804A1B8
_08049FB0:
	movs r0, #2
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x72
	movs r2, #0x13
	b _0804A1B8
_08049FC2:
	movs r0, #3
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x73
	movs r2, #0x13
	b _0804A1B8
_08049FD4:
	movs r0, #4
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x74
	movs r2, #0x13
	b _0804A1B8
_08049FE6:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x75
	movs r2, #0x13
	b _0804A1B8
_08049FF8:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x76
	movs r2, #0x13
	b _0804A1B8
_0804A00A:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x77
	movs r2, #0x13
	b _0804A1B8
_0804A01C:
	movs r1, #1
	str r1, [sp]
	add r0, sp, #4
	strb r1, [r0]
	adds r0, r7, #0
	movs r1, #0x7a
	movs r2, #3
	b _0804A1B8
_0804A02C:
	movs r0, #2
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x7b
	movs r2, #3
	b _0804A1B8
_0804A03E:
	movs r0, #3
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x7c
	movs r2, #3
	b _0804A1B8
_0804A050:
	movs r0, #4
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x7d
	movs r2, #3
	b _0804A1B8
_0804A062:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x7e
	movs r2, #3
	b _0804A1B8
_0804A074:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x7f
	movs r2, #3
	b _0804A1B8
_0804A086:
	movs r1, #1
	str r1, [sp]
	add r0, sp, #4
	strb r1, [r0]
	adds r0, r7, #0
	movs r1, #0x82
	movs r2, #0x19
	b _0804A1B8
_0804A096:
	movs r0, #2
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x83
	movs r2, #0x19
	b _0804A1B8
_0804A0A8:
	movs r0, #3
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x84
	movs r2, #0x19
	b _0804A1B8
_0804A0BA:
	movs r0, #4
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x85
	movs r2, #0x19
	b _0804A1B8
_0804A0CC:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x86
	movs r2, #0x19
	b _0804A1B8
_0804A0DE:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x87
	movs r2, #0x19
	b _0804A1B8
_0804A0F0:
	movs r1, #1
	str r1, [sp]
	add r0, sp, #4
	strb r1, [r0]
	adds r0, r7, #0
	movs r1, #0x8a
	movs r2, #0xc
	b _0804A1B8
_0804A100:
	movs r0, #2
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x8b
	movs r2, #0xc
	b _0804A1B8
_0804A112:
	movs r0, #3
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x8c
	movs r2, #0xc
	b _0804A1B8
_0804A124:
	movs r0, #4
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x8d
	movs r2, #0xc
	b _0804A1B8
_0804A136:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x8e
	movs r2, #0xc
	b _0804A1B8
_0804A148:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x8f
	movs r2, #0xc
	b _0804A1B8
_0804A15A:
	movs r1, #1
	str r1, [sp]
	add r0, sp, #4
	strb r1, [r0]
	adds r0, r7, #0
	movs r1, #0x92
	b _0804A1B6
_0804A168:
	movs r0, #2
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x93
	b _0804A1B6
_0804A178:
	movs r0, #3
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x94
	b _0804A1B6
_0804A188:
	movs r0, #4
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x95
	b _0804A1B6
_0804A198:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x96
	b _0804A1B6
_0804A1A8:
	movs r0, #5
	str r0, [sp]
	add r1, sp, #4
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #0x97
_0804A1B6:
	movs r2, #0x15
_0804A1B8:
	adds r3, r6, #0
	bl func_08045638
	bl _0804DA2E
_0804A1C2:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r1, [r0]
	ldr r0, _0804A1E0 @ =0x0000215A
	adds r1, r1, r0
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A1E0: .4byte 0x0000215A
_0804A1E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A1FC @ =0x0000215A
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804A1FC: .4byte 0x0000215A
_0804A200:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A21C @ =0x0000215B
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A21C: .4byte 0x0000215B
_0804A220:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A238 @ =0x0000215B
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804A238: .4byte 0x0000215B
_0804A23C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A258 @ =0x0000215C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A258: .4byte 0x0000215C
_0804A25C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A27C @ =0x0000215A
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804A27C: .4byte 0x0000215A
_0804A280:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A29C @ =0x0000215A
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A29C: .4byte 0x0000215A
_0804A2A0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A2BC @ =0x0000215A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A2BC: .4byte 0x0000215A
_0804A2C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A2E0 @ =0x0000215B
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804A2E0: .4byte 0x0000215B
_0804A2E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A300 @ =0x0000215B
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #3
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A300: .4byte 0x0000215B
_0804A304:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A320 @ =0x0000215B
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A320: .4byte 0x0000215B
_0804A324:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A340 @ =0x0000215B
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A340: .4byte 0x0000215B
_0804A344:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A364 @ =0x0000215C
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804A364: .4byte 0x0000215C
_0804A368:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A384 @ =0x0000215C
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A384: .4byte 0x0000215C
_0804A388:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A3A4 @ =0x0000215C
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A3A4: .4byte 0x0000215C
_0804A3A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A3C0 @ =0x0000215C
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804A3C0: .4byte 0x0000215C
_0804A3C4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A3E0 @ =0x0000215D
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #3
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A3E0: .4byte 0x0000215D
_0804A3E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A400 @ =0x0000215D
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A400: .4byte 0x0000215D
_0804A404:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A420 @ =0x0000215C
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A420: .4byte 0x0000215C
_0804A424:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A434 @ =0x0000215C
	bl _0804DA1A
	.align 2, 0
_0804A434: .4byte 0x0000215C
_0804A438:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A458 @ =0x0000215D
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804A458: .4byte 0x0000215D
_0804A45C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A478 @ =0x0000215D
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A478: .4byte 0x0000215D
_0804A47C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A498 @ =0x0000215D
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A498: .4byte 0x0000215D
_0804A49C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A4B8 @ =0x0000215D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A4B8: .4byte 0x0000215D
_0804A4BC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804A4D8 @ =0x0000215C
	adds r3, r3, r2
	movs r1, #3
	ands r1, r6
	lsls r1, r1, #0xf
	ldr r0, [r3]
	ldr r2, _0804A4DC @ =0xFFFE7FFF
	bl _0804CE8E
	.align 2, 0
_0804A4D8: .4byte 0x0000215C
_0804A4DC: .4byte 0xFFFE7FFF
_0804A4E0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A4FC @ =0x0000215E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A4FC: .4byte 0x0000215E
_0804A500:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A51C @ =0x0000215E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A51C: .4byte 0x0000215E
_0804A520:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A53C @ =0x0000215E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A53C: .4byte 0x0000215E
_0804A540:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A55C @ =0x0000215E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804A560 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804A55C: .4byte 0x0000215E
_0804A560: .4byte 0xFFFFFE7F
_0804A564:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A580 @ =0x0000215F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A580: .4byte 0x0000215F
_0804A584:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A5A0 @ =0x0000215F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A5A0: .4byte 0x0000215F
_0804A5A4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A5C0 @ =0x0000215F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A5C0: .4byte 0x0000215F
_0804A5C4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r5, #1
	adds r1, r6, #0
	ands r1, r5
	ldr r2, _0804A5F4 @ =0x0000215F
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	ldr r0, _0804A5F8 @ =0x00002160
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	bl _0804D106
	.align 2, 0
_0804A5F4: .4byte 0x0000215F
_0804A5F8: .4byte 0x00002160
_0804A5FC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A618 @ =0x00002160
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A618: .4byte 0x00002160
_0804A61C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A638 @ =0x00002160
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A638: .4byte 0x00002160
_0804A63C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A658 @ =0x00002160
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A658: .4byte 0x00002160
_0804A65C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A678 @ =0x00002160
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804A67C @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804A678: .4byte 0x00002160
_0804A67C: .4byte 0xFFFFFE7F
_0804A680:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A69C @ =0x00002161
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A69C: .4byte 0x00002161
_0804A6A0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A6BC @ =0x00002161
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A6BC: .4byte 0x00002161
_0804A6C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A6DC @ =0x00002161
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A6DC: .4byte 0x00002161
_0804A6E0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804A6FC @ =0x00002160
	adds r3, r3, r2
	movs r1, #3
	ands r1, r6
	lsls r1, r1, #0xf
	ldr r0, [r3]
	ldr r2, _0804A700 @ =0xFFFE7FFF
	bl _0804CE8E
	.align 2, 0
_0804A6FC: .4byte 0x00002160
_0804A700: .4byte 0xFFFE7FFF
_0804A704:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A720 @ =0x00002162
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A720: .4byte 0x00002162
_0804A724:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A740 @ =0x00002162
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A740: .4byte 0x00002162
_0804A744:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A760 @ =0x00002162
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A760: .4byte 0x00002162
_0804A764:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A780 @ =0x00002162
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804A784 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804A780: .4byte 0x00002162
_0804A784: .4byte 0xFFFFFE7F
_0804A788:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A7A4 @ =0x00002163
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A7A4: .4byte 0x00002163
_0804A7A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A7C4 @ =0x00002163
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A7C4: .4byte 0x00002163
_0804A7C8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A7E4 @ =0x00002163
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A7E4: .4byte 0x00002163
_0804A7E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r5, #1
	adds r1, r6, #0
	ands r1, r5
	ldr r2, _0804A818 @ =0x00002163
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	ldr r0, _0804A81C @ =0x00002164
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	bl _0804D106
	.align 2, 0
_0804A818: .4byte 0x00002163
_0804A81C: .4byte 0x00002164
_0804A820:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A83C @ =0x00002164
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A83C: .4byte 0x00002164
_0804A840:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A85C @ =0x00002164
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A85C: .4byte 0x00002164
_0804A860:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A87C @ =0x00002164
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A87C: .4byte 0x00002164
_0804A880:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A89C @ =0x00002164
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804A8A0 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804A89C: .4byte 0x00002164
_0804A8A0: .4byte 0xFFFFFE7F
_0804A8A4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A8C0 @ =0x00002165
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A8C0: .4byte 0x00002165
_0804A8C4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A8E0 @ =0x00002165
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A8E0: .4byte 0x00002165
_0804A8E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A900 @ =0x00002165
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A900: .4byte 0x00002165
_0804A904:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804A920 @ =0x00002164
	adds r3, r3, r2
	movs r1, #3
	ands r1, r6
	lsls r1, r1, #0xf
	ldr r0, [r3]
	ldr r2, _0804A924 @ =0xFFFE7FFF
	bl _0804CE8E
	.align 2, 0
_0804A920: .4byte 0x00002164
_0804A924: .4byte 0xFFFE7FFF
_0804A928:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A944 @ =0x00002166
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A944: .4byte 0x00002166
_0804A948:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A964 @ =0x00002166
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A964: .4byte 0x00002166
_0804A968:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A984 @ =0x00002166
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A984: .4byte 0x00002166
_0804A988:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A9A4 @ =0x00002166
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804A9A8 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804A9A4: .4byte 0x00002166
_0804A9A8: .4byte 0xFFFFFE7F
_0804A9AC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A9C8 @ =0x00002167
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A9C8: .4byte 0x00002167
_0804A9CC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804A9E8 @ =0x00002167
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804A9E8: .4byte 0x00002167
_0804A9EC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AA08 @ =0x00002167
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AA08: .4byte 0x00002167
_0804AA0C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r5, #1
	adds r1, r6, #0
	ands r1, r5
	ldr r2, _0804AA3C @ =0x00002167
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	ldr r0, _0804AA40 @ =0x00002168
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	bl _0804D106
	.align 2, 0
_0804AA3C: .4byte 0x00002167
_0804AA40: .4byte 0x00002168
_0804AA44:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AA60 @ =0x00002168
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AA60: .4byte 0x00002168
_0804AA64:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AA80 @ =0x00002168
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AA80: .4byte 0x00002168
_0804AA84:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AAA0 @ =0x00002168
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AAA0: .4byte 0x00002168
_0804AAA4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AAC0 @ =0x00002168
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804AAC4 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804AAC0: .4byte 0x00002168
_0804AAC4: .4byte 0xFFFFFE7F
_0804AAC8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AAE8 @ =0x00002197
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804AAE8: .4byte 0x00002197
_0804AAEC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AB08 @ =0x00002169
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AB08: .4byte 0x00002169
_0804AB0C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AB28 @ =0x00002169
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AB28: .4byte 0x00002169
_0804AB2C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AB48 @ =0x00002169
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AB48: .4byte 0x00002169
_0804AB4C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804AB68 @ =0x00002168
	adds r3, r3, r2
	movs r1, #3
	ands r1, r6
	lsls r1, r1, #0xf
	ldr r0, [r3]
	ldr r2, _0804AB6C @ =0xFFFE7FFF
	bl _0804CE8E
	.align 2, 0
_0804AB68: .4byte 0x00002168
_0804AB6C: .4byte 0xFFFE7FFF
_0804AB70:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AB8C @ =0x0000216A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AB8C: .4byte 0x0000216A
_0804AB90:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804ABAC @ =0x0000216A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804ABAC: .4byte 0x0000216A
_0804ABB0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804ABCC @ =0x0000216A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804ABCC: .4byte 0x0000216A
_0804ABD0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804ABEC @ =0x0000216A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804ABF0 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804ABEC: .4byte 0x0000216A
_0804ABF0: .4byte 0xFFFFFE7F
_0804ABF4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AC10 @ =0x0000216B
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AC10: .4byte 0x0000216B
_0804AC14:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AC30 @ =0x0000216B
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AC30: .4byte 0x0000216B
_0804AC34:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AC50 @ =0x0000216B
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AC50: .4byte 0x0000216B
_0804AC54:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r5, #1
	adds r1, r6, #0
	ands r1, r5
	ldr r2, _0804AC84 @ =0x0000216B
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	ldr r0, _0804AC88 @ =0x0000216C
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	bl _0804D106
	.align 2, 0
_0804AC84: .4byte 0x0000216B
_0804AC88: .4byte 0x0000216C
_0804AC8C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804ACA8 @ =0x0000216C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804ACA8: .4byte 0x0000216C
_0804ACAC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804ACC8 @ =0x0000216C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804ACC8: .4byte 0x0000216C
_0804ACCC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804ACE8 @ =0x0000216C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804ACE8: .4byte 0x0000216C
_0804ACEC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AD08 @ =0x0000216C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804AD0C @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804AD08: .4byte 0x0000216C
_0804AD0C: .4byte 0xFFFFFE7F
_0804AD10:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AD2C @ =0x0000216D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AD2C: .4byte 0x0000216D
_0804AD30:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AD4C @ =0x0000216D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AD4C: .4byte 0x0000216D
_0804AD50:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AD6C @ =0x0000216D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AD6C: .4byte 0x0000216D
_0804AD70:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804AD8C @ =0x0000216C
	adds r3, r3, r2
	movs r1, #3
	ands r1, r6
	lsls r1, r1, #0xf
	ldr r0, [r3]
	ldr r2, _0804AD90 @ =0xFFFE7FFF
	bl _0804CE8E
	.align 2, 0
_0804AD8C: .4byte 0x0000216C
_0804AD90: .4byte 0xFFFE7FFF
_0804AD94:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804ADB0 @ =0x0000216E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804ADB0: .4byte 0x0000216E
_0804ADB4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804ADD0 @ =0x0000216E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804ADD0: .4byte 0x0000216E
_0804ADD4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r0, #0xf
	adds r1, r6, #0
	ands r1, r0
	ldr r2, _0804ADFC @ =0x0000216F
	adds r4, r3, r2
	lsls r1, r1, #4
	ldrb r2, [r4]
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #4
	movs r0, #7
	ldr r2, _0804AE00 @ =0x00002170
	bl _0804D0FE
	.align 2, 0
_0804ADFC: .4byte 0x0000216F
_0804AE00: .4byte 0x00002170
_0804AE04:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AE20 @ =0x00002170
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AE20: .4byte 0x00002170
_0804AE24:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AE40 @ =0x00002170
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AE40: .4byte 0x00002170
_0804AE44:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AE60 @ =0x00002170
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804AE64 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804AE60: .4byte 0x00002170
_0804AE64: .4byte 0xFFFFFE7F
_0804AE68:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AE84 @ =0x00002171
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AE84: .4byte 0x00002171
_0804AE88:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AEA4 @ =0x00002171
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AEA4: .4byte 0x00002171
_0804AEA8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AEC4 @ =0x00002171
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AEC4: .4byte 0x00002171
_0804AEC8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AEE0 @ =0x00002171
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804AEE0: .4byte 0x00002171
_0804AEE4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AF04 @ =0x00002172
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804AF04: .4byte 0x00002172
_0804AF08:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AF24 @ =0x00002172
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AF24: .4byte 0x00002172
_0804AF28:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AF44 @ =0x00002172
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AF44: .4byte 0x00002172
_0804AF48:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AF60 @ =0x00002172
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804AF60: .4byte 0x00002172
_0804AF64:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AF84 @ =0x00002173
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804AF84: .4byte 0x00002173
_0804AF88:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AFA4 @ =0x00002173
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AFA4: .4byte 0x00002173
_0804AFA8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AFC4 @ =0x00002173
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804AFC4: .4byte 0x00002173
_0804AFC8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804AFE0 @ =0x00002173
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804AFE0: .4byte 0x00002173
_0804AFE4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B004 @ =0x00002174
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B004: .4byte 0x00002174
_0804B008:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B024 @ =0x00002174
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B024: .4byte 0x00002174
_0804B028:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B044 @ =0x00002174
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B044: .4byte 0x00002174
_0804B048:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B060 @ =0x00002174
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804B060: .4byte 0x00002174
_0804B064:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B084 @ =0x00002175
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B084: .4byte 0x00002175
_0804B088:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B0A4 @ =0x00002175
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B0A4: .4byte 0x00002175
_0804B0A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B0C4 @ =0x00002175
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B0C4: .4byte 0x00002175
_0804B0C8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B0E4 @ =0x00002175
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B0E4: .4byte 0x00002175
_0804B0E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B0F8 @ =0x00002175
	bl _0804DA1A
	.align 2, 0
_0804B0F8: .4byte 0x00002175
_0804B0FC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B114 @ =0x00002175
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804B114: .4byte 0x00002175
_0804B118:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B138 @ =0x00002176
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B138: .4byte 0x00002176
_0804B13C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B158 @ =0x00002176
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B158: .4byte 0x00002176
_0804B15C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B178 @ =0x00002176
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B178: .4byte 0x00002176
_0804B17C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B198 @ =0x00002176
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B198: .4byte 0x00002176
_0804B19C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B1B8 @ =0x00002176
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804B1BC @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804B1B8: .4byte 0x00002176
_0804B1BC: .4byte 0xFFFFFE7F
_0804B1C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B1DC @ =0x00002177
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B1DC: .4byte 0x00002177
_0804B1E0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B1FC @ =0x00002177
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B1FC: .4byte 0x00002177
_0804B200:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B21C @ =0x00002177
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B21C: .4byte 0x00002177
_0804B220:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B238 @ =0x00002177
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804B238: .4byte 0x00002177
_0804B23C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B25C @ =0x00002178
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B25C: .4byte 0x00002178
_0804B260:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B27C @ =0x00002178
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B27C: .4byte 0x00002178
_0804B280:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B29C @ =0x00002178
	adds r1, r1, r2
	movs r0, #7
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x39
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B29C: .4byte 0x00002178
_0804B2A0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B2B8 @ =0x00002178
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804B2B8: .4byte 0x00002178
_0804B2BC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B2DC @ =0x00002179
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B2DC: .4byte 0x00002179
_0804B2E0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B2FC @ =0x00002179
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B2FC: .4byte 0x00002179
_0804B300:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B31C @ =0x00002179
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B31C: .4byte 0x00002179
_0804B320:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804B33C @ =0x00002178
	adds r3, r3, r2
	movs r1, #0xf
	ands r1, r6
	lsls r1, r1, #0xe
	ldr r0, [r3]
	ldr r2, _0804B340 @ =0xFFFC3FFF
	bl _0804CE8E
	.align 2, 0
_0804B33C: .4byte 0x00002178
_0804B340: .4byte 0xFFFC3FFF
_0804B344:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B360 @ =0x0000217A
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B360: .4byte 0x0000217A
_0804B364:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B380 @ =0x0000217A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B380: .4byte 0x0000217A
_0804B384:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B3A0 @ =0x0000217A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B3A0: .4byte 0x0000217A
_0804B3A4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B3BC @ =0x0000217A
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804B3BC: .4byte 0x0000217A
_0804B3C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B3E0 @ =0x0000217B
	adds r1, r1, r2
	movs r0, #0x1f
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #0x20
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B3E0: .4byte 0x0000217B
_0804B3E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B400 @ =0x0000217B
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B400: .4byte 0x0000217B
_0804B404:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r5, #1
	adds r1, r6, #0
	ands r1, r5
	ldr r2, _0804B434 @ =0x0000217B
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	ldr r0, _0804B438 @ =0x0000217C
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	bl _0804D106
	.align 2, 0
_0804B434: .4byte 0x0000217B
_0804B438: .4byte 0x0000217C
_0804B43C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B458 @ =0x0000217C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B458: .4byte 0x0000217C
_0804B45C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B478 @ =0x0000217C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B478: .4byte 0x0000217C
_0804B47C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B498 @ =0x0000217C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B498: .4byte 0x0000217C
_0804B49C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B4B4 @ =0x0000217C
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804B4B4: .4byte 0x0000217C
_0804B4B8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B4D8 @ =0x0000217D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B4D8: .4byte 0x0000217D
_0804B4DC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B4F8 @ =0x0000217D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B4F8: .4byte 0x0000217D
_0804B4FC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B518 @ =0x0000217D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B518: .4byte 0x0000217D
_0804B51C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B534 @ =0x0000217D
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804B534: .4byte 0x0000217D
_0804B538:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B558 @ =0x0000217E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B558: .4byte 0x0000217E
_0804B55C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B578 @ =0x0000217E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B578: .4byte 0x0000217E
_0804B57C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B598 @ =0x0000217E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B598: .4byte 0x0000217E
_0804B59C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B5B4 @ =0x0000217E
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804B5B4: .4byte 0x0000217E
_0804B5B8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B5D8 @ =0x0000217F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B5D8: .4byte 0x0000217F
_0804B5DC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B5F8 @ =0x0000217F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B5F8: .4byte 0x0000217F
_0804B5FC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B618 @ =0x0000217F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B618: .4byte 0x0000217F
_0804B61C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B634 @ =0x0000217F
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804B634: .4byte 0x0000217F
_0804B638:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	movs r2, #0x86
	lsls r2, r2, #6
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
_0804B658:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	movs r2, #0x86
	lsls r2, r2, #6
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
_0804B676:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	movs r2, #0x86
	lsls r2, r2, #6
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
_0804B694:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	movs r2, #0x86
	lsls r2, r2, #6
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
_0804B6AC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B6CC @ =0x00002181
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B6CC: .4byte 0x00002181
_0804B6D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B6EC @ =0x00002181
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B6EC: .4byte 0x00002181
_0804B6F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B70C @ =0x00002181
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B70C: .4byte 0x00002181
_0804B710:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B728 @ =0x00002181
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804B728: .4byte 0x00002181
_0804B72C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B74C @ =0x00002182
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B74C: .4byte 0x00002182
_0804B750:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B76C @ =0x00002182
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B76C: .4byte 0x00002182
_0804B770:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B78C @ =0x00002182
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B78C: .4byte 0x00002182
_0804B790:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B7AC @ =0x00002182
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B7AC: .4byte 0x00002182
_0804B7B0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B7CC @ =0x00002182
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804B7D0 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804B7CC: .4byte 0x00002182
_0804B7D0: .4byte 0xFFFFFE7F
_0804B7D4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B7F0 @ =0x00002183
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B7F0: .4byte 0x00002183
_0804B7F4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B810 @ =0x00002183
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B810: .4byte 0x00002183
_0804B814:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B830 @ =0x00002183
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B830: .4byte 0x00002183
_0804B834:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r5, #1
	adds r1, r6, #0
	ands r1, r5
	ldr r2, _0804B864 @ =0x00002183
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	ldr r0, _0804B868 @ =0x00002184
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	bl _0804D106
	.align 2, 0
_0804B864: .4byte 0x00002183
_0804B868: .4byte 0x00002184
_0804B86C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B888 @ =0x00002184
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #3
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B888: .4byte 0x00002184
_0804B88C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B8A8 @ =0x00002184
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B8A8: .4byte 0x00002184
_0804B8AC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B8C8 @ =0x00002184
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B8C8: .4byte 0x00002184
_0804B8CC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B8E4 @ =0x00002184
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804B8E4: .4byte 0x00002184
_0804B8E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B908 @ =0x00002185
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B908: .4byte 0x00002185
_0804B90C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B928 @ =0x00002185
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B928: .4byte 0x00002185
_0804B92C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B948 @ =0x00002185
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B948: .4byte 0x00002185
_0804B94C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B964 @ =0x00002185
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804B964: .4byte 0x00002185
_0804B968:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B988 @ =0x00002186
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804B988: .4byte 0x00002186
_0804B98C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B9A8 @ =0x00002186
	adds r1, r1, r2
	movs r0, #7
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0x1d
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B9A8: .4byte 0x00002186
_0804B9AC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B9C8 @ =0x00002186
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804B9C8: .4byte 0x00002186
_0804B9CC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804B9E8 @ =0x00002186
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804B9EC @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804B9E8: .4byte 0x00002186
_0804B9EC: .4byte 0xFFFFFE7F
_0804B9F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BA0C @ =0x00002187
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BA0C: .4byte 0x00002187
_0804BA10:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BA2C @ =0x00002187
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BA2C: .4byte 0x00002187
_0804BA30:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BA4C @ =0x00002187
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BA4C: .4byte 0x00002187
_0804BA50:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r5, #1
	adds r1, r6, #0
	ands r1, r5
	ldr r2, _0804BA80 @ =0x00002187
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	ldr r0, _0804BA84 @ =0x00002188
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	bl _0804D106
	.align 2, 0
_0804BA80: .4byte 0x00002187
_0804BA84: .4byte 0x00002188
_0804BA88:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BAA4 @ =0x00002188
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BAA4: .4byte 0x00002188
_0804BAA8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BAC4 @ =0x00002188
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BAC4: .4byte 0x00002188
_0804BAC8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BAE4 @ =0x00002188
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BAE4: .4byte 0x00002188
_0804BAE8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BB04 @ =0x00002188
	adds r1, r1, r2
	movs r0, #7
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804BB08 @ =0xFFFFFC7F
	bl _0804D2D6
	.align 2, 0
_0804BB04: .4byte 0x00002188
_0804BB08: .4byte 0xFFFFFC7F
_0804BB0C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BB28 @ =0x00002189
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BB28: .4byte 0x00002189
_0804BB2C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BB48 @ =0x00002189
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BB48: .4byte 0x00002189
_0804BB4C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804BB68 @ =0x00002188
	adds r3, r3, r2
	movs r1, #0xf
	ands r1, r6
	lsls r1, r1, #0xe
	ldr r0, [r3]
	ldr r2, _0804BB6C @ =0xFFFC3FFF
	bl _0804CE8E
	.align 2, 0
_0804BB68: .4byte 0x00002188
_0804BB6C: .4byte 0xFFFC3FFF
_0804BB70:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BB8C @ =0x0000218A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BB8C: .4byte 0x0000218A
_0804BB90:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BBAC @ =0x0000218A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BBAC: .4byte 0x0000218A
_0804BBB0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BBC8 @ =0x0000218A
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804BBC8: .4byte 0x0000218A
_0804BBCC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BBEC @ =0x0000218B
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804BBEC: .4byte 0x0000218B
_0804BBF0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BC0C @ =0x0000218B
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BC0C: .4byte 0x0000218B
_0804BC10:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r1, #7
	ands r1, r6
	ldr r2, _0804BC40 @ =0x0000218B
	adds r4, r3, r2
	lsls r1, r1, #5
	ldrb r2, [r4]
	movs r0, #0x1f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #3
	movs r0, #1
	ldr r2, _0804BC44 @ =0x0000218C
	adds r3, r3, r2
	ands r1, r0
	ldrb r2, [r3]
	subs r0, #3
	bl _0804D106
	.align 2, 0
_0804BC40: .4byte 0x0000218B
_0804BC44: .4byte 0x0000218C
_0804BC48:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BC64 @ =0x0000218C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BC64: .4byte 0x0000218C
_0804BC68:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BC84 @ =0x0000218C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BC84: .4byte 0x0000218C
_0804BC88:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BCA4 @ =0x0000218C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BCA4: .4byte 0x0000218C
_0804BCA8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BCC4 @ =0x0000218C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804BCC8 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804BCC4: .4byte 0x0000218C
_0804BCC8: .4byte 0xFFFFFE7F
_0804BCCC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BCE8 @ =0x0000218D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BCE8: .4byte 0x0000218D
_0804BCEC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BD08 @ =0x0000218D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BD08: .4byte 0x0000218D
_0804BD0C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804BD28 @ =0x0000218C
	adds r3, r3, r2
	movs r1, #0xf
	ands r1, r6
	lsls r1, r1, #0xd
	ldr r0, [r3]
	ldr r2, _0804BD2C @ =0xFFFE1FFF
	bl _0804CE8E
	.align 2, 0
_0804BD28: .4byte 0x0000218C
_0804BD2C: .4byte 0xFFFE1FFF
_0804BD30:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BD4C @ =0x0000218E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BD4C: .4byte 0x0000218E
_0804BD50:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BD6C @ =0x0000218E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BD6C: .4byte 0x0000218E
_0804BD70:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BD8C @ =0x0000218E
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BD8C: .4byte 0x0000218E
_0804BD90:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BDA8 @ =0x0000218E
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804BDA8: .4byte 0x0000218E
_0804BDAC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BDCC @ =0x0000218F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804BDCC: .4byte 0x0000218F
_0804BDD0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BDEC @ =0x0000218F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BDEC: .4byte 0x0000218F
_0804BDF0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BE0C @ =0x0000218F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BE0C: .4byte 0x0000218F
_0804BE10:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BE28 @ =0x0000218F
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804BE28: .4byte 0x0000218F
_0804BE2C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BE4C @ =0x00002190
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804BE4C: .4byte 0x00002190
_0804BE50:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BE6C @ =0x00002190
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BE6C: .4byte 0x00002190
_0804BE70:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BE8C @ =0x00002190
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BE8C: .4byte 0x00002190
_0804BE90:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BEA8 @ =0x00002190
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804BEA8: .4byte 0x00002190
_0804BEAC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BECC @ =0x00002191
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804BECC: .4byte 0x00002191
_0804BED0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BEEC @ =0x00002191
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BEEC: .4byte 0x00002191
_0804BEF0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BF0C @ =0x00002191
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BF0C: .4byte 0x00002191
_0804BF10:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BF28 @ =0x00002191
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804BF28: .4byte 0x00002191
_0804BF2C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BF4C @ =0x00002192
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804BF4C: .4byte 0x00002192
_0804BF50:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BF6C @ =0x00002192
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BF6C: .4byte 0x00002192
_0804BF70:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BF8C @ =0x00002192
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BF8C: .4byte 0x00002192
_0804BF90:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BFA8 @ =0x00002192
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804BFA8: .4byte 0x00002192
_0804BFAC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BFCC @ =0x00002193
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804BFCC: .4byte 0x00002193
_0804BFD0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804BFEC @ =0x00002193
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804BFEC: .4byte 0x00002193
_0804BFF0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C00C @ =0x00002193
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C00C: .4byte 0x00002193
_0804C010:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C028 @ =0x00002193
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804C028: .4byte 0x00002193
_0804C02C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C04C @ =0x00002194
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C04C: .4byte 0x00002194
_0804C050:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C06C @ =0x00002194
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C06C: .4byte 0x00002194
_0804C070:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C08C @ =0x00002194
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C08C: .4byte 0x00002194
_0804C090:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C0A8 @ =0x00002194
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804C0A8: .4byte 0x00002194
_0804C0AC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C0CC @ =0x00002195
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C0CC: .4byte 0x00002195
_0804C0D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C0E8 @ =0x00002195
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804C0E8: .4byte 0x00002195
_0804C0EC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C10C @ =0x00002196
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C10C: .4byte 0x00002196
_0804C110:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C12C @ =0x00002196
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C12C: .4byte 0x00002196
_0804C130:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C14C @ =0x00002196
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C14C: .4byte 0x00002196
_0804C150:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C168 @ =0x00002196
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804C168: .4byte 0x00002196
_0804C16C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C188 @ =0x00002197
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C188: .4byte 0x00002197
_0804C18C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C1A8 @ =0x00002197
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C1A8: .4byte 0x00002197
_0804C1AC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C1C4 @ =0x00002197
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804C1C4: .4byte 0x00002197
_0804C1C8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C1E8 @ =0x00002198
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C1E8: .4byte 0x00002198
_0804C1EC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C208 @ =0x00002198
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C208: .4byte 0x00002198
_0804C20C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C228 @ =0x00002198
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C228: .4byte 0x00002198
_0804C22C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C244 @ =0x00002198
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804C244: .4byte 0x00002198
_0804C248:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C268 @ =0x00002199
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C268: .4byte 0x00002199
_0804C26C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C288 @ =0x00002199
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C288: .4byte 0x00002199
_0804C28C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C2A8 @ =0x00002199
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C2A8: .4byte 0x00002199
_0804C2AC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C2C8 @ =0x00002199
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C2C8: .4byte 0x00002199
_0804C2CC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C2E8 @ =0x00002199
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C2E8: .4byte 0x00002199
_0804C2EC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C2FC @ =0x00002199
	bl _0804DA1A
	.align 2, 0
_0804C2FC: .4byte 0x00002199
_0804C300:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804C31C @ =0x00002198
	adds r3, r3, r2
	movs r1, #3
	ands r1, r6
	lsls r1, r1, #0xf
	ldr r0, [r3]
	ldr r2, _0804C320 @ =0xFFFE7FFF
	bl _0804CE8E
	.align 2, 0
_0804C31C: .4byte 0x00002198
_0804C320: .4byte 0xFFFE7FFF
_0804C324:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C340 @ =0x0000219A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C340: .4byte 0x0000219A
_0804C344:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C360 @ =0x0000219A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C360: .4byte 0x0000219A
_0804C364:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C380 @ =0x0000219A
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804C384 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804C380: .4byte 0x0000219A
_0804C384: .4byte 0xFFFFFE7F
_0804C388:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C3A4 @ =0x0000219B
	adds r1, r1, r2
	movs r0, #7
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #0xf
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C3A4: .4byte 0x0000219B
_0804C3A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C3C4 @ =0x0000219B
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C3C4: .4byte 0x0000219B
_0804C3C8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C3D8 @ =0x0000219B
	bl _0804DA1A
	.align 2, 0
_0804C3D8: .4byte 0x0000219B
_0804C3DC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r1, #1
	ands r1, r6
	ldr r2, _0804C40C @ =0x0000219B
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	movs r0, #3
	ldr r2, _0804C410 @ =0x0000219C
	adds r3, r3, r2
	ands r1, r0
	ldrb r2, [r3]
	subs r0, #7
	bl _0804D106
	.align 2, 0
_0804C40C: .4byte 0x0000219B
_0804C410: .4byte 0x0000219C
_0804C414:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C430 @ =0x0000219C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C430: .4byte 0x0000219C
_0804C434:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C450 @ =0x0000219C
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C450: .4byte 0x0000219C
_0804C454:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C474 @ =0x0000219D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C474: .4byte 0x0000219D
_0804C478:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C494 @ =0x0000219D
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C494: .4byte 0x0000219D
_0804C498:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C4B4 @ =0x0000219D
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C4B4: .4byte 0x0000219D
_0804C4B8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C4D0 @ =0x0000219D
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804C4D0: .4byte 0x0000219D
_0804C4D4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C4F4 @ =0x0000219E
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C4F4: .4byte 0x0000219E
_0804C4F8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C514 @ =0x0000219E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C514: .4byte 0x0000219E
_0804C518:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C534 @ =0x0000219E
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C534: .4byte 0x0000219E
_0804C538:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C554 @ =0x0000219E
	adds r1, r1, r2
	movs r0, #7
	ands r6, r0
	lsls r3, r6, #6
	ldrh r2, [r1]
	ldr r0, _0804C558 @ =0xFFFFFE3F
	bl _0804D2D6
	.align 2, 0
_0804C554: .4byte 0x0000219E
_0804C558: .4byte 0xFFFFFE3F
_0804C55C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C578 @ =0x0000219F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C578: .4byte 0x0000219F
_0804C57C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C598 @ =0x0000219F
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C598: .4byte 0x0000219F
_0804C59C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C5B8 @ =0x0000219F
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C5B8: .4byte 0x0000219F
_0804C5BC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C5D4 @ =0x0000219F
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804C5D4: .4byte 0x0000219F
_0804C5D8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C5F8 @ =0x000021A0
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C5F8: .4byte 0x000021A0
_0804C5FC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C618 @ =0x000021A0
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C618: .4byte 0x000021A0
_0804C61C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C638 @ =0x000021A0
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C638: .4byte 0x000021A0
_0804C63C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C658 @ =0x000021A0
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C658: .4byte 0x000021A0
_0804C65C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C678 @ =0x000021A0
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C678: .4byte 0x000021A0
_0804C67C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C698 @ =0x000021CA
	adds r1, r1, r2
	movs r0, #7
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804C69C @ =0xFFFFFC7F
	bl _0804D2D6
	.align 2, 0
_0804C698: .4byte 0x000021CA
_0804C69C: .4byte 0xFFFFFC7F
_0804C6A0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C6C0 @ =0x000021A1
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C6C0: .4byte 0x000021A1
_0804C6C4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C6E0 @ =0x000021A1
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C6E0: .4byte 0x000021A1
_0804C6E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C6FC @ =0x000021A1
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804C6FC: .4byte 0x000021A1
_0804C700:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C720 @ =0x000021A2
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C720: .4byte 0x000021A2
_0804C724:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C740 @ =0x000021A2
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C740: .4byte 0x000021A2
_0804C744:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C760 @ =0x000021A2
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C760: .4byte 0x000021A2
_0804C764:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C77C @ =0x000021A2
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	bl _0804DA28
	.align 2, 0
_0804C77C: .4byte 0x000021A2
_0804C780:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C7A0 @ =0x000021A3
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C7A0: .4byte 0x000021A3
_0804C7A4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C7C0 @ =0x000021A3
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C7C0: .4byte 0x000021A3
_0804C7C4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C7E0 @ =0x000021A3
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C7E0: .4byte 0x000021A3
_0804C7E4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C7F4 @ =0x000021A3
	bl _0804DA1A
	.align 2, 0
_0804C7F4: .4byte 0x000021A3
_0804C7F8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r5, #1
	adds r1, r6, #0
	ands r1, r5
	ldr r2, _0804C828 @ =0x000021A3
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	ldr r0, _0804C82C @ =0x000021A4
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	bl _0804D106
	.align 2, 0
_0804C828: .4byte 0x000021A3
_0804C82C: .4byte 0x000021A4
_0804C830:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C84C @ =0x000021A4
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #3
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C84C: .4byte 0x000021A4
_0804C850:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C86C @ =0x000021A4
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C86C: .4byte 0x000021A4
_0804C870:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C88C @ =0x000021A4
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C88C: .4byte 0x000021A4
_0804C890:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C8AC @ =0x000021A4
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C8AC: .4byte 0x000021A4
_0804C8B0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C8C8 @ =0x000021A4
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804C8C8: .4byte 0x000021A4
_0804C8CC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C8EC @ =0x000021A5
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804C8EC: .4byte 0x000021A5
_0804C8F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C90C @ =0x000021A5
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C90C: .4byte 0x000021A5
_0804C910:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C92C @ =0x000021A5
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C92C: .4byte 0x000021A5
_0804C930:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C94C @ =0x000021A5
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C94C: .4byte 0x000021A5
_0804C950:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804C968 @ =0x000021A4
	adds r3, r3, r2
	movs r1, #7
	ands r1, r6
	lsls r1, r1, #0xf
	ldr r0, [r3]
	ldr r2, _0804C96C @ =0xFFFC7FFF
	b _0804CE8E
	.align 2, 0
_0804C968: .4byte 0x000021A4
_0804C96C: .4byte 0xFFFC7FFF
_0804C970:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C98C @ =0x000021A6
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C98C: .4byte 0x000021A6
_0804C990:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C9AC @ =0x000021A6
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C9AC: .4byte 0x000021A6
_0804C9B0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C9CC @ =0x000021A6
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C9CC: .4byte 0x000021A6
_0804C9D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804C9EC @ =0x000021A6
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804C9EC: .4byte 0x000021A6
_0804C9F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CA00 @ =0x000021A6
	bl _0804DA1A
	.align 2, 0
_0804CA00: .4byte 0x000021A6
_0804CA04:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CA20 @ =0x000021A6
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804CA24 @ =0xFFFFFE7F
	bl _0804D2D6
	.align 2, 0
_0804CA20: .4byte 0x000021A6
_0804CA24: .4byte 0xFFFFFE7F
_0804CA28:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CA44 @ =0x000021A7
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CA44: .4byte 0x000021A7
_0804CA48:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CA64 @ =0x000021A7
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CA64: .4byte 0x000021A7
_0804CA68:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CA84 @ =0x000021A7
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x61
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CA84: .4byte 0x000021A7
_0804CA88:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r5, #1
	adds r1, r6, #0
	ands r1, r5
	ldr r2, _0804CAB8 @ =0x000021A7
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	ldr r0, _0804CABC @ =0x000021A8
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #2
	rsbs r0, r0, #0
	b _0804D106
	.align 2, 0
_0804CAB8: .4byte 0x000021A7
_0804CABC: .4byte 0x000021A8
_0804CAC0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CADC @ =0x000021A8
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CADC: .4byte 0x000021A8
_0804CAE0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CAFC @ =0x000021A8
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x19
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CAFC: .4byte 0x000021A8
_0804CB00:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CB18 @ =0x000021A8
	adds r1, r1, r2
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x1f
	bl _0804DA28
	.align 2, 0
_0804CB18: .4byte 0x000021A8
_0804CB1C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CB3C @ =0x000021A9
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804CB3C: .4byte 0x000021A9
_0804CB40:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CB5C @ =0x000021A9
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CB5C: .4byte 0x000021A9
_0804CB60:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CB7C @ =0x000021A9
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CB7C: .4byte 0x000021A9
_0804CB80:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CB9C @ =0x000021A9
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CB9C: .4byte 0x000021A9
_0804CBA0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CBB0 @ =0x000021A9
	bl _0804DA1A
	.align 2, 0
_0804CBB0: .4byte 0x000021A9
_0804CBB4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CBCC @ =0x000021A9
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804CBCC: .4byte 0x000021A9
_0804CBD0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CBF0 @ =0x000021AA
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804CBF0: .4byte 0x000021AA
_0804CBF4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CC10 @ =0x000021AA
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #3
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CC10: .4byte 0x000021AA
_0804CC14:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CC30 @ =0x000021AA
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CC30: .4byte 0x000021AA
_0804CC34:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CC50 @ =0x000021AA
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CC50: .4byte 0x000021AA
_0804CC54:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CC70 @ =0x000021AA
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CC70: .4byte 0x000021AA
_0804CC74:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CC90 @ =0x000021AA
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CC90: .4byte 0x000021AA
_0804CC94:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CCA4 @ =0x000021AA
	bl _0804DA1A
	.align 2, 0
_0804CCA4: .4byte 0x000021AA
_0804CCA8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CCC0 @ =0x000021AA
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804CCC0: .4byte 0x000021AA
_0804CCC4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CCE4 @ =0x000021AB
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804CCE4: .4byte 0x000021AB
_0804CCE8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CD04 @ =0x000021AB
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #3
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CD04: .4byte 0x000021AB
_0804CD08:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CD24 @ =0x000021AB
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CD24: .4byte 0x000021AB
_0804CD28:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CD44 @ =0x000021AB
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CD44: .4byte 0x000021AB
_0804CD48:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CD60 @ =0x000021B4
	adds r1, r1, r2
	movs r0, #0xff
	ands r6, r0
	lsls r3, r6, #6
	ldrh r2, [r1]
	ldr r0, _0804CD64 @ =0xFFFFC03F
	b _0804D2D6
	.align 2, 0
_0804CD60: .4byte 0x000021B4
_0804CD64: .4byte 0xFFFFC03F
_0804CD68:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804CD74 @ =0x000021B4
	b _0804CE82
	.align 2, 0
_0804CD74: .4byte 0x000021B4
_0804CD78:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CD90 @ =0x000021B6
	adds r1, r1, r2
	movs r0, #0xff
	ands r6, r0
	lsls r3, r6, #6
	ldrh r2, [r1]
	ldr r0, _0804CD94 @ =0xFFFFC03F
	b _0804D2D6
	.align 2, 0
_0804CD90: .4byte 0x000021B6
_0804CD94: .4byte 0xFFFFC03F
_0804CD98:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r1, #3
	ands r1, r6
	ldr r2, _0804CDC8 @ =0x000021B7
	adds r4, r3, r2
	lsls r1, r1, #6
	ldrb r2, [r4]
	movs r5, #0x3f
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #2
	ldr r0, _0804CDCC @ =0x000021B8
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #0x40
	rsbs r0, r0, #0
	b _0804D106
	.align 2, 0
_0804CDC8: .4byte 0x000021B7
_0804CDCC: .4byte 0x000021B8
_0804CDD0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CDE8 @ =0x000021B8
	adds r1, r1, r2
	movs r0, #0xff
	ands r6, r0
	lsls r3, r6, #6
	ldrh r2, [r1]
	ldr r0, _0804CDEC @ =0xFFFFC03F
	b _0804D2D6
	.align 2, 0
_0804CDE8: .4byte 0x000021B8
_0804CDEC: .4byte 0xFFFFC03F
_0804CDF0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804CDFC @ =0x000021B8
	b _0804CE82
	.align 2, 0
_0804CDFC: .4byte 0x000021B8
_0804CE00:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CE18 @ =0x000021BA
	adds r1, r1, r2
	movs r0, #0xff
	ands r6, r0
	lsls r3, r6, #6
	ldrh r2, [r1]
	ldr r0, _0804CE1C @ =0xFFFFC03F
	b _0804D2D6
	.align 2, 0
_0804CE18: .4byte 0x000021BA
_0804CE1C: .4byte 0xFFFFC03F
_0804CE20:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r1, #3
	ands r1, r6
	ldr r2, _0804CE50 @ =0x000021BB
	adds r4, r3, r2
	lsls r1, r1, #6
	ldrb r2, [r4]
	movs r5, #0x3f
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #2
	ldr r0, _0804CE54 @ =0x000021BC
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #0x40
	rsbs r0, r0, #0
	b _0804D106
	.align 2, 0
_0804CE50: .4byte 0x000021BB
_0804CE54: .4byte 0x000021BC
_0804CE58:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CE70 @ =0x000021BC
	adds r1, r1, r2
	movs r0, #0xff
	ands r6, r0
	lsls r3, r6, #6
	ldrh r2, [r1]
	ldr r0, _0804CE74 @ =0xFFFFC03F
	b _0804D2D6
	.align 2, 0
_0804CE70: .4byte 0x000021BC
_0804CE74: .4byte 0xFFFFC03F
_0804CE78:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	ldr r2, _0804CE98 @ =0x000021BC
_0804CE82:
	adds r3, r3, r2
	movs r1, #0xff
	ands r1, r6
	lsls r1, r1, #0xe
	ldr r0, [r3]
	ldr r2, _0804CE9C @ =0xFFC03FFF
_0804CE8E:
	ands r0, r2
	orrs r0, r1
	str r0, [r3]
	bl _0804DA2E
	.align 2, 0
_0804CE98: .4byte 0x000021BC
_0804CE9C: .4byte 0xFFC03FFF
_0804CEA0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CEB8 @ =0x000021BE
	adds r1, r1, r2
	movs r0, #0xff
	ands r6, r0
	lsls r3, r6, #6
	ldrh r2, [r1]
	ldr r0, _0804CEBC @ =0xFFFFC03F
	b _0804D2D6
	.align 2, 0
_0804CEB8: .4byte 0x000021BE
_0804CEBC: .4byte 0xFFFFC03F
_0804CEC0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r1, #3
	ands r1, r6
	ldr r2, _0804CEF0 @ =0x000021BF
	adds r4, r3, r2
	lsls r1, r1, #6
	ldrb r2, [r4]
	movs r5, #0x3f
	adds r0, r5, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #2
	movs r0, #0x87
	lsls r0, r0, #6
	adds r3, r3, r0
	ands r1, r5
	ldrb r2, [r3]
	movs r0, #0x40
	rsbs r0, r0, #0
	b _0804D106
	.align 2, 0
_0804CEF0: .4byte 0x000021BF
_0804CEF4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	movs r2, #0x87
	lsls r2, r2, #6
	adds r1, r1, r2
	movs r0, #7
	ands r6, r0
	lsls r3, r6, #6
	ldrh r2, [r1]
	ldr r0, _0804CF10 @ =0xFFFFFE3F
	b _0804D2D6
	.align 2, 0
_0804CF10: .4byte 0xFFFFFE3F
_0804CF14:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CF30 @ =0x000021C1
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #7
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CF30: .4byte 0x000021C1
_0804CF34:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CF50 @ =0x000021C1
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CF50: .4byte 0x000021C1
_0804CF54:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CF70 @ =0x000021C1
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CF70: .4byte 0x000021C1
_0804CF74:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CF90 @ =0x000021C1
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804CF90: .4byte 0x000021C1
_0804CF94:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CFA4 @ =0x000021C1
	bl _0804DA1A
	.align 2, 0
_0804CFA4: .4byte 0x000021C1
_0804CFA8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CFC0 @ =0x000021C1
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804CFC0: .4byte 0x000021C1
_0804CFC4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804CFE4 @ =0x000021C2
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804CFE4: .4byte 0x000021C2
_0804CFE8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D004 @ =0x000021C2
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #3
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D004: .4byte 0x000021C2
_0804D008:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D024 @ =0x000021C2
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D024: .4byte 0x000021C2
_0804D028:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D044 @ =0x000021C2
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D044: .4byte 0x000021C2
_0804D048:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D064 @ =0x000021C2
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D064: .4byte 0x000021C2
_0804D068:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D084 @ =0x000021C2
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D084: .4byte 0x000021C2
_0804D088:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D098 @ =0x000021C2
	bl _0804DA1A
	.align 2, 0
_0804D098: .4byte 0x000021C2
_0804D09C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D0B4 @ =0x000021C2
	adds r1, r1, r2
	movs r0, #0xf
	ands r6, r0
	lsls r3, r6, #7
	ldrh r2, [r1]
	ldr r0, _0804D0B8 @ =0xFFFFF87F
	b _0804D2D6
	.align 2, 0
_0804D0B4: .4byte 0x000021C2
_0804D0B8: .4byte 0xFFFFF87F
_0804D0BC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D0D8 @ =0x000021C3
	adds r1, r1, r2
	movs r0, #0xf
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #0x79
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D0D8: .4byte 0x000021C3
_0804D0DC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r3, [r0]
	movs r1, #1
	ands r1, r6
	ldr r2, _0804D110 @ =0x000021C3
	adds r4, r3, r2
	lsls r1, r1, #7
	ldrb r2, [r4]
	movs r0, #0x7f
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r1, r6, #1
	movs r0, #7
	ldr r2, _0804D114 @ =0x000021C4
_0804D0FE:
	adds r3, r3, r2
	ands r1, r0
	ldrb r2, [r3]
	subs r0, #0xf
_0804D106:
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	bl _0804DA2E
	.align 2, 0
_0804D110: .4byte 0x000021C3
_0804D114: .4byte 0x000021C4
_0804D118:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D134 @ =0x000021C4
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D134: .4byte 0x000021C4
_0804D138:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D154 @ =0x000021C4
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D154: .4byte 0x000021C4
_0804D158:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D174 @ =0x000021C4
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D174: .4byte 0x000021C4
_0804D178:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D188 @ =0x000021C4
	bl _0804DA1A
	.align 2, 0
_0804D188: .4byte 0x000021C4
_0804D18C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D1A4 @ =0x000021C4
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804D1A4: .4byte 0x000021C4
_0804D1A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D1C8 @ =0x000021C5
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804D1C8: .4byte 0x000021C5
_0804D1CC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D1E8 @ =0x000021C5
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #3
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D1E8: .4byte 0x000021C5
_0804D1EC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D208 @ =0x000021C5
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D208: .4byte 0x000021C5
_0804D20C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D228 @ =0x000021C5
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D228: .4byte 0x000021C5
_0804D22C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D248 @ =0x000021C5
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D248: .4byte 0x000021C5
_0804D24C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D268 @ =0x000021C5
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	bl _0804DA28
	.align 2, 0
_0804D268: .4byte 0x000021C5
_0804D26C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D27C @ =0x000021C5
	bl _0804DA1A
	.align 2, 0
_0804D27C: .4byte 0x000021C5
_0804D280:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D298 @ =0x000021C5
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	bl _0804DA28
	.align 2, 0
_0804D298: .4byte 0x000021C5
_0804D29C:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D2BC @ =0x000021C6
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	bl _0804DA2C
	.align 2, 0
_0804D2BC: .4byte 0x000021C6
_0804D2C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D2E0 @ =0x000021C6
	adds r1, r1, r2
	movs r0, #0xff
	ands r6, r0
	lsls r3, r6, #1
	ldrh r2, [r1]
	ldr r0, _0804D2E4 @ =0xFFFFFE01
_0804D2D6:
	ands r0, r2
	orrs r0, r3
	strh r0, [r1]
	bl _0804DA2E
	.align 2, 0
_0804D2E0: .4byte 0x000021C6
_0804D2E4: .4byte 0xFFFFFE01
_0804D2E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D304 @ =0x000021C7
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #3
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D304: .4byte 0x000021C7
_0804D308:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D324 @ =0x000021C7
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D324: .4byte 0x000021C7
_0804D328:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D344 @ =0x000021C7
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D344: .4byte 0x000021C7
_0804D348:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D364 @ =0x000021C7
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D364: .4byte 0x000021C7
_0804D368:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D384 @ =0x000021C7
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D384: .4byte 0x000021C7
_0804D388:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D394 @ =0x000021C7
	b _0804DA1A
	.align 2, 0
_0804D394: .4byte 0x000021C7
_0804D398:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D3AC @ =0x000021C7
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	b _0804DA28
	.align 2, 0
_0804D3AC: .4byte 0x000021C7
_0804D3B0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D3CC @ =0x000021C8
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D3CC: .4byte 0x000021C8
_0804D3D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D3EC @ =0x000021C8
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #3
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D3EC: .4byte 0x000021C8
_0804D3F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D40C @ =0x000021AB
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D40C: .4byte 0x000021AB
_0804D410:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D424 @ =0x000021AB
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	b _0804DA28
	.align 2, 0
_0804D424: .4byte 0x000021AB
_0804D428:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D444 @ =0x000021AC
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D444: .4byte 0x000021AC
_0804D448:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D464 @ =0x000021AC
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D464: .4byte 0x000021AC
_0804D468:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D484 @ =0x000021AC
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D484: .4byte 0x000021AC
_0804D488:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D49C @ =0x000021AC
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	b _0804DA28
	.align 2, 0
_0804D49C: .4byte 0x000021AC
_0804D4A0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D4BC @ =0x000021AD
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D4BC: .4byte 0x000021AD
_0804D4C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D4DC @ =0x000021AD
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D4DC: .4byte 0x000021AD
_0804D4E0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D4FC @ =0x000021AD
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D4FC: .4byte 0x000021AD
_0804D500:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D514 @ =0x000021AD
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	b _0804DA28
	.align 2, 0
_0804D514: .4byte 0x000021AD
_0804D518:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D534 @ =0x000021AE
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D534: .4byte 0x000021AE
_0804D538:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D554 @ =0x000021AE
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D554: .4byte 0x000021AE
_0804D558:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D574 @ =0x000021AE
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D574: .4byte 0x000021AE
_0804D578:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D58C @ =0x000021AE
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	b _0804DA28
	.align 2, 0
_0804D58C: .4byte 0x000021AE
_0804D590:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D5AC @ =0x000021AF
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D5AC: .4byte 0x000021AF
_0804D5B0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D5CC @ =0x000021AF
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D5CC: .4byte 0x000021AF
_0804D5D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D5EC @ =0x000021AF
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D5EC: .4byte 0x000021AF
_0804D5F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D604 @ =0x000021AF
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	b _0804DA28
	.align 2, 0
_0804D604: .4byte 0x000021AF
_0804D608:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D624 @ =0x000021B0
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D624: .4byte 0x000021B0
_0804D628:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D644 @ =0x000021B0
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D644: .4byte 0x000021B0
_0804D648:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D664 @ =0x000021B0
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D664: .4byte 0x000021B0
_0804D668:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D67C @ =0x000021B0
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	b _0804DA28
	.align 2, 0
_0804D67C: .4byte 0x000021B0
_0804D680:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D69C @ =0x000021B1
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D69C: .4byte 0x000021B1
_0804D6A0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D6BC @ =0x000021B1
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D6BC: .4byte 0x000021B1
_0804D6C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D6DC @ =0x000021B1
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D6DC: .4byte 0x000021B1
_0804D6E0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D6F4 @ =0x000021B1
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	b _0804DA28
	.align 2, 0
_0804D6F4: .4byte 0x000021B1
_0804D6F8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D714 @ =0x000021B2
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D714: .4byte 0x000021B2
_0804D718:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D734 @ =0x000021B2
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D734: .4byte 0x000021B2
_0804D738:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D754 @ =0x000021B2
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D754: .4byte 0x000021B2
_0804D758:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D76C @ =0x000021B2
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	b _0804DA28
	.align 2, 0
_0804D76C: .4byte 0x000021B2
_0804D770:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D78C @ =0x000021B3
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D78C: .4byte 0x000021B3
_0804D790:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D7AC @ =0x000021B3
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D7AC: .4byte 0x000021B3
_0804D7B0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D7CC @ =0x000021B3
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D7CC: .4byte 0x000021B3
_0804D7D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D7E4 @ =0x000021B3
	adds r1, r1, r2
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x3f
	b _0804DA28
	.align 2, 0
_0804D7E4: .4byte 0x000021B3
_0804D7E8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D804 @ =0x000021B4
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D804: .4byte 0x000021B4
_0804D808:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D824 @ =0x000021B4
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D824: .4byte 0x000021B4
_0804D828:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D844 @ =0x000021B4
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x31
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D844: .4byte 0x000021B4
_0804D848:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D864 @ =0x000021C8
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D864: .4byte 0x000021C8
_0804D868:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D884 @ =0x000021C8
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D884: .4byte 0x000021C8
_0804D888:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D89C @ =0x000021C8
	adds r1, r1, r2
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0xf
	b _0804DA28
	.align 2, 0
_0804D89C: .4byte 0x000021C8
_0804D8A0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D8BC @ =0x000021C9
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D8BC: .4byte 0x000021C9
_0804D8C0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D8DC @ =0x000021C9
	adds r1, r1, r2
	movs r0, #0xf
	ands r6, r0
	lsls r3, r6, #1
	ldrb r2, [r1]
	movs r0, #0x1f
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D8DC: .4byte 0x000021C9
_0804D8E0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D8FC @ =0x000021C9
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D8FC: .4byte 0x000021C9
_0804D900:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D90C @ =0x000021C9
	b _0804DA1A
	.align 2, 0
_0804D90C: .4byte 0x000021C9
_0804D910:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D924 @ =0x000021C9
	adds r1, r1, r2
	lsls r3, r6, #7
	ldrb r2, [r1]
	movs r0, #0x7f
	b _0804DA28
	.align 2, 0
_0804D924: .4byte 0x000021C9
_0804D928:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D944 @ =0x000021CA
	adds r1, r1, r2
	movs r0, #3
	ands r6, r0
	ldrb r2, [r1]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r6
	b _0804DA2C
	.align 2, 0
_0804D944: .4byte 0x000021CA
_0804D948:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D964 @ =0x000021CA
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #5
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D964: .4byte 0x000021CA
_0804D968:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D984 @ =0x000021CA
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #3
	ldrb r2, [r1]
	movs r0, #9
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D984: .4byte 0x000021CA
_0804D988:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D9A4 @ =0x000021CA
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #4
	ldrb r2, [r1]
	movs r0, #0x11
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D9A4: .4byte 0x000021CA
_0804D9A8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D9C4 @ =0x000021CA
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804D9C4: .4byte 0x000021CA
_0804D9C8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D9D4 @ =0x000021CA
	b _0804DA1A
	.align 2, 0
_0804D9D4: .4byte 0x000021CA
_0804D9D8:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804D9EC @ =0x000021CB
	adds r1, r1, r2
	lsls r3, r6, #2
	ldrb r2, [r1]
	movs r0, #3
	b _0804DA28
	.align 2, 0
_0804D9EC: .4byte 0x000021CB
_0804D9F0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804DA0C @ =0x0000216E
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #5
	ldrb r2, [r1]
	movs r0, #0x21
	rsbs r0, r0, #0
	b _0804DA28
	.align 2, 0
_0804DA0C: .4byte 0x0000216E
_0804DA10:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, _0804DA50 @ =0x0000216E
_0804DA1A:
	adds r1, r1, r2
	movs r0, #1
	ands r6, r0
	lsls r3, r6, #6
	ldrb r2, [r1]
	movs r0, #0x41
	rsbs r0, r0, #0
_0804DA28:
	ands r0, r2
	orrs r0, r3
_0804DA2C:
	strb r0, [r1]
_0804DA2E:
	adds r0, r7, #0
	mov r1, r8
	bl func_0804590C
	adds r2, r0, #0
	mov r1, r8
	subs r1, #0x46
	ldr r0, _0804DA54 @ =0x0000018B
	cmp r1, r0
	bls _0804DA44
	b _0804E0E6
_0804DA44:
	lsls r0, r1, #2
	ldr r1, _0804DA58 @ =_0804DA5C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0804DA50: .4byte 0x0000216E
_0804DA54: .4byte 0x0000018B
_0804DA58: .4byte _0804DA5C
_0804DA5C: @ jump table
	.4byte _0804E08C @ case 0
	.4byte _0804E08C @ case 1
	.4byte _0804E0E6 @ case 2
	.4byte _0804E08C @ case 3
	.4byte _0804E08C @ case 4
	.4byte _0804E08C @ case 5
	.4byte _0804E08C @ case 6
	.4byte _0804E08C @ case 7
	.4byte _0804E08C @ case 8
	.4byte _0804E08C @ case 9
	.4byte _0804E08C @ case 10
	.4byte _0804E0E6 @ case 11
	.4byte _0804E08C @ case 12
	.4byte _0804E0E6 @ case 13
	.4byte _0804E08C @ case 14
	.4byte _0804E08C @ case 15
	.4byte _0804E08C @ case 16
	.4byte _0804E08C @ case 17
	.4byte _0804E08C @ case 18
	.4byte _0804E0E6 @ case 19
	.4byte _0804E08C @ case 20
	.4byte _0804E0E6 @ case 21
	.4byte _0804E08C @ case 22
	.4byte _0804E0E6 @ case 23
	.4byte _0804E08C @ case 24
	.4byte _0804E08C @ case 25
	.4byte _0804E08C @ case 26
	.4byte _0804E08C @ case 27
	.4byte _0804E08C @ case 28
	.4byte _0804E0E6 @ case 29
	.4byte _0804E08C @ case 30
	.4byte _0804E08C @ case 31
	.4byte _0804E08C @ case 32
	.4byte _0804E08C @ case 33
	.4byte _0804E08C @ case 34
	.4byte _0804E08C @ case 35
	.4byte _0804E08C @ case 36
	.4byte _0804E08C @ case 37
	.4byte _0804E0E6 @ case 38
	.4byte _0804E08C @ case 39
	.4byte _0804E08C @ case 40
	.4byte _0804E08C @ case 41
	.4byte _0804E08C @ case 42
	.4byte _0804E08C @ case 43
	.4byte _0804E08C @ case 44
	.4byte _0804E08C @ case 45
	.4byte _0804E08C @ case 46
	.4byte _0804E08C @ case 47
	.4byte _0804E08C @ case 48
	.4byte _0804E08C @ case 49
	.4byte _0804E0E6 @ case 50
	.4byte _0804E0E6 @ case 51
	.4byte _0804E08C @ case 52
	.4byte _0804E08C @ case 53
	.4byte _0804E08C @ case 54
	.4byte _0804E08C @ case 55
	.4byte _0804E08C @ case 56
	.4byte _0804E08C @ case 57
	.4byte _0804E0E6 @ case 58
	.4byte _0804E0E6 @ case 59
	.4byte _0804E08C @ case 60
	.4byte _0804E08C @ case 61
	.4byte _0804E08C @ case 62
	.4byte _0804E08C @ case 63
	.4byte _0804E08C @ case 64
	.4byte _0804E08C @ case 65
	.4byte _0804E0E6 @ case 66
	.4byte _0804E0E6 @ case 67
	.4byte _0804E08C @ case 68
	.4byte _0804E08C @ case 69
	.4byte _0804E08C @ case 70
	.4byte _0804E08C @ case 71
	.4byte _0804E08C @ case 72
	.4byte _0804E08C @ case 73
	.4byte _0804E0E6 @ case 74
	.4byte _0804E0E6 @ case 75
	.4byte _0804E08C @ case 76
	.4byte _0804E08C @ case 77
	.4byte _0804E08C @ case 78
	.4byte _0804E08C @ case 79
	.4byte _0804E08C @ case 80
	.4byte _0804E08C @ case 81
	.4byte _0804E0E6 @ case 82
	.4byte _0804E0E6 @ case 83
	.4byte _0804E08C @ case 84
	.4byte _0804E08C @ case 85
	.4byte _0804E08C @ case 86
	.4byte _0804E08C @ case 87
	.4byte _0804E08C @ case 88
	.4byte _0804E08C @ case 89
	.4byte _0804E08C @ case 90
	.4byte _0804E08C @ case 91
	.4byte _0804E08C @ case 92
	.4byte _0804E08C @ case 93
	.4byte _0804E08C @ case 94
	.4byte _0804E08C @ case 95
	.4byte _0804E08C @ case 96
	.4byte _0804E08C @ case 97
	.4byte _0804E08C @ case 98
	.4byte _0804E08C @ case 99
	.4byte _0804E08C @ case 100
	.4byte _0804E08C @ case 101
	.4byte _0804E08C @ case 102
	.4byte _0804E08C @ case 103
	.4byte _0804E08C @ case 104
	.4byte _0804E08C @ case 105
	.4byte _0804E08C @ case 106
	.4byte _0804E08C @ case 107
	.4byte _0804E08C @ case 108
	.4byte _0804E08C @ case 109
	.4byte _0804E08C @ case 110
	.4byte _0804E08C @ case 111
	.4byte _0804E08C @ case 112
	.4byte _0804E08C @ case 113
	.4byte _0804E08C @ case 114
	.4byte _0804E08C @ case 115
	.4byte _0804E08C @ case 116
	.4byte _0804E08C @ case 117
	.4byte _0804E08C @ case 118
	.4byte _0804E08C @ case 119
	.4byte _0804E08C @ case 120
	.4byte _0804E08C @ case 121
	.4byte _0804E08C @ case 122
	.4byte _0804E08C @ case 123
	.4byte _0804E08C @ case 124
	.4byte _0804E08C @ case 125
	.4byte _0804E08C @ case 126
	.4byte _0804E08C @ case 127
	.4byte _0804E08C @ case 128
	.4byte _0804E08C @ case 129
	.4byte _0804E08C @ case 130
	.4byte _0804E08C @ case 131
	.4byte _0804E08C @ case 132
	.4byte _0804E08C @ case 133
	.4byte _0804E08C @ case 134
	.4byte _0804E08C @ case 135
	.4byte _0804E08C @ case 136
	.4byte _0804E08C @ case 137
	.4byte _0804E08C @ case 138
	.4byte _0804E08C @ case 139
	.4byte _0804E0E6 @ case 140
	.4byte _0804E0E6 @ case 141
	.4byte _0804E0E6 @ case 142
	.4byte _0804E0E6 @ case 143
	.4byte _0804E0E6 @ case 144
	.4byte _0804E08C @ case 145
	.4byte _0804E08C @ case 146
	.4byte _0804E08C @ case 147
	.4byte _0804E08C @ case 148
	.4byte _0804E08C @ case 149
	.4byte _0804E08C @ case 150
	.4byte _0804E08C @ case 151
	.4byte _0804E0E6 @ case 152
	.4byte _0804E08C @ case 153
	.4byte _0804E08C @ case 154
	.4byte _0804E08C @ case 155
	.4byte _0804E08C @ case 156
	.4byte _0804E08C @ case 157
	.4byte _0804E08C @ case 158
	.4byte _0804E0E6 @ case 159
	.4byte _0804E08C @ case 160
	.4byte _0804E08C @ case 161
	.4byte _0804E08C @ case 162
	.4byte _0804E08C @ case 163
	.4byte _0804E08C @ case 164
	.4byte _0804E08C @ case 165
	.4byte _0804E08C @ case 166
	.4byte _0804E08C @ case 167
	.4byte _0804E08C @ case 168
	.4byte _0804E08C @ case 169
	.4byte _0804E08C @ case 170
	.4byte _0804E08C @ case 171
	.4byte _0804E08C @ case 172
	.4byte _0804E08C @ case 173
	.4byte _0804E0E6 @ case 174
	.4byte _0804E0E6 @ case 175
	.4byte _0804E0E6 @ case 176
	.4byte _0804E0E6 @ case 177
	.4byte _0804E0E6 @ case 178
	.4byte _0804E08C @ case 179
	.4byte _0804E08C @ case 180
	.4byte _0804E08C @ case 181
	.4byte _0804E08C @ case 182
	.4byte _0804E08C @ case 183
	.4byte _0804E0E6 @ case 184
	.4byte _0804E08C @ case 185
	.4byte _0804E08C @ case 186
	.4byte _0804E0E6 @ case 187
	.4byte _0804E08C @ case 188
	.4byte _0804E0E6 @ case 189
	.4byte _0804E08C @ case 190
	.4byte _0804E08C @ case 191
	.4byte _0804E08C @ case 192
	.4byte _0804E08C @ case 193
	.4byte _0804E0E6 @ case 194
	.4byte _0804E0E6 @ case 195
	.4byte _0804E08C @ case 196
	.4byte _0804E08C @ case 197
	.4byte _0804E0E6 @ case 198
	.4byte _0804E0E6 @ case 199
	.4byte _0804E08C @ case 200
	.4byte _0804E08C @ case 201
	.4byte _0804E08C @ case 202
	.4byte _0804E08C @ case 203
	.4byte _0804E08C @ case 204
	.4byte _0804E0E6 @ case 205
	.4byte _0804E08C @ case 206
	.4byte _0804E08C @ case 207
	.4byte _0804E08C @ case 208
	.4byte _0804E08C @ case 209
	.4byte _0804E08C @ case 210
	.4byte _0804E08C @ case 211
	.4byte _0804E08C @ case 212
	.4byte _0804E08C @ case 213
	.4byte _0804E08C @ case 214
	.4byte _0804E08C @ case 215
	.4byte _0804E08C @ case 216
	.4byte _0804E08C @ case 217
	.4byte _0804E08C @ case 218
	.4byte _0804E08C @ case 219
	.4byte _0804E08C @ case 220
	.4byte _0804E08C @ case 221
	.4byte _0804E0E6 @ case 222
	.4byte _0804E0E6 @ case 223
	.4byte _0804E08C @ case 224
	.4byte _0804E08C @ case 225
	.4byte _0804E08C @ case 226
	.4byte _0804E0E6 @ case 227
	.4byte _0804E08C @ case 228
	.4byte _0804E08C @ case 229
	.4byte _0804E08C @ case 230
	.4byte _0804E08C @ case 231
	.4byte _0804E08C @ case 232
	.4byte _0804E08C @ case 233
	.4byte _0804E08C @ case 234
	.4byte _0804E0E6 @ case 235
	.4byte _0804E08C @ case 236
	.4byte _0804E08C @ case 237
	.4byte _0804E08C @ case 238
	.4byte _0804E08C @ case 239
	.4byte _0804E08C @ case 240
	.4byte _0804E08C @ case 241
	.4byte _0804E08C @ case 242
	.4byte _0804E08C @ case 243
	.4byte _0804E0E6 @ case 244
	.4byte _0804E08C @ case 245
	.4byte _0804E08C @ case 246
	.4byte _0804E08C @ case 247
	.4byte _0804E08C @ case 248
	.4byte _0804E08C @ case 249
	.4byte _0804E08C @ case 250
	.4byte _0804E08C @ case 251
	.4byte _0804E08C @ case 252
	.4byte _0804E08C @ case 253
	.4byte _0804E0E6 @ case 254
	.4byte _0804E08C @ case 255
	.4byte _0804E08C @ case 256
	.4byte _0804E0E6 @ case 257
	.4byte _0804E08C @ case 258
	.4byte _0804E08C @ case 259
	.4byte _0804E08C @ case 260
	.4byte _0804E08C @ case 261
	.4byte _0804E08C @ case 262
	.4byte _0804E0E6 @ case 263
	.4byte _0804E08C @ case 264
	.4byte _0804E08C @ case 265
	.4byte _0804E08C @ case 266
	.4byte _0804E08C @ case 267
	.4byte _0804E08C @ case 268
	.4byte _0804E08C @ case 269
	.4byte _0804E0E6 @ case 270
	.4byte _0804E08C @ case 271
	.4byte _0804E08C @ case 272
	.4byte _0804E0E6 @ case 273
	.4byte _0804E08C @ case 274
	.4byte _0804E08C @ case 275
	.4byte _0804E08C @ case 276
	.4byte _0804E08C @ case 277
	.4byte _0804E08C @ case 278
	.4byte _0804E08C @ case 279
	.4byte _0804E08C @ case 280
	.4byte _0804E08C @ case 281
	.4byte _0804E08C @ case 282
	.4byte _0804E08C @ case 283
	.4byte _0804E08C @ case 284
	.4byte _0804E08C @ case 285
	.4byte _0804E08C @ case 286
	.4byte _0804E08C @ case 287
	.4byte _0804E08C @ case 288
	.4byte _0804E08C @ case 289
	.4byte _0804E08C @ case 290
	.4byte _0804E08C @ case 291
	.4byte _0804E08C @ case 292
	.4byte _0804E08C @ case 293
	.4byte _0804E08C @ case 294
	.4byte _0804E08C @ case 295
	.4byte _0804E08C @ case 296
	.4byte _0804E08C @ case 297
	.4byte _0804E08C @ case 298
	.4byte _0804E08C @ case 299
	.4byte _0804E08C @ case 300
	.4byte _0804E08C @ case 301
	.4byte _0804E08C @ case 302
	.4byte _0804E08C @ case 303
	.4byte _0804E08C @ case 304
	.4byte _0804E08C @ case 305
	.4byte _0804E08C @ case 306
	.4byte _0804E08C @ case 307
	.4byte _0804E08C @ case 308
	.4byte _0804E08C @ case 309
	.4byte _0804E08C @ case 310
	.4byte _0804E08C @ case 311
	.4byte _0804E08C @ case 312
	.4byte _0804E08C @ case 313
	.4byte _0804E08C @ case 314
	.4byte _0804E08C @ case 315
	.4byte _0804E0E6 @ case 316
	.4byte _0804E0E6 @ case 317
	.4byte _0804E0E6 @ case 318
	.4byte _0804E0E6 @ case 319
	.4byte _0804E0E6 @ case 320
	.4byte _0804E08C @ case 321
	.4byte _0804E0E6 @ case 322
	.4byte _0804E08C @ case 323
	.4byte _0804E0E6 @ case 324
	.4byte _0804E08C @ case 325
	.4byte _0804E08C @ case 326
	.4byte _0804E0E6 @ case 327
	.4byte _0804E08C @ case 328
	.4byte _0804E0E6 @ case 329
	.4byte _0804E0E6 @ case 330
	.4byte _0804E0E6 @ case 331
	.4byte _0804E08C @ case 332
	.4byte _0804E0E6 @ case 333
	.4byte _0804E08C @ case 334
	.4byte _0804E0E6 @ case 335
	.4byte _0804E08C @ case 336
	.4byte _0804E0E6 @ case 337
	.4byte _0804E08C @ case 338
	.4byte _0804E0E6 @ case 339
	.4byte _0804E08C @ case 340
	.4byte _0804E0E6 @ case 341
	.4byte _0804E08C @ case 342
	.4byte _0804E0E6 @ case 343
	.4byte _0804E08C @ case 344
	.4byte _0804E0E6 @ case 345
	.4byte _0804E08C @ case 346
	.4byte _0804E0E6 @ case 347
	.4byte _0804E08C @ case 348
	.4byte _0804E08C @ case 349
	.4byte _0804E08C @ case 350
	.4byte _0804E0E6 @ case 351
	.4byte _0804E0E6 @ case 352
	.4byte _0804E0E6 @ case 353
	.4byte _0804E08C @ case 354
	.4byte _0804E0E6 @ case 355
	.4byte _0804E08C @ case 356
	.4byte _0804E0E6 @ case 357
	.4byte _0804E08C @ case 358
	.4byte _0804E0E6 @ case 359
	.4byte _0804E08C @ case 360
	.4byte _0804E0E6 @ case 361
	.4byte _0804E08C @ case 362
	.4byte _0804E0E6 @ case 363
	.4byte _0804E08C @ case 364
	.4byte _0804E08C @ case 365
	.4byte _0804E08C @ case 366
	.4byte _0804E08C @ case 367
	.4byte _0804E08C @ case 368
	.4byte _0804E0E6 @ case 369
	.4byte _0804E08C @ case 370
	.4byte _0804E0E6 @ case 371
	.4byte _0804E08C @ case 372
	.4byte _0804E0E6 @ case 373
	.4byte _0804E08C @ case 374
	.4byte _0804E0E6 @ case 375
	.4byte _0804E08C @ case 376
	.4byte _0804E0E6 @ case 377
	.4byte _0804E08C @ case 378
	.4byte _0804E08C @ case 379
	.4byte _0804E0E6 @ case 380
	.4byte _0804E0E6 @ case 381
	.4byte _0804E0E6 @ case 382
	.4byte _0804E0E6 @ case 383
	.4byte _0804E0E6 @ case 384
	.4byte _0804E0E6 @ case 385
	.4byte _0804E08C @ case 386
	.4byte _0804E08C @ case 387
	.4byte _0804E08C @ case 388
	.4byte _0804E08C @ case 389
	.4byte _0804E08C @ case 390
	.4byte _0804E08C @ case 391
	.4byte _0804E08C @ case 392
	.4byte _0804E0E6 @ case 393
	.4byte _0804E08C @ case 394
	.4byte _0804E08C @ case 395
_0804E08C:
	cmp r2, sb
	beq _0804E0E6
	cmp r2, #1
	beq _0804E0A4
	cmp r2, #1
	bgt _0804E09E
	cmp r2, #0
	beq _0804E0D0
	b _0804E0E6
_0804E09E:
	cmp r2, #2
	beq _0804E0D0
	b _0804E0E6
_0804E0A4:
	movs r1, #0xd5
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _0804E0B4
	bl func_080125EC
_0804E0B4:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	ldr r1, _0804E0CC @ =0x0000214C
	adds r0, r0, r1
	mov r2, r8
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	bl func_0809C600
	b _0804E0E6
	.align 2, 0
_0804E0CC: .4byte 0x0000214C
_0804E0D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	ldr r2, _0804E0F4 @ =0x0000214C
	adds r0, r0, r2
	mov r2, r8
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	bl func_0809C644
_0804E0E6:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804E0F4: .4byte 0x0000214C

	thumb_func_start func_0804E0F8
func_0804E0F8: @ 0x0804E0F8
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r6, r1, #0
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r5, r0, r1
	ldr r0, [r5]
	ldr r1, _0804E168 @ =0x00001C34
	adds r0, r0, r1
	adds r4, r0, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804E170
	movs r7, #0
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	mov r1, sp
	strb r0, [r1]
	mov r0, sp
	bl GetId__C4Tool
	cmp r0, r6
	bne _0804E13C
	adds r0, r4, #0
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	eors r0, r1
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r7, r1, #0x1f
_0804E13C:
	cmp r7, #0
	bne _0804E170
	ldr r0, [r5]
	ldr r1, _0804E16C @ =0x00001C38
	adds r0, r0, r1
	adds r1, r6, #0
	bl func_0800F990
	cmp r0, #0
	bne _0804E170
	ldr r0, [r5]
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r1, r6, #0
	bl GetAvailableSpaceFor__C9ToolChestUi
	cmp r0, #0
	bne _0804E170
	movs r0, #0
	b _0804E172
	.align 2, 0
_0804E168: .4byte 0x00001C34
_0804E16C: .4byte 0x00001C38
_0804E170:
	movs r0, #1
_0804E172:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0804E17C
func_0804E17C: @ 0x0804E17C
	push {r4, r5, lr}
	adds r5, r1, #0
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r4, r0, r1
	ldr r0, [r4]
	ldr r1, _0804E1C4 @ =0x00001C2C
	adds r0, r0, r1
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804E1BE
	ldr r0, [r4]
	ldr r1, _0804E1C8 @ =0x00001C38
	adds r0, r0, r1
	bl func_0800F77C
	cmp r0, #0
	bne _0804E1BE
	ldr r0, [r4]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetFridge__9FarmHouse
	cmp r0, #0
	beq _0804E1CC
	adds r1, r5, #0
	bl GetAvailableSpaceFor__C6FridgeUi
	cmp r0, #0
	beq _0804E1CC
_0804E1BE:
	movs r0, #1
	b _0804E1CE
	.align 2, 0
_0804E1C4: .4byte 0x00001C2C
_0804E1C8: .4byte 0x00001C38
_0804E1CC:
	movs r0, #0
_0804E1CE:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0804E1D4
func_0804E1D4: @ 0x0804E1D4
	push {r4, r5, lr}
	adds r5, r1, #0
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r4, r0, r1
	ldr r0, [r4]
	ldr r1, _0804E21C @ =0x00001C2C
	adds r0, r0, r1
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804E216
	ldr r0, [r4]
	ldr r1, _0804E220 @ =0x00001C38
	adds r0, r0, r1
	bl func_0800F77C
	cmp r0, #0
	bne _0804E216
	ldr r0, [r4]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _0804E224
	adds r1, r5, #0
	bl GetAvailableSpaceFor__C5ShelfUi
	cmp r0, #0
	beq _0804E224
_0804E216:
	movs r0, #1
	b _0804E226
	.align 2, 0
_0804E21C: .4byte 0x00001C2C
_0804E220: .4byte 0x00001C38
_0804E224:
	movs r0, #0
_0804E226:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0804E22C
func_0804E22C: @ 0x0804E22C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r1, #0
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r1, _0804E2AC @ =0x00001C2C
	adds r4, r0, r1
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804E272
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #1
	bne _0804E272
	adds r0, r4, #0
	bl func_0800F258
	mov r1, sp
	strb r0, [r1]
	mov r0, sp
	bl GetId__C7Article
	movs r1, #0
	cmp r0, r6
	bne _0804E26E
	movs r1, #1
_0804E26E:
	cmp r1, #0
	bne _0804E2A8
_0804E272:
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r0, [r4]
	ldr r1, _0804E2B0 @ =0x00001C38
	adds r0, r0, r1
	adds r1, r6, #0
	bl func_0800F714
	adds r5, r0, #0
	movs r0, #1
	rsbs r0, r0, #0
	cmp r5, r0
	bne _0804E2A8
	ldr r0, [r4]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _0804E2B4
	adds r1, r6, #0
	bl GetFirstSlotWith__C5ShelfUi
	cmp r0, r5
	beq _0804E2B4
_0804E2A8:
	movs r0, #1
	b _0804E2B6
	.align 2, 0
_0804E2AC: .4byte 0x00001C2C
_0804E2B0: .4byte 0x00001C38
_0804E2B4:
	movs r0, #0
_0804E2B6:
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0804E2C0
func_0804E2C0: @ 0x0804E2C0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r1, #0
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r1, _0804E340 @ =0x00001C2C
	adds r4, r0, r1
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804E304
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #0
	bne _0804E304
	mov r0, sp
	adds r1, r4, #0
	bl func_0800F20C
	mov r0, sp
	bl GetId__C4Food
	movs r1, #0
	cmp r0, r6
	bne _0804E300
	movs r1, #1
_0804E300:
	cmp r1, #0
	bne _0804E33A
_0804E304:
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r0, [r4]
	ldr r1, _0804E344 @ =0x00001C38
	adds r0, r0, r1
	adds r1, r6, #0
	bl func_0800F6B4
	adds r5, r0, #0
	movs r0, #1
	rsbs r0, r0, #0
	cmp r5, r0
	bne _0804E33A
	ldr r0, [r4]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetFridge__9FarmHouse
	cmp r0, #0
	beq _0804E348
	adds r1, r6, #0
	bl GetFirstSlotWith__C6FridgeUi
	cmp r0, r5
	beq _0804E348
_0804E33A:
	movs r0, #1
	b _0804E34A
	.align 2, 0
_0804E340: .4byte 0x00001C2C
_0804E344: .4byte 0x00001C38
_0804E348:
	movs r0, #0
_0804E34A:
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0804E354
func_0804E354: @ 0x0804E354
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r1, #0
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r1, _0804E3C4 @ =0x00001C34
	adds r4, r0, r1
	adds r0, r4, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0804E390
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	mov r1, sp
	strb r0, [r1]
	mov r0, sp
	bl GetId__C4Tool
	movs r1, #0
	cmp r0, r6
	bne _0804E38C
	movs r1, #1
_0804E38C:
	cmp r1, #0
	bne _0804E3CC
_0804E390:
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r4, r5, r0
	ldr r0, [r4]
	ldr r1, _0804E3C8 @ =0x00001C38
	adds r0, r0, r1
	adds r1, r6, #0
	bl func_0800F92C
	adds r5, r0, #0
	movs r0, #1
	rsbs r0, r0, #0
	cmp r5, r0
	bne _0804E3CC
	ldr r0, [r4]
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r1, r6, #0
	bl GetFirstSlotWith__C9ToolChestUi
	cmp r0, r5
	bne _0804E3CC
	movs r0, #0
	b _0804E3CE
	.align 2, 0
_0804E3C4: .4byte 0x00001C34
_0804E3C8: .4byte 0x00001C38
_0804E3CC:
	movs r0, #1
_0804E3CE:
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0804E3D8
func_0804E3D8: @ 0x0804E3D8
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	adds r5, r2, #0
	movs r6, #0
	cmp r1, #4
	bhi _0804E49E
	lsls r0, r1, #2
	ldr r1, _0804E3F0 @ =_0804E3F4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0804E3F0: .4byte _0804E3F4
_0804E3F4: @ jump table
	.4byte _0804E408 @ case 0
	.4byte _0804E41A @ case 1
	.4byte _0804E442 @ case 2
	.4byte _0804E46A @ case 3
	.4byte _0804E492 @ case 4
_0804E408:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r3, r1
	ldr r0, [r0]
	adds r0, #0x14
	bl func_08009C3C
	adds r6, r0, #0
	b _0804E49E
_0804E41A:
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r4, r3, r0
	ldr r0, [r4]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetCapacity__C4Barn
	cmp r5, r0
	bge _0804E49E
	ldr r0, [r4]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r5, #0
	bl GetCow__4BarnUi
	adds r6, r0, #0
	b _0804E49E
_0804E442:
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r4, r3, r0
	ldr r0, [r4]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetCapacity__C4Barn
	cmp r5, r0
	bge _0804E49E
	ldr r0, [r4]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r5, #0
	bl GetSheep__4BarnUi
	adds r6, r0, #0
	b _0804E49E
_0804E46A:
	movs r0, #0xd4
	lsls r0, r0, #2
	adds r4, r3, r0
	ldr r0, [r4]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetCapacity__C4Coop
	cmp r5, r0
	bge _0804E49E
	ldr r0, [r4]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r5, #0
	bl GetChicken__4CoopUi
	adds r6, r0, #0
	b _0804E49E
_0804E492:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r3, r1
	ldr r0, [r0]
	ldr r1, _0804E4A8 @ =0x00001C70
	adds r6, r0, r1
_0804E49E:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0804E4A8: .4byte 0x00001C70

	thumb_func_start func_0804E4AC
func_0804E4AC: @ 0x0804E4AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x8c
	adds r5, r0, #0
	mov sb, r1
	adds r6, r2, #0
	adds r7, r3, #0
	ldr r1, [sp, #0xac]
	add r0, sp, #4
	bl func_080D0D28
	mov sl, r0
	subs r0, #1
	cmp r0, #1
	bhi _0804E598
	lsrs r4, r6, #3
	str r4, [sp, #0x84]
	lsrs r2, r7, #3
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsrs r0, r5, #0x10
	mov ip, r0
	cmp r4, r8
	bhs _0804E594
	cmp r2, r0
	bhs _0804E594
	movs r1, #0
	movs r3, #7
	adds r0, r6, #0
	ands r0, r3
	cmp r0, #0
	bne _0804E4F6
	movs r1, #1
_0804E4F6:
	cmp r1, #0
	beq _0804E584
	movs r1, #0
	adds r0, r7, #0
	ands r0, r3
	cmp r0, #0
	bne _0804E506
	movs r1, #1
_0804E506:
	cmp r1, #0
	beq _0804E584
	movs r0, #0
	str r0, [sp, #0x88]
	adds r0, r4, #1
	cmp r0, r8
	bhs _0804E518
	movs r1, #1
	str r1, [sp, #0x88]
_0804E518:
	movs r7, #0
	adds r5, r2, #1
	cmp r5, ip
	bhs _0804E522
	movs r7, #1
_0804E522:
	mov r0, r8
	muls r0, r2, r0
	adds r0, r0, r4
	lsls r0, r0, #5
	mov r2, sb
	adds r6, r0, r2
	add r0, sp, #4
	adds r1, r6, #0
	movs r2, #8
	bl func_080D374C
	cmp r7, #0
	beq _0804E54E
	mov r1, r8
	muls r1, r5, r1
	adds r1, r1, r4
	lsls r1, r1, #5
	add r1, sb
	add r0, sp, #0x44
	movs r2, #8
	bl func_080D374C
_0804E54E:
	ldr r0, [sp, #0x88]
	cmp r0, #0
	beq _0804E594
	mov r1, sl
	cmp r1, #1
	bls _0804E594
	adds r1, r6, #0
	adds r1, #0x20
	add r0, sp, #0x24
	movs r2, #8
	bl func_080D374C
	cmp r7, #0
	beq _0804E594
	mov r0, r8
	muls r0, r5, r0
	ldr r2, [sp, #0x84]
	adds r1, r2, r0
	lsls r0, r1, #5
	mov r2, sb
	adds r1, r0, r2
	adds r1, #0x20
	add r0, sp, #0x64
	movs r2, #8
	bl func_080D374C
	b _0804E594
_0804E584:
	add r0, sp, #4
	str r0, [sp]
	adds r0, r5, #0
	mov r1, sb
	adds r2, r6, #0
	adds r3, r7, #0
	bl func_0804E9C8
_0804E594:
	mov r0, sl
	b _0804E59A
_0804E598:
	movs r0, #0
_0804E59A:
	add sp, #0x8c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0804E5AC
func_0804E5AC: @ 0x0804E5AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xa0
	adds r4, r0, #0
	mov sl, r1
	adds r5, r2, #0
	adds r6, r3, #0
	ldr r1, [sp, #0xc0]
	add r0, sp, #0xc
	bl func_080D0D28
	str r0, [sp, #0x8c]
	subs r0, #1
	cmp r0, #1
	bls _0804E5D2
	b _0804E78C
_0804E5D2:
	lsrs r0, r5, #3
	mov ip, r0
	lsrs r3, r6, #3
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsrs r0, r4, #0x10
	adds r7, r0, #0
	cmp ip, r8
	blo _0804E5E8
	b _0804E788
_0804E5E8:
	cmp r3, r0
	blo _0804E5EE
	b _0804E788
_0804E5EE:
	movs r1, #0
	movs r2, #7
	adds r0, r5, #0
	ands r0, r2
	cmp r0, #0
	bne _0804E5FC
	movs r1, #1
_0804E5FC:
	cmp r1, #0
	bne _0804E602
	b _0804E770
_0804E602:
	movs r1, #0
	adds r0, r6, #0
	ands r0, r2
	cmp r0, #0
	bne _0804E60E
	movs r1, #1
_0804E60E:
	cmp r1, #0
	bne _0804E614
	b _0804E770
_0804E614:
	movs r1, #0
	mov r0, ip
	adds r0, #1
	cmp r0, r8
	bhs _0804E620
	movs r1, #1
_0804E620:
	str r1, [sp, #0x90]
	movs r0, #0
	adds r1, r3, #1
	str r1, [sp, #0x98]
	cmp r1, r7
	bhs _0804E62E
	movs r0, #1
_0804E62E:
	str r0, [sp, #0x94]
	mov r0, r8
	muls r0, r3, r0
	adds r3, r0, #0
	mov r1, ip
	adds r2, r3, r1
	lsls r2, r2, #5
	ldr r0, [sp, #0xc8]
	ldr r1, [sp, #0xc4]
	subs r6, r0, r1
	movs r0, #0xf
	ands r0, r1
	lsls r1, r0, #4
	orrs r0, r1
	lsls r1, r0, #8
	orrs r0, r1
	lsls r5, r0, #0x10
	orrs r5, r0
	mov r0, sl
	adds r7, r2, r0
	add r4, sp, #0xc
	add r2, sp, #0x2c
	str r3, [sp, #0x9c]
	mov sb, r6
	cmp r4, r2
	beq _0804E67C
	ldr r3, _0804E76C @ =0x11111111
_0804E664:
	ldm r4!, {r0}
	adds r1, r0, #0
	ands r1, r3
	lsrs r0, r0, #1
	ands r0, r3
	orrs r1, r0
	muls r1, r6, r1
	adds r1, r5, r1
	adds r1, r1, r0
	stm r7!, {r1}
	cmp r4, r2
	bne _0804E664
_0804E67C:
	ldr r1, [sp, #0x94]
	cmp r1, #0
	beq _0804E6C6
	ldr r0, [sp, #0x98]
	mov r2, r8
	muls r2, r0, r2
	add r2, ip
	lsls r2, r2, #5
	mov r7, sb
	movs r0, #0xf
	ldr r1, [sp, #0xc4]
	ands r0, r1
	lsls r1, r0, #4
	orrs r0, r1
	lsls r1, r0, #8
	orrs r0, r1
	lsls r3, r0, #0x10
	orrs r3, r0
	mov r0, sl
	adds r6, r2, r0
	add r2, sp, #0x4c
	add r4, sp, #0x6c
	cmp r2, r4
	beq _0804E6C6
	ldr r5, _0804E76C @ =0x11111111
_0804E6AE:
	ldm r2!, {r0}
	adds r1, r0, #0
	ands r1, r5
	lsrs r0, r0, #1
	ands r0, r5
	orrs r1, r0
	muls r1, r7, r1
	adds r1, r3, r1
	adds r1, r1, r0
	stm r6!, {r1}
	cmp r2, r4
	bne _0804E6AE
_0804E6C6:
	ldr r1, [sp, #0x90]
	cmp r1, #0
	beq _0804E788
	ldr r0, [sp, #0x8c]
	cmp r0, #1
	bls _0804E788
	ldr r3, [sp, #0x9c]
	add r3, ip
	lsls r0, r3, #5
	mov r1, sl
	adds r3, r0, r1
	mov r7, sb
	movs r0, #0xf
	ldr r1, [sp, #0xc4]
	ands r0, r1
	lsls r1, r0, #4
	orrs r0, r1
	lsls r1, r0, #8
	orrs r0, r1
	lsls r2, r0, #0x10
	orrs r2, r0
	adds r6, r3, #0
	adds r6, #0x20
	add r5, sp, #0x2c
	adds r4, r5, #0
	adds r4, #0x20
	cmp r5, r4
	beq _0804E718
	ldr r3, _0804E76C @ =0x11111111
_0804E700:
	ldm r5!, {r0}
	adds r1, r0, #0
	ands r1, r3
	lsrs r0, r0, #1
	ands r0, r3
	orrs r1, r0
	muls r1, r7, r1
	adds r1, r2, r1
	adds r1, r1, r0
	stm r6!, {r1}
	cmp r5, r4
	bne _0804E700
_0804E718:
	ldr r0, [sp, #0x94]
	cmp r0, #0
	beq _0804E788
	ldr r1, [sp, #0x98]
	mov r0, r8
	muls r0, r1, r0
	mov r1, ip
	adds r2, r1, r0
	lsls r0, r2, #5
	mov r1, sl
	adds r2, r0, r1
	mov r7, sb
	movs r0, #0xf
	ldr r1, [sp, #0xc4]
	ands r0, r1
	lsls r1, r0, #4
	orrs r0, r1
	lsls r1, r0, #8
	orrs r0, r1
	lsls r4, r0, #0x10
	orrs r4, r0
	adds r6, r2, #0
	adds r6, #0x20
	add r3, sp, #0x6c
	add r2, sp, #0x8c
	cmp r3, r2
	beq _0804E788
	ldr r5, _0804E76C @ =0x11111111
_0804E750:
	ldm r3!, {r0}
	adds r1, r0, #0
	ands r1, r5
	lsrs r0, r0, #1
	ands r0, r5
	orrs r1, r0
	muls r1, r7, r1
	adds r1, r4, r1
	adds r1, r1, r0
	stm r6!, {r1}
	cmp r3, r2
	bne _0804E750
	b _0804E788
	.align 2, 0
_0804E76C: .4byte 0x11111111
_0804E770:
	add r0, sp, #0xc
	str r0, [sp]
	ldr r1, [sp, #0xc4]
	str r1, [sp, #4]
	ldr r0, [sp, #0xc8]
	str r0, [sp, #8]
	adds r0, r4, #0
	mov r1, sl
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_0804E9CC
_0804E788:
	ldr r0, [sp, #0x8c]
	b _0804E78E
_0804E78C:
	movs r0, #0
_0804E78E:
	add sp, #0xa0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0804E7A0
func_0804E7A0: @ 0x0804E7A0
	push {lr}
	sub sp, #4
	movs r3, #0xf
	ands r3, r2
	lsls r2, r3, #4
	orrs r3, r2
	lsls r2, r3, #8
	orrs r3, r2
	lsls r2, r3, #0x10
	orrs r3, r2
	lsls r2, r0, #0x10
	lsrs r2, r2, #0x10
	lsrs r0, r0, #0x10
	lsls r0, r0, #5
	muls r2, r0, r2
	str r3, [sp]
	lsrs r2, r2, #2
	ldr r0, _0804E7D8 @ =0x001FFFFF
	ands r2, r0
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r2, r0
	mov r0, sp
	bl func_080D374C
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_0804E7D8: .4byte 0x001FFFFF

	thumb_func_start func_0804E7DC
func_0804E7DC: @ 0x0804E7DC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	mov r8, r1
	adds r5, r2, #0
	ldr r1, [sp, #0x20]
	mov ip, r1
	ldr r6, [sp, #0x24]
	ldr r1, [sp, #0x28]
	movs r2, #0xf
	ands r1, r2
	lsls r2, r1, #4
	orrs r1, r2
	lsls r2, r1, #8
	orrs r1, r2
	lsls r2, r1, #0x10
	orrs r2, r1
	mov sb, r2
	lsls r1, r0, #0x10
	lsrs r2, r1, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r2, #3
	lsls r4, r0, #3
	cmp r5, #0
	bne _0804E840
	cmp r3, #0
	bne _0804E840
	cmp ip, r1
	blo _0804E840
	cmp r6, r4
	blo _0804E840
	lsls r0, r0, #5
	muls r2, r0, r2
	mov r7, sb
	str r7, [sp]
	lsrs r2, r2, #2
	ldr r0, _0804E83C @ =0x001FFFFF
	ands r2, r0
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r2, r0
	mov r0, sp
	mov r1, r8
	bl func_080D374C
	b _0804E8D8
	.align 2, 0
_0804E83C: .4byte 0x001FFFFF
_0804E840:
	cmp r5, r2
	bhs _0804E8D8
	cmp r3, r0
	bhs _0804E8D8
	mov r7, ip
	adds r0, r5, r7
	cmp r0, r1
	blo _0804E854
	subs r1, r1, r5
	mov ip, r1
_0804E854:
	adds r0, r3, r6
	cmp r0, r4
	blo _0804E85C
	subs r6, r4, r3
_0804E85C:
	movs r1, #0
	movs r4, #7
	adds r0, r5, #0
	ands r0, r4
	cmp r0, #0
	bne _0804E86A
	movs r1, #1
_0804E86A:
	cmp r1, #0
	beq _0804E8D8
	movs r1, #0
	adds r0, r3, #0
	ands r0, r4
	cmp r0, #0
	bne _0804E87A
	movs r1, #1
_0804E87A:
	cmp r1, #0
	beq _0804E8D8
	movs r1, #0
	mov r0, ip
	ands r0, r4
	cmp r0, #0
	bne _0804E88A
	movs r1, #1
_0804E88A:
	cmp r1, #0
	beq _0804E8D8
	movs r1, #0
	adds r0, r6, #0
	ands r0, r4
	cmp r0, #0
	bne _0804E89A
	movs r1, #1
_0804E89A:
	cmp r1, #0
	beq _0804E8D8
	lsrs r6, r6, #3
	lsrs r0, r3, #3
	muls r0, r2, r0
	lsrs r1, r5, #3
	adds r0, r0, r1
	lsls r0, r0, #5
	mov r1, r8
	adds r5, r1, r0
	lsls r7, r2, #5
	ldr r4, _0804E8E8 @ =0x3FFFFFF8
	mov r2, ip
	ands r4, r2
	ldr r0, _0804E8EC @ =0x001FFFFF
	ands r4, r0
	movs r0, #0x80
	lsls r0, r0, #0x11
	mov r8, r0
_0804E8C0:
	mov r1, sb
	str r1, [sp]
	mov r0, sp
	adds r1, r5, #0
	mov r2, r8
	orrs r2, r4
	bl func_080D374C
	adds r5, r5, r7
	subs r6, #1
	cmp r6, #0
	bne _0804E8C0
_0804E8D8:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804E8E8: .4byte 0x3FFFFFF8
_0804E8EC: .4byte 0x001FFFFF

	thumb_func_start func_0804E8F0
func_0804E8F0: @ 0x0804E8F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov r8, r0
	mov sl, r1
	adds r4, r2, #0
	mov sb, r3
	ldr r6, [sp, #0x24]
	lsls r0, r0, #0x10
	lsrs r7, r0, #0xd
	movs r5, #0
	ldrb r0, [r6]
	b _0804E93E
_0804E910:
	orrs r5, r0
	str r5, [sp]
	mov r0, r8
	mov r1, sl
	adds r2, r4, #0
	mov r3, sb
	bl func_0804E4AC
	cmp r0, #1
	beq _0804E92E
	cmp r0, #1
	blo _0804E938
	cmp r0, #2
	beq _0804E934
	b _0804E946
_0804E92E:
	movs r5, #0
	adds r4, #8
	b _0804E938
_0804E934:
	movs r5, #0
	adds r4, #0x10
_0804E938:
	adds r6, #1
	ldrb r0, [r6]
	lsls r5, r5, #8
_0804E93E:
	cmp r0, #0
	beq _0804E946
	cmp r4, r7
	blo _0804E910
_0804E946:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0804E958
func_0804E958: @ 0x0804E958
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov r8, r0
	mov sl, r1
	adds r4, r2, #0
	mov sb, r3
	ldr r6, [sp, #0x2c]
	lsls r0, r0, #0x10
	lsrs r7, r0, #0xd
	movs r5, #0
	ldrb r0, [r6]
	b _0804E9AE
_0804E978:
	orrs r5, r0
	str r5, [sp]
	ldr r0, [sp, #0x30]
	str r0, [sp, #4]
	ldr r1, [sp, #0x34]
	str r1, [sp, #8]
	mov r0, r8
	mov r1, sl
	adds r2, r4, #0
	mov r3, sb
	bl func_0804E5AC
	cmp r0, #1
	beq _0804E99E
	cmp r0, #1
	blo _0804E9A8
	cmp r0, #2
	beq _0804E9A4
	b _0804E9B6
_0804E99E:
	movs r5, #0
	adds r4, #8
	b _0804E9A8
_0804E9A4:
	movs r5, #0
	adds r4, #0x10
_0804E9A8:
	adds r6, #1
	ldrb r0, [r6]
	lsls r5, r5, #8
_0804E9AE:
	cmp r0, #0
	beq _0804E9B6
	cmp r4, r7
	blo _0804E978
_0804E9B6:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0804E9C8
func_0804E9C8: @ 0x0804E9C8
	movs r0, #0
	bx lr

	thumb_func_start func_0804E9CC
func_0804E9CC: @ 0x0804E9CC
	movs r0, #0
	bx lr
_0804E9D0:
	.byte 0x00, 0xB5, 0x13, 0x1C, 0x02, 0x04, 0x12, 0x0C, 0x00, 0x0C, 0x42, 0x43, 0x52, 0x01, 0x92, 0x08
	.byte 0x03, 0x48, 0x02, 0x40, 0x18, 0x1C, 0x84, 0xF0, 0xB1, 0xFE, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
	.byte 0xFF, 0xFF, 0x1F, 0x00

	thumb_func_start func_0804E9F4
func_0804E9F4: @ 0x0804E9F4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	mov ip, r2
	mov r8, r3
	ldr r0, [sp, #0x20]
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	adds r6, r4, #0
	movs r1, #0
	cmp r1, r8
	bhs _0804EA48
	ldr r0, [sp, #0x24]
	lsls r0, r0, #1
	mov sb, r0
_0804EA1E:
	movs r2, #0
	adds r7, r1, #1
	cmp r2, ip
	bhs _0804EA3E
	mov r0, sl
	lsls r3, r0, #0xc
_0804EA2A:
	adds r1, r5, #0
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	orrs r1, r3
	strh r1, [r4]
	adds r4, #2
	adds r2, #1
	cmp r2, ip
	blo _0804EA2A
_0804EA3E:
	add r6, sb
	adds r4, r6, #0
	adds r1, r7, #0
	cmp r1, r8
	blo _0804EA1E
_0804EA48:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0804EA58
func_0804EA58: @ 0x0804EA58
	push {r4, r5, r6, r7, lr}
	ldr r5, [sp, #0x14]
	ldr r6, [sp, #0x18]
	ldr r7, [sp, #0x1c]
	movs r4, #0
	str r4, [r0]
	str r4, [r0, #4]
	ldr r4, _0804EA7C @ =vtable_unk_080E7868
	str r4, [r0, #8]
	str r1, [r0, #0xc]
	strh r2, [r0, #0x12]
	str r3, [r0, #0x14]
	str r5, [r0, #0x18]
	strh r6, [r0, #0x10]
	str r7, [r0, #0x1c]
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0804EA7C: .4byte vtable_unk_080E7868

	thumb_func_start func_0804EA80
func_0804EA80: @ 0x0804EA80
	push {lr}
	ldr r2, _0804EA90 @ =vtable_unk_080E7868
	str r2, [r0, #8]
	bl func_080098AC
	pop {r0}
	bx r0
	.align 2, 0
_0804EA90: .4byte vtable_unk_080E7868

	thumb_func_start func_0804EA94
func_0804EA94: @ 0x0804EA94
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r7, [sp, #0x1c]
	movs r4, #0
	movs r5, #0
	str r4, [sp]
	str r5, [sp, #4]
	movs r4, #0x80
	lsls r4, r4, #5
	ldr r6, [sp]
	orrs r6, r4
	str r6, [sp]
	mov r4, sp
	ldrb r4, [r4]
	adds r4, r4, r2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r5, _0804EB44 @ =0xFFFFFF00
	ands r5, r6
	orrs r5, r4
	lsls r2, r5, #7
	lsrs r2, r2, #0x17
	adds r2, r2, r1
	ldr r1, _0804EB48 @ =0x000001FF
	ands r2, r1
	lsls r2, r2, #0x10
	ldr r6, _0804EB4C @ =0xFE00FFFF
	ands r6, r5
	orrs r6, r2
	ldr r2, [sp, #4]
	lsls r1, r2, #0x16
	lsrs r1, r1, #0x16
	adds r1, r1, r3
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldr r3, _0804EB50 @ =0xFFFFFC00
	ands r3, r2
	orrs r3, r1
	lsls r1, r3, #0x10
	lsrs r1, r1, #0x1c
	adds r1, r1, r7
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r2, #0xf
	ands r1, r2
	lsls r1, r1, #0xc
	ldr r4, _0804EB54 @ =0xFFFF0FFF
	ands r4, r3
	orrs r4, r1
	lsls r1, r4, #0x14
	lsrs r1, r1, #0x1e
	ldr r2, [sp, #0x20]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r3, #3
	ands r1, r3
	lsls r1, r1, #0xa
	ldr r2, _0804EB58 @ =0xFFFFF3FF
	ands r2, r4
	orrs r2, r1
	str r2, [sp, #4]
	lsls r1, r6, #0x10
	lsrs r1, r1, #0x1e
	ldr r4, [sp, #0x28]
	adds r1, r1, r4
	ands r1, r3
	lsls r1, r1, #0xe
	ldr r3, _0804EB5C @ =0xFFFF3FFF
	ands r3, r6
	orrs r3, r1
	lsrs r2, r3, #0x1e
	ldr r1, [sp, #0x24]
	adds r2, r2, r1
	lsls r2, r2, #0x1e
	ldr r1, _0804EB60 @ =0x3FFFFFFF
	ands r1, r3
	orrs r1, r2
	str r1, [sp]
	ldr r1, [sp]
	ldr r2, [sp, #4]
	str r1, [r0]
	str r2, [r0, #4]
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r2}
	bx r2
	.align 2, 0
_0804EB44: .4byte 0xFFFFFF00
_0804EB48: .4byte 0x000001FF
_0804EB4C: .4byte 0xFE00FFFF
_0804EB50: .4byte 0xFFFFFC00
_0804EB54: .4byte 0xFFFF0FFF
_0804EB58: .4byte 0xFFFFF3FF
_0804EB5C: .4byte 0xFFFF3FFF
_0804EB60: .4byte 0x3FFFFFFF
_0804EB64:
	.byte 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x87, 0xB0
	.byte 0x06, 0x1C, 0x89, 0x46, 0x17, 0x1C, 0x00, 0x2F, 0x44, 0xD0, 0x00, 0x20, 0x82, 0x46, 0x00, 0x2E
	.byte 0x02, 0xDA, 0x76, 0x42, 0x01, 0x21, 0x8A, 0x46, 0x00, 0x25, 0x68, 0x46, 0xC0, 0x19, 0x06, 0x90
	.byte 0xBD, 0x42, 0x1E, 0xD2, 0x03, 0xA9, 0x88, 0x46, 0x40, 0x46, 0x44, 0x19, 0x30, 0x1C, 0x0A, 0x21
	.byte 0x82, 0xF0, 0x96, 0xF9, 0x30, 0x30, 0x20, 0x70, 0x30, 0x1C, 0x0A, 0x21, 0x82, 0xF0, 0x8C, 0xF9
	.byte 0x06, 0x1C, 0x00, 0x2E, 0x0A, 0xD1, 0x01, 0x35, 0xBD, 0x42, 0x0A, 0xD2, 0x44, 0x46, 0x20, 0x21
	.byte 0x60, 0x19, 0x01, 0x70, 0x01, 0x35, 0xBD, 0x42, 0xFA, 0xD3, 0x02, 0xE0, 0x01, 0x35, 0xBD, 0x42
	.byte 0xE2, 0xD3, 0x51, 0x46, 0x00, 0x29, 0x03, 0xD0, 0x03, 0xA8, 0x40, 0x19, 0x2D, 0x21, 0x01, 0x70
	.byte 0x00, 0x22, 0xBA, 0x42, 0x0A, 0xD2, 0x03, 0xAB, 0x68, 0x46, 0x01, 0x38, 0x39, 0x18, 0x98, 0x18
	.byte 0x00, 0x78, 0x08, 0x70, 0x01, 0x39, 0x01, 0x32, 0xBA, 0x42, 0xF8, 0xD3, 0x00, 0x20, 0x06, 0x9E
	.byte 0x30, 0x70, 0x0C, 0xE0, 0x32, 0x1C, 0x69, 0x46, 0x00, 0x2A, 0x03, 0xDA, 0x2D, 0x20, 0x08, 0x70
	.byte 0x01, 0x31, 0x52, 0x42, 0x10, 0x1C, 0x92, 0xF0, 0x71, 0xF9, 0x68, 0x46, 0x87, 0x72, 0x6A, 0x46
	.byte 0x01, 0x4D, 0x02, 0x4C, 0x02, 0x4B, 0x0D, 0xE0, 0x78, 0x9E, 0x0F, 0x08, 0x28, 0x9F, 0x0F, 0x08
	.byte 0x2C, 0x9F, 0x0F, 0x08, 0x08, 0x78, 0x4E, 0x46, 0x30, 0x70, 0x48, 0x78, 0x70, 0x70, 0x02, 0x20
	.byte 0x81, 0x44, 0x01, 0x32, 0x11, 0x78, 0x00, 0x29, 0x11, 0xD0, 0x08, 0x1C, 0x30, 0x38, 0x00, 0x06
	.byte 0x00, 0x0E, 0x09, 0x28, 0x03, 0xD8, 0x48, 0x00, 0x40, 0x18, 0x41, 0x19, 0xEA, 0xE7, 0x20, 0x29
	.byte 0x01, 0xD1, 0x21, 0x1C, 0xE6, 0xE7, 0x2D, 0x29, 0x01, 0xD1, 0x19, 0x1C, 0xE2, 0xE7, 0x00, 0x20
	.byte 0x49, 0x46, 0x08, 0x70, 0x07, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC
	.byte 0x01, 0xBC, 0x00, 0x47

	thumb_func_start func_0804EC84
func_0804EC84: @ 0x0804EC84
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r7, r1, #0
	mov r8, r2
	lsrs r1, r0, #0x1f
	mov sb, r1
	movs r4, #0
	adds r5, r0, #0
	cmp r5, #0
	bge _0804ECA0
	rsbs r5, r5, #0
_0804ECA0:
	movs r6, #1
_0804ECA2:
	add r4, sp
	adds r0, r5, #0
	movs r1, #0xa
	bl __modsi3
	adds r0, #0x30
	strb r0, [r4]
	adds r4, r6, #0
	adds r0, r5, #0
	movs r1, #0xa
	bl __divsi3
	adds r5, r0, #0
	cmp r5, #0
	ble _0804ECC8
	adds r0, r4, #1
	adds r6, r0, #0
	cmp r6, #0xa
	bls _0804ECA2
_0804ECC8:
	mov r2, r8
	cmp r2, #0
	beq _0804ECE8
	cmp r8, r4
	bhs _0804ECD6
	mov r4, r8
	b _0804ECE8
_0804ECD6:
	cmp r8, r4
	bls _0804ECE8
	movs r1, #0x20
_0804ECDC:
	mov r2, sp
	adds r0, r2, r4
	strb r1, [r0]
	adds r4, #1
	cmp r8, r4
	bhi _0804ECDC
_0804ECE8:
	mov r0, sb
	cmp r0, #0
	beq _0804ECF8
	mov r2, sp
	adds r1, r2, r4
	movs r0, #0x2d
	strb r0, [r1]
	adds r4, #1
_0804ECF8:
	subs r4, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r4, r0
	beq _0804ED14
	adds r1, r0, #0
_0804ED04:
	mov r2, sp
	adds r0, r2, r4
	ldrb r0, [r0]
	strb r0, [r7]
	adds r7, #1
	subs r4, #1
	cmp r4, r1
	bne _0804ED04
_0804ED14:
	movs r0, #0
	strb r0, [r7]
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0804ED28
func_0804ED28: @ 0x0804ED28
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	lsls r3, r3, #0x10
	adds r5, r1, #0
	lsrs r6, r3, #4
_0804ED36:
	adds r0, r4, #0
	movs r1, #0xa
	bl func_080D0EDA
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #1
	subs r2, r4, r2
	lsls r2, r2, #2
	adds r2, r7, r2
	adds r1, r2, #1
	orrs r1, r6
	strh r1, [r5]
	subs r3, r5, #2
	adds r1, r6, #0
	orrs r1, r2
	strh r1, [r3]
	ldr r1, [sp, #0x14]
	lsls r3, r1, #1
	adds r3, r3, r5
	adds r1, r2, #3
	orrs r1, r6
	strh r1, [r3]
	subs r3, #2
	adds r2, #2
	orrs r2, r6
	strh r2, [r3]
	adds r4, r0, #0
	subs r5, #4
	cmp r4, #0
	bne _0804ED36
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804ED7C:
	.byte 0x70, 0xB5, 0x04, 0x9D
	.byte 0x05, 0x9E, 0x00, 0x24, 0x04, 0x60, 0x44, 0x60, 0x04, 0x4C, 0x84, 0x60, 0xC1, 0x60, 0x02, 0x61
	.byte 0x83, 0x82, 0xC5, 0x82, 0x86, 0x61, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x58, 0x78, 0x0E, 0x08

	thumb_func_start func_0804EDA0
func_0804EDA0: @ 0x0804EDA0
	push {lr}
	ldr r2, _0804EDB0 @ =vtable_unk_080E7858
	str r2, [r0, #8]
	bl func_080098AC
	pop {r0}
	bx r0
	.align 2, 0
_0804EDB0: .4byte vtable_unk_080E7858

	thumb_func_start func_0804EDB4
func_0804EDB4: @ 0x0804EDB4
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	lsls r3, r3, #0x10
	adds r5, r1, #0
	lsrs r6, r3, #4
_0804EDC2:
	adds r0, r4, #0
	movs r1, #0xa
	bl func_080D0EDA
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #1
	subs r1, r4, r1
	lsls r1, r1, #1
	adds r1, r7, r1
	adds r2, r6, #0
	orrs r2, r1
	strh r2, [r5]
	ldr r3, [sp, #0x14]
	lsls r2, r3, #1
	adds r2, r2, r5
	adds r1, #1
	orrs r1, r6
	strh r1, [r2]
	adds r4, r0, #0
	subs r5, #2
	cmp r4, #0
	bne _0804EDC2
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804EDF8:
	.byte 0x70, 0xB5, 0x04, 0x9D, 0x05, 0x9E, 0x00, 0x24
	.byte 0x04, 0x60, 0x44, 0x60, 0x04, 0x4C, 0x84, 0x60, 0xC1, 0x60, 0x02, 0x61, 0x83, 0x82, 0xC5, 0x82
	.byte 0x86, 0x61, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x48, 0x78, 0x0E, 0x08

	thumb_func_start func_0804EE1C
func_0804EE1C: @ 0x0804EE1C
	push {lr}
	ldr r2, _0804EE2C @ =vtable_unk_080E7848
	str r2, [r0, #8]
	bl func_080098AC
	pop {r0}
	bx r0
	.align 2, 0
_0804EE2C: .4byte vtable_unk_080E7848

	thumb_func_start func_0804EE30
func_0804EE30: @ 0x0804EE30
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	lsls r3, r3, #0x10
	adds r5, r1, #0
	lsrs r6, r3, #4
_0804EE3E:
	adds r0, r4, #0
	movs r1, #0xa
	bl func_080D0EDA
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #1
	subs r1, r4, r1
	adds r1, r7, r1
	orrs r1, r6
	strh r1, [r5]
	adds r4, r0, #0
	subs r5, #2
	cmp r4, #0
	bne _0804EE3E
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0804EE64
func_0804EE64: @ 0x0804EE64
	push {r4, r5, r6, lr}
	ldr r5, [sp, #0x10]
	ldr r6, [sp, #0x14]
	movs r4, #0
	str r4, [r0]
	str r4, [r0, #4]
	ldr r4, _0804EE84 @ =vtable_unk_080E7838
	str r4, [r0, #8]
	str r1, [r0, #0xc]
	str r2, [r0, #0x10]
	strh r3, [r0, #0x14]
	strh r5, [r0, #0x16]
	str r6, [r0, #0x18]
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0804EE84: .4byte vtable_unk_080E7838

	thumb_func_start func_0804EE88
func_0804EE88: @ 0x0804EE88
	push {lr}
	ldr r2, _0804EE98 @ =vtable_unk_080E7838
	str r2, [r0, #8]
	bl func_080098AC
	pop {r0}
	bx r0
	.align 2, 0
_0804EE98: .4byte vtable_unk_080E7838

	thumb_func_start func_0804EE9C
func_0804EE9C: @ 0x0804EE9C
	push {r4, lr}
	sub sp, #4
	ldr r4, [r0, #0xc]
	ldr r1, [r0, #0x10]
	ldrh r2, [r0, #0x14]
	ldrh r3, [r0, #0x16]
	ldr r0, [r0, #0x18]
	str r0, [sp]
	adds r0, r4, #0
	bl func_0804EE30
	movs r0, #0
	add sp, #4
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start func_0804EEBC
func_0804EEBC: @ 0x0804EEBC
	push {r4, lr}
	sub sp, #4
	ldr r4, [r0, #0xc]
	ldr r1, [r0, #0x10]
	ldrh r2, [r0, #0x14]
	ldrh r3, [r0, #0x16]
	ldr r0, [r0, #0x18]
	str r0, [sp]
	adds r0, r4, #0
	bl func_0804EDB4
	movs r0, #0
	add sp, #4
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start func_0804EEDC
func_0804EEDC: @ 0x0804EEDC
	push {r4, lr}
	sub sp, #4
	ldr r4, [r0, #0xc]
	ldr r1, [r0, #0x10]
	ldrh r2, [r0, #0x14]
	ldrh r3, [r0, #0x16]
	ldr r0, [r0, #0x18]
	str r0, [sp]
	adds r0, r4, #0
	bl func_0804ED28
	movs r0, #0
	add sp, #4
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start func_0804EEFC
func_0804EEFC: @ 0x0804EEFC
	push {r4, r5, lr}
	sub sp, #8
	ldr r5, [r0, #0xc]
	ldrh r1, [r0, #0x12]
	ldr r2, [r0, #0x14]
	ldr r3, [r0, #0x18]
	ldrh r4, [r0, #0x10]
	str r4, [sp]
	ldr r0, [r0, #0x1c]
	str r0, [sp, #4]
	adds r0, r5, #0
	bl func_0804E9F4
	movs r0, #0
	add sp, #8
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0804EF20
func_0804EF20: @ 0x0804EF20
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r4, [r5, #0xc]
	ldr r3, [r5, #0x10]
	ldrb r6, [r5, #0x15]
	movs r0, #0x80
	ands r0, r6
	cmp r0, #0
	beq _0804EF94
	ldrh r0, [r5, #0x14]
	lsls r0, r0, #0x12
	lsrs r0, r0, #0xd
	adds r7, r3, r0
	lsls r0, r6, #0x19
	lsrs r0, r0, #0x1f
	movs r1, #1
	eors r1, r0
	lsls r2, r1, #6
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r0, r6
	orrs r0, r2
	strb r0, [r5, #0x15]
	lsls r1, r1, #2
	ldr r2, _0804EF90 @ =0x0F0F0F0F
	lsls r2, r1
	mvns r1, r2
_0804EF56:
	ldm r4!, {r0}
	ands r0, r2
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r1
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r2
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r1
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r2
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r1
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r2
	stm r3!, {r0}
	ldm r4!, {r0}
	ands r0, r1
	stm r3!, {r0}
	cmp r3, r7
	bne _0804EF56
	movs r0, #1
	b _0804EFA4
	.align 2, 0
_0804EF90: .4byte 0x0F0F0F0F
_0804EF94:
	ldrh r2, [r5, #0x14]
	lsls r2, r2, #0x12
	lsrs r2, r2, #0xf
	adds r0, r4, #0
	adds r1, r3, #0
	bl func_080D374C
	movs r0, #0
_0804EFA4:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0804EFAC
func_0804EFAC: @ 0x0804EFAC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r6, r0, #0
	mov sb, r1
	ldrh r0, [r6, #0x14]
	mov r8, r0
	ldrh r1, [r6, #0x16]
	ldrb r0, [r6, #0x18]
	adds r0, r1, r0
	cmp r0, #2
	ble _0804EFCA
	subs r0, #3
_0804EFCA:
	lsls r0, r0, #2
	adds r0, r0, r6
	ldr r1, [r0, #8]
	mov r2, r8
	lsrs r0, r2, #2
	lsls r0, r0, #4
	adds r7, r1, r0
	movs r0, #3
	ands r2, r0
	cmp r2, #3
	bhi _0804F016
	ldr r1, [r7]
	ands r2, r0
	lsls r2, r2, #3
	add r5, sp, #4
	movs r3, #4
	movs r4, #2
	adds r0, r5, #0
	strh r3, [r0]
	strh r4, [r5, #2]
	ldr r0, [sp, #4]
	adds r1, #4
	mov r3, sb
	str r3, [sp]
	movs r3, #0
	bl func_0804E4AC
	adds r2, r0, #0
	subs r0, r2, #1
	cmp r0, #1
	bhi _0804F012
	ldr r1, [r7, #8]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	strb r0, [r7, #0xc]
_0804F012:
	adds r0, r2, #0
	b _0804F018
_0804F016:
	movs r0, #0
_0804F018:
	cmp r0, #0
	beq _0804F020
	cmp r0, #2
	bls _0804F024
_0804F020:
	movs r0, #0
	b _0804F046
_0804F024:
	add r0, r8
	cmp r0, #0x1b
	bls _0804F030
	movs r1, #0x1c
	bl __umodsi3
_0804F030:
	strh r0, [r6, #0x14]
	mov r0, sb
	cmp r0, #0x20
	beq _0804F042
	ldr r0, _0804F054 @ =0x00008140
	cmp sb, r0
	beq _0804F042
	movs r0, #1
	strb r0, [r6, #0x1b]
_0804F042:
	movs r0, #1
	strb r0, [r6, #0x1a]
_0804F046:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0804F054: .4byte 0x00008140
_0804F058:
	.byte 0x00, 0x21, 0x81, 0x82, 0x70, 0x47, 0x00, 0x00

	thumb_func_start func_0804F060
func_0804F060: @ 0x0804F060
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	ldrh r0, [r5, #0x16]
	cmp r0, #1
	bhi _0804F078
	adds r0, #1
	strh r0, [r5, #0x16]
	b _0804F0D2
_0804F078:
	ldrb r0, [r5, #0x18]
	adds r0, #1
	strb r0, [r5, #0x18]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _0804F08A
	movs r0, #0
	strb r0, [r5, #0x18]
_0804F08A:
	ldrb r1, [r5, #0x18]
	adds r0, r1, #2
	cmp r0, #2
	ble _0804F094
	subs r0, r1, #1
_0804F094:
	lsls r0, r0, #2
	adds r0, r0, r5
	mov r6, sp
	movs r1, #4
	mov sb, r1
	movs r1, #2
	mov r8, r1
	ldr r4, [r0, #8]
	movs r7, #6
_0804F0A6:
	ldr r1, [r4]
	mov r0, sb
	strh r0, [r6]
	mov r0, r8
	strh r0, [r6, #2]
	ldr r0, [sp]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	ldr r1, [r4, #8]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	strb r0, [r4, #0xc]
	adds r4, #0x10
	subs r7, #1
	cmp r7, #0
	bge _0804F0A6
	movs r0, #1
	strb r0, [r5, #0x19]
	strb r0, [r5, #0x1a]
_0804F0D2:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0804F0E0
func_0804F0E0: @ 0x0804F0E0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r3, r0, #0
	movs r1, #0
	mov r8, sp
	movs r0, #2
	mov sl, r0
_0804F0F6:
	movs r7, #0
	lsls r0, r1, #2
	adds r1, #1
	mov sb, r1
	adds r6, r0, r3
	adds r6, #8
_0804F102:
	ldr r5, [r6]
	lsls r0, r7, #4
	adds r5, r5, r0
	adds r4, r5, #0
	ldm r4!, {r1}
	movs r0, #4
	mov r2, r8
	strh r0, [r2]
	mov r0, sl
	strh r0, [r2, #2]
	ldr r0, [sp]
	adds r1, #4
	movs r2, #0
	str r3, [sp, #4]
	bl func_0804E7A0
	ldr r1, [r4, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	strb r0, [r5, #0xc]
	adds r7, #1
	ldr r3, [sp, #4]
	cmp r7, #6
	ble _0804F102
	mov r1, sb
	cmp r1, #2
	ble _0804F0F6
	movs r0, #0
	movs r1, #0
	strh r1, [r3, #0x16]
	strh r1, [r3, #0x14]
	movs r1, #1
	strb r1, [r3, #0x19]
	strb r1, [r3, #0x1a]
	strb r0, [r3, #0x1b]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0804F15C
func_0804F15C: @ 0x0804F15C
	ldrb r0, [r0, #0x19]
	bx lr

	thumb_func_start func_0804F160
func_0804F160: @ 0x0804F160
	push {lr}
	ldrb r0, [r0, #4]
	adds r1, r0, #0
	cmp r0, #0
	beq _0804F16C
	movs r1, #1
_0804F16C:
	adds r0, r1, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0804F174
func_0804F174: @ 0x0804F174
	movs r0, #1
	bx lr

	thumb_func_start func_0804F178
func_0804F178: @ 0x0804F178
	push {lr}
	adds r1, r0, #0
	movs r2, #0
	ldrb r0, [r1, #8]
	cmp r0, #0
	beq _0804F194
	ldrb r0, [r1, #4]
	adds r1, r0, #0
	cmp r0, #0
	beq _0804F18E
	movs r1, #1
_0804F18E:
	cmp r1, #0
	beq _0804F194
	movs r2, #1
_0804F194:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0804F19C
func_0804F19C: @ 0x0804F19C
	push {r4, r5, lr}
	sub sp, #0x60
	adds r5, r0, #0
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #0x11
	lsrs r2, r2, #0x16
	adds r2, #3
	ldr r1, _0804F270 @ =0x000003FF
	adds r0, r1, #0
	ands r2, r0
	ldr r0, [r5, #0xc]
	lsls r0, r0, #0xd
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0xc
	orrs r2, r0
	lsls r0, r2, #0x10
	orrs r2, r0
	ldrb r1, [r5, #0xc]
	lsls r1, r1, #0x1b
	lsrs r1, r1, #0x10
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r1, r1, r4
	str r2, [sp, #0xc]
	add r0, sp, #0xc
	ldr r2, _0804F274 @ =0x010000A0
	bl func_080D374C
	ldrb r0, [r5, #0xc]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x10
	adds r0, r0, r4
	movs r1, #3
	str r1, [sp]
	ldrh r1, [r5, #0xc]
	lsls r1, r1, #0x11
	lsrs r1, r1, #0x16
	str r1, [sp, #4]
	ldr r1, [r5, #0xc]
	lsls r1, r1, #0xd
	lsrs r1, r1, #0x1c
	str r1, [sp, #8]
	movs r1, #0x10
	movs r2, #0
	movs r3, #0xe
	bl func_08051320
	ldrb r0, [r5, #0xc]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x10
	adds r0, r0, r4
	movs r1, #7
	str r1, [sp]
	ldrh r1, [r5, #0xc]
	lsls r1, r1, #0x11
	lsrs r1, r1, #0x16
	str r1, [sp, #4]
	ldr r1, [r5, #0xc]
	lsls r1, r1, #0xd
	lsrs r1, r1, #0x1c
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #3
	movs r3, #0x1e
	bl func_08051320
	ldr r1, [r5, #0xc]
	lsls r1, r1, #0xd
	lsrs r1, r1, #0x1c
	ldr r0, _0804F278 @ =0x080F9F78
	ldr r0, [r0]
	lsls r1, r1, #5
	movs r2, #0xa0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	movs r2, #8
	bl func_080D374C
	add r4, sp, #0x30
	ldr r1, _0804F27C @ =0x08728208
	adds r0, r4, #0
	bl func_0805E6CC
	add r0, sp, #0x10
	adds r1, r4, #0
	movs r2, #0
	bl func_0805E790
	ldr r0, [sp, #0x20]
	ldrb r1, [r5, #0xe]
	lsls r1, r1, #0x19
	lsrs r1, r1, #0x1c
	lsls r1, r1, #5
	ldr r2, _0804F280 @ =0x05000200
	adds r1, r1, r2
	movs r2, #8
	bl func_080D374C
	ldr r0, _0804F284 @ =vtable_unk_080E5A28
	str r0, [sp, #0x30]
	movs r0, #0
	add sp, #0x60
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0804F270: .4byte 0x000003FF
_0804F274: .4byte 0x010000A0
_0804F278: .4byte 0x080F9F78
_0804F27C: .4byte 0x08728208
_0804F280: .4byte 0x05000200
_0804F284: .4byte vtable_unk_080E5A28

	thumb_func_start func_0804F288
func_0804F288: @ 0x0804F288
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	mov r8, r0
	movs r0, #3
	ands r1, r0
	mov r0, r8
	ldrb r4, [r0]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r4
	orrs r0, r1
	movs r4, #0x1f
	adds r1, r2, #0
	ands r1, r4
	lsls r1, r1, #2
	movs r4, #0x7d
	rsbs r4, r4, #0
	ands r0, r4
	orrs r0, r1
	mov r1, r8
	strb r0, [r1]
	lsrs r1, r2, #3
	movs r0, #3
	ands r1, r0
	lsls r1, r1, #7
	mov r0, r8
	ldrh r4, [r0]
	ldr r0, _0804F64C @ =0xFFFFFE7F
	ands r0, r4
	orrs r0, r1
	mov r1, r8
	strh r0, [r1]
	movs r0, #7
	ands r0, r2
	lsls r0, r0, #6
	adds r0, #0x14
	lsls r0, r0, #9
	ldr r1, [r1]
	ldr r2, _0804F650 @ =0xFFF801FF
	ands r1, r2
	orrs r1, r0
	mov r2, r8
	str r1, [r2]
	movs r0, #0xf
	ands r3, r0
	lsls r3, r3, #3
	ldrb r1, [r2, #2]
	movs r0, #0x79
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r3
	strb r0, [r2, #2]
	ldr r0, [sp, #0x40]
	str r0, [r2, #4]
	movs r4, #0
	str r4, [r2, #8]
	strb r4, [r2, #0xc]
	movs r0, #1
	strb r0, [r2, #0xd]
	mov r5, r8
	adds r5, #0x10
	adds r0, r5, #0
	ldr r1, [sp, #0x48]
	bl func_08007770
	mov r0, r8
	adds r0, #0x18
	ldr r1, [sp, #0x44]
	movs r2, #2
	bl func_080083D0
	mov r2, r8
	adds r2, #0x20
	mov r1, r8
	str r4, [r1, #0x20]
	str r4, [r2, #4]
	ldr r0, _0804F654 @ =vtable_unk_080E5BB4
	str r0, [r2, #8]
	adds r1, #0x30
	str r1, [r2, #0xc]
	mov r0, r8
	str r4, [r0, #0x30]
	str r4, [r1, #4]
	ldr r0, _0804F658 @ =vtable_unk_080E5BD8
	str r0, [r1, #8]
	mov r0, r8
	adds r0, #0x2c
	str r0, [r2, #0x10]
	str r1, [r2, #0x14]
	adds r2, #0x1c
	mov r1, r8
	str r4, [r1, #0x3c]
	adds r0, #0x94
	str r4, [r0]
	str r4, [r0, #4]
	ldr r1, _0804F65C @ =vtable_unk_080E7898
	str r1, [r0, #8]
	str r2, [r0, #0xc]
	movs r2, #0xd0
	add r2, r8
	mov sl, r2
	ldr r0, _0804F660 @ =vtable_unk_080E78C0
	str r0, [r2]
	str r5, [r2, #4]
	mov r1, r8
	adds r1, #0xd8
	movs r0, #2
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_0804F36C:
	stm r1!, {r3}
	subs r0, #1
	cmp r0, r2
	bne _0804F36C
	movs r1, #0
	movs r0, #0
	mov r2, sl
	strh r0, [r2, #0x14]
	strh r0, [r2, #0x16]
	strb r1, [r2, #0x18]
	strb r1, [r2, #0x19]
	strb r1, [r2, #0x1a]
	strb r1, [r2, #0x1b]
	movs r4, #0
	mov r0, r8
	adds r0, #0x10
	str r0, [sp, #0x18]
	mov r1, r8
	adds r1, #0xd0
	str r1, [sp, #0x10]
	mov r2, r8
	adds r2, #0xec
	str r2, [sp, #0x14]
_0804F39A:
	movs r0, #0x70
	bl __builtin_new
	mov sb, r0
	mov r5, sb
	movs r6, #6
	lsls r0, r4, #2
	str r0, [sp, #0xc]
	adds r4, #1
	str r4, [sp, #0x1c]
_0804F3AE:
	movs r0, #0x82
	lsls r0, r0, #1
	bl __builtin_new
	adds r4, r5, #0
	stm r4!, {r0}
	adds r0, r4, #0
	bl func_08007874
	movs r1, #0
	str r1, [r4, #4]
	strb r1, [r5, #0xc]
	adds r5, #0x10
	subs r6, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r6, r0
	bne _0804F3AE
	ldr r7, [sp, #0xc]
	add r7, sl
	adds r7, #8
	ldr r6, [r7]
	cmp sb, r6
	beq _0804F40E
	cmp r6, #0
	beq _0804F40E
	adds r5, r6, #0
	adds r5, #0x70
	cmp r6, r5
	beq _0804F408
_0804F3EA:
	subs r5, #0x10
	adds r4, r5, #4
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	ldr r0, [r5]
	bl __builtin_delete
	cmp r6, r5
	bne _0804F3EA
_0804F408:
	adds r0, r6, #0
	bl __builtin_delete
_0804F40E:
	mov r2, sb
	str r2, [r7]
	movs r0, #0
	mov sb, r0
	ldr r6, [sp, #0xc]
	add r6, sl
	adds r6, #8
	add r7, sp, #8
_0804F41E:
	ldr r1, [r6]
	mov r2, sb
	lsls r0, r2, #4
	adds r5, r1, r0
	mov r0, sp
	ldr r1, [sp, #0x44]
	movs r2, #3
	bl func_080083D0
	adds r4, r5, #4
	cmp sp, r4
	beq _0804F448
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	ldr r1, [sp, #4]
	adds r0, r4, #0
	bl func_08007CD8
	str r0, [r4, #4]
_0804F448:
	ldr r1, [sp, #4]
	mov r0, sp
	bl func_08007C28
	mov r0, sp
	movs r1, #2
	bl func_080079E8
	ldr r1, [r4, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	cmp r0, #0
	beq _0804F47A
	ldr r1, [r5]
	movs r0, #4
	movs r2, #2
	strh r0, [r7]
	strh r2, [r7, #2]
	ldr r0, [sp, #8]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	movs r0, #1
_0804F47A:
	strb r0, [r5, #0xc]
	movs r0, #1
	add sb, r0
	mov r1, sb
	cmp r1, #6
	ble _0804F41E
	ldr r4, [sp, #0x1c]
	cmp r4, #2
	ble _0804F39A
	movs r7, #0
	mov r2, sl
	strb r0, [r2, #0x1a]
	ldr r0, [sp, #0x14]
	bl func_080ADD44
	movs r0, #0x90
	lsls r0, r0, #1
	add r0, r8
	str r7, [r0]
	str r7, [r0, #4]
	ldr r1, _0804F664 @ =vtable_unk_080E7888
	str r1, [r0, #8]
	ldr r1, [sp, #0x10]
	str r1, [r0, #0xc]
	mov r2, r8
	ldrh r0, [r2]
	lsls r0, r0, #0x17
	lsrs r1, r0, #0x1e
	ldr r0, [r2]
	lsls r0, r0, #0xd
	lsrs r5, r0, #0x16
	ldr r0, _0804F668 @ =0x080F9F74
	ldr r0, [r0]
	lsrs r6, r0, #5
	movs r4, #0
	ldr r0, [sp, #0x40]
	cmp r0, #1
	bne _0804F4C8
	movs r4, #1
_0804F4C8:
	movs r2, #0x98
	lsls r2, r2, #1
	add r2, r8
	ldr r0, _0804F66C @ =0x080F9F70
	ldr r3, [r0]
	lsls r1, r1, #0xe
	lsls r0, r5, #5
	adds r1, r1, r0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	str r7, [r2]
	str r7, [r2, #4]
	ldr r0, _0804F670 @ =vtable_unk_080E78E0
	str r0, [r2, #8]
	str r3, [r2, #0xc]
	str r1, [r2, #0x10]
	ldr r1, _0804F674 @ =0x00003FFF
	adds r0, r1, #0
	adds r1, r6, #0
	ands r1, r0
	ldrh r3, [r2, #0x14]
	ldr r0, _0804F678 @ =0xFFFFC000
	ands r0, r3
	orrs r0, r1
	strh r0, [r2, #0x14]
	ldrb r1, [r2, #0x15]
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r0, r1
	lsls r3, r4, #7
	movs r1, #0x7f
	ands r0, r1
	orrs r0, r3
	strb r0, [r2, #0x15]
	mov r2, r8
	ldrb r6, [r2]
	lsls r6, r6, #0x19
	lsrs r6, r6, #0x1b
	ldr r4, [r2]
	lsls r4, r4, #0xd
	lsrs r4, r4, #0x16
	ldrb r5, [r2, #2]
	lsls r5, r5, #0x19
	lsrs r5, r5, #0x1c
	ldr r0, [sp, #0x18]
	ldr r1, [r0, #4]
	bl func_080074C0
	movs r3, #0xa4
	lsls r3, r3, #1
	add r3, r8
	str r7, [r3]
	str r7, [r3, #4]
	ldr r1, _0804F67C @ =vtable_unk_080E7878
	str r1, [r3, #8]
	ldrb r2, [r3, #0xc]
	movs r1, #0x20
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r6
	strb r1, [r3, #0xc]
	lsls r4, r4, #5
	ldrh r2, [r3, #0xc]
	ldr r1, _0804F680 @ =0xFFFF801F
	ands r1, r2
	orrs r1, r4
	strh r1, [r3, #0xc]
	lsls r5, r5, #0xf
	ldr r1, [r3, #0xc]
	ldr r2, _0804F684 @ =0xFFF87FFF
	ands r1, r2
	orrs r1, r5
	str r1, [r3, #0xc]
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #3
	ldrb r2, [r3, #0xe]
	movs r1, #0x79
	rsbs r1, r1, #0
	ands r1, r2
	orrs r1, r0
	strb r1, [r3, #0xe]
	movs r0, #0xac
	lsls r0, r0, #1
	add r0, r8
	str r7, [r0]
	movs r0, #0xb0
	lsls r0, r0, #1
	add r0, r8
	ldr r1, _0804F688 @ =0x08728208
	bl func_0805E6CC
	movs r4, #0xc8
	lsls r4, r4, #1
	add r4, r8
	ldr r1, _0804F68C @ =0x0872937C
	adds r0, r4, #0
	bl func_0805E6CC
	movs r0, #0xe0
	lsls r0, r0, #1
	add r0, r8
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r4, #0
	movs r2, #0
	bl func_0805E824
	movs r0, #0xea
	lsls r0, r0, #1
	add r0, r8
	ldr r1, [sp, #0x44]
	movs r2, #7
	bl func_080083D0
	movs r2, #0xee
	lsls r2, r2, #1
	add r2, r8
	ldrb r1, [r2]
	movs r4, #2
	rsbs r4, r4, #0
	adds r0, r4, #0
	ands r0, r1
	movs r5, #3
	rsbs r5, r5, #0
	ands r0, r5
	strb r0, [r2]
	movs r0, #0xf2
	lsls r0, r0, #1
	add r0, r8
	bl func_080ADC00
	movs r0, #0xf4
	lsls r0, r0, #1
	add r0, r8
	ldr r1, [sp, #0x48]
	bl func_08007770
	movs r1, #0xf8
	lsls r1, r1, #1
	add r1, r8
	ldrb r0, [r1]
	ands r4, r0
	ands r4, r5
	strb r4, [r1]
	movs r0, #2
	movs r1, #1
	rsbs r1, r1, #0
_0804F5F2:
	subs r0, #1
	cmp r0, r1
	bne _0804F5F2
	movs r1, #0xa0
	lsls r1, r1, #3
	add r1, r8
	movs r0, #0
	strb r0, [r1]
	ldr r4, _0804F690 @ =0x00000504
	add r4, r8
	ldr r1, _0804F694 @ =0x08728320
	adds r0, r4, #0
	bl func_0805E6CC
	ldr r0, _0804F698 @ =0x00000534
	add r0, r8
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r4, #0
	movs r2, #0
	bl func_0805E824
	movs r0, #0xa9
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [sp, #0x48]
	bl func_08007770
	movs r2, #0xaa
	lsls r2, r2, #3
	add r2, r8
	ldrb r0, [r2]
	movs r1, #0x3f
	orrs r0, r1
	strb r0, [r2]
	mov r0, r8
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0804F64C: .4byte 0xFFFFFE7F
_0804F650: .4byte 0xFFF801FF
_0804F654: .4byte vtable_unk_080E5BB4
_0804F658: .4byte vtable_unk_080E5BD8
_0804F65C: .4byte vtable_unk_080E7898
_0804F660: .4byte vtable_unk_080E78C0
_0804F664: .4byte vtable_unk_080E7888
_0804F668: .4byte 0x080F9F74
_0804F66C: .4byte 0x080F9F70
_0804F670: .4byte vtable_unk_080E78E0
_0804F674: .4byte 0x00003FFF
_0804F678: .4byte 0xFFFFC000
_0804F67C: .4byte vtable_unk_080E7878
_0804F680: .4byte 0xFFFF801F
_0804F684: .4byte 0xFFF87FFF
_0804F688: .4byte 0x08728208
_0804F68C: .4byte 0x0872937C
_0804F690: .4byte 0x00000504
_0804F694: .4byte 0x08728320
_0804F698: .4byte 0x00000534

	thumb_func_start func_0804F69C
func_0804F69C: @ 0x0804F69C
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	movs r0, #0xa9
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	ldr r1, _0804F79C @ =0x00000504
	adds r0, r6, r1
	ldr r5, _0804F7A0 @ =vtable_unk_080E5A28
	str r5, [r0]
	movs r0, #0xf4
	lsls r0, r0, #1
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r0, r6, r1
	movs r1, #2
	bl func_080ADC84
	movs r0, #0xea
	lsls r0, r0, #1
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	movs r1, #0xc8
	lsls r1, r1, #1
	adds r0, r6, r1
	str r5, [r0]
	subs r1, #0x30
	adds r0, r6, r1
	str r5, [r0]
	subs r1, #0x18
	adds r0, r6, r1
	movs r1, #2
	bl func_080098AC
	movs r1, #0x98
	lsls r1, r1, #1
	adds r0, r6, r1
	movs r1, #2
	bl func_080098AC
	movs r1, #0x90
	lsls r1, r1, #1
	adds r0, r6, r1
	movs r1, #2
	bl func_080098AC
	adds r0, r6, #0
	adds r0, #0xd0
	movs r1, #2
	bl func_080E105C
	adds r0, r6, #0
	adds r0, #0xc0
	movs r1, #2
	bl func_080098AC
	adds r1, r6, #0
	adds r1, #0x3c
	ldr r0, [r6, #0x3c]
	lsls r0, r0, #4
	adds r0, #4
	adds r1, r1, r0
	adds r0, r6, #0
	adds r0, #0x40
	cmp r0, r1
	beq _0804F756
_0804F750:
	adds r0, #0x10
	cmp r0, r1
	bne _0804F750
_0804F756:
	adds r0, r6, #0
	adds r0, #0x20
	movs r1, #2
	bl func_080098DC
	adds r4, r6, #0
	adds r4, #0x18
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	movs r0, #1
	ands r0, r7
	cmp r0, #0
	beq _0804F794
	adds r0, r6, #0
	bl __builtin_delete
_0804F794:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0804F79C: .4byte 0x00000504
_0804F7A0: .4byte vtable_unk_080E5A28

	thumb_func_start func_0804F7A4
func_0804F7A4: @ 0x0804F7A4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xb8
	adds r7, r0, #0
	str r2, [sp, #0x78]
	str r3, [sp, #0x7c]
	ldr r0, [sp, #0xe0]
	mov sl, r0
	ldrh r3, [r1, #4]
	ldrh r6, [r1, #8]
	ldrb r2, [r7, #0xd]
	mov r1, sp
	ldr r0, _0804F7DC @ =vtable_unk_080E78A8
	str r0, [sp]
	str r3, [sp, #4]
	strb r2, [r1, #8]
	ldr r0, [r7, #8]
	cmp r0, #6
	bls _0804F7D2
	b _0804F99C
_0804F7D2:
	lsls r0, r0, #2
	ldr r1, _0804F7E0 @ =_0804F7E4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0804F7DC: .4byte vtable_unk_080E78A8
_0804F7E0: .4byte _0804F7E4
_0804F7E4: @ jump table
	.4byte _0804F99C @ case 0
	.4byte _0804F800 @ case 1
	.4byte _0804F880 @ case 2
	.4byte _0804F99C @ case 3
	.4byte _0804F892 @ case 4
	.4byte _0804F892 @ case 5
	.4byte _0804F90A @ case 6
_0804F800:
	ldrb r0, [r7, #0xc]
	cmp r0, #8
	bls _0804F834
	adds r0, r7, #0
	adds r0, #0xec
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, #1
	beq _0804F828
	cmp r0, #1
	bgt _0804F81C
	cmp r0, #0
	beq _0804F822
	b _0804F99C
_0804F81C:
	cmp r1, #2
	beq _0804F82E
	b _0804F99C
_0804F822:
	movs r0, #3
	str r0, [r7, #8]
	b _0804F99C
_0804F828:
	movs r0, #4
	str r0, [r7, #8]
	b _0804F99C
_0804F82E:
	movs r0, #5
	str r0, [r7, #8]
	b _0804F99C
_0804F834:
	adds r0, #1
	strb r0, [r7, #0xc]
	movs r1, #0xa4
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0804F84A
	b _0804F99C
_0804F84A:
	movs r2, #0xaa
	lsls r2, r2, #3
	adds r0, r7, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0804F860
	b _0804F99C
_0804F860:
	mov r3, sl
	cmp r3, #0
	bne _0804F868
	b _0804F99C
_0804F868:
	mov r0, sl
	bl func_08008CD0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0804F876
	b _0804F99C
_0804F876:
	mov r0, sl
	movs r1, #0xc8
	bl func_08008B6C
	b _0804F99C
_0804F880:
	ldrb r0, [r7, #0xc]
	adds r1, r0, #0
	cmp r1, #0
	bne _0804F88C
	str r1, [r7, #8]
	b _0804F99C
_0804F88C:
	subs r0, #1
	strb r0, [r7, #0xc]
	b _0804F99C
_0804F892:
	adds r0, r7, #0
	adds r0, #0xec
	adds r1, r7, #0
	adds r1, #0xd0
	mov r2, sp
	bl func_080ADD78
	cmp r0, #1
	beq _0804F8B8
	cmp r0, #1
	bgt _0804F8AE
	cmp r0, #0
	beq _0804F8B4
	b _0804F8D8
_0804F8AE:
	cmp r0, #2
	beq _0804F8BC
	b _0804F8D8
_0804F8B4:
	movs r0, #3
	b _0804F8D6
_0804F8B8:
	movs r0, #4
	b _0804F8D6
_0804F8BC:
	ldr r0, [r7, #8]
	cmp r0, #5
	beq _0804F8D8
	movs r4, #0xe0
	lsls r4, r4, #1
	adds r0, r7, r4
	movs r5, #0xc8
	lsls r5, r5, #1
	adds r1, r7, r5
	movs r2, #0
	bl func_0805E850
	movs r0, #5
_0804F8D6:
	str r0, [r7, #8]
_0804F8D8:
	adds r0, r7, #0
	adds r0, #0xeb
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	beq _0804F99C
	movs r6, #0xaa
	lsls r6, r6, #3
	adds r0, r7, r6
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _0804F904
	mov r0, sl
	cmp r0, #0
	beq _0804F904
	movs r1, #0xc9
	bl func_08008B88
_0804F904:
	movs r0, #0
	strb r0, [r4]
	b _0804F99C
_0804F90A:
	adds r0, r7, #0
	adds r0, #0xd0
	ldrb r0, [r0, #0x1a]
	cmp r0, #0
	bne _0804F99C
	movs r0, #1
	ands r3, r0
	cmp r3, #0
	beq _0804F944
	movs r0, #3
	str r0, [r7, #8]
	movs r1, #0xaa
	lsls r1, r1, #3
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0804F99C
	mov r2, sl
	cmp r2, #0
	beq _0804F99C
	mov r0, sl
	movs r1, #0xc5
	bl func_08008B6C
	b _0804F99C
_0804F944:
	lsls r3, r6, #0x18
	lsrs r3, r3, #0x1f
	lsls r2, r6, #0x19
	lsrs r2, r2, #0x1f
	lsls r1, r6, #0x1a
	lsrs r1, r1, #0x1f
	lsls r0, r6, #0x1b
	lsrs r0, r0, #0x1f
	eors r3, r2
	eors r1, r0
	cmp r3, r1
	beq _0804F99C
	movs r3, #0xac
	lsls r3, r3, #1
	adds r4, r7, r3
	ldr r5, [r4]
	movs r1, #0xae
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_08050868
	str r0, [r4]
	cmp r0, r5
	beq _0804F99C
	movs r2, #0xaa
	lsls r2, r2, #3
	adds r0, r7, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0804F99C
	mov r3, sl
	cmp r3, #0
	beq _0804F99C
	mov r0, sl
	movs r1, #0xcb
	bl func_08008B6C
_0804F99C:
	adds r3, r7, #0
	adds r3, #0x20
	movs r2, #0
	adds r1, r7, #0
	adds r1, #0x30
	ldr r0, [r3, #0xc]
	cmp r0, r1
	bne _0804F9AE
	movs r2, #1
_0804F9AE:
	cmp r2, #0
	bne _0804F9C0
	ldr r4, [sp, #0xd8]
	ldr r0, [r4, #8]
	ldr r2, [r0, #0x1c]
	adds r0, r4, #0
	adds r1, r3, #0
	bl _call_via_r2
_0804F9C0:
	ldr r0, [r7, #8]
	cmp r0, #0
	bne _0804F9CA
	bl sub_08050342
_0804F9CA:
	cmp r0, #6
	beq _0804F9E2
	mov r5, sp
	adds r5, #0xc
	str r5, [sp, #0x90]
	cmp r0, #5
	beq _0804F9DA
	b _0804FB8A
_0804F9DA:
	ldrb r0, [r7, #0xd]
	cmp r0, #0
	bne _0804F9E2
	b _0804FB8A
_0804F9E2:
	movs r6, #0xe0
	lsls r6, r6, #1
	adds r4, r7, r6
	adds r0, r4, #0
	bl func_0805E8F0
	mov r8, r0
	add r5, sp, #0xc
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	movs r4, #0xe2
	lsls r4, r4, #1
	adds r0, r7, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r5, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r6, r8
	lsls r0, r6, #0x1e
	str r5, [sp, #0x90]
	movs r1, #0x18
	adds r1, r1, r7
	mov sb, r1
	cmp r0, #0
	bge _0804FA6A
	ldr r5, [sp, #0x14]
	ldr r1, [r1, #4]
	mov r0, sb
	bl func_08007D4C
	adds r2, r0, #0
	add r1, sp, #0x14
	ldr r0, [sp, #0x14]
	movs r3, #0
	cmp r0, #0
	beq _0804FA36
	ldrh r3, [r1, #4]
_0804FA36:
	adds r4, r7, #0
	adds r4, #0x3c
	lsls r2, r2, #5
	ldr r6, _0804FAC8 @ =0x06010000
	adds r2, r2, r6
	add r0, sp, #0x2c
	adds r1, r5, #0
	bl func_08008F0C
	ldr r0, [r7, #0x3c]
	add r6, sp, #0x2c
	cmp r0, #7
	bhi _0804FA6A
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _0804FA64
	adds r1, r6, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0804FA64:
	ldr r0, [r7, #0x3c]
	adds r0, #1
	str r0, [r7, #0x3c]
_0804FA6A:
	ldr r0, [sp, #0xc]
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [sp, #0x58]
	str r1, [sp, #0x5c]
	ldr r0, [r7, #8]
	cmp r0, #6
	bne _0804FAD8
	movs r5, #0xae
	lsls r5, r5, #1
	adds r0, r7, r5
	ldr r0, [r0]
	movs r6, #0xac
	lsls r6, r6, #1
	adds r1, r7, r6
	ldr r1, [r1]
	bl func_080507D0
	add r4, sp, #0x58
	ldrb r3, [r4]
	adds r3, #0x73
	lsls r2, r0, #0x1e
	lsrs r2, r2, #0x1e
	lsls r1, r2, #4
	adds r1, r1, r2
	adds r3, r3, r1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	ldr r1, _0804FACC @ =0xFFFFFF00
	ldr r2, [sp, #0x58]
	ands r2, r1
	orrs r2, r3
	lsls r1, r2, #7
	lsrs r1, r1, #0x17
	adds r1, #8
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	lsls r0, r0, #3
	adds r1, r1, r0
	ldr r0, _0804FAD0 @ =0x000001FF
	ands r1, r0
	lsls r1, r1, #0x10
	ldr r0, _0804FAD4 @ =0xFE00FFFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x58]
	b _0804FB32
	.align 2, 0
_0804FAC8: .4byte 0x06010000
_0804FACC: .4byte 0xFFFFFF00
_0804FAD0: .4byte 0x000001FF
_0804FAD4: .4byte 0xFE00FFFF
_0804FAD8:
	ldr r3, [sp, #0x58]
	lsls r0, r3, #7
	lsrs r0, r0, #0x17
	adds r0, #0xec
	ldr r1, _0804FCC4 @ =0x000001FF
	ands r0, r1
	lsls r0, r0, #0x10
	ldr r2, _0804FCC8 @ =0xFE00FFFF
	ands r2, r3
	orrs r2, r0
	str r2, [sp, #0x58]
	add r3, sp, #0x58
	ldrb r0, [r3]
	adds r0, #0xa0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _0804FCCC @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0x58]
	mov r1, r8
	lsls r0, r1, #0x1f
	adds r4, r3, #0
	cmp r0, #0
	bne _0804FB32
	lsls r0, r1, #0x1e
	cmp r0, #0
	bge _0804FB32
	movs r2, #0xaa
	lsls r2, r2, #3
	adds r0, r7, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0804FB32
	mov r3, sl
	cmp r3, #0
	beq _0804FB32
	mov r0, sl
	movs r1, #0xca
	bl func_08008B6C
_0804FB32:
	adds r0, r7, #0
	adds r0, #0x10
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _0804FCD0 @ =0xFFFF0FFF
	ldr r1, [r4, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r4, #4]
	mov r5, sb
	ldr r1, [r5, #4]
	mov r0, sb
	bl func_08007D4C
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0804FCD4 @ =0xFFFFFC00
	ldr r1, [r4, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r4, #4]
	movs r0, #0x80
	lsls r0, r0, #5
	ldr r1, [sp, #0x58]
	orrs r1, r0
	str r1, [sp, #0x58]
	ldr r6, [sp, #0x78]
	ldrb r2, [r6]
	cmp r2, #0x7f
	bhi _0804FB8A
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r6, r0
	str r1, [r0]
	ldrh r1, [r4, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r6]
_0804FB8A:
	movs r6, #0
	ldrb r2, [r7]
	lsls r5, r2, #0x1e
	lsrs r5, r5, #0x1e
	movs r0, #0x80
	lsls r0, r0, #1
	lsls r0, r5
	movs r3, #0xc0
	lsls r3, r3, #7
	adds r1, r3, #0
	orrs r0, r1
	ldr r4, [sp, #0x7c]
	ldrh r1, [r4]
	orrs r0, r1
	strh r0, [r4]
	lsls r3, r5, #1
	lsls r4, r5, #2
	adds r3, #8
	ldr r0, [sp, #0x7c]
	adds r3, r0, r3
	ldrh r1, [r3]
	movs r0, #0x73
	ands r1, r0
	lsls r2, r2, #0x19
	lsrs r2, r2, #0x1b
	lsls r2, r2, #8
	ldrh r0, [r7]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1e
	lsls r0, r0, #2
	orrs r2, r0
	orrs r1, r2
	ldr r2, [sp, #0x90]
	strh r1, [r2]
	strh r1, [r3]
	strh r6, [r2]
	adds r0, r4, #0
	adds r0, #0x10
	ldr r3, [sp, #0x7c]
	adds r0, r3, r0
	strh r6, [r0]
	ldr r6, _0804FCD8 @ =0x0000FFB0
	adds r0, r6, #0
	strh r0, [r2]
	adds r4, #0x12
	adds r4, r3, r4
	strh r0, [r4]
	movs r1, #0x3f
	strh r1, [r2]
	adds r2, r3, #0
	adds r2, #0x48
	strh r1, [r2]
	movs r0, #1
	lsls r0, r5
	bics r1, r0
	ldr r0, [sp, #0x90]
	strh r1, [r0]
	adds r0, r3, #0
	adds r0, #0x4a
	strh r1, [r0]
	ldrb r6, [r7, #0xc]
	str r2, [sp, #0xa4]
	str r0, [sp, #0xa8]
	cmp r6, #8
	bhi _0804FC0E
	b _08050270
_0804FC0E:
	adds r1, r7, #0
	adds r1, #0xd0
	str r1, [sp, #0x80]
	ldr r0, [r1, #4]
	ldr r1, [r0, #4]
	bl func_080074C0
	ldr r2, [sp, #0x7c]
	adds r2, #0x40
	str r2, [sp, #0x94]
	ldr r3, [sp, #0x7c]
	adds r3, #0x44
	str r3, [sp, #0x9c]
	ldr r4, [sp, #0x7c]
	adds r4, #0x42
	str r4, [sp, #0x98]
	ldr r5, [sp, #0x7c]
	adds r5, #0x46
	str r5, [sp, #0xa0]
	adds r6, r7, #0
	adds r6, #0xc0
	str r6, [sp, #0xb0]
	cmp r0, #0
	bge _0804FC40
	b _0804FD66
_0804FC40:
	movs r1, #0
	movs r2, #0x6b
	mov sl, r2
	mov r3, sp
	adds r3, #0x68
	str r3, [sp, #0xac]
	lsls r0, r0, #4
	str r0, [sp, #0x88]
_0804FC50:
	ldr r4, [sp, #0x80]
	ldrb r0, [r4, #0x18]
	adds r0, r1, r0
	cmp r0, #2
	ble _0804FC5C
	subs r0, #3
_0804FC5C:
	lsls r0, r0, #2
	ldr r5, [sp, #0x80]
	adds r0, r0, r5
	ldr r0, [r0, #8]
	movs r6, #8
	mov sb, r6
	adds r1, #1
	str r1, [sp, #0x84]
	mov r1, sl
	adds r1, #0x11
	str r1, [sp, #0x8c]
	ldr r4, [sp, #0xac]
	adds r6, r0, #4
	adds r5, r0, #0
	movs r2, #6
	mov r8, r2
_0804FC7C:
	movs r0, #0
	movs r1, #0
	str r0, [sp, #0x60]
	str r1, [sp, #0x64]
	movs r0, #0x80
	lsls r0, r0, #5
	ldr r2, [sp, #0x60]
	orrs r2, r0
	ldr r0, _0804FCDC @ =0xFFFF3FFF
	ands r2, r0
	movs r0, #0x80
	lsls r0, r0, #7
	orrs r2, r0
	ldr r0, _0804FCE0 @ =0x3FFFFFFF
	ands r2, r0
	movs r0, #0x80
	lsls r0, r0, #0x18
	orrs r2, r0
	str r2, [sp, #0x60]
	ldr r1, [r5, #8]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0804FCE4
	adds r0, r6, #0
	bl func_08007D4C
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r3, _0804FCD4 @ =0xFFFFFC00
	add r2, sp, #0x60
	ldr r1, [r2, #4]
	ands r1, r3
	orrs r1, r0
	str r1, [r2, #4]
	b _0804FCF0
	.align 2, 0
_0804FCC4: .4byte 0x000001FF
_0804FCC8: .4byte 0xFE00FFFF
_0804FCCC: .4byte 0xFFFFFF00
_0804FCD0: .4byte 0xFFFF0FFF
_0804FCD4: .4byte 0xFFFFFC00
_0804FCD8: .4byte 0x0000FFB0
_0804FCDC: .4byte 0xFFFF3FFF
_0804FCE0: .4byte 0x3FFFFFFF
_0804FCE4:
	ldr r0, _08050060 @ =0xFFFFFCFF
	ands r0, r2
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [sp, #0x60]
_0804FCF0:
	ldr r0, [sp, #0x60]
	ldr r1, [sp, #0x64]
	str r0, [sp, #0x68]
	str r1, [sp, #0x6c]
	mov r3, sl
	lsls r1, r3, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _08050064 @ =0xFFFFFF00
	ldr r0, [sp, #0x68]
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x68]
	ldr r1, _08050068 @ =0x000001FF
	adds r0, r1, #0
	mov r2, sb
	ands r2, r0
	ldrh r0, [r4, #2]
	ldr r3, _0805006C @ =0xFFFFFE00
	adds r1, r3, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r4, #2]
	ldrb r1, [r4, #5]
	movs r0, #0xf
	ands r0, r1
	ldr r1, [sp, #0x88]
	orrs r0, r1
	strb r0, [r4, #5]
	ldr r3, [sp, #0x78]
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _0804FD46
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r1, [sp, #0x68]
	str r1, [r0]
	ldr r3, [sp, #0xac]
	ldrh r1, [r3, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	ldr r1, [sp, #0x78]
	strb r0, [r1]
_0804FD46:
	adds r6, #0x10
	adds r5, #0x10
	movs r2, #1
	rsbs r2, r2, #0
	add r8, r2
	movs r3, #0x20
	add sb, r3
	mov r0, r8
	cmp r0, #0
	bge _0804FC7C
	ldr r1, [sp, #0x84]
	ldr r2, [sp, #0x8c]
	mov sl, r2
	cmp r1, #2
	bgt _0804FD66
	b _0804FC50
_0804FD66:
	ldr r3, [sp, #0xd8]
	ldr r0, [r3, #8]
	movs r4, #0x90
	lsls r4, r4, #1
	adds r1, r7, r4
	ldr r2, [r0, #0x10]
	adds r0, r3, #0
	bl _call_via_r2
	movs r0, #0xf0
	ldr r5, [sp, #0x90]
	strh r0, [r5]
	ldr r6, [sp, #0x94]
	strh r0, [r6]
	ldr r1, _08050070 @ =0x000068A0
	adds r0, r1, #0
	strh r0, [r5]
	ldr r2, [sp, #0x9c]
	strh r0, [r2]
	movs r3, #0xee
	lsls r3, r3, #1
	adds r0, r7, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1f
	cmp r0, #0
	bne _0804FD9C
	b _08050040
_0804FD9C:
	adds r4, #0xb4
	adds r4, r4, r7
	mov sb, r4
	ldr r1, [r4, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0804FDAE
	b _08050040
_0804FDAE:
	movs r5, #0xf4
	lsls r5, r5, #1
	adds r0, r7, r5
	ldr r1, [r0, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0804FDC0
	b _08050040
_0804FDC0:
	movs r6, #0xa0
	lsls r6, r6, #3
	adds r0, r7, r6
	ldrb r0, [r0]
	add r6, sp, #0x2c
	cmp r0, #0
	bne _0804FDD0
	b _0804FF12
_0804FDD0:
	movs r1, #0xa9
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r1, [r0, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0804FDE2
	b _0804FF12
_0804FDE2:
	ldr r2, _08050074 @ =0x00000534
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_0805E8F0
	adds r5, r0, #0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	movs r4, #0xa7
	lsls r4, r4, #3
	adds r0, r7, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	ldr r0, [sp, #0x90]
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	lsls r5, r5, #0x1e
	cmp r5, #0
	bge _0804FEBC
	add r0, sp, #0x14
	ldr r5, [sp, #0x14]
	mov r8, r5
	movs r3, #0
	cmp r5, #0
	beq _0804FE1E
	ldrh r3, [r0, #4]
_0804FE1E:
	adds r5, r3, #0
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r5, r0
	bls _0804FE2A
	adds r5, r0, #0
_0804FE2A:
	mov r0, sb
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r2, r0, #0
	adds r4, r7, #0
	adds r4, #0x3c
	lsls r2, r2, #5
	ldr r1, _08050078 @ =0x06010F00
	adds r2, r2, r1
	adds r0, r6, #0
	mov r1, r8
	adds r3, r5, #0
	bl func_08008F0C
	ldr r0, [r7, #0x3c]
	cmp r0, #7
	bhi _0804FE68
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _0804FE62
	adds r1, r6, #0
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_0804FE62:
	ldr r0, [r7, #0x3c]
	adds r0, #1
	str r0, [r7, #0x3c]
_0804FE68:
	add r0, sp, #0x1c
	ldr r1, [sp, #0x1c]
	mov r8, r1
	movs r3, #0
	cmp r1, #0
	beq _0804FE76
	ldrh r3, [r0, #4]
_0804FE76:
	adds r5, r3, #0
	cmp r5, #0x20
	bls _0804FE7E
	movs r5, #0x20
_0804FE7E:
	movs r2, #0xa9
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	lsls r2, r2, #5
	ldr r3, _0805007C @ =0x05000200
	adds r2, r2, r3
	add r0, sp, #0x2c
	mov r1, r8
	adds r3, r5, #0
	bl func_08008F0C
	ldr r0, [r7, #0x3c]
	cmp r0, #7
	bhi _0804FEBC
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _0804FEB6
	adds r1, r6, #0
	ldm r1!, {r2, r4, r5}
	stm r0!, {r2, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0804FEB6:
	ldr r0, [r7, #0x3c]
	adds r0, #1
	str r0, [r7, #0x3c]
_0804FEBC:
	add r4, sp, #0x3c
	movs r1, #0
	movs r0, #0
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	movs r0, #0x34
	strh r0, [r4]
	movs r0, #0x5c
	strh r0, [r4, #2]
	movs r3, #0xea
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r0, #0x78
	strh r0, [r4, #6]
	movs r5, #0xa9
	lsls r5, r5, #3
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl func_080074C0
	strh r0, [r4, #4]
	movs r0, #1
	strb r0, [r4, #0x18]
	ldr r0, [sp, #0xc]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0804FF0A
	ldr r0, [sp, #0x90]
	ldrh r2, [r0, #4]
_0804FF0A:
	ldr r0, [sp, #0x78]
	adds r3, r4, #0
	bl func_0805E99C
_0804FF12:
	movs r2, #0xf2
	lsls r2, r2, #1
	adds r1, r7, r2
	ldr r0, [sp, #0x90]
	bl func_080ADD08
	movs r3, #0xee
	lsls r3, r3, #1
	adds r0, r7, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0804FFEC
	add r0, sp, #0x14
	ldr r4, [sp, #0x14]
	mov r8, r4
	movs r3, #0
	cmp r4, #0
	beq _0804FF3A
	ldrh r3, [r0, #4]
_0804FF3A:
	adds r5, r3, #0
	movs r0, #0xc0
	lsls r0, r0, #4
	cmp r5, r0
	bls _0804FF46
	adds r5, r0, #0
_0804FF46:
	movs r1, #0xea
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r2, r0, #0
	adds r4, r7, #0
	adds r4, #0x3c
	lsls r2, r2, #5
	ldr r3, _08050080 @ =0x06010000
	adds r2, r2, r3
	add r0, sp, #0x2c
	mov r1, r8
	adds r3, r5, #0
	bl func_08008F0C
	ldr r0, [r7, #0x3c]
	cmp r0, #7
	bhi _0804FF88
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _0804FF82
	adds r1, r6, #0
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_0804FF82:
	ldr r0, [r7, #0x3c]
	adds r0, #1
	str r0, [r7, #0x3c]
_0804FF88:
	add r0, sp, #0x1c
	ldr r5, [sp, #0x1c]
	mov r8, r5
	movs r3, #0
	cmp r5, #0
	beq _0804FF96
	ldrh r3, [r0, #4]
_0804FF96:
	adds r5, r3, #0
	cmp r5, #0x20
	bls _0804FF9E
	movs r5, #0x20
_0804FF9E:
	movs r1, #0xf4
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	lsls r2, r2, #5
	ldr r3, _0805007C @ =0x05000200
	adds r2, r2, r3
	add r0, sp, #0x2c
	mov r1, r8
	adds r3, r5, #0
	bl func_08008F0C
	ldr r0, [r7, #0x3c]
	cmp r0, #7
	bhi _0804FFDC
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _0804FFD6
	adds r1, r6, #0
	ldm r1!, {r2, r4, r5}
	stm r0!, {r2, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0804FFD6:
	ldr r0, [r7, #0x3c]
	adds r0, #1
	str r0, [r7, #0x3c]
_0804FFDC:
	movs r3, #0xee
	lsls r3, r3, #1
	adds r2, r7, r3
	ldrb r1, [r2]
	movs r0, #3
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2]
_0804FFEC:
	adds r4, r6, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r4, #4]
	strh r0, [r4, #6]
	strh r0, [r4, #8]
	str r0, [r4, #0xc]
	strb r1, [r4, #0x10]
	strb r1, [r4, #0x11]
	str r0, [r4, #0x14]
	strb r1, [r4, #0x18]
	movs r0, #0x28
	strh r0, [r4]
	movs r0, #0x68
	strh r0, [r4, #2]
	movs r5, #0xea
	lsls r5, r5, #1
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl func_08007D4C
	strh r0, [r4, #6]
	movs r1, #0xf4
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	strh r0, [r4, #4]
	movs r0, #1
	strb r0, [r4, #0x18]
	ldr r0, [sp, #0xc]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08050038
	ldr r3, [sp, #0x90]
	ldrh r2, [r3, #4]
_08050038:
	ldr r0, [sp, #0x78]
	adds r3, r6, #0
	bl func_0805E99C
_08050040:
	movs r4, #0xf8
	lsls r4, r4, #1
	adds r0, r7, r4
	ldrb r3, [r0]
	lsls r0, r3, #0x1f
	cmp r0, #0
	bne _08050050
	b _08050250
_08050050:
	movs r5, #0xea
	lsls r5, r5, #1
	adds r4, r7, r5
	ldr r2, [r4, #4]
	rsbs r0, r2, #0
	orrs r0, r2
	cmp r0, #0
	b _08050084
	.align 2, 0
_08050060: .4byte 0xFFFFFCFF
_08050064: .4byte 0xFFFFFF00
_08050068: .4byte 0x000001FF
_0805006C: .4byte 0xFFFFFE00
_08050070: .4byte 0x000068A0
_08050074: .4byte 0x00000534
_08050078: .4byte 0x06010F00
_0805007C: .4byte 0x05000200
_08050080: .4byte 0x06010000
_08050084:
	blt _08050088
	b _08050250
_08050088:
	ldr r6, [sp, #0xa4]
	ldrh r0, [r6]
	movs r5, #0xfc
	lsls r5, r5, #6
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r6]
	ldrb r0, [r7]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	movs r1, #1
	lsls r1, r0
	movs r0, #0x3f
	bics r0, r1
	lsls r0, r0, #8
	ldr r6, [sp, #0xa8]
	ldrh r1, [r6]
	orrs r0, r1
	strh r0, [r6]
	ldr r1, _08050220 @ =0x000080F0
	adds r0, r1, #0
	ldr r5, [sp, #0x90]
	strh r0, [r5]
	ldr r6, [sp, #0x98]
	strh r0, [r6]
	ldr r1, _08050224 @ =0x00005068
	adds r0, r1, #0
	strh r0, [r5]
	ldr r5, [sp, #0xa0]
	strh r0, [r5]
	lsls r0, r3, #0x1e
	movs r6, #0x10
	adds r6, r6, r7
	mov sl, r6
	add r1, sp, #0x70
	mov r8, r1
	cmp r0, #0
	bge _0805014A
	adds r0, r4, #0
	adds r1, r2, #0
	bl func_08007D4C
	movs r2, #0
	mov sb, r2
	adds r4, r7, #0
	adds r4, #0x3c
	lsls r0, r0, #5
	ldr r3, _08050228 @ =0x06010C00
	adds r3, r0, r3
	str r3, [sp, #0xb4]
	movs r6, #0xfc
	lsls r6, r6, #1
	adds r5, r7, r6
_080500F2:
	add r0, sp, #0xc
	adds r1, r5, #0
	ldr r2, [sp, #0xb4]
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_08008F0C
	ldr r0, [r7, #0x3c]
	cmp r0, #7
	bhi _08050120
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _0805011A
	ldr r1, [sp, #0x90]
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0805011A:
	ldr r0, [r7, #0x3c]
	adds r0, #1
	str r0, [r7, #0x3c]
_08050120:
	ldr r0, [sp, #0xb4]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	str r0, [sp, #0xb4]
	movs r2, #0x82
	lsls r2, r2, #1
	adds r5, r5, r2
	movs r3, #1
	add sb, r3
	mov r6, sb
	cmp r6, #2
	bls _080500F2
	movs r0, #0xf8
	lsls r0, r0, #1
	adds r2, r7, r0
	ldrb r1, [r2]
	movs r0, #3
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2]
_0805014A:
	movs r0, #0
	movs r1, #0
	str r0, [sp, #0x70]
	str r1, [sp, #0x74]
	ldr r1, _0805022C @ =0xFFFFFF00
	ldr r0, [sp, #0x70]
	ands r0, r1
	movs r1, #0x54
	orrs r0, r1
	ldr r1, _08050230 @ =0xFE00FFFF
	ands r0, r1
	movs r1, #0x88
	lsls r1, r1, #0x10
	orrs r0, r1
	ldr r1, _08050234 @ =0xFFFF3FFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #7
	orrs r0, r1
	ldr r1, _08050238 @ =0x3FFFFFFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #0x18
	orrs r0, r1
	str r0, [sp, #0x70]
	movs r1, #0xea
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r0, #0x60
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r4, _0805023C @ =0xFFFFFC00
	mov r2, r8
	ldr r1, [r2, #4]
	ands r1, r4
	orrs r1, r0
	str r1, [r2, #4]
	mov r3, sl
	ldr r1, [r3, #4]
	mov r0, sl
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _08050240 @ =0xFFFF0FFF
	mov r5, r8
	ldr r1, [r5, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r5, #4]
	movs r1, #0x80
	lsls r1, r1, #5
	ldr r0, [sp, #0x70]
	orrs r0, r1
	str r0, [sp, #0x70]
	movs r5, #0
	mov r3, r8
	ldr r6, _08050244 @ =0xFFFFFE00
	mov sb, r6
_080501CC:
	ldr r0, [sp, #0x78]
	ldrb r2, [r0]
	cmp r2, #0x7f
	bhi _080501EA
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r0, r1
	ldr r0, [sp, #0x70]
	str r0, [r1]
	mov r6, r8
	ldrh r0, [r6, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	ldr r1, [sp, #0x78]
	strb r0, [r1]
_080501EA:
	ldrh r2, [r3, #2]
	lsls r1, r2, #0x17
	lsrs r1, r1, #0x17
	adds r1, #0x20
	ldr r6, _08050248 @ =0x000001FF
	adds r0, r6, #0
	ands r1, r0
	mov r0, sb
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #2]
	ldrh r2, [r3, #4]
	lsls r1, r2, #0x16
	lsrs r1, r1, #0x16
	adds r1, #8
	ldr r6, _0805024C @ =0x000003FF
	adds r0, r6, #0
	ands r1, r0
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #4]
	adds r5, #1
	cmp r5, #2
	bls _080501CC
	b _080502DA
	.align 2, 0
_08050220: .4byte 0x000080F0
_08050224: .4byte 0x00005068
_08050228: .4byte 0x06010C00
_0805022C: .4byte 0xFFFFFF00
_08050230: .4byte 0xFE00FFFF
_08050234: .4byte 0xFFFF3FFF
_08050238: .4byte 0x3FFFFFFF
_0805023C: .4byte 0xFFFFFC00
_08050240: .4byte 0xFFFF0FFF
_08050244: .4byte 0xFFFFFE00
_08050248: .4byte 0x000001FF
_0805024C: .4byte 0x000003FF
_08050250:
	ldr r1, _08050268 @ =0x0000F0F0
	adds r0, r1, #0
	ldr r2, [sp, #0x90]
	strh r0, [r2]
	ldr r3, [sp, #0x98]
	strh r0, [r3]
	ldr r4, _0805026C @ =0x0000A0A0
	adds r0, r4, #0
	strh r0, [r2]
	ldr r5, [sp, #0xa0]
	strh r0, [r5]
	b _080502DA
	.align 2, 0
_08050268: .4byte 0x0000F0F0
_0805026C: .4byte 0x0000A0A0
_08050270:
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #3
	movs r1, #9
	bl func_080D0EDA
	adds r5, r0, #0
	lsrs r0, r5, #0x1f
	adds r0, r5, r0
	asrs r0, r0, #1
	movs r4, #0x84
	subs r4, r4, r0
	lsls r0, r6, #4
	subs r0, r0, r6
	lsls r0, r0, #4
	movs r1, #9
	bl func_080D0EDA
	lsrs r2, r0, #0x1f
	adds r2, r0, r2
	asrs r2, r2, #1
	movs r1, #0x78
	subs r1, r1, r2
	lsls r2, r1, #8
	adds r1, r1, r0
	orrs r2, r1
	ldr r6, [sp, #0x90]
	strh r2, [r6]
	ldr r0, [sp, #0x7c]
	adds r0, #0x40
	strh r2, [r0]
	lsls r0, r4, #8
	adds r4, r4, r5
	orrs r0, r4
	strh r0, [r6]
	ldr r1, [sp, #0x7c]
	adds r1, #0x44
	strh r0, [r1]
	ldr r1, _08050300 @ =0x0000F0F0
	adds r0, r1, #0
	strh r0, [r6]
	ldr r1, [sp, #0x7c]
	adds r1, #0x42
	strh r0, [r1]
	ldr r2, _08050304 @ =0x0000A0A0
	adds r0, r2, #0
	strh r0, [r6]
	ldr r1, [sp, #0x7c]
	adds r1, #0x46
	strh r0, [r1]
	adds r3, r7, #0
	adds r3, #0xc0
	str r3, [sp, #0xb0]
_080502DA:
	ldr r0, [r7, #4]
	cmp r0, #2
	bne _08050310
	ldr r4, [sp, #0xa4]
	ldrh r0, [r4]
	ldr r5, _08050308 @ =0x00002020
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r4]
	ldrb r0, [r7]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	movs r1, #1
	lsls r1, r0
	ldr r0, _0805030C @ =0x08083F40
	orrs r1, r0
	ldr r6, [sp, #0x7c]
	str r1, [r6, #0x50]
	b _08050332
	.align 2, 0
_08050300: .4byte 0x0000F0F0
_08050304: .4byte 0x0000A0A0
_08050308: .4byte 0x00002020
_0805030C: .4byte 0x08083F40
_08050310:
	cmp r0, #1
	bne _08050332
	movs r0, #0x98
	lsls r0, r0, #1
	adds r3, r7, r0
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08050332
	ldr r1, [sp, #0xdc]
	ldr r0, [r1, #8]
	ldr r2, [r0, #0x10]
	adds r0, r1, #0
	adds r1, r3, #0
	bl _call_via_r2
_08050332:
	ldr r2, [sp, #0xd8]
	ldr r0, [r2, #8]
	ldr r2, [r0, #0x10]
	ldr r0, [sp, #0xd8]
	ldr r1, [sp, #0xb0]
	bl _call_via_r2
	b _08050382

	non_word_aligned_thumb_func_start sub_08050342
sub_08050342: @ 0x08050342
	ldrb r0, [r7]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	movs r1, #0x80
	lsls r1, r1, #1
	lsls r1, r0
	movs r3, #0xc0
	lsls r3, r3, #7
	adds r0, r3, #0
	orrs r1, r0
	ldr r4, [sp, #0x7c]
	ldrh r0, [r4]
	bics r0, r1
	strh r0, [r4]
	ldr r0, [r7, #4]
	cmp r0, #1
	bne _08050382
	movs r5, #0x98
	lsls r5, r5, #1
	adds r3, r7, r5
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _08050382
	ldr r6, [sp, #0xdc]
	ldr r0, [r6, #8]
	ldr r2, [r0, #0x14]
	adds r0, r6, #0
	adds r1, r3, #0
	bl _call_via_r2
_08050382:
	ldr r0, [r7, #8]
	ldr r1, _08050398 @ =vtable_unk_080E78F0
	str r1, [sp]
	add sp, #0xb8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08050398: .4byte vtable_unk_080E78F0

	thumb_func_start func_0805039C
func_0805039C: @ 0x0805039C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r6, [r4, #8]
	cmp r6, #0
	bne _080503D0
	adds r0, #0xd0
	bl func_0804F0E0
	ldr r0, [r4, #4]
	adds r5, r4, #0
	adds r5, #0x20
	cmp r0, #1
	beq _080503C2
	movs r0, #0x98
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, #0
	bl func_08009940
_080503C2:
	movs r0, #0xa4
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r5, #0
	bl func_08009940
	strb r6, [r4, #0xc]
_080503D0:
	ldr r0, [r4, #8]
	cmp r0, #0
	blt _080503DE
	cmp r0, #2
	bgt _080503DE
	movs r0, #1
	str r0, [r4, #8]
_080503DE:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start func_080503E4
func_080503E4: @ 0x080503E4
	push {r4, lr}
	adds r4, r0, #0
	bl func_0805039C
	movs r0, #3
	str r0, [r4, #8]
	movs r0, #9
	strb r0, [r4, #0xc]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_080503FC
func_080503FC: @ 0x080503FC
	push {lr}
	adds r1, r0, #0
	ldr r0, [r1, #8]
	cmp r0, #0
	beq _0805040A
	movs r0, #2
	str r0, [r1, #8]
_0805040A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08050410
func_08050410: @ 0x08050410
	push {lr}
	adds r1, r0, #0
	ldr r0, [r1, #8]
	cmp r0, #0
	beq _0805041E
	movs r0, #0
	str r0, [r1, #8]
_0805041E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08050424
func_08050424: @ 0x08050424
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r7, r1, #0
	adds r6, r3, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	ldr r0, [r5, #8]
	cmp r0, #0
	blt _08050454
	cmp r0, #2
	bgt _08050448
	adds r0, r5, #0
	bl func_080503E4
	b _08050454
_08050448:
	cmp r0, #6
	bgt _08050454
	adds r0, r5, #0
	adds r0, #0xd0
	bl func_0804F0E0
_08050454:
	adds r4, r5, #0
	adds r4, #0xec
	adds r0, r4, #0
	adds r1, r7, #0
	adds r2, r6, #0
	bl func_080ADD5C
	adds r0, r4, #0
	mov r1, r8
	bl func_080ADD74
	movs r0, #4
	str r0, [r5, #8]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_08050478
func_08050478: @ 0x08050478
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	str r1, [sp, #8]
	str r2, [sp, #0xc]
	mov sb, r3
	ldr r0, [sp, #0x30]
	mov sl, r0
	ldr r1, [sp, #0x34]
	mov r8, r1
	ldr r7, [sp, #0x38]
	ldr r0, [r4, #8]
	cmp r0, #0
	blt _080504B4
	cmp r0, #2
	bgt _080504A8
	adds r0, r4, #0
	bl func_080503E4
	b _080504B4
_080504A8:
	cmp r0, #6
	bgt _080504B4
	adds r0, r4, #0
	adds r0, #0xd0
	bl func_0804F0E0
_080504B4:
	movs r5, #4
	movs r6, #0xc
	cmp r7, #0
	bne _080504D6
	movs r5, #3
	mov r2, r8
	cmp r2, #0
	bne _080504D6
	movs r5, #2
	mov r0, sl
	cmp r0, #0
	bne _080504D6
	movs r6, #0x1a
	mov r1, sb
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r5, r0, #0x1f
_080504D6:
	cmp r5, #4
	bhi _080504FC
	lsls r0, r5, #2
	ldr r1, _080504E4 @ =_080504E8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080504E4: .4byte _080504E8
_080504E8: @ jump table
	.4byte _08050548 @ case 0
	.4byte _08050536 @ case 1
	.4byte _08050522 @ case 2
	.4byte _0805050E @ case 3
	.4byte _080504FE @ case 4
_080504FC:
	movs r5, #0
_080504FE:
	cmp r7, #0
	beq _0805050C
	adds r0, r7, #0
	bl strlen
	cmp r0, r6
	bls _0805050E
_0805050C:
	ldr r7, _08050580 @ =0x080F9F3C
_0805050E:
	mov r2, r8
	cmp r2, #0
	beq _0805051E
	mov r0, r8
	bl strlen
	cmp r0, r6
	bls _08050522
_0805051E:
	ldr r0, _08050580 @ =0x080F9F3C
	mov r8, r0
_08050522:
	mov r1, sl
	cmp r1, #0
	beq _08050532
	mov r0, sl
	bl strlen
	cmp r0, r6
	bls _08050536
_08050532:
	ldr r2, _08050580 @ =0x080F9F3C
	mov sl, r2
_08050536:
	mov r0, sb
	cmp r0, #0
	beq _08050544
	bl strlen
	cmp r0, r6
	bls _08050548
_08050544:
	ldr r1, _08050580 @ =0x080F9F3C
	mov sb, r1
_08050548:
	ldr r2, [sp, #0xc]
	cmp r2, #0
	beq _08050558
	adds r0, r2, #0
	bl strlen
	cmp r0, r6
	bls _0805055C
_08050558:
	ldr r0, _08050580 @ =0x080F9F3C
	str r0, [sp, #0xc]
_0805055C:
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _0805056C
	adds r0, r1, #0
	bl strlen
	cmp r0, r6
	bls _08050570
_0805056C:
	ldr r2, _08050580 @ =0x080F9F3C
	str r2, [sp, #8]
_08050570:
	cmp r5, #4
	bhi _0805062A
	lsls r0, r5, #2
	ldr r1, _08050584 @ =_08050588
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08050580: .4byte 0x080F9F3C
_08050584: .4byte _08050588
_08050588: @ jump table
	.4byte _080505FA @ case 0
	.4byte _080505E2 @ case 1
	.4byte _080505CA @ case 2
	.4byte _080505B2 @ case 3
	.4byte _0805059C @ case 4
_0805059C:
	adds r0, r5, #0
	movs r1, #6
	bl func_080507D0
	mov r1, sp
	strb r0, [r1]
	adds r0, r4, #0
	adds r2, r7, #0
	ldr r3, [sp, #0x3c]
	bl func_080507F8
_080505B2:
	adds r0, r5, #0
	movs r1, #5
	bl func_080507D0
	mov r1, sp
	adds r1, #1
	strb r0, [r1]
	adds r0, r4, #0
	mov r2, r8
	ldr r3, [sp, #0x3c]
	bl func_080507F8
_080505CA:
	adds r0, r5, #0
	movs r1, #4
	bl func_080507D0
	mov r1, sp
	adds r1, #2
	strb r0, [r1]
	adds r0, r4, #0
	mov r2, sl
	ldr r3, [sp, #0x3c]
	bl func_080507F8
_080505E2:
	adds r0, r5, #0
	movs r1, #3
	bl func_080507D0
	mov r1, sp
	adds r1, #3
	strb r0, [r1]
	adds r0, r4, #0
	mov r2, sb
	ldr r3, [sp, #0x3c]
	bl func_080507F8
_080505FA:
	adds r0, r5, #0
	movs r1, #2
	bl func_080507D0
	add r1, sp, #4
	strb r0, [r1]
	adds r0, r4, #0
	ldr r2, [sp, #0xc]
	ldr r3, [sp, #0x3c]
	bl func_080507F8
	adds r0, r5, #0
	movs r1, #1
	bl func_080507D0
	mov r1, sp
	adds r1, #5
	strb r0, [r1]
	adds r0, r4, #0
	ldr r2, [sp, #8]
	ldr r3, [sp, #0x3c]
	bl func_080507F8
	b _0805062C
_0805062A:
	movs r5, #0
_0805062C:
	movs r1, #0xae
	lsls r1, r1, #1
	adds r0, r4, r1
	str r5, [r0]
	movs r2, #0xac
	lsls r2, r2, #1
	adds r1, r4, r2
	movs r0, #1
	str r0, [r1]
	movs r0, #6
	str r0, [r4, #8]
	movs r1, #0xe0
	lsls r1, r1, #1
	adds r0, r4, r1
	adds r2, #8
	adds r1, r4, r2
	movs r2, #0
	bl func_0805E850
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08050664
func_08050664: @ 0x08050664
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r5, r0, #0
	adds r7, r1, #0
	str r2, [sp, #8]
	mov sl, r3
	ldr r0, [sp, #0x2c]
	mov sb, r0
	ldr r6, [sp, #0x30]
	cmp r7, #0
	beq _0805068C
	adds r0, r7, #0
	bl strlen
	cmp r0, #0x1c
	bls _0805068E
_0805068C:
	ldr r7, _080506B4 @ =0x080F9F3C
_0805068E:
	movs r4, #7
	movs r1, #0xc
	mov r8, r1
	cmp r6, #0
	bne _080506A6
	movs r4, #6
	mov r2, sb
	cmp r2, #0
	bne _080506A6
	movs r0, #0x1a
	mov r8, r0
	movs r4, #5
_080506A6:
	cmp r4, #6
	beq _080506CE
	cmp r4, #6
	bgt _080506B8
	cmp r4, #5
	beq _080506E2
	b _080506BC
	.align 2, 0
_080506B4: .4byte 0x080F9F3C
_080506B8:
	cmp r4, #7
	beq _080506BE
_080506BC:
	movs r4, #5
_080506BE:
	cmp r6, #0
	beq _080506CC
	adds r0, r6, #0
	bl strlen
	cmp r0, r8
	bls _080506CE
_080506CC:
	ldr r6, _08050730 @ =0x080F9F3C
_080506CE:
	mov r1, sb
	cmp r1, #0
	beq _080506DE
	mov r0, sb
	bl strlen
	cmp r0, r8
	bls _080506E2
_080506DE:
	ldr r2, _08050730 @ =0x080F9F3C
	mov sb, r2
_080506E2:
	mov r0, sl
	cmp r0, #0
	beq _080506F0
	bl strlen
	cmp r0, r8
	bls _080506F4
_080506F0:
	ldr r1, _08050730 @ =0x080F9F3C
	mov sl, r1
_080506F4:
	ldr r2, [sp, #8]
	cmp r2, #0
	beq _08050704
	adds r0, r2, #0
	bl strlen
	cmp r0, r8
	bls _08050708
_08050704:
	ldr r0, _08050730 @ =0x080F9F3C
	str r0, [sp, #8]
_08050708:
	adds r0, r5, #0
	adds r0, #0xd0
	bl func_0804F0E0
	movs r1, #0
	mov r0, sp
	strb r1, [r0]
	adds r0, r5, #0
	mov r1, sp
	adds r2, r7, #0
	ldr r3, [sp, #0x34]
	bl func_080507F8
	cmp r4, #6
	beq _08050750
	cmp r4, #6
	bgt _08050734
	cmp r4, #5
	beq _08050768
	b _08050798
	.align 2, 0
_08050730: .4byte 0x080F9F3C
_08050734:
	cmp r4, #7
	bne _08050798
	movs r0, #7
	movs r1, #4
	bl func_080507D0
	mov r1, sp
	adds r1, #1
	strb r0, [r1]
	adds r0, r5, #0
	adds r2, r6, #0
	ldr r3, [sp, #0x34]
	bl func_080507F8
_08050750:
	adds r0, r4, #0
	movs r1, #3
	bl func_080507D0
	mov r1, sp
	adds r1, #2
	strb r0, [r1]
	adds r0, r5, #0
	mov r2, sb
	ldr r3, [sp, #0x34]
	bl func_080507F8
_08050768:
	adds r0, r4, #0
	movs r1, #2
	bl func_080507D0
	mov r1, sp
	adds r1, #3
	strb r0, [r1]
	adds r0, r5, #0
	mov r2, sl
	ldr r3, [sp, #0x34]
	bl func_080507F8
	adds r0, r4, #0
	movs r1, #1
	bl func_080507D0
	add r1, sp, #4
	strb r0, [r1]
	adds r0, r5, #0
	ldr r2, [sp, #8]
	ldr r3, [sp, #0x34]
	bl func_080507F8
	b _0805079A
_08050798:
	movs r4, #5
_0805079A:
	movs r1, #0xae
	lsls r1, r1, #1
	adds r0, r5, r1
	str r4, [r0]
	movs r2, #0xac
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r0, #1
	str r0, [r1]
	movs r0, #6
	str r0, [r5, #8]
	movs r1, #0xe0
	lsls r1, r1, #1
	adds r0, r5, r1
	adds r2, #8
	adds r1, r5, r2
	movs r2, #0
	bl func_0805E850
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_080507D0
func_080507D0: @ 0x080507D0
	push {lr}
	adds r2, r0, #0
	cmp r2, #7
	bls _080507DA
	movs r2, #0
_080507DA:
	subs r0, r1, #1
	cmp r0, #5
	bls _080507E2
	movs r1, #1
_080507E2:
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r0, r1
	ldr r1, _080507F4 @ =0x080F9F3C
	adds r0, r0, r1
	ldrb r0, [r0]
	pop {r1}
	bx r1
	.align 2, 0
_080507F4: .4byte 0x080F9F3C

	thumb_func_start func_080507F8
func_080507F8: @ 0x080507F8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	adds r7, r2, #0
	mov r8, r3
	ldrb r0, [r1]
	lsls r1, r0, #0x19
	lsrs r6, r1, #0x1b
	lsls r0, r0, #0x1e
	adds r5, r4, #0
	adds r5, #0xd0
	lsrs r0, r0, #0x1e
	cmp r0, #2
	bls _0805081E
	movs r1, #3
	bl __umodsi3
_0805081E:
	strh r0, [r5, #0x16]
	adds r0, r6, #0
	cmp r0, #0x1b
	bls _0805082C
	movs r1, #0x1c
	bl __umodsi3
_0805082C:
	strh r0, [r5, #0x14]
	movs r0, #0
	strb r0, [r5, #0x19]
	adds r4, #0xec
	adds r0, r4, #0
	adds r1, r7, #0
	mov r2, r8
	bl func_080ADD5C
	adds r6, r5, #0
	adds r5, r4, #0
	ldr r4, _08050864 @ =vtable_unk_080E78F0
_08050844:
	str r4, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	mov r2, sp
	bl func_080ADD78
	str r4, [sp]
	cmp r0, #1
	beq _08050844
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08050864: .4byte vtable_unk_080E78F0

	thumb_func_start func_08050868
func_08050868: @ 0x08050868
	push {lr}
	adds r3, r1, #0
	cmp r0, #7
	bls _08050872
	b _08050AD0
_08050872:
	lsls r0, r0, #2
	ldr r1, _0805087C @ =_08050880
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805087C: .4byte _08050880
_08050880: @ jump table
	.4byte _080508A0 @ case 0
	.4byte _080508B2 @ case 1
	.4byte _08050930 @ case 2
	.4byte _0805097E @ case 3
	.4byte _08050A18 @ case 4
	.4byte _080508A0 @ case 5
	.4byte _080508FA @ case 6
	.4byte _08050930 @ case 7
_080508A0:
	movs r1, #0xc0
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _080508EC
_080508AA:
	cmp r3, #1
	bne _080508B0
	b _08050AC8
_080508B0:
	b _08050AD0
_080508B2:
	movs r1, #0x80
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _080508C8
	cmp r3, #2
	bne _080508C2
	b _08050ACC
_080508C2:
	cmp r3, #2
	ble _080508AA
	b _08050AD0
_080508C8:
	movs r1, #0x40
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _080508EC
	cmp r3, #2
	bne _080508D8
	b _08050AD0
_080508D8:
	cmp r3, #2
	bgt _080508E4
_080508DC:
	cmp r3, #1
	bne _080508E2
	b _08050ACC
_080508E2:
	b _08050AD0
_080508E4:
	cmp r3, #3
	beq _080508EA
	b _08050AD0
_080508EA:
	b _08050AC8
_080508EC:
	movs r0, #0x30
	ands r2, r0
	cmp r2, #0
	bne _080508F6
	b _08050AD0
_080508F6:
	adds r0, r3, #0
	b _08050AD2
_080508FA:
	movs r1, #0x80
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _08050910
_08050904:
	cmp r3, #2
	bne _0805090A
	b _08050AD0
_0805090A:
	cmp r3, #2
	ble _080508AA
	b _080508E4
_08050910:
	movs r1, #0x40
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _08050904
	movs r0, #0x30
	ands r2, r0
	cmp r2, #0
	bne _08050924
	b _08050AD0
_08050924:
	cmp r3, #2
	bne _0805092A
	b _08050ACC
_0805092A:
	cmp r3, #2
	ble _080508DC
	b _08050AD0
_08050930:
	movs r1, #0x80
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _08050952
_0805093A:
	cmp r3, #2
	bne _08050940
	b _08050AD0
_08050940:
	cmp r3, #2
	ble _080508AA
	cmp r3, #3
	bne _0805094A
	b _08050ABC
_0805094A:
	cmp r3, #4
	beq _08050950
	b _08050AD0
_08050950:
	b _08050ACC
_08050952:
	movs r1, #0x40
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _0805093A
	movs r0, #0x30
	ands r2, r0
	cmp r2, #0
	bne _08050966
	b _08050AD0
_08050966:
	cmp r3, #2
	bne _0805096C
	b _08050ABC
_0805096C:
	cmp r3, #2
	ble _080508DC
	cmp r3, #3
	bne _08050976
	b _08050AD0
_08050976:
	cmp r3, #4
	beq _0805097C
	b _08050AD0
_0805097C:
	b _08050AC8
_0805097E:
	movs r1, #0x80
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _080509B4
	subs r0, r3, #1
	cmp r0, #4
	bls _08050990
	b _08050AD0
_08050990:
	lsls r0, r0, #2
	ldr r1, _0805099C @ =_080509A0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805099C: .4byte _080509A0
_080509A0: @ jump table
	.4byte _08050AC8 @ case 0
	.4byte _08050ACC @ case 1
	.4byte _08050AD0 @ case 2
	.4byte _08050AC0 @ case 3
	.4byte _08050ABC @ case 4
_080509B4:
	movs r1, #0x40
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _080509E8
	subs r0, r3, #1
	cmp r0, #4
	bls _080509C6
	b _08050AD0
_080509C6:
	lsls r0, r0, #2
	ldr r1, _080509D0 @ =_080509D4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080509D0: .4byte _080509D4
_080509D4: @ jump table
	.4byte _08050ACC @ case 0
	.4byte _08050AD0 @ case 1
	.4byte _08050AC8 @ case 2
	.4byte _08050AC0 @ case 3
	.4byte _08050ABC @ case 4
_080509E8:
	movs r0, #0x30
	ands r2, r0
	cmp r2, #0
	beq _08050AD0
	subs r0, r3, #1
	cmp r0, #4
	bhi _08050AD0
	lsls r0, r0, #2
	ldr r1, _08050A00 @ =_08050A04
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08050A00: .4byte _08050A04
_08050A04: @ jump table
	.4byte _08050ABC @ case 0
	.4byte _08050AC0 @ case 1
	.4byte _08050AC0 @ case 2
	.4byte _08050AD0 @ case 3
	.4byte _08050AC8 @ case 4
_08050A18:
	movs r1, #0x80
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _08050A50
	subs r0, r3, #1
	cmp r0, #5
	bhi _08050AD0
	lsls r0, r0, #2
	ldr r1, _08050A34 @ =_08050A38
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08050A34: .4byte _08050A38
_08050A38: @ jump table
	.4byte _08050AC8 @ case 0
	.4byte _08050ACC @ case 1
	.4byte _08050AD0 @ case 2
	.4byte _08050AC0 @ case 3
	.4byte _08050AC4 @ case 4
	.4byte _08050ABC @ case 5
_08050A50:
	movs r1, #0x40
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _08050A88
	subs r0, r3, #1
	cmp r0, #5
	bhi _08050AD0
	lsls r0, r0, #2
	ldr r1, _08050A6C @ =_08050A70
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08050A6C: .4byte _08050A70
_08050A70: @ jump table
	.4byte _08050ACC @ case 0
	.4byte _08050AD0 @ case 1
	.4byte _08050AC8 @ case 2
	.4byte _08050AC4 @ case 3
	.4byte _08050ABC @ case 4
	.4byte _08050AC0 @ case 5
_08050A88:
	movs r0, #0x30
	ands r2, r0
	cmp r2, #0
	beq _08050AD0
	subs r0, r3, #1
	cmp r0, #5
	bhi _08050AD0
	lsls r0, r0, #2
	ldr r1, _08050AA0 @ =_08050AA4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08050AA0: .4byte _08050AA4
_08050AA4: @ jump table
	.4byte _08050ABC @ case 0
	.4byte _08050AC0 @ case 1
	.4byte _08050AC4 @ case 2
	.4byte _08050AD0 @ case 3
	.4byte _08050AC8 @ case 4
	.4byte _08050ACC @ case 5
_08050ABC:
	movs r0, #4
	b _08050AD2
_08050AC0:
	movs r0, #5
	b _08050AD2
_08050AC4:
	movs r0, #6
	b _08050AD2
_08050AC8:
	movs r0, #2
	b _08050AD2
_08050ACC:
	movs r0, #3
	b _08050AD2
_08050AD0:
	movs r0, #1
_08050AD2:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08050AD8
func_08050AD8: @ 0x08050AD8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	cmp r5, #0
	blo _08050AEA
	bl func_080ADD20
	cmp r5, r0
	blo _08050AF2
_08050AEA:
	adds r0, r4, #0
	bl func_08050B3C
	b _08050B36
_08050AF2:
	movs r0, #0xee
	lsls r0, r0, #1
	adds r2, r4, r0
	ldrb r1, [r2]
	lsls r0, r1, #0x1f
	cmp r0, #0
	beq _08050B0E
	movs r1, #0xf0
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r0, r5
	beq _08050B36
	b _08050B14
_08050B0E:
	movs r0, #1
	orrs r0, r1
	strb r0, [r2]
_08050B14:
	movs r1, #0xf2
	lsls r1, r1, #1
	adds r0, r4, r1
	adds r1, r5, #0
	bl func_080ADCA4
	movs r1, #0xf0
	lsls r1, r1, #1
	adds r0, r4, r1
	str r5, [r0]
	movs r0, #0xee
	lsls r0, r0, #1
	adds r2, r4, r0
	ldrb r0, [r2]
	movs r1, #2
	orrs r0, r1
	strb r0, [r2]
_08050B36:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start func_08050B3C
func_08050B3C: @ 0x08050B3C
	movs r1, #0xee
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrb r2, [r0]
	movs r1, #2
	rsbs r1, r1, #0
	ands r1, r2
	strb r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start func_08050B50
func_08050B50: @ 0x08050B50
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	mov r8, r0
	adds r4, r1, #0
	cmp r4, #0
	beq _08050B6E
	adds r0, r4, #0
	bl strlen
	adds r6, r0, #0
	b _08050B70
_08050B6E:
	movs r6, #0
_08050B70:
	subs r0, r6, #1
	cmp r0, #0xb
	bls _08050B7E
	mov r0, r8
	bl func_08050C18
	b _08050C06
_08050B7E:
	adds r7, r4, #0
	movs r5, #0
	mov r0, sp
	adds r0, #0xc
	str r0, [sp, #0x14]
	movs r2, #4
	mov sl, r2
	movs r0, #2
	mov sb, r0
_08050B90:
	lsls r1, r5, #6
	adds r1, r1, r5
	lsls r1, r1, #2
	add r1, r8
	add r0, sp, #0xc
	mov r2, sl
	strh r2, [r0]
	mov r2, sb
	ldr r0, [sp, #0x14]
	strh r2, [r0, #2]
	ldr r0, [sp, #0xc]
	movs r2, #0xfc
	lsls r2, r2, #1
	adds r4, r1, r2
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	adds r5, #1
	cmp r6, #0
	beq _08050BF0
	add r2, sp, #4
	adds r1, r4, #0
	add r4, sp, #0x10
	add r3, sp, #8
_08050BC2:
	ldrb r0, [r7]
	strb r0, [r2]
	adds r7, #1
	adds r2, #1
	subs r6, #1
	cmp r6, #0
	beq _08050BD4
	cmp r2, r3
	bne _08050BC2
_08050BD4:
	movs r0, #0
	strb r0, [r2]
	add r0, sp, #0x10
	mov r2, sl
	strh r2, [r0]
	mov r0, sb
	strh r0, [r4, #2]
	ldr r0, [sp, #0x10]
	add r2, sp, #4
	str r2, [sp]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
_08050BF0:
	cmp r5, #2
	bls _08050B90
	movs r2, #0xf8
	lsls r2, r2, #1
	add r2, r8
	ldrb r0, [r2]
	movs r1, #1
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r2]
_08050C06:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08050C18
func_08050C18: @ 0x08050C18
	movs r1, #0xf8
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrb r2, [r0]
	movs r1, #2
	rsbs r1, r1, #0
	ands r1, r2
	strb r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start func_08050C2C
func_08050C2C: @ 0x08050C2C
	push {lr}
	adds r2, r0, #0
	adds r3, r1, #0
	ldr r1, _08050C44 @ =0x00000504
	adds r0, r2, r1
	ldrh r0, [r0, #0x20]
	cmp r3, r0
	blo _08050C48
	adds r0, r2, #0
	bl func_08050C64
	b _08050C5C
	.align 2, 0
_08050C44: .4byte 0x00000504
_08050C48:
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r2, r1
	movs r1, #1
	strb r1, [r0]
	ldr r1, _08050C60 @ =0x00000534
	adds r0, r2, r1
	adds r1, r3, #0
	bl func_0805E860
_08050C5C:
	pop {r0}
	bx r0
	.align 2, 0
_08050C60: .4byte 0x00000534

	thumb_func_start func_08050C64
func_08050C64: @ 0x08050C64
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r1, #0
	strb r1, [r0]
	bx lr
_08050C70:
	.byte 0x10, 0xB5, 0x83, 0xB0, 0x04, 0x1C, 0x02, 0xAA, 0x00, 0x20, 0x10, 0x70, 0x68, 0x46, 0x12, 0x1A
	.byte 0x00, 0x21, 0x82, 0xF0, 0xFF, 0xFE, 0x68, 0x46, 0x02, 0x30, 0x01, 0x22, 0x02, 0x70, 0x69, 0x46
	.byte 0x03, 0x31, 0x15, 0x20, 0x08, 0x70, 0x68, 0x46, 0x07, 0x30, 0x02, 0x70, 0x21, 0x1C, 0x68, 0x46
	.byte 0x0C, 0xC8, 0x0C, 0xC1, 0x20, 0x1C, 0x03, 0xB0, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
	.byte 0x03, 0x21, 0x02, 0x48, 0x02, 0x40, 0x0A, 0x43, 0x10, 0x1C, 0x70, 0x47, 0x00, 0xFF, 0xFF, 0xFF

	thumb_func_start func_08050CC0
func_08050CC0: @ 0x08050CC0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov r8, r0
	mov sb, r1
	mov sl, r2
	adds r7, r3, #0
	ldr r4, [sp, #0x2c]
	ldr r5, [sp, #0x30]
	ldr r6, [sp, #0x34]
	ldr r0, _08050D08 @ =0x00000554
	bl __builtin_new
	str r4, [sp]
	str r5, [sp, #4]
	str r6, [sp, #8]
	mov r1, sb
	mov r2, sl
	adds r3, r7, #0
	bl func_0804F288
	mov r1, r8
	str r0, [r1]
	mov r0, r8
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08050D08: .4byte 0x00000554

	thumb_func_start func_08050D0C
func_08050D0C: @ 0x08050D0C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _08050D1E
	movs r1, #3
	bl func_0804F69C
_08050D1E:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _08050D2C
	adds r0, r4, #0
	bl __builtin_delete
_08050D2C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08050D34
func_08050D34: @ 0x08050D34
	ldr r0, [r0]
	ldr r0, [r0, #8]
	bx lr
	.align 2, 0

	thumb_func_start func_08050D3C
func_08050D3C: @ 0x08050D3C
	push {r4, r5, r6, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x1c]
	ldr r5, [sp, #0x20]
	ldr r6, [sp, #0x24]
	ldr r0, [r0]
	str r4, [sp]
	str r5, [sp, #4]
	str r6, [sp, #8]
	bl func_0804F7A4
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08050D5C
func_08050D5C: @ 0x08050D5C
	push {lr}
	ldr r0, [r0]
	bl func_0805039C
	pop {r0}
	bx r0

	thumb_func_start func_08050D68
func_08050D68: @ 0x08050D68
	push {lr}
	ldr r0, [r0]
	bl func_080503E4
	pop {r0}
	bx r0

	thumb_func_start func_08050D74
func_08050D74: @ 0x08050D74
	push {lr}
	ldr r0, [r0]
	bl func_080503FC
	pop {r0}
	bx r0

	thumb_func_start func_08050D80
func_08050D80: @ 0x08050D80
	push {lr}
	ldr r0, [r0]
	bl func_08050410
	pop {r0}
	bx r0

	thumb_func_start func_08050D8C
func_08050D8C: @ 0x08050D8C
	push {lr}
	ldr r0, [r0]
	movs r2, #0x80
	lsls r2, r2, #1
	movs r3, #0
	bl func_08050424
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08050DA0
func_08050DA0: @ 0x08050DA0
	push {lr}
	adds r3, r2, #0
	ldr r0, [r0]
	movs r2, #0x80
	lsls r2, r2, #1
	bl func_08050424
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08050DB4
func_08050DB4: @ 0x08050DB4
	push {lr}
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, [r0]
	movs r3, #0
	bl func_08050424
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08050DC8
func_08050DC8: @ 0x08050DC8
	push {lr}
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, [r0]
	bl func_08050424
	pop {r0}
	bx r0

	thumb_func_start func_08050DD8
func_08050DD8: @ 0x08050DD8
	ldr r2, [r0]
	ldrb r0, [r2, #0xd]
	movs r1, #0
	strb r1, [r2, #0xd]
	bx lr
	.align 2, 0

	thumb_func_start func_08050DE4
func_08050DE4: @ 0x08050DE4
	ldr r2, [r0]
	ldrb r0, [r2, #0xd]
	movs r1, #1
	strb r1, [r2, #0xd]
	bx lr
	.align 2, 0

	thumb_func_start func_08050DF0
func_08050DF0: @ 0x08050DF0
	push {lr}
	ldr r1, [r0]
	ldr r0, [r1, #8]
	cmp r0, #6
	beq _08050E04
	movs r2, #0xac
	lsls r2, r2, #1
	adds r0, r1, r2
	ldr r0, [r0]
	b _08050E06
_08050E04:
	movs r0, #0
_08050E06:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08050E0C
func_08050E0C: @ 0x08050E0C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	ldr r4, [sp, #0x24]
	ldr r5, [sp, #0x28]
	ldr r6, [sp, #0x2c]
	ldr r7, [sp, #0x30]
	ldr r0, [r0]
	str r4, [sp]
	str r5, [sp, #4]
	str r6, [sp, #8]
	str r7, [sp, #0xc]
	bl func_08050478
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08050E30
func_08050E30: @ 0x08050E30
	push {r4, r5, r6, lr}
	sub sp, #0xc
	ldr r4, [sp, #0x1c]
	ldr r5, [sp, #0x20]
	ldr r6, [sp, #0x24]
	ldr r0, [r0]
	str r4, [sp]
	str r5, [sp, #4]
	str r6, [sp, #8]
	bl func_08050664
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08050E50
func_08050E50: @ 0x08050E50
	push {lr}
	ldr r0, [r0]
	bl func_08050AD8
	pop {r0}
	bx r0

	thumb_func_start func_08050E5C
func_08050E5C: @ 0x08050E5C
	push {lr}
	ldr r0, [r0]
	bl func_08050B3C
	pop {r0}
	bx r0

	thumb_func_start func_08050E68
func_08050E68: @ 0x08050E68
	push {lr}
	ldr r0, [r0]
	bl func_08050B50
	pop {r0}
	bx r0

	thumb_func_start func_08050E74
func_08050E74: @ 0x08050E74
	push {lr}
	ldr r0, [r0]
	bl func_08050C18
	pop {r0}
	bx r0

	thumb_func_start func_08050E80
func_08050E80: @ 0x08050E80
	push {lr}
	ldr r0, [r0]
	bl func_08050C2C
	pop {r0}
	bx r0

	thumb_func_start func_08050E8C
func_08050E8C: @ 0x08050E8C
	push {lr}
	ldr r0, [r0]
	bl func_08050C64
	pop {r0}
	bx r0

	thumb_func_start func_08050E98
func_08050E98: @ 0x08050E98
	push {r4, lr}
	ldr r3, [r0]
	movs r0, #0xaa
	lsls r0, r0, #3
	adds r3, r3, r0
	ldrb r4, [r3]
	lsls r0, r4, #0x1a
	lsrs r0, r0, #0x1a
	adds r2, r0, #0
	bics r2, r1
	movs r1, #0x40
	rsbs r1, r1, #0
	ands r1, r4
	orrs r1, r2
	strb r1, [r3]
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start func_08050EBC
func_08050EBC: @ 0x08050EBC
	push {r4, lr}
	ldr r3, [r0]
	movs r0, #0xaa
	lsls r0, r0, #3
	adds r3, r3, r0
	ldrb r4, [r3]
	lsls r0, r4, #0x1a
	lsrs r0, r0, #0x1a
	orrs r1, r0
	movs r2, #0x3f
	ands r1, r2
	movs r2, #0x40
	rsbs r2, r2, #0
	ands r2, r4
	orrs r2, r1
	strb r2, [r3]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08050EE4:
	.byte 0x70, 0xB5, 0x04, 0x9E, 0x00, 0x24, 0x04, 0x60, 0x44, 0x60, 0x13, 0x4C
	.byte 0x84, 0x60, 0x1F, 0x24, 0x21, 0x40, 0x05, 0x7B, 0x20, 0x24, 0x64, 0x42, 0x2C, 0x40, 0x0C, 0x43
	.byte 0x04, 0x73, 0x0F, 0x4C, 0x21, 0x1C, 0x0A, 0x40, 0x52, 0x01, 0x84, 0x89, 0x0D, 0x49, 0x21, 0x40
	.byte 0x11, 0x43, 0x81, 0x81, 0x0F, 0x22, 0x1A, 0x40, 0xD2, 0x03, 0xC1, 0x68, 0x0A, 0x4B, 0x19, 0x40
	.byte 0x11, 0x43, 0xC1, 0x60, 0x0F, 0x21, 0x0E, 0x40, 0xF6, 0x00, 0x82, 0x7B, 0x79, 0x21, 0x49, 0x42
	.byte 0x11, 0x40, 0x31, 0x43, 0x81, 0x73, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x78, 0x78, 0x0E, 0x08
	.byte 0xFF, 0x03, 0x00, 0x00, 0x1F, 0x80, 0xFF, 0xFF, 0xFF, 0x7F, 0xF8, 0xFF, 0x00, 0xB5, 0x00, 0x79
	.byte 0x01, 0x1C, 0x00, 0x28, 0x00, 0xD0, 0x01, 0x21, 0x08, 0x1C, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00
	.byte 0x02, 0x4B, 0x03, 0x60, 0x09, 0x68, 0x41, 0x60, 0x02, 0x72, 0x70, 0x47, 0xA8, 0x78, 0x0E, 0x08
	.byte 0x80, 0x7E, 0x70, 0x47, 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x10, 0x1C, 0x02, 0x28, 0x02, 0xD9
	.byte 0x03, 0x21, 0x7F, 0xF0, 0xE4, 0xFF, 0xE0, 0x82, 0x28, 0x1C, 0x1B, 0x28, 0x02, 0xD9, 0x1C, 0x21
	.byte 0x7F, 0xF0, 0xDD, 0xFF, 0xA0, 0x82, 0x00, 0x20, 0x60, 0x76, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47
	.byte 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x8A, 0xB0, 0x04, 0x90, 0x09, 0x91
	.byte 0x40, 0x68, 0x41, 0x68, 0xB6, 0xF7, 0x84, 0xFA, 0x00, 0x28, 0x00, 0xDA, 0x84, 0xE0, 0x00, 0x21
	.byte 0x6B, 0x22, 0x91, 0x46, 0x02, 0xAF, 0xBA, 0x46, 0x00, 0x01, 0x06, 0x90, 0x04, 0x9A, 0x10, 0x7E
	.byte 0x08, 0x18, 0x02, 0x28, 0x00, 0xDD, 0x03, 0x38, 0x80, 0x00, 0x04, 0x9F, 0xC0, 0x19, 0x80, 0x68
	.byte 0x08, 0x22, 0x90, 0x46, 0x01, 0x31, 0x05, 0x91, 0x4F, 0x46, 0x11, 0x37, 0x07, 0x97, 0x54, 0x46
	.byte 0x06, 0x1D, 0x05, 0x1C, 0x06, 0x23, 0x00, 0x20, 0x00, 0x21, 0x00, 0x90, 0x01, 0x91, 0x80, 0x20
	.byte 0x40, 0x01, 0x00, 0x9A, 0x02, 0x43, 0x0E, 0x48, 0x02, 0x40, 0x80, 0x20, 0xC0, 0x01, 0x02, 0x43
	.byte 0x0C, 0x48, 0x02, 0x40, 0x80, 0x20, 0x00, 0x06, 0x02, 0x43, 0x00, 0x92, 0xA9, 0x68, 0x48, 0x42
	.byte 0x08, 0x43, 0x00, 0x28, 0x12, 0xDA, 0x30, 0x1C, 0x08, 0x93, 0xB6, 0xF7, 0x8F, 0xFE, 0x80, 0x05
	.byte 0x80, 0x0D, 0x05, 0x4A, 0x01, 0x99, 0x11, 0x40, 0x01, 0x43, 0x01, 0x91, 0x08, 0x9B, 0x0B, 0xE0
	.byte 0xFF, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x00, 0xFC, 0xFF, 0xFF, 0x22, 0x48, 0x10, 0x40
	.byte 0x80, 0x21, 0x89, 0x00, 0x08, 0x43, 0x00, 0x90, 0x00, 0x98, 0x01, 0x99, 0x02, 0x90, 0x03, 0x91
	.byte 0x48, 0x46, 0x01, 0x06, 0x09, 0x0E, 0x1D, 0x4A, 0x02, 0x98, 0x10, 0x40, 0x08, 0x43, 0x02, 0x90
	.byte 0x1B, 0x49, 0x08, 0x1C, 0x42, 0x46, 0x02, 0x40, 0x60, 0x88, 0x1A, 0x4F, 0x39, 0x1C, 0x08, 0x40
	.byte 0x10, 0x43, 0x60, 0x80, 0x61, 0x79, 0x0F, 0x20, 0x08, 0x40, 0x06, 0x99, 0x08, 0x43, 0x60, 0x71
	.byte 0x09, 0x9F, 0x3A, 0x78, 0x7F, 0x2A, 0x0A, 0xD8, 0xD0, 0x00, 0x04, 0x30, 0x38, 0x18, 0x02, 0x99
	.byte 0x01, 0x60, 0x57, 0x46, 0xB9, 0x88, 0x81, 0x80, 0x50, 0x1C, 0x09, 0x99, 0x08, 0x70, 0x10, 0x36
	.byte 0x10, 0x35, 0x01, 0x3B, 0x20, 0x22, 0x90, 0x44, 0x00, 0x2B, 0x9C, 0xDA, 0x05, 0x99, 0x07, 0x9F
	.byte 0xB9, 0x46, 0x02, 0x29, 0x00, 0xDC, 0x81, 0xE7, 0x0A, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46
	.byte 0xAA, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xFF, 0xFC, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF
	.byte 0xFF, 0x01, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xF0, 0xB5, 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4
	.byte 0x80, 0x46, 0x00, 0x21, 0x00, 0x27, 0x88, 0x00, 0x01, 0x31, 0x89, 0x46, 0x41, 0x46, 0x46, 0x18
	.byte 0x08, 0x36, 0x30, 0x68, 0x39, 0x01, 0x45, 0x18, 0x28, 0x7B, 0x00, 0x28, 0x14, 0xD0, 0x2A, 0x1D
	.byte 0x51, 0x68, 0x48, 0x42, 0x08, 0x43, 0x00, 0x28, 0x0C, 0xDA, 0x2C, 0x68, 0x04, 0x34, 0x10, 0x1C
	.byte 0xB6, 0xF7, 0x14, 0xFE, 0x01, 0x1C, 0x49, 0x01, 0x0F, 0x48, 0x09, 0x18, 0x20, 0x1C, 0x40, 0x22
	.byte 0x82, 0xF0, 0x0C, 0xFB, 0x00, 0x20, 0x28, 0x73, 0x01, 0x37, 0x06, 0x2F, 0xE1, 0xDD, 0x49, 0x46
	.byte 0x02, 0x29, 0xD7, 0xDD, 0x41, 0x46, 0x48, 0x7E, 0x00, 0x28, 0x01, 0xD0, 0x00, 0x20, 0x48, 0x76
	.byte 0x41, 0x46, 0x88, 0x7E, 0x00, 0x28, 0x01, 0xD0, 0x00, 0x20, 0x88, 0x76, 0x18, 0xBC, 0x98, 0x46
	.byte 0xA1, 0x46, 0xF0, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x01, 0x06, 0xF0, 0xB5, 0x57, 0x46
	.byte 0x4E, 0x46, 0x45, 0x46, 0xE0, 0xB4, 0x85, 0xB0, 0x81, 0x46, 0x03, 0x92, 0x4D, 0x48, 0x4A, 0x46
	.byte 0x10, 0x60, 0x51, 0x60, 0x49, 0x46, 0x08, 0x31, 0x02, 0x20, 0x00, 0x23, 0x01, 0x22, 0x52, 0x42
	.byte 0x08, 0xC1, 0x01, 0x38, 0x90, 0x42, 0xFB, 0xD1, 0x00, 0x21, 0x00, 0x20, 0x4A, 0x46, 0x90, 0x82
	.byte 0xD0, 0x82, 0x11, 0x76, 0x51, 0x76, 0x91, 0x76, 0xD1, 0x76, 0x00, 0x24, 0x70, 0x20, 0xAF, 0xF7
	.byte 0x11, 0xFA, 0x80, 0x46, 0x45, 0x46, 0x06, 0x26, 0xA0, 0x00, 0x82, 0x46, 0x01, 0x34, 0x04, 0x94
	.byte 0x82, 0x20, 0x40, 0x00, 0xAF, 0xF7, 0x06, 0xFA, 0x2C, 0x1C, 0x01, 0xC4, 0x20, 0x1C, 0xB6, 0xF7
	.byte 0x51, 0xFB, 0x00, 0x21, 0x61, 0x60, 0x29, 0x73, 0x10, 0x35, 0x01, 0x3E, 0x01, 0x20, 0x40, 0x42
	.byte 0x86, 0x42, 0xED, 0xD1, 0x57, 0x46, 0x4F, 0x44, 0x08, 0x37, 0x3E, 0x68, 0xB0, 0x45, 0x17, 0xD0
	.byte 0x00, 0x2E, 0x15, 0xD0, 0x35, 0x1C, 0x70, 0x35, 0xAE, 0x42, 0x0E, 0xD0, 0x10, 0x3D, 0x2C, 0x1D
	.byte 0x61, 0x68, 0x20, 0x1C, 0xB6, 0xF7, 0x10, 0xFD, 0x20, 0x1C, 0x02, 0x21, 0xB6, 0xF7, 0xEC, 0xFB
	.byte 0x28, 0x68, 0xAF, 0xF7, 0xF9, 0xF9, 0xAE, 0x42, 0xF0, 0xD1, 0x30, 0x1C, 0xAF, 0xF7, 0xF4, 0xF9
	.byte 0x42, 0x46, 0x3A, 0x60, 0x00, 0x20, 0x80, 0x46, 0x56, 0x46, 0x4E, 0x44, 0x08, 0x36, 0x02, 0xAF
	.byte 0x31, 0x68, 0x42, 0x46, 0x10, 0x01, 0x0D, 0x18, 0x68, 0x46, 0x03, 0x99, 0x03, 0x22, 0xB7, 0xF7
	.byte 0xC7, 0xF8, 0x2C, 0x1D, 0xA5, 0x45, 0x08, 0xD0, 0x61, 0x68, 0x20, 0x1C, 0xB6, 0xF7, 0xEC, 0xFC
	.byte 0x01, 0x99, 0x20, 0x1C, 0xB6, 0xF7, 0x40, 0xFD, 0x60, 0x60, 0x01, 0x99, 0x68, 0x46, 0xB6, 0xF7
	.byte 0xE3, 0xFC, 0x68, 0x46, 0x02, 0x21, 0xB6, 0xF7, 0xBF, 0xFB, 0x61, 0x68, 0x48, 0x42, 0x08, 0x43
	.byte 0xC0, 0x0F, 0x00, 0x28, 0x0A, 0xD0, 0x29, 0x68, 0x04, 0x20, 0x02, 0x22, 0x38, 0x80, 0x7A, 0x80
	.byte 0x02, 0x98, 0x04, 0x31, 0x00, 0x22, 0xFD, 0xF7, 0x8B, 0xFA, 0x01, 0x20, 0x28, 0x73, 0x01, 0x20
	.byte 0x80, 0x44, 0x41, 0x46, 0x06, 0x29, 0xCB, 0xDD, 0x04, 0x9C, 0x02, 0x2C, 0x86, 0xDD, 0x4A, 0x46
	.byte 0x90, 0x76, 0x48, 0x46, 0x05, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC
	.byte 0x02, 0xBC, 0x08, 0x47, 0xC0, 0x78, 0x0E, 0x08, 0x00, 0xB5, 0x00, 0x7E, 0x08, 0x18, 0x02, 0x28
	.byte 0x00, 0xDD, 0x03, 0x38, 0x02, 0xBC, 0x08, 0x47, 0x89, 0x00, 0x09, 0x18, 0x88, 0x68, 0x70, 0x47
	.byte 0x89, 0x00, 0x09, 0x18, 0x88, 0x68, 0x70, 0x47, 0x30, 0xB5, 0x03, 0xAC, 0x25, 0x78, 0x00, 0x24
	.byte 0x04, 0x60, 0x44, 0x60, 0x0B, 0x4C, 0x84, 0x60, 0xC1, 0x60, 0x02, 0x61, 0x0A, 0x4A, 0x11, 0x1C
	.byte 0x0B, 0x40, 0x82, 0x8A, 0x09, 0x49, 0x11, 0x40, 0x19, 0x43, 0x81, 0x82, 0x42, 0x7D, 0x41, 0x21
	.byte 0x49, 0x42, 0x11, 0x40, 0xED, 0x01, 0x7F, 0x22, 0x11, 0x40, 0x29, 0x43, 0x41, 0x75, 0x30, 0xBC
	.byte 0x02, 0xBC, 0x08, 0x47, 0xE0, 0x78, 0x0E, 0x08, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF

	thumb_func_start func_08051320
func_08051320: @ 0x08051320
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov sl, r0
	adds r6, r1, #0
	adds r7, r2, #0
	mov ip, r3
	movs r1, #0x1f
	ands r6, r1
	adds r0, r6, r3
	cmp r0, #0x20
	bls _08051344
	movs r0, #0x20
	subs r0, r0, r6
	mov ip, r0
_08051344:
	ands r7, r1
	ldr r1, [sp, #0x2c]
	adds r0, r7, r1
	cmp r0, #0x20
	bls _08051354
	movs r0, #0x20
	subs r0, r0, r7
	str r0, [sp, #0x2c]
_08051354:
	ldr r2, _08051438 @ =0x000003FF
	adds r1, r2, #0
	ldr r0, [sp, #0x30]
	adds r4, r0, #0
	ands r4, r1
	ldr r0, [sp, #0x34]
	lsls r0, r0, #0xc
	movs r2, #0xf0
	lsls r2, r2, #8
	adds r1, r2, #0
	ands r0, r1
	orrs r4, r0
	lsls r0, r7, #6
	mov r1, sl
	adds r5, r1, r0
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	adds r0, r4, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	lsls r2, r6, #1
	adds r3, r5, r2
	strh r4, [r3]
	adds r3, #2
	mov r0, ip
	adds r1, r6, r0
	lsls r0, r1, #1
	subs r0, #2
	adds r0, r5, r0
	str r1, [sp, #8]
	ldr r1, [sp, #0x2c]
	adds r7, r7, r1
	str r2, [sp]
_0805139C:
	mov r2, r8
	strh r2, [r3]
	adds r3, #2
	cmp r3, r0
	bne _0805139C
	mov r0, sb
	strh r0, [r3]
	adds r5, #0x40
	adds r0, r4, #2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	adds r0, r4, #3
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r4, #0
	adds r0, #8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r0, r7, #6
	subs r0, #0x40
	mov r1, sl
	adds r2, r1, r0
	adds r0, r4, #5
	mov ip, r0
	adds r1, r4, #7
	mov sl, r1
	adds r4, #6
	str r4, [sp, #4]
	ldr r7, [sp]
	ldr r1, [sp, #8]
	lsls r0, r1, #1
	subs r4, r0, #2
_080513E0:
	adds r0, r5, r7
	mov r1, sb
	strh r1, [r0]
	adds r0, #2
	adds r1, r5, r4
	adds r3, r5, #0
	adds r3, #0x40
_080513EE:
	strh r6, [r0]
	adds r0, #2
	cmp r0, r1
	bne _080513EE
	mov r1, r8
	strh r1, [r0]
	adds r5, r3, #0
	cmp r3, r2
	bne _080513E0
	mov r2, sl
	lsls r0, r2, #0x10
	lsrs r4, r0, #0x10
	ldr r1, [sp, #4]
	lsls r0, r1, #0x10
	lsrs r5, r0, #0x10
	ldr r0, [sp]
	adds r2, r3, r0
	mov r1, ip
	strh r1, [r2]
	adds r2, #2
	ldr r1, [sp, #8]
	lsls r0, r1, #1
	subs r0, #2
	adds r0, r3, r0
_0805141E:
	strh r4, [r2]
	adds r2, #2
	cmp r2, r0
	bne _0805141E
	strh r5, [r2]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08051438: .4byte 0x000003FF

	thumb_func_start func_0805143C
func_0805143C: @ 0x0805143C
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r7, r0, #0
	adds r4, r1, #0
	mov r3, sp
	movs r1, #0x1e
	movs r2, #1
	movs r6, #0
	movs r5, #0
	mov r0, sp
	strh r1, [r0]
	strh r2, [r3, #2]
	adds r0, r7, #0
	mov r1, sp
	bl func_080084DC
	ldr r0, _080514F8 @ =vtable_unk_080E7928
	str r0, [r7, #4]
	str r4, [r7, #8]
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #2
	bl func_08008B54
	adds r4, r7, #0
	adds r4, #0x10
	ldr r1, _080514FC @ =0x08527094
	adds r0, r4, #0
	bl func_0805E6CC
	adds r0, r7, #0
	adds r0, #0x40
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0x54
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r6, [r0, #0x10]
	strb r6, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r6, [r0, #0x18]
	adds r0, #0x20
	adds r1, r4, #0
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0x88
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r6, [r0, #0x10]
	strb r6, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r6, [r0, #0x18]
	adds r4, #0x98
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	ldr r1, _08051500 @ =0x000008B8
	adds r0, r7, r1
	strh r5, [r0]
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080514F8: .4byte vtable_unk_080E7928
_080514FC: .4byte 0x08527094
_08051500: .4byte 0x000008B8

	thumb_func_start func_08051504
func_08051504: @ 0x08051504
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sb, r0
	adds r6, r1, #0
	adds r0, r6, #0
	bl func_08008724
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	movs r5, #0
	str r5, [r4]
	str r5, [r4, #4]
	ldr r0, _080515A0 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl func_08009300
	str r4, [sp, #4]
	adds r0, r6, #0
	bl func_080516F0
	ldr r0, [sp, #4]
	ldr r1, _080515A4 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r1, _080515A8 @ =0x000008BC
	adds r0, r6, r1
	str r5, [r0]
	movs r7, #0
	add r3, sp, #8
	mov r8, r3
	add r0, sp, #0xc
	mov sl, r0
	adds r5, r6, r1
_08051584:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	ldr r0, [r5]
	cmp r0, #1
	beq _080515C8
	cmp r0, #1
	bgt _080515AC
	cmp r0, #0
	beq _080515B6
	b _0805169A
	.align 2, 0
_080515A0: .4byte vtable_unk_080E5B80
_080515A4: .4byte 0x00000889
_080515A8: .4byte 0x000008BC
_080515AC:
	cmp r0, #2
	beq _08051664
	cmp r0, #3
	beq _0805168C
	b _0805169A
_080515B6:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0805169A
	movs r0, #1
	str r0, [r5]
	b _0805169A
_080515C8:
	adds r0, r6, #0
	bl func_080088C4
	movs r1, #0x80
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0
	beq _080515F8
	ldr r3, _080515F4 @ =0x000008B8
	adds r1, r6, r3
	ldrh r0, [r1]
	adds r0, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x20
	ble _08051618
	movs r0, #0x20
	strh r0, [r1]
	b _08051618
	.align 2, 0
_080515F4: .4byte 0x000008B8
_080515F8:
	adds r0, r6, #0
	bl func_080088C4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08051618
	ldr r0, _08051660 @ =0x000008B8
	adds r1, r6, r0
	ldrh r0, [r1]
	subs r0, #4
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08051618
	strh r4, [r1]
_08051618:
	movs r4, #0
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08051636
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _08051638
_08051636:
	movs r4, #1
_08051638:
	cmp r4, #0
	beq _0805164A
	adds r0, r6, #0
	adds r0, #0xc
	movs r1, #0xc6
	bl func_08008B6C
	movs r0, #2
	str r0, [r5]
_0805164A:
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _08051660 @ =0x000008B8
	adds r1, r6, r3
	ldrh r1, [r1]
	strh r1, [r2]
	strh r1, [r0, #0x16]
	b _0805169A
	.align 2, 0
_08051660: .4byte 0x000008B8
_08051664:
	ldr r0, [sp, #4]
	adds r0, #0xc
	ldr r1, _08051688 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r0, #3
	str r0, [r5]
	b _0805169A
	.align 2, 0
_08051688: .4byte 0x00000889
_0805168C:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0805169A
	movs r7, #1
_0805169A:
	adds r0, r6, #0
	bl func_08051D70
	cmp r7, #0
	bne _080516A6
	b _08051584
_080516A6:
	movs r0, #0
	str r0, [sp, #8]
	mov r1, r8
	str r1, [sp, #0xc]
	mov r3, sl
	str r0, [r3, #4]
	str r0, [r1]
	mov r1, sb
	str r0, [r1]
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _080516CA
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080516CA:
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _080516DC
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080516DC:
	mov r0, sb
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_080516F0
func_080516F0: @ 0x080516F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _080519B8 @ =0xFFFFF58C
	add sp, r4
	mov sl, r0
	bl func_08008918
	add r1, sp, #0xc
	movs r4, #0
	strh r4, [r1]
	strh r4, [r0, #0x10]
	mov r0, sl
	bl func_08008918
	add r2, sp, #0xc
	movs r1, #4
	strh r1, [r2]
	strh r1, [r0, #0x12]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x14]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x16]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x18]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1a]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1c]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	ldr r1, _080519BC @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	movs r4, #1
	rsbs r4, r4, #0
	ldr r0, _080519C0 @ =0x0600E000
	mov r8, r0
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r4, #0
	mov r1, r8
	adds r2, r5, #0
	bl func_08008EB8
	ldr r1, _080519C4 @ =0x0600E800
	mov sb, r1
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r1, _080519C8 @ =0x0600F000
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r1, _080519CC @ =0x0600F800
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	movs r2, #0xfa
	lsls r2, r2, #5
	adds r4, r2, #0
	strh r4, [r1]
	movs r6, #0
	strh r4, [r0]
	mov r0, sl
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _080519D0 @ =0x00001C43
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	mov r0, sl
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _080519D4 @ =0x00001D41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	mov r0, sl
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _080519D8 @ =0x00001E42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #8]
	ldr r0, _080519DC @ =0x080F9F70
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r2, _080519E0 @ =0x080F9F74
	ldr r2, [r2]
	bl func_08008E64
	ldr r0, _080519E4 @ =0x00030003
	mov r1, r8
	adds r2, r5, #0
	bl func_08008EB8
	movs r0, #3
	str r0, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	mov r0, sb
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl func_08051320
	ldr r0, _080519E8 @ =0x080F9F78
	ldr r0, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x20
	bl func_08008E64
	ldr r1, _080519EC @ =0x05000040
	movs r4, #0xf8
	lsls r4, r4, #2
	adds r0, r4, #0
	strh r0, [r1]
	ldr r0, _080519F0 @ =0x05000042
	strh r6, [r0]
	adds r1, #4
	ldr r2, _080519F4 @ =0x00004218
	adds r0, r2, #0
	strh r0, [r1]
	movs r3, #0
	mov sb, r3
	ldr r7, _080519F8 @ =0x00000A1C
	add r7, sp
	mov r4, sp
	adds r4, #0x14
	ldr r0, _080519FC @ =0x00000A4C
	add r0, sp
	str r4, [r0]
	movs r1, #0xa2
	lsls r1, r1, #4
	add r1, sp
	ldr r2, _08051A00 @ =0x00000A64
	add r2, sp
	str r1, [r2]
	ldr r3, _08051A04 @ =0x00000A24
	add r3, sp
	ldr r4, _08051A08 @ =0x00000A68
	add r4, sp
	str r3, [r4]
	mov r0, sp
	adds r0, #0x58
	ldr r1, _08051A0C @ =0x00000A5C
	add r1, sp
	str r0, [r1]
	movs r2, #0xa3
	lsls r2, r2, #4
	add r2, sp
	ldr r3, _08051A10 @ =0x00000A6C
	add r3, sp
	str r2, [r3]
	ldr r4, _08051A14 @ =0x00000A34
	add r4, sp
	movs r0, #0xa7
	lsls r0, r0, #4
	add r0, sp
	str r4, [r0]
	movs r1, #0xd7
	lsls r1, r1, #2
	add r1, sp
	ldr r2, _08051A18 @ =0x00000A54
	add r2, sp
	str r1, [r2]
	mov r3, sp
	adds r3, #0x1c
	movs r4, #0xa5
	lsls r4, r4, #4
	add r4, sp
	str r3, [r4]
	movs r0, #1
	mov r8, r0
	ldr r5, _08051A1C @ =0x06001800
	adds r6, r7, #0
	ldr r4, _08051A20 @ =0x080FA12E
_080518B0:
	ldrh r1, [r4]
	mov r2, r8
	strh r2, [r6]
	movs r3, #2
	strh r3, [r7, #2]
	ldr r0, [r6]
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	mov r2, r8
	str r2, [sp, #8]
	add r1, sp, #0x14
	movs r2, #0
	movs r3, #0
	bl func_0804E5AC
	ldr r3, _080519FC @ =0x00000A4C
	add r3, sp
	ldr r0, [r3]
	adds r1, r5, #0
	movs r2, #0x40
	bl func_08008E64
	adds r5, #0x40
	adds r4, #2
	movs r0, #1
	add sb, r0
	mov r1, sb
	cmp r1, #0xc
	ble _080518B0
	ldr r0, _08051A24 @ =0x03FF03FF
	mov r4, sl
	adds r4, #0xb8
	movs r2, #0x80
	lsls r2, r2, #4
	adds r1, r4, #0
	bl func_08008EB8
	movs r1, #0
	movs r0, #0xa2
	lsls r0, r0, #4
	add r0, sp
	strb r1, [r0]
	ldr r2, _08051A00 @ =0x00000A64
	add r2, sp
	ldr r2, [r2]
	strh r1, [r2, #2]
	ldr r3, _08051A28 @ =0x00000A38
	add r3, sp
	str r1, [r3]
	movs r0, #0xfa
	lsls r0, r0, #2
	ldr r1, _08051A2C @ =0x00000A3C
	add r1, sp
	str r0, [r1]
	movs r2, #0
	mov r8, r2
	ldr r3, _08051A30 @ =0x00000A44
	add r3, sp
	str r4, [r3]
	adds r4, #0x40
	ldr r0, _08051A34 @ =0x00000A48
	add r0, sp
	str r4, [r0]
	mov r1, sl
	adds r1, #0x40
	movs r2, #0xa6
	lsls r2, r2, #4
	add r2, sp
	str r1, [r2]
	mov r3, sl
	adds r3, #0xb0
	movs r4, #0xa4
	lsls r4, r4, #4
	add r4, sp
	str r3, [r4]
	ldr r0, _08051A38 @ =0x00000A28
	add r0, sp
	mov sb, r0
_0805194E:
	mov r1, sl
	ldr r0, [r1, #8]
	ldr r2, _08051A3C @ =0x00002C4C
	adds r0, r0, r2
	ldr r3, _08051A00 @ =0x00000A64
	add r3, sp
	ldr r1, [r3]
	mov r2, r8
	bl func_080522D8
	ldr r0, _08051A04 @ =0x00000A24
	add r0, sp
	movs r4, #0xc
	strh r4, [r0]
	movs r2, #2
	ldr r1, _08051A08 @ =0x00000A68
	add r1, sp
	ldr r1, [r1]
	strh r2, [r1, #2]
	ldr r0, [r0]
	add r1, sp, #0x58
	movs r2, #0
	bl func_0804E7A0
	movs r0, #0xa2
	lsls r0, r0, #4
	add r0, sp
	ldrb r4, [r0]
	cmp r4, #0
	bne _08051A44
	mov r2, sl
	ldr r0, [r2, #8]
	ldr r3, _08051A40 @ =0x00001C70
	adds r0, r0, r3
	bl GetName__C6Animal
	movs r2, #0xc
	mov r1, sb
	strh r2, [r1]
	movs r3, #2
	strh r3, [r1, #2]
	ldr r1, [r1]
	str r0, [sp]
	str r4, [sp, #4]
	movs r4, #1
	str r4, [sp, #8]
	adds r0, r1, #0
	add r1, sp, #0x58
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	b _08051A72
	.align 2, 0
_080519B8: .4byte 0xFFFFF58C
_080519BC: .4byte 0x06007FE0
_080519C0: .4byte 0x0600E000
_080519C4: .4byte 0x0600E800
_080519C8: .4byte 0x0600F000
_080519CC: .4byte 0x0600F800
_080519D0: .4byte 0x00001C43
_080519D4: .4byte 0x00001D41
_080519D8: .4byte 0x00001E42
_080519DC: .4byte 0x080F9F70
_080519E0: .4byte 0x080F9F74
_080519E4: .4byte 0x00030003
_080519E8: .4byte 0x080F9F78
_080519EC: .4byte 0x05000040
_080519F0: .4byte 0x05000042
_080519F4: .4byte 0x00004218
_080519F8: .4byte 0x00000A1C
_080519FC: .4byte 0x00000A4C
_08051A00: .4byte 0x00000A64
_08051A04: .4byte 0x00000A24
_08051A08: .4byte 0x00000A68
_08051A0C: .4byte 0x00000A5C
_08051A10: .4byte 0x00000A6C
_08051A14: .4byte 0x00000A34
_08051A18: .4byte 0x00000A54
_08051A1C: .4byte 0x06001800
_08051A20: .4byte 0x080FA12E
_08051A24: .4byte 0x03FF03FF
_08051A28: .4byte 0x00000A38
_08051A2C: .4byte 0x00000A3C
_08051A30: .4byte 0x00000A44
_08051A34: .4byte 0x00000A48
_08051A38: .4byte 0x00000A28
_08051A3C: .4byte 0x00002C4C
_08051A40: .4byte 0x00001C70
_08051A44:
	ldrb r0, [r0]
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #1
	ldr r0, _08051CE0 @ =0x080F9F7C
	adds r1, r1, r0
	ldr r0, _08051CE4 @ =0x00000A2C
	add r0, sp
	movs r2, #0xc
	strh r2, [r0]
	movs r3, #2
	strh r3, [r0, #2]
	ldr r0, [r0]
	str r1, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	add r1, sp, #0x58
	movs r2, #0
	movs r3, #0
	bl func_0804E958
_08051A72:
	mov r2, r8
	lsls r5, r2, #1
	adds r4, r5, r2
	lsls r1, r4, #8
	ldr r3, _08051CE8 @ =0x06002800
	adds r1, r1, r3
	ldr r2, _08051CEC @ =0x00000A5C
	add r2, sp
	ldr r0, [r2]
	movs r2, #0xc0
	lsls r2, r2, #2
	bl func_08008E64
	lsls r4, r4, #0x13
	movs r3, #0x85
	lsls r3, r3, #0x16
	adds r4, r4, r3
	lsrs r7, r4, #0x10
	movs r4, #0
	mov r0, r8
	adds r0, #1
	ldr r1, _08051CF0 @ =0x00000A58
	add r1, sp
	str r0, [r1]
	adds r2, r5, #4
	lsls r2, r2, #6
	adds r0, r5, #5
	lsls r0, r0, #6
	adds r6, r7, #0
	adds r6, #0xc
	ldr r3, _08051CF4 @ =0x00000A44
	add r3, sp
	ldr r1, [r3]
	adds r1, #0xe
	adds r3, r0, r1
	adds r2, r2, r1
_08051ABA:
	adds r0, r7, r4
	strh r0, [r2]
	strh r6, [r3]
	adds r6, #1
	adds r3, #2
	adds r2, #2
	adds r4, #1
	cmp r4, #0xb
	ble _08051ABA
	mov r4, r8
	cmp r4, #0
	beq _08051AE6
	ldr r1, _08051CF8 @ =0x00000A64
	add r1, sp
	ldr r1, [r1]
	movs r2, #2
	ldrsh r0, [r1, r2]
	ldr r2, _08051CFC @ =0x00000A3C
	add r2, sp
	ldr r2, [r2]
	cmp r0, r2
	beq _08051AFE
_08051AE6:
	mov r3, r8
	ldr r4, _08051D00 @ =0x00000A38
	add r4, sp
	str r3, [r4]
	ldr r0, _08051CF8 @ =0x00000A64
	add r0, sp
	ldr r0, [r0]
	movs r1, #2
	ldrsh r0, [r0, r1]
	ldr r1, _08051CFC @ =0x00000A3C
	add r1, sp
	str r0, [r1]
_08051AFE:
	ldr r1, _08051D00 @ =0x00000A38
	add r1, sp
	ldr r1, [r1]
	cmp r1, #9
	bne _08051B14
	adds r2, r5, #4
	mov r0, sl
	movs r1, #2
	movs r3, #1
	bl func_08051D30
_08051B14:
	adds r6, r5, #4
	ldr r2, _08051D00 @ =0x00000A38
	add r2, sp
	ldr r0, [r2]
	adds r0, #1
	movs r1, #0xa
	bl __modsi3
	adds r3, r0, #0
	mov r0, sl
	movs r1, #4
	adds r2, r6, #0
	bl func_08051D30
	mov r0, sl
	movs r1, #1
	adds r2, r6, #0
	movs r3, #0xc
	bl func_08051D30
	ldr r3, _08051CF8 @ =0x00000A64
	add r3, sp
	ldr r3, [r3]
	ldrh r0, [r3, #2]
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	movs r5, #0x64
	adds r0, r7, #0
	movs r1, #0x64
	bl __divsi3
	lsls r4, r0, #0x10
	asrs r3, r4, #0x10
	cmp r3, #0
	beq _08051B64
	mov r0, sl
	movs r1, #0x14
	adds r2, r6, #0
	bl func_08051D30
_08051B64:
	asrs r0, r4, #0x10
	muls r5, r0, r5
	subs r5, r7, r5
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	adds r0, r5, #0
	movs r1, #0xa
	bl __divsi3
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r3, r4, #0x10
	mov r0, sl
	movs r1, #0x16
	adds r2, r6, #0
	bl func_08051D30
	mov r0, sl
	movs r1, #0x18
	adds r2, r6, #0
	movs r3, #0xa
	bl func_08051D30
	asrs r4, r4, #0x10
	lsls r0, r4, #2
	adds r0, r0, r4
	lsls r0, r0, #1
	subs r5, r5, r0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	mov r0, sl
	movs r1, #0x19
	adds r2, r6, #0
	adds r3, r5, #0
	bl func_08051D30
	mov r0, sl
	movs r1, #0x1b
	adds r2, r6, #0
	movs r3, #0xb
	bl func_08051D30
	ldr r4, _08051CF0 @ =0x00000A58
	add r4, sp
	ldr r4, [r4]
	mov r8, r4
	cmp r4, #9
	bgt _08051BC6
	b _0805194E
_08051BC6:
	ldr r1, _08051D04 @ =0x0600F000
	movs r4, #0x80
	lsls r4, r4, #4
	ldr r2, _08051CF4 @ =0x00000A44
	add r2, sp
	ldr r0, [r2]
	adds r2, r4, #0
	bl func_08008E64
	ldr r0, _08051D08 @ =0x03FF03FF
	ldr r3, _08051CF4 @ =0x00000A44
	add r3, sp
	ldr r1, [r3]
	adds r2, r4, #0
	bl func_08008EB8
	movs r4, #0x1b
	movs r5, #2
	movs r6, #0
	movs r0, #0xa3
	lsls r0, r0, #4
	add r0, sp
	strh r4, [r0]
	ldr r1, _08051D0C @ =0x00000A6C
	add r1, sp
	ldr r1, [r1]
	strh r5, [r1, #2]
	ldr r0, [r0]
	add r1, sp, #0x35c
	movs r2, #0
	bl func_0804E7A0
	ldr r1, _08051D10 @ =0x080FA158
	movs r2, #1
	ldr r0, _08051D14 @ =0x00000A34
	add r0, sp
	strh r4, [r0]
	movs r3, #0xa7
	lsls r3, r3, #4
	add r3, sp
	ldr r3, [r3]
	strh r5, [r3, #2]
	ldr r0, [r0]
	str r1, [sp]
	str r6, [sp, #4]
	str r2, [sp, #8]
	add r1, sp, #0x35c
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	ldr r1, _08051D18 @ =0x06002000
	movs r2, #0xd8
	lsls r2, r2, #3
	ldr r4, _08051D1C @ =0x00000A54
	add r4, sp
	ldr r0, [r4]
	bl func_08008E64
	movs r5, #0x84
	lsls r5, r5, #6
	movs r3, #0
	adds r4, r5, #0
	adds r4, #0x1b
	movs r2, #0x9e
	lsls r2, r2, #1
	add r2, sl
	ldr r0, _08051D20 @ =0x00000A48
	add r0, sp
	ldr r1, [r0]
	adds r1, #4
_08051C54:
	adds r0, r5, r3
	strh r0, [r1]
	strh r4, [r2]
	adds r4, #1
	adds r2, #2
	adds r1, #2
	adds r3, #1
	cmp r3, #0x1a
	ble _08051C54
	ldr r1, _08051D24 @ =0x0600F800
	movs r2, #0x80
	lsls r2, r2, #4
	ldr r3, _08051CF4 @ =0x00000A44
	add r3, sp
	ldr r0, [r3]
	bl func_08008E64
	mov r4, sl
	ldr r1, [r4, #0x40]
	ldr r3, [r1]
	movs r0, #0xa6
	lsls r0, r0, #4
	add r0, sp
	ldr r0, [r0]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r4, #0x44]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xc
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r4, [sp, #0x1c]
	movs r2, #0xa4
	lsls r2, r2, #4
	add r2, sp
	ldr r2, [r2]
	ldr r1, [r2, #4]
	movs r3, #0xa4
	lsls r3, r3, #4
	add r3, sp
	ldr r0, [r3]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _08051D28 @ =0x05000200
	adds r1, r0, r2
	ldr r0, [sp, #0x1c]
	movs r2, #0
	cmp r0, #0
	beq _08051CC6
	movs r3, #0xa5
	lsls r3, r3, #4
	add r3, sp
	ldr r3, [r3]
	ldrh r2, [r3, #4]
_08051CC6:
	adds r0, r4, #0
	bl func_08008E64
	ldr r3, _08051D2C @ =0x00000A74
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08051CE0: .4byte 0x080F9F7C
_08051CE4: .4byte 0x00000A2C
_08051CE8: .4byte 0x06002800
_08051CEC: .4byte 0x00000A5C
_08051CF0: .4byte 0x00000A58
_08051CF4: .4byte 0x00000A44
_08051CF8: .4byte 0x00000A64
_08051CFC: .4byte 0x00000A3C
_08051D00: .4byte 0x00000A38
_08051D04: .4byte 0x0600F000
_08051D08: .4byte 0x03FF03FF
_08051D0C: .4byte 0x00000A6C
_08051D10: .4byte 0x080FA158
_08051D14: .4byte 0x00000A34
_08051D18: .4byte 0x06002000
_08051D1C: .4byte 0x00000A54
_08051D20: .4byte 0x00000A48
_08051D24: .4byte 0x0600F800
_08051D28: .4byte 0x05000200
_08051D2C: .4byte 0x00000A74

	thumb_func_start func_08051D30
func_08051D30: @ 0x08051D30
	push {r4, r5, r6, r7, lr}
	lsls r3, r3, #1
	movs r4, #0x83
	lsls r4, r4, #6
	adds r6, r3, r4
	movs r5, #0
	lsls r4, r2, #6
	ldr r7, _08051D6C @ =0x000020C1
	adds r3, r3, r7
	lsls r1, r1, #1
	adds r4, #0xf8
	adds r4, r1, r4
	adds r4, r4, r0
	lsls r2, r2, #6
	adds r2, #0xb8
	adds r1, r1, r2
	adds r1, r1, r0
_08051D52:
	adds r0, r6, r5
	strh r0, [r1]
	strh r3, [r4]
	adds r3, #1
	adds r4, #2
	adds r1, #2
	adds r5, #1
	cmp r5, #0
	ble _08051D52
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08051D6C: .4byte 0x000020C1

	thumb_func_start func_08051D70
func_08051D70: @ 0x08051D70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x74
	adds r7, r0, #0
	mov r1, sp
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0xc]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x18]
	add r3, sp, #0x1c
	str r0, [sp, #0x1c]
	strh r0, [r3, #4]
	add r2, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r2, #4]
	add r1, sp, #0x2c
	str r0, [sp, #0x2c]
	strh r0, [r1, #4]
	add r1, sp, #0x34
	str r0, [sp, #0x34]
	strh r0, [r1, #4]
	ldr r1, _08051E98 @ =0x000008B8
	adds r0, r7, r1
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r0, #0
	bgt _08051DBE
	b _08051F92
_08051DBE:
	adds r4, r7, #0
	adds r4, #0x40
	adds r0, r4, #0
	bl func_0805E8F0
	ldr r1, [r7, #0x40]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [r7, #0x44]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r6, sp, #0x3c
	adds r0, r6, #0
	adds r1, r6, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	adds r0, r6, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r4, r5}
	stm r1!, {r2, r4, r5}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	mov r1, sp
	adds r0, r7, #0
	adds r0, #0x54
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r4, r5}
	stm r1!, {r2, r4, r5}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0xe8
	strh r0, [r1]
	movs r0, #0x1a
	strh r0, [r1, #2]
	adds r4, r7, #0
	adds r4, #0xa8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	adds r0, r7, #0
	adds r0, #0xb0
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	mov r0, sp
	movs r1, #1
	movs r3, #1
	mov sb, r3
	mov r5, sb
	strh r5, [r0, #8]
	strb r1, [r0, #0x18]
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r0, [sp, #0x24]
	mov r8, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _08051E64
	mov r1, sp
	ldrh r3, [r1, #0x28]
_08051E64:
	str r5, [sp, #0x6c]
	lsls r2, r2, #5
	ldr r4, _08051E9C @ =0x06010000
	adds r2, r2, r4
	adds r0, r6, #0
	mov r1, r8
	bl func_08008F0C
	mov sl, r6
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08051EA0
	cmp r1, #0
	beq _08051E8E
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08051E8E:
	ldr r3, [sp, #0x6c]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _08051F74
	.align 2, 0
_08051E98: .4byte 0x000008B8
_08051E9C: .4byte 0x06010000
_08051EA0:
	str r1, [sp, #0x70]
	mov r4, sb
	str r4, [sp, #0x60]
	ldr r5, [sp, #0x6c]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x5c]
	add r1, sp, #0x60
	add r0, sp, #0x5c
	cmp r4, #1
	bhs _08051EBC
	adds r0, r1, #0
_08051EBC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08051EDA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08051EDE
	mov r0, sb
	bl func_080D3BC0
	b _08051EDE
_08051EDA:
	movs r0, #0
	mov sb, r0
_08051EDE:
	adds r4, r0, #0
	mov r8, r4
	ldr r0, [sp, #0x6c]
	ldr r2, [r0]
	mov r3, r8
	ldr r1, [sp, #0x70]
	cmp r2, r1
	beq _08051F08
_08051EEE:
	cmp r3, #0
	beq _08051EFE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08051EFE:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x70]
	cmp r2, r0
	bne _08051EEE
_08051F08:
	adds r4, r3, #0
	ldr r0, [sp, #0x60]
	cmp r0, #1
	bne _08051F24
	cmp r4, #0
	beq _08051F20
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_08051F20:
	adds r4, #0x10
	b _08051F4C
_08051F24:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _08051F4A
_08051F2C:
	cmp r2, #0
	beq _08051F3C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08051F3C:
	movs r5, #1
	rsbs r5, r5, #0
	add ip, r5
	adds r2, #0x10
	mov r6, ip
	cmp r6, #0
	bne _08051F2C
_08051F4A:
	adds r4, r2, #0
_08051F4C:
	ldr r0, [sp, #0x6c]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _08051F5E
_08051F58:
	adds r1, #0x10
	cmp r1, r2
	bne _08051F58
_08051F5E:
	cmp r0, #0
	beq _08051F66
	bl free
_08051F66:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x6c]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_08051F74:
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08051F8A
	mov r4, sp
	ldrh r2, [r4, #0x20]
_08051F8A:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_08051F92:
	ldr r5, _08052080 @ =0x000008B8
	adds r0, r7, r5
	movs r6, #0
	ldrsh r0, [r0, r6]
	cmp r0, #0x1f
	ble _08051FA0
	b _0805217A
_08051FA0:
	adds r4, r7, #0
	adds r4, #0x74
	adds r0, r4, #0
	bl func_0805E8F0
	ldr r1, [r7, #0x74]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [r7, #0x78]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r6, sp, #0x3c
	adds r0, r6, #0
	adds r1, r6, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	adds r0, r6, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r4, r5}
	stm r1!, {r4, r5}
	mov r1, sp
	adds r0, r7, #0
	adds r0, #0x88
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0xe8
	strh r0, [r1]
	movs r0, #0x98
	strh r0, [r1, #2]
	adds r4, r7, #0
	adds r4, #0xa8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	adds r0, #4
	strh r0, [r1, #6]
	adds r0, r7, #0
	adds r0, #0xb0
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	mov r0, sp
	movs r1, #1
	movs r5, #1
	mov sb, r5
	mov r2, sb
	strh r2, [r0, #8]
	strb r1, [r0, #0x18]
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r3, [sp, #0x24]
	mov r8, r3
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _08052048
	mov r4, sp
	ldrh r3, [r4, #0x28]
_08052048:
	str r5, [sp, #0x6c]
	lsls r2, r2, #5
	ldr r5, _08052084 @ =0x06010080
	adds r2, r2, r5
	adds r0, r6, #0
	mov r1, r8
	bl func_08008F0C
	mov sl, r6
	ldr r6, [sp, #0x6c]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08052088
	cmp r1, #0
	beq _08052074
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08052074:
	ldr r5, [sp, #0x6c]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0805215C
	.align 2, 0
_08052080: .4byte 0x000008B8
_08052084: .4byte 0x06010080
_08052088:
	str r1, [sp, #0x70]
	mov r6, sb
	str r6, [sp, #0x68]
	ldr r1, [sp, #0x6c]
	ldr r0, [r1]
	ldr r2, [sp, #0x70]
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r1, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _080520A4
	adds r0, r1, #0
_080520A4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080520C2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _080520C6
	mov r0, sb
	bl func_080D3BC0
	b _080520C6
_080520C2:
	movs r0, #0
	mov sb, r0
_080520C6:
	adds r4, r0, #0
	mov r8, r4
	ldr r3, [sp, #0x6c]
	ldr r2, [r3]
	mov r3, r8
	ldr r4, [sp, #0x70]
	cmp r2, r4
	beq _080520F0
_080520D6:
	cmp r3, #0
	beq _080520E6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080520E6:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x70]
	cmp r2, r5
	bne _080520D6
_080520F0:
	adds r4, r3, #0
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _0805210C
	cmp r4, #0
	beq _08052108
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_08052108:
	adds r4, #0x10
	b _08052134
_0805210C:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _08052132
_08052114:
	cmp r2, #0
	beq _08052124
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08052124:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _08052114
_08052132:
	adds r4, r2, #0
_08052134:
	ldr r3, [sp, #0x6c]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _08052146
_08052140:
	adds r1, #0x10
	cmp r1, r2
	bne _08052140
_08052146:
	cmp r0, #0
	beq _0805214E
	bl free
_0805214E:
	mov r0, sb
	add r0, r8
	mov r5, r8
	ldr r6, [sp, #0x6c]
	str r5, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_0805215C:
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08052172
	mov r0, sp
	ldrh r2, [r0, #0x20]
_08052172:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_0805217A:
	add sp, #0x74
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0805218C
func_0805218C: @ 0x0805218C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _080521B8 @ =vtable_unk_080E7934
	str r0, [r4]
	movs r0, #0x8c
	lsls r0, r0, #4
	bl __builtin_new
	adds r1, r5, #0
	bl func_0805143C
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080521B8: .4byte vtable_unk_080E7934

	thumb_func_start func_080521BC
func_080521BC: @ 0x080521BC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080521F8 @ =vtable_unk_080E7934
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080521D8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080521D8:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080521EA
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080521EA:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080521F8: .4byte vtable_unk_080E7934

	thumb_func_start func_080521FC
func_080521FC: @ 0x080521FC
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r4, #4]
	mov r0, sp
	bl func_08051504
	ldr r1, [sp]
	cmp r1, #0
	beq _0805221E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805221E:
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_08052230
func_08052230: @ 0x08052230
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	cmp r1, #0
	beq _0805224C
	subs r0, r1, #1
	movs r1, #0x19
	bl func_080D0EDA
	b _0805224E
_0805224C:
	movs r0, #0
_0805224E:
	mov sl, r0
	movs r4, #0
	mov r1, sl
	lsls r1, r1, #2
	str r1, [sp]
_08052258:
	lsls r6, r4, #2
	mov r8, r6
	lsls r0, r4, #1
	mov sb, r0
	adds r1, r4, #1
	str r1, [sp, #4]
	adds r5, r7, r6
	str r5, [sp, #8]
_08052268:
	bl rand
	asrs r0, r0, #8
	movs r1, #0x1e
	bl __modsi3
	adds r0, #1
	strb r0, [r5]
	movs r3, #1
	movs r2, #0
	adds r1, r7, #0
_0805227E:
	cmp r4, r2
	beq _0805228E
	ldr r6, [sp, #8]
	ldrb r0, [r6]
	ldrb r6, [r1]
	cmp r0, r6
	bne _0805228E
	movs r3, #0
_0805228E:
	adds r1, #4
	adds r2, #1
	cmp r2, #9
	ble _0805227E
	cmp r3, #0
	beq _08052268
	bl rand
	mov r1, r8
	adds r5, r7, r1
	ldr r4, [sp]
	add r4, sl
	lsls r4, r4, #2
	add r4, sb
	ldr r6, _080522D4 @ =0x080FA174
	adds r4, r4, r6
	asrs r0, r0, #8
	movs r1, #0xa
	bl __modsi3
	ldrh r1, [r4]
	adds r1, r1, r0
	strh r1, [r5, #2]
	ldr r4, [sp, #4]
	cmp r4, #9
	ble _08052258
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080522D4: .4byte 0x080FA174

	thumb_func_start func_080522D8
func_080522D8: @ 0x080522D8
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrb r2, [r0]
	strb r2, [r1]
	ldrh r0, [r0, #2]
	strh r0, [r1, #2]
	bx lr
	.align 2, 0

	thumb_func_start func_080522E8
func_080522E8: @ 0x080522E8
	lsls r2, r2, #2
	adds r0, r0, r2
	ldrb r2, [r1]
	strb r2, [r0]
	ldrh r1, [r1, #2]
	strh r1, [r0, #2]
	bx lr
	.align 2, 0

	thumb_func_start func_080522F8
func_080522F8: @ 0x080522F8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r7, r0, #0
	adds r6, r1, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp, #0x18]
	add r1, sp, #0x14
	movs r0, #0x1e
	movs r2, #1
	movs r4, #0
	movs r5, #0
	strh r0, [r1]
	strh r2, [r1, #2]
	adds r0, r7, #0
	bl func_080084DC
	ldr r0, _08052710 @ =vtable_unk_080E7944
	str r0, [r7, #4]
	str r6, [r7, #8]
	str r5, [r7, #0xc]
	movs r0, #4
	bl __builtin_new
	mov r8, r0
	add r0, sp, #0xc
	bl func_0800835C
	add r6, sp, #0x10
	adds r0, r6, #0
	bl func_0800770C
	ldr r0, [r7, #0xc]
	str r0, [sp]
	add r0, sp, #0xc
	str r0, [sp, #4]
	str r6, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl func_08050CC0
	str r0, [r7, #0x10]
	adds r0, r6, #0
	movs r1, #2
	bl func_08007714
	add r0, sp, #0xc
	movs r1, #2
	bl func_08008364
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #1
	bl func_08008B54
	adds r0, r7, #0
	adds r0, #0x18
	movs r1, #0
	bl func_08008B54
	adds r0, r7, #0
	adds r0, #0x1c
	movs r1, #2
	bl func_08008B54
	adds r6, r7, #0
	adds r6, #0x20
	ldr r1, _08052714 @ =0x0858BA28
	adds r0, r6, #0
	bl func_0805E6CC
	movs r1, #0x50
	adds r1, r1, r7
	mov sl, r1
	ldr r1, _08052718 @ =0x0872DE44
	mov r0, sl
	bl func_0805E6CC
	adds r2, r7, #0
	adds r2, #0x80
	str r2, [sp, #0x1c]
	ldr r1, _0805271C @ =0x08740454
	adds r0, r2, #0
	bl func_0805E6CC
	adds r0, r7, #0
	adds r0, #0xb0
	ldr r1, _08052720 @ =0x0873E5B0
	bl func_0805E6CC
	adds r0, r7, #0
	adds r0, #0xe0
	ldr r1, _08052724 @ =0x0873DE44
	bl func_0805E6CC
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, _08052728 @ =0x0873D6D8
	bl func_0805E6CC
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r2, r2, r7
	mov sb, r2
	ldr r1, _0805272C @ =0x086678A0
	mov r0, sb
	bl func_0805E6CC
	movs r1, #0xb8
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, _08052730 @ =0x0873A6E8
	bl func_0805E6CC
	movs r2, #0xd0
	lsls r2, r2, #1
	adds r2, r2, r7
	mov r8, r2
	ldr r1, _08052734 @ =0x0873ED1C
	mov r0, r8
	bl func_0805E6CC
	movs r0, #0xe8
	lsls r0, r0, #1
	adds r0, r7, r0
	str r0, [sp, #0x20]
	ldr r1, _08052738 @ =0x0871D51C
	bl func_0805E6CC
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r1, r6, #0
	movs r2, #0x8e
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r2, #0x85
	lsls r2, r2, #2
	adds r0, r7, r2
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	movs r1, #0x8d
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	adds r2, #0x24
	adds r0, r7, r2
	adds r1, r6, #0
	ldr r2, _0805273C @ =0x0000033B
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r1, #0x93
	lsls r1, r1, #2
	adds r0, r7, r1
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	movs r2, #0x9b
	lsls r2, r2, #2
	adds r0, r7, r2
	strb r4, [r0]
	adds r1, #0x24
	adds r0, r7, r1
	mov r1, sl
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r2, #0xa1
	lsls r2, r2, #2
	adds r0, r7, r2
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	movs r1, #0xa9
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	adds r2, #0x24
	adds r0, r7, r2
	ldr r1, [sp, #0x1c]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r1, #0xaf
	lsls r1, r1, #2
	adds r0, r7, r1
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	movs r2, #0xb7
	lsls r2, r2, #2
	adds r0, r7, r2
	strb r4, [r0]
	adds r1, #0x24
	adds r0, r7, r1
	adds r1, r6, #0
	ldr r2, _08052740 @ =0x0000091A
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r2, #0xbd
	lsls r2, r2, #2
	adds r0, r7, r2
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	movs r1, #0xc5
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	adds r2, #0x24
	adds r0, r7, r2
	mov r1, sb
	movs r2, #0xc9
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r1, #0xcb
	lsls r1, r1, #2
	adds r0, r7, r1
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	movs r2, #0xd3
	lsls r2, r2, #2
	adds r0, r7, r2
	strb r4, [r0]
	adds r1, #0x24
	adds r0, r7, r1
	mov r1, r8
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r0, r7, r2
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	movs r1, #0xe1
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	adds r2, #0x24
	adds r0, r7, r2
	mov r1, r8
	movs r2, #2
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r1, #0xe7
	lsls r1, r1, #2
	adds r0, r7, r1
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	movs r2, #0xef
	lsls r2, r2, #2
	adds r0, r7, r2
	strb r4, [r0]
	adds r1, #0x24
	adds r0, r7, r1
	adds r1, r6, #0
	ldr r2, _08052744 @ =0x00000641
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r2, #0xf5
	lsls r2, r2, #2
	adds r0, r7, r2
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	movs r1, #0xfd
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r4, [r0]
	adds r2, #0x24
	adds r0, r7, r2
	ldr r1, [sp, #0x20]
	movs r2, #2
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	ldr r1, _08052748 @ =0x0000040C
	adds r0, r7, r1
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	ldr r2, _0805274C @ =0x0000042C
	adds r0, r7, r2
	strb r4, [r0]
	adds r1, #0x24
	adds r0, r7, r1
	mov r1, sb
	movs r2, #0xa7
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	ldr r2, _08052750 @ =0x00000444
	adds r0, r7, r2
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	ldr r1, _08052754 @ =0x00000464
	adds r0, r7, r1
	strb r4, [r0]
	adds r2, #0x24
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r4, #4]
	movs r0, #0x8e
	lsls r0, r0, #3
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r1, #0x8f
	lsls r1, r1, #3
	adds r4, r7, r1
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #7
	bl func_08007B54
	str r0, [r4, #4]
	movs r2, #0x90
	lsls r2, r2, #3
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r0, #0x91
	lsls r0, r0, #3
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #3
	bl func_08007B54
	str r0, [r4, #4]
	movs r1, #0x92
	lsls r1, r1, #3
	adds r4, r7, r1
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r2, #0x93
	lsls r2, r2, #3
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #6
	bl func_08007B54
	str r0, [r4, #4]
	movs r0, #0x94
	lsls r0, r0, #3
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r1, #0x95
	lsls r1, r1, #3
	adds r4, r7, r1
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r4, #4]
	movs r2, #0x96
	lsls r2, r2, #3
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r0, #0x97
	lsls r0, r0, #3
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #2
	bl func_08007B54
	b _08052758
	.align 2, 0
_08052710: .4byte vtable_unk_080E7944
_08052714: .4byte 0x0858BA28
_08052718: .4byte 0x0872DE44
_0805271C: .4byte 0x08740454
_08052720: .4byte 0x0873E5B0
_08052724: .4byte 0x0873DE44
_08052728: .4byte 0x0873D6D8
_0805272C: .4byte 0x086678A0
_08052730: .4byte 0x0873A6E8
_08052734: .4byte 0x0873ED1C
_08052738: .4byte 0x0871D51C
_0805273C: .4byte 0x0000033B
_08052740: .4byte 0x0000091A
_08052744: .4byte 0x00000641
_08052748: .4byte 0x0000040C
_0805274C: .4byte 0x0000042C
_08052750: .4byte 0x00000444
_08052754: .4byte 0x00000464
_08052758:
	str r0, [r4, #4]
	movs r1, #0x98
	lsls r1, r1, #3
	adds r4, r7, r1
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r2, #0x99
	lsls r2, r2, #3
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #3
	bl func_08007B54
	str r0, [r4, #4]
	movs r0, #0x9a
	lsls r0, r0, #3
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #3
	bl func_08007B54
	str r0, [r4, #4]
	movs r1, #0x9b
	lsls r1, r1, #3
	adds r4, r7, r1
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r2, #0x9c
	lsls r2, r2, #3
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #3
	bl func_08007B54
	str r0, [r4, #4]
	movs r0, #0x9d
	lsls r0, r0, #3
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_08007128
	str r5, [r4, #4]
	movs r1, #0x9e
	lsls r1, r1, #3
	adds r4, r7, r1
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #3
	bl func_08007B54
	str r0, [r4, #4]
	movs r2, #0x9f
	lsls r2, r2, #3
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08007128
	str r5, [r4, #4]
	movs r0, #0xa0
	lsls r0, r0, #3
	adds r5, r7, r0
	movs r6, #3
_080527FE:
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r5, #4]
	adds r4, r5, #0
	adds r4, #8
	adds r0, r4, #0
	bl func_08007128
	movs r0, #0
	str r0, [r4, #4]
	adds r5, #0x10
	subs r6, #1
	subs r0, #1
	cmp r6, r0
	bne _080527FE
	movs r1, #0xa8
	lsls r1, r1, #3
	adds r1, r1, r7
	mov r8, r1
	mov r0, r8
	bl func_08007874
	mov r0, r8
	movs r1, #4
	bl func_08007B54
	mov r2, r8
	str r0, [r2, #4]
	movs r0, #0xa9
	lsls r0, r0, #3
	adds r4, r7, r0
	movs r5, #1
	movs r1, #0
	mov sb, r1
_0805284C:
	adds r0, r4, #0
	bl func_08007128
	mov r2, sb
	str r2, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r6
	bne _0805284C
	movs r6, #0
	mov r5, r8
	adds r5, #0xc
_08052864:
	lsls r4, r6, #3
	add r4, r8
	adds r4, #8
	ldr r1, [r5]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r5]
	adds r5, #8
	adds r6, #1
	cmp r6, #1
	bls _08052864
	movs r0, #2
	mov r8, r0
	ldr r1, _08052940 @ =0x00002324
	adds r0, r7, r1
	movs r4, #0
	mov r2, sp
	ldrb r2, [r2, #0x18]
	strb r2, [r0]
	ldr r0, _08052944 @ =0x000023A0
	adds r1, r7, r0
	ldr r0, _08052948 @ =vtable_unk_080E7950
	str r0, [r1]
	movs r5, #0
	strh r4, [r1, #4]
	ldr r0, [r7, #8]
	ldr r6, _0805294C @ =0x00001C9C
	adds r0, r0, r6
	ldr r0, [r0]
	lsls r0, r0, #0xb
	lsrs r0, r0, #0x18
	ldr r2, _08052950 @ =0x00002264
	adds r1, r7, r2
	strh r0, [r1]
	ldr r0, [r7, #8]
	ldr r1, _08052954 @ =0x00001C70
	adds r0, r0, r1
	bl GetAffection__C6Animal
	ldr r2, _08052958 @ =0x00002266
	adds r1, r7, r2
	strh r0, [r1]
	ldr r1, _0805295C @ =0x0000225C
	adds r0, r7, r1
	str r4, [r0]
	subs r2, #6
	adds r0, r7, r2
	str r4, [r0]
	ldr r1, _08052960 @ =0x00001D58
	adds r0, r7, r1
	strb r5, [r0]
	ldr r2, _08052964 @ =0x00001D59
	adds r0, r7, r2
	strb r5, [r0]
	ldr r1, _08052968 @ =0x000022C8
	adds r0, r7, r1
	strh r4, [r0]
	ldr r2, _0805296C @ =0x000022CA
	adds r0, r7, r2
	strh r4, [r0]
	ldr r0, [r7, #8]
	adds r0, r0, r6
	ldrh r0, [r0]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	subs r2, #4
	adds r1, r7, r2
	strh r0, [r1]
	ldr r0, _08052970 @ =0x000022CC
	adds r1, r7, r0
	movs r0, #7
	strb r0, [r1]
	ldr r1, _08052974 @ =0x000022CD
	adds r0, r7, r1
	strb r5, [r0]
	adds r2, #8
	adds r0, r7, r2
	strb r5, [r0]
	adds r1, #0x58
	adds r0, r7, r1
	strb r5, [r0]
	ldr r0, [r7, #8]
	ldr r2, _08052978 @ =0x00001C9D
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1d
	ldr r2, _0805297C @ =0x00002326
	adds r1, r7, r2
	strb r0, [r1]
	ldr r1, _08052980 @ =0x00002321
	adds r0, r7, r1
	strb r5, [r0]
	adds r2, #6
	adds r0, r7, r2
	mov r1, r8
	strh r1, [r0]
	adds r0, r7, #0
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08052940: .4byte 0x00002324
_08052944: .4byte 0x000023A0
_08052948: .4byte vtable_unk_080E7950
_0805294C: .4byte 0x00001C9C
_08052950: .4byte 0x00002264
_08052954: .4byte 0x00001C70
_08052958: .4byte 0x00002266
_0805295C: .4byte 0x0000225C
_08052960: .4byte 0x00001D58
_08052964: .4byte 0x00001D59
_08052968: .4byte 0x000022C8
_0805296C: .4byte 0x000022CA
_08052970: .4byte 0x000022CC
_08052974: .4byte 0x000022CD
_08052978: .4byte 0x00001C9D
_0805297C: .4byte 0x00002326
_08052980: .4byte 0x00002321

	thumb_func_start func_08052984
func_08052984: @ 0x08052984
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	str r0, [sp, #0x2c]
	adds r5, r1, #0
	movs r0, #0
	str r0, [sp, #0x30]
	adds r0, r5, #0
	bl func_08008724
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0xbf
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x10
	strh r2, [r1]
	adds r0, #0x54
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r5, #0
	bl func_08008918
	adds r1, r0, #0
	ldr r2, [sp, #0x30]
	str r2, [r4]
	str r2, [r4, #4]
	ldr r0, _08052A70 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl func_08009300
	str r4, [sp, #4]
	adds r0, r5, #0
	bl func_08054F40
	adds r0, r5, #0
	bl func_08055264
	ldr r3, _08052A74 @ =0x0000228A
	adds r1, r5, r3
	ldr r0, _08052A78 @ =0x0000033B
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x18
	movs r1, #0x21
	bl func_08008B6C
	ldr r4, _08052A7C @ =0x00002328
	adds r0, r5, r4
	mov r6, sp
	ldrh r6, [r6, #0x30]
	strh r6, [r0]
	movs r7, #0
	str r7, [sp, #0x34]
	movs r0, #0
	str r0, [sp, #0x38]
	mov r1, sp
	adds r1, #8
	str r1, [sp, #0x3c]
	mov r2, sp
	adds r2, #0x24
	str r2, [sp, #0x40]

	non_word_aligned_thumb_func_start sub_08052A1E
sub_08052A1E: @ 0x08052A1E
	adds r0, r5, #0
	bl func_080087C8
	adds r0, r5, #0
	bl func_080088B8
	bl rand
	ldr r3, _08052A80 @ =0x00002321
	adds r4, r5, r3
	ldrb r1, [r4]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08052A84
	adds r0, r5, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _08052A5C
	ldrb r0, [r4]
	movs r1, #1
	eors r0, r1
	strb r0, [r4]
	adds r0, r5, #0
	adds r0, #0x1c
	movs r1, #0xb8
	bl func_08008B6C
_08052A5C:
	ldrb r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08052A84
	adds r0, r5, #0
	bl func_080558C4
	bl _080535E0
	.align 2, 0
_08052A70: .4byte vtable_unk_080E5B80
_08052A74: .4byte 0x0000228A
_08052A78: .4byte 0x0000033B
_08052A7C: .4byte 0x00002328
_08052A80: .4byte 0x00002321
_08052A84:
	ldr r4, _08052AA0 @ =0x00002328
	adds r0, r5, r4
	movs r6, #0
	ldrsh r0, [r0, r6]
	cmp r0, #0x1c
	bls _08052A94
	bl _08053462
_08052A94:
	lsls r0, r0, #2
	ldr r1, _08052AA4 @ =_08052AA8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08052AA0: .4byte 0x00002328
_08052AA4: .4byte _08052AA8
_08052AA8: @ jump table
	.4byte _08052B1C @ case 0
	.4byte _08052C04 @ case 1
	.4byte _08052C44 @ case 2
	.4byte _08052C9C @ case 3
	.4byte _08052CCC @ case 4
	.4byte _08052D14 @ case 5
	.4byte _08052D38 @ case 6
	.4byte _08052D7C @ case 7
	.4byte _08052D7C @ case 8
	.4byte _08052D7C @ case 9
	.4byte _08052B1C @ case 10
	.4byte _08052DC8 @ case 11
	.4byte _08052E08 @ case 12
	.4byte _08052E50 @ case 13
	.4byte _08052E88 @ case 14
	.4byte _08053462 @ case 15
	.4byte _08052EB4 @ case 16
	.4byte _0805305C @ case 17
	.4byte _0805311C @ case 18
	.4byte _08053158 @ case 19
	.4byte _08053190 @ case 20
	.4byte _080531BC @ case 21
	.4byte _080531E0 @ case 22
	.4byte _08053240 @ case 23
	.4byte _08053274 @ case 24
	.4byte _08053294 @ case 25
	.4byte _08053294 @ case 26
	.4byte _080532B8 @ case 27
	.4byte _080532EC @ case 28
_08052B1C:
	ldr r7, _08052B78 @ =0x00002268
	adds r1, r5, r7
	movs r0, #0xc0
	lsls r0, r0, #0xf
	str r0, [r1]
	ldr r0, _08052B7C @ =0x0000226C
	adds r1, r5, r0
	movs r0, #0xa0
	lsls r0, r0, #0xf
	str r0, [r1]
	ldr r1, _08052B80 @ =0x00002290
	adds r0, r5, r1
	movs r2, #0
	strh r2, [r0]
	ldr r3, _08052B84 @ =0x0000228E
	adds r0, r5, r3
	strh r2, [r0]
	ldr r4, _08052B88 @ =0x00002288
	adds r1, r5, r4
	ldr r0, _08052B8C @ =0x0000033B
	strh r0, [r1]
	ldr r6, _08052B90 @ =0x00002330
	adds r0, r5, r6
	strh r2, [r0]
	adds r7, #0x70
	adds r1, r5, r7
	movs r0, #0x8f
	strh r0, [r1]
	ldr r1, _08052B94 @ =0x000022C4
	adds r0, r5, r1
	strh r2, [r0]
	ldr r2, [sp, #0x38]
	cmp r2, #1
	bne _08052B98
	subs r3, #0x2a
	adds r0, r5, r3
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r0, r5, #0
	bl func_080550AC
	subs r6, #8
	adds r1, r5, r6
	movs r0, #0xb
	b _08052BA6
	.align 2, 0
_08052B78: .4byte 0x00002268
_08052B7C: .4byte 0x0000226C
_08052B80: .4byte 0x00002290
_08052B84: .4byte 0x0000228E
_08052B88: .4byte 0x00002288
_08052B8C: .4byte 0x0000033B
_08052B90: .4byte 0x00002330
_08052B94: .4byte 0x000022C4
_08052B98:
	adds r0, r5, #0
	movs r1, #0x80
	bl func_080550AC
	ldr r7, _08052BF0 @ =0x00002328
	adds r1, r5, r7
	movs r0, #1
_08052BA6:
	strh r0, [r1]
	movs r1, #0xd3
	lsls r1, r1, #2
	adds r0, r5, r1
	movs r1, #0
	strb r1, [r0]
	ldr r2, _08052BF4 @ =0x000022C2
	adds r0, r5, r2
	strh r1, [r0]
	ldr r3, _08052BF8 @ =0x0000232A
	adds r0, r5, r3
	strh r1, [r0]
	movs r4, #0x8b
	lsls r4, r4, #6
	adds r0, r5, r4
	strh r1, [r0]
	ldr r6, _08052BFC @ =0x00002292
	adds r0, r5, r6
	strh r1, [r0]
	ldr r0, [sp, #4]
	ldr r1, _08052C00 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	bl _08053462
	.align 2, 0
_08052BF0: .4byte 0x00002328
_08052BF4: .4byte 0x000022C2
_08052BF8: .4byte 0x0000232A
_08052BFC: .4byte 0x00002292
_08052C00: .4byte 0x00000889
_08052C04:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r1, r0, #0x1f
	cmp r1, #0
	beq _08052C16
	bl _08053462
_08052C16:
	ldr r7, _08052C30 @ =0x0000232C
	adds r0, r5, r7
	strh r1, [r0]
	ldr r0, [sp, #0x38]
	cmp r0, #0
	bne _08052C38
	ldr r2, _08052C34 @ =0x00002328
	adds r1, r5, r2
	movs r0, #2
	strh r0, [r1]
	bl _08053462
	.align 2, 0
_08052C30: .4byte 0x0000232C
_08052C34: .4byte 0x00002328
_08052C38:
	ldr r3, _08052C40 @ =0x00002328
	adds r1, r5, r3
	b _08052C8C
	.align 2, 0
_08052C40: .4byte 0x00002328
_08052C44:
	ldr r4, _08052C74 @ =0x0000232C
	adds r0, r5, r4
	movs r6, #0
	ldrsh r0, [r0, r6]
	cmp r0, #2
	beq _08052C54
	bl _08053462
_08052C54:
	ldr r7, _08052C78 @ =0x0000232E
	adds r0, r5, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #1
	bne _08052C80
	ldr r2, _08052C7C @ =0x00002321
	adds r1, r5, r2
	movs r0, #0
	strb r0, [r1]
	movs r3, #1
	str r3, [sp, #0x38]
	subs r4, #4
	adds r1, r5, r4
	b _080532AA
	.align 2, 0
_08052C74: .4byte 0x0000232C
_08052C78: .4byte 0x0000232E
_08052C7C: .4byte 0x00002321
_08052C80:
	ldr r6, _08052C94 @ =0x0000232A
	adds r1, r5, r6
	movs r0, #4
	strh r0, [r1]
	ldr r7, _08052C98 @ =0x00002328
	adds r1, r5, r7
_08052C8C:
	movs r0, #3
	strh r0, [r1]
	bl _08053462
	.align 2, 0
_08052C94: .4byte 0x0000232A
_08052C98: .4byte 0x00002328
_08052C9C:
	ldr r1, _08052CC0 @ =0x0000232C
	adds r0, r5, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #2
	beq _08052CAC
	bl _08053462
_08052CAC:
	ldr r3, _08052CC4 @ =0x0000232A
	adds r0, r5, r3
	movs r1, #4
	strh r1, [r0]
	ldr r4, _08052CC8 @ =0x00002328
	adds r0, r5, r4
	strh r1, [r0]
	bl _08053462
	.align 2, 0
_08052CC0: .4byte 0x0000232C
_08052CC4: .4byte 0x0000232A
_08052CC8: .4byte 0x00002328
_08052CCC:
	ldr r6, _08052D04 @ =0x000022DE
	adds r0, r5, r6
	movs r7, #0
	ldrsh r0, [r0, r7]
	cmp r0, #2
	bgt _08052CDA
	b _08053462
_08052CDA:
	ldr r1, _08052D08 @ =0x000022D8
	adds r0, r5, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0x6f
	ble _08052CE8
	b _08053462
_08052CE8:
	ldr r3, _08052D0C @ =0x00002321
	adds r1, r5, r3
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	ldr r4, _08052D10 @ =0x0000232C
	adds r0, r5, r4
	strh r2, [r0]
	adds r6, #0x4a
	adds r1, r5, r6
	movs r0, #5
	strh r0, [r1]
	b _08053462
	.align 2, 0
_08052D04: .4byte 0x000022DE
_08052D08: .4byte 0x000022D8
_08052D0C: .4byte 0x00002321
_08052D10: .4byte 0x0000232C
_08052D14:
	ldr r7, _08052D30 @ =0x0000232C
	adds r1, r5, r7
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #2
	beq _08052D22
	b _08053462
_08052D22:
	movs r0, #0
	strh r0, [r1]
	ldr r3, _08052D34 @ =0x00002328
	adds r1, r5, r3
	movs r0, #6
	strh r0, [r1]
	b _08053462
	.align 2, 0
_08052D30: .4byte 0x0000232C
_08052D34: .4byte 0x00002328
_08052D38:
	ldr r4, _08052D60 @ =0x0000232C
	adds r1, r5, r4
	movs r6, #0
	ldrsh r0, [r1, r6]
	cmp r0, #2
	beq _08052D46
	b _08053462
_08052D46:
	movs r0, #0
	strh r0, [r1]
	ldr r7, _08052D64 @ =0x00002324
	adds r0, r5, r7
	ldrb r0, [r0]
	cmp r0, #0
	bne _08052D6C
	ldr r0, _08052D68 @ =0x00002328
	adds r1, r5, r0
	movs r0, #7
	strh r0, [r1]
	b _08053462
	.align 2, 0
_08052D60: .4byte 0x0000232C
_08052D64: .4byte 0x00002324
_08052D68: .4byte 0x00002328
_08052D6C:
	ldr r2, _08052D78 @ =0x00002328
	adds r1, r5, r2
	movs r0, #8
	strh r0, [r1]
	b _08053462
	.align 2, 0
_08052D78: .4byte 0x00002328
_08052D7C:
	ldr r3, _08052D9C @ =0x0000232C
	adds r0, r5, r3
	movs r4, #0
	ldrsh r2, [r0, r4]
	cmp r2, #2
	beq _08052D8A
	b _08053462
_08052D8A:
	ldr r6, _08052DA0 @ =0x0000232E
	adds r0, r5, r6
	movs r7, #0
	ldrsh r0, [r0, r7]
	cmp r0, #0
	bne _08052DA4
	movs r0, #1
	str r0, [sp, #0x38]
	b _08052DB6
	.align 2, 0
_08052D9C: .4byte 0x0000232C
_08052DA0: .4byte 0x0000232E
_08052DA4:
	ldr r1, _08052DBC @ =0x00002321
	adds r0, r5, r1
	movs r1, #0
	strb r1, [r0]
	ldr r3, _08052DC0 @ =0x0000232A
	adds r0, r5, r3
	strh r2, [r0]
	movs r4, #2
	str r4, [sp, #0x38]
_08052DB6:
	ldr r6, _08052DC4 @ =0x00002328
	adds r1, r5, r6
	b _080532AA
	.align 2, 0
_08052DBC: .4byte 0x00002321
_08052DC0: .4byte 0x0000232A
_08052DC4: .4byte 0x00002328
_08052DC8:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r1, r0, #0x1f
	cmp r1, #0
	beq _08052DD8
	b _08053462
_08052DD8:
	ldr r7, _08052DF8 @ =0x00002321
	adds r0, r5, r7
	strb r1, [r0]
	ldr r0, _08052DFC @ =0x0000232A
	adds r1, r5, r0
	movs r0, #2
	strh r0, [r1]
	ldr r2, _08052E00 @ =0x00002322
	adds r1, r5, r2
	movs r0, #0x3c
	strh r0, [r1]
	ldr r3, _08052E04 @ =0x00002328
	adds r1, r5, r3
	movs r0, #0xc
	strh r0, [r1]
	b _08053462
	.align 2, 0
_08052DF8: .4byte 0x00002321
_08052DFC: .4byte 0x0000232A
_08052E00: .4byte 0x00002322
_08052E04: .4byte 0x00002328
_08052E08:
	ldr r6, _08052E40 @ =0x00002322
	adds r4, r5, r6
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _08052E1A
	b _08053462
_08052E1A:
	adds r0, r5, #0
	adds r0, #0x1c
	movs r1, #0xbb
	bl func_08008B6C
	ldr r7, _08052E44 @ =0x000022D8
	adds r1, r5, r7
	movs r0, #0x8f
	strh r0, [r1]
	movs r0, #0x3c
	strh r0, [r4]
	ldr r0, _08052E48 @ =0x0000225C
	adds r1, r5, r0
	movs r0, #1
	str r0, [r1]
	ldr r2, _08052E4C @ =0x00002328
	adds r1, r5, r2
	b _080532DA
	.align 2, 0
_08052E40: .4byte 0x00002322
_08052E44: .4byte 0x000022D8
_08052E48: .4byte 0x0000225C
_08052E4C: .4byte 0x00002328
_08052E50:
	ldr r3, _08052E78 @ =0x00002322
	adds r1, r5, r3
	ldrh r0, [r1]
	subs r0, #1
	movs r2, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _08052E64
	b _08053462
_08052E64:
	ldr r4, _08052E7C @ =0x0000225C
	adds r0, r5, r4
	str r2, [r0]
	ldr r6, _08052E80 @ =0x0000232A
	adds r1, r5, r6
	movs r0, #4
	strh r0, [r1]
	ldr r7, _08052E84 @ =0x00002328
	adds r1, r5, r7
	b _080532DA
	.align 2, 0
_08052E78: .4byte 0x00002322
_08052E7C: .4byte 0x0000225C
_08052E80: .4byte 0x0000232A
_08052E84: .4byte 0x00002328
_08052E88:
	adds r0, r5, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08052E98
	b _08053462
_08052E98:
	ldr r0, _08052EAC @ =0x00002328
	adds r1, r5, r0
	movs r0, #0x10
	strh r0, [r1]
	ldr r2, _08052EB0 @ =0x00002321
	adds r1, r5, r2
	movs r0, #2
	strb r0, [r1]
	b _08053462
	.align 2, 0
_08052EAC: .4byte 0x00002328
_08052EB0: .4byte 0x00002321
_08052EB4:
	ldr r3, [sp, #0x30]
	cmp r3, #0
	bne _08052EBC
	b _08053462
_08052EBC:
	ldr r4, _08052EE0 @ =0x00002321
	adds r1, r5, r4
	movs r0, #0
	strb r0, [r1]
	ldr r6, _08052EE4 @ =0x00002290
	adds r0, r5, r6
	ldrh r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #8
	bls _08052ED6
	b _08053462
_08052ED6:
	lsls r0, r0, #2
	ldr r1, _08052EE8 @ =_08052EEC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08052EE0: .4byte 0x00002321
_08052EE4: .4byte 0x00002290
_08052EE8: .4byte _08052EEC
_08052EEC: @ jump table
	.4byte _08052F10 @ case 0
	.4byte _08052F10 @ case 1
	.4byte _08052F88 @ case 2
	.4byte _08052F88 @ case 3
	.4byte _08052F88 @ case 4
	.4byte _08052FF8 @ case 5
	.4byte _08052F88 @ case 6
	.4byte _08053014 @ case 7
	.4byte _08053038 @ case 8
_08052F10:
	ldr r7, _08052F2C @ =0x000022D8
	adds r0, r5, r7
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r3, _08052F30 @ =0x000022DC
	adds r0, r5, r3
	ldrb r0, [r0]
	cmp r1, r0
	bge _08052F38
	ldr r4, _08052F34 @ =0x00002264
	adds r1, r5, r4
	ldrh r0, [r1]
	adds r0, #2
	b _08052F40
	.align 2, 0
_08052F2C: .4byte 0x000022D8
_08052F30: .4byte 0x000022DC
_08052F34: .4byte 0x00002264
_08052F38:
	ldr r6, _08052F78 @ =0x00002264
	adds r1, r5, r6
	ldrh r0, [r1]
	adds r0, #1
_08052F40:
	strh r0, [r1]
	ldr r7, _08052F78 @ =0x00002264
	adds r1, r5, r7
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0xfa
	ble _08052F52
	movs r0, #0xfa
	strh r0, [r1]
_08052F52:
	adds r0, r5, #0
	adds r0, #0x1c
	movs r1, #0xbc
	bl func_08008B6C
	ldr r3, _08052F7C @ =0x00002322
	adds r1, r5, r3
	movs r0, #0x3c
	strh r0, [r1]
	ldr r4, _08052F80 @ =0x0000225C
	adds r1, r5, r4
	movs r0, #3
	str r0, [r1]
	ldr r6, _08052F84 @ =0x00002328
	adds r1, r5, r6
	movs r0, #0x11
	strh r0, [r1]
	b _08053462
	.align 2, 0
_08052F78: .4byte 0x00002264
_08052F7C: .4byte 0x00002322
_08052F80: .4byte 0x0000225C
_08052F84: .4byte 0x00002328
_08052F88:
	ldr r7, _08052FB0 @ =0x000022D8
	adds r0, r5, r7
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r3, _08052FB4 @ =0x000022DC
	adds r0, r5, r3
	ldrb r0, [r0]
	adds r0, #0x10
	cmp r1, r0
	bge _08052FC4
	ldr r4, _08052FB8 @ =0x00002266
	adds r0, r5, r4
	ldrh r1, [r0]
	movs r6, #0
	ldrsh r0, [r0, r6]
	cmp r0, #0
	ble _08052FBC
	subs r1, #1
	b _08052FBE
	.align 2, 0
_08052FB0: .4byte 0x000022D8
_08052FB4: .4byte 0x000022DC
_08052FB8: .4byte 0x00002266
_08052FBC:
	movs r1, #0
_08052FBE:
	ldr r7, _08052FE8 @ =0x00002266
	adds r0, r5, r7
	strh r1, [r0]
_08052FC4:
	adds r0, r5, #0
	adds r0, #0x1c
	movs r1, #0xb7
	bl func_08008B6C
	ldr r0, _08052FEC @ =0x00002322
	adds r1, r5, r0
	movs r0, #0x3c
	strh r0, [r1]
	ldr r2, _08052FF0 @ =0x0000225C
	adds r1, r5, r2
	movs r0, #2
	str r0, [r1]
	ldr r3, _08052FF4 @ =0x00002328
	adds r1, r5, r3
	movs r0, #0x13
	strh r0, [r1]
	b _08053462
	.align 2, 0
_08052FE8: .4byte 0x00002266
_08052FEC: .4byte 0x00002322
_08052FF0: .4byte 0x0000225C
_08052FF4: .4byte 0x00002328
_08052FF8:
	ldr r4, _0805300C @ =0x0000232C
	adds r1, r5, r4
	movs r0, #0
	strh r0, [r1]
	ldr r6, _08053010 @ =0x00002328
	adds r1, r5, r6
	movs r0, #0x1a
	strh r0, [r1]
	b _08053462
	.align 2, 0
_0805300C: .4byte 0x0000232C
_08053010: .4byte 0x00002328
_08053014:
	adds r0, r5, #0
	adds r0, #0x1c
	movs r1, #0xbc
	bl func_08008B6C
	ldr r7, _08053030 @ =0x0000232C
	adds r1, r5, r7
	movs r0, #0
	strh r0, [r1]
	ldr r0, _08053034 @ =0x00002328
	adds r1, r5, r0
	movs r0, #0x14
	strh r0, [r1]
	b _08053462
	.align 2, 0
_08053030: .4byte 0x0000232C
_08053034: .4byte 0x00002328
_08053038:
	adds r0, r5, #0
	adds r0, #0x1c
	movs r1, #0xb7
	bl func_08008B6C
	ldr r2, _08053054 @ =0x0000232C
	adds r1, r5, r2
	movs r0, #0
	strh r0, [r1]
	ldr r3, _08053058 @ =0x00002328
	adds r1, r5, r3
	movs r0, #0x15
	strh r0, [r1]
	b _08053462
	.align 2, 0
_08053054: .4byte 0x0000232C
_08053058: .4byte 0x00002328
_0805305C:
	ldr r4, _080530A8 @ =0x00002322
	adds r1, r5, r4
	ldrh r0, [r1]
	subs r0, #1
	movs r2, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _08053070
	b _08053462
_08053070:
	ldr r6, _080530AC @ =0x0000225C
	adds r0, r5, r6
	str r2, [r0]
	movs r0, #0x80
	strh r0, [r1]
	ldr r7, _080530B0 @ =0x000022C4
	adds r4, r5, r7
	ldr r0, _080530B4 @ =0x000022C6
	adds r2, r5, r0
	ldrh r3, [r4]
	movs r6, #0
	ldrsh r1, [r4, r6]
	movs r7, #0
	ldrsh r0, [r2, r7]
	cmp r1, r0
	ble _08053092
	strh r3, [r2]
_08053092:
	ldr r1, _080530B8 @ =0x00002324
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080530C0
	ldr r2, _080530BC @ =0x000022CD
	adds r1, r5, r2
	movs r0, #1
	strb r0, [r1]
	b _080530F8
	.align 2, 0
_080530A8: .4byte 0x00002322
_080530AC: .4byte 0x0000225C
_080530B0: .4byte 0x000022C4
_080530B4: .4byte 0x000022C6
_080530B8: .4byte 0x00002324
_080530BC: .4byte 0x000022CD
_080530C0:
	ldr r3, _080530DC @ =0x00002325
	adds r0, r5, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _080530E8
	ldr r6, _080530E0 @ =0x000022CD
	adds r1, r5, r6
	movs r0, #2
	strb r0, [r1]
	ldrh r1, [r4]
	ldr r7, _080530E4 @ =0x000022C8
	adds r0, r5, r7
	b _080530F6
	.align 2, 0
_080530DC: .4byte 0x00002325
_080530E0: .4byte 0x000022CD
_080530E4: .4byte 0x000022C8
_080530E8:
	ldr r0, _0805310C @ =0x000022CD
	adds r1, r5, r0
	movs r0, #4
	strb r0, [r1]
	ldrh r1, [r4]
	ldr r2, _08053110 @ =0x000022CA
	adds r0, r5, r2
_080530F6:
	strh r1, [r0]
_080530F8:
	ldr r3, _08053114 @ =0x000022CE
	adds r1, r5, r3
	movs r0, #0
	strb r0, [r1]
	ldr r4, _08053118 @ =0x00002328
	adds r1, r5, r4
	movs r0, #0x12
	strh r0, [r1]
	b _08053462
	.align 2, 0
_0805310C: .4byte 0x000022CD
_08053110: .4byte 0x000022CA
_08053114: .4byte 0x000022CE
_08053118: .4byte 0x00002328
_0805311C:
	ldr r6, _08053148 @ =0x00002322
	adds r1, r5, r6
	ldrh r0, [r1]
	subs r0, #1
	movs r2, #0
	movs r3, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _08053132
	b _08053462
_08053132:
	ldr r7, _0805314C @ =0x000022CC
	adds r1, r5, r7
	movs r0, #7
	strb r0, [r1]
	ldr r1, _08053150 @ =0x000022CD
	adds r0, r5, r1
	strb r2, [r0]
	ldr r2, _08053154 @ =0x0000232C
	adds r0, r5, r2
	strh r3, [r0]
	b _080531CE
	.align 2, 0
_08053148: .4byte 0x00002322
_0805314C: .4byte 0x000022CC
_08053150: .4byte 0x000022CD
_08053154: .4byte 0x0000232C
_08053158:
	ldr r4, _08053180 @ =0x00002322
	adds r1, r5, r4
	ldrh r0, [r1]
	subs r0, #1
	movs r2, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _0805316C
	b _08053462
_0805316C:
	ldr r6, _08053184 @ =0x0000225C
	adds r0, r5, r6
	str r2, [r0]
	ldr r7, _08053188 @ =0x0000232C
	adds r0, r5, r7
	strh r2, [r0]
	ldr r0, _0805318C @ =0x00002328
	adds r1, r5, r0
	b _080531D2
	.align 2, 0
_08053180: .4byte 0x00002322
_08053184: .4byte 0x0000225C
_08053188: .4byte 0x0000232C
_0805318C: .4byte 0x00002328
_08053190:
	ldr r1, _080531B0 @ =0x0000232C
	adds r2, r5, r1
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #2
	beq _0805319E
	b _08053462
_0805319E:
	ldr r4, _080531B4 @ =0x00000464
	adds r1, r5, r4
	movs r0, #0
	strb r0, [r1]
	strh r0, [r2]
	ldr r6, _080531B8 @ =0x00002328
	adds r1, r5, r6
	b _080531D2
	.align 2, 0
_080531B0: .4byte 0x0000232C
_080531B4: .4byte 0x00000464
_080531B8: .4byte 0x00002328
_080531BC:
	ldr r7, _080531D8 @ =0x0000232C
	adds r1, r5, r7
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #2
	beq _080531CA
	b _08053462
_080531CA:
	movs r0, #0
	strh r0, [r1]
_080531CE:
	ldr r3, _080531DC @ =0x00002328
	adds r1, r5, r3
_080531D2:
	movs r0, #0x16
	strh r0, [r1]
	b _08053462
	.align 2, 0
_080531D8: .4byte 0x0000232C
_080531DC: .4byte 0x00002328
_080531E0:
	ldr r4, _08053208 @ =0x00002326
	adds r1, r5, r4
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r6, _0805320C @ =0x00002325
	adds r1, r5, r6
	ldrb r0, [r1]
	adds r2, r0, #1
	strb r2, [r1]
	ldr r7, _08053210 @ =0x00002324
	adds r0, r5, r7
	ldrb r0, [r0]
	cmp r0, #0
	bne _08053218
	ldr r0, _08053214 @ =0x00002328
	adds r1, r5, r0
	movs r0, #0x17
	strh r0, [r1]
	b _08053462
	.align 2, 0
_08053208: .4byte 0x00002326
_0805320C: .4byte 0x00002325
_08053210: .4byte 0x00002324
_08053214: .4byte 0x00002328
_08053218:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08053230
	ldr r2, _0805322C @ =0x00002328
	adds r1, r5, r2
	movs r0, #0x18
	strh r0, [r1]
	b _08053462
	.align 2, 0
_0805322C: .4byte 0x00002328
_08053230:
	ldr r3, _0805323C @ =0x00002328
	adds r1, r5, r3
	movs r0, #0x19
	strh r0, [r1]
	b _08053462
	.align 2, 0
_0805323C: .4byte 0x00002328
_08053240:
	ldr r4, _08053268 @ =0x0000232C
	adds r0, r5, r4
	movs r6, #0
	ldrsh r0, [r0, r6]
	cmp r0, #2
	beq _0805324E
	b _08053462
_0805324E:
	ldr r7, _0805326C @ =0x0000232E
	adds r0, r5, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r2, #0
	str r2, [sp, #0x38]
	cmp r0, #0
	bne _08053262
	movs r3, #1
	str r3, [sp, #0x38]
_08053262:
	ldr r4, _08053270 @ =0x00002328
	adds r1, r5, r4
	b _080532AA
	.align 2, 0
_08053268: .4byte 0x0000232C
_0805326C: .4byte 0x0000232E
_08053270: .4byte 0x00002328
_08053274:
	ldr r6, _0805328C @ =0x0000232C
	adds r0, r5, r6
	movs r7, #0
	ldrsh r0, [r0, r7]
	cmp r0, #2
	beq _08053282
	b _08053462
_08053282:
	movs r0, #1
	str r0, [sp, #0x38]
	ldr r2, _08053290 @ =0x00002328
	adds r1, r5, r2
	b _080532AA
	.align 2, 0
_0805328C: .4byte 0x0000232C
_08053290: .4byte 0x00002328
_08053294:
	ldr r3, _080532B0 @ =0x0000232C
	adds r0, r5, r3
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r0, #2
	beq _080532A2
	b _08053462
_080532A2:
	movs r6, #0
	str r6, [sp, #0x38]
	ldr r7, _080532B4 @ =0x00002328
	adds r1, r5, r7
_080532AA:
	movs r0, #0x1b
	strh r0, [r1]
	b _08053462
	.align 2, 0
_080532B0: .4byte 0x0000232C
_080532B4: .4byte 0x00002328
_080532B8:
	ldr r0, [sp, #4]
	ldr r1, _080532E4 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r0, _080532E8 @ =0x00002328
	adds r1, r5, r0
_080532DA:
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _08053462
	.align 2, 0
_080532E4: .4byte 0x00000889
_080532E8: .4byte 0x00002328
_080532EC:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r1, r0, #0x1f
	cmp r1, #0
	beq _080532FC
	b _08053462
_080532FC:
	ldr r2, [sp, #0x38]
	cmp r2, #0
	beq _08053310
	ldr r3, _0805330C @ =0x00002328
	adds r0, r5, r3
	strh r1, [r0]
	b _08053462
	.align 2, 0
_0805330C: .4byte 0x00002328
_08053310:
	ldr r3, [r5, #8]
	ldr r4, _080533AC @ =0x00002264
	adds r0, r5, r4
	ldr r4, _080533B0 @ =0x00001C9C
	adds r3, r3, r4
	ldrb r2, [r0]
	lsls r2, r2, #0xd
	ldr r0, [r3]
	ldr r1, _080533B4 @ =0xFFE01FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r3]
	ldr r3, [r5, #8]
	ldr r6, _080533B8 @ =0x00002326
	adds r1, r5, r6
	ldrb r0, [r1]
	movs r2, #7
	cmp r0, #6
	bhi _08053338
	adds r2, r0, #0
_08053338:
	ldr r7, _080533BC @ =0x00001C9D
	adds r3, r3, r7
	movs r0, #7
	ands r2, r0
	lsls r2, r2, #2
	ldrb r1, [r3]
	movs r0, #0x1d
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strb r0, [r3]
	ldr r3, [r5, #8]
	ldr r1, _080533C0 @ =0x000022C6
	adds r0, r5, r1
	movs r6, #0
	ldrsh r2, [r0, r6]
	adds r3, r3, r4
	ldr r7, _080533C4 @ =0x000003FF
	adds r0, r7, #0
	ands r2, r0
	ldrh r1, [r3]
	ldr r0, _080533C8 @ =0xFFFFFC00
	ands r0, r1
	orrs r0, r2
	strh r0, [r3]
	ldr r1, _080533CC @ =0x00002324
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0805345E
	add r1, sp, #0x18
	add r2, sp, #0x38
	ldrb r2, [r2]
	strb r2, [r1]
	mov r3, sp
	ldrh r3, [r3, #0x38]
	strh r3, [r1, #2]
	movs r4, #0xa
	mov sb, r4
	ldr r6, _080533D0 @ =0x000022C8
	adds r3, r5, r6
	ldr r7, _080533D4 @ =0x000022CA
	adds r0, r5, r7
	movs r4, #0
	ldrsh r2, [r3, r4]
	ldrh r4, [r0]
	movs r6, #0
	ldrsh r0, [r0, r6]
	mov sl, r1
	cmp r2, r0
	bge _080533A0
	strh r4, [r3]
_080533A0:
	movs r4, #0
	mov r6, sl
	ldr r0, _080533D0 @ =0x000022C8
	adds r7, r5, r0
	b _080533DA
	.align 2, 0
_080533AC: .4byte 0x00002264
_080533B0: .4byte 0x00001C9C
_080533B4: .4byte 0xFFE01FFF
_080533B8: .4byte 0x00002326
_080533BC: .4byte 0x00001C9D
_080533C0: .4byte 0x000022C6
_080533C4: .4byte 0x000003FF
_080533C8: .4byte 0xFFFFFC00
_080533CC: .4byte 0x00002324
_080533D0: .4byte 0x000022C8
_080533D4: .4byte 0x000022CA
_080533D8:
	adds r4, #1
_080533DA:
	cmp r4, #9
	bgt _080533FC
	ldr r0, [r5, #8]
	ldr r1, _08053490 @ =0x00002C4C
	adds r0, r0, r1
	adds r1, r6, #0
	adds r2, r4, #0
	bl func_080522D8
	ldrh r0, [r6, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0
	ldrsh r1, [r7, r2]
	cmp r0, r1
	bgt _080533D8
	mov sb, r4
_080533FC:
	mov r3, sb
	cmp r3, #9
	bgt _0805345E
	cmp r3, #8
	bgt _08053432
	movs r6, #9
	cmp r6, sb
	ble _08053432
	ldr r4, _08053490 @ =0x00002C4C
	mov r8, r4
	mov r7, sl
_08053412:
	ldr r0, [r5, #8]
	add r0, r8
	subs r4, r6, #1
	adds r1, r7, #0
	adds r2, r4, #0
	bl func_080522D8
	ldr r0, [r5, #8]
	add r0, r8
	adds r1, r7, #0
	adds r2, r6, #0
	bl func_080522E8
	adds r6, r4, #0
	cmp r6, sb
	bgt _08053412
_08053432:
	movs r0, #0
	mov r6, sl
	strb r0, [r6]
	ldr r7, _08053494 @ =0x000022C8
	adds r0, r5, r7
	ldrh r0, [r0]
	add r1, sp, #0x18
	strh r0, [r1, #2]
	ldr r0, [r5, #8]
	ldr r2, _08053490 @ =0x00002C4C
	adds r0, r0, r2
	mov r2, sb
	bl func_080522E8
	mov r3, sb
	cmp r3, #0
	bne _0805345E
	ldr r0, [r5, #8]
	ldr r4, _08053498 @ =0x00001C70
	adds r0, r0, r4
	bl SetFestivalWinner__6Animal
_0805345E:
	movs r6, #1
	str r6, [sp, #0x34]
_08053462:
	adds r0, r5, #0
	bl func_08053960
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x30]
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	ldr r7, _0805349C @ =0x00002330
	adds r1, r5, r7
	ldrh r1, [r1]
	strh r1, [r2]
	strh r1, [r0, #0x1c]
	ldr r0, _080534A0 @ =0x00001D59
	adds r1, r5, r0
	ldrb r0, [r1]
	cmp r0, #0x13
	bhi _080534A4
	adds r0, #1
	strb r0, [r1]
	b _080535D4
	.align 2, 0
_08053490: .4byte 0x00002C4C
_08053494: .4byte 0x000022C8
_08053498: .4byte 0x00001C70
_0805349C: .4byte 0x00002330
_080534A0: .4byte 0x00001D59
_080534A4:
	movs r0, #0
	strb r0, [r1]
	ldr r1, _08053500 @ =0x00001D58
	adds r4, r5, r1
	ldrb r0, [r4]
	adds r0, #1
	movs r1, #3
	ands r0, r1
	strb r0, [r4]
	adds r0, r5, #0
	bl func_08008910
	ldrb r2, [r4]
	adds r6, r0, #0
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #9
	adds r1, r1, r5
	movs r2, #0xab
	lsls r2, r2, #3
	adds r1, r1, r2
	add r0, sp, #8
	movs r2, #0xc0
	lsls r2, r2, #0x13
	movs r3, #0xc0
	lsls r3, r3, #3
	bl func_08008F0C
	ldr r3, [sp, #0x3c]
	mov sl, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08053504
	cmp r1, #0
	beq _080534F8
	adds r0, r1, #0
	adds r1, r3, #0
	ldm r1!, {r2, r4, r7}
	stm r0!, {r2, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080534F8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080535D4
	.align 2, 0
_08053500: .4byte 0x00001D58
_08053504:
	str r1, [sp, #0x44]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r0, [r6]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r1, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _0805351E
	adds r0, r1, #0
_0805351E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805353C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08053540
	mov r0, sb
	bl func_080D3BC0
	b _08053540
_0805353C:
	movs r0, #0
	mov sb, r0
_08053540:
	adds r4, r0, #0
	mov r8, r4
	ldr r2, [r6]
	mov ip, r8
	ldr r4, [sp, #0x44]
	cmp r2, r4
	beq _0805356C
_0805354E:
	mov r7, ip
	cmp r7, #0
	beq _08053560
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_08053560:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	ldr r1, [sp, #0x44]
	cmp r2, r1
	bne _0805354E
_0805356C:
	mov r4, ip
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _08053588
	cmp r4, #0
	beq _08053584
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08053584:
	adds r4, #0x10
	b _080535B0
_08053588:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080535AE
_08053590:
	cmp r2, #0
	beq _080535A0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080535A0:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _08053590
_080535AE:
	adds r4, r2, #0
_080535B0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080535C0
_080535BA:
	adds r1, #0x10
	cmp r1, r2
	bne _080535BA
_080535C0:
	cmp r0, #0
	beq _080535C8
	bl free
_080535C8:
	mov r0, sb
	add r0, r8
	mov r2, r8
	str r2, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_080535D4:
	adds r0, r5, #0
	bl func_08053634
	adds r0, r5, #0
	bl func_080558C4
_080535E0:
	ldr r3, [sp, #0x34]
	cmp r3, #0
	bne _080535EA
	bl sub_08052A1E
_080535EA:
	movs r0, #0
	str r0, [sp, #8]
	ldr r4, [sp, #0x3c]
	str r4, [sp, #0x24]
	ldr r6, [sp, #0x40]
	str r0, [r6, #4]
	str r0, [r4]
	ldr r7, [sp, #0x2c]
	str r0, [r7]
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _0805360E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805360E:
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _08053620
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08053620:
	ldr r0, [sp, #0x2c]
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08053634
func_08053634: @ 0x08053634
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r0, [r7, #0x10]
	mov sb, r0
	adds r0, r7, #0
	bl func_080088DC
	mov r8, r0
	adds r0, r7, #0
	bl func_08008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_0800894C
	adds r1, r7, #0
	adds r1, #0x14
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl func_08050D3C
	cmp r0, #6
	bls _08053686
	b _0805394C
_08053686:
	lsls r0, r0, #2
	ldr r1, _08053690 @ =_08053694
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08053690: .4byte _08053694
_08053694: @ jump table
	.4byte _080536B0 @ case 0
	.4byte _0805394C @ case 1
	.4byte _0805394C @ case 2
	.4byte _080536D2 @ case 3
	.4byte _0805394C @ case 4
	.4byte _0805394C @ case 5
	.4byte _0805394C @ case 6
_080536B0:
	ldr r1, _080536C8 @ =0x0000232C
	adds r4, r7, r1
	movs r3, #0
	ldrsh r0, [r4, r3]
	cmp r0, #0
	bne _080536CC
	ldr r0, [r7, #0x10]
	bl func_08050D5C
	movs r0, #3
	strh r0, [r4]
	b _0805394C
	.align 2, 0
_080536C8: .4byte 0x0000232C
_080536CC:
	movs r0, #2
	strh r0, [r4]
	b _0805394C
_080536D2:
	ldr r6, _080536EC @ =0x0000232C
	adds r4, r7, r6
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #5
	bne _080536F0
	ldr r0, [r7, #0x10]
	bl func_08050D74
	movs r0, #1
	strh r0, [r4]
	b _0805394C
	.align 2, 0
_080536EC: .4byte 0x0000232C
_080536F0:
	cmp r0, #4
	bne _08053784
	ldr r0, [r7, #0x10]
	bl func_08050DF0
	movs r3, #0
	movs r5, #3
	strh r5, [r4]
	ldr r6, _08053718 @ =0x00002328
	adds r2, r7, r6
	movs r6, #0
	ldrsh r1, [r2, r6]
	cmp r1, #9
	beq _0805374C
	cmp r1, #9
	bgt _0805371C
	cmp r1, #2
	beq _08053722
	b _0805394C
	.align 2, 0
_08053718: .4byte 0x00002328
_0805371C:
	cmp r1, #0x17
	beq _08053752
	b _0805394C
_08053722:
	cmp r0, #1
	bne _08053734
	ldr r1, _08053730 @ =0x0000232E
	adds r0, r7, r1
	strh r3, [r0]
	strh r5, [r2]
	b _0805394C
	.align 2, 0
_08053730: .4byte 0x0000232E
_08053734:
	cmp r0, #2
	beq _0805373A
	b _0805394C
_0805373A:
	ldr r3, _08053748 @ =0x0000232E
	adds r0, r7, r3
	movs r1, #1
	strh r1, [r0]
	movs r0, #5
	strh r0, [r4]
	b _0805394C
	.align 2, 0
_08053748: .4byte 0x0000232E
_0805374C:
	cmp r0, #1
	beq _08053756
	b _08053764
_08053752:
	cmp r0, #1
	bne _08053764
_08053756:
	ldr r6, _08053760 @ =0x0000232E
	adds r0, r7, r6
	strh r3, [r0]
	b _08053770
	.align 2, 0
_08053760: .4byte 0x0000232E
_08053764:
	cmp r0, #2
	bne _08053770
	ldr r0, _0805377C @ =0x0000232E
	adds r1, r7, r0
	movs r0, #1
	strh r0, [r1]
_08053770:
	ldr r3, _08053780 @ =0x0000232C
	adds r1, r7, r3
	movs r0, #5
	strh r0, [r1]
	b _0805394C
	.align 2, 0
_0805377C: .4byte 0x0000232E
_08053780: .4byte 0x0000232C
_08053784:
	cmp r0, #3
	beq _0805378A
	b _0805394C
_0805378A:
	movs r0, #5
	strh r0, [r4]
	ldr r6, _080537AC @ =0x00002328
	adds r0, r7, r6
	ldrh r0, [r0]
	subs r0, #2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x18
	bls _080537A0
	b _0805394C
_080537A0:
	lsls r0, r0, #2
	ldr r1, _080537B0 @ =_080537B4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080537AC: .4byte 0x00002328
_080537B0: .4byte _080537B4
_080537B4: @ jump table
	.4byte _08053818 @ case 0
	.4byte _08053824 @ case 1
	.4byte _0805394C @ case 2
	.4byte _08053834 @ case 3
	.4byte _08053844 @ case 4
	.4byte _08053854 @ case 5
	.4byte _08053878 @ case 6
	.4byte _080538A0 @ case 7
	.4byte _0805394C @ case 8
	.4byte _0805394C @ case 9
	.4byte _0805394C @ case 10
	.4byte _0805394C @ case 11
	.4byte _0805394C @ case 12
	.4byte _0805394C @ case 13
	.4byte _0805394C @ case 14
	.4byte _0805394C @ case 15
	.4byte _0805394C @ case 16
	.4byte _0805394C @ case 17
	.4byte _0805392C @ case 18
	.4byte _08053944 @ case 19
	.4byte _0805394C @ case 20
	.4byte _080538EC @ case 21
	.4byte _080538CC @ case 22
	.4byte _080538DC @ case 23
	.4byte _0805391C @ case 24
_08053818:
	ldr r0, [r7, #0x10]
	ldr r1, _08053820 @ =0x080FA39C
	b _080538F0
	.align 2, 0
_08053820: .4byte 0x080FA39C
_08053824:
	ldr r0, [r7, #0x10]
	ldr r1, _08053830 @ =0x080FA3C0
	bl func_08050D8C
	b _0805394C
	.align 2, 0
_08053830: .4byte 0x080FA3C0
_08053834:
	ldr r0, [r7, #0x10]
	ldr r1, _08053840 @ =0x080FA458
	bl func_08050D8C
	b _0805394C
	.align 2, 0
_08053840: .4byte 0x080FA458
_08053844:
	ldr r0, [r7, #0x10]
	ldr r1, _08053850 @ =0x080FA49C
	bl func_08050D8C
	b _0805394C
	.align 2, 0
_08053850: .4byte 0x080FA49C
_08053854:
	ldr r0, [r7, #0x10]
	ldr r1, _0805386C @ =0x080FA510
	bl func_08050D8C
	ldr r3, _08053870 @ =0x00002328
	adds r1, r7, r3
	movs r0, #9
	strh r0, [r1]
	ldr r6, _08053874 @ =0x0000232C
	adds r1, r7, r6
	b _0805388C
	.align 2, 0
_0805386C: .4byte 0x080FA510
_08053870: .4byte 0x00002328
_08053874: .4byte 0x0000232C
_08053878:
	ldr r0, [r7, #0x10]
	ldr r1, _08053894 @ =0x080FA614
	bl func_08050D8C
	ldr r0, _08053898 @ =0x00002328
	adds r1, r7, r0
	movs r0, #9
	strh r0, [r1]
	ldr r3, _0805389C @ =0x0000232C
	adds r1, r7, r3
_0805388C:
	movs r0, #3
	strh r0, [r1]
	b _0805394C
	.align 2, 0
_08053894: .4byte 0x080FA614
_08053898: .4byte 0x00002328
_0805389C: .4byte 0x0000232C
_080538A0:
	ldr r0, [r7, #0x10]
	ldr r1, _080538BC @ =0x080FA660
	ldr r2, _080538C0 @ =0x080FA3BC
	ldr r3, _080538C4 @ =0x080FA3B8
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl func_08050E30
	ldr r6, _080538C8 @ =0x0000232C
	adds r1, r7, r6
	b _08053904
	.align 2, 0
_080538BC: .4byte 0x080FA660
_080538C0: .4byte 0x080FA3BC
_080538C4: .4byte 0x080FA3B8
_080538C8: .4byte 0x0000232C
_080538CC:
	ldr r0, [r7, #0x10]
	ldr r1, _080538D8 @ =0x080FA670
	bl func_08050D8C
	b _0805394C
	.align 2, 0
_080538D8: .4byte 0x080FA670
_080538DC:
	ldr r0, [r7, #0x10]
	ldr r1, _080538E8 @ =0x080FA684
	bl func_08050D8C
	b _0805394C
	.align 2, 0
_080538E8: .4byte 0x080FA684
_080538EC:
	ldr r0, [r7, #0x10]
	ldr r1, _0805390C @ =0x080FA6A0
_080538F0:
	ldr r2, _08053910 @ =0x080FA3B8
	ldr r3, _08053914 @ =0x080FA3BC
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl func_08050E30
	ldr r0, _08053918 @ =0x0000232C
	adds r1, r7, r0
_08053904:
	movs r0, #4
	strh r0, [r1]
	b _0805394C
	.align 2, 0
_0805390C: .4byte 0x080FA6A0
_08053910: .4byte 0x080FA3B8
_08053914: .4byte 0x080FA3BC
_08053918: .4byte 0x0000232C
_0805391C:
	ldr r0, [r7, #0x10]
	ldr r1, _08053928 @ =0x080FA6AC
	bl func_08050D8C
	b _0805394C
	.align 2, 0
_08053928: .4byte 0x080FA6AC
_0805392C:
	ldr r0, [r7, #0x10]
	ldr r1, _0805393C @ =0x080FA6E0
	ldr r3, _08053940 @ =0x000023A0
	adds r2, r7, r3
	bl func_08050DA0
	b _0805394C
	.align 2, 0
_0805393C: .4byte 0x080FA6E0
_08053940: .4byte 0x000023A0
_08053944:
	ldr r0, [r7, #0x10]
	ldr r1, _0805395C @ =0x080FA6F4
	bl func_08050D8C
_0805394C:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805395C: .4byte 0x080FA6F4

	thumb_func_start func_08053960
func_08053960: @ 0x08053960
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x58
	adds r6, r0, #0
	movs r0, #0
	str r0, [sp, #0x44]
	ldr r1, _08053988 @ =0x00002321
	adds r0, r6, r1
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0805398C
	movs r0, #0
	bl _08054D0A
	.align 2, 0
_08053988: .4byte 0x00002321
_0805398C:
	ldr r2, _080539A4 @ =0x0000232A
	adds r0, r6, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #9
	bls _0805399A
	b _08053D42
_0805399A:
	lsls r0, r0, #2
	ldr r1, _080539A8 @ =_080539AC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080539A4: .4byte 0x0000232A
_080539A8: .4byte _080539AC
_080539AC: @ jump table
	.4byte _080539D4 @ case 0
	.4byte _08053D42 @ case 1
	.4byte _080539EC @ case 2
	.4byte _08053D42 @ case 3
	.4byte _080539FA @ case 4
	.4byte _08053A38 @ case 5
	.4byte _08053D42 @ case 6
	.4byte _08053AF8 @ case 7
	.4byte _08053B2C @ case 8
	.4byte _08053D42 @ case 9
_080539D4:
	movs r4, #0x80
	lsls r4, r4, #2
	adds r0, r6, r4
	movs r1, #0x8a
	bl func_0805E860
	ldr r5, _080539E8 @ =0x0000232A
	adds r1, r6, r5
	b _08053D3C
	.align 2, 0
_080539E8: .4byte 0x0000232A
_080539EC:
	movs r7, #0x80
	lsls r7, r7, #2
	adds r0, r6, r7
	movs r1, #0x8a
	bl func_0805E860
	b _08053D42
_080539FA:
	ldr r0, _08053A28 @ =0x000022D0
	adds r1, r6, r0
	movs r0, #0x80
	lsls r0, r0, #7
	str r0, [r1]
	ldr r2, _08053A2C @ =0x000022D4
	adds r1, r6, r2
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r1]
	ldr r3, _08053A30 @ =0x000022DE
	adds r1, r6, r3
	movs r0, #0
	strh r0, [r1]
	movs r4, #0x80
	lsls r4, r4, #2
	adds r0, r6, r4
	movs r1, #0x92
	bl func_0805E860
	ldr r5, _08053A34 @ =0x0000232A
	adds r1, r6, r5
	b _08053D3C
	.align 2, 0
_08053A28: .4byte 0x000022D0
_08053A2C: .4byte 0x000022D4
_08053A30: .4byte 0x000022DE
_08053A34: .4byte 0x0000232A
_08053A38:
	ldr r7, _08053AE0 @ =0x000022D8
	adds r3, r6, r7
	ldrh r0, [r3]
	ldr r1, _08053AE4 @ =0x000022DA
	adds r5, r6, r1
	strh r0, [r5]
	ldr r4, _08053AE8 @ =0x000022D0
	adds r2, r6, r4
	subs r7, #4
	adds r4, r6, r7
	ldr r0, [r2]
	ldr r1, [r4]
	adds r0, r0, r1
	str r0, [r2]
	movs r1, #0xc0
	lsls r1, r1, #0xa
	cmp r0, r1
	ble _08053A5E
	str r1, [r2]
_08053A5E:
	movs r0, #2
	ldrsh r1, [r2, r0]
	ldrh r0, [r3]
	subs r0, r0, r1
	strh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2f
	bgt _08053A8A
	movs r0, #0x8f
	strh r0, [r3]
	movs r0, #0x80
	lsls r0, r0, #7
	str r0, [r2]
	movs r0, #0x80
	lsls r0, r0, #5
	str r0, [r4]
	ldr r2, _08053AEC @ =0x000022DE
	adds r1, r6, r2
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_08053A8A:
	ldr r4, _08053AF0 @ =0x00002328
	adds r0, r6, r4
	movs r7, #0
	ldrsh r0, [r0, r7]
	cmp r0, #0x10
	beq _08053A98
	b _08053D42
_08053A98:
	movs r0, #0
	ldrsh r2, [r5, r0]
	ldrh r1, [r3]
	movs r4, #0
	ldrsh r0, [r3, r4]
	cmp r2, r0
	bge _08053AA8
	movs r1, #0x30
_08053AA8:
	lsls r0, r1, #0x10
	asrs r5, r0, #0x10
	subs r0, r2, r5
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #1
	ble _08053AD0
	bl rand
	asrs r0, r0, #8
	adds r1, r4, #0
	bl __modsi3
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2f
	bgt _08053AD0
	movs r1, #0x30
_08053AD0:
	ldr r5, _08053AE0 @ =0x000022D8
	adds r0, r6, r5
	strh r1, [r0]
	ldr r7, _08053AF4 @ =0x0000232A
	adds r1, r6, r7
	movs r0, #7
	b _08053D40
	.align 2, 0
_08053AE0: .4byte 0x000022D8
_08053AE4: .4byte 0x000022DA
_08053AE8: .4byte 0x000022D0
_08053AEC: .4byte 0x000022DE
_08053AF0: .4byte 0x00002328
_08053AF4: .4byte 0x0000232A
_08053AF8:
	movs r1, #0x8c
	lsls r1, r1, #2
	adds r0, r6, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	cmp r0, #0
	blt _08053B08
	b _08053D42
_08053B08:
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r6, r2
	movs r1, #0x96
	bl func_0805E860
	ldr r3, _08053B24 @ =0x00002320
	adds r1, r6, r3
	movs r0, #0
	strb r0, [r1]
	ldr r4, _08053B28 @ =0x0000232A
	adds r1, r6, r4
	b _08053D3C
	.align 2, 0
_08053B24: .4byte 0x00002320
_08053B28: .4byte 0x0000232A
_08053B2C:
	movs r5, #0x8c
	lsls r5, r5, #2
	adds r0, r6, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08053B3C
	b _08053D1E
_08053B3C:
	ldr r7, _08053B7C @ =0x00002320
	adds r1, r6, r7
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	beq _08053B50
	b _08053D1E
_08053B50:
	ldr r0, _08053B80 @ =0x00002294
	adds r1, r6, r0
	movs r0, #0xa0
	lsls r0, r0, #0xf
	str r0, [r1]
	ldr r2, _08053B84 @ =0x00002298
	adds r1, r6, r2
	movs r0, #0x88
	lsls r0, r0, #0xf
	str r0, [r1]
	ldr r3, _08053B88 @ =0x000022D8
	adds r4, r6, r3
	movs r5, #0
	ldrsh r0, [r4, r5]
	cmp r0, #0x30
	bne _08053B90
	subs r7, #0xb0
	adds r1, r6, r7
	ldr r0, _08053B8C @ =0x000003E7
	str r0, [r1]
	b _08053BB2
	.align 2, 0
_08053B7C: .4byte 0x00002320
_08053B80: .4byte 0x00002294
_08053B84: .4byte 0x00002298
_08053B88: .4byte 0x000022D8
_08053B8C: .4byte 0x000003E7
_08053B90:
	bl rand
	ldr r1, _08053BD0 @ =0x00002270
	adds r5, r6, r1
	movs r3, #0
	ldrsh r2, [r4, r3]
	movs r1, #0x8f
	subs r1, r1, r2
	lsls r4, r1, #2
	adds r4, r4, r1
	lsls r4, r4, #1
	asrs r0, r0, #8
	movs r1, #0xa
	bl __modsi3
	adds r4, r4, r0
	str r4, [r5]
_08053BB2:
	adds r0, r6, #0
	bl func_08054D34
	ldr r4, _08053BD4 @ =0x00002290
	adds r1, r6, r4
	strh r0, [r1]
	ldr r5, _08053BD0 @ =0x00002270
	adds r0, r6, r5
	ldr r1, [r0]
	cmp r1, #0
	bne _08053BD8
	movs r2, #0xa
	rsbs r2, r2, #0
	b _08053BEA
	.align 2, 0
_08053BD0: .4byte 0x00002270
_08053BD4: .4byte 0x00002290
_08053BD8:
	cmp r1, #0xdb
	bgt _08053BE0
	movs r2, #0x10
	b _08053BEA
_08053BE0:
	ldr r0, _08053C5C @ =0x000002BB
	movs r2, #0x30
	cmp r1, r0
	bgt _08053BEA
	movs r2, #0x20
_08053BEA:
	ldr r7, _08053C60 @ =0x000022A0
	adds r4, r6, r7
	ldr r0, _08053C64 @ =0x00002270
	adds r1, r6, r0
	adds r2, #0x10
	ldr r0, [r1]
	adds r0, r0, r2
	str r0, [r4]
	ldr r0, [r1]
	lsls r0, r0, #0x10
	str r0, [r1]
	ldr r0, [r4]
	lsls r0, r0, #0x10
	str r0, [r4]
	ldr r2, _08053C68 @ =0x000022A8
	adds r1, r6, r2
	movs r0, #0x80
	lsls r0, r0, #2
	str r0, [r1]
	ldr r0, [r4]
	asrs r0, r0, #8
	lsls r0, r0, #2
	bl func_080D3774
	ldr r3, _08053C6C @ =0x000022A4
	adds r1, r6, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #8
	str r0, [r1]
	ldr r5, _08053C70 @ =0x00002274
	adds r2, r6, r5
	asrs r0, r0, #3
	lsls r1, r0, #2
	adds r1, r1, r0
	str r1, [r2]
	ldr r0, _08053C74 @ =0x0000FFFF
	cmp r1, r0
	bgt _08053C3A
	adds r0, #1
	str r0, [r2]
_08053C3A:
	ldr r7, _08053C78 @ =0x00002278
	adds r1, r6, r7
	ldr r0, [r2]
	str r0, [r1]
	ldr r0, _08053C7C @ =0x000022B4
	adds r1, r6, r0
	ldr r0, [r4]
	asrs r0, r0, #2
	str r0, [r1]
	ldr r1, [r4]
	movs r0, #0x96
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _08053C80
	movs r7, #0x10
	b _08053C8C
	.align 2, 0
_08053C5C: .4byte 0x000002BB
_08053C60: .4byte 0x000022A0
_08053C64: .4byte 0x00002270
_08053C68: .4byte 0x000022A8
_08053C6C: .4byte 0x000022A4
_08053C70: .4byte 0x00002274
_08053C74: .4byte 0x0000FFFF
_08053C78: .4byte 0x00002278
_08053C7C: .4byte 0x000022B4
_08053C80:
	movs r0, #0xc8
	lsls r0, r0, #0x10
	movs r7, #8
	cmp r1, r0
	ble _08053C8C
	movs r7, #0xc
_08053C8C:
	ldr r1, _08053CC8 @ =0x000022AC
	adds r4, r6, r1
	ldr r2, _08053CCC @ =0x000022B4
	adds r5, r6, r2
	ldr r0, [r5]
	adds r1, r7, #0
	bl __divsi3
	str r0, [r4]
	ldr r3, _08053CD0 @ =0x000022B0
	adds r1, r6, r3
	str r0, [r1]
	ldr r4, _08053CD4 @ =0x000022B8
	adds r2, r6, r4
	ldr r1, [r5]
	lsls r0, r1, #1
	adds r1, r0, r1
	str r1, [r2]
	subs r3, #0x20
	adds r0, r6, r3
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r0, #2
	beq _08053CDC
	ldr r0, _08053CD8 @ =0x000022BC
	adds r4, r6, r0
	adds r1, r7, #0
	adds r1, #0xc
	ldr r0, [r5]
	b _08053CF2
	.align 2, 0
_08053CC8: .4byte 0x000022AC
_08053CCC: .4byte 0x000022B4
_08053CD0: .4byte 0x000022B0
_08053CD4: .4byte 0x000022B8
_08053CD8: .4byte 0x000022BC
_08053CDC:
	ldr r0, [r5]
	asrs r0, r0, #1
	adds r0, r1, r0
	str r0, [r2]
	ldr r1, _08053D5C @ =0x000022BC
	adds r4, r6, r1
	ldr r0, [r5]
	asrs r1, r0, #1
	subs r0, r0, r1
	adds r1, r7, #0
	adds r1, #0xc
_08053CF2:
	bl __divsi3
	str r0, [r4]
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0x95
	bl func_08008B6C
	ldr r2, _08053D60 @ =0x0000229C
	adds r1, r6, r2
	movs r0, #0
	str r0, [r1]
	movs r3, #0x8b
	lsls r3, r3, #6
	adds r1, r6, r3
	movs r2, #1
	movs r0, #1
	strh r0, [r1]
	movs r4, #0xd3
	lsls r4, r4, #2
	adds r0, r6, r4
	strb r2, [r0]
_08053D1E:
	movs r5, #0x8c
	lsls r5, r5, #2
	adds r0, r6, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x1d
	cmp r0, #0
	bge _08053D42
	movs r7, #0x80
	lsls r7, r7, #2
	adds r0, r6, r7
	ldr r1, _08053D64 @ =0x00000195
	bl func_0805E860
	ldr r0, _08053D68 @ =0x0000232A
	adds r1, r6, r0
_08053D3C:
	ldrh r0, [r1]
	adds r0, #1
_08053D40:
	strh r0, [r1]
_08053D42:
	movs r1, #0x8b
	lsls r1, r1, #6
	adds r0, r6, r1
	movs r2, #0
	ldrsh r4, [r0, r2]
	cmp r4, #1
	beq _08053D74
	cmp r4, #1
	bgt _08053D6C
	cmp r4, #0
	bne _08053D5A
	b _08053E5C
_08053D5A:
	b _08053FA6
	.align 2, 0
_08053D5C: .4byte 0x000022BC
_08053D60: .4byte 0x0000229C
_08053D64: .4byte 0x00000195
_08053D68: .4byte 0x0000232A
_08053D6C:
	cmp r4, #2
	bne _08053D72
	b _08053E6A
_08053D72:
	b _08053FA6
_08053D74:
	ldr r3, _08053DC0 @ =0x0000229C
	adds r2, r6, r3
	ldr r5, _08053DC4 @ =0x000022A4
	adds r1, r6, r5
	ldr r0, [r2]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r2]
	ldr r7, _08053DC8 @ =0x00002294
	adds r1, r6, r7
	movs r5, #0xa0
	lsls r5, r5, #0xf
	adds r0, r0, r5
	str r0, [r1]
	ldr r1, _08053DCC @ =0x000022B4
	adds r0, r6, r1
	ldr r2, [r2]
	ldr r0, [r0]
	cmp r2, r0
	bge _08053DE0
	ldr r4, _08053DD0 @ =0x000022B0
	adds r3, r6, r4
	ldr r0, [r3]
	cmp r2, r0
	ble _08053E24
	ldr r5, _08053DD4 @ =0x00002298
	adds r1, r6, r5
	ldr r0, [r1]
	ldr r7, _08053DD8 @ =0xFFFF0000
	adds r0, r0, r7
	str r0, [r1]
	ldr r0, _08053DDC @ =0x000022AC
	adds r1, r6, r0
	ldr r0, [r3]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r3]
	b _08053E24
	.align 2, 0
_08053DC0: .4byte 0x0000229C
_08053DC4: .4byte 0x000022A4
_08053DC8: .4byte 0x00002294
_08053DCC: .4byte 0x000022B4
_08053DD0: .4byte 0x000022B0
_08053DD4: .4byte 0x00002298
_08053DD8: .4byte 0xFFFF0000
_08053DDC: .4byte 0x000022AC
_08053DE0:
	ldr r1, _08053E48 @ =0x000022B8
	adds r3, r6, r1
	ldr r0, [r3]
	cmp r2, r0
	blt _08053E24
	ldr r7, _08053E4C @ =0x00002298
	adds r2, r6, r7
	ldr r0, [r2]
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	str r0, [r2]
	adds r7, #0x24
	adds r1, r6, r7
	ldr r0, [r3]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r3]
	movs r1, #2
	ldrsh r0, [r2, r1]
	cmp r0, #0x50
	ble _08053E24
	str r5, [r2]
	ldr r2, _08053E50 @ =0x000022C2
	adds r1, r6, r2
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bne _08053E24
	movs r5, #0xef
	lsls r5, r5, #2
	adds r0, r6, r5
	strb r4, [r0]
	strh r4, [r1]
_08053E24:
	ldr r7, _08053E54 @ =0x000022A4
	adds r2, r6, r7
	ldr r1, _08053E58 @ =0x000022A8
	adds r0, r6, r1
	ldr r1, [r2]
	ldr r0, [r0]
	subs r1, r1, r0
	str r1, [r2]
	cmp r1, #0
	blt _08053E3A
	b _08053FA6
_08053E3A:
	movs r1, #0
	str r1, [r2]
	movs r2, #0x8b
	lsls r2, r2, #6
	adds r0, r6, r2
	strh r1, [r0]
	b _08053FA6
	.align 2, 0
_08053E48: .4byte 0x000022B8
_08053E4C: .4byte 0x00002298
_08053E50: .4byte 0x000022C2
_08053E54: .4byte 0x000022A4
_08053E58: .4byte 0x000022A8
_08053E5C:
	movs r3, #0xc6
	lsls r3, r3, #2
	adds r0, r6, r3
	movs r1, #0xc9
	bl func_0805E860
	b _08053FA6
_08053E6A:
	ldr r4, _08053EA4 @ =0x00002294
	adds r1, r6, r4
	ldr r5, _08053EA8 @ =0x00002268
	adds r0, r6, r5
	ldr r0, [r0]
	str r0, [r1]
	ldr r7, _08053EAC @ =0x00002298
	adds r1, r6, r7
	ldr r2, _08053EB0 @ =0x0000226C
	adds r0, r6, r2
	ldr r0, [r0]
	str r0, [r1]
	movs r2, #0xb9
	ldr r3, _08053EB4 @ =0x00002288
	adds r1, r6, r3
	ldr r4, _08053EB8 @ =0xFFFFFCC1
	adds r0, r4, #0
	ldrh r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x30
	bls _08053E9A
	b _08053F9A
_08053E9A:
	lsls r0, r0, #2
	ldr r1, _08053EBC @ =_08053EC0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08053EA4: .4byte 0x00002294
_08053EA8: .4byte 0x00002268
_08053EAC: .4byte 0x00002298
_08053EB0: .4byte 0x0000226C
_08053EB4: .4byte 0x00002288
_08053EB8: .4byte 0xFFFFFCC1
_08053EBC: .4byte _08053EC0
_08053EC0: @ jump table
	.4byte _08053F8C @ case 0
	.4byte _08053F9A @ case 1
	.4byte _08053F9A @ case 2
	.4byte _08053F9A @ case 3
	.4byte _08053F9A @ case 4
	.4byte _08053F9A @ case 5
	.4byte _08053F9A @ case 6
	.4byte _08053F9A @ case 7
	.4byte _08053F9A @ case 8
	.4byte _08053F9A @ case 9
	.4byte _08053F9A @ case 10
	.4byte _08053F9A @ case 11
	.4byte _08053F9A @ case 12
	.4byte _08053F84 @ case 13
	.4byte _08053F9A @ case 14
	.4byte _08053F9A @ case 15
	.4byte _08053F88 @ case 16
	.4byte _08053F9A @ case 17
	.4byte _08053F9A @ case 18
	.4byte _08053F9A @ case 19
	.4byte _08053F9A @ case 20
	.4byte _08053F9A @ case 21
	.4byte _08053F9A @ case 22
	.4byte _08053F9A @ case 23
	.4byte _08053F9A @ case 24
	.4byte _08053F9A @ case 25
	.4byte _08053F9A @ case 26
	.4byte _08053F9A @ case 27
	.4byte _08053F9A @ case 28
	.4byte _08053F9A @ case 29
	.4byte _08053F9A @ case 30
	.4byte _08053F9A @ case 31
	.4byte _08053F9A @ case 32
	.4byte _08053F9A @ case 33
	.4byte _08053F9A @ case 34
	.4byte _08053F9A @ case 35
	.4byte _08053F9A @ case 36
	.4byte _08053F9A @ case 37
	.4byte _08053F9A @ case 38
	.4byte _08053F9A @ case 39
	.4byte _08053F90 @ case 40
	.4byte _08053F9A @ case 41
	.4byte _08053F9A @ case 42
	.4byte _08053F9A @ case 43
	.4byte _08053F94 @ case 44
	.4byte _08053F9A @ case 45
	.4byte _08053F9A @ case 46
	.4byte _08053F9A @ case 47
	.4byte _08053F98 @ case 48
_08053F84:
	movs r2, #0xb9
	b _08053F9A
_08053F88:
	movs r2, #0xbc
	b _08053F9A
_08053F8C:
	movs r2, #0xb0
	b _08053F9A
_08053F90:
	movs r2, #0xc0
	b _08053F9A
_08053F94:
	movs r2, #0xc4
	b _08053F9A
_08053F98:
	movs r2, #0xc8
_08053F9A:
	movs r5, #0xc6
	lsls r5, r5, #2
	adds r0, r6, r5
	adds r1, r2, #0
	bl func_0805E860
_08053FA6:
	ldr r7, _0805400C @ =0x0000228A
	adds r5, r6, r7
	ldr r0, _08054010 @ =0x00002288
	adds r4, r6, r0
	movs r2, #0
	ldrsh r1, [r5, r2]
	movs r3, #0
	ldrsh r0, [r4, r3]
	cmp r1, r0
	beq _08053FCC
	movs r7, #0x8e
	lsls r7, r7, #2
	adds r0, r6, r7
	movs r2, #0
	ldrsh r1, [r4, r2]
	bl func_0805E860
	ldrh r0, [r4]
	strh r0, [r5]
_08053FCC:
	ldr r3, _08054014 @ =0x0000228E
	adds r0, r6, r3
	ldrh r0, [r0]
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _08054094
	ldr r4, _08054018 @ =0x00002268
	adds r1, r6, r4
	ldr r5, _0805401C @ =0x00002294
	adds r0, r6, r5
	ldr r0, [r0]
	ldr r7, _08054020 @ =0xFFF00000
	adds r0, r0, r7
	ldr r1, [r1]
	cmp r1, r0
	ble _0805402C
	ldr r0, _08054024 @ =0x0000227C
	adds r3, r6, r0
	ldr r1, _08054028 @ =0x00002274
	adds r2, r6, r1
	ldr r0, [r2]
	asrs r0, r0, #4
	ldr r1, [r3]
	subs r1, r1, r0
	str r1, [r3]
	ldr r0, [r2]
	asrs r0, r0, #1
	cmp r1, r0
	bge _08054046
	b _08054044
	.align 2, 0
_0805400C: .4byte 0x0000228A
_08054010: .4byte 0x00002288
_08054014: .4byte 0x0000228E
_08054018: .4byte 0x00002268
_0805401C: .4byte 0x00002294
_08054020: .4byte 0xFFF00000
_08054024: .4byte 0x0000227C
_08054028: .4byte 0x00002274
_0805402C:
	ldr r2, _08054080 @ =0x0000227C
	adds r3, r6, r2
	ldr r4, _08054084 @ =0x00002274
	adds r0, r6, r4
	ldr r1, [r0]
	asrs r1, r1, #4
	ldr r2, [r3]
	adds r2, r2, r1
	str r2, [r3]
	ldr r0, [r0]
	cmp r2, r0
	ble _08054046
_08054044:
	str r0, [r3]
_08054046:
	ldr r5, _08054088 @ =0x00002268
	adds r2, r6, r5
	ldr r7, _08054080 @ =0x0000227C
	adds r1, r6, r7
	ldr r0, [r2]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r2]
	asrs r0, r0, #0x10
	subs r0, #0x60
	ldr r1, _0805408C @ =0x000022C4
	adds r2, r6, r1
	strh r0, [r2]
	movs r3, #0
	ldrsh r1, [r2, r3]
	ldr r4, _08054090 @ =0x00002270
	adds r0, r6, r4
	movs r5, #2
	ldrsh r0, [r0, r5]
	cmp r1, r0
	ble _08054072
	strh r0, [r2]
_08054072:
	movs r7, #0xe1
	lsls r7, r7, #2
	adds r1, r6, r7
	movs r0, #1
	strb r0, [r1]
	b _0805409C
	.align 2, 0
_08054080: .4byte 0x0000227C
_08054084: .4byte 0x00002274
_08054088: .4byte 0x00002268
_0805408C: .4byte 0x000022C4
_08054090: .4byte 0x00002270
_08054094:
	movs r2, #0xe1
	lsls r2, r2, #2
	adds r0, r6, r2
	strb r1, [r0]
_0805409C:
	ldr r3, _080540B8 @ =0x00002292
	adds r0, r6, r3
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r0, #0x11
	bls _080540AC
	bl _08054C4A
_080540AC:
	lsls r0, r0, #2
	ldr r1, _080540BC @ =_080540C0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080540B8: .4byte 0x00002292
_080540BC: .4byte _080540C0
_080540C0: @ jump table
	.4byte _08054108 @ case 0
	.4byte _080541A8 @ case 1
	.4byte _0805432C @ case 2
	.4byte _080543A8 @ case 3
	.4byte _080543F8 @ case 4
	.4byte _08054400 @ case 5
	.4byte _0805445C @ case 6
	.4byte _08054598 @ case 7
	.4byte _08054638 @ case 8
	.4byte _080546B4 @ case 9
	.4byte _080546D0 @ case 10
	.4byte _08054774 @ case 11
	.4byte _080547C4 @ case 12
	.4byte _080547F8 @ case 13
	.4byte _08054828 @ case 14
	.4byte _08054868 @ case 15
	.4byte _0805489C @ case 16
	.4byte _08054C1C @ case 17
_08054108:
	ldr r5, _08054128 @ =0x00002290
	adds r0, r6, r5
	ldrh r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	bls _0805411C
	bl _08054C4A
_0805411C:
	lsls r0, r0, #2
	ldr r1, _0805412C @ =_08054130
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08054128: .4byte 0x00002290
_0805412C: .4byte _08054130
_08054130: @ jump table
	.4byte _08054150 @ case 0
	.4byte _08054150 @ case 1
	.4byte _08054150 @ case 2
	.4byte _08054150 @ case 3
	.4byte _08054150 @ case 4
	.4byte _08054160 @ case 5
	.4byte _08054190 @ case 6
	.4byte _08054150 @ case 7
_08054150:
	ldr r7, _0805415C @ =0x00002292
	adds r1, r6, r7
	movs r0, #1
	strh r0, [r1]
	bl _08054C4A
	.align 2, 0
_0805415C: .4byte 0x00002292
_08054160:
	ldr r0, _0805417C @ =0x00002288
	adds r1, r6, r0
	movs r2, #0
	ldr r0, _08054180 @ =0x0000033B
	strh r0, [r1]
	ldr r1, _08054184 @ =0x0000228E
	adds r0, r6, r1
	strh r2, [r0]
	ldr r2, _08054188 @ =0x00002284
	adds r1, r6, r2
	movs r0, #0x3c
	str r0, [r1]
	ldr r3, _0805418C @ =0x00002292
	b _080545CA
	.align 2, 0
_0805417C: .4byte 0x00002288
_08054180: .4byte 0x0000033B
_08054184: .4byte 0x0000228E
_08054188: .4byte 0x00002284
_0805418C: .4byte 0x00002292
_08054190:
	ldr r4, _080541A0 @ =0x00002284
	adds r1, r6, r4
	movs r0, #0x3c
	str r0, [r1]
	ldr r5, _080541A4 @ =0x00002292
	adds r1, r6, r5
	b _080547E6
	.align 2, 0
_080541A0: .4byte 0x00002284
_080541A4: .4byte 0x00002292
_080541A8:
	ldr r7, _080541F8 @ =0x00002294
	adds r0, r6, r7
	ldr r0, [r0]
	ldr r1, _080541FC @ =0xFFF00000
	adds r0, r0, r1
	ldr r2, _08054200 @ =0x00002268
	adds r1, r6, r2
	ldr r1, [r1]
	cmp r0, r1
	bgt _080541C0
	bl _08054C4A
_080541C0:
	ldr r3, _08054204 @ =0x00002288
	adds r1, r6, r3
	movs r2, #0
	ldr r0, _08054208 @ =0x00000343
	strh r0, [r1]
	ldr r4, _0805420C @ =0x0000227C
	adds r0, r6, r4
	str r2, [r0]
	ldr r5, _08054210 @ =0x0000228E
	adds r1, r6, r5
	movs r0, #3
	strh r0, [r1]
	subs r7, #4
	adds r0, r6, r7
	ldrh r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	bls _080541EC
	bl _08054C4A
_080541EC:
	lsls r0, r0, #2
	ldr r1, _08054214 @ =_08054218
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080541F8: .4byte 0x00002294
_080541FC: .4byte 0xFFF00000
_08054200: .4byte 0x00002268
_08054204: .4byte 0x00002288
_08054208: .4byte 0x00000343
_0805420C: .4byte 0x0000227C
_08054210: .4byte 0x0000228E
_08054214: .4byte _08054218
_08054218: @ jump table
	.4byte _08054238 @ case 0
	.4byte _08054254 @ case 1
	.4byte _08054264 @ case 2
	.4byte _080542E8 @ case 3
	.4byte _0805431C @ case 4
	.4byte _08054C4A @ case 5
	.4byte _08054C4A @ case 6
	.4byte _0805431C @ case 7
_08054238:
	ldr r0, _0805424C @ =0x00002284
	adds r1, r6, r0
	movs r0, #0
	str r0, [r1]
	ldr r2, _08054250 @ =0x00002292
	adds r1, r6, r2
	movs r0, #2
	strh r0, [r1]
	bl _08054C4A
	.align 2, 0
_0805424C: .4byte 0x00002284
_08054250: .4byte 0x00002292
_08054254:
	ldr r3, _08054260 @ =0x00002284
	adds r1, r6, r3
	movs r0, #0
	str r0, [r1]
	b _0805430C
	.align 2, 0
_08054260: .4byte 0x00002284
_08054264:
	ldr r5, _0805427C @ =0x00002270
	adds r2, r6, r5
	ldr r1, [r2]
	ldr r0, _08054280 @ =0x00DBFFFF
	cmp r1, r0
	bgt _08054290
	ldr r0, _08054284 @ =0x0013FFFF
	cmp r1, r0
	ble _0805428C
	ldr r7, _08054288 @ =0xFFEC0000
	adds r0, r1, r7
	b _0805428E
	.align 2, 0
_0805427C: .4byte 0x00002270
_08054280: .4byte 0x00DBFFFF
_08054284: .4byte 0x0013FFFF
_08054288: .4byte 0xFFEC0000
_0805428C:
	movs r0, #0
_0805428E:
	str r0, [r2]
_08054290:
	ldr r1, _080542AC @ =0x00002270
	adds r0, r6, r1
	ldr r1, [r0]
	ldr r0, _080542B0 @ =0x0013FFFF
	cmp r1, r0
	bgt _080542BC
	ldr r3, _080542B4 @ =0x00002274
	adds r2, r6, r3
	ldr r4, _080542B8 @ =0x000022A4
	adds r0, r6, r4
	ldr r1, [r0]
	asrs r1, r1, #3
	b _080542C8
	.align 2, 0
_080542AC: .4byte 0x00002270
_080542B0: .4byte 0x0013FFFF
_080542B4: .4byte 0x00002274
_080542B8: .4byte 0x000022A4
_080542BC:
	ldr r5, _080542DC @ =0x00002274
	adds r2, r6, r5
	ldr r7, _080542E0 @ =0x000022A4
	adds r0, r6, r7
	ldr r1, [r0]
	asrs r1, r1, #4
_080542C8:
	ldr r0, [r2]
	subs r0, r0, r1
	str r0, [r2]
	ldr r0, _080542E4 @ =0x00002292
	adds r1, r6, r0
	movs r0, #0xa
	strh r0, [r1]
	bl _08054C4A
	.align 2, 0
_080542DC: .4byte 0x00002274
_080542E0: .4byte 0x000022A4
_080542E4: .4byte 0x00002292
_080542E8:
	ldr r1, _080542FC @ =0x00002270
	adds r2, r6, r1
	ldr r1, [r2]
	ldr r0, _08054300 @ =0x003BFFFF
	cmp r1, r0
	ble _08054308
	ldr r3, _08054304 @ =0xFFE20000
	adds r0, r1, r3
	b _0805430A
	.align 2, 0
_080542FC: .4byte 0x00002270
_08054300: .4byte 0x003BFFFF
_08054304: .4byte 0xFFE20000
_08054308:
	movs r0, #0
_0805430A:
	str r0, [r2]
_0805430C:
	ldr r4, _08054318 @ =0x00002292
	adds r1, r6, r4
	movs r0, #5
	strh r0, [r1]
	bl _08054C4A
	.align 2, 0
_08054318: .4byte 0x00002292
_0805431C:
	ldr r5, _08054328 @ =0x00002292
	adds r1, r6, r5
	movs r0, #7
	strh r0, [r1]
	bl _08054C4A
	.align 2, 0
_08054328: .4byte 0x00002292
_0805432C:
	ldr r7, _08054380 @ =0x00002268
	adds r2, r6, r7
	ldr r0, [r2]
	ldr r1, _08054384 @ =0xFFA00000
	adds r0, r0, r1
	ldr r3, _08054388 @ =0x00002270
	adds r1, r6, r3
	ldr r1, [r1]
	cmp r0, r1
	blt _0805439C
	movs r4, #0xc0
	lsls r4, r4, #0xf
	adds r0, r1, r4
	str r0, [r2]
	ldr r5, _0805438C @ =0x0000227C
	adds r1, r6, r5
	adds r7, #0xc
	adds r0, r6, r7
	ldr r0, [r0]
	asrs r0, r0, #1
	str r0, [r1]
	ldr r0, _08054390 @ =0x00002284
	adds r1, r6, r0
	movs r0, #0x3c
	str r0, [r1]
	ldr r2, _08054394 @ =0x0000228E
	adds r1, r6, r2
	movs r0, #0
	strh r0, [r1]
	adds r3, #0x18
	adds r1, r6, r3
	ldr r0, _08054398 @ =0x0000033F
	strh r0, [r1]
	movs r4, #0x8b
	lsls r4, r4, #6
	adds r1, r6, r4
	movs r0, #2
	strh r0, [r1]
	adds r5, #0x16
	adds r1, r6, r5
	b _080544BC
	.align 2, 0
_08054380: .4byte 0x00002268
_08054384: .4byte 0xFFA00000
_08054388: .4byte 0x00002270
_0805438C: .4byte 0x0000227C
_08054390: .4byte 0x00002284
_08054394: .4byte 0x0000228E
_08054398: .4byte 0x0000033F
_0805439C:
	ldr r7, _080543A4 @ =0x00002284
	adds r0, r6, r7
	b _08054744
	.align 2, 0
_080543A4: .4byte 0x00002284
_080543A8:
	ldr r0, _080543E0 @ =0x00002268
	adds r2, r6, r0
	ldr r3, _080543E4 @ =0x0000227C
	adds r1, r6, r3
	ldr r0, [r2]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r2]
	ldr r4, _080543E8 @ =0x00002284
	adds r1, r6, r4
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
	cmp r0, #0
	blt _080543CA
	bl _08054C4A
_080543CA:
	ldr r5, _080543EC @ =0x00002288
	adds r1, r6, r5
	ldr r0, _080543F0 @ =0x0000034F
	strh r0, [r1]
	ldr r7, _080543F4 @ =0x00002292
	adds r1, r6, r7
	movs r0, #4
	strh r0, [r1]
	bl _08054C4A
	.align 2, 0
_080543E0: .4byte 0x00002268
_080543E4: .4byte 0x0000227C
_080543E8: .4byte 0x00002284
_080543EC: .4byte 0x00002288
_080543F0: .4byte 0x0000034F
_080543F4: .4byte 0x00002292
_080543F8:
	movs r0, #1
	str r0, [sp, #0x44]
	bl _08054C4A
_08054400:
	ldr r1, _0805443C @ =0x00002268
	adds r0, r6, r1
	ldr r1, [r0]
	ldr r2, _08054440 @ =0xFFA00000
	adds r1, r1, r2
	ldr r3, _08054444 @ =0x00002270
	adds r0, r6, r3
	ldr r0, [r0]
	ldr r4, _08054448 @ =0xFFF00000
	adds r0, r0, r4
	cmp r1, r0
	blt _08054450
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xa9
	bl func_08008B6C
	movs r5, #0x8a
	lsls r5, r5, #6
	adds r1, r6, r5
	movs r0, #0x80
	lsls r0, r0, #9
	str r0, [r1]
	ldr r7, _0805444C @ =0x00002292
	adds r1, r6, r7
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	bl _08054C4A
	.align 2, 0
_0805443C: .4byte 0x00002268
_08054440: .4byte 0xFFA00000
_08054444: .4byte 0x00002270
_08054448: .4byte 0xFFF00000
_0805444C: .4byte 0x00002292
_08054450:
	ldr r1, _08054458 @ =0x00002284
	adds r0, r6, r1
	b _08054744
	.align 2, 0
_08054458: .4byte 0x00002284
_0805445C:
	ldr r2, _080544C4 @ =0x0000226C
	adds r3, r6, r2
	movs r5, #0x8a
	lsls r5, r5, #6
	adds r4, r6, r5
	ldr r0, [r3]
	ldr r1, [r4]
	subs r0, r0, r1
	str r0, [r3]
	ldr r0, [r4]
	ldr r7, _080544C8 @ =0xFFFFF000
	adds r2, r0, r7
	str r2, [r4]
	ldr r1, [r3]
	ldr r0, _080544CC @ =0x004FFFFF
	cmp r1, r0
	ble _08054520
	ldr r1, _080544D0 @ =0x00002290
	adds r0, r6, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #2
	bne _080544EC
	movs r0, #0xa0
	lsls r0, r0, #0xf
	str r0, [r3]
	movs r2, #0
	str r2, [r4]
	ldr r3, _080544D4 @ =0x0000227C
	adds r1, r6, r3
	ldr r4, _080544D8 @ =0x00002274
	adds r0, r6, r4
	ldr r0, [r0]
	asrs r0, r0, #1
	str r0, [r1]
	adds r5, #4
	adds r1, r6, r5
	movs r0, #0x3c
	str r0, [r1]
	ldr r7, _080544DC @ =0x0000228E
	adds r0, r6, r7
	strh r2, [r0]
	ldr r0, _080544E0 @ =0x00002288
	adds r1, r6, r0
	ldr r0, _080544E4 @ =0x0000033F
	strh r0, [r1]
	ldr r2, _080544E8 @ =0x00002292
	adds r1, r6, r2
_080544BC:
	movs r0, #3
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_080544C4: .4byte 0x0000226C
_080544C8: .4byte 0xFFFFF000
_080544CC: .4byte 0x004FFFFF
_080544D0: .4byte 0x00002290
_080544D4: .4byte 0x0000227C
_080544D8: .4byte 0x00002274
_080544DC: .4byte 0x0000228E
_080544E0: .4byte 0x00002288
_080544E4: .4byte 0x0000033F
_080544E8: .4byte 0x00002292
_080544EC:
	ldr r3, _0805450C @ =0x00002288
	adds r1, r6, r3
	movs r2, #0
	ldr r0, _08054510 @ =0x0000033B
	strh r0, [r1]
	ldr r4, _08054514 @ =0x0000228E
	adds r0, r6, r4
	strh r2, [r0]
	ldr r5, _08054518 @ =0x00002284
	adds r1, r6, r5
	movs r0, #0x3c
	str r0, [r1]
	ldr r7, _0805451C @ =0x00002292
	adds r1, r6, r7
	b _080547A4
	.align 2, 0
_0805450C: .4byte 0x00002288
_08054510: .4byte 0x0000033B
_08054514: .4byte 0x0000228E
_08054518: .4byte 0x00002284
_0805451C: .4byte 0x00002292
_08054520:
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r2, r0
	ble _0805453C
	ldr r0, _08054534 @ =0x00002288
	adds r1, r6, r0
	ldr r0, _08054538 @ =0x00000367
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_08054534: .4byte 0x00002288
_08054538: .4byte 0x00000367
_0805453C:
	ldr r0, _0805454C @ =0xFFFF8000
	cmp r2, r0
	bge _08054558
	ldr r2, _08054550 @ =0x00002288
	adds r1, r6, r2
	ldr r0, _08054554 @ =0x0000036F
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_0805454C: .4byte 0xFFFF8000
_08054550: .4byte 0x00002288
_08054554: .4byte 0x0000036F
_08054558:
	ldr r3, _08054584 @ =0x0000228E
	adds r2, r6, r3
	ldrh r1, [r2]
	ldr r0, _08054588 @ =0x0000FFFD
	ands r0, r1
	strh r0, [r2]
	ldr r4, _0805458C @ =0x00002288
	adds r1, r6, r4
	ldr r0, _08054590 @ =0x0000036B
	strh r0, [r1]
	ldr r5, _08054594 @ =0x00002290
	adds r0, r6, r5
	movs r7, #0
	ldrsh r1, [r0, r7]
	cmp r1, #2
	beq _0805457A
	b _08054C4A
_0805457A:
	movs r2, #0x8b
	lsls r2, r2, #6
	adds r0, r6, r2
	strh r1, [r0]
	b _08054C4A
	.align 2, 0
_08054584: .4byte 0x0000228E
_08054588: .4byte 0x0000FFFD
_0805458C: .4byte 0x00002288
_08054590: .4byte 0x0000036B
_08054594: .4byte 0x00002290
_08054598:
	ldr r3, _080545D4 @ =0x00002268
	adds r0, r6, r3
	ldr r0, [r0]
	ldr r4, _080545D8 @ =0xFFA00000
	adds r0, r0, r4
	ldr r1, _080545DC @ =0x00C7FFFF
	cmp r0, r1
	ble _0805462C
	ldr r5, _080545E0 @ =0x0000227C
	adds r0, r6, r5
	ldr r2, [r0]
	cmp r2, #0
	bne _080545F4
	ldr r7, _080545E4 @ =0x00002288
	adds r1, r6, r7
	ldr r0, _080545E8 @ =0x0000033B
	strh r0, [r1]
	ldr r1, _080545EC @ =0x0000228E
	adds r0, r6, r1
	strh r2, [r0]
	ldr r2, _080545F0 @ =0x00002284
	adds r1, r6, r2
	movs r0, #0x3c
	str r0, [r1]
	adds r3, #0x2a
_080545CA:
	adds r1, r6, r3
	movs r0, #8
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_080545D4: .4byte 0x00002268
_080545D8: .4byte 0xFFA00000
_080545DC: .4byte 0x00C7FFFF
_080545E0: .4byte 0x0000227C
_080545E4: .4byte 0x00002288
_080545E8: .4byte 0x0000033B
_080545EC: .4byte 0x0000228E
_080545F0: .4byte 0x00002284
_080545F4:
	ldr r4, _0805461C @ =0x00002288
	adds r1, r6, r4
	ldr r0, _08054620 @ =0x0000033F
	strh r0, [r1]
	ldr r5, _08054624 @ =0x00002274
	adds r2, r6, r5
	ldr r7, _08054628 @ =0x00002278
	adds r0, r6, r7
	ldr r1, [r0]
	asrs r1, r1, #6
	ldr r0, [r2]
	subs r0, r0, r1
	str r0, [r2]
	cmp r0, #0
	blt _08054614
	b _08054C4A
_08054614:
	movs r0, #0
	str r0, [r2]
	b _08054C4A
	.align 2, 0
_0805461C: .4byte 0x00002288
_08054620: .4byte 0x0000033F
_08054624: .4byte 0x00002274
_08054628: .4byte 0x00002278
_0805462C:
	ldr r1, _08054634 @ =0x00002284
	adds r0, r6, r1
	b _08054744
	.align 2, 0
_08054634: .4byte 0x00002284
_08054638:
	ldr r2, _0805466C @ =0x00002284
	adds r1, r6, r2
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
	cmp r0, #0
	blt _08054648
	b _08054C4A
_08054648:
	ldr r3, _08054670 @ =0x00002290
	adds r0, r6, r3
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r0, #8
	beq _0805467C
	movs r0, #0x3c
	str r0, [r1]
	ldr r5, _08054674 @ =0x00002288
	adds r1, r6, r5
	movs r0, #0xce
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r7, _08054678 @ =0x00002292
	adds r1, r6, r7
	movs r0, #9
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_0805466C: .4byte 0x00002284
_08054670: .4byte 0x00002290
_08054674: .4byte 0x00002288
_08054678: .4byte 0x00002292
_0805467C:
	movs r0, #0x1e
	str r0, [r1]
	ldr r0, _080546A8 @ =0x00002288
	adds r1, r6, r0
	movs r0, #0xce
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r2, _080546AC @ =0x00002292
	adds r1, r6, r2
	movs r0, #0xe
	strh r0, [r1]
	movs r3, #0xfe
	lsls r3, r3, #2
	adds r0, r6, r3
	movs r1, #2
	bl func_0805E860
	ldr r4, _080546B0 @ =0x0000042C
	adds r1, r6, r4
	movs r0, #1
	strb r0, [r1]
	b _08054C4A
	.align 2, 0
_080546A8: .4byte 0x00002288
_080546AC: .4byte 0x00002292
_080546B0: .4byte 0x0000042C
_080546B4:
	ldr r5, _080546CC @ =0x00002284
	adds r1, r6, r5
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
	cmp r0, #0
	blt _080546C4
	b _08054C4A
_080546C4:
	movs r0, #0
	str r0, [r1]
	b _08054C46
	.align 2, 0
_080546CC: .4byte 0x00002284
_080546D0:
	ldr r1, _0805471C @ =0x00002268
	adds r0, r6, r1
	ldr r0, [r0]
	ldr r2, _08054720 @ =0xFFA00000
	adds r0, r0, r2
	ldr r3, _08054724 @ =0x00002270
	adds r2, r6, r3
	ldr r1, [r2]
	cmp r0, r1
	blt _08054740
	ldr r4, _08054728 @ =0x0000227C
	adds r1, r6, r4
	movs r0, #0x80
	lsls r0, r0, #8
	str r0, [r1]
	ldr r5, _0805472C @ =0x00002284
	adds r1, r6, r5
	movs r0, #0x1e
	str r0, [r1]
	movs r7, #2
	ldrsh r0, [r2, r7]
	cmp r0, #0x13
	bgt _08054702
	movs r0, #0xf
	str r0, [r1]
_08054702:
	ldr r0, _08054730 @ =0x0000228E
	adds r1, r6, r0
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08054734 @ =0x00002288
	adds r1, r6, r2
	ldr r0, _08054738 @ =0x0000033F
	strh r0, [r1]
	ldr r3, _0805473C @ =0x00002292
	adds r1, r6, r3
	movs r0, #0xb
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_0805471C: .4byte 0x00002268
_08054720: .4byte 0xFFA00000
_08054724: .4byte 0x00002270
_08054728: .4byte 0x0000227C
_0805472C: .4byte 0x00002284
_08054730: .4byte 0x0000228E
_08054734: .4byte 0x00002288
_08054738: .4byte 0x0000033F
_0805473C: .4byte 0x00002292
_08054740:
	ldr r4, _08054770 @ =0x00002284
	adds r0, r6, r4
_08054744:
	ldr r1, [r0]
	adds r1, #1
	str r1, [r0]
	movs r0, #0x3f
	ands r1, r0
	cmp r1, #0
	beq _08054754
	b _08054C4A
_08054754:
	bl rand
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _08054762
	b _08054C4A
_08054762:
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xa9
	bl func_08008B6C
	b _08054C4A
	.align 2, 0
_08054770: .4byte 0x00002284
_08054774:
	ldr r5, _080547AC @ =0x00002268
	adds r2, r6, r5
	ldr r7, _080547B0 @ =0x0000227C
	adds r1, r6, r7
	ldr r0, [r2]
	ldr r1, [r1]
	adds r0, r0, r1
	str r0, [r2]
	ldr r0, _080547B4 @ =0x00002284
	adds r1, r6, r0
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
	cmp r0, #0
	blt _08054794
	b _08054C4A
_08054794:
	movs r0, #0x3c
	str r0, [r1]
	ldr r2, _080547B8 @ =0x00002288
	adds r1, r6, r2
	ldr r0, _080547BC @ =0x00000347
	strh r0, [r1]
	ldr r3, _080547C0 @ =0x00002292
	adds r1, r6, r3
_080547A4:
	movs r0, #0xc
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_080547AC: .4byte 0x00002268
_080547B0: .4byte 0x0000227C
_080547B4: .4byte 0x00002284
_080547B8: .4byte 0x00002288
_080547BC: .4byte 0x00000347
_080547C0: .4byte 0x00002292
_080547C4:
	ldr r4, _080547EC @ =0x00002284
	adds r1, r6, r4
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
	cmp r0, #0
	blt _080547D4
	b _08054C4A
_080547D4:
	movs r0, #0x3c
	str r0, [r1]
	ldr r5, _080547F0 @ =0x00002288
	adds r1, r6, r5
	movs r0, #0xce
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r7, _080547F4 @ =0x00002292
	adds r1, r6, r7
_080547E6:
	movs r0, #0xd
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_080547EC: .4byte 0x00002284
_080547F0: .4byte 0x00002288
_080547F4: .4byte 0x00002292
_080547F8:
	ldr r0, _08054824 @ =0x00002284
	adds r1, r6, r0
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
	cmp r0, #0
	blt _08054808
	b _08054C4A
_08054808:
	movs r0, #0
	str r0, [r1]
	movs r1, #0x8b
	lsls r1, r1, #6
	adds r0, r6, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0
	beq _0805481C
	b _08054C4A
_0805481C:
	movs r3, #1
	str r3, [sp, #0x44]
	b _08054C4A
	.align 2, 0
_08054824: .4byte 0x00002284
_08054828:
	ldr r4, _08054858 @ =0x00002284
	adds r2, r6, r4
	ldr r0, [r2]
	subs r0, #1
	str r0, [r2]
	cmp r0, #0
	blt _08054838
	b _08054C4A
_08054838:
	ldr r5, _0805485C @ =0x0000042C
	adds r1, r6, r5
	movs r0, #0
	strb r0, [r1]
	movs r0, #0x1e
	str r0, [r2]
	ldr r7, _08054860 @ =0x00002288
	adds r1, r6, r7
	movs r0, #0xce
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r0, _08054864 @ =0x00002292
	adds r1, r6, r0
	movs r0, #0xf
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_08054858: .4byte 0x00002284
_0805485C: .4byte 0x0000042C
_08054860: .4byte 0x00002288
_08054864: .4byte 0x00002292
_08054868:
	ldr r2, _08054890 @ =0x00002284
	adds r1, r6, r2
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
	cmp r0, #0
	blt _08054878
	b _08054C4A
_08054878:
	movs r0, #0x3c
	str r0, [r1]
	ldr r3, _08054894 @ =0x00002288
	adds r1, r6, r3
	movs r0, #0xd1
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r4, _08054898 @ =0x00002292
	adds r1, r6, r4
	movs r0, #0x10
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_08054890: .4byte 0x00002284
_08054894: .4byte 0x00002288
_08054898: .4byte 0x00002292
_0805489C:
	ldr r5, _080548F4 @ =0x00002284
	adds r1, r6, r5
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
	cmp r0, #0
	blt _080548AC
	b _08054C4A
_080548AC:
	bl rand
	asrs r0, r0, #4
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080548BC
	b _08054BDC
_080548BC:
	bl rand
	asrs r0, r0, #4
	movs r1, #0x64
	bl __modsi3
	adds r1, r0, #0
	movs r4, #7
	movs r2, #0
	ldr r0, _080548F8 @ =0x080FA372
	add r7, sp, #0x30
	ldr r3, _080548FC @ =0x00000434
	adds r3, r3, r6
	mov sb, r3
	add r5, sp, #0x10
	mov r8, r5
	mov r3, sp
	adds r3, #0x20
	str r3, [sp, #0x4c]
	mov r5, sp
	adds r5, #8
	str r5, [sp, #0x48]
	ldrb r0, [r0]
	cmp r1, r0
	bge _08054900
	movs r4, #0
	b _08054918
	.align 2, 0
_080548F4: .4byte 0x00002284
_080548F8: .4byte 0x080FA372
_080548FC: .4byte 0x00000434
_08054900:
	ldr r3, _080549C8 @ =0x080FA372
	adds r0, r2, r3
	ldrb r0, [r0]
	subs r1, r1, r0
	adds r2, #1
	cmp r2, #7
	bgt _08054918
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r1, r0
	bge _08054900
	adds r4, r2, #0
_08054918:
	ldr r1, _080549CC @ =0x080FA37C
	lsls r0, r4, #2
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r1, _080549D0 @ =0x000023A4
	adds r0, r6, r1
	strh r4, [r0]
	ldr r0, [r6, #8]
	ldr r2, _080549D4 @ =0x00001C38
	adds r0, r0, r2
	adds r1, r4, #0
	movs r2, #1
	bl func_0800FDC4
	movs r3, #0x86
	lsls r3, r3, #3
	adds r5, r6, r3
	adds r0, r7, #0
	adds r1, r4, #0
	bl __7ArticleUi
	adds r0, r7, #0
	bl GetIconId__C7Article
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	bl func_0805E860
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	mov r4, sb
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sp
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r6, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x10]
	movs r7, #0x9f
	lsls r7, r7, #3
	adds r0, r6, r7
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x10]
	movs r3, #0
	cmp r0, #0
	beq _08054990
	mov r0, r8
	ldrh r3, [r0, #4]
_08054990:
	str r4, [sp, #0x50]
	lsls r2, r2, #5
	ldr r1, _080549D8 @ =0x05000200
	adds r2, r2, r1
	add r0, sp, #0x20
	adds r1, r5, #0
	bl func_08008F0C
	ldr r2, [sp, #0x4c]
	mov sl, r2
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080549DC
	cmp r1, #0
	beq _080549BC
	adds r0, r1, #0
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080549BC:
	ldr r7, [sp, #0x50]
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _08054AA6
	.align 2, 0
_080549C8: .4byte 0x080FA372
_080549CC: .4byte 0x080FA37C
_080549D0: .4byte 0x000023A4
_080549D4: .4byte 0x00001C38
_080549D8: .4byte 0x05000200
_080549DC:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x38]
	ldr r1, [sp, #0x50]
	ldr r0, [r1]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x34]
	add r1, sp, #0x38
	add r0, sp, #0x34
	cmp r4, #1
	bhs _080549F8
	adds r0, r1, #0
_080549F8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08054A16
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08054A1A
	mov r0, sb
	bl func_080D3BC0
	b _08054A1A
_08054A16:
	movs r0, #0
	mov sb, r0
_08054A1A:
	adds r5, r0, #0
	str r5, [sp, #0x54]
	ldr r3, [sp, #0x50]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _08054A40
_08054A28:
	cmp r3, #0
	beq _08054A38
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08054A38:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08054A28
_08054A40:
	adds r5, r3, #0
	ldr r0, [sp, #0x38]
	cmp r0, #1
	bne _08054A5C
	cmp r5, #0
	beq _08054A58
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08054A58:
	adds r5, #0x10
	b _08054A7E
_08054A5C:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08054A7C
_08054A64:
	cmp r2, #0
	beq _08054A74
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08054A74:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08054A64
_08054A7C:
	adds r5, r2, #0
_08054A7E:
	ldr r7, [sp, #0x50]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _08054A90
_08054A8A:
	adds r1, #0x10
	cmp r1, r2
	bne _08054A8A
_08054A90:
	cmp r0, #0
	beq _08054A98
	bl free
_08054A98:
	ldr r0, [sp, #0x54]
	add r0, sb
	ldr r1, [sp, #0x54]
	ldr r2, [sp, #0x50]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08054AA6:
	adds r0, r6, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #8]
	movs r3, #0x9e
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #8]
	movs r3, #0
	cmp r0, #0
	beq _08054ACA
	ldr r7, [sp, #0x48]
	ldrh r3, [r7, #4]
_08054ACA:
	str r4, [sp, #0x50]
	lsls r2, r2, #5
	ldr r0, _08054B00 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x20
	adds r1, r5, #0
	bl func_08008F0C
	ldr r1, [sp, #0x4c]
	mov sb, r1
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _08054B04
	cmp r1, #0
	beq _08054AF6
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08054AF6:
	ldr r5, [sp, #0x50]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08054BCC
	.align 2, 0
_08054B00: .4byte 0x06010000
_08054B04:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x40]
	ldr r7, [sp, #0x50]
	ldr r0, [r7]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x3c]
	add r1, sp, #0x40
	add r0, sp, #0x3c
	cmp r4, #1
	bhs _08054B1E
	adds r0, r1, #0
_08054B1E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08054B3C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08054B40
	mov r0, sl
	bl func_080D3BC0
	b _08054B40
_08054B3C:
	movs r0, #0
	mov sl, r0
_08054B40:
	adds r5, r0, #0
	str r5, [sp, #0x54]
	ldr r0, [sp, #0x50]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _08054B66
_08054B4E:
	cmp r3, #0
	beq _08054B5E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08054B5E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08054B4E
_08054B66:
	adds r5, r3, #0
	ldr r0, [sp, #0x40]
	cmp r0, #1
	bne _08054B82
	cmp r5, #0
	beq _08054B7E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08054B7E:
	adds r5, #0x10
	b _08054BA4
_08054B82:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08054BA2
_08054B8A:
	cmp r2, #0
	beq _08054B9A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08054B9A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08054B8A
_08054BA2:
	adds r5, r2, #0
_08054BA4:
	ldr r7, [sp, #0x50]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _08054BB6
_08054BB0:
	adds r1, #0x10
	cmp r1, r2
	bne _08054BB0
_08054BB6:
	cmp r0, #0
	beq _08054BBE
	bl free
_08054BBE:
	ldr r0, [sp, #0x54]
	add r0, sl
	ldr r1, [sp, #0x54]
	ldr r2, [sp, #0x50]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08054BCC:
	ldr r3, _08054BD8 @ =0x00000464
	adds r1, r6, r3
	movs r0, #1
	strb r0, [r1]
	b _08054BE4
	.align 2, 0
_08054BD8: .4byte 0x00000464
_08054BDC:
	ldr r4, _08054C08 @ =0x00002290
	adds r1, r6, r4
	movs r0, #9
	strh r0, [r1]
_08054BE4:
	ldr r5, _08054C0C @ =0x0000228C
	adds r1, r6, r5
	movs r0, #0
	strh r0, [r1]
	ldr r7, _08054C10 @ =0x00002284
	adds r1, r6, r7
	movs r0, #0x1e
	str r0, [r1]
	ldr r0, _08054C14 @ =0x00002288
	adds r1, r6, r0
	movs r0, #0xce
	lsls r0, r0, #2
	strh r0, [r1]
	ldr r2, _08054C18 @ =0x00002292
	adds r1, r6, r2
	movs r0, #0x11
	strh r0, [r1]
	b _08054C4A
	.align 2, 0
_08054C08: .4byte 0x00002290
_08054C0C: .4byte 0x0000228C
_08054C10: .4byte 0x00002284
_08054C14: .4byte 0x00002288
_08054C18: .4byte 0x00002292
_08054C1C:
	ldr r3, _08054D1C @ =0x00002284
	adds r2, r6, r3
	ldr r0, [r2]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08054C34
	ldr r4, _08054D20 @ =0x0000228C
	adds r1, r6, r4
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_08054C34:
	ldr r0, [r2]
	subs r0, #1
	str r0, [r2]
	cmp r0, #0
	bge _08054C4A
	ldr r5, _08054D24 @ =0x00002292
	adds r1, r6, r5
	movs r0, #4
	strh r0, [r1]
_08054C46:
	movs r7, #1
	str r7, [sp, #0x44]
_08054C4A:
	ldr r1, _08054D28 @ =0x00002268
	adds r0, r6, r1
	movs r3, #2
	ldrsh r2, [r0, r3]
	ldr r4, _08054D2C @ =0x00002330
	adds r1, r6, r4
	ldrh r0, [r1]
	subs r0, r2, r0
	cmp r0, #0x7f
	ble _08054C64
	adds r0, r2, #0
	subs r0, #0x80
	strh r0, [r1]
_08054C64:
	movs r5, #0x8c
	lsls r5, r5, #2
	adds r4, r6, r5
	movs r7, #0x80
	lsls r7, r7, #2
	adds r0, r6, r7
	bl func_0805E8F0
	str r0, [r4]
	movs r0, #0x9a
	lsls r0, r0, #2
	adds r4, r6, r0
	movs r1, #0x8e
	lsls r1, r1, #2
	adds r0, r6, r1
	bl func_0805E8F0
	str r0, [r4]
	movs r2, #0xd3
	lsls r2, r2, #2
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #1
	bne _08054CA4
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r4, r6, r3
	adds r5, #0xe8
	adds r0, r6, r5
	bl func_0805E8F0
	str r0, [r4]
_08054CA4:
	movs r7, #0xe1
	lsls r7, r7, #2
	adds r0, r6, r7
	ldrb r0, [r0]
	cmp r0, #1
	bne _08054CC2
	movs r0, #0xe0
	lsls r0, r0, #2
	adds r4, r6, r0
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r6, r1
	bl func_0805E8F0
	str r0, [r4]
_08054CC2:
	movs r2, #0xef
	lsls r2, r2, #2
	adds r5, r6, r2
	ldrb r0, [r5]
	cmp r0, #1
	bne _08054CEC
	movs r3, #0xee
	lsls r3, r3, #2
	adds r4, r6, r3
	movs r7, #0xe2
	lsls r7, r7, #2
	adds r0, r6, r7
	bl func_0805E8F0
	str r0, [r4]
	ldrb r0, [r4]
	lsls r0, r0, #0x1d
	cmp r0, #0
	bge _08054CEC
	movs r0, #0
	strb r0, [r5]
_08054CEC:
	ldr r1, _08054D30 @ =0x0000042C
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _08054D08
	movs r2, #0x85
	lsls r2, r2, #3
	adds r4, r6, r2
	movs r3, #0xfe
	lsls r3, r3, #2
	adds r0, r6, r3
	bl func_0805E8F0
	str r0, [r4]
_08054D08:
	ldr r0, [sp, #0x44]
_08054D0A:
	add sp, #0x58
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08054D1C: .4byte 0x00002284
_08054D20: .4byte 0x0000228C
_08054D24: .4byte 0x00002292
_08054D28: .4byte 0x00002268
_08054D2C: .4byte 0x00002330
_08054D30: .4byte 0x0000042C

	thumb_func_start func_08054D34
func_08054D34: @ 0x08054D34
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	movs r0, #0
	mov r8, r0
	ldr r1, _08054D64 @ =0x00002324
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08054DB0
	ldr r2, _08054D68 @ =0x00002266
	adds r1, r6, r2
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0
	beq _08054D6C
	subs r0, #1
	movs r1, #0x32
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	b _08054D6E
	.align 2, 0
_08054D64: .4byte 0x00002324
_08054D68: .4byte 0x00002266
_08054D6C:
	movs r0, #0
_08054D6E:
	adds r7, r0, #0
	ldr r0, _08054DA8 @ =0x00002326
	adds r5, r6, r0
	ldrb r0, [r5]
	movs r3, #5
	cmp r0, #5
	bhi _08054D7E
	adds r3, r0, #0
_08054D7E:
	ldr r2, _08054DAC @ =0x080FA246
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r3, r0
	adds r0, r0, r2
	ldrb r4, [r0]
	bl rand
	movs r1, #0x64
	bl __modsi3
	cmp r4, r0
	ble _08054DB0
	movs r0, #5
	strb r0, [r5]
	movs r0, #6
	b _08054F34
	.align 2, 0
_08054DA8: .4byte 0x00002326
_08054DAC: .4byte 0x080FA246
_08054DB0:
	ldr r2, _08054DC0 @ =0x000022D8
	adds r1, r6, r2
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x8f
	bne _08054DC4
	movs r0, #7
	b _08054F34
	.align 2, 0
_08054DC0: .4byte 0x000022D8
_08054DC4:
	movs r0, #0
	ldrsh r2, [r1, r0]
	ldr r1, _08054DD8 @ =0x000022DC
	adds r0, r6, r1
	ldrb r1, [r0]
	cmp r2, r1
	ble _08054DDC
	movs r4, #0x64
	b _08054DF4
	.align 2, 0
_08054DD8: .4byte 0x000022DC
_08054DDC:
	adds r0, r1, #0
	subs r0, #8
	cmp r2, r0
	ble _08054DE8
	movs r4, #0x46
	b _08054DF4
_08054DE8:
	adds r0, r1, #0
	subs r0, #0x10
	movs r4, #0
	cmp r2, r0
	ble _08054DF4
	movs r4, #0x1e
_08054DF4:
	ldr r2, _08054E28 @ =0x000022D8
	adds r0, r6, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r0, r1, #0
	subs r0, #0x30
	cmp r0, #0
	bge _08054E06
	adds r0, #7
_08054E06:
	lsls r0, r0, #0xd
	lsrs r7, r0, #0x10
	ldr r0, _08054E2C @ =0x00002264
	adds r1, r6, r0
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0
	beq _08054E30
	subs r0, #1
	movs r1, #0x19
	bl __divsi3
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	b _08054E32
	.align 2, 0
_08054E28: .4byte 0x000022D8
_08054E2C: .4byte 0x00002264
_08054E30:
	movs r5, #0
_08054E32:
	bl rand
	movs r1, #0x64
	bl __modsi3
	cmp r4, r0
	ble _08054EE8
	ldr r3, _08054E64 @ =0x080FA2E8
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	movs r2, #0xb
	muls r1, r2, r1
	adds r0, r0, r1
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #2
	beq _08054E6E
	cmp r0, #2
	bgt _08054E68
	cmp r0, #1
	beq _08054E86
	b _08054E8A
	.align 2, 0
_08054E64: .4byte 0x080FA2E8
_08054E68:
	cmp r0, #3
	beq _08054E74
	b _08054E8A
_08054E6E:
	movs r1, #2
	mov r8, r1
	b _08054E8A
_08054E74:
	bl rand
	movs r1, #0x64
	bl __modsi3
	movs r2, #2
	mov r8, r2
	cmp r0, #0x45
	bgt _08054E8A
_08054E86:
	movs r0, #1
	mov r8, r0
_08054E8A:
	ldr r1, _08054ED4 @ =0x00002324
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08054F32
	ldr r0, [r6, #8]
	ldr r2, _08054ED8 @ =0x00001C38
	adds r0, r0, r2
	bl func_0800F634
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	beq _08054F32
	ldr r1, _08054EDC @ =0x00002270
	adds r0, r6, r1
	ldr r1, [r0]
	ldr r0, _08054EE0 @ =0x0000012B
	cmp r1, r0
	ble _08054F32
	ldr r2, _08054EE4 @ =0x00002264
	adds r0, r6, r2
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x64
	ble _08054F32
	bl rand
	movs r1, #0x64
	bl __modsi3
	cmp r0, #4
	bgt _08054F32
	movs r2, #8
	mov r8, r2
	b _08054F32
	.align 2, 0
_08054ED4: .4byte 0x00002324
_08054ED8: .4byte 0x00001C38
_08054EDC: .4byte 0x00002270
_08054EE0: .4byte 0x0000012B
_08054EE4: .4byte 0x00002264
_08054EE8:
	ldr r3, _08054F0C @ =0x080FA264
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	movs r2, #0xb
	muls r1, r2, r1
	adds r0, r0, r1
	adds r0, r0, r3
	ldrb r0, [r0]
	cmp r0, #2
	beq _08054F16
	cmp r0, #2
	bgt _08054F10
	cmp r0, #1
	beq _08054F2E
	b _08054F32
	.align 2, 0
_08054F0C: .4byte 0x080FA264
_08054F10:
	cmp r0, #3
	beq _08054F1C
	b _08054F32
_08054F16:
	movs r1, #5
	mov r8, r1
	b _08054F32
_08054F1C:
	bl rand
	movs r1, #0x64
	bl __modsi3
	movs r2, #4
	mov r8, r2
	cmp r0, #0x45
	bgt _08054F32
_08054F2E:
	movs r0, #3
	mov r8, r0
_08054F32:
	mov r0, r8
_08054F34:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08054F40
func_08054F40: @ 0x08054F40
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	adds r6, r0, #0
	ldr r1, _08055074 @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	movs r4, #1
	rsbs r4, r4, #0
	ldr r0, _08055078 @ =0x0600E000
	mov sb, r0
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r4, #0
	mov r1, sb
	adds r2, r5, #0
	bl func_08008EB8
	ldr r1, _0805507C @ =0x0600E800
	mov r8, r1
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r1, _08055080 @ =0x0600F000
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r0, _08055084 @ =0x08738AD8
	ldr r2, _08055088 @ =0x00001D5A
	adds r4, r6, r2
	adds r1, r4, #0
	bl func_080D102C
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r0, r4, #0
	mov r1, sb
	bl func_08008E64
	adds r0, r4, #0
	mov r1, r8
	movs r2, #0xc0
	bl func_08008E64
	ldr r0, _0805508C @ =0x08738CC8
	adds r1, r4, #0
	bl func_080D102C
	ldr r0, _08055090 @ =0x08738CF0
	adds r1, r4, #0
	bl func_080D102C
	ldr r0, _08055094 @ =0x08738D1C
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl func_080D102C
	ldr r0, _08055098 @ =0x087399C4
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #2
	bl func_08008E64
	ldr r0, _0805509C @ =0x08739A64
	movs r3, #0xab
	lsls r3, r3, #3
	adds r1, r6, r3
	bl func_080D102C
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r3, #0xf2
	lsls r3, r3, #5
	adds r2, r3, #0
	strh r2, [r1]
	movs r4, #0
	strh r2, [r0]
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _080550A0 @ =0x00001C43
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _080550A4 @ =0x00001D42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _080550A8 @ =0x00001E41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x14]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x16]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x18]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1a]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1c]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08055074: .4byte 0x06007FE0
_08055078: .4byte 0x0600E000
_0805507C: .4byte 0x0600E800
_08055080: .4byte 0x0600F000
_08055084: .4byte 0x08738AD8
_08055088: .4byte 0x00001D5A
_0805508C: .4byte 0x08738CC8
_08055090: .4byte 0x08738CF0
_08055094: .4byte 0x08738D1C
_08055098: .4byte 0x087399C4
_0805509C: .4byte 0x08739A64
_080550A0: .4byte 0x00001C43
_080550A4: .4byte 0x00001D42
_080550A8: .4byte 0x00001E41

	thumb_func_start func_080550AC
func_080550AC: @ 0x080550AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r5, r0, #0
	movs r4, #0x11
	cmp r1, #0
	ble _080550D6
	ldr r3, _08055160 @ =0x00003046
	ldr r2, _08055164 @ =0x00003047
	ldr r6, _08055168 @ =0x0000219E
	adds r0, r5, r6
_080550C8:
	strh r3, [r0]
	strh r2, [r0, #2]
	subs r1, #0x19
	subs r0, #0x40
	subs r4, #1
	cmp r1, #0
	bgt _080550C8
_080550D6:
	lsls r0, r4, #3
	adds r0, #8
	ldr r7, _0805516C @ =0x000022DC
	adds r1, r5, r7
	strb r0, [r1]
	lsls r1, r4, #6
	ldr r6, _08055170 @ =0x00001D5E
	adds r3, r5, r6
	adds r2, r3, r1
	ldr r0, _08055174 @ =0x0000304A
	strh r0, [r2]
	movs r0, #0xeb
	lsls r0, r0, #5
	adds r2, r5, r0
	adds r1, r2, r1
	ldr r0, _08055178 @ =0x0000304B
	strh r0, [r1]
	subs r4, #1
	lsls r1, r4, #6
	adds r3, r3, r1
	subs r0, #3
	strh r0, [r3]
	adds r2, r2, r1
	adds r0, #1
	strh r0, [r2]
	subs r4, #1
	cmp r4, #5
	ble _08055124
	ldr r2, _0805517C @ =0x00003044
	ldr r1, _08055180 @ =0x00003045
	lsls r0, r4, #6
	adds r0, r0, r6
	adds r0, r0, r5
_08055118:
	strh r2, [r0]
	strh r1, [r0, #2]
	subs r0, #0x40
	subs r4, #1
	cmp r4, #5
	bgt _08055118
_08055124:
	adds r0, r5, #0
	bl func_08008910
	adds r6, r0, #0
	ldr r2, _08055184 @ =0x00001D5A
	adds r1, r5, r2
	mov r0, sp
	ldr r2, _08055188 @ =0x0600F000
	movs r3, #0xa0
	lsls r3, r3, #3
	bl func_08008F0C
	mov sb, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0805518C
	cmp r1, #0
	beq _08055156
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08055156:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08055252
	.align 2, 0
_08055160: .4byte 0x00003046
_08055164: .4byte 0x00003047
_08055168: .4byte 0x0000219E
_0805516C: .4byte 0x000022DC
_08055170: .4byte 0x00001D5E
_08055174: .4byte 0x0000304A
_08055178: .4byte 0x0000304B
_0805517C: .4byte 0x00003044
_08055180: .4byte 0x00003045
_08055184: .4byte 0x00001D5A
_08055188: .4byte 0x0600F000
_0805518C:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x14]
	ldr r1, [r6]
	mov r7, sl
	subs r0, r7, r1
	asrs r4, r0, #4
	str r4, [sp, #0x10]
	add r2, sp, #0x14
	add r0, sp, #0x10
	cmp r4, #1
	bhs _080551A6
	adds r0, r2, #0
_080551A6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080551C6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080551C2
	mov r0, r8
	bl func_080D3BC0
_080551C2:
	ldr r1, [r6]
	b _080551CA
_080551C6:
	movs r0, #0
	mov r8, r0
_080551CA:
	adds r4, r0, #0
	str r4, [sp, #0x18]
	adds r2, r1, #0
	adds r3, r4, #0
	cmp r2, sl
	beq _080551EE
_080551D6:
	cmp r3, #0
	beq _080551E6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080551E6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080551D6
_080551EE:
	adds r4, r3, #0
	ldr r0, [sp, #0x14]
	cmp r0, #1
	bne _0805520A
	cmp r4, #0
	beq _08055206
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_08055206:
	adds r4, #0x10
	b _0805522C
_0805520A:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0805522A
_08055212:
	cmp r2, #0
	beq _08055222
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055222:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08055212
_0805522A:
	adds r4, r2, #0
_0805522C:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _0805523C
_08055236:
	adds r0, #0x10
	cmp r0, r2
	bne _08055236
_0805523C:
	cmp r1, #0
	beq _08055246
	adds r0, r1, #0
	bl free
_08055246:
	ldr r0, [sp, #0x18]
	add r0, r8
	ldr r7, [sp, #0x18]
	str r7, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_08055252:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08055264
func_08055264: @ 0x08055264
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x64
	adds r7, r0, #0
	mov r1, sp
	movs r0, #0
	str r0, [sp]
	strh r0, [r1, #4]
	add r1, sp, #8
	str r0, [sp, #8]
	strh r0, [r1, #4]
	add r5, sp, #0x10
	str r0, [sp, #0x10]
	strh r0, [r5, #4]
	add r1, sp, #0x18
	str r0, [sp, #0x18]
	strh r0, [r1, #4]
	movs r2, #0x8e
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r4, #0x8f
	lsls r4, r4, #2
	adds r0, r7, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x20
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	adds r0, r4, #0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	ldr r3, [sp, #0x10]
	mov r8, r3
	movs r6, #0x8e
	lsls r6, r6, #3
	adds r0, r7, r6
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r1, _0805568C @ =0x05000200
	mov sb, r1
	adds r1, r0, r1
	ldr r0, [sp, #0x10]
	movs r2, #0
	mov sl, r4
	cmp r0, #0
	beq _080552F0
	mov r3, sp
	ldrh r2, [r3, #0x14]
_080552F0:
	mov r0, r8
	bl func_08008E64
	movs r4, #0x9c
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r5, #0x9d
	lsls r5, r5, #2
	adds r4, r7, r5
	lsls r2, r2, #2
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sl
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sl
	mov r1, sl
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	mov r0, sl
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r5}
	stm r1!, {r3, r5}
	ldr r5, [sp, #0x10]
	movs r6, #0x90
	lsls r6, r6, #3
	adds r0, r7, r6
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	mov r2, sb
	adds r1, r0, r2
	ldr r0, [sp, #0x10]
	movs r2, #0
	str r4, [sp, #0x60]
	cmp r0, #0
	beq _08055354
	mov r3, sp
	ldrh r2, [r3, #0x14]
_08055354:
	adds r0, r5, #0
	bl func_08008E64
	movs r6, #0
	movs r5, #0
	movs r4, #0xab
	lsls r4, r4, #2
	adds r4, r7, r4
	str r4, [sp, #0x48]
	adds r0, r7, #0
	adds r0, #0x80
	str r0, [sp, #0x54]
	movs r1, #0xb9
	lsls r1, r1, #2
	adds r1, r7, r1
	str r1, [sp, #0x4c]
	movs r2, #0xc7
	lsls r2, r2, #2
	adds r2, r7, r2
	str r2, [sp, #0x50]
	movs r3, #0xd5
	lsls r3, r3, #2
	adds r3, r7, r3
	str r3, [sp, #0x58]
	movs r4, #0x9c
	lsls r4, r4, #2
	adds r4, r4, r7
	mov r8, r4
	mov sb, sl
_0805538E:
	mov r0, r8
	adds r1, r5, #0
	bl func_0805E860
	mov r0, r8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x60]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	lsls r1, r5, #2
	ldr r4, _08055690 @ =0x00002334
	adds r0, r7, r4
	adds r0, r0, r1
	str r6, [r0]
	ldr r4, [sp, #8]
	movs r1, #0x8f
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r0, r0, r6
	lsls r0, r0, #5
	ldr r2, _08055694 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _080553F6
	mov r3, sp
	ldrh r2, [r3, #0xc]
_080553F6:
	adds r0, r4, #0
	bl func_08008E64
	ldr r0, [sp, #8]
	movs r1, #0
	cmp r0, #0
	beq _08055408
	mov r4, sp
	ldrh r1, [r4, #0xc]
_08055408:
	lsrs r0, r1, #5
	adds r6, r6, r0
	adds r5, #1
	cmp r5, #0x1a
	ble _0805538E
	movs r5, #0xaa
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r6, [sp, #0x48]
	ldr r0, [r6]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sb
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sl
	mov r1, sl
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	mov r0, sl
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r4, [sp, #0x10]
	movs r5, #0x92
	lsls r5, r5, #3
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r6, _0805568C @ =0x05000200
	adds r1, r0, r6
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805546A
	mov r0, sp
	ldrh r2, [r0, #0x14]
_0805546A:
	adds r0, r4, #0
	bl func_08008E64
	movs r6, #0
	movs r5, #0
	mov sb, sl
	mov r1, sp
	adds r1, #8
	str r1, [sp, #0x40]
	movs r2, #0x91
	lsls r2, r2, #3
	adds r2, r2, r7
	mov r8, r2
_08055484:
	mov r0, sb
	ldr r1, [sp, #0x54]
	adds r2, r5, #0
	bl func_0805E790
	mov r1, sp
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r4, [sp, #8]
	mov r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r0, r0, r6
	lsls r0, r0, #5
	ldr r2, _08055694 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _080554BC
	mov r3, sp
	ldrh r2, [r3, #0xc]
_080554BC:
	adds r0, r4, #0
	bl func_08008E64
	ldr r0, [sp, #8]
	movs r1, #0
	cmp r0, #0
	beq _080554CE
	ldr r4, [sp, #0x40]
	ldrh r1, [r4, #4]
_080554CE:
	lsrs r0, r1, #5
	adds r6, r6, r0
	adds r5, #1
	cmp r5, #2
	ble _08055484
	movs r5, #0xb8
	lsls r5, r5, #2
	adds r6, r7, r5
	ldr r1, _08055698 @ =0x0000091A
	adds r0, r6, #0
	bl func_0805E860
	ldr r1, [r6]
	ldr r3, [r1]
	ldrh r2, [r6, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x4c]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sb
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r4, sl
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r5}
	stm r1!, {r2, r5}
	mov r3, sp
	adds r3, #0x10
	str r3, [sp, #0x44]
	ldr r5, [sp, #0x10]
	movs r1, #0x96
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _0805568C @ =0x05000200
	adds r1, r0, r2
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _08055540
	ldr r3, [sp, #0x44]
	ldrh r2, [r3, #4]
_08055540:
	adds r0, r5, #0
	bl func_08008E64
	add r5, sp, #8
	mov sb, r5
	ldr r0, [sp, #8]
	mov r8, r0
	movs r1, #0x95
	lsls r1, r1, #3
	adds r5, r7, r1
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r2, _08055694 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805556E
	mov r3, sb
	ldrh r2, [r3, #4]
_0805556E:
	mov r0, r8
	bl func_08008E64
	ldr r1, _0805569C @ =0x0000091B
	adds r0, r6, #0
	bl func_0805E860
	ldr r1, [r6]
	ldr r3, [r1]
	ldrh r2, [r6, #0xc]
	lsls r2, r2, #2
	ldr r6, [sp, #0x4c]
	ldr r0, [r6]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r4, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	adds r0, r4, #0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r6, [sp, #8]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r5, _080556A0 @ =0x06010040
	adds r1, r0, r5
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _080555CA
	mov r0, sb
	ldrh r2, [r0, #4]
_080555CA:
	adds r0, r6, #0
	bl func_08008E64
	movs r1, #0xc6
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r5, [sp, #0x50]
	ldr r0, [r5]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r4, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	adds r0, r4, #0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r5}
	stm r1!, {r3, r5}
	ldr r5, [sp, #0x10]
	movs r6, #0x98
	lsls r6, r6, #3
	adds r0, r7, r6
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _0805568C @ =0x05000200
	adds r1, r0, r2
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _08055628
	ldr r3, [sp, #0x44]
	ldrh r2, [r3, #4]
_08055628:
	adds r0, r5, #0
	bl func_08008E64
	movs r5, #0xd3
	lsls r5, r5, #2
	adds r0, r7, r5
	movs r6, #0
	strb r6, [r0]
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r5, [sp, #0x58]
	ldr r0, [r5]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r4, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	adds r0, r4, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r4, r5}
	stm r1!, {r4, r5}
	ldr r4, [sp, #0x10]
	movs r1, #0x9b
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _0805568C @ =0x05000200
	adds r1, r0, r2
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	b _080556A4
	.align 2, 0
_0805568C: .4byte 0x05000200
_08055690: .4byte 0x00002334
_08055694: .4byte 0x06010000
_08055698: .4byte 0x0000091A
_0805569C: .4byte 0x0000091B
_080556A0: .4byte 0x06010040
_080556A4:
	beq _080556AA
	ldr r3, [sp, #0x44]
	ldrh r2, [r3, #4]
_080556AA:
	adds r0, r4, #0
	bl func_08008E64
	ldr r4, _080557A4 @ =0x00002324
	adds r0, r7, r4
	ldrb r0, [r0]
	cmp r0, #1
	beq _080556BC
	b _080557E8
_080556BC:
	movs r5, #0
	mov sb, r5
	movs r6, #0xf1
	lsls r6, r6, #2
	adds r6, r7, r6
	str r6, [sp, #0x5c]
	movs r0, #0xf0
	lsls r0, r0, #2
	adds r0, r0, r7
	mov r8, r0
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r5, r7, r1
	movs r2, #0xa1
	lsls r2, r2, #3
	adds r6, r7, r2
_080556DC:
	ldr r1, [r5, #0xc]
	adds r0, r6, #0
	bl func_080073E0
	adds r0, r6, #0
	bl func_0800736C
	str r0, [r5, #0xc]
	ldr r1, _080557A8 @ =0x080FA36C
	mov r3, sb
	lsls r0, r3, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	mov r0, r8
	bl func_0805E860
	mov r4, r8
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x5c]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sl
	mov r1, sl
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	mov r0, sl
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #0x10]
	ldr r1, [r5, #0xc]
	adds r0, r6, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _080557AC @ =0x05000200
	adds r1, r0, r2
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805574C
	mov r3, sp
	ldrh r2, [r3, #0x14]
_0805574C:
	adds r0, r4, #0
	bl func_08008E64
	ldr r4, [sp, #8]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r2, _080557B0 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805576E
	mov r3, sp
	ldrh r2, [r3, #0xc]
_0805576E:
	adds r0, r4, #0
	bl func_08008E64
	adds r5, #0x10
	adds r6, #0x10
	movs r4, #1
	add sb, r4
	mov r0, sb
	cmp r0, #2
	ble _080556DC
	movs r6, #0x28
	movs r5, #0
	mov r8, r4
	ldr r1, _080557B4 @ =0x000022E0
	adds r4, r7, r1
_0805578C:
	adds r0, r5, #0
	mov r2, r8
	ands r0, r2
	cmp r0, #0
	beq _080557B8
	bl rand
	asrs r0, r0, #8
	mov r3, r8
	ands r0, r3
	adds r0, #1
	b _080557C4
	.align 2, 0
_080557A4: .4byte 0x00002324
_080557A8: .4byte 0x080FA36C
_080557AC: .4byte 0x05000200
_080557B0: .4byte 0x06010000
_080557B4: .4byte 0x000022E0
_080557B8:
	bl rand
	asrs r0, r0, #8
	movs r1, #3
	ands r0, r1
	adds r0, #4
_080557C4:
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #3
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r1
	strh r0, [r4]
	ldrh r6, [r4]
	adds r0, r5, #0
	movs r1, #3
	bl __modsi3
	strh r0, [r4, #2]
	adds r4, #4
	adds r5, #1
	cmp r5, #0xf
	ble _0805578C
	b _080558A2
_080557E8:
	movs r5, #0x9d
	lsls r5, r5, #3
	adds r4, r7, r5
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r1, #0xfe
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	subs r5, #0xec
	adds r0, r7, r5
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sl
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sl
	mov r1, sl
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	mov r0, sl
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r5, [sp, #0x10]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r4, _080558B4 @ =0x05000200
	adds r1, r0, r4
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _08055854
	mov r0, sp
	ldrh r2, [r0, #0x14]
_08055854:
	adds r0, r5, #0
	bl func_08008E64
	ldr r4, [sp, #8]
	movs r1, #0x9c
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r2, _080558B8 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805587A
	mov r3, sp
	ldrh r2, [r3, #0xc]
_0805587A:
	adds r0, r4, #0
	bl func_08008E64
	ldr r4, _080558BC @ =0x0000042C
	adds r0, r7, r4
	strb r6, [r0]
	movs r5, #0x9f
	lsls r5, r5, #3
	adds r4, r7, r5
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	ldr r1, _080558C0 @ =0x00000464
	adds r0, r7, r1
	strb r6, [r0]
_080558A2:
	add sp, #0x64
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080558B4: .4byte 0x05000200
_080558B8: .4byte 0x06010000
_080558BC: .4byte 0x0000042C
_080558C0: .4byte 0x00000464

	thumb_func_start func_080558C4
func_080558C4: @ 0x080558C4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x128
	adds r6, r0, #0
	add r1, sp, #4
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0x10]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x18]
	strb r2, [r1, #0x18]
	add r4, sp, #0x20
	str r0, [sp, #0x20]
	strh r0, [r4, #4]
	add r3, sp, #0x28
	str r0, [sp, #0x28]
	strh r0, [r3, #4]
	add r2, sp, #0x30
	str r0, [sp, #0x30]
	strh r0, [r2, #4]
	add r1, sp, #0x38
	str r0, [sp, #0x38]
	strh r0, [r1, #4]
	ldr r1, _0805598C @ =0x00002321
	adds r0, r6, r1
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	add r2, sp, #0x40
	mov sb, r2
	cmp r0, #3
	beq _08055918
	b _08055BD2
_08055918:
	adds r1, r6, #0
	adds r1, #0xe0
	mov r0, sb
	movs r2, #0
	bl func_0805E790
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r5}
	stm r1!, {r4, r5}
	adds r0, r6, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x28]
	movs r7, #0x93
	lsls r7, r7, #3
	adds r0, r6, r7
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _08055958
	mov r0, sp
	ldrh r3, [r0, #0x2c]
_08055958:
	str r4, [sp, #0x120]
	lsls r2, r2, #5
	ldr r1, _08055990 @ =0x06010000
	adds r2, r2, r1
	mov r0, sb
	adds r1, r5, #0
	bl func_08008F0C
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _08055994
	cmp r1, #0
	beq _08055980
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08055980:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08055A5C
	.align 2, 0
_0805598C: .4byte 0x00002321
_08055990: .4byte 0x06010000
_08055994:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x64]
	ldr r7, [sp, #0x120]
	ldr r0, [r7]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x60]
	add r1, sp, #0x64
	add r0, sp, #0x60
	cmp r4, #1
	bhs _080559AE
	adds r0, r1, #0
_080559AE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080559CC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _080559D0
	mov r0, sl
	bl func_080D3BC0
	b _080559D0
_080559CC:
	movs r0, #0
	mov sl, r0
_080559D0:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r0, [sp, #0x120]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _080559F6
_080559DE:
	cmp r3, #0
	beq _080559EE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080559EE:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080559DE
_080559F6:
	adds r5, r3, #0
	ldr r0, [sp, #0x64]
	cmp r0, #1
	bne _08055A12
	cmp r5, #0
	beq _08055A0E
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08055A0E:
	adds r5, #0x10
	b _08055A34
_08055A12:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08055A32
_08055A1A:
	cmp r2, #0
	beq _08055A2A
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055A2A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08055A1A
_08055A32:
	adds r5, r2, #0
_08055A34:
	ldr r7, [sp, #0x120]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _08055A46
_08055A40:
	adds r1, #0x10
	cmp r1, r2
	bne _08055A40
_08055A46:
	cmp r0, #0
	beq _08055A4E
	bl free
_08055A4E:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08055A5C:
	adds r0, r6, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x30]
	movs r3, #0x94
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x30]
	movs r3, #0
	cmp r0, #0
	beq _08055A80
	mov r7, sp
	ldrh r3, [r7, #0x34]
_08055A80:
	str r4, [sp, #0x120]
	lsls r2, r2, #5
	ldr r0, _08055AB8 @ =0x05000200
	adds r2, r2, r0
	add r0, sp, #0x40
	adds r1, r5, #0
	bl func_08008F0C
	mov r1, sb
	str r1, [sp, #0xe8]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _08055ABC
	cmp r1, #0
	beq _08055AAC
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08055AAC:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08055B84
	.align 2, 0
_08055AB8: .4byte 0x05000200
_08055ABC:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x6c]
	ldr r7, [sp, #0x120]
	ldr r0, [r7]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x68]
	add r1, sp, #0x6c
	add r0, sp, #0x68
	cmp r4, #1
	bhs _08055AD6
	adds r0, r1, #0
_08055AD6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08055AF4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08055AF8
	mov r0, sl
	bl func_080D3BC0
	b _08055AF8
_08055AF4:
	movs r0, #0
	mov sl, r0
_08055AF8:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r0, [sp, #0x120]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _08055B1E
_08055B06:
	cmp r3, #0
	beq _08055B16
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055B16:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08055B06
_08055B1E:
	adds r5, r3, #0
	ldr r0, [sp, #0x6c]
	cmp r0, #1
	bne _08055B3A
	cmp r5, #0
	beq _08055B36
	adds r0, r5, #0
	ldr r1, [sp, #0xe8]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08055B36:
	adds r5, #0x10
	b _08055B5C
_08055B3A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08055B5A
_08055B42:
	cmp r2, #0
	beq _08055B52
	adds r0, r2, #0
	ldr r1, [sp, #0xe8]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055B52:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08055B42
_08055B5A:
	adds r5, r2, #0
_08055B5C:
	ldr r7, [sp, #0x120]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _08055B6E
_08055B68:
	adds r1, #0x10
	cmp r1, r2
	bne _08055B68
_08055B6E:
	cmp r0, #0
	beq _08055B76
	bl free
_08055B76:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08055B84:
	add r0, sp, #4
	movs r1, #0x40
	strh r1, [r0]
	strh r1, [r0, #2]
	movs r3, #0x94
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	movs r4, #0x93
	lsls r4, r4, #3
	adds r0, r6, r4
	ldr r1, [r0, #4]
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r0, #2
	strh r0, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0x18]
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08055BCA
	mov r5, sp
	ldrh r2, [r5, #0x24]
_08055BCA:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
_08055BD2:
	ldr r7, _08055C0C @ =0x0000225C
	adds r0, r6, r7
	ldr r4, [r0]
	movs r0, #0xab
	lsls r0, r0, #2
	adds r0, r6, r0
	str r0, [sp, #0x114]
	movs r1, #0xb9
	lsls r1, r1, #2
	adds r1, r6, r1
	str r1, [sp, #0x118]
	movs r2, #0x8f
	lsls r2, r2, #2
	adds r2, r6, r2
	str r2, [sp, #0x110]
	cmp r4, #0
	bne _08055BF8
	bl sub_08056442
_08055BF8:
	cmp r4, #2
	bne _08055BFE
	b _08055EB0
_08055BFE:
	cmp r4, #2
	bgt _08055C10
	cmp r4, #1
	beq _08055C18
	bl _080563F4
	.align 2, 0
_08055C0C: .4byte 0x0000225C
_08055C10:
	cmp r4, #3
	bne _08055C16
	b _08056154
_08055C16:
	b _080563F4
_08055C18:
	adds r1, r6, #0
	adds r1, #0xb0
	mov r0, sb
	movs r2, #0
	bl func_0805E790
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r3, r5, r7}
	stm r1!, {r3, r5, r7}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	ldr r3, _08055C98 @ =0x00002260
	adds r0, r6, r3
	ldr r0, [r0]
	cmp r0, #1
	bne _08055C40
	b _080563F4
_08055C40:
	adds r0, r6, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x28]
	mov r8, r7
	movs r1, #0x93
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _08055C66
	mov r7, sp
	ldrh r3, [r7, #0x2c]
_08055C66:
	str r5, [sp, #0x120]
	lsls r2, r2, #5
	ldr r0, _08055C9C @ =0x06010000
	adds r2, r2, r0
	mov r0, sb
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08055CA0
	cmp r1, #0
	beq _08055C8E
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08055C8E:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08055D7E
	.align 2, 0
_08055C98: .4byte 0x00002260
_08055C9C: .4byte 0x06010000
_08055CA0:
	mov r8, r1
	str r4, [sp, #0x74]
	ldr r7, [sp, #0x120]
	ldr r0, [r7]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x70]
	add r1, sp, #0x74
	add r0, sp, #0x70
	cmp r4, #1
	bhs _08055CB8
	adds r0, r1, #0
_08055CB8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08055CD6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08055CDA
	mov r0, sl
	bl func_080D3BC0
	b _08055CDA
_08055CD6:
	movs r0, #0
	mov sl, r0
_08055CDA:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r0, [sp, #0x120]
	ldr r2, [r0]
	adds r3, r5, #0
	movs r1, #0xab
	lsls r1, r1, #2
	adds r1, r6, r1
	str r1, [sp, #0x114]
	movs r4, #0xb9
	lsls r4, r4, #2
	adds r4, r6, r4
	str r4, [sp, #0x118]
	movs r5, #0x8f
	lsls r5, r5, #2
	adds r5, r6, r5
	str r5, [sp, #0x110]
	cmp r2, r8
	beq _08055D18
_08055D00:
	cmp r3, #0
	beq _08055D10
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055D10:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08055D00
_08055D18:
	adds r5, r3, #0
	ldr r0, [sp, #0x74]
	cmp r0, #1
	bne _08055D34
	cmp r5, #0
	beq _08055D30
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055D30:
	adds r5, #0x10
	b _08055D56
_08055D34:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08055D54
_08055D3C:
	cmp r2, #0
	beq _08055D4C
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055D4C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08055D3C
_08055D54:
	adds r5, r2, #0
_08055D56:
	ldr r0, [sp, #0x120]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _08055D68
_08055D62:
	adds r1, #0x10
	cmp r1, r2
	bne _08055D62
_08055D68:
	cmp r0, #0
	beq _08055D70
	bl free
_08055D70:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08055D7E:
	adds r0, r6, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x30]
	movs r3, #0x94
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x30]
	movs r3, #0
	cmp r0, #0
	beq _08055DA2
	mov r7, sp
	ldrh r3, [r7, #0x34]
_08055DA2:
	str r4, [sp, #0x120]
	lsls r2, r2, #5
	ldr r0, _08055DD8 @ =0x05000200
	adds r2, r2, r0
	add r0, sp, #0x40
	adds r1, r5, #0
	bl func_08008F0C
	mov r1, sb
	str r1, [sp, #0xec]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _08055DDC
	cmp r1, #0
	beq _08055DCE
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08055DCE:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08055EA4
	.align 2, 0
_08055DD8: .4byte 0x05000200
_08055DDC:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x7c]
	ldr r7, [sp, #0x120]
	ldr r0, [r7]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x78]
	add r1, sp, #0x7c
	add r0, sp, #0x78
	cmp r4, #1
	bhs _08055DF6
	adds r0, r1, #0
_08055DF6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08055E14
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08055E18
	mov r0, sl
	bl func_080D3BC0
	b _08055E18
_08055E14:
	movs r0, #0
	mov sl, r0
_08055E18:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r0, [sp, #0x120]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _08055E3E
_08055E26:
	cmp r3, #0
	beq _08055E36
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055E36:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08055E26
_08055E3E:
	adds r5, r3, #0
	ldr r0, [sp, #0x7c]
	cmp r0, #1
	bne _08055E5A
	cmp r5, #0
	beq _08055E56
	adds r0, r5, #0
	ldr r1, [sp, #0xec]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08055E56:
	adds r5, #0x10
	b _08055E7C
_08055E5A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08055E7A
_08055E62:
	cmp r2, #0
	beq _08055E72
	adds r0, r2, #0
	ldr r1, [sp, #0xec]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055E72:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08055E62
_08055E7A:
	adds r5, r2, #0
_08055E7C:
	ldr r7, [sp, #0x120]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _08055E8E
_08055E88:
	adds r1, #0x10
	cmp r1, r2
	bne _08055E88
_08055E8E:
	cmp r0, #0
	beq _08055E96
	bl free
_08055E96:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08055EA4:
	ldr r3, _08055EAC @ =0x00002260
	adds r1, r6, r3
	movs r0, #1
	b _080563F2
	.align 2, 0
_08055EAC: .4byte 0x00002260
_08055EB0:
	movs r4, #0x88
	lsls r4, r4, #1
	adds r1, r6, r4
	mov r0, sb
	movs r2, #0
	bl func_0805E790
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	ldr r3, _08055F30 @ =0x00002260
	adds r0, r6, r3
	ldr r0, [r0]
	cmp r0, #2
	bne _08055EDA
	b _080563F4
_08055EDA:
	adds r0, r6, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x28]
	movs r7, #0x93
	lsls r7, r7, #3
	adds r0, r6, r7
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _08055EFE
	mov r0, sp
	ldrh r3, [r0, #0x2c]
_08055EFE:
	str r4, [sp, #0x120]
	lsls r2, r2, #5
	ldr r1, _08055F34 @ =0x06010000
	adds r2, r2, r1
	mov r0, sb
	adds r1, r5, #0
	bl func_08008F0C
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _08055F38
	cmp r1, #0
	beq _08055F26
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08055F26:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0805601C
	.align 2, 0
_08055F30: .4byte 0x00002260
_08055F34: .4byte 0x06010000
_08055F38:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x84
	str r0, [r1]
	ldr r7, [sp, #0x120]
	ldr r0, [r7]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x80]
	ldr r0, [r1]
	add r2, sp, #0x80
	cmp r4, r0
	bhs _08055F56
	adds r2, r1, #0
_08055F56:
	ldr r0, [r2]
	adds r0, r4, r0
	cmp r0, #0
	beq _08055F74
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08055F78
	mov r0, sl
	bl func_080D3BC0
	b _08055F78
_08055F74:
	movs r0, #0
	mov sl, r0
_08055F78:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r3, [sp, #0x120]
	ldr r2, [r3]
	adds r3, r5, #0
	movs r4, #0xab
	lsls r4, r4, #2
	adds r4, r6, r4
	str r4, [sp, #0x114]
	movs r5, #0xb9
	lsls r5, r5, #2
	adds r5, r6, r5
	str r5, [sp, #0x118]
	movs r7, #0x8f
	lsls r7, r7, #2
	adds r7, r6, r7
	str r7, [sp, #0x110]
	cmp r2, r8
	beq _08055FB6
_08055F9E:
	cmp r3, #0
	beq _08055FAE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055FAE:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08055F9E
_08055FB6:
	adds r5, r3, #0
	ldr r1, [sp, #0x84]
	cmp r1, #1
	bne _08055FD2
	cmp r5, #0
	beq _08055FCE
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08055FCE:
	adds r5, #0x10
	b _08055FF4
_08055FD2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08055FF2
_08055FDA:
	cmp r2, #0
	beq _08055FEA
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08055FEA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08055FDA
_08055FF2:
	adds r5, r2, #0
_08055FF4:
	ldr r7, [sp, #0x120]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _08056006
_08056000:
	adds r1, #0x10
	cmp r1, r2
	bne _08056000
_08056006:
	cmp r0, #0
	beq _0805600E
	bl free
_0805600E:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0805601C:
	adds r0, r6, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x30]
	movs r3, #0x94
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x30]
	movs r3, #0
	cmp r0, #0
	beq _08056040
	mov r7, sp
	ldrh r3, [r7, #0x34]
_08056040:
	str r4, [sp, #0x120]
	lsls r2, r2, #5
	ldr r0, _08056078 @ =0x05000200
	adds r2, r2, r0
	add r0, sp, #0x40
	adds r1, r5, #0
	bl func_08008F0C
	mov r1, sb
	str r1, [sp, #0xf0]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _0805607C
	cmp r1, #0
	beq _0805606C
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0805606C:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08056148
	.align 2, 0
_08056078: .4byte 0x05000200
_0805607C:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x8c
	str r0, [r1]
	ldr r7, [sp, #0x120]
	ldr r0, [r7]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x88
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _0805609A
	adds r0, r1, #0
_0805609A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080560B8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _080560BC
	mov r0, sl
	bl func_080D3BC0
	b _080560BC
_080560B8:
	movs r0, #0
	mov sl, r0
_080560BC:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r3, [sp, #0x120]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _080560E2
_080560CA:
	cmp r3, #0
	beq _080560DA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080560DA:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080560CA
_080560E2:
	adds r5, r3, #0
	ldr r1, [sp, #0x8c]
	cmp r1, #1
	bne _080560FE
	cmp r5, #0
	beq _080560FA
	adds r0, r5, #0
	ldr r1, [sp, #0xf0]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080560FA:
	adds r5, #0x10
	b _08056120
_080560FE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0805611E
_08056106:
	cmp r2, #0
	beq _08056116
	adds r0, r2, #0
	ldr r1, [sp, #0xf0]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056116:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08056106
_0805611E:
	adds r5, r2, #0
_08056120:
	ldr r7, [sp, #0x120]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _08056132
_0805612C:
	adds r1, #0x10
	cmp r1, r2
	bne _0805612C
_08056132:
	cmp r0, #0
	beq _0805613A
	bl free
_0805613A:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08056148:
	ldr r3, _08056150 @ =0x00002260
	adds r1, r6, r3
	movs r0, #2
	b _080563F2
	.align 2, 0
_08056150: .4byte 0x00002260
_08056154:
	movs r4, #0xb8
	lsls r4, r4, #1
	adds r1, r6, r4
	mov r0, sb
	movs r2, #0
	bl func_0805E790
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	ldr r3, _080561D4 @ =0x00002260
	adds r0, r6, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _0805617E
	b _080563F4
_0805617E:
	adds r0, r6, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x28]
	movs r7, #0x93
	lsls r7, r7, #3
	adds r0, r6, r7
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _080561A2
	mov r0, sp
	ldrh r3, [r0, #0x2c]
_080561A2:
	str r4, [sp, #0x120]
	lsls r2, r2, #5
	ldr r1, _080561D8 @ =0x06010000
	adds r2, r2, r1
	mov r0, sb
	adds r1, r5, #0
	bl func_08008F0C
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080561DC
	cmp r1, #0
	beq _080561CA
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080561CA:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080562C0
	.align 2, 0
_080561D4: .4byte 0x00002260
_080561D8: .4byte 0x06010000
_080561DC:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x94
	str r0, [r1]
	ldr r7, [sp, #0x120]
	ldr r0, [r7]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x90
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080561FA
	adds r0, r1, #0
_080561FA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08056218
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _0805621C
	mov r0, sl
	bl func_080D3BC0
	b _0805621C
_08056218:
	movs r0, #0
	mov sl, r0
_0805621C:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r3, [sp, #0x120]
	ldr r2, [r3]
	adds r3, r5, #0
	movs r4, #0xab
	lsls r4, r4, #2
	adds r4, r6, r4
	str r4, [sp, #0x114]
	movs r5, #0xb9
	lsls r5, r5, #2
	adds r5, r6, r5
	str r5, [sp, #0x118]
	movs r7, #0x8f
	lsls r7, r7, #2
	adds r7, r6, r7
	str r7, [sp, #0x110]
	cmp r2, r8
	beq _0805625A
_08056242:
	cmp r3, #0
	beq _08056252
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056252:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08056242
_0805625A:
	adds r5, r3, #0
	ldr r1, [sp, #0x94]
	cmp r1, #1
	bne _08056276
	cmp r5, #0
	beq _08056272
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08056272:
	adds r5, #0x10
	b _08056298
_08056276:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08056296
_0805627E:
	cmp r2, #0
	beq _0805628E
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805628E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0805627E
_08056296:
	adds r5, r2, #0
_08056298:
	ldr r7, [sp, #0x120]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _080562AA
_080562A4:
	adds r1, #0x10
	cmp r1, r2
	bne _080562A4
_080562AA:
	cmp r0, #0
	beq _080562B2
	bl free
_080562B2:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080562C0:
	adds r0, r6, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x30]
	movs r3, #0x94
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x30]
	movs r3, #0
	cmp r0, #0
	beq _080562E4
	mov r7, sp
	ldrh r3, [r7, #0x34]
_080562E4:
	str r4, [sp, #0x120]
	lsls r2, r2, #5
	ldr r0, _0805631C @ =0x05000200
	adds r2, r2, r0
	add r0, sp, #0x40
	adds r1, r5, #0
	bl func_08008F0C
	mov r1, sb
	str r1, [sp, #0xf4]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _08056320
	cmp r1, #0
	beq _08056310
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08056310:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080563EC
	.align 2, 0
_0805631C: .4byte 0x05000200
_08056320:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x9c
	str r0, [r1]
	ldr r7, [sp, #0x120]
	ldr r0, [r7]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x98
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _0805633E
	adds r0, r1, #0
_0805633E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805635C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08056360
	mov r0, sl
	bl func_080D3BC0
	b _08056360
_0805635C:
	movs r0, #0
	mov sl, r0
_08056360:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r3, [sp, #0x120]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _08056386
_0805636E:
	cmp r3, #0
	beq _0805637E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805637E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0805636E
_08056386:
	adds r5, r3, #0
	ldr r1, [sp, #0x9c]
	cmp r1, #1
	bne _080563A2
	cmp r5, #0
	beq _0805639E
	adds r0, r5, #0
	ldr r1, [sp, #0xf4]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0805639E:
	adds r5, #0x10
	b _080563C4
_080563A2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080563C2
_080563AA:
	cmp r2, #0
	beq _080563BA
	adds r0, r2, #0
	ldr r1, [sp, #0xf4]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080563BA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080563AA
_080563C2:
	adds r5, r2, #0
_080563C4:
	ldr r7, [sp, #0x120]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _080563D6
_080563D0:
	adds r1, #0x10
	cmp r1, r2
	bne _080563D0
_080563D6:
	cmp r0, #0
	beq _080563DE
	bl free
_080563DE:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080563EC:
	ldr r3, _080567A8 @ =0x00002260
	adds r1, r6, r3
	movs r0, #3
_080563F2:
	str r0, [r1]
_080563F4:
	add r0, sp, #4
	movs r1, #0x40
	strh r1, [r0]
	strh r1, [r0, #2]
	movs r4, #0x94
	lsls r4, r4, #3
	adds r0, r6, r4
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	movs r5, #0x93
	lsls r5, r5, #3
	adds r0, r6, r5
	ldr r1, [r0, #4]
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r0, #2
	strh r0, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0x18]
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805643A
	mov r7, sp
	ldrh r2, [r7, #0x24]
_0805643A:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C

	non_word_aligned_thumb_func_start sub_08056442
sub_08056442: @ 0x08056442
	adds r0, r6, #0
	bl func_08057B84
	movs r0, #0xb6
	lsls r0, r0, #2
	adds r4, r6, r0
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r5, r6, r1
	adds r0, r5, #0
	bl func_0805E8F0
	str r0, [r4]
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x114]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r4, r7}
	stm r1!, {r2, r4, r7}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	add r1, sp, #4
	movs r7, #0xaf
	lsls r7, r7, #2
	adds r0, r6, r7
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r1, sp, #4
	movs r0, #0x18
	strh r0, [r1]
	ldr r4, _080567AC @ =0x000022D8
	adds r0, r6, r4
	ldrh r0, [r0]
	strh r0, [r1, #2]
	movs r0, #2
	strh r0, [r1, #8]
	movs r7, #0x92
	lsls r7, r7, #3
	adds r0, r6, r7
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	movs r1, #0x91
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r3, [sp, #0x114]
	ldr r1, [r3]
	adds r1, r1, r2
	ldrh r1, [r1]
	add r2, sp, #4
	lsls r1, r1, #1
	adds r0, r0, r1
	strh r0, [r2, #6]
	adds r1, r2, #0
	movs r0, #1
	strb r0, [r1, #0x18]
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08056500
	mov r4, sp
	ldrh r2, [r4, #0x24]
_08056500:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
	ldr r5, _080567B0 @ =0x00002324
	adds r0, r6, r5
	ldrb r0, [r0]
	cmp r0, #1
	beq _08056514
	b _080566A8
_08056514:
	movs r7, #0xf1
	lsls r7, r7, #2
	adds r7, r6, r7
	str r7, [sp, #0x11c]
	movs r0, #0xf0
	lsls r0, r0, #2
	adds r0, r6, r0
	str r0, [sp, #0xfc]
	mov r8, sb
	add r5, sp, #4
	ldr r1, _080567B4 @ =0x000022E0
	adds r7, r6, r1
	ldr r2, _080567B8 @ =0x00002330
	adds r2, r6, r2
	str r2, [sp, #0x100]
	movs r3, #0xf
	str r3, [sp, #0xf8]
_08056536:
	ldr r1, _080567BC @ =0x080FA36C
	ldrh r0, [r7, #2]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	ldr r0, [sp, #0xfc]
	bl func_0805E860
	ldr r4, [sp, #0xfc]
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x11c]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, r8
	mov r1, r8
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, r8
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	add r1, sp, #4
	movs r4, #0xf5
	lsls r4, r4, #2
	adds r0, r6, r4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	ldrh r0, [r7]
	ldr r2, [sp, #0x100]
	ldrh r1, [r2]
	subs r0, r0, r1
	strh r0, [r5]
	adds r0, #0x18
	lsls r0, r0, #0x10
	movs r1, #0x88
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0805669A
	movs r3, #0x90
	strh r3, [r5, #2]
	movs r4, #2
	strh r4, [r5, #8]
	ldrh r0, [r7, #2]
	lsls r0, r0, #4
	adds r0, r0, r6
	movs r1, #0xa0
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	strh r0, [r5, #6]
	ldrh r0, [r7, #2]
	lsls r0, r0, #4
	adds r0, r0, r6
	movs r2, #0xa1
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r1, [r0, #4]
	bl func_080074C0
	strh r0, [r5, #4]
	movs r3, #1
	mov sl, r3
	mov r4, sl
	strb r4, [r5, #0x18]
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080565F2
	mov r0, sp
	ldrh r2, [r0, #0x24]
_080565F2:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
	movs r1, #0xb8
	lsls r1, r1, #2
	adds r4, r6, r1
	adds r0, r4, #0
	ldr r1, _080567C0 @ =0x0000091B
	bl func_0805E860
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x118]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, r8
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, r8
	mov r1, r8
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, r8
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	add r1, sp, #4
	movs r4, #0xbd
	lsls r4, r4, #2
	adds r0, r6, r4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	ldrh r0, [r7]
	ldr r2, [sp, #0x100]
	ldrh r1, [r2]
	subs r0, r0, r1
	strh r0, [r5]
	movs r3, #0x90
	strh r3, [r5, #2]
	movs r4, #2
	strh r4, [r5, #8]
	movs r1, #0x95
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r0, #2
	strh r0, [r5, #6]
	movs r2, #0x96
	lsls r2, r2, #3
	adds r0, r6, r2
	ldr r1, [r0, #4]
	bl func_080074C0
	strh r0, [r5, #4]
	mov r3, sl
	strb r3, [r5, #0x18]
	adds r0, r6, #0
	bl func_08008920
	ldr r1, [sp, #0x20]
	movs r2, #0
	cmp r1, #0
	beq _08056694
	mov r4, sp
	ldrh r2, [r4, #0x24]
_08056694:
	add r3, sp, #4
	bl func_0805E99C
_0805669A:
	adds r7, #4
	ldr r0, [sp, #0xf8]
	subs r0, #1
	str r0, [sp, #0xf8]
	cmp r0, #0
	blt _080566A8
	b _08056536
_080566A8:
	ldr r1, _080567B8 @ =0x00002330
	adds r4, r6, r1
	ldrh r0, [r4]
	cmp r0, #0xff
	bls _080566B4
	b _08056B1A
_080566B4:
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r6, r2
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r5, #0x81
	lsls r5, r5, #2
	adds r0, r6, r5
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r5}
	stm r1!, {r3, r5}
	add r1, sp, #4
	movs r7, #0x85
	lsls r7, r7, #2
	adds r0, r6, r7
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #4
	ldrh r1, [r4]
	movs r0, #0x40
	subs r0, r0, r1
	strh r0, [r2]
	adds r1, r2, #0
	movs r0, #0x50
	strh r0, [r1, #2]
	movs r0, #2
	strh r0, [r1, #8]
	movs r5, #0xa8
	lsls r5, r5, #3
	adds r4, r6, r5
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r7, #0xa9
	lsls r7, r7, #3
	adds r0, r6, r7
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	adds r0, r1, #0
	movs r1, #1
	mov sl, r1
	mov r2, sl
	strb r2, [r0, #0x18]
	movs r3, #0x8c
	lsls r3, r3, #2
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08056754
	b _08056AFC
_08056754:
	adds r0, r6, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x28]
	mov r8, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _08056776
	mov r0, sp
	ldrh r3, [r0, #0x2c]
_08056776:
	str r5, [sp, #0x120]
	lsls r2, r2, #5
	ldr r1, _080567C4 @ =0x06010000
	adds r2, r2, r1
	mov r0, sb
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080567C8
	cmp r1, #0
	beq _0805679E
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0805679E:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08056894
	.align 2, 0
_080567A8: .4byte 0x00002260
_080567AC: .4byte 0x000022D8
_080567B0: .4byte 0x00002324
_080567B4: .4byte 0x000022E0
_080567B8: .4byte 0x00002330
_080567BC: .4byte 0x080FA36C
_080567C0: .4byte 0x0000091B
_080567C4: .4byte 0x06010000
_080567C8:
	mov r8, r1
	add r1, sp, #0xa4
	mov r7, sl
	str r7, [r1]
	ldr r2, [sp, #0x120]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xa0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080567E6
	adds r0, r1, #0
_080567E6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08056804
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08056808
	mov r0, sl
	bl func_080D3BC0
	b _08056808
_08056804:
	movs r0, #0
	mov sl, r0
_08056808:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r4, [sp, #0x120]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _0805682E
_08056816:
	cmp r3, #0
	beq _08056826
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056826:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08056816
_0805682E:
	adds r5, r3, #0
	ldr r1, [sp, #0xa4]
	cmp r1, #1
	bne _0805684A
	cmp r5, #0
	beq _08056846
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056846:
	adds r5, #0x10
	b _0805686C
_0805684A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0805686A
_08056852:
	cmp r2, #0
	beq _08056862
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056862:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08056852
_0805686A:
	adds r5, r2, #0
_0805686C:
	ldr r0, [sp, #0x120]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _0805687E
_08056878:
	adds r1, #0x10
	cmp r1, r2
	bne _08056878
_0805687E:
	cmp r0, #0
	beq _08056886
	bl free
_08056886:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08056894:
	adds r0, r6, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x30]
	movs r3, #0xa9
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x30]
	movs r3, #0
	cmp r0, #0
	beq _080568B8
	mov r7, sp
	ldrh r3, [r7, #0x34]
_080568B8:
	lsrs r3, r3, #1
	str r4, [sp, #0x120]
	lsls r2, r2, #5
	ldr r0, _080568F0 @ =0x05000200
	adds r2, r2, r0
	add r0, sp, #0x40
	adds r1, r5, #0
	bl func_08008F0C
	mov r1, sb
	str r1, [sp, #0x104]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080568F4
	cmp r1, #0
	beq _080568E6
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080568E6:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080569C0
	.align 2, 0
_080568F0: .4byte 0x05000200
_080568F4:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0xac
	str r0, [r1]
	ldr r7, [sp, #0x120]
	ldr r0, [r7]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xa8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08056912
	adds r0, r1, #0
_08056912:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08056930
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08056934
	mov r0, sl
	bl func_080D3BC0
	b _08056934
_08056930:
	movs r0, #0
	mov sl, r0
_08056934:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r3, [sp, #0x120]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _0805695A
_08056942:
	cmp r3, #0
	beq _08056952
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056952:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08056942
_0805695A:
	adds r5, r3, #0
	ldr r1, [sp, #0xac]
	cmp r1, #1
	bne _08056976
	cmp r5, #0
	beq _08056972
	adds r0, r5, #0
	ldr r1, [sp, #0x104]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08056972:
	adds r5, #0x10
	b _08056998
_08056976:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08056996
_0805697E:
	cmp r2, #0
	beq _0805698E
	adds r0, r2, #0
	ldr r1, [sp, #0x104]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805698E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0805697E
_08056996:
	adds r5, r2, #0
_08056998:
	ldr r7, [sp, #0x120]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _080569AA
_080569A4:
	adds r1, #0x10
	cmp r1, r2
	bne _080569A4
_080569AA:
	cmp r0, #0
	beq _080569B2
	bl free
_080569B2:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080569C0:
	adds r0, r6, #0
	bl func_08008910
	adds r7, r0, #0
	ldr r0, [sp, #0x30]
	adds r4, r0, #0
	add r0, sp, #0x30
	movs r1, #0
	cmp r4, #0
	beq _080569D6
	ldrh r1, [r0, #4]
_080569D6:
	lsrs r5, r1, #1
	movs r3, #0xaa
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x30]
	movs r3, #0
	cmp r0, #0
	beq _080569F2
	mov r0, sp
	ldrh r3, [r0, #0x34]
_080569F2:
	lsrs r3, r3, #1
	str r7, [sp, #0x120]
	adds r1, r4, r5
	lsls r2, r2, #5
	ldr r4, _08056A2C @ =0x05000200
	adds r2, r2, r4
	add r0, sp, #0x40
	bl func_08008F0C
	mov r5, sb
	str r5, [sp, #0x108]
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _08056A30
	cmp r1, #0
	beq _08056A20
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08056A20:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08056AFC
	.align 2, 0
_08056A2C: .4byte 0x05000200
_08056A30:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0xb4
	str r0, [r1]
	ldr r7, [sp, #0x120]
	ldr r0, [r7]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xb0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08056A4E
	adds r0, r1, #0
_08056A4E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08056A6C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08056A70
	mov r0, sl
	bl func_080D3BC0
	b _08056A70
_08056A6C:
	movs r0, #0
	mov sl, r0
_08056A70:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r3, [sp, #0x120]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _08056A96
_08056A7E:
	cmp r3, #0
	beq _08056A8E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056A8E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08056A7E
_08056A96:
	adds r5, r3, #0
	ldr r1, [sp, #0xb4]
	cmp r1, #1
	bne _08056AB2
	cmp r5, #0
	beq _08056AAE
	adds r0, r5, #0
	ldr r1, [sp, #0x108]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08056AAE:
	adds r5, #0x10
	b _08056AD4
_08056AB2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08056AD2
_08056ABA:
	cmp r2, #0
	beq _08056ACA
	adds r0, r2, #0
	ldr r1, [sp, #0x108]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056ACA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08056ABA
_08056AD2:
	adds r5, r2, #0
_08056AD4:
	ldr r7, [sp, #0x120]
	ldr r2, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	cmp r0, r2
	beq _08056AE6
_08056AE0:
	adds r1, #0x10
	cmp r1, r2
	bne _08056AE0
_08056AE6:
	cmp r0, #0
	beq _08056AEE
	bl free
_08056AEE:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08056AFC:
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08056B0A
	mov r3, sp
	ldrh r2, [r3, #0x24]
_08056B0A:
	movs r4, #0xa8
	lsls r4, r4, #3
	adds r0, r6, r4
	str r0, [sp]
	adds r0, r6, #0
	add r3, sp, #4
	bl func_080579B4
_08056B1A:
	movs r5, #0xe1
	lsls r5, r5, #2
	adds r0, r6, r5
	ldrb r0, [r0]
	mov sl, r0
	cmp r0, #1
	beq _08056B2A
	b _08056D26
_08056B2A:
	movs r7, #0xd4
	lsls r7, r7, #2
	adds r0, r6, r7
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r4, #0xd5
	lsls r4, r4, #2
	adds r0, r6, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	add r1, sp, #4
	movs r3, #0xd9
	lsls r3, r3, #2
	adds r0, r6, r3
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #4
	ldr r5, _08056C2C @ =0x00002268
	adds r0, r6, r5
	movs r7, #2
	ldrsh r0, [r0, r7]
	ldr r3, _08056C30 @ =0x00002330
	adds r1, r6, r3
	ldrh r1, [r1]
	subs r0, r0, r1
	strh r0, [r2]
	adds r1, r2, #0
	ldr r4, _08056C34 @ =0x0000226C
	adds r0, r6, r4
	movs r5, #2
	ldrsh r0, [r0, r5]
	strh r0, [r1, #2]
	movs r0, #2
	strh r0, [r1, #8]
	movs r7, #0x99
	lsls r7, r7, #3
	adds r4, r6, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r1, #0x9b
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	adds r0, r1, #0
	mov r2, sl
	strb r2, [r0, #0x18]
	movs r3, #0xe0
	lsls r3, r3, #2
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08056BD6
	b _08056D08
_08056BD6:
	adds r0, r6, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x28]
	mov r8, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _08056BF8
	mov r0, sp
	ldrh r3, [r0, #0x2c]
_08056BF8:
	str r5, [sp, #0x120]
	lsls r2, r2, #5
	ldr r1, _08056C38 @ =0x06010000
	adds r2, r2, r1
	mov r0, sb
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08056C3C
	cmp r1, #0
	beq _08056C20
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08056C20:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08056D08
	.align 2, 0
_08056C2C: .4byte 0x00002268
_08056C30: .4byte 0x00002330
_08056C34: .4byte 0x0000226C
_08056C38: .4byte 0x06010000
_08056C3C:
	mov r8, r1
	add r1, sp, #0xbc
	mov r7, sl
	str r7, [r1]
	ldr r2, [sp, #0x120]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xb8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08056C5A
	adds r0, r1, #0
_08056C5A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08056C78
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08056C7C
	mov r0, sl
	bl func_080D3BC0
	b _08056C7C
_08056C78:
	movs r0, #0
	mov sl, r0
_08056C7C:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r4, [sp, #0x120]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _08056CA2
_08056C8A:
	cmp r3, #0
	beq _08056C9A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056C9A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08056C8A
_08056CA2:
	adds r5, r3, #0
	ldr r1, [sp, #0xbc]
	cmp r1, #1
	bne _08056CBE
	cmp r5, #0
	beq _08056CBA
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056CBA:
	adds r5, #0x10
	b _08056CE0
_08056CBE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08056CDE
_08056CC6:
	cmp r2, #0
	beq _08056CD6
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056CD6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08056CC6
_08056CDE:
	adds r5, r2, #0
_08056CE0:
	ldr r0, [sp, #0x120]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _08056CF2
_08056CEC:
	adds r1, #0x10
	cmp r1, r2
	bne _08056CEC
_08056CF2:
	cmp r0, #0
	beq _08056CFA
	bl free
_08056CFA:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08056D08:
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08056D1E
	mov r4, sp
	ldrh r2, [r4, #0x24]
_08056D1E:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
_08056D26:
	movs r5, #0x8e
	lsls r5, r5, #2
	adds r0, r6, r5
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r7, [sp, #0x110]
	ldr r0, [r7]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	add r1, sp, #4
	movs r5, #0x93
	lsls r5, r5, #2
	adds r0, r6, r5
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #4
	ldr r1, _08056E28 @ =0x00002268
	adds r0, r6, r1
	movs r3, #2
	ldrsh r0, [r0, r3]
	ldr r4, _08056E2C @ =0x00002330
	adds r1, r6, r4
	ldrh r1, [r1]
	subs r0, r0, r1
	strh r0, [r2]
	adds r1, r2, #0
	ldr r5, _08056E30 @ =0x0000226C
	adds r0, r6, r5
	movs r7, #2
	ldrsh r0, [r0, r7]
	strh r0, [r1, #2]
	movs r0, #2
	strh r0, [r1, #8]
	movs r0, #0x8d
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r1, #0x8e
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	adds r0, r1, #0
	movs r2, #1
	mov sl, r2
	mov r3, sl
	strb r3, [r0, #0x18]
	movs r5, #0x9a
	lsls r5, r5, #2
	adds r0, r6, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08056DD2
	b _08056F04
_08056DD2:
	adds r0, r6, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x28]
	mov r8, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _08056DF4
	mov r0, sp
	ldrh r3, [r0, #0x2c]
_08056DF4:
	str r5, [sp, #0x120]
	lsls r2, r2, #5
	ldr r1, _08056E34 @ =0x06010000
	adds r2, r2, r1
	mov r0, sb
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08056E38
	cmp r1, #0
	beq _08056E1C
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08056E1C:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08056F04
	.align 2, 0
_08056E28: .4byte 0x00002268
_08056E2C: .4byte 0x00002330
_08056E30: .4byte 0x0000226C
_08056E34: .4byte 0x06010000
_08056E38:
	mov r8, r1
	add r1, sp, #0xc4
	mov r7, sl
	str r7, [r1]
	ldr r2, [sp, #0x120]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xc0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08056E56
	adds r0, r1, #0
_08056E56:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08056E74
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08056E78
	mov r0, sl
	bl func_080D3BC0
	b _08056E78
_08056E74:
	movs r0, #0
	mov sl, r0
_08056E78:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r4, [sp, #0x120]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _08056E9E
_08056E86:
	cmp r3, #0
	beq _08056E96
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056E96:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08056E86
_08056E9E:
	adds r5, r3, #0
	ldr r1, [sp, #0xc4]
	cmp r1, #1
	bne _08056EBA
	cmp r5, #0
	beq _08056EB6
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056EB6:
	adds r5, #0x10
	b _08056EDC
_08056EBA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08056EDA
_08056EC2:
	cmp r2, #0
	beq _08056ED2
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08056ED2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08056EC2
_08056EDA:
	adds r5, r2, #0
_08056EDC:
	ldr r0, [sp, #0x120]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _08056EEE
_08056EE8:
	adds r1, #0x10
	cmp r1, r2
	bne _08056EE8
_08056EEE:
	cmp r0, #0
	beq _08056EF6
	bl free
_08056EF6:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08056F04:
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08056F1A
	mov r4, sp
	ldrh r2, [r4, #0x24]
_08056F1A:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
	ldr r5, _08057034 @ =0x0000042C
	adds r0, r6, r5
	ldrb r0, [r0]
	mov sl, r0
	cmp r0, #1
	beq _08056F30
	b _08057136
_08056F30:
	movs r7, #0xfe
	lsls r7, r7, #2
	adds r0, r6, r7
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r4, #0xff
	lsls r4, r4, #2
	adds r0, r6, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	add r1, sp, #4
	ldr r3, _08057038 @ =0x0000040C
	adds r0, r6, r3
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #4
	ldr r5, _0805703C @ =0x00002268
	adds r0, r6, r5
	movs r7, #2
	ldrsh r0, [r0, r7]
	ldr r3, _08057040 @ =0x00002330
	adds r1, r6, r3
	ldrh r1, [r1]
	subs r0, r0, r1
	subs r0, #8
	strh r0, [r2]
	adds r1, r2, #0
	ldr r4, _08057044 @ =0x0000226C
	adds r0, r6, r4
	movs r5, #2
	ldrsh r0, [r0, r5]
	subs r0, #0x18
	strh r0, [r1, #2]
	movs r0, #2
	strh r0, [r1, #8]
	movs r7, #0x9c
	lsls r7, r7, #3
	adds r4, r6, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r1, #0x9d
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	adds r0, r1, #0
	mov r2, sl
	strb r2, [r0, #0x18]
	movs r3, #0x85
	lsls r3, r3, #3
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08056FDE
	b _08057118
_08056FDE:
	adds r0, r6, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x28]
	mov r8, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _08057000
	mov r0, sp
	ldrh r3, [r0, #0x2c]
_08057000:
	str r5, [sp, #0x120]
	lsls r2, r2, #5
	ldr r1, _08057048 @ =0x06010000
	adds r2, r2, r1
	mov r0, sb
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0805704C
	cmp r1, #0
	beq _08057028
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08057028:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08057118
	.align 2, 0
_08057034: .4byte 0x0000042C
_08057038: .4byte 0x0000040C
_0805703C: .4byte 0x00002268
_08057040: .4byte 0x00002330
_08057044: .4byte 0x0000226C
_08057048: .4byte 0x06010000
_0805704C:
	mov r8, r1
	add r1, sp, #0xcc
	mov r7, sl
	str r7, [r1]
	ldr r2, [sp, #0x120]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xc8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _0805706A
	adds r0, r1, #0
_0805706A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08057088
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _0805708C
	mov r0, sl
	bl func_080D3BC0
	b _0805708C
_08057088:
	movs r0, #0
	mov sl, r0
_0805708C:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r4, [sp, #0x120]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _080570B2
_0805709A:
	cmp r3, #0
	beq _080570AA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080570AA:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0805709A
_080570B2:
	adds r5, r3, #0
	ldr r1, [sp, #0xcc]
	cmp r1, #1
	bne _080570CE
	cmp r5, #0
	beq _080570CA
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080570CA:
	adds r5, #0x10
	b _080570F0
_080570CE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080570EE
_080570D6:
	cmp r2, #0
	beq _080570E6
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080570E6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080570D6
_080570EE:
	adds r5, r2, #0
_080570F0:
	ldr r0, [sp, #0x120]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _08057102
_080570FC:
	adds r1, #0x10
	cmp r1, r2
	bne _080570FC
_08057102:
	cmp r0, #0
	beq _0805710A
	bl free
_0805710A:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08057118:
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805712E
	mov r4, sp
	ldrh r2, [r4, #0x24]
_0805712E:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
_08057136:
	ldr r5, _0805724C @ =0x00000464
	adds r0, r6, r5
	ldrb r0, [r0]
	mov sl, r0
	cmp r0, #1
	beq _08057144
	b _08057356
_08057144:
	movs r7, #0x86
	lsls r7, r7, #3
	adds r0, r6, r7
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	ldr r4, _08057250 @ =0x00000434
	adds r0, r6, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	add r1, sp, #4
	ldr r3, _08057254 @ =0x00000444
	adds r0, r6, r3
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #4
	ldr r5, _08057258 @ =0x00002268
	adds r0, r6, r5
	movs r7, #2
	ldrsh r0, [r0, r7]
	ldr r3, _0805725C @ =0x00002330
	adds r1, r6, r3
	ldrh r1, [r1]
	subs r0, r0, r1
	strh r0, [r2]
	ldr r4, _08057260 @ =0x0000226C
	adds r0, r6, r4
	movs r5, #2
	ldrsh r1, [r0, r5]
	ldr r7, _08057264 @ =0x0000228C
	adds r0, r6, r7
	ldrh r0, [r0]
	adds r0, #8
	subs r1, r1, r0
	strh r1, [r2, #2]
	adds r1, r2, #0
	movs r0, #2
	strh r0, [r1, #8]
	movs r0, #0x9e
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r1, #0x9f
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	adds r0, r1, #0
	mov r2, sl
	strb r2, [r0, #0x18]
	movs r3, #0x8c
	lsls r3, r3, #3
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080571F6
	b _08057338
_080571F6:
	adds r0, r6, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x28]
	mov r8, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _08057218
	mov r0, sp
	ldrh r3, [r0, #0x2c]
_08057218:
	str r5, [sp, #0x120]
	lsls r2, r2, #5
	ldr r1, _08057268 @ =0x06010000
	adds r2, r2, r1
	mov r0, sb
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0805726C
	cmp r1, #0
	beq _08057240
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08057240:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08057338
	.align 2, 0
_0805724C: .4byte 0x00000464
_08057250: .4byte 0x00000434
_08057254: .4byte 0x00000444
_08057258: .4byte 0x00002268
_0805725C: .4byte 0x00002330
_08057260: .4byte 0x0000226C
_08057264: .4byte 0x0000228C
_08057268: .4byte 0x06010000
_0805726C:
	mov r8, r1
	add r1, sp, #0xd4
	mov r7, sl
	str r7, [r1]
	ldr r2, [sp, #0x120]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xd0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _0805728A
	adds r0, r1, #0
_0805728A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080572A8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _080572AC
	mov r0, sl
	bl func_080D3BC0
	b _080572AC
_080572A8:
	movs r0, #0
	mov sl, r0
_080572AC:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r4, [sp, #0x120]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _080572D2
_080572BA:
	cmp r3, #0
	beq _080572CA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080572CA:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080572BA
_080572D2:
	adds r5, r3, #0
	ldr r1, [sp, #0xd4]
	cmp r1, #1
	bne _080572EE
	cmp r5, #0
	beq _080572EA
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080572EA:
	adds r5, #0x10
	b _08057310
_080572EE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0805730E
_080572F6:
	cmp r2, #0
	beq _08057306
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08057306:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080572F6
_0805730E:
	adds r5, r2, #0
_08057310:
	ldr r0, [sp, #0x120]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _08057322
_0805731C:
	adds r1, #0x10
	cmp r1, r2
	bne _0805731C
_08057322:
	cmp r0, #0
	beq _0805732A
	bl free
_0805732A:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08057338:
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805734E
	mov r4, sp
	ldrh r2, [r4, #0x24]
_0805734E:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
_08057356:
	movs r5, #0xef
	lsls r5, r5, #2
	adds r0, r6, r5
	ldrb r0, [r0]
	mov sl, r0
	cmp r0, #1
	beq _08057366
	b _08057562
_08057366:
	movs r7, #0xe2
	lsls r7, r7, #2
	adds r0, r6, r7
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r4, #0xe3
	lsls r4, r4, #2
	adds r0, r6, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	add r1, sp, #4
	movs r3, #0xe7
	lsls r3, r3, #2
	adds r0, r6, r3
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #4
	ldr r5, _08057468 @ =0x00002294
	adds r0, r6, r5
	movs r7, #2
	ldrsh r0, [r0, r7]
	ldr r3, _0805746C @ =0x00002330
	adds r1, r6, r3
	ldrh r1, [r1]
	subs r0, r0, r1
	strh r0, [r2]
	adds r1, r2, #0
	ldr r4, _08057470 @ =0x00002298
	adds r0, r6, r4
	movs r5, #2
	ldrsh r0, [r0, r5]
	strh r0, [r1, #2]
	movs r0, #2
	strh r0, [r1, #8]
	movs r7, #0x9a
	lsls r7, r7, #3
	adds r4, r6, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r1, #0x9b
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	adds r0, r1, #0
	mov r2, sl
	strb r2, [r0, #0x18]
	movs r3, #0xee
	lsls r3, r3, #2
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08057412
	b _08057544
_08057412:
	adds r0, r6, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x28]
	mov r8, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _08057434
	mov r0, sp
	ldrh r3, [r0, #0x2c]
_08057434:
	str r5, [sp, #0x120]
	lsls r2, r2, #5
	ldr r1, _08057474 @ =0x06010000
	adds r2, r2, r1
	mov r0, sb
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08057478
	cmp r1, #0
	beq _0805745C
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0805745C:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08057544
	.align 2, 0
_08057468: .4byte 0x00002294
_0805746C: .4byte 0x00002330
_08057470: .4byte 0x00002298
_08057474: .4byte 0x06010000
_08057478:
	mov r8, r1
	add r1, sp, #0xdc
	mov r7, sl
	str r7, [r1]
	ldr r2, [sp, #0x120]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xd8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08057496
	adds r0, r1, #0
_08057496:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080574B4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _080574B8
	mov r0, sl
	bl func_080D3BC0
	b _080574B8
_080574B4:
	movs r0, #0
	mov sl, r0
_080574B8:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r4, [sp, #0x120]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _080574DE
_080574C6:
	cmp r3, #0
	beq _080574D6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080574D6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080574C6
_080574DE:
	adds r5, r3, #0
	ldr r1, [sp, #0xdc]
	cmp r1, #1
	bne _080574FA
	cmp r5, #0
	beq _080574F6
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080574F6:
	adds r5, #0x10
	b _0805751C
_080574FA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0805751A
_08057502:
	cmp r2, #0
	beq _08057512
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08057512:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08057502
_0805751A:
	adds r5, r2, #0
_0805751C:
	ldr r0, [sp, #0x120]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _0805752E
_08057528:
	adds r1, #0x10
	cmp r1, r2
	bne _08057528
_0805752E:
	cmp r0, #0
	beq _08057536
	bl free
_08057536:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08057544:
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805755A
	mov r4, sp
	ldrh r2, [r4, #0x24]
_0805755A:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
_08057562:
	movs r5, #0xd3
	lsls r5, r5, #2
	adds r0, r6, r5
	ldrb r0, [r0]
	mov sl, r0
	cmp r0, #1
	beq _08057572
	b _0805776E
_08057572:
	movs r7, #0xc6
	lsls r7, r7, #2
	adds r0, r6, r7
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r4, #0xc7
	lsls r4, r4, #2
	adds r0, r6, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	add r1, sp, #4
	movs r3, #0xcb
	lsls r3, r3, #2
	adds r0, r6, r3
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #4
	ldr r5, _08057674 @ =0x00002294
	adds r0, r6, r5
	movs r7, #2
	ldrsh r0, [r0, r7]
	ldr r3, _08057678 @ =0x00002330
	adds r1, r6, r3
	ldrh r1, [r1]
	subs r0, r0, r1
	strh r0, [r2]
	adds r1, r2, #0
	ldr r4, _0805767C @ =0x00002298
	adds r0, r6, r4
	movs r5, #2
	ldrsh r0, [r0, r5]
	strh r0, [r1, #2]
	movs r0, #2
	strh r0, [r1, #8]
	movs r7, #0x97
	lsls r7, r7, #3
	adds r4, r6, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r1, #0x98
	lsls r1, r1, #3
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	adds r0, r1, #0
	mov r2, sl
	strb r2, [r0, #0x18]
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0805761E
	b _08057750
_0805761E:
	adds r0, r6, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x28]
	mov r8, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _08057640
	mov r0, sp
	ldrh r3, [r0, #0x2c]
_08057640:
	str r5, [sp, #0x120]
	lsls r2, r2, #5
	ldr r1, _08057680 @ =0x06010000
	adds r2, r2, r1
	mov r0, sb
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08057684
	cmp r1, #0
	beq _08057668
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08057668:
	ldr r5, [sp, #0x120]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08057750
	.align 2, 0
_08057674: .4byte 0x00002294
_08057678: .4byte 0x00002330
_0805767C: .4byte 0x00002298
_08057680: .4byte 0x06010000
_08057684:
	mov r8, r1
	add r1, sp, #0xe4
	mov r7, sl
	str r7, [r1]
	ldr r2, [sp, #0x120]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xe0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080576A2
	adds r0, r1, #0
_080576A2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080576C0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _080576C4
	mov r0, sl
	bl func_080D3BC0
	b _080576C4
_080576C0:
	movs r0, #0
	mov sl, r0
_080576C4:
	adds r5, r0, #0
	str r5, [sp, #0x124]
	ldr r4, [sp, #0x120]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _080576EA
_080576D2:
	cmp r3, #0
	beq _080576E2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080576E2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080576D2
_080576EA:
	adds r5, r3, #0
	ldr r1, [sp, #0xe4]
	cmp r1, #1
	bne _08057706
	cmp r5, #0
	beq _08057702
	adds r0, r5, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08057702:
	adds r5, #0x10
	b _08057728
_08057706:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08057726
_0805770E:
	cmp r2, #0
	beq _0805771E
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805771E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0805770E
_08057726:
	adds r5, r2, #0
_08057728:
	ldr r0, [sp, #0x120]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _0805773A
_08057734:
	adds r1, #0x10
	cmp r1, r2
	bne _08057734
_0805773A:
	cmp r0, #0
	beq _08057742
	bl free
_08057742:
	ldr r0, [sp, #0x124]
	add r0, sl
	ldr r1, [sp, #0x124]
	ldr r2, [sp, #0x120]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08057750:
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08057766
	mov r4, sp
	ldrh r2, [r4, #0x24]
_08057766:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
_0805776E:
	ldr r7, _080579A0 @ =0x00002330
	adds r5, r6, r7
	ldrh r0, [r5]
	cmp r0, #0xff
	bhi _08057824
	movs r0, #0xb8
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, _080579A4 @ =0x0000091B
	adds r0, r4, #0
	bl func_0805E860
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x118]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r4, r7}
	stm r1!, {r2, r4, r7}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	add r1, sp, #4
	movs r7, #0xbd
	lsls r7, r7, #2
	adds r0, r6, r7
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #4
	ldrh r1, [r5]
	movs r0, #0x40
	subs r0, r0, r1
	strh r0, [r2]
	adds r1, r2, #0
	movs r0, #0x50
	strh r0, [r1, #2]
	movs r0, #2
	strh r0, [r1, #8]
	movs r4, #0x95
	lsls r4, r4, #3
	adds r0, r6, r4
	ldr r1, [r0, #4]
	bl func_08007D4C
	add r1, sp, #4
	adds r0, #2
	strh r0, [r1, #6]
	movs r5, #0x96
	lsls r5, r5, #3
	adds r0, r6, r5
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	movs r0, #1
	strb r0, [r1, #0x18]
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805781C
	mov r7, sp
	ldrh r2, [r7, #0x24]
_0805781C:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
_08057824:
	movs r0, #0xb8
	lsls r0, r0, #2
	adds r5, r6, r0
	adds r0, r5, #0
	ldr r1, _080579A8 @ =0x0000091A
	bl func_0805E860
	add r1, sp, #0x20
	mov r8, r1
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x118]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r4, sb
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r0, r8
	ldm r4!, {r1, r2, r7}
	stm r0!, {r1, r2, r7}
	ldm r4!, {r1, r3, r7}
	stm r0!, {r1, r3, r7}
	ldm r4!, {r2, r3}
	stm r0!, {r2, r3}
	movs r4, #0xbd
	lsls r4, r4, #2
	adds r4, r6, r4
	str r4, [sp, #0x10c]
	add r1, sp, #4
	adds r0, r4, #0
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r4, r7}
	stm r1!, {r2, r4, r7}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #4
	ldr r3, _080579AC @ =0x00002268
	adds r0, r6, r3
	movs r4, #2
	ldrsh r0, [r0, r4]
	ldr r7, _080579A0 @ =0x00002330
	adds r7, r7, r6
	mov sl, r7
	ldrh r1, [r7]
	subs r0, r0, r1
	strh r0, [r2]
	adds r0, r2, #0
	movs r1, #0x50
	strh r1, [r0, #2]
	movs r2, #2
	strh r2, [r0, #8]
	movs r3, #0x95
	lsls r3, r3, #3
	adds r7, r6, r3
	ldr r1, [r7, #4]
	adds r0, r7, #0
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r0, #0x96
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	movs r0, #1
	strb r0, [r1, #0x18]
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080578DE
	mov r0, r8
	ldrh r2, [r0, #4]
_080578DE:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
	movs r1, #0xd3
	lsls r1, r1, #2
	adds r0, r6, r1
	ldrb r0, [r0]
	mov r8, r0
	cmp r0, #1
	bne _08057990
	adds r0, r5, #0
	ldr r1, _080579A8 @ =0x0000091A
	bl func_0805E860
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r5, [sp, #0x118]
	ldr r0, [r5]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sb
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	mov r0, sb
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	add r1, sp, #4
	ldr r0, [sp, #0x10c]
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r0, [r0]
	str r0, [r1]
	add r2, sp, #4
	ldr r5, _080579B0 @ =0x00002294
	adds r0, r6, r5
	movs r1, #2
	ldrsh r0, [r0, r1]
	mov r3, sl
	ldrh r1, [r3]
	subs r0, r0, r1
	strh r0, [r2]
	adds r0, r2, #0
	movs r5, #0x50
	strh r5, [r0, #2]
	movs r1, #2
	strh r1, [r0, #8]
	ldr r1, [r7, #4]
	adds r0, r7, #0
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	adds r0, r1, #0
	mov r2, r8
	strb r2, [r0, #0x18]
	adds r0, r6, #0
	bl func_08008920
	ldr r1, [sp, #0x20]
	movs r2, #0
	cmp r1, #0
	beq _0805798A
	mov r3, sp
	ldrh r2, [r3, #0x24]
_0805798A:
	add r3, sp, #4
	bl func_0805E99C
_08057990:
	add sp, #0x128
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080579A0: .4byte 0x00002330
_080579A4: .4byte 0x0000091B
_080579A8: .4byte 0x0000091A
_080579AC: .4byte 0x00002268
_080579B0: .4byte 0x00002294

	thumb_func_start func_080579B4
func_080579B4: @ 0x080579B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	str r0, [sp, #8]
	mov r8, r3
	mov sb, r1
	lsls r2, r2, #3
	add r2, sb
	str r2, [sp, #0xc]
	cmp sb, r2
	bne _080579D2
	b _08057B4C
_080579D2:
	mov r2, sb
	ldr r0, [r2]
	ldr r1, [r2, #4]
	str r0, [sp]
	str r1, [sp, #4]
	ldr r1, [sp]
	lsls r0, r1, #7
	asrs r3, r0, #0x17
	mov r0, sp
	movs r5, #0
	ldrsb r5, [r0, r5]
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x1e
	adds r4, r0, #0
	lsrs r1, r1, #0x1e
	cmp r4, #0
	bne _080579FC
	movs r6, #8
	lsls r6, r1
	adds r4, r6, #0
	b _08057A1C
_080579FC:
	adds r0, r1, #1
	lsrs r0, r0, #1
	adds r0, #1
	movs r2, #8
	lsls r2, r0
	movs r0, #8
	cmp r1, #1
	beq _08057A0E
	lsrs r0, r2, #1
_08057A0E:
	cmp r4, #1
	beq _08057A18
	adds r6, r2, #0
	adds r4, r0, #0
	b _08057A1C
_08057A18:
	adds r6, r0, #0
	adds r4, r2, #0
_08057A1C:
	mov r0, r8
	ldrb r7, [r0, #0x10]
	movs r1, #1
	mov sl, r1
	mov r0, sl
	ands r0, r7
	cmp r0, #0
	beq _08057A46
	adds r0, r3, r4
	rsbs r3, r0, #0
	ldr r2, [sp]
	lsls r1, r2, #3
	lsrs r1, r1, #0x1f
	mov r0, sl
	eors r1, r0
	ands r1, r0
	lsls r1, r1, #0x1c
	ldr r0, _08057B5C @ =0xEFFFFFFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp]
_08057A46:
	movs r0, #2
	ands r0, r7
	cmp r0, #0
	beq _08057A68
	adds r0, r5, r6
	rsbs r5, r0, #0
	ldr r2, [sp]
	lsls r1, r2, #2
	lsrs r1, r1, #0x1f
	mov r0, sl
	eors r1, r0
	ands r1, r0
	lsls r1, r1, #0x1d
	ldr r0, _08057B60 @ =0xDFFFFFFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp]
_08057A68:
	mov r1, r8
	movs r2, #0
	ldrsh r0, [r1, r2]
	adds r3, r3, r0
	movs r2, #2
	ldrsh r0, [r1, r2]
	adds r5, r5, r0
	adds r0, r3, r4
	cmp r0, #0
	ble _08057B40
	cmp r3, #0xef
	bgt _08057B40
	adds r0, r5, r6
	cmp r0, #0
	ble _08057B40
	cmp r5, #0x9f
	bgt _08057B40
	ldr r0, _08057B64 @ =0x000001FF
	ands r3, r0
	lsls r2, r3, #0x10
	ldr r1, _08057B68 @ =0xFE00FFFF
	ldr r0, [sp]
	ands r0, r1
	orrs r0, r2
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	ldr r1, _08057B6C @ =0xFFFFFF00
	ands r0, r1
	orrs r0, r2
	str r0, [sp]
	mov r4, sp
	ldr r0, [sp, #4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #3
	ldr r3, [sp, #0x30]
	adds r0, r0, r3
	adds r0, #8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r1, _08057B70 @ =0xFFFF0FFF
	ldr r2, [sp, #4]
	ands r2, r1
	orrs r2, r0
	lsls r0, r2, #0x16
	lsrs r0, r0, #0x16
	mov r1, r8
	ldrh r1, [r1, #6]
	adds r0, r0, r1
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r1, _08057B74 @ =0xFFFFFC00
	ands r1, r2
	orrs r1, r0
	mov r2, r8
	ldrh r0, [r2, #8]
	movs r3, #3
	ands r0, r3
	lsls r0, r0, #0xa
	ldr r2, _08057B78 @ =0xFFFFF3FF
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #4]
	mov r1, r8
	ldr r0, [r1, #0xc]
	ands r0, r3
	lsls r0, r0, #0xa
	ldr r1, [sp]
	ands r1, r2
	orrs r1, r0
	mov r3, r8
	ldr r2, [r3, #0x14]
	movs r0, #3
	ands r2, r0
	lsls r2, r2, #8
	ldr r0, _08057B7C @ =0xFFFFFCFF
	ands r1, r0
	orrs r1, r2
	ldrb r2, [r3, #0x18]
	mov r3, sl
	ands r2, r3
	lsls r2, r2, #0xc
	ldr r0, _08057B80 @ =0xFFFFEFFF
	ands r1, r0
	orrs r1, r2
	str r1, [sp]
	ldr r0, [sp, #8]
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _08057B40
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp]
	str r0, [r1]
	ldrh r0, [r4, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_08057B40:
	movs r0, #8
	add sb, r0
	ldr r1, [sp, #0xc]
	cmp sb, r1
	beq _08057B4C
	b _080579D2
_08057B4C:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08057B5C: .4byte 0xEFFFFFFF
_08057B60: .4byte 0xDFFFFFFF
_08057B64: .4byte 0x000001FF
_08057B68: .4byte 0xFE00FFFF
_08057B6C: .4byte 0xFFFFFF00
_08057B70: .4byte 0xFFFF0FFF
_08057B74: .4byte 0xFFFFFC00
_08057B78: .4byte 0xFFFFF3FF
_08057B7C: .4byte 0xFFFFFCFF
_08057B80: .4byte 0xFFFFEFFF

	thumb_func_start func_08057B84
func_08057B84: @ 0x08057B84
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r1, _08057BF4 @ =0x000022C4
	adds r0, r4, r1
	movs r1, #0
	ldrsh r3, [r0, r1]
	movs r0, #0
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #8
	movs r2, #0xc
	bl func_08057CB0
	adds r0, r4, #0
	movs r1, #0x40
	movs r2, #0x14
	movs r3, #0xb
	bl func_08057D34
	ldr r1, _08057BF8 @ =0x00002324
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08057C00
	subs r1, #0x58
	adds r0, r4, r1
	ldrb r1, [r0]
	movs r5, #1
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08057C74
	adds r0, r4, #0
	movs r1, #0xa0
	movs r2, #0x10
	movs r3, #0x1a
	bl func_08057D34
	ldr r1, _08057BFC @ =0x000022C6
	adds r0, r4, r1
	movs r1, #0
	ldrsh r3, [r0, r1]
	str r5, [sp]
	adds r0, r4, #0
	movs r1, #0xc0
	movs r2, #0x10
	bl func_08057CB0
	adds r0, r4, #0
	movs r1, #0xe0
	movs r2, #0x10
	movs r3, #0x17
	bl func_08057D34
	b _08057C74
	.align 2, 0
_08057BF4: .4byte 0x000022C4
_08057BF8: .4byte 0x00002324
_08057BFC: .4byte 0x000022C6
_08057C00:
	ldr r0, _08057CA0 @ =0x000022CC
	adds r5, r4, r0
	ldrb r1, [r5]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08057C3C
	adds r0, r4, #0
	movs r1, #0xa0
	movs r2, #8
	movs r3, #0x18
	bl func_08057D34
	ldr r1, _08057CA4 @ =0x000022C8
	adds r0, r4, r1
	movs r1, #0
	ldrsh r3, [r0, r1]
	movs r0, #1
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0xc0
	movs r2, #8
	bl func_08057CB0
	adds r0, r4, #0
	movs r1, #0xe0
	movs r2, #8
	movs r3, #0x17
	bl func_08057D34
_08057C3C:
	ldrb r1, [r5]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08057C74
	adds r0, r4, #0
	movs r1, #0xa0
	movs r2, #0x18
	movs r3, #0x19
	bl func_08057D34
	ldr r1, _08057CA8 @ =0x000022CA
	adds r0, r4, r1
	movs r1, #0
	ldrsh r3, [r0, r1]
	movs r0, #1
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0xc0
	movs r2, #0x16
	bl func_08057CB0
	adds r0, r4, #0
	movs r1, #0xe0
	movs r2, #0x16
	movs r3, #0x17
	bl func_08057D34
_08057C74:
	ldr r1, _08057CAC @ =0x000022CE
	adds r0, r4, r1
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	movs r0, #0xf
	ands r1, r0
	cmp r1, #0
	bne _08057C96
	ldr r0, _08057CA0 @ =0x000022CC
	adds r2, r4, r0
	adds r0, #1
	adds r1, r4, r0
	ldrb r0, [r2]
	ldrb r1, [r1]
	eors r0, r1
	strb r0, [r2]
_08057C96:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08057CA0: .4byte 0x000022CC
_08057CA4: .4byte 0x000022C8
_08057CA8: .4byte 0x000022CA
_08057CAC: .4byte 0x000022CE

	thumb_func_start func_08057CB0
func_08057CB0: @ 0x08057CB0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	str r0, [sp]
	adds r5, r1, #0
	mov sl, r2
	mov sb, r3
	ldr r1, [sp, #0x24]
	movs r6, #0x64
	movs r3, #0
	cmp r1, #0
	beq _08057CD0
	movs r3, #0xc
_08057CD0:
	movs r0, #8
	cmp r1, #0
	bne _08057CD8
	movs r0, #0x10
_08057CD8:
	mov r8, r3
	adds r7, r0, #0
_08057CDC:
	mov r0, sb
	adds r1, r6, #0
	bl __divsi3
	adds r4, r0, #0
	mov r0, r8
	adds r3, r4, r0
	ldr r0, [sp]
	adds r1, r5, #0
	mov r2, sl
	bl func_08057D34
	adds r5, r5, r7
	adds r0, r4, #0
	muls r0, r6, r0
	mov r1, sb
	subs r1, r1, r0
	mov sb, r1
	adds r0, r6, #0
	movs r1, #0xa
	bl __divsi3
	adds r6, r0, #0
	cmp r6, #1
	bne _08057D20
	ldr r0, [sp]
	adds r1, r5, #0
	mov r3, sl
	adds r2, r3, r7
	mov r3, r8
	adds r3, #0xa
	bl func_08057D34
	adds r5, #8
_08057D20:
	cmp r6, #0
	bgt _08057CDC
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_08057D34
func_08057D34: @ 0x08057D34
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x3c
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	adds r4, r3, #0
	mov r1, sp
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0xc]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x18]
	add r7, sp, #0x1c
	adds r1, r5, #0
	adds r1, #0x50
	adds r0, r7, #0
	adds r2, r4, #0
	bl func_0805E790
	mov r0, sp
	strh r6, [r0]
	mov r1, r8
	strh r1, [r0, #2]
	movs r3, #0x90
	lsls r3, r3, #3
	adds r0, r5, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r1, #0x8f
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	mov r2, sp
	lsls r4, r4, #2
	ldr r3, _08057DD4 @ =0x00002334
	adds r1, r5, r3
	adds r1, r1, r4
	ldr r1, [r1]
	adds r1, r1, r0
	strh r1, [r2, #6]
	mov r1, sp
	movs r2, #1
	movs r0, #1
	strh r0, [r1, #8]
	mov r0, sp
	strb r2, [r0, #0x18]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08057DC0
	ldrh r2, [r7, #4]
_08057DC0:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
	add sp, #0x3c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08057DD4: .4byte 0x00002334

	thumb_func_start func_08057DD8
func_08057DD8: @ 0x08057DD8
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r5, r0, #0
	mov r8, r1
	adds r6, r2, #0
	lsls r4, r3, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08057E14 @ =vtable_unk_080E7960
	str r0, [r5]
	ldr r0, _08057E18 @ =0x000023A8
	bl __builtin_new
	adds r1, r6, #0
	adds r2, r4, #0
	bl func_080522F8
	str r0, [r5, #4]
	mov r0, r8
	ldr r1, [r0]
	movs r0, #0
	mov r2, r8
	str r0, [r2]
	str r1, [r5, #8]
	adds r0, r5, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08057E14: .4byte vtable_unk_080E7960
_08057E18: .4byte 0x000023A8

	thumb_func_start func_08057E1C
func_08057E1C: @ 0x08057E1C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08057E58 @ =vtable_unk_080E7960
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08057E38
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08057E38:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _08057E4A
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08057E4A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08057E58: .4byte vtable_unk_080E7960

	thumb_func_start func_08057E5C
func_08057E5C: @ 0x08057E5C
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r4, #4]
	mov r0, sp
	bl func_08052984
	ldr r1, [sp]
	cmp r1, #0
	beq _08057E7E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08057E7E:
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_08057E90
func_08057E90: @ 0x08057E90
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	mov sb, r2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r3, r5, #0
	adds r3, #0x2c
	ldrb r2, [r3]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	strb r0, [r3]
	adds r3, #2
	movs r0, #1
	ands r1, r0
	lsls r1, r1, #5
	ldrb r2, [r3]
	subs r0, #0x22
	ands r0, r2
	orrs r0, r1
	strb r0, [r3]
	movs r2, #0
	movs r3, #0xff
_08057EC4:
	adds r1, r5, r2
	ldrb r0, [r1]
	orrs r0, r3
	strb r0, [r1]
	adds r2, #1
	cmp r2, #0xb
	ble _08057EC4
	movs r4, #0
_08057ED4:
	adds r6, r5, r4
	adds r0, r4, #1
	mov r8, r0
	adds r7, r6, #0
_08057EDC:
	bl rand
	asrs r0, r0, #8
	movs r1, #0x28
	bl __modsi3
	strb r0, [r6]
	movs r2, #0
	movs r1, #0
_08057EEE:
	cmp r4, r1
	beq _08057EFE
	adds r0, r5, r1
	ldrb r0, [r0]
	ldrb r3, [r7]
	cmp r0, r3
	bne _08057EFE
	movs r2, #1
_08057EFE:
	adds r1, #1
	cmp r1, #0xb
	ble _08057EEE
	cmp r2, #0
	bne _08057EDC
	mov r4, r8
	cmp r4, #0xb
	ble _08057ED4
	adds r0, r5, #0
	mov r1, sb
	bl func_08057F64
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08057F24
func_08057F24: @ 0x08057F24
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r5, #0x2c
	ldrb r4, [r5]
	lsls r3, r4, #0x1e
	lsrs r3, r3, #0x1e
	adds r3, #1
	movs r2, #3
	ands r3, r2
	movs r2, #4
	rsbs r2, r2, #0
	ands r2, r4
	orrs r2, r3
	strb r2, [r5]
	bl func_08057F64
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08057F4C
func_08057F4C: @ 0x08057F4C
	push {lr}
	movs r2, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #3
	bne _08057F5E
	movs r2, #1
_08057F5E:
	adds r0, r2, #0
	pop {r1}
	bx r1

	thumb_func_start func_08057F64
func_08057F64: @ 0x08057F64
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	str r0, [sp]
	mov r8, r1
	adds r0, #0x2c
	ldrb r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #2
	bne _08057F8E
	ldr r0, [sp]
	adds r0, #0x2e
	ldrb r0, [r0]
	lsrs r1, r0, #5
	movs r0, #1
	ands r1, r0
	b _08057F90
_08057F8E:
	movs r1, #0
_08057F90:
	str r1, [sp, #4]
	ldr r7, [sp]
	adds r7, #0xc
	movs r0, #0
	mov sb, r0
	ldr r1, [sp]
	adds r1, #0x2c
	str r1, [sp, #8]
	ldr r0, _08057FB0 @ =0x080FA71C
	mov sl, r0
_08057FA4:
	ldr r1, [sp, #4]
	cmp r1, #0
	bne _08057FB4
_08057FAA:
	mov r4, sb
	b _08057FDA
	.align 2, 0
_08057FB0: .4byte 0x080FA71C
_08057FB4:
	mov r0, r8
	cmp r0, #2
	beq _08057FD0
	cmp r0, #2
	bhi _08057FC4
	cmp r0, #1
	beq _08057FAA
	b _08057FD8
_08057FC4:
	mov r1, r8
	cmp r1, #3
	beq _08057FAA
	cmp r1, #4
	beq _08057FD4
	b _08057FD8
_08057FD0:
	movs r4, #4
	b _08057FDA
_08057FD4:
	movs r4, #5
	b _08057FDA
_08057FD8:
	movs r4, #6
_08057FDA:
	lsls r4, r4, #4
	mov r1, sl
	adds r0, r4, r1
	ldr r6, [r0]
	mov r0, sl
	adds r0, #4
	adds r0, r4, r0
	ldr r5, [r0]
	bl rand
	subs r1, r5, r6
	bl __modsi3
	adds r0, r0, r6
	strb r0, [r7]
	mov r0, sl
	adds r0, #8
	adds r0, r4, r0
	ldr r6, [r0]
	ldr r0, _08058068 @ =0x080FA728
	adds r4, r4, r0
	ldr r5, [r4]
	bl rand
	subs r1, r5, r6
	bl __modsi3
	adds r0, r0, r6
	strb r0, [r7, #1]
	ldr r1, [sp, #8]
	ldrb r0, [r1]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1c
	add r0, sb
	ldr r1, [sp]
	adds r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r7, #2]
	ldrb r1, [r7]
	movs r0, #0xfa
	subs r0, r0, r1
	adds r1, r0, #0
	muls r1, r0, r1
	adds r0, r1, #0
	movs r1, #0xfa
	lsls r1, r1, #2
	bl __divsi3
	adds r4, r0, #0
	bl rand
	movs r1, #3
	ands r0, r1
	adds r0, #1
	adds r4, r4, r0
	strh r4, [r7, #4]
	movs r0, #1
	add sb, r0
	adds r7, #8
	mov r1, sb
	cmp r1, #3
	ble _08057FA4
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08058068: .4byte 0x080FA728

	thumb_func_start func_0805806C
func_0805806C: @ 0x0805806C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	mov sl, r0
	adds r6, r1, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp, #0x18]
	add r1, sp, #0x14
	movs r0, #0x1e
	movs r2, #1
	movs r5, #0
	movs r4, #0
	strh r0, [r1]
	strh r2, [r1, #2]
	mov r0, sl
	bl func_080084DC
	ldr r0, _08058480 @ =vtable_unk_080E7970
	mov r1, sl
	str r0, [r1, #4]
	str r6, [r1, #8]
	str r4, [r1, #0xc]
	movs r0, #4
	bl __builtin_new
	mov r8, r0
	add r0, sp, #0xc
	bl func_0800835C
	add r6, sp, #0x10
	adds r0, r6, #0
	bl func_0800770C
	mov r2, sl
	ldr r0, [r2, #0xc]
	str r0, [sp]
	add r0, sp, #0xc
	str r0, [sp, #4]
	str r6, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl func_08050CC0
	mov r1, sl
	str r0, [r1, #0x10]
	adds r0, r6, #0
	movs r1, #2
	bl func_08007714
	add r0, sp, #0xc
	movs r1, #2
	bl func_08008364
	mov r0, sl
	adds r0, #0x14
	movs r1, #1
	bl func_08008B54
	mov r0, sl
	adds r0, #0x18
	movs r1, #0
	bl func_08008B54
	mov r0, sl
	adds r0, #0x1c
	movs r1, #2
	bl func_08008B54
	movs r2, #0x20
	add r2, sl
	mov r8, r2
	ldr r1, _08058484 @ =0x0872EE78
	mov r0, r8
	bl func_0805E6CC
	mov r0, sl
	adds r0, #0x50
	ldr r1, _08058488 @ =0x0873CCB4
	bl func_0805E6CC
	mov r0, sl
	adds r0, #0x80
	str r0, [sp, #0x1c]
	ldr r1, _0805848C @ =0x0873D234
	bl func_0805E6CC
	mov r1, sl
	adds r1, #0xb0
	str r1, [sp, #0x20]
	ldr r1, _08058490 @ =0x0873CF90
	ldr r0, [sp, #0x20]
	bl func_0805E6CC
	mov r0, sl
	adds r0, #0xe0
	ldr r1, _08058494 @ =0x0873DE44
	bl func_0805E6CC
	movs r2, #0x88
	lsls r2, r2, #1
	add r2, sl
	mov sb, r2
	ldr r1, _08058498 @ =0x0873ED1C
	mov r0, sb
	bl func_0805E6CC
	movs r7, #0xa0
	lsls r7, r7, #1
	add r7, sl
	ldr r1, _0805849C @ =0x087401A4
	adds r0, r7, #0
	bl func_0805E6CC
	movs r0, #0xb8
	lsls r0, r0, #1
	add r0, sl
	str r0, [sp, #0x24]
	ldr r1, _080584A0 @ =0x08728208
	bl func_0805E6CC
	movs r6, #0xd0
	lsls r6, r6, #1
	add r6, sl
	ldr r1, _080584A4 @ =0x0858BA28
	adds r0, r6, #0
	bl func_0805E6CC
	movs r0, #0xe8
	lsls r0, r0, #1
	add r0, sl
	mov r1, r8
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r0, #0xf2
	lsls r0, r0, #1
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0x81
	lsls r0, r0, #2
	add r0, sl
	strb r5, [r0]
	movs r0, #0x82
	lsls r0, r0, #2
	add r0, sl
	adds r1, r6, #0
	ldr r2, _080584A8 @ =0x00000762
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r0, #0x87
	lsls r0, r0, #2
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0x8f
	lsls r0, r0, #2
	add r0, sl
	strb r5, [r0]
	movs r0, #0x90
	lsls r0, r0, #2
	add r0, sl
	adds r1, r6, #0
	ldr r2, _080584AC @ =0x0000073E
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r0, #0x95
	lsls r0, r0, #2
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0x9d
	lsls r0, r0, #2
	add r0, sl
	strb r5, [r0]
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, sl
	adds r1, r6, #0
	ldr r2, _080584B0 @ =0x0000074A
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r0, #0xa3
	lsls r0, r0, #2
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0xab
	lsls r0, r0, #2
	add r0, sl
	strb r5, [r0]
	movs r0, #0xac
	lsls r0, r0, #2
	add r0, sl
	adds r1, r6, #0
	ldr r2, _080584B4 @ =0x00000756
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r0, #0xb1
	lsls r0, r0, #2
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0xb9
	lsls r0, r0, #2
	add r0, sl
	strb r5, [r0]
	movs r0, #0xba
	lsls r0, r0, #2
	add r0, sl
	adds r1, r6, #0
	ldr r2, _080584B8 @ =0x0000076E
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r0, #0xbf
	lsls r0, r0, #2
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0xc7
	lsls r0, r0, #2
	add r0, sl
	strb r5, [r0]
	movs r0, #0xc8
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [sp, #0x1c]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r0, #0xcd
	lsls r0, r0, #2
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0xd5
	lsls r0, r0, #2
	add r0, sl
	strb r5, [r0]
	movs r0, #0xd6
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [sp, #0x20]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r0, #0xdb
	lsls r0, r0, #2
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0xe3
	lsls r0, r0, #2
	add r0, sl
	strb r5, [r0]
	movs r0, #0xe4
	lsls r0, r0, #2
	add r0, sl
	mov r1, sb
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r0, #0xe9
	lsls r0, r0, #2
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0xf1
	lsls r0, r0, #2
	add r0, sl
	strb r5, [r0]
	movs r0, #0xf2
	lsls r0, r0, #2
	add r0, sl
	mov r1, sb
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r0, #0xf7
	lsls r0, r0, #2
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0xff
	lsls r0, r0, #2
	add r0, sl
	strb r5, [r0]
	movs r0, #0x80
	lsls r0, r0, #3
	add r0, sl
	mov r1, sb
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	ldr r0, _080584BC @ =0x00000414
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r0, _080584C0 @ =0x00000434
	add r0, sl
	strb r5, [r0]
	movs r0, #0x87
	lsls r0, r0, #3
	add r0, sl
	mov r1, sb
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	ldr r0, _080584C4 @ =0x0000044C
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r0, _080584C8 @ =0x0000046C
	add r0, sl
	strb r5, [r0]
	movs r0, #0x8e
	lsls r0, r0, #3
	add r0, sl
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	ldr r0, _080584CC @ =0x00000484
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	movs r1, #0
	strb r1, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r0, _080584D0 @ =0x000004A4
	add r0, sl
	strb r5, [r0]
	movs r0, #0x95
	lsls r0, r0, #3
	add r0, sl
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	ldr r0, _080584D4 @ =0x000004BC
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r0, _080584D8 @ =0x000004DC
	add r0, sl
	strb r5, [r0]
	movs r0, #0x9c
	lsls r0, r0, #3
	add r0, sl
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	ldr r0, _080584DC @ =0x000004F4
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r0, _080584E0 @ =0x00000514
	add r0, sl
	strb r5, [r0]
	movs r0, #0xa3
	lsls r0, r0, #3
	add r0, sl
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	b _080584E4
	.align 2, 0
_08058480: .4byte vtable_unk_080E7970
_08058484: .4byte 0x0872EE78
_08058488: .4byte 0x0873CCB4
_0805848C: .4byte 0x0873D234
_08058490: .4byte 0x0873CF90
_08058494: .4byte 0x0873DE44
_08058498: .4byte 0x0873ED1C
_0805849C: .4byte 0x087401A4
_080584A0: .4byte 0x08728208
_080584A4: .4byte 0x0858BA28
_080584A8: .4byte 0x00000762
_080584AC: .4byte 0x0000073E
_080584B0: .4byte 0x0000074A
_080584B4: .4byte 0x00000756
_080584B8: .4byte 0x0000076E
_080584BC: .4byte 0x00000414
_080584C0: .4byte 0x00000434
_080584C4: .4byte 0x0000044C
_080584C8: .4byte 0x0000046C
_080584CC: .4byte 0x00000484
_080584D0: .4byte 0x000004A4
_080584D4: .4byte 0x000004BC
_080584D8: .4byte 0x000004DC
_080584DC: .4byte 0x000004F4
_080584E0: .4byte 0x00000514
_080584E4:
	bl func_0805E824
	ldr r0, _080587F8 @ =0x0000052C
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r0, _080587FC @ =0x0000054C
	add r0, sl
	strb r5, [r0]
	movs r0, #0xaa
	lsls r0, r0, #3
	add r0, sl
	ldr r1, [sp, #0x24]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	ldr r0, _08058800 @ =0x00000564
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r0, _08058804 @ =0x00000584
	add r0, sl
	strb r5, [r0]
	movs r0, #0xb1
	lsls r0, r0, #3
	add r0, sl
	adds r1, r6, #0
	ldr r2, _08058808 @ =0x0000091C
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	ldr r0, _0805880C @ =0x0000059C
	add r0, sl
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	ldr r0, _08058810 @ =0x000005BC
	add r0, sl
	strb r5, [r0]
	movs r5, #0xb8
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r5, #4]
	movs r5, #0xb9
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007128
	str r4, [r5, #4]
	movs r5, #0xba
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r5, #4]
	movs r5, #0xbb
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007128
	str r4, [r5, #4]
	movs r5, #0xbc
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #5
	bl func_08007B54
	str r0, [r5, #4]
	movs r5, #0xbd
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007128
	str r4, [r5, #4]
	movs r5, #0xbe
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #6
	bl func_08007B54
	str r0, [r5, #4]
	movs r5, #0xbf
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007128
	str r4, [r5, #4]
	movs r5, #0xc0
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r5, #4]
	movs r5, #0xc1
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007128
	adds r0, r5, #0
	bl func_0800736C
	str r0, [r5, #4]
	movs r5, #0xc2
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #7
	bl func_08007B54
	str r0, [r5, #4]
	movs r5, #0xc3
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007128
	adds r0, r5, #0
	bl func_0800736C
	str r0, [r5, #4]
	movs r5, #0xc4
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007128
	adds r0, r5, #0
	bl func_0800736C
	str r0, [r5, #4]
	movs r5, #0xc5
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r5, #4]
	movs r5, #0xc6
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r5, #4]
	movs r5, #0xc7
	lsls r5, r5, #3
	add r5, sl
	adds r0, r5, #0
	bl func_08007128
	str r4, [r5, #4]
	movs r4, #0xc8
	lsls r4, r4, #3
	add r4, sl
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r4, #4]
	movs r4, #0xc9
	lsls r4, r4, #3
	add r4, sl
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r4, #0xca
	lsls r4, r4, #3
	add r4, sl
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #3
	bl func_08007B54
	str r0, [r4, #4]
	movs r0, #0xcb
	lsls r0, r0, #3
	add r0, sl
	movs r7, #3
_080586E0:
	adds r6, r0, #0
	bl func_08007874
	adds r0, r6, #0
	movs r1, #5
	bl func_08007B54
	str r0, [r6, #4]
	adds r4, r6, #0
	adds r4, #8
	movs r5, #1
	movs r1, #0x18
	adds r1, r1, r6
	mov sb, r1
	subs r7, #1
	mov r8, r7
_08058700:
	adds r0, r4, #0
	bl func_08007128
	movs r2, #0
	str r2, [r4, #4]
	adds r4, #8
	subs r5, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r5, r0
	bne _08058700
	movs r7, #0
	adds r5, r6, #0
	adds r5, #0xc
_0805871C:
	lsls r4, r7, #3
	adds r4, r4, r6
	adds r4, #8
	ldr r1, [r5]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r5]
	adds r5, #8
	adds r7, #1
	cmp r7, #1
	bls _0805871C
	mov r0, sb
	mov r7, r8
	movs r1, #1
	rsbs r1, r1, #0
	cmp r7, r1
	bne _080586E0
	movs r0, #0xa7
	lsls r0, r0, #5
	add r0, sl
	ldr r1, _08058814 @ =vtable_unk_080E797C
	str r1, [r0]
	movs r4, #0
	str r4, [r0, #4]
	str r4, [r0, #8]
	str r4, [r0, #0xc]
	str r4, [r0, #0x10]
	str r4, [r0, #0x14]
	str r4, [r0, #0x18]
	mov r2, sl
	ldr r0, [r2, #8]
	ldr r1, _08058818 @ =0x00002C1C
	adds r0, r0, r1
	bl func_08057F4C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08058780
	mov r2, sl
	ldr r0, [r2, #8]
	ldr r1, _08058818 @ =0x00002C1C
	adds r0, r0, r1
	movs r1, #0
	movs r2, #1
	bl func_08057E90
_08058780:
	ldr r0, _0805881C @ =0x00001428
	add r0, sl
	mov r2, sp
	ldrb r2, [r2, #0x18]
	strb r2, [r0]
	mov r0, sl
	ldr r1, [r0, #8]
	ldr r2, _08058820 @ =0x00001AA8
	adds r0, r1, r2
	ldr r2, [r0]
	ldr r0, _08058824 @ =0x00001410
	add r0, sl
	str r2, [r0]
	ldr r0, _08058828 @ =0x00001414
	add r0, sl
	str r2, [r0]
	ldr r2, _0805882C @ =0x00001418
	add r2, sl
	ldr r3, _08058830 @ =0x00002C48
	adds r1, r1, r3
	ldr r0, [r1]
	lsls r0, r0, #0xd
	lsrs r0, r0, #0xf
	str r0, [r2]
	ldr r1, _08058834 @ =0x0001869F
	cmp r0, r1
	ble _080587B8
	str r1, [r2]
_080587B8:
	ldr r0, _08058838 @ =0x00001408
	add r0, sl
	strh r4, [r0]
	ldr r0, _0805883C @ =0x0000141E
	add r0, sl
	strh r4, [r0]
	movs r0, #0xa1
	lsls r0, r0, #5
	add r0, sl
	strh r4, [r0]
	mov r1, sl
	ldr r0, [r1, #8]
	adds r0, r0, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	ldr r1, _08058840 @ =0x0000141C
	add r1, sl
	strh r0, [r1]
	cmp r0, #2
	bne _0805884C
	mov r2, sl
	ldr r0, [r2, #8]
	ldr r1, _08058844 @ =0x00002C4A
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1f
	ldr r1, _08058848 @ =0x0000140E
	add r1, sl
	b _08058852
	.align 2, 0
_080587F8: .4byte 0x0000052C
_080587FC: .4byte 0x0000054C
_08058800: .4byte 0x00000564
_08058804: .4byte 0x00000584
_08058808: .4byte 0x0000091C
_0805880C: .4byte 0x0000059C
_08058810: .4byte 0x000005BC
_08058814: .4byte vtable_unk_080E797C
_08058818: .4byte 0x00002C1C
_0805881C: .4byte 0x00001428
_08058820: .4byte 0x00001AA8
_08058824: .4byte 0x00001410
_08058828: .4byte 0x00001414
_0805882C: .4byte 0x00001418
_08058830: .4byte 0x00002C48
_08058834: .4byte 0x0001869F
_08058838: .4byte 0x00001408
_0805883C: .4byte 0x0000141E
_08058840: .4byte 0x0000141C
_08058844: .4byte 0x00002C4A
_08058848: .4byte 0x0000140E
_0805884C:
	ldr r1, _08058894 @ =0x0000140E
	add r1, sl
	movs r0, #0
_08058852:
	strb r0, [r1]
	ldr r0, _08058898 @ =0x00001427
	add r0, sl
	movs r1, #0
	strb r1, [r0]
	ldr r0, _0805889C @ =0x00001426
	add r0, sl
	strb r1, [r0]
	ldr r0, _080588A0 @ =0x00001424
	add r0, sl
	strh r1, [r0]
	ldr r1, _080588A4 @ =0x00001429
	add r1, sl
	movs r0, #2
	strb r0, [r1]
	mov r2, sl
	ldr r0, [r2, #8]
	adds r0, #0x14
	bl func_08009C3C
	ldr r1, _080588A8 @ =0x000014DC
	add r1, sl
	str r0, [r1]
	mov r0, sl
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08058894: .4byte 0x0000140E
_08058898: .4byte 0x00001427
_0805889C: .4byte 0x00001426
_080588A0: .4byte 0x00001424
_080588A4: .4byte 0x00001429
_080588A8: .4byte 0x000014DC

	thumb_func_start func_080588AC
func_080588AC: @ 0x080588AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	str r0, [sp, #0x1c]
	adds r6, r1, #0
	adds r0, r6, #0
	bl func_08008724
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _08058994 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl func_08009300
	str r4, [sp, #4]
	ldr r0, [r6, #0x10]
	movs r1, #0x75
	bl func_08050E50
	movs r4, #0
	add r0, sp, #8
	mov sl, r0
	movs r5, #0
_08058906:
	movs r0, #0x2c
	adds r2, r4, #0
	muls r2, r0, r2
	adds r2, r6, r2
	ldr r0, [r6, #8]
	lsls r3, r4, #3
	adds r0, r0, r3
	ldr r1, _08058998 @ =0x00002C2A
	adds r0, r0, r1
	ldrb r1, [r0]
	ldr r7, _0805899C @ =0x0000144C
	adds r0, r2, r7
	strh r1, [r0]
	ldr r0, [r6, #8]
	adds r0, r0, r3
	ldr r1, _080589A0 @ =0x00002C28
	adds r0, r0, r1
	ldrb r1, [r0]
	subs r7, #3
	adds r0, r2, r7
	strb r1, [r0]
	ldr r0, [r6, #8]
	adds r0, r0, r3
	ldr r1, _080589A4 @ =0x00002C29
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r7, #1
	adds r0, r2, r7
	strb r1, [r0]
	ldr r0, [r6, #8]
	adds r0, r0, r3
	ldr r1, _080589A8 @ =0x00002C2C
	adds r0, r0, r1
	ldrh r1, [r0]
	ldr r3, _080589AC @ =0x00001454
	adds r0, r2, r3
	strh r1, [r0]
	adds r7, #0xc
	adds r2, r2, r7
	strh r5, [r2]
	adds r4, #1
	cmp r4, #3
	ble _08058906
	adds r0, r6, #0
	bl func_0805C80C
	ldr r1, [r6, #8]
	ldr r3, _080589B0 @ =0x00002C4A
	adds r1, r1, r3
	ldrb r2, [r1]
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r0, r2
	strb r0, [r1]
	ldr r1, [r6, #8]
	adds r1, r1, r3
	ldrb r2, [r1]
	movs r0, #0x7f
	ands r0, r2
	strb r0, [r1]
	ldr r1, _080589B4 @ =0x00001428
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080589BC
	ldr r2, _080589B8 @ =0x00001424
	adds r1, r6, r2
	movs r0, #0xd
	strh r0, [r1]
	b _080589EE
	.align 2, 0
_08058994: .4byte vtable_unk_080E5B80
_08058998: .4byte 0x00002C2A
_0805899C: .4byte 0x0000144C
_080589A0: .4byte 0x00002C28
_080589A4: .4byte 0x00002C29
_080589A8: .4byte 0x00002C2C
_080589AC: .4byte 0x00001454
_080589B0: .4byte 0x00002C4A
_080589B4: .4byte 0x00001428
_080589B8: .4byte 0x00001424
_080589BC:
	adds r0, r6, #0
	bl func_08059C94
	adds r0, r6, #0
	movs r1, #0
	bl func_08059FE0
	adds r0, r6, #0
	bl func_0805A3F0
	ldr r0, [sp, #4]
	ldr r1, _08058A20 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_080589EE:
	ldr r3, _08058A24 @ =0x00001424
	adds r0, r6, r3
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r0, #0xd
	bne _080589FC
	b _08058E4C
_080589FC:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	ldr r7, _08058A24 @ =0x00001424
	adds r0, r6, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0xb
	bls _08058A16
	b _08058E30
_08058A16:
	lsls r0, r0, #2
	ldr r1, _08058A28 @ =_08058A2C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08058A20: .4byte 0x00000889
_08058A24: .4byte 0x00001424
_08058A28: .4byte _08058A2C
_08058A2C: @ jump table
	.4byte _08058A5C @ case 0
	.4byte _08058A80 @ case 1
	.4byte _08058CCC @ case 2
	.4byte _08058CCC @ case 3
	.4byte _08058CCC @ case 4
	.4byte _08058D54 @ case 5
	.4byte _08058DD4 @ case 6
	.4byte _08058D0C @ case 7
	.4byte _08058D0C @ case 8
	.4byte _08058D0C @ case 9
	.4byte _08058D54 @ case 10
	.4byte _08058D88 @ case 11
_08058A5C:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r1, r0, #0x1f
	cmp r1, #0
	beq _08058A6C
	b _08058E30
_08058A6C:
	ldr r2, _08058A78 @ =0x0000140A
	adds r0, r6, r2
	strh r1, [r0]
	ldr r3, _08058A7C @ =0x00001424
	adds r1, r6, r3
	b _08058D76
	.align 2, 0
_08058A78: .4byte 0x0000140A
_08058A7C: .4byte 0x00001424
_08058A80:
	ldr r4, _08058AC0 @ =0x00001426
	adds r5, r6, r4
	ldrb r0, [r5]
	cmp r0, #0
	bne _08058AC8
	adds r0, r6, #0
	bl func_080088C4
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _08058B08
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	movs r7, #0xc4
	lsls r7, r7, #4
	adds r1, r7, #0
	strh r1, [r2]
	strh r1, [r0]
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _08058AC4 @ =0x00001F49
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	movs r0, #1
	strb r0, [r5]
	b _08058E30
	.align 2, 0
_08058AC0: .4byte 0x00001426
_08058AC4: .4byte 0x00001F49
_08058AC8:
	adds r0, r6, #0
	bl func_080088C4
	movs r1, #4
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0
	beq _08058ADC
	b _08058E30
_08058ADC:
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	movs r7, #0xf2
	lsls r7, r7, #5
	adds r1, r7, #0
	strh r1, [r2]
	strh r1, [r0]
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _08058B04 @ =0x00001D41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	strb r4, [r5]
	b _08058E30
	.align 2, 0
_08058B04: .4byte 0x00001D41
_08058B08:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08058B44
	ldr r4, _08058B28 @ =0x0000140A
	adds r0, r6, r4
	ldrh r1, [r0]
	movs r7, #0
	ldrsh r0, [r0, r7]
	cmp r0, #0
	ble _08058B2C
	subs r1, #1
	b _08058B2E
	.align 2, 0
_08058B28: .4byte 0x0000140A
_08058B2C:
	movs r1, #4
_08058B2E:
	ldr r2, _08058B40 @ =0x0000140A
	adds r0, r6, r2
	strh r1, [r0]
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xcb
	bl func_08008B6C
	b _08058B7A
	.align 2, 0
_08058B40: .4byte 0x0000140A
_08058B44:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08058B7A
	ldr r3, _08058B64 @ =0x0000140A
	adds r0, r6, r3
	ldrh r1, [r0]
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r0, #3
	bgt _08058B68
	adds r1, #1
	b _08058B6A
	.align 2, 0
_08058B64: .4byte 0x0000140A
_08058B68:
	movs r1, #0
_08058B6A:
	ldr r7, _08058B9C @ =0x0000140A
	adds r0, r6, r7
	strh r1, [r0]
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xcb
	bl func_08008B6C
_08058B7A:
	ldr r1, _08058B9C @ =0x0000140A
	adds r0, r6, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #4
	beq _08058BF4
	movs r4, #0
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08058BA0
	movs r4, #1
	b _08058BE0
	.align 2, 0
_08058B9C: .4byte 0x0000140A
_08058BA0:
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08058BB4
	movs r4, #1
	rsbs r4, r4, #0
	b _08058BE0
_08058BB4:
	adds r0, r6, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _08058BC8
	movs r4, #0xa
	b _08058BE0
_08058BC8:
	adds r0, r6, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _08058BDC
	movs r4, #0xa
	rsbs r4, r4, #0
_08058BDC:
	cmp r4, #0
	beq _08058BF4
_08058BE0:
	adds r0, r6, #0
	adds r1, r4, #0
	bl func_08059780
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xcb
	bl func_08008B6C
	b _08058E30
_08058BF4:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08058C24
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xc6
	bl func_08008B6C
	ldr r3, _08058C1C @ =0x00001429
	adds r1, r6, r3
	movs r0, #0
	strb r0, [r1]
	ldr r4, _08058C20 @ =0x00001424
	adds r1, r6, r4
	b _08058CBC
	.align 2, 0
_08058C1C: .4byte 0x00001429
_08058C20: .4byte 0x00001424
_08058C24:
	movs r4, #0
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	bne _08058C4E
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08058C50
	ldr r7, _08058CA0 @ =0x0000140A
	adds r0, r6, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #4
	bne _08058C50
_08058C4E:
	movs r4, #1
_08058C50:
	cmp r4, #0
	bne _08058C56
	b _08058E30
_08058C56:
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xc5
	bl func_08008B6C
	movs r2, #0xa1
	lsls r2, r2, #5
	adds r1, r6, r2
	movs r0, #0
	strh r0, [r1]
	ldr r3, _08058CA4 @ =0x00001456
	adds r2, r6, r3
	movs r3, #3
_08058C70:
	ldrh r0, [r2]
	ldrh r4, [r1]
	adds r0, r0, r4
	strh r0, [r1]
	adds r2, #0x2c
	subs r3, #1
	cmp r3, #0
	bge _08058C70
	movs r7, #0xa1
	lsls r7, r7, #5
	adds r0, r6, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	ble _08058CB0
	ldr r2, _08058CA8 @ =0x00001429
	adds r1, r6, r2
	movs r0, #0
	strb r0, [r1]
	ldr r3, _08058CAC @ =0x00001424
	adds r1, r6, r3
	movs r0, #7
	strh r0, [r1]
	b _08058E30
	.align 2, 0
_08058CA0: .4byte 0x0000140A
_08058CA4: .4byte 0x00001456
_08058CA8: .4byte 0x00001429
_08058CAC: .4byte 0x00001424
_08058CB0:
	ldr r4, _08058CC4 @ =0x00001429
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	ldr r7, _08058CC8 @ =0x00001424
	adds r1, r6, r7
_08058CBC:
	movs r0, #2
	strh r0, [r1]
	b _08058E30
	.align 2, 0
_08058CC4: .4byte 0x00001429
_08058CC8: .4byte 0x00001424
_08058CCC:
	adds r0, r6, #0
	bl func_08059878
	ldr r1, _08058CF4 @ =0x00001429
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #2
	beq _08058CDE
	b _08058E30
_08058CDE:
	ldr r2, _08058CF8 @ =0x0000142A
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _08058D00
	ldr r3, _08058CFC @ =0x00001424
	adds r1, r6, r3
	movs r0, #5
	strh r0, [r1]
	b _08058E30
	.align 2, 0
_08058CF4: .4byte 0x00001429
_08058CF8: .4byte 0x0000142A
_08058CFC: .4byte 0x00001424
_08058D00:
	ldr r4, _08058D08 @ =0x00001424
	adds r1, r6, r4
	b _08058D44
	.align 2, 0
_08058D08: .4byte 0x00001424
_08058D0C:
	adds r0, r6, #0
	bl func_08059878
	ldr r7, _08058D34 @ =0x00001429
	adds r0, r6, r7
	ldrb r0, [r0]
	cmp r0, #2
	beq _08058D1E
	b _08058E30
_08058D1E:
	ldr r1, _08058D38 @ =0x0000142A
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08058D40
	ldr r2, _08058D3C @ =0x00001424
	adds r1, r6, r2
	movs r0, #0xa
	strh r0, [r1]
	b _08058E30
	.align 2, 0
_08058D34: .4byte 0x00001429
_08058D38: .4byte 0x0000142A
_08058D3C: .4byte 0x00001424
_08058D40:
	ldr r3, _08058D50 @ =0x00001424
	adds r1, r6, r3
_08058D44:
	movs r0, #1
	strh r0, [r1]
	adds r0, r6, #0
	bl func_0805A3F0
	b _08058E30
	.align 2, 0
_08058D50: .4byte 0x00001424
_08058D54:
	ldr r0, [sp, #4]
	ldr r1, _08058D80 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r4, _08058D84 @ =0x00001424
	adds r1, r6, r4
_08058D76:
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _08058E30
	.align 2, 0
_08058D80: .4byte 0x00000889
_08058D84: .4byte 0x00001424
_08058D88:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08058E30
	ldr r0, [r6, #8]
	ldr r7, _08058DC8 @ =0x00001AA8
	adds r0, r0, r7
	movs r1, #0xa1
	lsls r1, r1, #5
	adds r5, r6, r1
	movs r2, #0
	ldrsh r1, [r5, r2]
	movs r4, #0x32
	muls r1, r4, r1
	bl func_0809ACC0
	ldr r3, _08058DCC @ =0x00001410
	adds r2, r6, r3
	movs r7, #0
	ldrsh r0, [r5, r7]
	adds r1, r0, #0
	muls r1, r4, r1
	ldr r0, [r2]
	subs r0, r0, r1
	str r0, [r2]
	ldr r0, _08058DD0 @ =0x00001424
	adds r1, r6, r0
	movs r0, #0xd
	strh r0, [r1]
	b _08058E30
	.align 2, 0
_08058DC8: .4byte 0x00001AA8
_08058DCC: .4byte 0x00001410
_08058DD0: .4byte 0x00001424
_08058DD4:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r3, r0, #0x1f
	cmp r3, #0
	bne _08058E30
	ldr r0, [r6, #8]
	ldr r1, _08058E2C @ =0x00002C4A
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r2, #0x40
	orrs r1, r2
	strb r1, [r0]
	str r3, [sp, #8]
	mov r2, sl
	str r2, [sp, #0xc]
	str r3, [sp, #0x10]
	str r3, [r2]
	ldr r4, [sp, #0x1c]
	str r3, [r4]
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _08058E10
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08058E10:
	ldr r1, [sp, #4]
	cmp r1, #0
	bne _08058E1A
	bl _08059764
_08058E1A:
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
	bl _08059764
	.align 2, 0
_08058E2C: .4byte 0x00002C4A
_08058E30:
	adds r0, r6, #0
	movs r1, #0
	bl func_0805A4DC
	adds r0, r6, #0
	bl func_0805A744
	ldr r7, _08058FB4 @ =0x00001424
	adds r0, r6, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0xd
	beq _08058E4C
	b _080589FC
_08058E4C:
	adds r0, r6, #0
	bl func_08008724
	movs r2, #0xc1
	lsls r2, r2, #3
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	movs r5, #0
	str r5, [r4, #4]
	movs r3, #0xc3
	lsls r3, r3, #3
	adds r4, r6, r3
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	str r5, [r4, #4]
	movs r7, #0xc4
	lsls r7, r7, #3
	adds r4, r6, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	str r5, [r4, #4]
	movs r0, #0xc9
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	str r5, [r4, #4]
	movs r1, #0xb9
	lsls r1, r1, #3
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r2, #0xbb
	lsls r2, r2, #3
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r3, #0xbd
	lsls r3, r3, #3
	adds r4, r6, r3
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	subs r7, #0x28
	adds r4, r6, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r0, #0xc7
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	adds r0, r6, #0
	bl func_0805AB08
	adds r0, r6, #0
	bl func_0805AD14
	adds r0, r6, #0
	bl func_0805B38C
	adds r0, r6, #0
	adds r0, #0x18
	movs r1, #0x21
	bl func_08008B6C
	ldr r0, [sp, #4]
	ldr r1, _08058FB8 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r1, _08058FB4 @ =0x00001424
	adds r0, r6, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	mov r3, sp
	adds r3, #0x14
	str r3, [sp, #0x20]
	cmp r0, #0x1d
	bne _08058F4E
	b _08059352
_08058F4E:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	movs r4, #0
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _08058F7C
	ldr r4, _08058FBC @ =0x00001427
	adds r0, r6, r4
	ldrb r1, [r0]
	movs r0, #2
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r4, r0, #0x1f
_08058F7C:
	cmp r4, #0
	beq _08058F9E
	ldr r7, _08058FBC @ =0x00001427
	adds r2, r6, r7
	ldrb r1, [r2]
	movs r0, #1
	eors r1, r0
	strb r1, [r2]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _08058FC0
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xb8
	bl func_08008B6C
_08058F9E:
	ldr r1, _08058FBC @ =0x00001427
	adds r0, r6, r1
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08058FC0
	adds r0, r6, #0
	bl func_0805BC34
	b _08059344
	.align 2, 0
_08058FB4: .4byte 0x00001424
_08058FB8: .4byte 0x00000889
_08058FBC: .4byte 0x00001427
_08058FC0:
	ldr r2, _08058FDC @ =0x00001424
	adds r0, r6, r2
	ldrh r0, [r0]
	subs r0, #0xd
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	bls _08058FD2
	b _0805933E
_08058FD2:
	lsls r0, r0, #2
	ldr r1, _08058FE0 @ =_08058FE4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08058FDC: .4byte 0x00001424
_08058FE0: .4byte _08058FE4
_08058FE4: @ jump table
	.4byte _08059024 @ case 0
	.4byte _08059074 @ case 1
	.4byte _08059074 @ case 2
	.4byte _08059074 @ case 3
	.4byte _08059074 @ case 4
	.4byte _08059074 @ case 5
	.4byte _08059074 @ case 6
	.4byte _08059074 @ case 7
	.4byte _08059074 @ case 8
	.4byte _080590A0 @ case 9
	.4byte _08059134 @ case 10
	.4byte _080591C4 @ case 11
	.4byte _080591F0 @ case 12
	.4byte _0805926C @ case 13
	.4byte _080592FC @ case 14
	.4byte _08059328 @ case 15
_08059024:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r1, r0, #0x1f
	cmp r1, #0
	beq _08059034
	b _0805933E
_08059034:
	ldr r3, _08059054 @ =0x00001429
	adds r0, r6, r3
	strb r1, [r0]
	ldr r4, _08059058 @ =0x0000140E
	adds r0, r6, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _08059060
	ldr r0, [r6, #0x10]
	bl func_08050E5C
	ldr r7, _0805905C @ =0x00001424
	adds r1, r6, r7
	movs r0, #0x16
	b _0805933C
	.align 2, 0
_08059054: .4byte 0x00001429
_08059058: .4byte 0x0000140E
_0805905C: .4byte 0x00001424
_08059060:
	ldr r0, [r6, #0x10]
	movs r1, #0x75
	bl func_08050E50
	ldr r0, _08059070 @ =0x00001424
	adds r1, r6, r0
	b _08059338
	.align 2, 0
_08059070: .4byte 0x00001424
_08059074:
	adds r0, r6, #0
	bl func_08059878
	ldr r2, _08059098 @ =0x00001429
	adds r1, r6, r2
	ldrb r0, [r1]
	cmp r0, #2
	beq _08059086
	b _0805933E
_08059086:
	movs r0, #0
	strb r0, [r1]
	ldr r0, [r6, #0x10]
	bl func_08050E5C
	ldr r3, _0805909C @ =0x00001424
	adds r1, r6, r3
	b _08059338
	.align 2, 0
_08059098: .4byte 0x00001429
_0805909C: .4byte 0x00001424
_080590A0:
	ldr r4, _08059114 @ =0x000014E4
	adds r1, r6, r4
	ldr r7, _08059118 @ =0x0000144C
	adds r0, r6, r7
	ldrh r0, [r0]
	str r0, [r1]
	ldr r0, _0805911C @ =0x000014E8
	adds r1, r6, r0
	ldr r2, _08059120 @ =0x00001478
	adds r0, r6, r2
	ldrh r0, [r0]
	str r0, [r1]
	ldr r3, _08059124 @ =0x000014EC
	adds r1, r6, r3
	subs r4, #0x40
	adds r0, r6, r4
	ldrh r0, [r0]
	str r0, [r1]
	adds r7, #0xa4
	adds r1, r6, r7
	adds r2, #0x58
	adds r0, r6, r2
	ldrh r0, [r0]
	str r0, [r1]
	subs r3, #0x10
	adds r0, r6, r3
	ldr r0, [r0]
	bl GetName__C6Animal
	adds r4, #0x54
	adds r1, r6, r4
	str r0, [r1]
	adds r0, r6, #0
	bl func_08059878
	subs r7, #0xc7
	adds r0, r6, r7
	ldrb r0, [r0]
	cmp r0, #2
	beq _080590F2
	b _0805933E
_080590F2:
	ldr r0, _08059128 @ =0x00001424
	adds r1, r6, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldr r2, _0805912C @ =0x00001406
	adds r1, r6, r2
	movs r0, #0x78
	strh r0, [r1]
	ldr r3, _08059130 @ =0x00001427
	adds r2, r6, r3
	ldrb r1, [r2]
	movs r0, #2
	orrs r0, r1
	strb r0, [r2]
	b _0805933E
	.align 2, 0
_08059114: .4byte 0x000014E4
_08059118: .4byte 0x0000144C
_0805911C: .4byte 0x000014E8
_08059120: .4byte 0x00001478
_08059124: .4byte 0x000014EC
_08059128: .4byte 0x00001424
_0805912C: .4byte 0x00001406
_08059130: .4byte 0x00001427
_08059134:
	ldr r4, _080591A4 @ =0x00001406
	adds r1, r6, r4
	ldrh r0, [r1]
	subs r0, #1
	movs r4, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08059148
	b _0805933E
_08059148:
	movs r7, #0x82
	lsls r7, r7, #2
	adds r0, r6, r7
	ldr r1, _080591A8 @ =0x00000766
	bl func_0805E860
	movs r1, #0x90
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r1, _080591AC @ =0x00000742
	bl func_0805E860
	movs r2, #0x9e
	lsls r2, r2, #2
	adds r0, r6, r2
	ldr r1, _080591B0 @ =0x0000074E
	bl func_0805E860
	movs r3, #0xac
	lsls r3, r3, #2
	adds r0, r6, r3
	ldr r1, _080591B4 @ =0x0000075A
	bl func_0805E860
	adds r7, #0xe0
	adds r0, r6, r7
	ldr r1, _080591B8 @ =0x00000772
	bl func_0805E860
	ldr r1, _080591BC @ =0x000013FC
	adds r0, r6, r1
	strh r4, [r0]
	adds r0, r6, #0
	adds r0, #0x1c
	movs r2, #3
	ldr r3, _080591C0 @ =0x00001404
	adds r1, r6, r3
_08059192:
	strh r2, [r1]
	subs r1, #2
	subs r2, #1
	cmp r2, #0
	bge _08059192
	movs r1, #0xb9
	bl func_08008B6C
	b _08059334
	.align 2, 0
_080591A4: .4byte 0x00001406
_080591A8: .4byte 0x00000766
_080591AC: .4byte 0x00000742
_080591B0: .4byte 0x0000074E
_080591B4: .4byte 0x0000075A
_080591B8: .4byte 0x00000772
_080591BC: .4byte 0x000013FC
_080591C0: .4byte 0x00001404
_080591C4:
	adds r0, r6, #0
	bl func_0805C96C
	cmp r0, #3
	ble _080591E0
	ldr r7, _080591E8 @ =0x00001406
	adds r1, r6, r7
	movs r0, #0x78
	strh r0, [r1]
	ldr r0, _080591EC @ =0x00001424
	adds r1, r6, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_080591E0:
	adds r0, r6, #0
	bl func_0805AD14
	b _0805933E
	.align 2, 0
_080591E8: .4byte 0x00001406
_080591EC: .4byte 0x00001424
_080591F0:
	ldr r2, _0805924C @ =0x00001406
	adds r1, r6, r2
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08059202
	b _0805933E
_08059202:
	ldr r3, _08059250 @ =0x0000140E
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #1
	bne _08059230
	ldr r4, _08059254 @ =0x000013FE
	adds r0, r6, r4
	movs r7, #0
	ldrsh r0, [r0, r7]
	cmp r0, #2
	bne _08059230
	ldr r2, [r6, #8]
	ldr r0, _08059258 @ =0x00002C4A
	adds r2, r2, r0
	ldrb r0, [r2]
	movs r1, #0x80
	orrs r0, r1
	strb r0, [r2]
	ldr r1, _0805925C @ =0x000014DC
	adds r0, r6, r1
	ldr r0, [r0]
	bl SetFestivalWinner__6Animal
_08059230:
	ldr r3, _08059260 @ =0x00001427
	adds r2, r6, r3
	ldrb r1, [r2]
	movs r0, #0xfd
	ands r0, r1
	movs r1, #0
	strb r0, [r2]
	ldr r4, _08059264 @ =0x00001429
	adds r0, r6, r4
	strb r1, [r0]
	ldr r7, _08059268 @ =0x00001424
	adds r1, r6, r7
	b _08059338
	.align 2, 0
_0805924C: .4byte 0x00001406
_08059250: .4byte 0x0000140E
_08059254: .4byte 0x000013FE
_08059258: .4byte 0x00002C4A
_0805925C: .4byte 0x000014DC
_08059260: .4byte 0x00001427
_08059264: .4byte 0x00001429
_08059268: .4byte 0x00001424
_0805926C:
	ldr r0, _080592E0 @ =0x000014E4
	adds r3, r6, r0
	ldr r1, _080592E4 @ =0x000013FE
	adds r0, r6, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	movs r2, #0x2c
	muls r0, r2, r0
	adds r0, r6, r0
	adds r1, #0x4e
	adds r0, r0, r1
	ldrh r0, [r0]
	str r0, [r3]
	ldr r4, _080592E8 @ =0x000014E8
	adds r3, r6, r4
	movs r7, #0xa0
	lsls r7, r7, #5
	adds r0, r6, r7
	movs r4, #0
	ldrsh r0, [r0, r4]
	muls r0, r2, r0
	adds r0, r6, r0
	adds r0, r0, r1
	ldrh r0, [r0]
	str r0, [r3]
	adds r7, #0xec
	adds r3, r6, r7
	ldr r4, _080592EC @ =0x00001402
	adds r0, r6, r4
	movs r7, #0
	ldrsh r0, [r0, r7]
	muls r0, r2, r0
	adds r0, r6, r0
	adds r0, r0, r1
	ldrh r0, [r0]
	str r0, [r3]
	ldr r0, _080592F0 @ =0x000014F0
	adds r3, r6, r0
	adds r4, #2
	adds r0, r6, r4
	movs r7, #0
	ldrsh r0, [r0, r7]
	muls r0, r2, r0
	adds r0, r6, r0
	adds r0, r0, r1
	ldrh r0, [r0]
	str r0, [r3]
	adds r0, r6, #0
	bl func_08059878
	ldr r1, _080592F4 @ =0x00001429
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #2
	bne _0805933E
	ldr r2, _080592F8 @ =0x00001424
	adds r1, r6, r2
	b _08059338
	.align 2, 0
_080592E0: .4byte 0x000014E4
_080592E4: .4byte 0x000013FE
_080592E8: .4byte 0x000014E8
_080592EC: .4byte 0x00001402
_080592F0: .4byte 0x000014F0
_080592F4: .4byte 0x00001429
_080592F8: .4byte 0x00001424
_080592FC:
	ldr r0, [sp, #4]
	ldr r1, _08059320 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r3, _08059324 @ =0x00001424
	adds r1, r6, r3
	b _08059338
	.align 2, 0
_08059320: .4byte 0x00000889
_08059324: .4byte 0x00001424
_08059328:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0805933E
_08059334:
	ldr r4, _0805943C @ =0x00001424
	adds r1, r6, r4
_08059338:
	ldrh r0, [r1]
	adds r0, #1
_0805933C:
	strh r0, [r1]
_0805933E:
	adds r0, r6, #0
	bl func_0805BC34
_08059344:
	ldr r7, _0805943C @ =0x00001424
	adds r0, r6, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x1d
	beq _08059352
	b _08058F4E
_08059352:
	adds r0, r6, #0
	bl func_08008724
	movs r2, #0
	mov sb, r2
	movs r3, #0xcd
	lsls r3, r3, #3
	adds r7, r6, r3
	ldr r0, _08059440 @ =0x00000664
	adds r4, r6, r0
	movs r1, #0xcc
	lsls r1, r1, #3
	adds r5, r6, r1
	movs r2, #3
	mov r8, r2
_08059370:
	ldr r1, [r4]
	adds r0, r5, #0
	bl func_080073E0
	mov r3, sb
	str r3, [r4]
	ldr r1, [r4, #8]
	adds r0, r7, #0
	bl func_080073E0
	mov r0, sb
	str r0, [r4, #8]
	adds r7, #0x18
	adds r4, #0x18
	adds r5, #0x18
	movs r1, #1
	rsbs r1, r1, #0
	add r8, r1
	mov r2, r8
	cmp r2, #0
	bge _08059370
	movs r3, #0xc1
	lsls r3, r3, #3
	adds r4, r6, r3
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r7, #0xc3
	lsls r7, r7, #3
	adds r4, r6, r7
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r0, #0xc4
	lsls r0, r0, #3
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	ldr r2, _08059444 @ =0x0000140A
	adds r1, r6, r2
	ldr r0, _08059448 @ =0x0000FFFF
	strh r0, [r1]
	adds r0, r6, #0
	bl func_08059C94
	adds r0, r6, #0
	movs r1, #1
	bl func_08059FE0
	ldr r3, _0805944C @ =0x000013FE
	adds r0, r6, r3
	movs r4, #0
	ldrsh r1, [r0, r4]
	movs r0, #0x2c
	muls r0, r1, r0
	adds r0, r6, r0
	ldr r7, _08059450 @ =0x00001456
	adds r1, r0, r7
	ldr r2, _08059454 @ =0x00001454
	adds r0, r0, r2
	ldrh r1, [r1]
	ldrh r0, [r0]
	adds r3, r1, #0
	muls r3, r0, r3
	adds r1, r3, #0
	ldr r4, _08059458 @ =0x0000141E
	adds r0, r6, r4
	strh r1, [r0]
	ldr r0, [sp, #4]
	ldr r1, _0805945C @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	subs r7, #0x32
	b _08059722
	.align 2, 0
_0805943C: .4byte 0x00001424
_08059440: .4byte 0x00000664
_08059444: .4byte 0x0000140A
_08059448: .4byte 0x0000FFFF
_0805944C: .4byte 0x000013FE
_08059450: .4byte 0x00001456
_08059454: .4byte 0x00001454
_08059458: .4byte 0x0000141E
_0805945C: .4byte 0x00000889
_08059460:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	ldr r2, _08059488 @ =0x00001424
	adds r0, r6, r2
	ldrh r0, [r0]
	subs r0, #0x1d
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	bls _0805947E
	b _08059712
_0805947E:
	lsls r0, r0, #2
	ldr r1, _0805948C @ =_08059490
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08059488: .4byte 0x00001424
_0805948C: .4byte _08059490
_08059490: @ jump table
	.4byte _080594B0 @ case 0
	.4byte _080594DC @ case 1
	.4byte _08059534 @ case 2
	.4byte _0805965C @ case 3
	.4byte _08059690 @ case 4
	.4byte _080596BC @ case 5
	.4byte _080596F0 @ case 6
	.4byte _08059712 @ case 7
_080594B0:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r4, r0, #0x1f
	cmp r4, #0
	beq _080594C0
	b _08059712
_080594C0:
	ldr r0, [r6, #0x10]
	bl func_08050E5C
	ldr r3, _080594D4 @ =0x00001429
	adds r0, r6, r3
	strb r4, [r0]
	ldr r4, _080594D8 @ =0x00001424
	adds r1, r6, r4
	b _080596DE
	.align 2, 0
_080594D4: .4byte 0x00001429
_080594D8: .4byte 0x00001424
_080594DC:
	ldr r7, _08059520 @ =0x000014F4
	adds r1, r6, r7
	ldr r2, _08059524 @ =0x0000141C
	adds r0, r6, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r0, #1
	str r0, [r1]
	adds r0, r6, #0
	bl func_08059878
	ldr r4, _08059528 @ =0x00001429
	adds r0, r6, r4
	ldrb r0, [r0]
	cmp r0, #2
	beq _080594FE
	b _08059712
_080594FE:
	subs r7, #0xd2
	adds r1, r6, r7
	movs r2, #0
	movs r0, #8
	strh r0, [r1]
	movs r1, #0xa1
	lsls r1, r1, #5
	adds r0, r6, r1
	strh r2, [r0]
	ldr r2, _0805952C @ =0x00001406
	adds r1, r6, r2
	movs r0, #0x3c
	strh r0, [r1]
	ldr r3, _08059530 @ =0x00001424
	adds r1, r6, r3
	b _080596DE
	.align 2, 0
_08059520: .4byte 0x000014F4
_08059524: .4byte 0x0000141C
_08059528: .4byte 0x00001429
_0805952C: .4byte 0x00001406
_08059530: .4byte 0x00001424
_08059534:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0805957C
	ldr r4, _08059590 @ =0x00001422
	adds r0, r6, r4
	movs r1, #0
	strh r1, [r0]
	ldr r7, _08059594 @ =0x00001406
	adds r0, r6, r7
	movs r1, #0
	ldrsh r4, [r0, r1]
	cmp r4, #0
	bne _0805957C
	ldr r3, _08059598 @ =0x00001418
	adds r2, r6, r3
	adds r7, #0x18
	adds r3, r6, r7
	movs r0, #0
	ldrsh r1, [r3, r0]
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	ldr r1, _0805959C @ =0x0001869F
	cmp r0, r1
	ble _08059570
	str r1, [r2]
_08059570:
	strh r4, [r3]
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xba
	bl func_08008B6C
_0805957C:
	ldr r1, _08059594 @ =0x00001406
	adds r5, r6, r1
	ldrh r1, [r5]
	movs r2, #0
	ldrsh r0, [r5, r2]
	cmp r0, #0
	ble _080595A0
	subs r0, r1, #1
	strh r0, [r5]
	b _08059712
	.align 2, 0
_08059590: .4byte 0x00001422
_08059594: .4byte 0x00001406
_08059598: .4byte 0x00001418
_0805959C: .4byte 0x0001869F
_080595A0:
	ldr r3, _0805960C @ =0x0000141E
	adds r4, r6, r3
	movs r7, #0
	ldrsh r0, [r4, r7]
	cmp r0, #0
	ble _08059620
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xba
	bl func_08008B6C
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	ldr r0, _08059610 @ =0x00001418
	adds r1, r6, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	ldr r2, _08059614 @ =0x0001869F
	cmp r0, r2
	ble _080595CE
	str r2, [r1]
_080595CE:
	movs r2, #0xa1
	lsls r2, r2, #5
	adds r1, r6, r2
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	movs r1, #5
	bl __modsi3
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080595FC
	ldr r4, _08059618 @ =0x00001422
	adds r1, r6, r4
	ldrh r2, [r1]
	movs r7, #0
	ldrsh r0, [r1, r7]
	cmp r0, #0
	ble _080595FC
	subs r0, r2, #1
	strh r0, [r1]
_080595FC:
	ldr r1, _08059618 @ =0x00001422
	adds r0, r6, r1
	ldrh r1, [r0]
	ldr r2, _0805961C @ =0x00001406
	adds r0, r6, r2
	strh r1, [r0]
	b _08059712
	.align 2, 0
_0805960C: .4byte 0x0000141E
_08059610: .4byte 0x00001418
_08059614: .4byte 0x0001869F
_08059618: .4byte 0x00001422
_0805961C: .4byte 0x00001406
_08059620:
	ldr r3, [r6, #8]
	ldr r4, _08059648 @ =0x00001418
	adds r0, r6, r4
	ldr r2, [r0]
	ldr r7, _0805964C @ =0x00002C48
	adds r3, r3, r7
	ldr r0, _08059650 @ =0x0001FFFF
	ands r2, r0
	lsls r2, r2, #2
	ldr r0, [r3]
	ldr r1, _08059654 @ =0xFFF80003
	ands r0, r1
	orrs r0, r2
	str r0, [r3]
	movs r0, #0x1e
	strh r0, [r5]
	ldr r0, _08059658 @ =0x00001424
	adds r1, r6, r0
	b _080596DE
	.align 2, 0
_08059648: .4byte 0x00001418
_0805964C: .4byte 0x00002C48
_08059650: .4byte 0x0001FFFF
_08059654: .4byte 0xFFF80003
_08059658: .4byte 0x00001424
_0805965C:
	ldr r2, _08059684 @ =0x00001406
	adds r1, r6, r2
	ldrh r0, [r1]
	subs r0, #1
	movs r4, #0
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08059712
	ldr r0, [r6, #0x10]
	movs r1, #0x75
	bl func_08050E50
	ldr r3, _08059688 @ =0x00001429
	adds r0, r6, r3
	strb r4, [r0]
	ldr r4, _0805968C @ =0x00001424
	adds r1, r6, r4
	b _080596DE
	.align 2, 0
_08059684: .4byte 0x00001406
_08059688: .4byte 0x00001429
_0805968C: .4byte 0x00001424
_08059690:
	adds r0, r6, #0
	bl func_08059878
	ldr r7, _080596B4 @ =0x00001429
	adds r0, r6, r7
	ldrb r0, [r0]
	cmp r0, #2
	bne _08059712
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08059712
	ldr r0, _080596B8 @ =0x00001424
	adds r1, r6, r0
	b _080596DE
	.align 2, 0
_080596B4: .4byte 0x00001429
_080596B8: .4byte 0x00001424
_080596BC:
	ldr r0, [sp, #4]
	ldr r1, _080596E8 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r2, _080596EC @ =0x00001424
	adds r1, r6, r2
_080596DE:
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _08059712
	.align 2, 0
_080596E8: .4byte 0x00000889
_080596EC: .4byte 0x00001424
_080596F0:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08059712
	ldr r3, _08059778 @ =0x00001424
	adds r0, r6, r3
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	ldr r0, [r6, #8]
	ldr r4, _0805977C @ =0x00002C1C
	adds r0, r0, r4
	movs r1, #1
	bl func_08057F24
_08059712:
	adds r0, r6, #0
	movs r1, #1
	bl func_0805A4DC
	adds r0, r6, #0
	bl func_0805A744
	ldr r7, _08059778 @ =0x00001424
_08059722:
	adds r0, r6, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x24
	beq _0805972E
	b _08059460
_0805972E:
	movs r0, #0
	str r0, [sp, #8]
	mov r2, sl
	str r2, [sp, #0x14]
	ldr r3, [sp, #0x20]
	str r0, [r3, #4]
	str r0, [r2]
	ldr r4, [sp, #0x1c]
	str r0, [r4]
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _08059752
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08059752:
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _08059764
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08059764:
	ldr r0, [sp, #0x1c]
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08059778: .4byte 0x00001424
_0805977C: .4byte 0x00002C1C

	thumb_func_start func_08059780
func_08059780: @ 0x08059780
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	movs r0, #0xa1
	lsls r0, r0, #5
	adds r1, r5, r0
	movs r0, #0
	strh r0, [r1]
	movs r3, #0
	ldr r2, _08059804 @ =0x0000140A
	adds r4, r5, r2
	ldr r7, _08059808 @ =0x00001456
	adds r2, r5, r7
_0805979A:
	movs r7, #0
	ldrsh r0, [r4, r7]
	cmp r3, r0
	beq _080597AA
	ldrh r0, [r2]
	ldrh r7, [r1]
	adds r0, r0, r7
	strh r0, [r1]
_080597AA:
	adds r2, #0x2c
	adds r3, #1
	cmp r3, #3
	ble _0805979A
	ldr r0, _0805980C @ =0x00001410
	adds r2, r5, r0
	movs r1, #0xa1
	lsls r1, r1, #5
	adds r0, r5, r1
	movs r3, #0
	ldrsh r1, [r0, r3]
	movs r0, #0x32
	muls r1, r0, r1
	ldr r0, [r2]
	subs r0, r0, r1
	movs r1, #0x32
	bl func_080D0EDA
	adds r2, r0, #0
	cmp r2, #0x63
	ble _080597D6
	movs r2, #0x63
_080597D6:
	ldr r7, _08059804 @ =0x0000140A
	adds r0, r5, r7
	movs r3, #0
	ldrsh r1, [r0, r3]
	movs r0, #0x2c
	muls r0, r1, r0
	adds r0, r5, r0
	adds r7, #0x4c
	adds r0, r0, r7
	ldrh r3, [r0]
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, r2
	bne _080597F6
	cmp r6, #0
	bgt _0805982A
_080597F6:
	cmp r3, #0
	bne _08059810
	cmp r6, #0
	bge _08059810
	lsls r0, r2, #0x10
	lsrs r3, r0, #0x10
	b _0805982C
	.align 2, 0
_08059804: .4byte 0x0000140A
_08059808: .4byte 0x00001456
_0805980C: .4byte 0x00001410
_08059810:
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r2
	ble _08059824
	lsls r0, r2, #0x10
	lsrs r3, r0, #0x10
_08059824:
	lsls r0, r3, #0x10
	cmp r0, #0
	bge _0805982C
_0805982A:
	movs r3, #0
_0805982C:
	ldr r2, _0805986C @ =0x0000140A
	adds r0, r5, r2
	movs r7, #0
	ldrsh r1, [r0, r7]
	movs r0, #0x2c
	muls r0, r1, r0
	adds r0, r5, r0
	ldr r1, _08059870 @ =0x00001456
	adds r0, r0, r1
	strh r3, [r0]
	movs r7, #0xa1
	lsls r7, r7, #5
	adds r2, r5, r7
	ldrh r1, [r2]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	adds r1, r0, r1
	strh r1, [r2]
	ldr r1, _08059874 @ =0x00001414
	adds r4, r5, r1
	subs r7, #0x10
	adds r3, r5, r7
	movs r1, #0
	ldrsh r2, [r2, r1]
	movs r1, #0x32
	muls r2, r1, r2
	ldr r1, [r3]
	subs r1, r1, r2
	str r1, [r4]
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0805986C: .4byte 0x0000140A
_08059870: .4byte 0x00001456
_08059874: .4byte 0x00001414

	thumb_func_start func_08059878
func_08059878: @ 0x08059878
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r0, [r7, #0x10]
	mov sb, r0
	adds r0, r7, #0
	bl func_080088DC
	mov r8, r0
	adds r0, r7, #0
	bl func_08008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_0800894C
	adds r1, r7, #0
	adds r1, #0x14
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl func_08050D3C
	cmp r0, #6
	bls _080598CA
	b _08059C82
_080598CA:
	lsls r0, r0, #2
	ldr r1, _080598D4 @ =_080598D8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080598D4: .4byte _080598D8
_080598D8: @ jump table
	.4byte _080598F4 @ case 0
	.4byte _08059C82 @ case 1
	.4byte _08059C82 @ case 2
	.4byte _08059916 @ case 3
	.4byte _08059C82 @ case 4
	.4byte _08059C82 @ case 5
	.4byte _08059C82 @ case 6
_080598F4:
	ldr r1, _0805990C @ =0x00001429
	adds r4, r7, r1
	ldrb r0, [r4]
	cmp r0, #0
	bne _08059910
	ldr r0, [r7, #0x10]
	bl func_08050D5C
	movs r0, #3
	strb r0, [r4]
	b _08059C82
	.align 2, 0
_0805990C: .4byte 0x00001429
_08059910:
	movs r0, #2
	strb r0, [r4]
	b _08059C82
_08059916:
	ldr r3, _0805992C @ =0x00001429
	adds r4, r7, r3
	ldrb r5, [r4]
	cmp r5, #5
	bne _08059930
	ldr r0, [r7, #0x10]
	bl func_08050D74
	movs r0, #1
	strb r0, [r4]
	b _08059C82
	.align 2, 0
_0805992C: .4byte 0x00001429
_08059930:
	cmp r5, #4
	bne _080599DE
	ldr r0, [r7, #0x10]
	bl func_08050DF0
	movs r6, #0
	movs r3, #3
	strb r3, [r4]
	ldr r4, _08059958 @ =0x00001424
	adds r2, r7, r4
	movs r4, #0
	ldrsh r1, [r2, r4]
	cmp r1, #7
	beq _08059990
	cmp r1, #7
	bgt _0805995C
	cmp r1, #2
	beq _08059966
	b _08059C82
	.align 2, 0
_08059958: .4byte 0x00001424
_0805995C:
	cmp r1, #0xe
	beq _080599BC
	cmp r1, #0x14
	beq _080599C8
	b _08059C82
_08059966:
	cmp r0, #1
	bne _08059978
	ldr r1, _08059974 @ =0x0000142A
	adds r0, r7, r1
	strb r6, [r0]
	strh r3, [r2]
	b _08059C82
	.align 2, 0
_08059974: .4byte 0x0000142A
_08059978:
	cmp r0, #2
	beq _0805997E
	b _08059C82
_0805997E:
	ldr r3, _0805998C @ =0x0000142A
	adds r1, r7, r3
	movs r0, #1
	strb r0, [r1]
	strh r5, [r2]
	b _08059C82
	.align 2, 0
_0805998C: .4byte 0x0000142A
_08059990:
	cmp r0, #1
	bne _080599A4
	ldr r4, _080599A0 @ =0x0000142A
	adds r0, r7, r4
	strb r6, [r0]
	movs r0, #8
	strh r0, [r2]
	b _08059C82
	.align 2, 0
_080599A0: .4byte 0x0000142A
_080599A4:
	cmp r0, #2
	beq _080599AA
	b _08059C82
_080599AA:
	ldr r1, _080599B8 @ =0x0000142A
	adds r0, r7, r1
	movs r1, #1
	strb r1, [r0]
	movs r0, #9
	strh r0, [r2]
	b _08059C82
	.align 2, 0
_080599B8: .4byte 0x0000142A
_080599BC:
	cmp r0, #1
	beq _080599D8
	cmp r0, #2
	beq _080599C6
	b _08059C82
_080599C6:
	b _080599CC
_080599C8:
	cmp r0, #1
	bne _080599D2
_080599CC:
	movs r0, #0x15
	strh r0, [r2]
	b _08059C82
_080599D2:
	cmp r0, #2
	beq _080599D8
	b _08059C82
_080599D8:
	movs r0, #0xf
	strh r0, [r2]
	b _08059C82
_080599DE:
	cmp r5, #3
	beq _080599E4
	b _08059C82
_080599E4:
	movs r0, #5
	strb r0, [r4]
	ldr r3, _08059A04 @ =0x00001424
	adds r0, r7, r3
	ldrh r0, [r0]
	subs r0, #2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bls _080599FA
	b _08059C82
_080599FA:
	lsls r0, r0, #2
	ldr r1, _08059A08 @ =_08059A0C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08059A04: .4byte 0x00001424
_08059A08: .4byte _08059A0C
_08059A0C: @ jump table
	.4byte _08059A8C @ case 0
	.4byte _08059AA4 @ case 1
	.4byte _08059AB0 @ case 2
	.4byte _08059C82 @ case 3
	.4byte _08059C82 @ case 4
	.4byte _08059ABC @ case 5
	.4byte _08059AD4 @ case 6
	.4byte _08059AF8 @ case 7
	.4byte _08059C82 @ case 8
	.4byte _08059C82 @ case 9
	.4byte _08059C82 @ case 10
	.4byte _08059C82 @ case 11
	.4byte _08059B04 @ case 12
	.4byte _08059B1C @ case 13
	.4byte _08059B44 @ case 14
	.4byte _08059B6C @ case 15
	.4byte _08059B98 @ case 16
	.4byte _08059BC8 @ case 17
	.4byte _08059C00 @ case 18
	.4byte _08059C34 @ case 19
	.4byte _08059C40 @ case 20
	.4byte _08059C82 @ case 21
	.4byte _08059C82 @ case 22
	.4byte _08059C82 @ case 23
	.4byte _08059C4C @ case 24
	.4byte _08059C82 @ case 25
	.4byte _08059C82 @ case 26
	.4byte _08059C82 @ case 27
	.4byte _08059C60 @ case 28
	.4byte _08059C82 @ case 29
	.4byte _08059C82 @ case 30
	.4byte _08059C74 @ case 31
_08059A8C:
	ldr r0, [r7, #0x10]
	ldr r1, _08059A98 @ =0x080FAA40
	ldr r2, _08059A9C @ =0x080FAA5C
	ldr r3, _08059AA0 @ =0x080FAA60
	b _08059C08
	.align 2, 0
_08059A98: .4byte 0x080FAA40
_08059A9C: .4byte 0x080FAA5C
_08059AA0: .4byte 0x080FAA60
_08059AA4:
	ldr r0, [r7, #0x10]
	ldr r1, _08059AAC @ =0x080FAA64
	b _08059C50
	.align 2, 0
_08059AAC: .4byte 0x080FAA64
_08059AB0:
	ldr r0, [r7, #0x10]
	ldr r1, _08059AB8 @ =0x080FAA74
	b _08059C64
	.align 2, 0
_08059AB8: .4byte 0x080FAA74
_08059ABC:
	ldr r0, [r7, #0x10]
	ldr r1, _08059AC8 @ =0x080FAA88
	ldr r2, _08059ACC @ =0x080FAA5C
	ldr r3, _08059AD0 @ =0x080FAA60
	b _08059C08
	.align 2, 0
_08059AC8: .4byte 0x080FAA88
_08059ACC: .4byte 0x080FAA5C
_08059AD0: .4byte 0x080FAA60
_08059AD4:
	ldr r1, _08059AE4 @ =0x0000140E
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08059AEC
	ldr r0, [r7, #0x10]
	ldr r1, _08059AE8 @ =0x080FAAA4
	b _08059C50
	.align 2, 0
_08059AE4: .4byte 0x0000140E
_08059AE8: .4byte 0x080FAAA4
_08059AEC:
	ldr r0, [r7, #0x10]
	ldr r1, _08059AF4 @ =0x080FAAA4
	b _08059C64
	.align 2, 0
_08059AF4: .4byte 0x080FAAA4
_08059AF8:
	ldr r0, [r7, #0x10]
	ldr r1, _08059B00 @ =0x080FAACC
	b _08059C50
	.align 2, 0
_08059B00: .4byte 0x080FAACC
_08059B04:
	ldr r0, [r7, #0x10]
	ldr r1, _08059B10 @ =0x080FAAE0
	ldr r2, _08059B14 @ =0x080FAA5C
	ldr r3, _08059B18 @ =0x080FAA60
	b _08059C08
	.align 2, 0
_08059B10: .4byte 0x080FAAE0
_08059B14: .4byte 0x080FAA5C
_08059B18: .4byte 0x080FAA60
_08059B1C:
	ldr r0, [r7, #0x10]
	ldr r1, _08059B38 @ =0x080FAAFC
	movs r3, #0xa7
	lsls r3, r3, #5
	adds r2, r7, r3
	bl func_08050DA0
	ldr r4, _08059B3C @ =0x00001424
	adds r1, r7, r4
	movs r0, #0x10
	strh r0, [r1]
	ldr r0, _08059B40 @ =0x00001429
	adds r1, r7, r0
	b _08059BEA
	.align 2, 0
_08059B38: .4byte 0x080FAAFC
_08059B3C: .4byte 0x00001424
_08059B40: .4byte 0x00001429
_08059B44:
	ldr r0, [r7, #0x10]
	ldr r1, _08059B60 @ =0x080FAB94
	movs r3, #0xa7
	lsls r3, r3, #5
	adds r2, r7, r3
	bl func_08050DA0
	ldr r4, _08059B64 @ =0x00001424
	adds r1, r7, r4
	movs r0, #0x11
	strh r0, [r1]
	ldr r0, _08059B68 @ =0x00001429
	adds r1, r7, r0
	b _08059BEA
	.align 2, 0
_08059B60: .4byte 0x080FAB94
_08059B64: .4byte 0x00001424
_08059B68: .4byte 0x00001429
_08059B6C:
	ldr r0, [r7, #0x10]
	ldr r1, _08059B8C @ =0x080FABE0
	movs r3, #0xa7
	lsls r3, r3, #5
	adds r2, r7, r3
	bl func_08050DA0
	ldr r4, _08059B90 @ =0x0000149E
	adds r1, r7, r4
	movs r0, #0x78
	strh r0, [r1]
	ldr r0, _08059B94 @ =0x00001424
	adds r1, r7, r0
	movs r0, #0x12
	b _08059BE4
	.align 2, 0
_08059B8C: .4byte 0x080FABE0
_08059B90: .4byte 0x0000149E
_08059B94: .4byte 0x00001424
_08059B98:
	ldr r0, [r7, #0x10]
	ldr r1, _08059BBC @ =0x080FAC24
	movs r4, #0xa7
	lsls r4, r4, #5
	adds r2, r7, r4
	bl func_08050DA0
	ldr r0, _08059BC0 @ =0x0000149E
	adds r1, r7, r0
	movs r0, #0x3c
	strh r0, [r1]
	ldr r3, _08059BC4 @ =0x00001424
	adds r1, r7, r3
	movs r0, #0x13
	strh r0, [r1]
	subs r4, #0xb7
	adds r1, r7, r4
	b _08059BEA
	.align 2, 0
_08059BBC: .4byte 0x080FAC24
_08059BC0: .4byte 0x0000149E
_08059BC4: .4byte 0x00001424
_08059BC8:
	ldr r0, [r7, #0x10]
	ldr r1, _08059BF0 @ =0x080FAC8C
	movs r3, #0xa7
	lsls r3, r3, #5
	adds r2, r7, r3
	bl func_08050DA0
	ldr r4, _08059BF4 @ =0x0000149E
	adds r1, r7, r4
	movs r0, #0xff
	strh r0, [r1]
	ldr r0, _08059BF8 @ =0x00001424
	adds r1, r7, r0
	movs r0, #0x14
_08059BE4:
	strh r0, [r1]
	ldr r3, _08059BFC @ =0x00001429
	adds r1, r7, r3
_08059BEA:
	movs r0, #3
	strb r0, [r1]
	b _08059C82
	.align 2, 0
_08059BF0: .4byte 0x080FAC8C
_08059BF4: .4byte 0x0000149E
_08059BF8: .4byte 0x00001424
_08059BFC: .4byte 0x00001429
_08059C00:
	ldr r0, [r7, #0x10]
	ldr r1, _08059C24 @ =0x080FAD08
	ldr r2, _08059C28 @ =0x080FAD20
	ldr r3, _08059C2C @ =0x080FAD28
_08059C08:
	movs r4, #0xa7
	lsls r4, r4, #5
	adds r5, r7, r4
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	bl func_08050E30
	ldr r0, _08059C30 @ =0x00001429
	adds r1, r7, r0
	movs r0, #4
	strb r0, [r1]
	b _08059C82
	.align 2, 0
_08059C24: .4byte 0x080FAD08
_08059C28: .4byte 0x080FAD20
_08059C2C: .4byte 0x080FAD28
_08059C30: .4byte 0x00001429
_08059C34:
	ldr r0, [r7, #0x10]
	ldr r1, _08059C3C @ =0x080FAD34
	b _08059C50
	.align 2, 0
_08059C3C: .4byte 0x080FAD34
_08059C40:
	ldr r0, [r7, #0x10]
	ldr r1, _08059C48 @ =0x080FAD50
	b _08059C64
	.align 2, 0
_08059C48: .4byte 0x080FAD50
_08059C4C:
	ldr r0, [r7, #0x10]
	ldr r1, _08059C5C @ =0x080FAD94
_08059C50:
	movs r3, #0xa7
	lsls r3, r3, #5
	adds r2, r7, r3
	bl func_08050DA0
	b _08059C82
	.align 2, 0
_08059C5C: .4byte 0x080FAD94
_08059C60:
	ldr r0, [r7, #0x10]
	ldr r1, _08059C70 @ =0x080FADDC
_08059C64:
	movs r4, #0xa7
	lsls r4, r4, #5
	adds r2, r7, r4
	bl func_08050DA0
	b _08059C82
	.align 2, 0
_08059C70: .4byte 0x080FADDC
_08059C74:
	ldr r0, [r7, #0x10]
	ldr r1, _08059C90 @ =0x080FAE00
	movs r3, #0xa7
	lsls r3, r3, #5
	adds r2, r7, r3
	bl func_08050DA0
_08059C82:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08059C90: .4byte 0x080FAE00

	thumb_func_start func_08059C94
func_08059C94: @ 0x08059C94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xa0
	adds r7, r0, #0
	add r1, sp, #0xc
	movs r0, #0
	str r0, [sp, #0xc]
	strh r0, [r1, #4]
	add r1, sp, #0x14
	str r0, [sp, #0x14]
	strh r0, [r1, #4]
	add r2, sp, #0x1c
	mov sb, r2
	str r0, [sp, #0x1c]
	strh r0, [r2, #4]
	add r1, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r1, #4]
	movs r3, #0xd6
	lsls r3, r3, #2
	adds r5, r7, r3
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	movs r4, #0xd7
	lsls r4, r4, #2
	adds r4, r4, r7
	mov r8, r4
	lsls r2, r2, #2
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x2c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x2c
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0xc
	adds r0, r4, #0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	mov r5, r8
	ldr r0, [r5]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r4, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0xc
	adds r0, r4, #0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r5}
	stm r1!, {r3, r5}
	ldr r5, [sp, #0x1c]
	movs r6, #0xc1
	lsls r6, r6, #3
	adds r0, r7, r6
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _08059F98 @ =0x05000200
	adds r1, r0, r2
	ldr r0, [sp, #0x1c]
	movs r2, #0
	mov sl, r4
	cmp r0, #0
	beq _08059D52
	mov r3, sb
	ldrh r2, [r3, #4]
_08059D52:
	adds r0, r5, #0
	bl func_08008E64
	movs r4, #0
	mov sb, r4
	movs r6, #0
	mov r5, r8
	str r5, [sp, #0x98]
	mov r0, sp
	adds r0, #0x90
	str r0, [sp, #0x94]
	mov r1, sp
	adds r1, #0x50
	str r1, [sp, #0x9c]
	movs r2, #0xd6
	lsls r2, r2, #2
	adds r5, r7, r2
	mov r8, sl
_08059D76:
	adds r0, r5, #0
	adds r1, r6, #0
	bl func_0805E860
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x98]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x2c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, r8
	mov r1, r8
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0xc
	mov r0, r8
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #0x14]
	movs r1, #0xc0
	lsls r1, r1, #3
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	add r0, sb
	lsls r0, r0, #5
	ldr r2, _08059F9C @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #0x14]
	movs r2, #0
	cmp r0, #0
	beq _08059DD2
	mov r3, sp
	ldrh r2, [r3, #0x18]
_08059DD2:
	adds r0, r4, #0
	bl func_08008E64
	ldr r0, [sp, #0x14]
	movs r1, #0
	cmp r0, #0
	beq _08059DE4
	mov r4, sp
	ldrh r1, [r4, #0x18]
_08059DE4:
	lsrs r0, r1, #5
	add sb, r0
	adds r6, #1
	cmp r6, #3
	ble _08059D76
	ldr r1, _08059FA0 @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	movs r4, #1
	rsbs r4, r4, #0
	ldr r5, _08059FA4 @ =0x0600E000
	mov r8, r5
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r4, #0
	mov r1, r8
	adds r2, r6, #0
	bl func_08008EB8
	ldr r0, _08059FA8 @ =0x0600E800
	mov sb, r0
	adds r0, r4, #0
	mov r1, sb
	adds r2, r6, #0
	bl func_08008EB8
	ldr r1, _08059FAC @ =0x0600F000
	adds r0, r4, #0
	adds r2, r6, #0
	bl func_08008EB8
	adds r0, r7, #0
	bl func_08008918
	movs r2, #0xf2
	lsls r2, r2, #5
	adds r1, r2, #0
	mov r3, sl
	strh r1, [r3]
	movs r5, #0
	strh r1, [r0]
	adds r0, r7, #0
	bl func_08008918
	ldr r4, _08059FB0 @ =0x00005C43
	adds r1, r4, #0
	mov r2, sl
	strh r1, [r2]
	strh r1, [r0, #0xe]
	adds r0, r7, #0
	bl func_08008918
	ldr r3, _08059FB4 @ =0x00001D41
	adds r1, r3, #0
	mov r4, sl
	strh r1, [r4]
	strh r1, [r0, #0xc]
	adds r0, r7, #0
	bl func_08008918
	ldr r2, _08059FB8 @ =0x00005E42
	adds r1, r2, #0
	strh r1, [r4]
	strh r1, [r0, #0xa]
	ldr r0, _08059FBC @ =0x080F9F70
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r2, _08059FC0 @ =0x080F9F74
	ldr r2, [r2]
	bl func_08008E64
	ldr r0, _08059FC4 @ =0x00030003
	mov r1, r8
	adds r2, r6, #0
	bl func_08008EB8
	adds r0, r7, #0
	bl func_08008918
	strh r5, [r4]
	strh r5, [r0, #0x1c]
	adds r0, r7, #0
	bl func_08008918
	strh r5, [r4]
	strh r5, [r0, #0x1e]
	movs r0, #3
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	mov r0, sb
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl func_08051320
	adds r0, r7, #0
	bl func_08008918
	strh r5, [r4]
	strh r5, [r0, #0x18]
	adds r0, r7, #0
	bl func_08008918
	strh r5, [r4]
	strh r5, [r0, #0x1a]
	adds r0, r7, #0
	bl func_08008918
	strh r5, [r4]
	strh r5, [r0, #0x14]
	adds r0, r7, #0
	bl func_08008918
	strh r5, [r4]
	strh r5, [r0, #0x16]
	ldr r0, _08059FC8 @ =0x080F9F78
	ldr r0, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x20
	bl func_08008E64
	ldr r0, _08059FCC @ =0x05000040
	movs r3, #0xf8
	lsls r3, r3, #2
	adds r6, r3, #0
	strh r6, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	ldr r4, _08059FD0 @ =0x00004218
	mov r8, r4
	strh r4, [r0]
	movs r0, #0xc3
	lsls r0, r0, #3
	adds r4, r7, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r1, _08059F98 @ =0x05000200
	adds r0, r0, r1
	strh r6, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _08059FD4 @ =0x05000202
	adds r0, r0, r2
	strh r5, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r3, _08059FD8 @ =0x05000204
	adds r0, r0, r3
	mov r4, r8
	strh r4, [r0]
	mov sl, r5
	movs r6, #1
	mov r8, r6
	movs r0, #2
	mov sb, r0
	add r6, sp, #0x90
_08059F3A:
	ldr r0, _08059FDC @ =0x080FAE6A
	lsls r4, r5, #1
	adds r0, r4, r0
	ldrh r1, [r0]
	mov r2, r8
	strh r2, [r6]
	mov r0, sb
	ldr r3, [sp, #0x94]
	strh r0, [r3, #2]
	ldr r0, [r6]
	str r1, [sp]
	mov r1, sl
	str r1, [sp, #4]
	mov r2, r8
	str r2, [sp, #8]
	add r1, sp, #0x50
	movs r2, #0
	movs r3, #0
	bl func_0804E5AC
	movs r3, #0xc2
	lsls r3, r3, #3
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	adds r1, r1, r4
	lsls r1, r1, #5
	ldr r4, _08059F9C @ =0x06010000
	adds r1, r1, r4
	ldr r0, [sp, #0x9c]
	movs r2, #0x40
	bl func_08008E64
	adds r5, #1
	cmp r5, #0x17
	ble _08059F3A
	add sp, #0xa0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08059F98: .4byte 0x05000200
_08059F9C: .4byte 0x06010000
_08059FA0: .4byte 0x06007FE0
_08059FA4: .4byte 0x0600E000
_08059FA8: .4byte 0x0600E800
_08059FAC: .4byte 0x0600F000
_08059FB0: .4byte 0x00005C43
_08059FB4: .4byte 0x00001D41
_08059FB8: .4byte 0x00005E42
_08059FBC: .4byte 0x080F9F70
_08059FC0: .4byte 0x080F9F74
_08059FC4: .4byte 0x00030003
_08059FC8: .4byte 0x080F9F78
_08059FCC: .4byte 0x05000040
_08059FD0: .4byte 0x00004218
_08059FD4: .4byte 0x05000202
_08059FD8: .4byte 0x05000204
_08059FDC: .4byte 0x080FAE6A

	thumb_func_start func_08059FE0
func_08059FE0: @ 0x08059FE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _0805A090 @ =0xFFFFF490
	add sp, r4
	mov r8, r0
	ldr r0, _0805A094 @ =0x00000B54
	add r0, sp
	str r1, [r0]
	cmp r1, #0
	bne _0805A0AC
	movs r1, #0xb8
	lsls r1, r1, #1
	add r1, r8
	add r0, sp, #0xc
	movs r2, #0
	bl func_0805E790
	add r5, sp, #0x1c
	ldr r4, [sp, #0x1c]
	movs r0, #0xc9
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r6, _0805A098 @ =0x05000200
	adds r1, r0, r6
	ldr r0, [sp, #0x1c]
	movs r2, #0
	cmp r0, #0
	beq _0805A028
	ldrh r2, [r5, #4]
_0805A028:
	adds r0, r4, #0
	bl func_08008E64
	add r4, sp, #0x14
	ldr r5, [sp, #0x14]
	movs r0, #0xc8
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r2, _0805A09C @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #0x14]
	movs r2, #0
	cmp r0, #0
	beq _0805A04E
	ldrh r2, [r4, #4]
_0805A04E:
	adds r0, r5, #0
	bl func_08008E64
	ldr r4, _0805A0A0 @ =0x08752F8C
	movs r0, #0xc2
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r3, _0805A0A4 @ =0x06010600
	adds r1, r1, r3
	adds r0, r4, #0
	movs r2, #0x80
	bl func_08008E64
	ldr r4, _0805A0A8 @ =0x0875300C
	movs r0, #0xc4
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r1, r0, #0
	lsls r1, r1, #5
	adds r1, r1, r6
	adds r0, r4, #0
	movs r2, #0x20
	bl func_08008E64
	b _0805A0E8
	.align 2, 0
_0805A090: .4byte 0xFFFFF490
_0805A094: .4byte 0x00000B54
_0805A098: .4byte 0x05000200
_0805A09C: .4byte 0x06010000
_0805A0A0: .4byte 0x08752F8C
_0805A0A4: .4byte 0x06010600
_0805A0A8: .4byte 0x0875300C
_0805A0AC:
	ldr r4, _0805A18C @ =0x0875196C
	movs r0, #0xc2
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r7, _0805A190 @ =0x06010600
	adds r1, r1, r7
	adds r0, r4, #0
	movs r2, #0x80
	bl func_08008E64
	ldr r4, _0805A194 @ =0x087519EC
	movs r0, #0xc4
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r0, _0805A198 @ =0x05000200
	adds r1, r1, r0
	adds r0, r4, #0
	movs r2, #0x20
	bl func_08008E64
_0805A0E8:
	ldr r4, _0805A19C @ =0x0000142C
	add r4, r8
	ldr r1, _0805A1A0 @ =0x00000B34
	add r1, sp
	ldr r2, _0805A1A4 @ =0x00000B6C
	add r2, sp
	str r1, [r2]
	mov r3, sp
	adds r3, #0x30
	ldr r7, _0805A1A8 @ =0x00000B68
	add r7, sp
	str r3, [r7]
	movs r0, #0xb4
	lsls r0, r0, #4
	add r0, sp
	ldr r1, _0805A1AC @ =0x00000B5C
	add r1, sp
	str r0, [r1]
	ldr r2, _0805A1B0 @ =0x00000B44
	add r2, sp
	movs r3, #0xb6
	lsls r3, r3, #4
	add r3, sp
	str r2, [r3]
	movs r7, #0xcd
	lsls r7, r7, #2
	add r7, sp
	ldr r0, _0805A1B4 @ =0x00000B58
	add r0, sp
	str r7, [r0]
	ldr r1, _0805A1B8 @ =0x00000B48
	add r1, sp
	ldr r2, _0805A1BC @ =0x00000B64
	add r2, sp
	str r1, [r2]
	movs r3, #2
	mov sl, r3
	ldr r7, _0805A1C0 @ =0x06002800
	mov sb, r7
	ldr r6, _0805A1C4 @ =0x00000B38
	add r6, sp
	ldr r5, _0805A1C8 @ =0x00000B3C
	add r5, sp
	movs r7, #3
_0805A140:
	ldr r0, _0805A1A0 @ =0x00000B34
	add r0, sp
	movs r1, #0xc
	strh r1, [r0]
	mov r3, sl
	ldr r2, _0805A1A4 @ =0x00000B6C
	add r2, sp
	ldr r2, [r2]
	strh r3, [r2, #2]
	ldr r0, [r0]
	add r1, sp, #0x30
	movs r2, #0
	bl func_0804E7A0
	ldrh r0, [r4, #0x20]
	cmp r0, #0x27
	bhi _0805A1D0
	adds r1, r0, #0
	movs r0, #0xd
	muls r1, r0, r1
	ldr r0, _0805A1CC @ =0x080FA796
	adds r1, r1, r0
	movs r3, #0xc
	strh r3, [r6]
	mov r0, sl
	strh r0, [r6, #2]
	ldr r0, [r6]
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r2, #1
	str r2, [sp, #8]
	add r1, sp, #0x30
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	b _0805A1F8
	.align 2, 0
_0805A18C: .4byte 0x0875196C
_0805A190: .4byte 0x06010600
_0805A194: .4byte 0x087519EC
_0805A198: .4byte 0x05000200
_0805A19C: .4byte 0x0000142C
_0805A1A0: .4byte 0x00000B34
_0805A1A4: .4byte 0x00000B6C
_0805A1A8: .4byte 0x00000B68
_0805A1AC: .4byte 0x00000B5C
_0805A1B0: .4byte 0x00000B44
_0805A1B4: .4byte 0x00000B58
_0805A1B8: .4byte 0x00000B48
_0805A1BC: .4byte 0x00000B64
_0805A1C0: .4byte 0x06002800
_0805A1C4: .4byte 0x00000B38
_0805A1C8: .4byte 0x00000B3C
_0805A1CC: .4byte 0x080FA796
_0805A1D0:
	ldr r0, _0805A2B8 @ =0x000014DC
	add r0, r8
	ldr r0, [r0]
	bl GetName__C6Animal
	movs r3, #0xc
	strh r3, [r5]
	mov r1, sl
	strh r1, [r5, #2]
	ldr r1, [r5]
	str r0, [sp]
	movs r2, #0
	str r2, [sp, #4]
	movs r3, #1
	str r3, [sp, #8]
	adds r0, r1, #0
	add r1, sp, #0x30
	movs r3, #0
	bl func_0804E958
_0805A1F8:
	ldr r1, _0805A2BC @ =0x00000B68
	add r1, sp
	ldr r0, [r1]
	mov r1, sb
	movs r2, #0xc0
	lsls r2, r2, #2
	bl func_08008E64
	movs r2, #0xc0
	lsls r2, r2, #2
	add sb, r2
	subs r7, #1
	adds r4, #0x2c
	cmp r7, #0
	bge _0805A140
	movs r4, #0x20
	movs r5, #2
	movs r7, #0
	movs r0, #0xb4
	lsls r0, r0, #4
	add r0, sp
	strh r4, [r0]
	ldr r3, _0805A2C0 @ =0x00000B5C
	add r3, sp
	ldr r3, [r3]
	strh r5, [r3, #2]
	ldr r0, [r0]
	add r1, sp, #0x334
	movs r2, #0
	bl func_0804E7A0
	ldr r1, _0805A2C4 @ =0x080FAE9C
	movs r6, #1
	ldr r0, _0805A2C8 @ =0x00000B44
	add r0, sp
	strh r4, [r0]
	movs r2, #0xb6
	lsls r2, r2, #4
	add r2, sp
	ldr r2, [r2]
	strh r5, [r2, #2]
	ldr r0, [r0]
	str r1, [sp]
	str r7, [sp, #4]
	str r6, [sp, #8]
	add r1, sp, #0x334
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	ldr r1, _0805A2CC @ =0x06004000
	movs r2, #0x80
	lsls r2, r2, #4
	ldr r3, _0805A2D0 @ =0x00000B58
	add r3, sp
	ldr r0, [r3]
	bl func_08008E64
	ldr r0, _0805A2D4 @ =0x00000B48
	add r0, sp
	strh r4, [r0]
	ldr r1, _0805A2D8 @ =0x00000B64
	add r1, sp
	ldr r1, [r1]
	strh r5, [r1, #2]
	ldr r0, [r0]
	ldr r2, _0805A2D0 @ =0x00000B58
	add r2, sp
	ldr r1, [r2]
	movs r2, #0
	bl func_0804E7A0
	ldr r3, _0805A2DC @ =0x00000B54
	add r3, sp
	ldr r3, [r3]
	cmp r3, #0
	bne _0805A2E8
	ldr r2, _0805A2E0 @ =0x080FAEB8
	ldr r1, _0805A2E4 @ =0x00000B4C
	add r1, sp
	ldr r0, _0805A2E4 @ =0x00000B4C
	add r0, sp
	strh r4, [r0]
	strh r5, [r1, #2]
	ldr r0, [r0]
	str r2, [sp]
	str r7, [sp, #4]
	str r6, [sp, #8]
	ldr r7, _0805A2D0 @ =0x00000B58
	add r7, sp
	ldr r1, [r7]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	b _0805A310
	.align 2, 0
_0805A2B8: .4byte 0x000014DC
_0805A2BC: .4byte 0x00000B68
_0805A2C0: .4byte 0x00000B5C
_0805A2C4: .4byte 0x080FAE9C
_0805A2C8: .4byte 0x00000B44
_0805A2CC: .4byte 0x06004000
_0805A2D0: .4byte 0x00000B58
_0805A2D4: .4byte 0x00000B48
_0805A2D8: .4byte 0x00000B64
_0805A2DC: .4byte 0x00000B54
_0805A2E0: .4byte 0x080FAEB8
_0805A2E4: .4byte 0x00000B4C
_0805A2E8:
	ldr r2, _0805A3D8 @ =0x080FAEC4
	movs r1, #0xb5
	lsls r1, r1, #4
	add r1, sp
	movs r0, #0xb5
	lsls r0, r0, #4
	add r0, sp
	strh r4, [r0]
	strh r5, [r1, #2]
	ldr r0, [r0]
	str r2, [sp]
	str r7, [sp, #4]
	str r6, [sp, #8]
	ldr r2, _0805A3DC @ =0x00000B58
	add r2, sp
	ldr r1, [r2]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
_0805A310:
	ldr r1, _0805A3E0 @ =0x06004800
	movs r4, #0x80
	lsls r4, r4, #4
	ldr r3, _0805A3DC @ =0x00000B58
	add r3, sp
	ldr r0, [r3]
	adds r2, r4, #0
	bl func_08008E64
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, _0805A3E4 @ =0x00000BEA
	add r1, r8
	adds r2, r4, #0
	bl func_08008EB8
	movs r5, #0x85
	lsls r5, r5, #6
	movs r1, #0
	ldr r7, _0805A3E8 @ =0x00000BF2
	add r7, r8
	mov ip, r7
_0805A33C:
	movs r4, #0
	lsls r0, r1, #1
	adds r6, r5, #0
	adds r6, #0x18
	adds r1, #1
	mov sb, r1
	adds r1, r0, #6
	lsls r1, r1, #6
	adds r0, #7
	lsls r0, r0, #6
	adds r3, r5, #0
	adds r3, #0xc
	mov r7, ip
	adds r2, r0, r7
	add r1, ip
_0805A35A:
	adds r0, r5, r4
	strh r0, [r1]
	strh r3, [r2]
	adds r3, #1
	adds r2, #2
	adds r1, #2
	adds r4, #1
	cmp r4, #0xb
	ble _0805A35A
	lsls r0, r6, #0x10
	lsrs r5, r0, #0x10
	mov r1, sb
	cmp r1, #3
	ble _0805A33C
	movs r4, #0
	ldr r5, _0805A3E4 @ =0x00000BEA
	add r5, r8
	movs r0, #0x88
	lsls r0, r0, #6
	adds r6, r0, #0
_0805A382:
	adds r3, r4, #0
	cmp r4, #0
	bge _0805A38A
	adds r3, #0x1f
_0805A38A:
	asrs r3, r3, #5
	lsls r2, r3, #5
	subs r2, r4, r2
	lsls r2, r2, #1
	adds r0, r3, #4
	lsls r0, r0, #6
	adds r0, r2, r0
	adds r0, r5, r0
	adds r1, r4, r6
	strh r1, [r0]
	adds r3, #0xf
	lsls r3, r3, #6
	adds r2, r2, r3
	adds r2, r5, r2
	movs r1, #0x89
	lsls r1, r1, #6
	adds r0, r4, r1
	strh r0, [r2]
	adds r4, #1
	cmp r4, #0x3f
	ble _0805A382
	ldr r0, _0805A3E4 @ =0x00000BEA
	add r0, r8
	ldr r1, _0805A3EC @ =0x0600F000
	movs r2, #0x80
	lsls r2, r2, #4
	bl func_08008E64
	movs r3, #0xb7
	lsls r3, r3, #4
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805A3D8: .4byte 0x080FAEC4
_0805A3DC: .4byte 0x00000B58
_0805A3E0: .4byte 0x06004800
_0805A3E4: .4byte 0x00000BEA
_0805A3E8: .4byte 0x00000BF2
_0805A3EC: .4byte 0x0600F000

	thumb_func_start func_0805A3F0
func_0805A3F0: @ 0x0805A3F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _0805A4C4 @ =0xFFFFF7E8
	add sp, r4
	ldr r1, _0805A4C8 @ =0x06008000
	movs r2, #0xb0
	lsls r2, r2, #6
	movs r0, #0
	bl func_08008EB8
	ldr r4, _0805A4CC @ =0x0600F800
	movs r2, #0x80
	lsls r2, r2, #4
	movs r0, #0
	adds r1, r4, #0
	bl func_08008EB8
	movs r2, #0
	ldr r0, _0805A4D0 @ =0x080FAFC8
	mov r8, r0
	movs r1, #0x80
	lsls r1, r1, #6
	adds r5, r1, #0
_0805A424:
	movs r3, #0
	lsls r1, r2, #6
	lsls r0, r2, #5
	adds r2, #1
	adds r0, r0, r5
	adds r1, r1, r4
_0805A430:
	strh r0, [r1]
	adds r0, #1
	adds r1, #2
	adds r3, #1
	cmp r3, #0x1f
	bls _0805A430
	cmp r2, #0x15
	bls _0805A424
	mov r1, r8
	ldr r0, [r1]
	cmp r0, #0
	beq _0805A4B2
	movs r6, #0x81
	lsls r6, r6, #4
	add r6, sp
	movs r0, #0x20
	mov sl, r0
	movs r1, #2
	mov sb, r1
	add r5, sp, #0x10
	ldr r7, _0805A4C8 @ =0x06008000
	ldr r4, _0805A4D4 @ =0x00000814
	add r4, sp
_0805A45E:
	mov r0, sl
	strh r0, [r6]
	mov r1, sb
	strh r1, [r6, #2]
	ldr r0, [r6]
	adds r1, r5, #0
	movs r2, #0
	bl func_0804E7A0
	mov r0, r8
	adds r0, #4
	mov r8, r0
	subs r0, #4
	ldm r0!, {r1}
	mov r0, sl
	strh r0, [r4]
	mov r0, sb
	strh r0, [r4, #2]
	ldr r0, [r4]
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0x80
	lsls r2, r2, #4
	bl func_08008E64
	movs r0, #0x80
	lsls r0, r0, #4
	adds r7, r7, r0
	mov r1, r8
	ldr r0, [r1]
	cmp r0, #0
	bne _0805A45E
_0805A4B2:
	ldr r3, _0805A4D8 @ =0x00000818
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805A4C4: .4byte 0xFFFFF7E8
_0805A4C8: .4byte 0x06008000
_0805A4CC: .4byte 0x0600F800
_0805A4D0: .4byte 0x080FAFC8
_0805A4D4: .4byte 0x00000814
_0805A4D8: .4byte 0x00000818

	thumb_func_start func_0805A4DC
func_0805A4DC: @ 0x0805A4DC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r5, r0, #0
	ldr r0, _0805A524 @ =0x00000BD8
	adds r2, r5, r0
	movs r0, #0
	strh r0, [r2]
	cmp r1, #0
	bne _0805A52C
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	movs r1, #0x10
	movs r2, #4
	movs r3, #0x18
	bl func_0805A6E4
	ldr r1, _0805A528 @ =0x00001414
	adds r0, r5, r1
	ldr r0, [r0]
	str r0, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	movs r0, #0xc
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0x28
	movs r2, #4
	movs r3, #1
	bl func_0805A63C
	b _0805A59C
	.align 2, 0
_0805A524: .4byte 0x00000BD8
_0805A528: .4byte 0x00001414
_0805A52C:
	movs r4, #0
	movs r7, #1
	movs r6, #8
_0805A532:
	adds r3, r4, #0
	adds r3, #0xd
	str r7, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #4
	bl func_0805A6E4
	adds r6, #8
	adds r4, #1
	cmp r4, #0xa
	ble _0805A532
	ldr r1, _0805A628 @ =0x00001418
	adds r0, r5, r1
	ldr r0, [r0]
	str r0, [sp]
	movs r0, #5
	str r0, [sp, #4]
	movs r4, #0xa
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0x88
	movs r2, #4
	movs r3, #1
	bl func_0805A63C
	ldr r1, _0805A62C @ =0x0000141E
	adds r0, r5, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	str r0, [sp]
	movs r0, #4
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0xa0
	movs r2, #0x78
	movs r3, #2
	bl func_0805A63C
	ldr r1, _0805A630 @ =0x000013FE
	adds r0, r5, r1
	movs r1, #0
	ldrsh r2, [r0, r1]
	lsls r2, r2, #4
	adds r2, #0x30
	movs r0, #2
	str r0, [sp]
	adds r0, r5, #0
	movs r1, #0
	movs r3, #0x18
	bl func_0805A6E4
_0805A59C:
	ldr r1, _0805A634 @ =0x0000141C
	adds r0, r5, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r0, #1
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0x20
	movs r2, #0x20
	movs r3, #2
	bl func_0805A63C
	ldr r0, _0805A638 @ =0x0000142C
	adds r4, r5, r0
	movs r1, #2
	mov r8, r1
	movs r0, #0xa
	mov sb, r0
	movs r6, #0x30
	movs r7, #3
_0805A5CC:
	mov r1, r8
	str r1, [sp]
	adds r0, r5, #0
	movs r1, #0x88
	adds r2, r6, #0
	movs r3, #0xb
	bl func_0805A6E4
	movs r1, #0x28
	ldrsh r0, [r4, r1]
	str r0, [sp]
	mov r0, r8
	str r0, [sp, #4]
	mov r1, sb
	str r1, [sp, #8]
	adds r0, r5, #0
	movs r1, #0x90
	adds r2, r6, #0
	movs r3, #2
	bl func_0805A63C
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	str r0, [sp]
	mov r0, r8
	str r0, [sp, #4]
	mov r1, sb
	str r1, [sp, #8]
	adds r0, r5, #0
	movs r1, #0xc0
	adds r2, r6, #0
	movs r3, #2
	bl func_0805A63C
	adds r6, #0x10
	subs r7, #1
	adds r4, #0x2c
	cmp r7, #0
	bge _0805A5CC
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805A628: .4byte 0x00001418
_0805A62C: .4byte 0x0000141E
_0805A630: .4byte 0x000013FE
_0805A634: .4byte 0x0000141C
_0805A638: .4byte 0x0000142C

	thumb_func_start func_0805A63C
func_0805A63C: @ 0x0805A63C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	adds r6, r1, #0
	str r2, [sp, #4]
	mov sb, r3
	ldr r0, [sp, #0x28]
	mov r8, r0
	ldr r4, [sp, #0x2c]
	cmp r4, #1
	ble _0805A672
	subs r4, #1
	movs r5, #0xa
	cmp r4, #1
	ble _0805A66E
_0805A662:
	lsls r0, r5, #2
	adds r0, r0, r5
	lsls r5, r0, #1
	subs r4, #1
	cmp r4, #1
	bgt _0805A662
_0805A66E:
	adds r4, r5, #0
	b _0805A674
_0805A672:
	movs r4, #1
_0805A674:
	movs r7, #0
	cmp r4, #0
	ble _0805A6BE
_0805A67A:
	cmp r4, #1
	bne _0805A680
	movs r7, #1
_0805A680:
	mov r0, r8
	adds r1, r4, #0
	bl __divsi3
	adds r5, r0, #0
	cmp r5, #0
	bne _0805A692
	cmp r7, #0
	beq _0805A6A4
_0805A692:
	mov r1, sb
	str r1, [sp]
	mov r0, sl
	adds r1, r6, #0
	ldr r2, [sp, #4]
	adds r3, r5, #0
	bl func_0805A6E4
	movs r7, #1
_0805A6A4:
	adds r6, #8
	adds r0, r5, #0
	muls r0, r4, r0
	mov r1, r8
	subs r1, r1, r0
	mov r8, r1
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	adds r4, r0, #0
	cmp r4, #0
	bgt _0805A67A
_0805A6BE:
	ldr r0, [sp, #0x30]
	cmp r0, #0
	beq _0805A6D4
	mov r1, sb
	str r1, [sp]
	mov r0, sl
	adds r1, r6, #0
	ldr r2, [sp, #4]
	ldr r3, [sp, #0x30]
	bl func_0805A6E4
_0805A6D4:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0805A6E4
func_0805A6E4: @ 0x0805A6E4
	push {r4, r5, r6, r7, lr}
	ldr r4, _0805A734 @ =0x00000BD8
	adds r6, r0, r4
	movs r7, #0
	ldrsh r5, [r6, r7]
	lsls r5, r5, #3
	movs r7, #0xe7
	lsls r7, r7, #3
	adds r4, r0, r7
	adds r4, r4, r5
	strh r1, [r4]
	movs r1, #0
	ldrsh r4, [r6, r1]
	lsls r4, r4, #3
	ldr r5, _0805A738 @ =0x0000073A
	adds r1, r0, r5
	adds r1, r1, r4
	strh r2, [r1]
	movs r7, #0
	ldrsh r2, [r6, r7]
	lsls r2, r2, #3
	ldr r4, _0805A73C @ =0x0000073C
	adds r1, r0, r4
	adds r1, r1, r2
	strh r3, [r1]
	movs r5, #0
	ldrsh r1, [r6, r5]
	lsls r1, r1, #3
	ldr r7, _0805A740 @ =0x0000073E
	adds r0, r0, r7
	adds r0, r0, r1
	mov r1, sp
	ldrh r1, [r1, #0x14]
	strh r1, [r0]
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805A734: .4byte 0x00000BD8
_0805A738: .4byte 0x0000073A
_0805A73C: .4byte 0x0000073C
_0805A740: .4byte 0x0000073E

	thumb_func_start func_0805A744
func_0805A744: @ 0x0805A744
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x68
	adds r5, r0, #0
	mov r1, sp
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0xc]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x18]
	add r2, sp, #0x1c
	str r0, [sp, #0x1c]
	strh r0, [r2, #4]
	add r1, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r1, #4]
	add r1, sp, #0x2c
	str r0, [sp, #0x2c]
	strh r0, [r1, #4]
	add r1, sp, #0x34
	str r0, [sp, #0x34]
	strh r0, [r1, #4]
	ldr r0, _0805A804 @ =0x0000140A
	adds r6, r5, r0
	movs r1, #0
	ldrsh r0, [r6, r1]
	add r7, sp, #0x3c
	cmp r0, #0
	blt _0805A85A
	movs r2, #0xaa
	lsls r2, r2, #3
	adds r4, r5, r2
	adds r0, r4, #0
	bl func_0805E8F0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	ldr r4, _0805A808 @ =0x00000554
	adds r0, r5, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r7, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r7, #0
	adds r1, r7, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	adds r0, r7, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r1, sp
	ldr r4, _0805A80C @ =0x00000564
	adds r0, r5, r4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	mov r2, sp
	movs r1, #0
	ldrsh r0, [r6, r1]
	movs r1, #0x1c
	cmp r0, #3
	bgt _0805A7F2
	movs r1, #0xc
_0805A7F2:
	strh r1, [r2]
	mov r1, sp
	cmp r0, #3
	bgt _0805A810
	movs r2, #0
	ldrsh r0, [r6, r2]
	lsls r0, r0, #4
	adds r0, #0x38
	b _0805A812
	.align 2, 0
_0805A804: .4byte 0x0000140A
_0805A808: .4byte 0x00000554
_0805A80C: .4byte 0x00000564
_0805A810:
	movs r0, #0x80
_0805A812:
	strh r0, [r1, #2]
	movs r3, #0xc8
	lsls r3, r3, #3
	adds r0, r5, r3
	ldr r1, [r0, #4]
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	movs r4, #0xc9
	lsls r4, r4, #3
	adds r0, r5, r4
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r0, #2
	strh r0, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0x18]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805A852
	mov r0, sp
	ldrh r2, [r0, #0x20]
_0805A852:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_0805A85A:
	movs r6, #0
	movs r1, #0xd7
	lsls r1, r1, #2
	adds r1, r1, r5
	mov sl, r1
	add r2, sp, #0x5c
	mov sb, r2
	movs r3, #0xd6
	lsls r3, r3, #2
	adds r3, r3, r5
	mov r8, r3
	mov r4, sp
	str r7, [sp, #0x64]
_0805A874:
	mov r0, r8
	adds r1, r6, #0
	bl func_0805E860
	mov r7, r8
	ldr r1, [r7]
	ldr r3, [r1]
	ldrh r2, [r7, #0xc]
	lsls r2, r2, #2
	mov r7, sl
	ldr r0, [r7]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r0, [sp, #0x64]
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	ldr r0, [sp, #0x64]
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	movs r0, #0x10
	strh r0, [r4]
	lsls r0, r6, #4
	adds r0, #0x30
	strh r0, [r4, #2]
	movs r7, #0xc1
	lsls r7, r7, #3
	adds r0, r5, r7
	ldr r1, [r0, #4]
	bl func_080074C0
	strh r0, [r4, #4]
	movs r1, #0xc0
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r1, r6, #2
	adds r0, r0, r1
	strh r0, [r4, #6]
	movs r0, #2
	strh r0, [r4, #8]
	movs r0, #1
	strb r0, [r4, #0x18]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805A8F8
	mov r7, sp
	ldrh r2, [r7, #0x20]
_0805A8F8:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
	adds r6, #1
	cmp r6, #3
	ble _0805A874
	ldr r1, _0805AA38 @ =0xFFFFFCFF
	ldr r0, [sp, #0x5c]
	ands r0, r1
	ldr r1, _0805AA3C @ =0xFFFFF3FF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	ldr r1, _0805AA40 @ =0xFFFFDFFF
	ands r0, r1
	ldr r1, _0805AA44 @ =0xFFFF3FFF
	ands r0, r1
	ldr r1, _0805AA48 @ =0xF1FFFFFF
	ands r0, r1
	ldr r1, _0805AA4C @ =0xEFFFFFFF
	ands r0, r1
	ldr r1, _0805AA50 @ =0xDFFFFFFF
	ands r0, r1
	ldr r1, _0805AA54 @ =0x3FFFFFFF
	ands r0, r1
	adds r1, #1
	orrs r0, r1
	str r0, [sp, #0x5c]
	movs r1, #0xc3
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _0805AA58 @ =0xFFFF0FFF
	mov r3, sb
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	ldr r0, _0805AA5C @ =0x0000FFFF
	ands r1, r0
	str r1, [r3, #4]
	ldr r2, _0805AA60 @ =0x00000BD8
	adds r1, r5, r2
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0805A96C
	b _0805AAE6
_0805A96C:
	mov r6, sb
	ldr r4, _0805AA64 @ =0x0000073C
	adds r7, r5, r4
_0805A972:
	adds r4, r5, r2
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #3
	ldr r2, _0805AA68 @ =0x0000073E
	adds r0, r5, r2
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r0, #3
	ands r1, r0
	lsls r1, r1, #0xa
	ldr r2, _0805AA3C @ =0xFFFFF3FF
	ldr r0, [r6, #4]
	ands r0, r2
	orrs r0, r1
	str r0, [r6, #4]
	movs r3, #0
	ldrsh r1, [r4, r3]
	lsls r1, r1, #3
	movs r2, #0xe7
	lsls r2, r2, #3
	adds r0, r5, r2
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, _0805AA6C @ =0x000001FF
	ands r1, r0
	lsls r1, r1, #0x10
	ldr r0, _0805AA70 @ =0xFE00FFFF
	ldr r2, [sp, #0x5c]
	ands r2, r0
	orrs r2, r1
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r1, r1, #3
	ldr r3, _0805AA74 @ =0x0000073A
	adds r0, r5, r3
	adds r0, r0, r1
	ldrb r1, [r0]
	ldr r0, _0805AA78 @ =0xFFFFFF00
	ands r2, r0
	orrs r2, r1
	str r2, [sp, #0x5c]
	movs r1, #0xc2
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	movs r2, #0
	ldrsh r1, [r4, r2]
	lsls r1, r1, #3
	adds r1, r7, r1
	movs r3, #0
	ldrsh r1, [r1, r3]
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0805AA7C @ =0xFFFFFC00
	ldr r1, [r6, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r6, #4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #3
	adds r0, r7, r0
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0x18
	beq _0805AA80
	movs r3, #0xc3
	lsls r3, r3, #3
	adds r0, r5, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _0805AA58 @ =0xFFFF0FFF
	mov r4, sb
	ldr r1, [r4, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r4, #4]
	ldr r1, _0805AA44 @ =0xFFFF3FFF
	ldr r0, [sp, #0x5c]
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	ldr r1, _0805AA54 @ =0x3FFFFFFF
	ands r0, r1
	b _0805AAB0
	.align 2, 0
_0805AA38: .4byte 0xFFFFFCFF
_0805AA3C: .4byte 0xFFFFF3FF
_0805AA40: .4byte 0xFFFFDFFF
_0805AA44: .4byte 0xFFFF3FFF
_0805AA48: .4byte 0xF1FFFFFF
_0805AA4C: .4byte 0xEFFFFFFF
_0805AA50: .4byte 0xDFFFFFFF
_0805AA54: .4byte 0x3FFFFFFF
_0805AA58: .4byte 0xFFFF0FFF
_0805AA5C: .4byte 0x0000FFFF
_0805AA60: .4byte 0x00000BD8
_0805AA64: .4byte 0x0000073C
_0805AA68: .4byte 0x0000073E
_0805AA6C: .4byte 0x000001FF
_0805AA70: .4byte 0xFE00FFFF
_0805AA74: .4byte 0x0000073A
_0805AA78: .4byte 0xFFFFFF00
_0805AA7C: .4byte 0xFFFFFC00
_0805AA80:
	movs r1, #0xc4
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _0805AAF8 @ =0xFFFF0FFF
	mov r3, sb
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r3, #4]
	ldr r1, _0805AAFC @ =0xFFFF3FFF
	ldr r0, [sp, #0x5c]
	ands r0, r1
	ldr r1, _0805AB00 @ =0x3FFFFFFF
	ands r0, r1
	adds r1, #1
	orrs r0, r1
_0805AAB0:
	str r0, [sp, #0x5c]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _0805AAD4
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp, #0x5c]
	str r0, [r1]
	mov r4, sb
	ldrh r0, [r4, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_0805AAD4:
	ldr r2, _0805AB04 @ =0x00000BD8
	adds r1, r5, r2
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _0805AAE6
	b _0805A972
_0805AAE6:
	add sp, #0x68
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805AAF8: .4byte 0xFFFF0FFF
_0805AAFC: .4byte 0xFFFF3FFF
_0805AB00: .4byte 0x3FFFFFFF
_0805AB04: .4byte 0x00000BD8

	thumb_func_start func_0805AB08
func_0805AB08: @ 0x0805AB08
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r7, r0, #0
	ldr r1, _0805AC20 @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	movs r4, #1
	rsbs r4, r4, #0
	ldr r1, _0805AC24 @ =0x0600C800
	movs r5, #0x80
	lsls r5, r5, #5
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r1, _0805AC28 @ =0x0600D800
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r1, _0805AC2C @ =0x0600E800
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r0, _0805AC30 @ =0x0872F11C
	ldr r2, _0805AC34 @ =0x00000BEA
	adds r1, r7, r2
	bl func_080D102C
	ldr r0, _0805AC38 @ =0x0872F1BC
	ldr r3, _0805AC3C @ =0x00000CEA
	adds r1, r7, r3
	bl func_080D102C
	ldr r0, _0805AC40 @ =0x0872F1EC
	ldr r2, _0805AC44 @ =0x00000DEA
	adds r1, r7, r2
	bl func_080D102C
	ldr r0, _0805AC48 @ =0x0872FBFC
	ldr r3, _0805AC4C @ =0x00000EEA
	adds r1, r7, r3
	bl func_080D102C
	ldr r0, _0805AC50 @ =0x0872F21C
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl func_080D102C
	ldr r0, _0805AC54 @ =0x0872FA9C
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #2
	bl func_08008E64
	adds r0, r7, #0
	bl func_08008918
	mov r2, sp
	movs r3, #0xf2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	adds r0, r7, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _0805AC58 @ =0x00005943
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	adds r0, r7, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _0805AC5C @ =0x00005B42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r7, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _0805AC60 @ =0x00005D41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	movs r1, #0
_0805ABCA:
	movs r0, #0
	mov sb, r0
	lsls r0, r1, #1
	lsls r2, r1, #6
	mov r8, r2
	adds r3, r1, #1
	str r3, [sp, #0x10]
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _0805AC4C @ =0x00000EEA
	adds r1, r0, r1
	str r1, [sp, #8]
	ldr r2, _0805AC44 @ =0x00000DEA
	adds r2, r0, r2
	str r2, [sp, #0xc]
	ldr r6, _0805AC2C @ =0x0600E800
	add r6, r8
	ldr r5, _0805AC28 @ =0x0600D800
	add r5, r8
	ldr r4, _0805AC24 @ =0x0600C800
	add r4, r8
	ldr r3, _0805AC34 @ =0x00000BEA
	adds r3, r0, r3
	str r3, [sp, #4]
	ldr r1, _0805AC3C @ =0x00000CEA
	adds r1, r1, r0
	mov sl, r1
_0805AC00:
	ldr r2, [sp, #4]
	adds r0, r7, r2
	adds r1, r4, #0
	movs r2, #0xc
	bl func_08008E64
	mov r3, sb
	cmp r3, #0x12
	beq _0805AC64
	mov r1, sl
	adds r0, r7, r1
	adds r1, r5, #0
	movs r2, #0xc
	bl func_08008E64
	b _0805AC72
	.align 2, 0
_0805AC20: .4byte 0x06007FE0
_0805AC24: .4byte 0x0600C800
_0805AC28: .4byte 0x0600D800
_0805AC2C: .4byte 0x0600E800
_0805AC30: .4byte 0x0872F11C
_0805AC34: .4byte 0x00000BEA
_0805AC38: .4byte 0x0872F1BC
_0805AC3C: .4byte 0x00000CEA
_0805AC40: .4byte 0x0872F1EC
_0805AC44: .4byte 0x00000DEA
_0805AC48: .4byte 0x0872FBFC
_0805AC4C: .4byte 0x00000EEA
_0805AC50: .4byte 0x0872F21C
_0805AC54: .4byte 0x0872FA9C
_0805AC58: .4byte 0x00005943
_0805AC5C: .4byte 0x00005B42
_0805AC60: .4byte 0x00005D41
_0805AC64:
	ldr r2, [sp, #8]
	adds r0, r7, r2
	ldr r1, _0805AD04 @ =0x0600D824
	add r1, r8
	movs r2, #0xc
	bl func_08008E64
_0805AC72:
	ldr r3, [sp, #0xc]
	adds r0, r7, r3
	adds r1, r6, #0
	movs r2, #0xc
	bl func_08008E64
	adds r6, #0xc
	adds r5, #0xc
	adds r4, #0xc
	movs r0, #6
	add sb, r0
	mov r1, sb
	cmp r1, #0x1d
	ble _0805AC00
	ldr r1, [sp, #0x10]
	cmp r1, #0x1f
	ble _0805ABCA
	movs r4, #0
	ldr r2, _0805AD08 @ =0x000013EA
	adds r0, r7, r2
	movs r1, #0xc0
	lsls r1, r1, #3
	strh r1, [r0]
	ldr r3, _0805AD0C @ =0x000013EC
	adds r0, r7, r3
	strh r1, [r0]
	adds r2, #4
	adds r0, r7, r2
	strh r1, [r0]
	adds r3, #4
	adds r0, r7, r3
	strh r4, [r0]
	ldr r1, _0805AD10 @ =0x000013F2
	adds r0, r7, r1
	strh r4, [r0]
	adds r2, #6
	adds r0, r7, r2
	strh r4, [r0]
	adds r3, #6
	adds r0, r7, r3
	strh r4, [r0]
	adds r1, #6
	adds r0, r7, r1
	strh r4, [r0]
	adds r2, #6
	adds r0, r7, r2
	strh r4, [r0]
	adds r0, r7, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x16]
	adds r0, r7, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1a]
	adds r0, r7, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805AD04: .4byte 0x0600D824
_0805AD08: .4byte 0x000013EA
_0805AD0C: .4byte 0x000013EC
_0805AD10: .4byte 0x000013F2

	thumb_func_start func_0805AD14
func_0805AD14: @ 0x0805AD14
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x68
	mov sl, r0
	bl func_08008918
	mov r2, sp
	ldr r1, _0805ADF8 @ =0x000013EA
	add r1, sl
	ldrh r1, [r1]
	strh r1, [r2]
	strh r1, [r0, #0x14]
	mov r0, sl
	bl func_08008918
	mov r2, sp
	ldr r1, _0805ADFC @ =0x000013EC
	add r1, sl
	ldrh r1, [r1]
	strh r1, [r2]
	strh r1, [r0, #0x18]
	mov r0, sl
	bl func_08008918
	mov r2, sp
	ldr r3, _0805AE00 @ =0x000013EE
	add r3, sl
	ldrh r1, [r3]
	strh r1, [r2]
	strh r1, [r0, #0x1c]
	ldr r2, _0805AE04 @ =0x000013F4
	add r2, sl
	ldrh r0, [r3]
	ldr r1, _0805AE08 @ =0x0000FFF0
	ands r1, r0
	ldrh r0, [r2]
	cmp r0, r1
	bne _0805AD68
	b _0805AEF0
_0805AD68:
	strh r1, [r2]
	ldr r1, _0805AE0C @ =0x000013FA
	add r1, sl
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0805AD7E
	movs r0, #2
	strh r0, [r1]
_0805AD7E:
	ldrh r0, [r2]
	subs r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #1
	ands r0, r1
	asrs r2, r0, #3
	movs r7, #0
	asrs r0, r0, #8
	lsls r0, r0, #0xb
	str r0, [sp, #0x38]
	mov r0, sp
	adds r0, #4
	str r0, [sp, #0x3c]
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #1
	str r2, [sp, #0x34]
_0805ADA0:
	mov r0, sl
	bl func_08008910
	ldr r1, _0805AE0C @ =0x000013FA
	add r1, sl
	movs r3, #0
	ldrsh r2, [r1, r3]
	lsls r1, r7, #1
	adds r1, r1, r7
	adds r1, r1, r2
	adds r5, r0, #0
	lsls r1, r1, #2
	add r1, sl
	ldr r4, _0805AE10 @ =0x00000BEA
	adds r1, r1, r4
	lsls r2, r7, #6
	ldr r6, [sp, #0x38]
	adds r2, r6, r2
	ldr r0, [sp, #0x34]
	adds r2, r0, r2
	ldr r3, _0805AE14 @ =0x0600C800
	adds r2, r2, r3
	add r0, sp, #4
	movs r3, #4
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0805AE18
	cmp r1, #0
	beq _0805ADEC
	adds r0, r1, #0
	ldr r1, [sp, #0x3c]
	ldm r1!, {r2, r4, r6}
	stm r0!, {r2, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_0805ADEC:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	adds r3, r7, #1
	str r3, [sp, #0x64]
	b _0805AEE8
	.align 2, 0
_0805ADF8: .4byte 0x000013EA
_0805ADFC: .4byte 0x000013EC
_0805AE00: .4byte 0x000013EE
_0805AE04: .4byte 0x000013F4
_0805AE08: .4byte 0x0000FFF0
_0805AE0C: .4byte 0x000013FA
_0805AE10: .4byte 0x00000BEA
_0805AE14: .4byte 0x0600C800
_0805AE18:
	str r1, [sp, #0x60]
	movs r0, #1
	str r0, [sp, #0x18]
	ldr r0, [r5]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x14]
	add r1, sp, #0x18
	add r0, sp, #0x14
	cmp r4, #1
	bhs _0805AE32
	adds r0, r1, #0
_0805AE32:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805AE50
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0805AE54
	mov r0, sb
	bl func_080D3BC0
	b _0805AE54
_0805AE50:
	movs r0, #0
	mov sb, r0
_0805AE54:
	adds r4, r0, #0
	mov r8, r4
	ldr r2, [r5]
	mov r3, r8
	adds r6, r7, #1
	str r6, [sp, #0x64]
	ldr r7, [sp, #0x60]
	cmp r2, r7
	beq _0805AE80
_0805AE66:
	cmp r3, #0
	beq _0805AE76
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805AE76:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x60]
	cmp r2, r0
	bne _0805AE66
_0805AE80:
	adds r4, r3, #0
	ldr r0, [sp, #0x18]
	cmp r0, #1
	bne _0805AE9C
	cmp r4, #0
	beq _0805AE98
	adds r0, r4, #0
	ldr r1, [sp, #0x3c]
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0805AE98:
	adds r4, #0x10
	b _0805AEC4
_0805AE9C:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _0805AEC2
_0805AEA4:
	cmp r2, #0
	beq _0805AEB4
	adds r0, r2, #0
	ldr r1, [sp, #0x3c]
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805AEB4:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _0805AEA4
_0805AEC2:
	adds r4, r2, #0
_0805AEC4:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _0805AED4
_0805AECE:
	adds r1, #0x10
	cmp r1, r2
	bne _0805AECE
_0805AED4:
	cmp r0, #0
	beq _0805AEDC
	bl free
_0805AEDC:
	mov r0, sb
	add r0, r8
	mov r1, r8
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0805AEE8:
	ldr r7, [sp, #0x64]
	cmp r7, #0x13
	bgt _0805AEF0
	b _0805ADA0
_0805AEF0:
	ldr r2, _0805AFA4 @ =0x000013F2
	add r2, sl
	ldr r0, _0805AFA8 @ =0x000013EC
	add r0, sl
	ldrh r0, [r0]
	ldr r1, _0805AFAC @ =0x0000FFF0
	ands r1, r0
	ldrh r0, [r2]
	cmp r0, r1
	bne _0805AF06
	b _0805B1E8
_0805AF06:
	strh r1, [r2]
	ldr r1, _0805AFB0 @ =0x000013F8
	add r1, sl
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0805AF1C
	movs r0, #2
	strh r0, [r1]
_0805AF1C:
	ldrh r0, [r2]
	adds r3, r0, #0
	subs r3, #0x10
	movs r1, #0xf8
	lsls r1, r1, #1
	ands r3, r1
	asrs r2, r3, #3
	subs r0, #0x90
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x2f
	bls _0805AF36
	b _0805B096
_0805AF36:
	movs r7, #3
	asrs r3, r3, #8
	str r3, [sp, #0x5c]
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #1
	str r2, [sp, #0x40]
	mov r2, sp
	str r2, [sp, #0x44]
_0805AF48:
	mov r0, sl
	bl func_08008910
	ldr r1, _0805AFB0 @ =0x000013F8
	add r1, sl
	movs r3, #0
	ldrsh r2, [r1, r3]
	lsls r1, r7, #1
	adds r1, r1, r7
	adds r1, r1, r2
	adds r5, r0, #0
	lsls r1, r1, #2
	add r1, sl
	ldr r4, _0805AFB4 @ =0x00000EEA
	adds r1, r1, r4
	ldr r6, [sp, #0x5c]
	lsls r2, r6, #0xb
	lsls r0, r7, #6
	adds r2, r2, r0
	ldr r0, [sp, #0x40]
	adds r2, r0, r2
	ldr r3, _0805AFB8 @ =0x0600D800
	adds r2, r2, r3
	mov r0, sp
	movs r3, #4
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0805AFBC
	cmp r1, #0
	beq _0805AF96
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r4, r6}
	stm r0!, {r2, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_0805AF96:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	adds r3, r7, #1
	str r3, [sp, #0x64]
	b _0805B08C
	.align 2, 0
_0805AFA4: .4byte 0x000013F2
_0805AFA8: .4byte 0x000013EC
_0805AFAC: .4byte 0x0000FFF0
_0805AFB0: .4byte 0x000013F8
_0805AFB4: .4byte 0x00000EEA
_0805AFB8: .4byte 0x0600D800
_0805AFBC:
	str r1, [sp, #0x60]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r0, [r5]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r1, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _0805AFD6
	adds r0, r1, #0
_0805AFD6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805AFF4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0805AFF8
	mov r0, sb
	bl func_080D3BC0
	b _0805AFF8
_0805AFF4:
	movs r0, #0
	mov sb, r0
_0805AFF8:
	adds r4, r0, #0
	mov r8, r4
	ldr r2, [r5]
	mov r3, r8
	adds r6, r7, #1
	str r6, [sp, #0x64]
	ldr r7, [sp, #0x60]
	cmp r2, r7
	beq _0805B024
_0805B00A:
	cmp r3, #0
	beq _0805B01A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805B01A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x60]
	cmp r2, r0
	bne _0805B00A
_0805B024:
	adds r4, r3, #0
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _0805B040
	cmp r4, #0
	beq _0805B03C
	adds r0, r4, #0
	ldr r1, [sp, #0x44]
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0805B03C:
	adds r4, #0x10
	b _0805B068
_0805B040:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _0805B066
_0805B048:
	cmp r2, #0
	beq _0805B058
	adds r0, r2, #0
	ldr r1, [sp, #0x44]
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805B058:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _0805B048
_0805B066:
	adds r4, r2, #0
_0805B068:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _0805B078
_0805B072:
	adds r1, #0x10
	cmp r1, r2
	bne _0805B072
_0805B078:
	cmp r0, #0
	beq _0805B080
	bl free
_0805B080:
	mov r0, sb
	add r0, r8
	mov r1, r8
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0805B08C:
	ldr r7, [sp, #0x64]
	cmp r7, #0x11
	bgt _0805B094
	b _0805AF48
_0805B094:
	b _0805B1E8
_0805B096:
	movs r7, #3
	asrs r3, r3, #8
	str r3, [sp, #0x5c]
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #1
	str r2, [sp, #0x48]
	mov r2, sp
	str r2, [sp, #0x4c]
_0805B0A8:
	mov r0, sl
	bl func_08008910
	ldr r1, _0805B104 @ =0x000013F8
	add r1, sl
	movs r3, #0
	ldrsh r2, [r1, r3]
	lsls r1, r7, #1
	adds r1, r1, r7
	adds r1, r1, r2
	adds r5, r0, #0
	lsls r1, r1, #2
	add r1, sl
	ldr r4, _0805B108 @ =0x00000CEA
	adds r1, r1, r4
	ldr r6, [sp, #0x5c]
	lsls r2, r6, #0xb
	lsls r0, r7, #6
	adds r2, r2, r0
	ldr r0, [sp, #0x48]
	adds r2, r0, r2
	ldr r3, _0805B10C @ =0x0600D800
	adds r2, r2, r3
	mov r0, sp
	movs r3, #4
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0805B110
	cmp r1, #0
	beq _0805B0F6
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r4, r6}
	stm r0!, {r2, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_0805B0F6:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	adds r3, r7, #1
	str r3, [sp, #0x64]
	b _0805B1E0
	.align 2, 0
_0805B104: .4byte 0x000013F8
_0805B108: .4byte 0x00000CEA
_0805B10C: .4byte 0x0600D800
_0805B110:
	str r1, [sp, #0x60]
	movs r0, #1
	str r0, [sp, #0x28]
	ldr r0, [r5]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x24]
	add r1, sp, #0x28
	add r0, sp, #0x24
	cmp r4, #1
	bhs _0805B12A
	adds r0, r1, #0
_0805B12A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805B148
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0805B14C
	mov r0, sb
	bl func_080D3BC0
	b _0805B14C
_0805B148:
	movs r0, #0
	mov sb, r0
_0805B14C:
	adds r4, r0, #0
	mov r8, r4
	ldr r2, [r5]
	mov r3, r8
	adds r6, r7, #1
	str r6, [sp, #0x64]
	ldr r7, [sp, #0x60]
	cmp r2, r7
	beq _0805B178
_0805B15E:
	cmp r3, #0
	beq _0805B16E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805B16E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x60]
	cmp r2, r0
	bne _0805B15E
_0805B178:
	adds r4, r3, #0
	ldr r0, [sp, #0x28]
	cmp r0, #1
	bne _0805B194
	cmp r4, #0
	beq _0805B190
	adds r0, r4, #0
	ldr r1, [sp, #0x4c]
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0805B190:
	adds r4, #0x10
	b _0805B1BC
_0805B194:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _0805B1BA
_0805B19C:
	cmp r2, #0
	beq _0805B1AC
	adds r0, r2, #0
	ldr r1, [sp, #0x4c]
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805B1AC:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _0805B19C
_0805B1BA:
	adds r4, r2, #0
_0805B1BC:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _0805B1CC
_0805B1C6:
	adds r1, #0x10
	cmp r1, r2
	bne _0805B1C6
_0805B1CC:
	cmp r0, #0
	beq _0805B1D4
	bl free
_0805B1D4:
	mov r0, sb
	add r0, r8
	mov r1, r8
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0805B1E0:
	ldr r7, [sp, #0x64]
	cmp r7, #0x11
	bgt _0805B1E8
	b _0805B0A8
_0805B1E8:
	ldr r2, _0805B28C @ =0x000013F0
	add r2, sl
	ldr r0, _0805B290 @ =0x000013EA
	add r0, sl
	ldrh r0, [r0]
	ldr r1, _0805B294 @ =0x0000FFF0
	ands r1, r0
	ldrh r0, [r2]
	cmp r0, r1
	bne _0805B1FE
	b _0805B37C
_0805B1FE:
	strh r1, [r2]
	ldr r1, _0805B298 @ =0x000013F6
	add r1, sl
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0805B214
	movs r0, #2
	strh r0, [r1]
_0805B214:
	ldrh r0, [r2]
	subs r0, #0x10
	movs r1, #0xf8
	lsls r1, r1, #1
	ands r0, r1
	asrs r2, r0, #3
	movs r7, #0x11
	asrs r0, r0, #8
	lsls r0, r0, #0xb
	str r0, [sp, #0x54]
	mov r3, sp
	str r3, [sp, #0x58]
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #1
	str r2, [sp, #0x50]
_0805B234:
	mov r0, sl
	bl func_08008910
	ldr r1, _0805B298 @ =0x000013F6
	add r1, sl
	movs r4, #0
	ldrsh r2, [r1, r4]
	lsls r1, r7, #1
	adds r1, r1, r7
	adds r1, r1, r2
	adds r5, r0, #0
	lsls r1, r1, #2
	add r1, sl
	ldr r6, _0805B29C @ =0x00000DEA
	adds r1, r1, r6
	lsls r2, r7, #6
	ldr r0, [sp, #0x54]
	adds r2, r0, r2
	ldr r3, [sp, #0x50]
	adds r2, r3, r2
	ldr r4, _0805B2A0 @ =0x0600E800
	adds r2, r2, r4
	mov r0, sp
	movs r3, #4
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0805B2A4
	cmp r1, #0
	beq _0805B280
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0805B280:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	adds r4, r7, #1
	str r4, [sp, #0x64]
	b _0805B374
	.align 2, 0
_0805B28C: .4byte 0x000013F0
_0805B290: .4byte 0x000013EA
_0805B294: .4byte 0x0000FFF0
_0805B298: .4byte 0x000013F6
_0805B29C: .4byte 0x00000DEA
_0805B2A0: .4byte 0x0600E800
_0805B2A4:
	str r1, [sp, #0x60]
	movs r0, #1
	str r0, [sp, #0x30]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x2c]
	add r1, sp, #0x30
	add r0, sp, #0x2c
	cmp r4, #1
	bhs _0805B2BE
	adds r0, r1, #0
_0805B2BE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805B2DC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0805B2E0
	mov r0, sb
	bl func_080D3BC0
	b _0805B2E0
_0805B2DC:
	movs r0, #0
	mov sb, r0
_0805B2E0:
	adds r4, r0, #0
	mov r8, r4
	ldr r2, [r5]
	mov r3, r8
	adds r0, r7, #1
	str r0, [sp, #0x64]
	ldr r1, [sp, #0x60]
	cmp r2, r1
	beq _0805B30C
_0805B2F2:
	cmp r3, #0
	beq _0805B302
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805B302:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x60]
	cmp r2, r0
	bne _0805B2F2
_0805B30C:
	adds r4, r3, #0
	ldr r0, [sp, #0x30]
	cmp r0, #1
	bne _0805B328
	cmp r4, #0
	beq _0805B324
	adds r0, r4, #0
	ldr r1, [sp, #0x58]
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0805B324:
	adds r4, #0x10
	b _0805B350
_0805B328:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _0805B34E
_0805B330:
	cmp r2, #0
	beq _0805B340
	adds r0, r2, #0
	ldr r1, [sp, #0x58]
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805B340:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _0805B330
_0805B34E:
	adds r4, r2, #0
_0805B350:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _0805B360
_0805B35A:
	adds r1, #0x10
	cmp r1, r2
	bne _0805B35A
_0805B360:
	cmp r0, #0
	beq _0805B368
	bl free
_0805B368:
	mov r0, sb
	add r0, r8
	mov r1, r8
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0805B374:
	ldr r7, [sp, #0x64]
	cmp r7, #0x13
	bgt _0805B37C
	b _0805B234
_0805B37C:
	add sp, #0x68
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0805B38C
func_0805B38C: @ 0x0805B38C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x90
	mov r8, r0
	mov r1, sp
	movs r0, #0
	str r0, [sp]
	strh r0, [r1, #4]
	add r6, sp, #8
	str r0, [sp, #8]
	strh r0, [r6, #4]
	add r5, sp, #0x10
	str r0, [sp, #0x10]
	strh r0, [r5, #4]
	add r1, sp, #0x18
	str r0, [sp, #0x18]
	strh r0, [r1, #4]
	movs r0, #0xe8
	lsls r0, r0, #1
	add r0, r8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r0, #0xea
	lsls r0, r0, #1
	add r0, r8
	mov sb, r0
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x20
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	adds r0, r4, #0
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r7, [sp, #0x10]
	movs r0, #0xb9
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _0805B6BC @ =0x05000200
	adds r1, r0, r2
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B414
	mov r3, sp
	ldrh r2, [r3, #0x14]
_0805B414:
	adds r0, r7, #0
	bl func_08008E64
	movs r7, #0
	movs r6, #0
	mov sl, sb
	movs r4, #0x83
	lsls r4, r4, #2
	add r4, r8
	str r4, [sp, #0x5c]
	movs r5, #0x91
	lsls r5, r5, #2
	add r5, r8
	str r5, [sp, #0x70]
	movs r0, #0xad
	lsls r0, r0, #2
	add r0, r8
	str r0, [sp, #0x80]
	mov r2, r8
	adds r2, #0x50
	str r2, [sp, #0x6c]
	movs r3, #0xc9
	lsls r3, r3, #2
	add r3, r8
	str r3, [sp, #0x88]
	mov r4, r8
	adds r4, #0x80
	str r4, [sp, #0x78]
	mov r5, sp
	adds r5, #0x40
	str r5, [sp, #0x60]
	mov r0, r8
	adds r0, #0xe0
	str r0, [sp, #0x84]
	mov r2, sp
	adds r2, #0x48
	str r2, [sp, #0x64]
	ldr r3, _0805B6C0 @ =0x00000474
	add r3, r8
	str r3, [sp, #0x7c]
	mov r4, sp
	adds r4, #0x50
	str r4, [sp, #0x68]
	ldr r5, _0805B6C4 @ =0x0000058C
	add r5, r8
	str r5, [sp, #0x8c]
	movs r5, #0xe8
	lsls r5, r5, #1
	add r5, r8
	add r0, sp, #0x20
	mov sb, r0
_0805B47A:
	adds r0, r5, #0
	adds r1, r6, #0
	bl func_0805E860
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	mov r4, sl
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #8]
	movs r0, #0xb8
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r0, r0, r7
	lsls r0, r0, #5
	ldr r2, _0805B6C8 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805B4D6
	mov r3, sp
	ldrh r2, [r3, #0xc]
_0805B4D6:
	adds r0, r4, #0
	bl func_08008E64
	ldr r0, [sp, #8]
	movs r1, #0
	cmp r0, #0
	beq _0805B4E8
	mov r4, sp
	ldrh r1, [r4, #0xc]
_0805B4E8:
	lsrs r0, r1, #5
	adds r7, r7, r0
	adds r6, #1
	cmp r6, #3
	ble _0805B47A
	movs r0, #0x82
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r5, [sp, #0x5c]
	ldr r0, [r5]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sb
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #0x20
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #0x10]
	movs r0, #0xcc
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r5, _0805B6BC @ =0x05000200
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B54A
	mov r7, sp
	ldrh r2, [r7, #0x14]
_0805B54A:
	lsrs r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	ldr r1, [sp, #0x10]
	movs r0, #0
	cmp r1, #0
	beq _0805B55E
	mov r2, sp
	ldrh r0, [r2, #0x14]
_0805B55E:
	lsrs r0, r0, #1
	adds r4, r1, r0
	movs r0, #0xcd
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B57E
	mov r3, sp
	ldrh r2, [r3, #0x14]
_0805B57E:
	lsrs r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	movs r0, #0x90
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x70]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #0x20
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r4, r7}
	stm r1!, {r2, r4, r7}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r4, [sp, #0x10]
	movs r0, #0xcf
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B5DC
	mov r7, sp
	ldrh r2, [r7, #0x14]
_0805B5DC:
	lsrs r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	ldr r1, [sp, #0x10]
	movs r0, #0
	cmp r1, #0
	beq _0805B5F0
	mov r2, sp
	ldrh r0, [r2, #0x14]
_0805B5F0:
	lsrs r0, r0, #1
	adds r4, r1, r0
	movs r0, #0xd0
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B610
	mov r3, sp
	ldrh r2, [r3, #0x14]
_0805B610:
	lsrs r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	ldr r0, _0805B6CC @ =0x0000140E
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805B6D0
	movs r0, #0x9e
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r0, #0x9f
	lsls r0, r0, #2
	add r0, r8
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #0x20
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r4, r7}
	stm r1!, {r2, r4, r7}
	ldm r0!, {r3, r4, r7}
	stm r1!, {r3, r4, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #0x10]
	movs r0, #0xd2
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B67C
	mov r7, sp
	ldrh r2, [r7, #0x14]
_0805B67C:
	lsrs r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	ldr r1, [sp, #0x10]
	movs r0, #0
	cmp r1, #0
	beq _0805B690
	mov r2, sp
	ldrh r0, [r2, #0x14]
_0805B690:
	lsrs r0, r0, #1
	adds r4, r1, r0
	movs r0, #0xd3
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B6B0
	mov r3, sp
	ldrh r2, [r3, #0x14]
_0805B6B0:
	lsrs r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	b _0805B766
	.align 2, 0
_0805B6BC: .4byte 0x05000200
_0805B6C0: .4byte 0x00000474
_0805B6C4: .4byte 0x0000058C
_0805B6C8: .4byte 0x06010000
_0805B6CC: .4byte 0x0000140E
_0805B6D0:
	movs r0, #0xba
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r0, #0xbb
	lsls r0, r0, #2
	add r0, r8
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #0x20
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r4, r7}
	stm r1!, {r2, r4, r7}
	ldm r0!, {r3, r4, r7}
	stm r1!, {r3, r4, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #0x10]
	movs r0, #0xd2
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B72A
	mov r7, sp
	ldrh r2, [r7, #0x14]
_0805B72A:
	lsrs r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	ldr r1, [sp, #0x10]
	movs r0, #0
	cmp r1, #0
	beq _0805B73E
	mov r2, sp
	ldrh r0, [r2, #0x14]
_0805B73E:
	lsrs r0, r0, #1
	adds r4, r1, r0
	movs r0, #0xd3
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B75E
	mov r3, sp
	ldrh r2, [r3, #0x14]
_0805B75E:
	lsrs r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
_0805B766:
	movs r0, #0xac
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x80]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #0x20
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	ldr r4, [sp, #0x10]
	movs r0, #0xd5
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r5, _0805BB48 @ =0x05000200
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B7BE
	mov r3, sp
	ldrh r2, [r3, #0x14]
_0805B7BE:
	lsrs r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	ldr r1, [sp, #0x10]
	movs r0, #0
	cmp r1, #0
	beq _0805B7D2
	mov r4, sp
	ldrh r0, [r4, #0x14]
_0805B7D2:
	lsrs r0, r0, #1
	adds r4, r1, r0
	movs r0, #0xd6
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B7F2
	mov r7, sp
	ldrh r2, [r7, #0x14]
_0805B7F2:
	lsrs r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	ldr r1, [sp, #0x6c]
	add r0, sp, #0x20
	movs r2, #0
	bl func_0805E790
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r7}
	stm r1!, {r4, r7}
	ldr r4, [sp, #0x10]
	movs r0, #0xbb
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B832
	mov r0, sp
	ldrh r2, [r0, #0x14]
_0805B832:
	adds r0, r4, #0
	bl func_08008E64
	ldr r5, [sp, #8]
	movs r4, #0xba
	lsls r4, r4, #3
	add r4, r8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r2, _0805BB4C @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805B85A
	mov r3, sp
	ldrh r2, [r3, #0xc]
_0805B85A:
	adds r0, r5, #0
	bl func_08008E64
	add r0, sp, #0x20
	ldr r1, [sp, #0x6c]
	movs r2, #1
	bl func_0805E790
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r5, r7}
	stm r1!, {r3, r5, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r5, [sp, #8]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r4, _0805BB50 @ =0x06010100
	adds r1, r0, r4
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805B896
	mov r7, sp
	ldrh r2, [r7, #0xc]
_0805B896:
	adds r0, r5, #0
	bl func_08008E64
	movs r3, #0
	ldr r0, _0805BB54 @ =0x0000FFFF
	adds r4, r0, #0
	movs r2, #0xd7
	lsls r2, r2, #3
	add r2, r8
_0805B8A8:
	ldrh r0, [r2]
	orrs r0, r4
	strh r0, [r2]
	asrs r1, r3, #3
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, #0x40
	strh r0, [r2, #2]
	adds r2, #4
	adds r3, #1
	cmp r3, #0x1f
	ble _0805B8A8
	movs r0, #0xc8
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x88]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #0x20
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	ldr r4, [sp, #0x10]
	movs r0, #0xbd
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r3, _0805BB48 @ =0x05000200
	adds r1, r0, r3
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B91A
	mov r5, sp
	ldrh r2, [r5, #0x14]
_0805B91A:
	adds r0, r4, #0
	bl func_08008E64
	movs r7, #0
	movs r0, #0
	mov sl, r0
	ldr r5, [sp, #0x78]
	add r2, sp, #0x20
	mov sb, r2
	mov r3, sp
	adds r3, #8
	str r3, [sp, #0x58]
_0805B932:
	movs r6, #0
	mov r4, sl
	adds r4, #1
	str r4, [sp, #0x74]
_0805B93A:
	ldr r4, [r5]
	ldr r0, [sp, #0x60]
	ldr r3, [r4, #0xc]
	adds r1, r5, #0
	mov r2, sl
	bl _call_via_r3
	lsls r1, r6, #2
	ldr r0, [sp, #0x40]
	adds r0, r0, r1
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r4, #0x10]
	adds r1, r5, #0
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #8]
	movs r0, #0xbc
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r0, r0, r7
	lsls r0, r0, #5
	ldr r2, _0805BB4C @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805B996
	mov r3, sp
	ldrh r2, [r3, #0xc]
_0805B996:
	adds r0, r4, #0
	bl func_08008E64
	ldr r0, [sp, #8]
	movs r1, #0
	cmp r0, #0
	beq _0805B9A8
	ldr r4, [sp, #0x58]
	ldrh r1, [r4, #4]
_0805B9A8:
	lsrs r0, r1, #5
	adds r7, r7, r0
	adds r6, #1
	cmp r6, #1
	ble _0805B93A
	ldr r0, [sp, #0x74]
	mov sl, r0
	cmp r0, #2
	ble _0805B932
	add r0, sp, #0x20
	ldr r1, [sp, #0x84]
	movs r2, #0
	bl func_0805E790
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r4, [sp, #0x10]
	movs r0, #0xbf
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r5, _0805BB48 @ =0x05000200
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805B9F4
	mov r7, sp
	ldrh r2, [r7, #0x14]
_0805B9F4:
	adds r0, r4, #0
	bl func_08008E64
	ldr r4, [sp, #8]
	movs r0, #0xbe
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r2, _0805BB4C @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805BA1A
	mov r3, sp
	ldrh r2, [r3, #0xc]
_0805BA1A:
	adds r0, r4, #0
	bl func_08008E64
	movs r7, #0
	movs r5, #0
	movs r6, #0x88
	lsls r6, r6, #1
	add r6, r8
	add r4, sp, #8
	mov sl, r4
	add r0, sp, #0x20
	mov sb, r0
_0805BA32:
	lsls r1, r5, #1
	ldr r0, _0805BB58 @ =0x00000BDA
	add r0, r8
	adds r0, r0, r1
	strh r7, [r0]
	ldr r4, [r6]
	ldr r0, [sp, #0x64]
	ldr r3, [r4, #0xc]
	adds r1, r6, #0
	movs r2, #0
	bl _call_via_r3
	lsls r1, r5, #2
	ldr r0, [sp, #0x48]
	adds r0, r0, r1
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r4, #0x10]
	adds r1, r6, #0
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #8]
	movs r0, #0xc5
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r0, r0, r7
	lsls r0, r0, #5
	ldr r2, _0805BB4C @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805BA98
	mov r3, sp
	ldrh r2, [r3, #0xc]
_0805BA98:
	adds r0, r4, #0
	bl func_08008E64
	ldr r0, [sp, #8]
	movs r1, #0
	cmp r0, #0
	beq _0805BAAA
	mov r4, sl
	ldrh r1, [r4, #4]
_0805BAAA:
	lsrs r0, r1, #5
	adds r7, r7, r0
	adds r5, #1
	cmp r5, #3
	ble _0805BA32
	movs r0, #0x8e
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r5, [sp, #0x7c]
	ldr r0, [r5]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sb
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #0x20
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #0x10]
	movs r0, #0xc7
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r5, _0805BB48 @ =0x05000200
	adds r1, r0, r5
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0805BB0C
	mov r7, sp
	ldrh r2, [r7, #0x14]
_0805BB0C:
	adds r0, r4, #0
	bl func_08008E64
	movs r7, #0
	movs r5, #0
	movs r6, #0xa0
	lsls r6, r6, #1
	add r6, r8
	add r0, sp, #8
	mov sl, r0
	add r2, sp, #0x20
	mov sb, r2
_0805BB24:
	lsls r1, r5, #1
	ldr r0, _0805BB5C @ =0x00000BE2
	add r0, r8
	adds r0, r0, r1
	strh r7, [r0]
	ldr r4, [r6]
	ldr r0, [sp, #0x68]
	ldr r3, [r4, #0xc]
	adds r1, r6, #0
	movs r2, #0
	bl _call_via_r3
	lsls r1, r5, #2
	ldr r0, [sp, #0x50]
	adds r0, r0, r1
	ldrh r2, [r0]
	b _0805BB60
	.align 2, 0
_0805BB48: .4byte 0x05000200
_0805BB4C: .4byte 0x06010000
_0805BB50: .4byte 0x06010100
_0805BB54: .4byte 0x0000FFFF
_0805BB58: .4byte 0x00000BDA
_0805BB5C: .4byte 0x00000BE2
_0805BB60:
	add r0, sp, #0x20
	ldr r3, [r4, #0x10]
	adds r1, r6, #0
	bl _call_via_r3
	mov r0, sb
	mov r1, sb
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r4, [sp, #8]
	movs r0, #0xc6
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r0, r0, r7
	lsls r0, r0, #5
	ldr r2, _0805BC30 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805BBA6
	mov r3, sp
	ldrh r2, [r3, #0xc]
_0805BBA6:
	adds r0, r4, #0
	bl func_08008E64
	ldr r0, [sp, #8]
	movs r1, #0
	cmp r0, #0
	beq _0805BBB8
	mov r4, sl
	ldrh r1, [r4, #4]
_0805BBB8:
	lsrs r0, r1, #5
	adds r7, r7, r0
	adds r5, #1
	cmp r5, #3
	ble _0805BB24
	movs r0, #0xb1
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r5, [sp, #0x8c]
	ldr r0, [r5]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, sb
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #0x20
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	add r0, sp, #0x20
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r5, r7}
	stm r1!, {r4, r5, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #8]
	movs r0, #0xca
	lsls r0, r0, #3
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r5, _0805BC30 @ =0x06010000
	adds r1, r0, r5
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0805BC1A
	mov r7, sp
	ldrh r2, [r7, #0xc]
_0805BC1A:
	adds r0, r4, #0
	bl func_08008E64
	add sp, #0x90
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805BC30: .4byte 0x06010000

	thumb_func_start func_0805BC34
func_0805BC34: @ 0x0805BC34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xa4
	adds r5, r0, #0
	movs r0, #0
	str r0, [sp, #0x68]
	add r0, sp, #4
	movs r1, #0
	add r2, sp, #0x68
	ldrh r2, [r2]
	strh r2, [r0]
	add r3, sp, #0x68
	ldrh r3, [r3]
	strh r3, [r0, #2]
	add r4, sp, #0x68
	ldrh r4, [r4]
	strh r4, [r0, #4]
	add r6, sp, #0x68
	ldrh r6, [r6]
	strh r6, [r0, #6]
	add r7, sp, #0x68
	ldrh r7, [r7]
	strh r7, [r0, #8]
	ldr r2, [sp, #0x68]
	str r2, [sp, #0x10]
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	str r2, [sp, #0x18]
	strb r1, [r0, #0x18]
	add r3, sp, #0x20
	str r2, [sp, #0x20]
	strh r2, [r3, #4]
	add r2, sp, #0x28
	ldr r6, [sp, #0x68]
	str r6, [sp, #0x28]
	strh r6, [r2, #4]
	add r0, sp, #0x30
	ldr r1, [sp, #0x68]
	str r1, [sp, #0x30]
	strh r1, [r0, #4]
	add r0, sp, #0x38
	ldr r6, [sp, #0x68]
	str r6, [sp, #0x38]
	strh r6, [r0, #4]
	ldr r1, _0805BE8C @ =0x00001427
	adds r0, r5, r1
	ldrb r1, [r0]
	movs r4, #1
	adds r0, r4, #0
	ands r0, r1
	adds r2, #0x18
	str r2, [sp, #0x84]
	cmp r0, #0
	beq _0805BD10
	adds r1, r5, #0
	adds r1, #0xe0
	adds r0, r2, #0
	movs r2, #0
	bl func_0805E790
	add r1, sp, #0x20
	ldr r0, [sp, #0x84]
	ldm r0!, {r3, r6, r7}
	stm r1!, {r3, r6, r7}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	add r0, sp, #4
	movs r1, #0x40
	strh r1, [r0]
	strh r1, [r0, #2]
	movs r3, #0xbf
	lsls r3, r3, #3
	adds r0, r5, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	add r1, sp, #4
	strh r0, [r1, #4]
	movs r6, #0xbe
	lsls r6, r6, #3
	adds r0, r5, r6
	ldr r1, [r0, #4]
	bl func_08007D4C
	add r1, sp, #4
	strh r0, [r1, #6]
	movs r0, #2
	strh r0, [r1, #8]
	adds r0, r1, #0
	strb r4, [r0, #0x18]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805BD08
	mov r7, sp
	ldrh r2, [r7, #0x24]
_0805BD08:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
_0805BD10:
	ldr r1, _0805BE90 @ =0x000013EC
	adds r0, r5, r1
	ldrh r1, [r0]
	movs r0, #0xb8
	lsls r0, r0, #3
	ldr r2, _0805BE94 @ =0x0000058C
	adds r2, r5, r2
	str r2, [sp, #0x90]
	cmp r1, r0
	bls _0805BDE6
	movs r3, #0
	mov sl, r3
	movs r4, #0xea
	lsls r4, r4, #1
	adds r4, r4, r5
	mov sb, r4
	movs r6, #0xe8
	lsls r6, r6, #1
	adds r6, r5, r6
	str r6, [sp, #0x98]
	add r4, sp, #4
	movs r7, #0x30
	mov r8, r7
	ldr r6, [sp, #0x84]
_0805BD40:
	ldr r0, [sp, #0x98]
	mov r1, sl
	bl func_0805E860
	ldr r0, [sp, #0x98]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	mov r7, sb
	ldr r0, [r7]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r6, #0
	adds r1, r6, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	adds r0, r6, #0
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r7, _0805BE90 @ =0x000013EC
	adds r0, r5, r7
	ldrh r1, [r0]
	movs r2, #0xdb
	lsls r2, r2, #3
	adds r0, r2, #0
	subs r0, r0, r1
	strh r0, [r4]
	mov r3, r8
	strh r3, [r4, #2]
	movs r7, #0xb9
	lsls r7, r7, #3
	adds r0, r5, r7
	ldr r1, [r0, #4]
	bl func_080074C0
	strh r0, [r4, #4]
	movs r1, #0xb8
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	mov r2, sl
	lsls r1, r2, #2
	adds r0, r0, r1
	strh r0, [r4, #6]
	movs r0, #2
	strh r0, [r4, #8]
	movs r0, #1
	strb r0, [r4, #0x18]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805BDD0
	mov r7, sp
	ldrh r2, [r7, #0x24]
_0805BDD0:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
	movs r0, #0x18
	add r8, r0
	movs r1, #1
	add sl, r1
	mov r2, sl
	cmp r2, #3
	ble _0805BD40
_0805BDE6:
	ldr r3, _0805BE8C @ =0x00001427
	adds r0, r5, r3
	ldrb r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0805BDF6
	b _0805BF60
_0805BDF6:
	movs r6, #0x8e
	lsls r6, r6, #2
	adds r4, r5, r6
	movs r7, #0x82
	lsls r7, r7, #2
	adds r0, r5, r7
	bl func_0805E8F0
	str r0, [r4]
	movs r0, #0x9c
	lsls r0, r0, #2
	adds r4, r5, r0
	movs r1, #0x90
	lsls r1, r1, #2
	adds r0, r5, r1
	bl func_0805E8F0
	str r0, [r4]
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r4, r5, r2
	movs r3, #0x9e
	lsls r3, r3, #2
	adds r0, r5, r3
	bl func_0805E8F0
	str r0, [r4]
	adds r6, #0xa8
	adds r4, r5, r6
	adds r7, #0xa8
	adds r0, r5, r7
	bl func_0805E8F0
	str r0, [r4]
	movs r0, #0xc6
	lsls r0, r0, #2
	adds r4, r5, r0
	movs r1, #0xba
	lsls r1, r1, #2
	adds r0, r5, r1
	bl func_0805E8F0
	str r0, [r4]
	ldr r2, _0805BE98 @ =0x0000140E
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805BEB6
	ldr r3, _0805BE9C @ =0x0000149E
	adds r0, r5, r3
	movs r4, #0
	ldrsh r0, [r0, r4]
	movs r2, #0
	cmp r0, #0xab
	bgt _0805BE6C
	movs r2, #2
	cmp r0, #0x55
	ble _0805BE6C
	movs r2, #1
_0805BE6C:
	ldr r6, _0805BEA0 @ =0x00001408
	adds r1, r5, r6
	movs r7, #0
	ldrsh r0, [r1, r7]
	cmp r0, r2
	beq _0805BEA4
	strh r2, [r1]
	movs r2, #0xc8
	lsls r2, r2, #2
	adds r0, r5, r2
	movs r3, #0
	ldrsh r1, [r1, r3]
	bl func_0805E860
	b _0805BEB6
	.align 2, 0
_0805BE8C: .4byte 0x00001427
_0805BE90: .4byte 0x000013EC
_0805BE94: .4byte 0x0000058C
_0805BE98: .4byte 0x0000140E
_0805BE9C: .4byte 0x0000149E
_0805BEA0: .4byte 0x00001408
_0805BEA4:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r4, r5, r6
	movs r7, #0xc8
	lsls r7, r7, #2
	adds r0, r5, r7
	bl func_0805E8F0
	str r0, [r4]
_0805BEB6:
	ldr r1, _0805BF14 @ =0x00001424
	adds r0, r5, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0x18
	bne _0805BEEA
	movs r3, #0xe4
	lsls r3, r3, #2
	adds r0, r5, r3
	bl func_0805E8F0
	movs r4, #0xf2
	lsls r4, r4, #2
	adds r0, r5, r4
	bl func_0805E8F0
	movs r6, #0x80
	lsls r6, r6, #3
	adds r0, r5, r6
	bl func_0805E8F0
	movs r7, #0x87
	lsls r7, r7, #3
	adds r0, r5, r7
	bl func_0805E8F0
_0805BEEA:
	movs r0, #0
	mov sl, r0
_0805BEEE:
	movs r0, #0x2c
	mov r1, sl
	muls r1, r0, r1
	adds r0, r1, #0
	adds r0, r5, r0
	ldr r2, _0805BF18 @ =0x0000144E
	adds r0, r0, r2
	ldrh r0, [r0]
	cmp r0, #1
	bls _0805BF56
	mov r3, sl
	cmp r3, #1
	beq _0805BF34
	cmp r3, #1
	bgt _0805BF1C
	cmp r3, #0
	beq _0805BF28
	b _0805BF56
	.align 2, 0
_0805BF14: .4byte 0x00001424
_0805BF18: .4byte 0x0000144E
_0805BF1C:
	mov r4, sl
	cmp r4, #2
	beq _0805BF40
	cmp r4, #3
	beq _0805BF4C
	b _0805BF56
_0805BF28:
	movs r6, #0x8e
	lsls r6, r6, #3
	adds r0, r5, r6
	bl func_0805E8F0
	b _0805BF56
_0805BF34:
	movs r7, #0x95
	lsls r7, r7, #3
	adds r0, r5, r7
	bl func_0805E8F0
	b _0805BF56
_0805BF40:
	movs r1, #0x9c
	lsls r1, r1, #3
	adds r0, r5, r1
	bl func_0805E8F0
	b _0805BF56
_0805BF4C:
	movs r2, #0xa3
	lsls r2, r2, #3
	adds r0, r5, r2
	bl func_0805E8F0
_0805BF56:
	movs r3, #1
	add sl, r3
	mov r4, sl
	cmp r4, #3
	ble _0805BEEE
_0805BF60:
	movs r6, #3
	mov sl, r6
	add r7, sp, #4
	mov r8, r7
	movs r0, #0xc8
	lsls r0, r0, #2
	adds r0, r5, r0
	str r0, [sp, #0x78]
	movs r1, #0xc9
	lsls r1, r1, #2
	adds r1, r5, r1
	str r1, [sp, #0x7c]
_0805BF78:
	ldr r2, _0805BFA0 @ =0x00001424
	adds r0, r5, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	mov r4, sl
	lsls r4, r4, #1
	str r4, [sp, #0x8c]
	cmp r0, #0x18
	beq _0805BF8C
	b _0805C17C
_0805BF8C:
	movs r7, #0
	mov r6, sl
	cmp r6, #1
	beq _0805BFBE
	cmp r6, #1
	bgt _0805BFA4
	cmp r6, #0
	beq _0805BFB0
	b _0805BFEC
	.align 2, 0
_0805BFA0: .4byte 0x00001424
_0805BFA4:
	mov r0, sl
	cmp r0, #2
	beq _0805BFCE
	cmp r0, #3
	beq _0805BFDE
	b _0805BFEC
_0805BFB0:
	movs r1, #0xe4
	lsls r1, r1, #2
	adds r1, r5, r1
	str r1, [sp, #0x68]
	movs r2, #0x8e
	lsls r2, r2, #3
	b _0805BFEA
_0805BFBE:
	movs r3, #0xf2
	lsls r3, r3, #2
	adds r3, r5, r3
	str r3, [sp, #0x68]
	movs r4, #0x95
	lsls r4, r4, #3
	adds r7, r5, r4
	b _0805BFEC
_0805BFCE:
	movs r6, #0x80
	lsls r6, r6, #3
	adds r6, r5, r6
	str r6, [sp, #0x68]
	movs r0, #0x9c
	lsls r0, r0, #3
	adds r7, r5, r0
	b _0805BFEC
_0805BFDE:
	movs r1, #0x87
	lsls r1, r1, #3
	adds r1, r5, r1
	str r1, [sp, #0x68]
	movs r2, #0xa3
	lsls r2, r2, #3
_0805BFEA:
	adds r7, r5, r2
_0805BFEC:
	ldr r3, [sp, #0x68]
	ldr r1, [r3]
	ldr r3, [r1]
	ldr r4, [sp, #0x68]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [r4, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r0, [sp, #0x84]
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	ldr r0, [sp, #0x84]
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r4, r6}
	stm r1!, {r2, r4, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	add r1, sp, #4
	ldr r0, [sp, #0x68]
	adds r0, #0x14
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r4, r6}
	stm r1!, {r2, r4, r6}
	ldr r0, [r0]
	str r0, [r1]
	movs r0, #0x2c
	mov r3, sl
	muls r3, r0, r3
	mov sb, r3
	movs r4, #0xa2
	lsls r4, r4, #5
	adds r0, r5, r4
	add r0, sb
	str r0, [sp, #0x6c]
	movs r6, #2
	ldrsh r1, [r0, r6]
	ldr r0, _0805C18C @ =0x000013EC
	adds r0, r5, r0
	str r0, [sp, #0x70]
	ldrh r0, [r0]
	subs r1, r1, r0
	mov r2, r8
	strh r1, [r2]
	mov r3, sl
	lsls r4, r3, #1
	adds r0, r4, r3
	lsls r0, r0, #3
	adds r0, #0x3c
	str r0, [sp, #0x74]
	strh r0, [r2, #2]
	movs r0, #2
	strh r0, [r2, #8]
	movs r1, #0xc7
	lsls r1, r1, #3
	adds r6, r5, r1
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl func_080074C0
	mov r2, r8
	strh r0, [r2, #4]
	movs r3, #0xc5
	lsls r3, r3, #3
	adds r0, r5, r3
	ldr r1, [r0, #4]
	bl func_08007D4C
	ldr r1, [sp, #0x68]
	ldrh r2, [r1, #0xc]
	lsls r2, r2, #2
	ldr r1, [r1, #4]
	adds r1, r1, r2
	ldrh r2, [r1]
	lsls r2, r2, #1
	ldr r3, _0805C190 @ =0x00000BDA
	adds r1, r5, r3
	adds r1, r1, r2
	ldrh r1, [r1]
	adds r1, r1, r0
	mov r0, r8
	strh r1, [r0, #6]
	movs r1, #1
	strb r1, [r0, #0x18]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	str r4, [sp, #0x8c]
	cmp r1, #0
	beq _0805C0BE
	mov r4, sp
	ldrh r2, [r4, #0x24]
_0805C0BE:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
	mov r1, sb
	adds r0, r5, r1
	ldr r2, _0805C194 @ =0x0000144E
	adds r0, r0, r2
	ldrh r0, [r0]
	cmp r0, #1
	bls _0805C17C
	ldr r1, [r7]
	ldr r3, [r1]
	ldrh r2, [r7, #0xc]
	lsls r2, r2, #2
	ldr r0, [r7, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	ldr r0, [sp, #0x84]
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r0, [sp, #0x84]
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	ldr r0, [sp, #0x84]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	add r1, sp, #4
	adds r0, r7, #0
	adds r0, #0x14
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	ldr r1, [sp, #0x6c]
	movs r2, #2
	ldrsh r0, [r1, r2]
	ldr r3, [sp, #0x70]
	ldrh r1, [r3]
	subs r0, r0, r1
	adds r0, #0x10
	mov r4, r8
	strh r0, [r4]
	add r0, sp, #0x74
	ldrh r0, [r0]
	strh r0, [r4, #2]
	movs r1, #2
	strh r1, [r4, #8]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl func_080074C0
	strh r0, [r4, #4]
	movs r2, #0xc6
	lsls r2, r2, #3
	adds r0, r5, r2
	ldr r1, [r0, #4]
	bl func_08007D4C
	ldrh r2, [r7, #0xc]
	lsls r2, r2, #2
	ldr r1, [r7, #4]
	adds r1, r1, r2
	ldrh r2, [r1]
	lsls r2, r2, #1
	ldr r3, _0805C198 @ =0x00000BE2
	adds r1, r5, r3
	adds r1, r1, r2
	ldrh r1, [r1]
	adds r1, r1, r0
	strh r1, [r4, #6]
	movs r6, #1
	strb r6, [r4, #0x18]
	adds r0, r5, #0
	bl func_08008920
	ldr r1, [sp, #0x20]
	movs r2, #0
	cmp r1, #0
	beq _0805C176
	mov r7, sp
	ldrh r2, [r7, #0x24]
_0805C176:
	add r3, sp, #4
	bl func_0805E99C
_0805C17C:
	mov r0, sl
	cmp r0, #1
	beq _0805C1B2
	cmp r0, #1
	bgt _0805C19C
	cmp r0, #0
	beq _0805C1A8
	b _0805C1E4
	.align 2, 0
_0805C18C: .4byte 0x000013EC
_0805C190: .4byte 0x00000BDA
_0805C194: .4byte 0x0000144E
_0805C198: .4byte 0x00000BE2
_0805C19C:
	mov r1, sl
	cmp r1, #2
	beq _0805C1BC
	cmp r1, #3
	beq _0805C1DC
	b _0805C1E4
_0805C1A8:
	movs r2, #0x82
	lsls r2, r2, #2
	adds r2, r5, r2
	str r2, [sp, #0x68]
	b _0805C1E4
_0805C1B2:
	movs r3, #0x90
	lsls r3, r3, #2
	adds r3, r5, r3
	str r3, [sp, #0x68]
	b _0805C1E4
_0805C1BC:
	ldr r4, _0805C1D8 @ =0x0000140E
	adds r0, r5, r4
	ldrb r0, [r0]
	movs r6, #0xba
	lsls r6, r6, #2
	adds r6, r5, r6
	str r6, [sp, #0x68]
	cmp r0, #0
	bne _0805C1E4
	movs r7, #0x9e
	lsls r7, r7, #2
	adds r7, r5, r7
	str r7, [sp, #0x68]
	b _0805C1E4
	.align 2, 0
_0805C1D8: .4byte 0x0000140E
_0805C1DC:
	movs r0, #0xac
	lsls r0, r0, #2
	adds r0, r5, r0
	str r0, [sp, #0x68]
_0805C1E4:
	ldr r2, [sp, #0x68]
	ldr r1, [r2]
	ldr r3, [r1]
	ldrh r2, [r2, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x68]
	ldr r0, [r4, #4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r0, [sp, #0x84]
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	ldr r0, [sp, #0x84]
	ldm r0!, {r2, r6, r7}
	stm r1!, {r2, r6, r7}
	ldm r0!, {r3, r4, r6}
	stm r1!, {r3, r4, r6}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	add r1, sp, #4
	ldr r0, [sp, #0x68]
	adds r0, #0x14
	ldm r0!, {r3, r4, r6}
	stm r1!, {r3, r4, r6}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	movs r0, #0x2c
	mov r1, sl
	muls r1, r0, r1
	movs r4, #0xa2
	lsls r4, r4, #5
	adds r0, r5, r4
	adds r0, r0, r1
	movs r6, #2
	ldrsh r1, [r0, r6]
	ldr r7, _0805C2DC @ =0x000013EC
	adds r0, r5, r7
	ldrh r0, [r0]
	subs r1, r1, r0
	mov r0, r8
	strh r1, [r0]
	ldr r0, [sp, #0x8c]
	add r0, sl
	lsls r4, r0, #3
	adds r0, r4, #0
	adds r0, #0x3c
	mov r1, r8
	strh r0, [r1, #2]
	movs r0, #2
	strh r0, [r1, #8]
	adds r0, r4, r5
	movs r2, #0xcb
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r1, [r0, #4]
	bl func_08007D4C
	mov r3, r8
	strh r0, [r3, #6]
	movs r6, #1
	mov sb, r6
	mov r7, sb
	strb r7, [r3, #0x18]
	ldr r0, [sp, #0x68]
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	mov r1, sl
	subs r1, #1
	str r1, [sp, #0x88]
	cmp r0, #0
	blt _0805C288
	b _0805C3BA
_0805C288:
	adds r0, r5, #0
	bl func_08008910
	adds r6, r0, #0
	ldr r7, [sp, #0x28]
	adds r0, r4, r5
	movs r2, #0xcb
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x28]
	movs r3, #0
	cmp r0, #0
	beq _0805C2AE
	mov r4, sp
	ldrh r3, [r4, #0x2c]
_0805C2AE:
	lsls r2, r2, #5
	ldr r0, _0805C2E0 @ =0x06010000
	adds r2, r2, r0
	ldr r0, [sp, #0x84]
	adds r1, r7, #0
	bl func_08008F0C
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0805C2E4
	cmp r1, #0
	beq _0805C2D4
	adds r0, r1, #0
	ldr r1, [sp, #0x84]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0805C2D4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0805C3BA
	.align 2, 0
_0805C2DC: .4byte 0x000013EC
_0805C2E0: .4byte 0x06010000
_0805C2E4:
	str r1, [sp, #0x98]
	mov r7, sb
	str r7, [sp, #0x64]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x60]
	add r1, sp, #0x64
	add r0, sp, #0x60
	cmp r4, #1
	bhs _0805C2FC
	adds r0, r1, #0
_0805C2FC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805C31A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	str r4, [sp, #0x80]
	cmp r0, #0
	bne _0805C320
	adds r0, r4, #0
	bl func_080D3BC0
	b _0805C320
_0805C31A:
	movs r0, #0
	movs r2, #0
	str r2, [sp, #0x80]
_0805C320:
	adds r4, r0, #0
	mov sb, r4
	ldr r2, [r6]
	mov ip, sb
	mov r3, sl
	subs r3, #1
	str r3, [sp, #0x88]
	ldr r4, [sp, #0x98]
	cmp r2, r4
	beq _0805C352
_0805C334:
	mov r7, ip
	cmp r7, #0
	beq _0805C346
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805C346:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	ldr r1, [sp, #0x98]
	cmp r2, r1
	bne _0805C334
_0805C352:
	mov r4, ip
	ldr r0, [sp, #0x64]
	cmp r0, #1
	bne _0805C36E
	cmp r4, #0
	beq _0805C36A
	adds r0, r4, #0
	add r1, sp, #0x40
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805C36A:
	adds r4, #0x10
	b _0805C396
_0805C36E:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _0805C394
_0805C376:
	cmp r2, #0
	beq _0805C386
	adds r0, r2, #0
	add r1, sp, #0x40
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805C386:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _0805C376
_0805C394:
	adds r4, r2, #0
_0805C396:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0805C3A6
_0805C3A0:
	adds r1, #0x10
	cmp r1, r2
	bne _0805C3A0
_0805C3A6:
	cmp r0, #0
	beq _0805C3AE
	bl free
_0805C3AE:
	ldr r0, [sp, #0x80]
	add r0, sb
	mov r2, sb
	str r2, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_0805C3BA:
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805C3C8
	mov r3, sp
	ldrh r2, [r3, #0x24]
_0805C3C8:
	ldr r0, [sp, #0x8c]
	add r0, sl
	lsls r0, r0, #3
	movs r4, #0xcb
	lsls r4, r4, #3
	adds r0, r0, r4
	adds r0, r5, r0
	str r0, [sp]
	adds r0, r5, #0
	add r3, sp, #4
	bl func_0805C63C
	ldr r6, _0805C628 @ =0x0000140E
	adds r0, r5, r6
	ldrb r0, [r0]
	cmp r0, #0
	beq _0805C4A2
	mov r7, sl
	cmp r7, #2
	bne _0805C4A2
	ldr r0, [sp, #0x78]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x7c]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r0, [sp, #0x84]
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	ldr r0, [sp, #0x84]
	ldm r0!, {r2, r6, r7}
	stm r1!, {r2, r6, r7}
	ldm r0!, {r3, r4, r6}
	stm r1!, {r3, r4, r6}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	add r1, sp, #4
	movs r3, #0xcd
	lsls r3, r3, #2
	adds r0, r5, r3
	ldm r0!, {r4, r6, r7}
	stm r1!, {r4, r6, r7}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	ldr r6, _0805C62C @ =0x00001498
	adds r0, r5, r6
	movs r7, #2
	ldrsh r1, [r0, r7]
	ldr r2, _0805C630 @ =0x000013EC
	adds r0, r5, r2
	ldrh r0, [r0]
	subs r1, r1, r0
	subs r1, #0x27
	mov r3, r8
	strh r1, [r3]
	movs r0, #0x4c
	strh r0, [r3, #2]
	movs r4, #0xbd
	lsls r4, r4, #3
	adds r0, r5, r4
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r6, r8
	strh r0, [r6, #4]
	mov r7, sl
	strh r7, [r6, #8]
	movs r0, #1
	strb r0, [r6, #0x18]
	movs r1, #0xbc
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	ldr r3, [sp, #0x78]
	ldrh r2, [r3, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x7c]
	ldr r1, [r4]
	adds r1, r1, r2
	ldrh r1, [r1]
	lsls r1, r1, #2
	adds r0, r0, r1
	strh r0, [r6, #6]
	adds r0, r5, #0
	bl func_08008920
	ldr r1, [sp, #0x20]
	movs r2, #0
	cmp r1, #0
	beq _0805C49C
	mov r6, sp
	ldrh r2, [r6, #0x24]
_0805C49C:
	add r3, sp, #4
	bl func_0805E99C
_0805C4A2:
	movs r7, #0xb1
	lsls r7, r7, #3
	adds r0, r5, r7
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x90]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x40
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r0, [sp, #0x84]
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x20
	ldr r0, [sp, #0x84]
	ldm r0!, {r2, r6, r7}
	stm r1!, {r2, r6, r7}
	ldm r0!, {r3, r4, r6}
	stm r1!, {r3, r4, r6}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	add r1, sp, #4
	ldr r3, _0805C634 @ =0x0000059C
	adds r0, r5, r3
	ldm r0!, {r4, r6, r7}
	stm r1!, {r4, r6, r7}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	movs r0, #0x2c
	mov r1, sl
	muls r1, r0, r1
	movs r6, #0xa2
	lsls r6, r6, #5
	adds r0, r5, r6
	adds r0, r0, r1
	movs r7, #2
	ldrsh r1, [r0, r7]
	ldr r2, _0805C630 @ =0x000013EC
	adds r0, r5, r2
	ldrh r0, [r0]
	subs r1, r1, r0
	mov r3, r8
	strh r1, [r3]
	ldr r0, [sp, #0x8c]
	add r0, sl
	lsls r0, r0, #3
	adds r0, #0x3c
	strh r0, [r3, #2]
	movs r0, #2
	strh r0, [r3, #8]
	movs r4, #0xbb
	lsls r4, r4, #3
	adds r0, r5, r4
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r6, r8
	strh r0, [r6, #4]
	movs r7, #0xca
	lsls r7, r7, #3
	adds r0, r5, r7
	ldr r1, [r0, #4]
	bl func_08007D4C
	strh r0, [r6, #6]
	movs r0, #1
	strb r0, [r6, #0x18]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805C550
	mov r0, sp
	ldrh r2, [r0, #0x24]
_0805C550:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
	ldr r1, [sp, #0x88]
	mov sl, r1
	cmp r1, #0
	blt _0805C562
	b _0805BF78
_0805C562:
	movs r2, #0
	mov sl, r2
	movs r3, #1
	mov sb, r3
	add r7, sp, #4
	ldr r4, [sp, #0x84]
	mov r8, r4
_0805C570:
	mov r6, sl
	lsls r6, r6, #2
	str r6, [sp, #0x9c]
	movs r1, #0xd7
	lsls r1, r1, #3
	adds r0, r5, r1
	adds r0, r0, r6
	str r0, [sp, #0xa0]
	movs r2, #0
	ldrsh r0, [r0, r2]
	movs r3, #1
	rsbs r3, r3, #0
	cmp r0, r3
	beq _0805C60E
	mov r4, sl
	mov r6, sb
	ands r4, r6
	mov r0, r8
	adds r1, r5, #0
	adds r1, #0x50
	adds r2, r4, #0
	bl func_0805E790
	add r1, sp, #0x20
	mov r0, r8
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r6, _0805C630 @ =0x000013EC
	adds r1, r5, r6
	ldr r2, [sp, #0xa0]
	ldrh r0, [r2]
	ldrh r1, [r1]
	subs r0, r0, r1
	strh r0, [r7]
	ldr r3, _0805C638 @ =0x000006BA
	adds r0, r5, r3
	ldr r6, [sp, #0x9c]
	adds r0, r0, r6
	ldrh r0, [r0]
	strh r0, [r7, #2]
	movs r1, #0xbb
	lsls r1, r1, #3
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	strh r0, [r7, #4]
	movs r2, #0xba
	lsls r2, r2, #3
	adds r0, r5, r2
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r4, r4, #3
	adds r0, r0, r4
	strh r0, [r7, #6]
	movs r0, #2
	strh r0, [r7, #8]
	mov r3, sb
	strb r3, [r7, #0x18]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x20]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805C606
	mov r4, sp
	ldrh r2, [r4, #0x24]
_0805C606:
	adds r0, r3, #0
	add r3, sp, #4
	bl func_0805E99C
_0805C60E:
	movs r6, #1
	add sl, r6
	mov r0, sl
	cmp r0, #0x1f
	ble _0805C570
	add sp, #0xa4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805C628: .4byte 0x0000140E
_0805C62C: .4byte 0x00001498
_0805C630: .4byte 0x000013EC
_0805C634: .4byte 0x0000059C
_0805C638: .4byte 0x000006BA

	thumb_func_start func_0805C63C
func_0805C63C: @ 0x0805C63C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	str r0, [sp, #8]
	mov r8, r3
	mov sb, r1
	lsls r2, r2, #3
	add r2, sb
	str r2, [sp, #0xc]
	cmp sb, r2
	bne _0805C65A
	b _0805C7D4
_0805C65A:
	mov r2, sb
	ldr r0, [r2]
	ldr r1, [r2, #4]
	str r0, [sp]
	str r1, [sp, #4]
	ldr r1, [sp]
	lsls r0, r1, #7
	asrs r3, r0, #0x17
	mov r0, sp
	movs r5, #0
	ldrsb r5, [r0, r5]
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x1e
	adds r4, r0, #0
	lsrs r1, r1, #0x1e
	cmp r4, #0
	bne _0805C684
	movs r6, #8
	lsls r6, r1
	adds r4, r6, #0
	b _0805C6A4
_0805C684:
	adds r0, r1, #1
	lsrs r0, r0, #1
	adds r0, #1
	movs r2, #8
	lsls r2, r0
	movs r0, #8
	cmp r1, #1
	beq _0805C696
	lsrs r0, r2, #1
_0805C696:
	cmp r4, #1
	beq _0805C6A0
	adds r6, r2, #0
	adds r4, r0, #0
	b _0805C6A4
_0805C6A0:
	adds r6, r0, #0
	adds r4, r2, #0
_0805C6A4:
	mov r0, r8
	ldrb r7, [r0, #0x10]
	movs r1, #1
	mov sl, r1
	mov r0, sl
	ands r0, r7
	cmp r0, #0
	beq _0805C6CE
	adds r0, r3, r4
	rsbs r3, r0, #0
	ldr r2, [sp]
	lsls r1, r2, #3
	lsrs r1, r1, #0x1f
	mov r0, sl
	eors r1, r0
	ands r1, r0
	lsls r1, r1, #0x1c
	ldr r0, _0805C7E4 @ =0xEFFFFFFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp]
_0805C6CE:
	movs r0, #2
	ands r0, r7
	cmp r0, #0
	beq _0805C6F0
	adds r0, r5, r6
	rsbs r5, r0, #0
	ldr r2, [sp]
	lsls r1, r2, #2
	lsrs r1, r1, #0x1f
	mov r0, sl
	eors r1, r0
	ands r1, r0
	lsls r1, r1, #0x1d
	ldr r0, _0805C7E8 @ =0xDFFFFFFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp]
_0805C6F0:
	mov r1, r8
	movs r2, #0
	ldrsh r0, [r1, r2]
	adds r3, r3, r0
	movs r2, #2
	ldrsh r0, [r1, r2]
	adds r5, r5, r0
	adds r0, r3, r4
	cmp r0, #0
	ble _0805C7C8
	cmp r3, #0xef
	bgt _0805C7C8
	adds r0, r5, r6
	cmp r0, #0
	ble _0805C7C8
	cmp r5, #0x9f
	bgt _0805C7C8
	ldr r0, _0805C7EC @ =0x000001FF
	ands r3, r0
	lsls r2, r3, #0x10
	ldr r1, _0805C7F0 @ =0xFE00FFFF
	ldr r0, [sp]
	ands r0, r1
	orrs r0, r2
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	ldr r1, _0805C7F4 @ =0xFFFFFF00
	ands r0, r1
	orrs r0, r2
	str r0, [sp]
	mov r4, sp
	ldr r0, [sp, #4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #3
	ldr r3, [sp, #0x30]
	adds r0, r0, r3
	adds r0, #8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r1, _0805C7F8 @ =0xFFFF0FFF
	ldr r2, [sp, #4]
	ands r2, r1
	orrs r2, r0
	lsls r0, r2, #0x16
	lsrs r0, r0, #0x16
	mov r1, r8
	ldrh r1, [r1, #6]
	adds r0, r0, r1
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r1, _0805C7FC @ =0xFFFFFC00
	ands r1, r2
	orrs r1, r0
	mov r2, r8
	ldrh r0, [r2, #8]
	movs r3, #3
	ands r0, r3
	lsls r0, r0, #0xa
	ldr r2, _0805C800 @ =0xFFFFF3FF
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #4]
	mov r1, r8
	ldr r0, [r1, #0xc]
	ands r0, r3
	lsls r0, r0, #0xa
	ldr r1, [sp]
	ands r1, r2
	orrs r1, r0
	mov r3, r8
	ldr r2, [r3, #0x14]
	movs r0, #3
	ands r2, r0
	lsls r2, r2, #8
	ldr r0, _0805C804 @ =0xFFFFFCFF
	ands r1, r0
	orrs r1, r2
	ldrb r2, [r3, #0x18]
	mov r3, sl
	ands r2, r3
	lsls r2, r2, #0xc
	ldr r0, _0805C808 @ =0xFFFFEFFF
	ands r1, r0
	orrs r1, r2
	str r1, [sp]
	ldr r0, [sp, #8]
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _0805C7C8
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp]
	str r0, [r1]
	ldrh r0, [r4, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_0805C7C8:
	movs r0, #8
	add sb, r0
	ldr r1, [sp, #0xc]
	cmp sb, r1
	beq _0805C7D4
	b _0805C65A
_0805C7D4:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805C7E4: .4byte 0xEFFFFFFF
_0805C7E8: .4byte 0xDFFFFFFF
_0805C7EC: .4byte 0x000001FF
_0805C7F0: .4byte 0xFE00FFFF
_0805C7F4: .4byte 0xFFFFFF00
_0805C7F8: .4byte 0xFFFF0FFF
_0805C7FC: .4byte 0xFFFFFC00
_0805C800: .4byte 0xFFFFF3FF
_0805C804: .4byte 0xFFFFFCFF
_0805C808: .4byte 0xFFFFEFFF

	thumb_func_start func_0805C80C
func_0805C80C: @ 0x0805C80C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	ldr r6, _0805C90C @ =0x0000142C
	add r6, r8
	ldr r0, _0805C910 @ =0x0000140E
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #1
	bne _0805C872
	ldr r1, _0805C914 @ =0x000014A4
	add r1, r8
	movs r0, #0x80
	strh r0, [r1]
	ldr r4, _0805C918 @ =0x000014DC
	add r4, r8
	ldr r0, [r4]
	bl GetAdequacy__C3Pet
	ldr r5, _0805C91C @ =0x000014A1
	add r5, r8
	strb r0, [r5]
	ldr r0, [r4]
	bl GetAffection__C6Animal
	ldr r1, _0805C920 @ =0x000014A2
	add r1, r8
	strb r0, [r1]
	ldrb r1, [r5]
	movs r0, #0xfa
	subs r0, r0, r1
	adds r1, r0, #0
	muls r1, r0, r1
	adds r0, r1, #0
	movs r1, #0xfa
	lsls r1, r1, #2
	bl __divsi3
	adds r4, r0, #0
	bl rand
	movs r1, #3
	ands r0, r1
	adds r0, #1
	adds r4, r4, r0
	ldr r0, _0805C924 @ =0x000014AC
	add r0, r8
	strh r4, [r0]
_0805C872:
	movs r5, #0
	ldr r0, _0805C928 @ =0x00000C49
	mov sl, r0
	mov sb, r5
_0805C87A:
	ldrb r0, [r6, #0x1d]
	mov r1, sl
	muls r1, r0, r1
	adds r0, r1, #0
	movs r1, #0xb0
	lsls r1, r1, #0xf
	adds r0, r0, r1
	movs r1, #0x3c
	bl __divsi3
	adds r4, r0, #0
	str r4, [r6]
	ldrb r0, [r6, #0x1e]
	mov r1, sl
	muls r1, r0, r1
	adds r0, r1, #0
	movs r1, #0xc0
	lsls r1, r1, #0xc
	adds r0, r0, r1
	movs r1, #0x3c
	bl __divsi3
	adds r0, r0, r4
	str r0, [r6, #4]
	subs r0, r0, r4
	movs r1, #0x3c
	bl __divsi3
	str r0, [r6, #8]
	mov r0, sb
	str r0, [r6, #0xc]
	movs r0, #0xc
	strh r0, [r6, #0x18]
	movs r0, #0xff
	strh r0, [r6, #0x1a]
	mov r1, sb
	strb r1, [r6, #0x1c]
	str r4, [r6, #0x10]
	movs r0, #0xd7
	lsls r0, r0, #0x13
	str r0, [r6, #0x14]
	movs r0, #0xff
	strb r0, [r6, #0x1f]
	mov r0, sb
	strh r0, [r6, #0x22]
	strh r0, [r6, #0x2a]
	ldr r0, _0805C92C @ =0x00001424
	add r0, r8
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r4, r5, #1
	adds r7, r6, #0
	adds r7, #0x2c
	cmp r0, #0
	bne _0805C952
	ldr r0, _0805C910 @ =0x0000140E
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #1
	bne _0805C930
	cmp r5, #2
	bne _0805C930
	adds r1, r6, #0
	adds r1, #0x24
	movs r2, #0
	adds r0, r6, #0
	adds r0, #0x27
_0805C900:
	strb r2, [r0]
	subs r0, #1
	cmp r0, r1
	bge _0805C900
	b _0805C952
	.align 2, 0
_0805C90C: .4byte 0x0000142C
_0805C910: .4byte 0x0000140E
_0805C914: .4byte 0x000014A4
_0805C918: .4byte 0x000014DC
_0805C91C: .4byte 0x000014A1
_0805C920: .4byte 0x000014A2
_0805C924: .4byte 0x000014AC
_0805C928: .4byte 0x00000C49
_0805C92C: .4byte 0x00001424
_0805C930:
	movs r2, #0
	adds r4, r5, #1
	adds r7, r6, #0
	adds r7, #0x2c
	adds r3, r6, #0
	adds r3, #0x24
	ldr r5, _0805C968 @ =0x080FA99E
_0805C93E:
	adds r0, r3, r2
	ldrh r1, [r6, #0x20]
	lsls r1, r1, #2
	adds r1, r2, r1
	adds r1, r1, r5
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #3
	ble _0805C93E
_0805C952:
	adds r5, r4, #0
	adds r6, r7, #0
	cmp r5, #3
	ble _0805C87A
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805C968: .4byte 0x080FA99E

	thumb_func_start func_0805C96C
func_0805C96C: @ 0x0805C96C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r6, r0, #0
	ldr r0, _0805C9C4 @ =0x0000142C
	adds r5, r6, r0
	movs r1, #0xd7
	lsls r1, r1, #0x13
	str r1, [sp, #0x20]
	movs r2, #0
	mov r8, r2
	add r3, sp, #0x10
	mov sl, r3
_0805C98C:
	ldrb r0, [r5, #0x1c]
	adds r0, #1
	movs r1, #0
	strb r0, [r5, #0x1c]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bls _0805C9B0
	strb r1, [r5, #0x1c]
	ldrh r0, [r5, #0x1a]
	adds r0, #3
	strh r0, [r5, #0x1a]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xfe
	ble _0805C9B0
	movs r0, #0xff
	strh r0, [r5, #0x1a]
_0805C9B0:
	ldrh r0, [r5, #0x22]
	cmp r0, #4
	bls _0805C9B8
	b _0805CBA6
_0805C9B8:
	lsls r0, r0, #2
	ldr r1, _0805C9C8 @ =_0805C9CC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805C9C4: .4byte 0x0000142C
_0805C9C8: .4byte _0805C9CC
_0805C9CC: @ jump table
	.4byte _0805CBA6 @ case 0
	.4byte _0805C9E0 @ case 1
	.4byte _0805CA96 @ case 2
	.4byte _0805CAC4 @ case 3
	.4byte _0805CAF4 @ case 4
_0805C9E0:
	mov r7, r8
	cmp r7, #1
	beq _0805CA16
	cmp r7, #1
	bgt _0805C9F0
	cmp r7, #0
	beq _0805C9FC
	b _0805CA8E
_0805C9F0:
	mov r0, r8
	cmp r0, #2
	beq _0805CA32
	cmp r0, #3
	beq _0805CA6E
	b _0805CA8E
_0805C9FC:
	movs r1, #0x82
	lsls r1, r1, #2
	adds r0, r6, r1
	subs r1, #0x88
	strh r1, [r0, #0x10]
	movs r2, #0xe4
	lsls r2, r2, #2
	adds r0, r6, r2
	strh r1, [r0, #0x10]
	movs r3, #0x8e
	lsls r3, r3, #3
	adds r0, r6, r3
	b _0805CA66
_0805CA16:
	movs r7, #0x90
	lsls r7, r7, #2
	adds r0, r6, r7
	movs r1, #0xc0
	lsls r1, r1, #1
	strh r1, [r0, #0x10]
	movs r2, #0xf2
	lsls r2, r2, #2
	adds r0, r6, r2
	strh r1, [r0, #0x10]
	movs r3, #0x95
	lsls r3, r3, #3
	adds r0, r6, r3
	b _0805CA66
_0805CA32:
	ldr r7, _0805CA44 @ =0x0000140E
	adds r0, r6, r7
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805CA48
	movs r0, #0x9e
	lsls r0, r0, #2
	adds r1, r6, r0
	b _0805CA4E
	.align 2, 0
_0805CA44: .4byte 0x0000140E
_0805CA48:
	movs r2, #0xba
	lsls r2, r2, #2
	adds r1, r6, r2
_0805CA4E:
	movs r0, #0xc0
	lsls r0, r0, #1
	strh r0, [r1, #0x10]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r0, r6, r3
	movs r1, #0xc0
	lsls r1, r1, #1
	strh r1, [r0, #0x10]
	movs r7, #0x9c
	lsls r7, r7, #3
	adds r0, r6, r7
_0805CA66:
	movs r1, #0
	bl func_0805E860
	b _0805CA8E
_0805CA6E:
	movs r1, #0xac
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #0xc0
	lsls r1, r1, #1
	strh r1, [r0, #0x10]
	movs r2, #0x87
	lsls r2, r2, #3
	adds r0, r6, r2
	strh r1, [r0, #0x10]
	movs r3, #0xa3
	lsls r3, r3, #3
	adds r0, r6, r3
	movs r1, #0
	bl func_0805E860
_0805CA8E:
	movs r0, #0x3c
	strh r0, [r5, #0x18]
	movs r0, #2
	strh r0, [r5, #0x22]
_0805CA96:
	ldr r1, [r5, #0x10]
	ldr r0, [r5, #8]
	adds r1, r1, r0
	str r1, [r5, #0x10]
	ldrh r0, [r5, #0x18]
	subs r0, #1
	movs r3, #0
	strh r0, [r5, #0x18]
	ldr r0, [r5, #4]
	adds r2, r0, #0
	cmp r1, r2
	blt _0805CAB0
	strh r3, [r5, #0x18]
_0805CAB0:
	movs r7, #0x18
	ldrsh r0, [r5, r7]
	cmp r0, #0
	bgt _0805CBA6
	movs r0, #3
	strh r0, [r5, #0x22]
	str r2, [r5, #0x10]
	movs r0, #0x3c
	strh r0, [r5, #0x18]
	b _0805CBA6
_0805CAC4:
	ldrh r0, [r5, #0x18]
	subs r0, #1
	strh r0, [r5, #0x18]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _0805CBA6
	movs r0, #4
	strh r0, [r5, #0x22]
	movs r0, #0x1a
	ldrsh r1, [r5, r0]
	movs r0, #0x3c
	bl __divsi3
	adds r0, #0x1e
	strh r0, [r5, #0x18]
	ldr r0, [r5, #4]
	ldr r1, [r5]
	subs r0, r0, r1
	movs r2, #0x18
	ldrsh r1, [r5, r2]
	bl __divsi3
	str r0, [r5, #0xc]
	b _0805CBA6
_0805CAF4:
	ldr r1, [r5, #0x10]
	ldr r0, [r5, #0xc]
	subs r1, r1, r0
	str r1, [r5, #0x10]
	ldrh r0, [r5, #0x18]
	subs r0, #1
	movs r3, #0
	strh r0, [r5, #0x18]
	ldr r0, [r5]
	adds r2, r0, #0
	cmp r1, r2
	bgt _0805CB0E
	strh r3, [r5, #0x18]
_0805CB0E:
	movs r7, #0x18
	ldrsh r0, [r5, r7]
	cmp r0, #0
	bgt _0805CBA6
	strh r3, [r5, #0x22]
	str r2, [r5, #0x10]
	movs r0, #0xc
	strh r0, [r5, #0x18]
	mov r0, r8
	cmp r0, #1
	beq _0805CB4E
	cmp r0, #1
	bgt _0805CB2E
	cmp r0, #0
	beq _0805CB3A
	b _0805CBA6
_0805CB2E:
	mov r1, r8
	cmp r1, #2
	beq _0805CB62
	cmp r1, #3
	beq _0805CB92
	b _0805CBA6
_0805CB3A:
	movs r2, #0x82
	lsls r2, r2, #2
	adds r0, r6, r2
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0, #0x10]
	movs r3, #0xe4
	lsls r3, r3, #2
	adds r0, r6, r3
	b _0805CBA4
_0805CB4E:
	movs r7, #0x90
	lsls r7, r7, #2
	adds r0, r6, r7
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0, #0x10]
	movs r2, #0xf2
	lsls r2, r2, #2
	adds r0, r6, r2
	b _0805CBA4
_0805CB62:
	ldr r3, _0805CB74 @ =0x0000140E
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805CB78
	movs r7, #0x9e
	lsls r7, r7, #2
	adds r1, r6, r7
	b _0805CB7E
	.align 2, 0
_0805CB74: .4byte 0x0000140E
_0805CB78:
	movs r0, #0xba
	lsls r0, r0, #2
	adds r1, r6, r0
_0805CB7E:
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1, #0x10]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r6, r2
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1, #0x10]
	b _0805CBA6
_0805CB92:
	movs r3, #0xac
	lsls r3, r3, #2
	adds r0, r6, r3
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0, #0x10]
	movs r7, #0x87
	lsls r7, r7, #3
	adds r0, r6, r7
_0805CBA4:
	strh r1, [r0, #0x10]
_0805CBA6:
	ldr r1, [r5, #0x14]
	ldr r0, [r5, #0x10]
	subs r1, r1, r0
	str r1, [r5, #0x14]
	mov r2, r8
	lsls r0, r2, #2
	add r0, sl
	str r1, [r0]
	ldr r3, [sp, #0x20]
	cmp r3, r1
	ble _0805CBBE
	str r1, [sp, #0x20]
_0805CBBE:
	lsrs r7, r1, #0x10
	lsls r0, r7, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0x1f
	ble _0805CBF0
	asrs r0, r0, #0x15
	movs r2, #7
	mov r3, r8
	lsls r1, r3, #3
	ands r0, r2
	adds r1, r1, r0
	lsls r1, r1, #2
	movs r2, #0xd7
	lsls r2, r2, #3
	adds r0, r6, r2
	adds r3, r0, r1
	movs r0, #0
	ldrsh r1, [r3, r0]
	ldr r2, _0805CC9C @ =0x0000FFE0
	ands r1, r2
	adds r0, r4, #0
	ands r0, r2
	cmp r1, r0
	beq _0805CBF0
	strh r7, [r3]
_0805CBF0:
	movs r1, #1
	add r8, r1
	adds r5, #0x2c
	mov r2, r8
	cmp r2, #3
	bgt _0805CBFE
	b _0805C98C
_0805CBFE:
	movs r3, #0
	mov r8, r3
	mov r7, sl
	mov r5, sl
_0805CC06:
	movs r0, #0
	mov sb, r0
	movs r3, #0
	adds r4, r5, #0
	adds r2, r7, #0
_0805CC10:
	cmp r8, r3
	beq _0805CC20
	ldr r1, [r4]
	ldr r0, [r2]
	cmp r1, r0
	ble _0805CC20
	movs r1, #1
	add sb, r1
_0805CC20:
	adds r2, #4
	adds r3, #1
	cmp r3, #3
	ble _0805CC10
	mov r2, sb
	lsls r0, r2, #2
	add r0, sp
	mov r3, r8
	str r3, [r0]
	adds r5, #4
	movs r0, #1
	add r8, r0
	mov r1, r8
	cmp r1, #3
	ble _0805CC06
	movs r2, #0
	mov sb, r2
	mov r8, r2
_0805CC44:
	mov r3, r8
	lsls r1, r3, #2
	mov r7, sp
	adds r4, r7, r1
	ldr r3, [r4]
	movs r0, #0x2c
	muls r0, r3, r0
	ldr r2, _0805CCA0 @ =0x0000142C
	adds r0, r0, r2
	adds r5, r6, r0
	ldrb r0, [r5, #0x1f]
	cmp r0, #0xff
	beq _0805CC60
	b _0805CE26
_0805CC60:
	movs r0, #0xb8
	lsls r0, r0, #0x10
	ldr r7, [r5, #0x14]
	cmp r7, r0
	bgt _0805CD18
	ldr r7, _0805CCA4 @ =0x000013FC
	adds r2, r6, r7
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #1
	adds r7, #2
	adds r0, r6, r7
	adds r0, r0, r1
	strh r3, [r0]
	ldrh r1, [r2]
	adds r0, r1, #1
	strh r0, [r2]
	strb r1, [r5, #0x1f]
	lsls r1, r1, #0x18
	cmp r1, #0
	beq _0805CC8C
	b _0805CE34
_0805CC8C:
	ldr r0, [r4]
	cmp r0, #1
	beq _0805CCC0
	cmp r0, #1
	bgt _0805CCA8
	cmp r0, #0
	beq _0805CCB2
	b _0805CE34
	.align 2, 0
_0805CC9C: .4byte 0x0000FFE0
_0805CCA0: .4byte 0x0000142C
_0805CCA4: .4byte 0x000013FC
_0805CCA8:
	cmp r0, #2
	beq _0805CCD0
	cmp r0, #3
	beq _0805CCFC
	b _0805CE34
_0805CCB2:
	movs r0, #0x82
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, _0805CCBC @ =0x0000076A
	b _0805CD04
	.align 2, 0
_0805CCBC: .4byte 0x0000076A
_0805CCC0:
	movs r1, #0x90
	lsls r1, r1, #2
	adds r4, r6, r1
	ldr r1, _0805CCCC @ =0x00000746
	b _0805CD04
	.align 2, 0
_0805CCCC: .4byte 0x00000746
_0805CCD0:
	ldr r2, _0805CCE4 @ =0x0000140E
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805CCEC
	movs r3, #0x9e
	lsls r3, r3, #2
	adds r4, r6, r3
	ldr r1, _0805CCE8 @ =0x00000752
	b _0805CD04
	.align 2, 0
_0805CCE4: .4byte 0x0000140E
_0805CCE8: .4byte 0x00000752
_0805CCEC:
	movs r7, #0xba
	lsls r7, r7, #2
	adds r4, r6, r7
	ldr r1, _0805CCF8 @ =0x00000776
	b _0805CD04
	.align 2, 0
_0805CCF8: .4byte 0x00000776
_0805CCFC:
	movs r0, #0xac
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, _0805CD14 @ =0x0000075E
_0805CD04:
	adds r0, r4, #0
	bl func_0805E860
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r4, #0x10]
	b _0805CE34
	.align 2, 0
_0805CD14: .4byte 0x0000075E
_0805CD18:
	ldr r2, _0805CD58 @ =0x0000140E
	adds r0, r6, r2
	ldrb r0, [r0]
	cmp r0, #1
	bne _0805CD88
	cmp r3, #2
	bne _0805CD88
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0805CD36
	b _0805CE34
_0805CD36:
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xa8
	bl func_08008B6C
	movs r3, #0x1a
	ldrsh r0, [r5, r3]
	cmp r0, #0x28
	ble _0805CE34
	ldrh r0, [r5, #0x22]
	cmp r0, #4
	bhi _0805CE34
	lsls r0, r0, #2
	ldr r1, _0805CD5C @ =_0805CD60
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805CD58: .4byte 0x0000140E
_0805CD5C: .4byte _0805CD60
_0805CD60: @ jump table
	.4byte _0805CD74 @ case 0
	.4byte _0805CE34 @ case 1
	.4byte _0805CE34 @ case 2
	.4byte _0805CD7A @ case 3
	.4byte _0805CD74 @ case 4
_0805CD74:
	movs r0, #1
	strh r0, [r5, #0x22]
	b _0805CD80
_0805CD7A:
	ldrh r0, [r5, #0x18]
	adds r0, #0x3c
	strh r0, [r5, #0x18]
_0805CD80:
	ldrh r0, [r5, #0x1a]
	subs r0, #0x28
	strh r0, [r5, #0x1a]
	b _0805CE34
_0805CD88:
	ldrh r0, [r5, #0x22]
	cmp r0, #0
	bne _0805CE34
	ldrh r2, [r5, #0x18]
	movs r3, #0x18
	ldrsh r0, [r5, r3]
	cmp r0, #0
	ble _0805CD9E
	subs r0, r2, #1
	strh r0, [r5, #0x18]
	b _0805CE34
_0805CD9E:
	movs r2, #0
	mov r0, r8
	cmp r0, #0
	ble _0805CDCC
	mov r3, sp
	adds r0, r3, r1
	ldr r1, [r0]
	lsls r1, r1, #2
	add r1, sl
	mov r0, r8
	subs r0, #1
	lsls r0, r0, #2
	add r0, sp
	ldr r0, [r0]
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r1]
	ldr r0, [r0]
	subs r1, r1, r0
	ldr r0, _0805CE14 @ =0x001FFFFF
	cmp r1, r0
	ble _0805CDCC
	movs r2, #1
_0805CDCC:
	ldr r0, _0805CE18 @ =0x02FFFFFF
	cmp r7, r0
	bgt _0805CDD4
	adds r2, #2
_0805CDD4:
	adds r0, r5, #0
	adds r0, #0x24
	adds r0, r0, r2
	ldrb r4, [r0]
	bl rand
	movs r1, #0x64
	bl __modsi3
	cmp r4, r0
	ble _0805CE20
	ldrh r1, [r5, #0x1a]
	movs r7, #0x1a
	ldrsh r0, [r5, r7]
	cmp r0, #0x27
	ble _0805CE34
	adds r0, r1, #0
	subs r0, #0x28
	strh r0, [r5, #0x1a]
	movs r0, #1
	strh r0, [r5, #0x22]
	ldr r1, _0805CE1C @ =0x0000140E
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0805CE34
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xa8
	bl func_08008B6C
	b _0805CE34
	.align 2, 0
_0805CE14: .4byte 0x001FFFFF
_0805CE18: .4byte 0x02FFFFFF
_0805CE1C: .4byte 0x0000140E
_0805CE20:
	movs r0, #0xc
	strh r0, [r5, #0x18]
	b _0805CE34
_0805CE26:
	ldr r0, [r5, #0x14]
	cmp r0, #0
	bge _0805CE34
	movs r0, #0
	str r0, [r5, #0x10]
	movs r2, #1
	add sb, r2
_0805CE34:
	movs r3, #1
	add r8, r3
	mov r7, r8
	cmp r7, #3
	bgt _0805CE40
	b _0805CC44
_0805CE40:
	ldr r1, _0805CEA8 @ =0x0000140E
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0805CE50
	mov r2, sl
	ldr r2, [r2, #8]
	str r2, [sp, #0x20]
_0805CE50:
	ldr r3, _0805CEAC @ =0x000013EC
	adds r2, r6, r3
	ldrh r0, [r2]
	cmp r0, #0x30
	bls _0805CE94
	ldr r7, [sp, #0x20]
	asrs r7, r7, #0x10
	str r7, [sp, #0x20]
	ldrh r0, [r2]
	adds r0, #0x78
	cmp r7, r0
	bge _0805CE94
	adds r0, r7, #0
	subs r0, #0x78
	strh r0, [r2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x2f
	bhi _0805CE7A
	movs r0, #0x30
	strh r0, [r2]
_0805CE7A:
	ldrh r0, [r2]
	movs r1, #0xc0
	lsls r1, r1, #3
	subs r0, r1, r0
	lsls r0, r0, #1
	subs r1, r1, r0
	ldr r3, _0805CEB0 @ =0x000013EA
	adds r0, r6, r3
	strh r1, [r0]
	ldrh r1, [r2]
	ldr r7, _0805CEB4 @ =0x000013EE
	adds r0, r6, r7
	strh r1, [r0]
_0805CE94:
	mov r0, sb
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0805CEA8: .4byte 0x0000140E
_0805CEAC: .4byte 0x000013EC
_0805CEB0: .4byte 0x000013EA
_0805CEB4: .4byte 0x000013EE

	thumb_func_start func_0805CEB8
func_0805CEB8: @ 0x0805CEB8
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r5, r0, #0
	mov r8, r1
	adds r6, r2, #0
	lsls r4, r3, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _0805CEF4 @ =vtable_unk_080E798C
	str r0, [r5]
	ldr r0, _0805CEF8 @ =0x000014FC
	bl __builtin_new
	adds r1, r6, #0
	adds r2, r4, #0
	bl func_0805806C
	str r0, [r5, #4]
	mov r0, r8
	ldr r1, [r0]
	movs r0, #0
	mov r2, r8
	str r0, [r2]
	str r1, [r5, #8]
	adds r0, r5, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0805CEF4: .4byte vtable_unk_080E798C
_0805CEF8: .4byte 0x000014FC

	thumb_func_start func_0805CEFC
func_0805CEFC: @ 0x0805CEFC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0805CF38 @ =vtable_unk_080E798C
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0805CF18
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805CF18:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0805CF2A
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805CF2A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0805CF38: .4byte vtable_unk_080E798C

	thumb_func_start func_0805CF3C
func_0805CF3C: @ 0x0805CF3C
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r4, #4]
	mov r0, sp
	bl func_080588AC
	ldr r1, [sp]
	cmp r1, #0
	beq _0805CF5E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805CF5E:
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0805CF70
func_0805CF70: @ 0x0805CF70
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x18
	adds r7, r0, #0
	adds r4, r1, #0
	add r1, sp, #0x14
	movs r0, #0x1e
	movs r2, #1
	movs r3, #0
	mov r8, r3
	movs r5, #0
	strh r0, [r1]
	strh r2, [r1, #2]
	adds r0, r7, #0
	bl func_080084DC
	ldr r0, _0805D154 @ =vtable_unk_080E799C
	str r0, [r7, #4]
	str r4, [r7, #8]
	str r5, [r7, #0xc]
	movs r0, #4
	bl __builtin_new
	adds r6, r0, #0
	add r0, sp, #0xc
	bl func_0800835C
	add r4, sp, #0x10
	adds r0, r4, #0
	bl func_0800770C
	ldr r0, [r7, #0xc]
	str r0, [sp]
	add r0, sp, #0xc
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0
	bl func_08050CC0
	str r0, [r7, #0x10]
	adds r0, r4, #0
	movs r1, #2
	bl func_08007714
	add r0, sp, #0xc
	movs r1, #2
	bl func_08008364
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #1
	bl func_08008B54
	adds r0, r7, #0
	adds r0, #0x18
	movs r1, #0
	bl func_08008B54
	adds r0, r7, #0
	adds r0, #0x1c
	movs r1, #2
	bl func_08008B54
	adds r4, r7, #0
	adds r4, #0x20
	ldr r1, _0805D158 @ =0x08527094
	adds r0, r4, #0
	bl func_0805E6CC
	adds r6, r7, #0
	adds r6, #0x50
	ldr r1, _0805D15C @ =0x08728208
	adds r0, r6, #0
	bl func_0805E6CC
	adds r0, r7, #0
	adds r0, #0x80
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0x94
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	mov r1, r8
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r1, [r0, #0x18]
	adds r0, #0x1c
	strb r1, [r0]
	adds r0, #4
	adds r1, r4, #0
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0xc8
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	mov r3, r8
	strb r3, [r0, #0x10]
	strb r3, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r3, [r0, #0x18]
	adds r0, #0x1c
	strb r3, [r0]
	adds r0, #4
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0xfc
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	mov r1, r8
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r1, [r0, #0x18]
	movs r3, #0x8c
	lsls r3, r3, #1
	adds r0, r7, r3
	strb r1, [r0]
	movs r0, #0x8e
	lsls r0, r0, #1
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #7
	bl func_08007B54
	str r0, [r4, #4]
	movs r1, #0x92
	lsls r1, r1, #1
	adds r4, r7, r1
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r3, #0x96
	lsls r3, r3, #1
	adds r4, r7, r3
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r4, #4]
	movs r0, #0x9a
	lsls r0, r0, #1
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r4, r7, r1
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r4, #4]
	movs r3, #0xa2
	lsls r3, r3, #1
	adds r4, r7, r3
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	ldr r0, _0805D160 @ =0x00000AEC
	adds r1, r7, r0
	ldr r0, _0805D164 @ =vtable_unk_080E79A8
	str r0, [r1]
	str r5, [r1, #4]
	movs r1, #0xad
	lsls r1, r1, #4
	adds r2, r7, r1
	ldr r0, [r7, #8]
	ldr r3, _0805D168 @ =0x00002C48
	adds r0, r0, r3
	ldr r0, [r0]
	lsls r0, r0, #0xd
	lsrs r0, r0, #0xf
	str r0, [r2]
	ldr r1, _0805D16C @ =0x0001869F
	cmp r0, r1
	ble _0805D13C
	str r1, [r2]
_0805D13C:
	movs r1, #0xa6
	lsls r1, r1, #1
	adds r0, r7, r1
	strh r5, [r0]
	adds r0, r7, #0
	add sp, #0x18
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0805D154: .4byte vtable_unk_080E799C
_0805D158: .4byte 0x08527094
_0805D15C: .4byte 0x08728208
_0805D160: .4byte 0x00000AEC
_0805D164: .4byte vtable_unk_080E79A8
_0805D168: .4byte 0x00002C48
_0805D16C: .4byte 0x0001869F

	thumb_func_start func_0805D170
func_0805D170: @ 0x0805D170
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	mov sb, r0
	adds r6, r1, #0
	adds r0, r6, #0
	bl func_08008724
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0805D278 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl func_08009300
	str r4, [sp, #4]
	ldr r0, [r6, #0x10]
	movs r1, #0x75
	bl func_08050E50
	add r7, sp, #8
	add r0, sp, #0x14
	mov sl, r0
	movs r1, #9
	ldr r2, _0805D27C @ =0x00000AE9
	adds r0, r6, r2
_0805D1CE:
	strb r1, [r0]
	subs r0, #1
	subs r1, #1
	cmp r1, #0
	bge _0805D1CE
	ldr r0, [r6, #8]
	ldr r2, _0805D280 @ =0x00002C4A
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	cmp r0, #0
	bge _0805D1F0
	movs r3, #0xae
	lsls r3, r3, #4
	adds r1, r6, r3
	movs r0, #0xa
	strb r0, [r1]
_0805D1F0:
	ldr r0, [r6, #8]
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	cmp r0, #0
	bge _0805D204
	ldr r4, _0805D284 @ =0x00000AE1
	adds r1, r6, r4
	movs r0, #0xb
	strb r0, [r1]
_0805D204:
	adds r0, r6, #0
	bl func_0805D9C0
	adds r0, r6, #0
	bl func_0805DC24
	ldr r1, _0805D288 @ =0x00000AD4
	adds r0, r6, r1
	movs r1, #0
	strh r1, [r0]
	ldr r2, _0805D28C @ =0x00000AD6
	adds r0, r6, r2
	strh r1, [r0]
	ldr r3, _0805D290 @ =0x00000AD8
	adds r0, r6, r3
	strh r1, [r0]
	ldr r4, _0805D294 @ =0x00000ADC
	adds r2, r6, r4
	movs r0, #2
	strh r0, [r2]
	ldr r2, _0805D298 @ =0x00000ADA
	adds r0, r6, r2
	strh r1, [r0]
	ldr r0, [sp, #4]
	ldr r1, _0805D29C @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r3, #0
	mov r8, r3
_0805D254:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	ldr r4, _0805D298 @ =0x00000ADA
	adds r0, r6, r4
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0xc
	bls _0805D26E
	b _0805D6EC
_0805D26E:
	lsls r0, r0, #2
	ldr r1, _0805D2A0 @ =_0805D2A4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805D278: .4byte vtable_unk_080E5B80
_0805D27C: .4byte 0x00000AE9
_0805D280: .4byte 0x00002C4A
_0805D284: .4byte 0x00000AE1
_0805D288: .4byte 0x00000AD4
_0805D28C: .4byte 0x00000AD6
_0805D290: .4byte 0x00000AD8
_0805D294: .4byte 0x00000ADC
_0805D298: .4byte 0x00000ADA
_0805D29C: .4byte 0x00000889
_0805D2A0: .4byte _0805D2A4
_0805D2A4: @ jump table
	.4byte _0805D2D8 @ case 0
	.4byte _0805D2F0 @ case 1
	.4byte _0805D488 @ case 2
	.4byte _0805D488 @ case 3
	.4byte _0805D488 @ case 4
	.4byte _0805D4BC @ case 5
	.4byte _0805D4D4 @ case 6
	.4byte _0805D4F4 @ case 7
	.4byte _0805D510 @ case 8
	.4byte _0805D510 @ case 9
	.4byte _0805D510 @ case 10
	.4byte _0805D6A8 @ case 11
	.4byte _0805D6DC @ case 12
_0805D2D8:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0805D2E6
	b _0805D6EC
_0805D2E6:
	ldr r2, _0805D2EC @ =0x00000ADA
	adds r1, r6, r2
	b _0805D6CA
	.align 2, 0
_0805D2EC: .4byte 0x00000ADA
_0805D2F0:
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0805D35C
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xcb
	bl func_08008B6C
	ldr r3, _0805D320 @ =0x00000AD4
	adds r1, r6, r3
	ldrh r2, [r1]
	movs r4, #0
	ldrsh r0, [r1, r4]
	cmp r0, #0
	ble _0805D324
	subs r0, r2, #1
	strh r0, [r1]
	adds r1, r0, #0
	b _0805D326
	.align 2, 0
_0805D320: .4byte 0x00000AD4
_0805D324:
	movs r1, #0
_0805D326:
	ldr r2, _0805D350 @ =0x00000AD4
	adds r0, r6, r2
	strh r1, [r0]
	ldr r3, _0805D354 @ =0x00000AD6
	adds r2, r6, r3
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r3, [r2]
	movs r4, #0
	ldrsh r0, [r2, r4]
	cmp r1, r0
	blt _0805D340
	b _0805D6EC
_0805D340:
	subs r0, r3, #1
	strh r0, [r2]
	ldr r0, _0805D358 @ =0x00000ADA
	adds r1, r6, r0
	movs r0, #5
	strh r0, [r1]
	b _0805D6EC
	.align 2, 0
_0805D350: .4byte 0x00000AD4
_0805D354: .4byte 0x00000AD6
_0805D358: .4byte 0x00000ADA
_0805D35C:
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0
	beq _0805D3CC
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xcb
	bl func_08008B6C
	ldr r2, _0805D390 @ =0x00000AD4
	adds r1, r6, r2
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #8
	bgt _0805D394
	adds r0, r2, #1
	strh r0, [r1]
	adds r1, r0, #0
	b _0805D396
	.align 2, 0
_0805D390: .4byte 0x00000AD4
_0805D394:
	movs r1, #9
_0805D396:
	ldr r4, _0805D3C0 @ =0x00000AD4
	adds r0, r6, r4
	strh r1, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r3, _0805D3C4 @ =0x00000AD6
	adds r2, r6, r3
	movs r4, #0
	ldrsh r0, [r2, r4]
	subs r1, r1, r0
	cmp r1, #7
	bgt _0805D3B0
	b _0805D6EC
_0805D3B0:
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	ldr r0, _0805D3C8 @ =0x00000ADA
	adds r1, r6, r0
	movs r0, #6
	strh r0, [r1]
	b _0805D6EC
	.align 2, 0
_0805D3C0: .4byte 0x00000AD4
_0805D3C4: .4byte 0x00000AD6
_0805D3C8: .4byte 0x00000ADA
_0805D3CC:
	adds r0, r6, #0
	bl func_080088CC
	adds r4, r0, #0
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	beq _0805D454
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xc5
	bl func_08008B6C
	ldr r1, _0805D434 @ =0x00000ADC
	adds r0, r6, r1
	strh r5, [r0]
	ldr r2, _0805D438 @ =0x00000AD4
	adds r0, r6, r2
	movs r3, #0
	ldrsh r1, [r0, r3]
	movs r4, #0xae
	lsls r4, r4, #4
	adds r0, r6, r4
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r2, #4
	adds r1, r6, r2
	strh r0, [r1]
	ldr r2, _0805D43C @ =0x080FB000
	movs r4, #0
	ldrsh r3, [r1, r4]
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r2, #0x10
	ldrsh r1, [r0, r2]
	movs r4, #0xad
	lsls r4, r4, #4
	adds r0, r6, r4
	ldr r0, [r0]
	cmp r1, r0
	bgt _0805D444
	movs r1, #0xaf
	lsls r1, r1, #4
	adds r0, r6, r1
	str r3, [r0]
	ldr r2, _0805D440 @ =0x00000ADA
	adds r1, r6, r2
	movs r0, #8
	strh r0, [r1]
	b _0805D6EC
	.align 2, 0
_0805D434: .4byte 0x00000ADC
_0805D438: .4byte 0x00000AD4
_0805D43C: .4byte 0x080FB000
_0805D440: .4byte 0x00000ADA
_0805D444:
	ldr r3, _0805D450 @ =0x00000ADA
	adds r1, r6, r3
	movs r0, #7
	strh r0, [r1]
	b _0805D6EC
	.align 2, 0
_0805D450: .4byte 0x00000ADA
_0805D454:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0805D464
	b _0805D6EC
_0805D464:
	adds r0, r6, #0
	adds r0, #0x1c
	movs r1, #0xc6
	bl func_08008B6C
	ldr r1, _0805D480 @ =0x00000ADC
	adds r0, r6, r1
	strh r4, [r0]
	ldr r2, _0805D484 @ =0x00000ADA
	adds r1, r6, r2
	movs r0, #2
	strh r0, [r1]
	b _0805D6EC
	.align 2, 0
_0805D480: .4byte 0x00000ADC
_0805D484: .4byte 0x00000ADA
_0805D488:
	ldr r3, _0805D4A8 @ =0x00000ADC
	adds r0, r6, r3
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r0, #2
	beq _0805D496
	b _0805D6EC
_0805D496:
	ldr r1, _0805D4AC @ =0x00000ADE
	adds r0, r6, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0
	bne _0805D4B0
	subs r3, #2
	adds r1, r6, r3
	b _0805D660
	.align 2, 0
_0805D4A8: .4byte 0x00000ADC
_0805D4AC: .4byte 0x00000ADE
_0805D4B0:
	ldr r4, _0805D4B8 @ =0x00000ADA
	adds r1, r6, r4
	b _0805D69C
	.align 2, 0
_0805D4B8: .4byte 0x00000ADA
_0805D4BC:
	movs r1, #0xa6
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrh r1, [r0]
	subs r1, #4
	strh r1, [r0]
	movs r0, #0xf
	ands r1, r0
	cmp r1, #0
	beq _0805D4D2
	b _0805D6EC
_0805D4D2:
	b _0805D698
_0805D4D4:
	movs r3, #0xa6
	lsls r3, r3, #1
	adds r0, r6, r3
	ldrh r1, [r0]
	adds r1, #4
	strh r1, [r0]
	movs r0, #0xf
	ands r1, r0
	cmp r1, #0
	beq _0805D4EA
	b _0805D6EC
_0805D4EA:
	ldr r4, _0805D4F0 @ =0x00000ADA
	adds r1, r6, r4
	b _0805D69C
	.align 2, 0
_0805D4F0: .4byte 0x00000ADA
_0805D4F4:
	ldr r1, _0805D508 @ =0x00000ADC
	adds r0, r6, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #2
	beq _0805D502
	b _0805D6EC
_0805D502:
	ldr r3, _0805D50C @ =0x00000ADA
	adds r1, r6, r3
	b _0805D69C
	.align 2, 0
_0805D508: .4byte 0x00000ADC
_0805D50C: .4byte 0x00000ADA
_0805D510:
	ldr r4, _0805D544 @ =0x00000ADC
	adds r0, r6, r4
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #2
	beq _0805D51E
	b _0805D6EC
_0805D51E:
	ldr r2, _0805D548 @ =0x00000ADE
	adds r0, r6, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #0
	beq _0805D52C
	b _0805D698
_0805D52C:
	subs r4, #4
	adds r0, r6, r4
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #1
	beq _0805D552
	cmp r0, #1
	bgt _0805D54C
	cmp r0, #0
	beq _0805D5C8
	b _0805D600
	.align 2, 0
_0805D544: .4byte 0x00000ADC
_0805D548: .4byte 0x00000ADE
_0805D54C:
	cmp r0, #8
	beq _0805D588
	b _0805D600
_0805D552:
	ldr r0, [r6, #8]
	ldr r2, _0805D578 @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800EAFC
	ldr r2, [r6, #8]
	ldr r3, _0805D57C @ =0x00002C4A
	adds r2, r2, r3
	ldrb r0, [r2]
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
	ldr r0, [r6, #8]
	ldr r4, _0805D580 @ =0x00001C2C
	adds r0, r0, r4
	ldr r1, _0805D584 @ =0x0000015F
	bl func_0800F510
	b _0805D624
	.align 2, 0
_0805D578: .4byte 0x00001BD8
_0805D57C: .4byte 0x00002C4A
_0805D580: .4byte 0x00001C2C
_0805D584: .4byte 0x0000015F
_0805D588:
	ldr r0, _0805D5C0 @ =0x080FB0F0
	ldrh r1, [r0, #0x10]
	adds r0, r7, #0
	bl __4FoodUi
	ldr r5, [r6, #8]
	ldr r0, _0805D5C4 @ =0x00001C2C
	adds r5, r5, r0
	add r4, sp, #0xc
	adds r0, r4, #0
	adds r1, r7, #0
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0xd
	ldrb r2, [r0]
	lsls r2, r2, #8
	orrs r2, r1
	adds r0, #1
	ldrb r1, [r0]
	lsls r1, r1, #0x10
	orrs r1, r2
	adds r0, r5, #0
	bl func_0800F3B0
	b _0805D624
	.align 2, 0
_0805D5C0: .4byte 0x080FB0F0
_0805D5C4: .4byte 0x00001C2C
_0805D5C8:
	ldr r2, [r6, #8]
	ldr r1, _0805D668 @ =0x00002C4A
	adds r2, r2, r1
	ldrb r0, [r2]
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2]
	ldr r2, [r6, #8]
	ldr r3, _0805D66C @ =0x0000218C
	adds r2, r2, r3
	ldr r3, [r2]
	lsls r1, r3, #0xf
	lsrs r1, r1, #0x1c
	adds r1, #1
	movs r0, #0xf
	ands r1, r0
	lsls r1, r1, #0xd
	ldr r0, _0805D670 @ =0xFFFE1FFF
	ands r0, r3
	orrs r0, r1
	str r0, [r2]
	ldr r2, [r6, #8]
	ldr r4, _0805D674 @ =0x000021C7
	adds r2, r2, r4
	ldrb r0, [r2]
	movs r1, #4
	orrs r0, r1
	strb r0, [r2]
_0805D600:
	add r4, sp, #0x10
	ldr r1, _0805D678 @ =0x080FB0F0
	ldr r2, _0805D67C @ =0x00000AD8
	adds r0, r6, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r4, #0
	bl __7ArticleUi
	ldr r0, [r6, #8]
	ldr r1, _0805D680 @ =0x00001C2C
	adds r0, r0, r1
	ldrb r1, [r4]
	bl func_0800F3E8
_0805D624:
	movs r2, #0xad
	lsls r2, r2, #4
	adds r3, r6, r2
	ldr r2, _0805D684 @ =0x080FB000
	ldr r4, _0805D67C @ =0x00000AD8
	adds r0, r6, r4
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	movs r1, #0x10
	ldrsh r0, [r0, r1]
	ldr r2, [r3]
	subs r2, r2, r0
	str r2, [r3]
	ldr r3, [r6, #8]
	ldr r4, _0805D688 @ =0x00002C48
	adds r3, r3, r4
	ldr r0, _0805D68C @ =0x0001FFFF
	ands r2, r0
	lsls r2, r2, #2
	ldr r0, [r3]
	ldr r1, _0805D690 @ =0xFFF80003
	ands r0, r1
	orrs r0, r2
	str r0, [r3]
	ldr r0, _0805D694 @ =0x00000ADA
	adds r1, r6, r0
_0805D660:
	movs r0, #0xb
	strh r0, [r1]
	b _0805D6EC
	.align 2, 0
_0805D668: .4byte 0x00002C4A
_0805D66C: .4byte 0x0000218C
_0805D670: .4byte 0xFFFE1FFF
_0805D674: .4byte 0x000021C7
_0805D678: .4byte 0x080FB0F0
_0805D67C: .4byte 0x00000AD8
_0805D680: .4byte 0x00001C2C
_0805D684: .4byte 0x080FB000
_0805D688: .4byte 0x00002C48
_0805D68C: .4byte 0x0001FFFF
_0805D690: .4byte 0xFFF80003
_0805D694: .4byte 0x00000ADA
_0805D698:
	ldr r2, _0805D6A4 @ =0x00000ADA
	adds r1, r6, r2
_0805D69C:
	movs r0, #1
	strh r0, [r1]
	b _0805D6EC
	.align 2, 0
_0805D6A4: .4byte 0x00000ADA
_0805D6A8:
	ldr r0, [sp, #4]
	ldr r1, _0805D6D4 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r3, _0805D6D8 @ =0x00000ADA
	adds r1, r6, r3
_0805D6CA:
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0805D6EC
	.align 2, 0
_0805D6D4: .4byte 0x00000889
_0805D6D8: .4byte 0x00000ADA
_0805D6DC:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0805D6EC
	movs r4, #1
	mov r8, r4
_0805D6EC:
	adds r0, r6, #0
	bl func_0805D760
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	movs r3, #0xa6
	lsls r3, r3, #1
	adds r1, r6, r3
	ldrh r1, [r1]
	strh r1, [r2]
	strh r1, [r0, #0x16]
	adds r0, r6, #0
	bl func_0805DE24
	adds r0, r6, #0
	bl func_0805DFC4
	mov r4, r8
	cmp r4, #1
	beq _0805D71A
	b _0805D254
_0805D71A:
	movs r0, #0
	str r0, [sp, #8]
	str r7, [sp, #0x14]
	mov r1, sl
	str r0, [r1, #4]
	str r0, [r7]
	mov r2, sb
	str r0, [r2]
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _0805D73C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805D73C:
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _0805D74E
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805D74E:
	mov r0, sb
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0805D760
func_0805D760: @ 0x0805D760
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r0, [r7, #0x10]
	mov sb, r0
	adds r0, r7, #0
	bl func_080088DC
	mov r8, r0
	adds r0, r7, #0
	bl func_08008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_0800894C
	adds r1, r7, #0
	adds r1, #0x14
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl func_08050D3C
	cmp r0, #6
	bls _0805D7B2
	b _0805D9A8
_0805D7B2:
	lsls r0, r0, #2
	ldr r1, _0805D7BC @ =_0805D7C0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805D7BC: .4byte _0805D7C0
_0805D7C0: @ jump table
	.4byte _0805D7DC @ case 0
	.4byte _0805D9A8 @ case 1
	.4byte _0805D9A8 @ case 2
	.4byte _0805D7FE @ case 3
	.4byte _0805D9A8 @ case 4
	.4byte _0805D9A8 @ case 5
	.4byte _0805D9A8 @ case 6
_0805D7DC:
	ldr r1, _0805D7F4 @ =0x00000ADC
	adds r4, r7, r1
	movs r3, #0
	ldrsh r0, [r4, r3]
	cmp r0, #0
	bne _0805D7F8
	ldr r0, [r7, #0x10]
	bl func_08050D5C
	movs r0, #3
	strh r0, [r4]
	b _0805D9A8
	.align 2, 0
_0805D7F4: .4byte 0x00000ADC
_0805D7F8:
	movs r0, #2
	strh r0, [r4]
	b _0805D9A8
_0805D7FE:
	ldr r4, _0805D818 @ =0x00000ADC
	adds r5, r7, r4
	movs r6, #0
	ldrsh r4, [r5, r6]
	cmp r4, #5
	bne _0805D81C
	ldr r0, [r7, #0x10]
	bl func_08050D74
	movs r0, #1
	strh r0, [r5]
	b _0805D9A8
	.align 2, 0
_0805D818: .4byte 0x00000ADC
_0805D81C:
	cmp r4, #4
	bne _0805D8A4
	ldr r0, [r7, #0x10]
	bl func_08050DF0
	movs r1, #0
	mov r8, r1
	movs r3, #3
	strh r3, [r5]
	ldr r6, _0805D840 @ =0x00000ADA
	adds r2, r7, r6
	movs r6, #0
	ldrsh r1, [r2, r6]
	cmp r1, #2
	beq _0805D844
	cmp r1, #8
	beq _0805D870
	b _0805D9A8
	.align 2, 0
_0805D840: .4byte 0x00000ADA
_0805D844:
	cmp r0, #1
	bne _0805D858
	ldr r1, _0805D854 @ =0x00000ADE
	adds r0, r7, r1
	mov r4, r8
	strh r4, [r0]
	strh r3, [r2]
	b _0805D9A8
	.align 2, 0
_0805D854: .4byte 0x00000ADE
_0805D858:
	cmp r0, #2
	beq _0805D85E
	b _0805D9A8
_0805D85E:
	ldr r6, _0805D86C @ =0x00000ADE
	adds r1, r7, r6
	movs r0, #1
	strh r0, [r1]
	strh r4, [r2]
	b _0805D9A8
	.align 2, 0
_0805D86C: .4byte 0x00000ADE
_0805D870:
	cmp r0, #1
	bne _0805D88C
	ldr r1, _0805D888 @ =0x00000ADE
	adds r0, r7, r1
	mov r3, r8
	strh r3, [r0]
	movs r0, #5
	strh r0, [r5]
	movs r0, #9
	strh r0, [r2]
	b _0805D9A8
	.align 2, 0
_0805D888: .4byte 0x00000ADE
_0805D88C:
	cmp r0, #2
	beq _0805D892
	b _0805D9A8
_0805D892:
	ldr r4, _0805D8A0 @ =0x00000ADE
	adds r0, r7, r4
	movs r1, #1
	strh r1, [r0]
	movs r0, #0xa
	strh r0, [r2]
	b _0805D9A8
	.align 2, 0
_0805D8A0: .4byte 0x00000ADE
_0805D8A4:
	cmp r4, #3
	beq _0805D8AA
	b _0805D9A8
_0805D8AA:
	movs r0, #5
	strh r0, [r5]
	ldr r6, _0805D8C8 @ =0x00000ADA
	adds r0, r7, r6
	ldrh r0, [r0]
	subs r0, #2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #8
	bhi _0805D9A8
	lsls r0, r0, #2
	ldr r1, _0805D8CC @ =_0805D8D0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805D8C8: .4byte 0x00000ADA
_0805D8CC: .4byte _0805D8D0
_0805D8D0: @ jump table
	.4byte _0805D8F4 @ case 0
	.4byte _0805D928 @ case 1
	.4byte _0805D934 @ case 2
	.4byte _0805D9A8 @ case 3
	.4byte _0805D9A8 @ case 4
	.4byte _0805D99C @ case 5
	.4byte _0805D94C @ case 6
	.4byte _0805D9A8 @ case 7
	.4byte _0805D984 @ case 8
_0805D8F4:
	ldr r0, [r7, #0x10]
	ldr r1, _0805D914 @ =0x080FB108
	ldr r2, _0805D918 @ =0x080FB120
	ldr r3, _0805D91C @ =0x080FB124
	ldr r4, _0805D920 @ =0x00000AEC
	adds r5, r7, r4
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	bl func_08050E30
	ldr r6, _0805D924 @ =0x00000ADC
	adds r1, r7, r6
	b _0805D968
	.align 2, 0
_0805D914: .4byte 0x080FB108
_0805D918: .4byte 0x080FB120
_0805D91C: .4byte 0x080FB124
_0805D920: .4byte 0x00000AEC
_0805D924: .4byte 0x00000ADC
_0805D928:
	ldr r0, [r7, #0x10]
	ldr r1, _0805D930 @ =0x080FB128
	b _0805D988
	.align 2, 0
_0805D930: .4byte 0x080FB128
_0805D934:
	ldr r0, [r7, #0x10]
	ldr r1, _0805D944 @ =0x080FB140
	ldr r4, _0805D948 @ =0x00000AEC
	adds r2, r7, r4
	bl func_08050DA0
	b _0805D9A8
	.align 2, 0
_0805D944: .4byte 0x080FB140
_0805D948: .4byte 0x00000AEC
_0805D94C:
	ldr r0, [r7, #0x10]
	ldr r1, _0805D970 @ =0x080FB158
	ldr r2, _0805D974 @ =0x080FB120
	ldr r3, _0805D978 @ =0x080FB124
	ldr r6, _0805D97C @ =0x00000AEC
	adds r5, r7, r6
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	bl func_08050E30
	ldr r0, _0805D980 @ =0x00000ADC
	adds r1, r7, r0
_0805D968:
	movs r0, #4
	strh r0, [r1]
	b _0805D9A8
	.align 2, 0
_0805D970: .4byte 0x080FB158
_0805D974: .4byte 0x080FB120
_0805D978: .4byte 0x080FB124
_0805D97C: .4byte 0x00000AEC
_0805D980: .4byte 0x00000ADC
_0805D984:
	ldr r0, [r7, #0x10]
	ldr r1, _0805D994 @ =0x080FB164
_0805D988:
	ldr r3, _0805D998 @ =0x00000AEC
	adds r2, r7, r3
	bl func_08050DA0
	b _0805D9A8
	.align 2, 0
_0805D994: .4byte 0x080FB164
_0805D998: .4byte 0x00000AEC
_0805D99C:
	ldr r0, [r7, #0x10]
	ldr r1, _0805D9B8 @ =0x080FB17C
	ldr r4, _0805D9BC @ =0x00000AEC
	adds r2, r7, r4
	bl func_08050DA0
_0805D9A8:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805D9B8: .4byte 0x080FB17C
_0805D9BC: .4byte 0x00000AEC

	thumb_func_start func_0805D9C0
func_0805D9C0: @ 0x0805D9C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x58
	adds r6, r0, #0
	bl func_08008918
	add r1, sp, #0xc
	movs r4, #0
	strh r4, [r1]
	strh r4, [r0, #0x14]
	adds r0, r6, #0
	bl func_08008918
	add r2, sp, #0xc
	movs r3, #0xa6
	lsls r3, r3, #1
	adds r1, r6, r3
	ldrh r1, [r1]
	strh r1, [r2]
	strh r1, [r0, #0x16]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x18]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1a]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1c]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	ldr r1, _0805DBDC @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	movs r4, #1
	rsbs r4, r4, #0
	ldr r0, _0805DBE0 @ =0x0600E000
	mov sb, r0
	movs r1, #0x80
	lsls r1, r1, #4
	mov r8, r1
	adds r0, r4, #0
	mov r1, sb
	mov r2, r8
	bl func_08008EB8
	ldr r2, _0805DBE4 @ =0x0600E800
	mov sl, r2
	adds r0, r4, #0
	mov r1, sl
	mov r2, r8
	bl func_08008EB8
	ldr r1, _0805DBE8 @ =0x0600F000
	adds r0, r4, #0
	mov r2, r8
	bl func_08008EB8
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	movs r3, #0xf2
	lsls r3, r3, #5
	adds r2, r3, #0
	strh r2, [r1]
	movs r5, #0
	strh r2, [r0]
	adds r0, r6, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _0805DBEC @ =0x00005C43
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	adds r0, r6, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _0805DBF0 @ =0x00001D41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r6, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _0805DBF4 @ =0x00005E42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	ldr r0, _0805DBF8 @ =0x080F9F70
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r2, _0805DBFC @ =0x080F9F74
	ldr r2, [r2]
	bl func_08008E64
	ldr r0, _0805DC00 @ =0x00030003
	mov r1, sb
	mov r2, r8
	bl func_08008EB8
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x1c]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x1e]
	movs r0, #3
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	mov r0, sl
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl func_08051320
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x18]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x1a]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x14]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x16]
	ldr r0, _0805DC04 @ =0x080F9F78
	ldr r0, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x20
	bl func_08008E64
	ldr r0, _0805DC08 @ =0x05000040
	movs r1, #0xf8
	lsls r1, r1, #2
	mov r8, r1
	strh r1, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	ldr r2, _0805DC0C @ =0x00004218
	mov sb, r2
	strh r2, [r0]
	movs r3, #0x92
	lsls r3, r3, #1
	adds r4, r6, r3
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r1, _0805DC10 @ =0x05000200
	adds r0, r0, r1
	mov r2, r8
	strh r2, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r3, _0805DC14 @ =0x05000202
	adds r0, r0, r3
	strh r5, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r1, _0805DC18 @ =0x05000204
	adds r0, r0, r1
	mov r2, sb
	strh r2, [r0]
	add r3, sp, #0x54
	mov sb, r3
	add r0, sp, #0x14
	mov r8, r0
	movs r7, #1
	movs r1, #2
	mov sl, r1
	movs r2, #0x8e
	lsls r2, r2, #1
	adds r6, r6, r2
_0805DB84:
	ldr r0, _0805DC1C @ =0x080FB1A6
	lsls r4, r5, #1
	adds r0, r4, r0
	ldrh r1, [r0]
	add r0, sp, #0x54
	strh r7, [r0]
	mov r0, sl
	mov r3, sb
	strh r0, [r3, #2]
	ldr r0, [sp, #0x54]
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r7, [sp, #8]
	add r1, sp, #0x14
	movs r2, #0
	movs r3, #0
	bl func_0804E5AC
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl func_08007D4C
	adds r1, r0, #0
	adds r1, r1, r4
	lsls r1, r1, #5
	ldr r2, _0805DC20 @ =0x06010000
	adds r1, r1, r2
	mov r0, r8
	movs r2, #0x40
	bl func_08008E64
	adds r5, #1
	cmp r5, #0x17
	ble _0805DB84
	add sp, #0x58
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805DBDC: .4byte 0x06007FE0
_0805DBE0: .4byte 0x0600E000
_0805DBE4: .4byte 0x0600E800
_0805DBE8: .4byte 0x0600F000
_0805DBEC: .4byte 0x00005C43
_0805DBF0: .4byte 0x00001D41
_0805DBF4: .4byte 0x00005E42
_0805DBF8: .4byte 0x080F9F70
_0805DBFC: .4byte 0x080F9F74
_0805DC00: .4byte 0x00030003
_0805DC04: .4byte 0x080F9F78
_0805DC08: .4byte 0x05000040
_0805DC0C: .4byte 0x00004218
_0805DC10: .4byte 0x05000200
_0805DC14: .4byte 0x05000202
_0805DC18: .4byte 0x05000204
_0805DC1C: .4byte 0x080FB1A6
_0805DC20: .4byte 0x06010000

	thumb_func_start func_0805DC24
func_0805DC24: @ 0x0805DC24
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _0805DE0C @ =0xFFFFFC20
	add sp, r4
	mov r8, r0
	add r1, sp, #0xc
	movs r0, #0
	str r0, [sp, #0xc]
	strh r0, [r1, #4]
	add r1, sp, #0x14
	mov sb, r1
	str r0, [sp, #0x14]
	strh r0, [r1, #4]
	add r6, sp, #0x1c
	str r0, [sp, #0x1c]
	strh r0, [r6, #4]
	add r1, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r1, #4]
	mov r0, r8
	adds r0, #0x80
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	adds r0, #4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x2c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x2c
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0xc
	adds r0, r4, #0
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r5, r7}
	stm r1!, {r5, r7}
	ldr r5, [sp, #0x1c]
	movs r0, #0x9a
	lsls r0, r0, #1
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r7, _0805DE10 @ =0x05000200
	adds r1, r0, r7
	ldr r0, [sp, #0x1c]
	movs r2, #0
	cmp r0, #0
	beq _0805DCA6
	ldrh r2, [r6, #4]
_0805DCA6:
	adds r0, r5, #0
	bl func_08008E64
	mov r1, r8
	adds r1, #0x50
	adds r0, r4, #0
	movs r2, #0
	bl func_0805E790
	add r1, sp, #0xc
	adds r0, r4, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r4, r5}
	stm r1!, {r4, r5}
	ldr r4, [sp, #0x1c]
	movs r0, #0xa2
	lsls r0, r0, #1
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r7
	ldr r0, [sp, #0x1c]
	movs r2, #0
	cmp r0, #0
	beq _0805DCE4
	ldrh r2, [r6, #4]
_0805DCE4:
	adds r0, r4, #0
	bl func_08008E64
	ldr r4, [sp, #0x14]
	movs r0, #0x9e
	lsls r0, r0, #1
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r7, _0805DE14 @ =0x06010000
	adds r1, r0, r7
	ldr r0, [sp, #0x14]
	movs r2, #0
	cmp r0, #0
	beq _0805DD0A
	mov r0, sb
	ldrh r2, [r0, #4]
_0805DD0A:
	adds r0, r4, #0
	bl func_08008E64
	movs r4, #0
	add r6, sp, #0x3d0
	movs r1, #0xf5
	lsls r1, r1, #2
	add r1, sp
	str r1, [sp, #0x3d8]
	mov r2, sp
	adds r2, #0x50
	str r2, [sp, #0x3dc]
	movs r3, #0xe
	mov sl, r3
	movs r5, #2
	mov sb, r5
	ldr r5, _0805DE18 @ =0x06002800
	adds r7, r6, #0
_0805DD2E:
	mov r0, sl
	strh r0, [r7]
	mov r1, sb
	strh r1, [r6, #2]
	ldr r0, [r7]
	add r1, sp, #0x50
	movs r2, #0
	bl func_0804E7A0
	movs r0, #0xae
	lsls r0, r0, #4
	add r0, r8
	adds r0, r0, r4
	ldrb r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _0805DE1C @ =0x080FB000
	adds r1, r1, r0
	add r0, sp, #0x3d4
	mov r2, sl
	strh r2, [r0]
	mov r2, sb
	ldr r3, [sp, #0x3d8]
	strh r2, [r3, #2]
	ldr r0, [r0]
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	add r1, sp, #0x50
	movs r2, #0
	bl func_0804E958
	ldr r0, [sp, #0x3dc]
	adds r1, r5, #0
	movs r2, #0xe0
	lsls r2, r2, #2
	bl func_08008E64
	movs r2, #0xe0
	lsls r2, r2, #2
	adds r5, r5, r2
	adds r4, #1
	cmp r4, #9
	ble _0805DD2E
	movs r0, #1
	rsbs r0, r0, #0
	movs r1, #0xb4
	lsls r1, r1, #2
	add r1, r8
	movs r2, #0x80
	lsls r2, r2, #4
	bl func_08008EB8
	movs r5, #0x85
	lsls r5, r5, #6
	movs r1, #0
	movs r3, #0xb5
	lsls r3, r3, #2
	add r3, r8
	mov ip, r3
_0805DDAC:
	movs r4, #0
	lsls r0, r1, #1
	adds r6, r5, #0
	adds r6, #0x1c
	adds r1, #1
	mov sb, r1
	adds r1, r0, #4
	lsls r1, r1, #6
	adds r0, #5
	lsls r0, r0, #6
	adds r3, r5, #0
	adds r3, #0xe
	mov r7, ip
	adds r2, r0, r7
	add r1, ip
_0805DDCA:
	adds r0, r5, r4
	strh r0, [r1]
	strh r3, [r2]
	adds r3, #1
	adds r2, #2
	adds r1, #2
	adds r4, #1
	cmp r4, #0xd
	ble _0805DDCA
	lsls r0, r6, #0x10
	lsrs r5, r0, #0x10
	mov r1, sb
	cmp r1, #9
	ble _0805DDAC
	movs r0, #0xb4
	lsls r0, r0, #2
	add r0, r8
	ldr r1, _0805DE20 @ =0x0600F000
	movs r2, #0x80
	lsls r2, r2, #4
	bl func_08008E64
	movs r3, #0xf8
	lsls r3, r3, #2
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805DE0C: .4byte 0xFFFFFC20
_0805DE10: .4byte 0x05000200
_0805DE14: .4byte 0x06010000
_0805DE18: .4byte 0x06002800
_0805DE1C: .4byte 0x080FB000
_0805DE20: .4byte 0x0600F000

	thumb_func_start func_0805DE24
func_0805DE24: @ 0x0805DE24
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	ldr r0, _0805DEB8 @ =0x000002CE
	adds r1, r5, r0
	movs r0, #0
	strh r0, [r1]
	movs r4, #0
	ldr r6, _0805DEBC @ =0x080FB000
_0805DE36:
	lsls r2, r4, #4
	movs r1, #0xa6
	lsls r1, r1, #1
	adds r0, r5, r1
	ldrh r0, [r0]
	subs r0, #0x20
	subs r2, r2, r0
	movs r1, #0xae
	lsls r1, r1, #4
	adds r0, r5, r1
	adds r0, r0, r4
	ldrb r1, [r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r1, #0x10
	ldrsh r0, [r0, r1]
	str r0, [sp]
	movs r0, #4
	str r0, [sp, #4]
	movs r0, #0xa
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0x90
	movs r3, #3
	bl func_0805DEC0
	adds r4, #1
	cmp r4, #9
	ble _0805DE36
	movs r4, #0
	movs r7, #1
	movs r6, #8
_0805DE7A:
	adds r3, r4, #0
	adds r3, #0xd
	str r7, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #4
	bl func_0805DF68
	adds r6, #8
	adds r4, #1
	cmp r4, #0xa
	ble _0805DE7A
	movs r1, #0xad
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r0, [r0]
	str r0, [sp]
	movs r0, #5
	str r0, [sp, #4]
	movs r0, #0xa
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0x88
	movs r2, #4
	movs r3, #1
	bl func_0805DEC0
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805DEB8: .4byte 0x000002CE
_0805DEBC: .4byte 0x080FB000

	thumb_func_start func_0805DEC0
func_0805DEC0: @ 0x0805DEC0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	adds r6, r1, #0
	str r2, [sp, #4]
	mov sb, r3
	ldr r0, [sp, #0x28]
	mov r8, r0
	ldr r4, [sp, #0x2c]
	cmp r4, #1
	ble _0805DEF6
	subs r4, #1
	movs r5, #0xa
	cmp r4, #1
	ble _0805DEF2
_0805DEE6:
	lsls r0, r5, #2
	adds r0, r0, r5
	lsls r5, r0, #1
	subs r4, #1
	cmp r4, #1
	bgt _0805DEE6
_0805DEF2:
	adds r4, r5, #0
	b _0805DEF8
_0805DEF6:
	movs r4, #1
_0805DEF8:
	movs r7, #0
	cmp r4, #0
	ble _0805DF42
_0805DEFE:
	cmp r4, #1
	bne _0805DF04
	movs r7, #1
_0805DF04:
	mov r0, r8
	adds r1, r4, #0
	bl __divsi3
	adds r5, r0, #0
	cmp r5, #0
	bne _0805DF16
	cmp r7, #0
	beq _0805DF28
_0805DF16:
	mov r1, sb
	str r1, [sp]
	mov r0, sl
	adds r1, r6, #0
	ldr r2, [sp, #4]
	adds r3, r5, #0
	bl func_0805DF68
	movs r7, #1
_0805DF28:
	adds r6, #8
	adds r0, r5, #0
	muls r0, r4, r0
	mov r1, r8
	subs r1, r1, r0
	mov r8, r1
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	adds r4, r0, #0
	cmp r4, #0
	bgt _0805DEFE
_0805DF42:
	ldr r0, [sp, #0x30]
	cmp r0, #0
	beq _0805DF58
	mov r1, sb
	str r1, [sp]
	mov r0, sl
	adds r1, r6, #0
	ldr r2, [sp, #4]
	ldr r3, [sp, #0x30]
	bl func_0805DF68
_0805DF58:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0805DF68
func_0805DF68: @ 0x0805DF68
	push {r4, r5, r6, lr}
	mov ip, r0
	ldr r6, [sp, #0x10]
	ldr r5, _0805DFC0 @ =0x000002CE
	add r5, ip
	movs r0, #0
	ldrsh r4, [r5, r0]
	lsls r4, r4, #3
	movs r0, #0xa7
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r4
	strh r1, [r0]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #3
	movs r0, #0xa8
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r1
	strh r2, [r0]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #3
	movs r0, #0xa9
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r1
	strh r3, [r0]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #3
	movs r0, #0xaa
	lsls r0, r0, #1
	add r0, ip
	adds r0, r0, r1
	strh r6, [r0]
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805DFC0: .4byte 0x000002CE

	thumb_func_start func_0805DFC4
func_0805DFC4: @ 0x0805DFC4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x80
	adds r6, r0, #0
	mov r1, sp
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0xc]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x18]
	add r3, sp, #0x1c
	str r0, [sp, #0x1c]
	strh r0, [r3, #4]
	add r2, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r2, #4]
	add r1, sp, #0x2c
	str r0, [sp, #0x2c]
	strh r0, [r1, #4]
	add r1, sp, #0x34
	str r0, [sp, #0x34]
	strh r0, [r1, #4]
	ldr r1, _0805E1C0 @ =0x00000ADA
	adds r0, r6, r1
	movs r4, #0
	ldrsh r0, [r0, r4]
	cmp r0, #0
	ble _0805E0C8
	adds r4, r6, #0
	adds r4, #0xe8
	adds r0, r4, #0
	bl func_0805E8F0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	adds r0, r6, #0
	adds r0, #0xec
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x3c
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x1c
	ldm r4!, {r1, r5, r7}
	stm r0!, {r1, r5, r7}
	ldm r4!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldm r4!, {r1, r7}
	stm r0!, {r1, r7}
	mov r1, sp
	adds r0, r6, #0
	adds r0, #0xfc
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r7}
	stm r1!, {r2, r5, r7}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0xc
	strh r0, [r1]
	mov r2, sp
	ldr r3, _0805E1C4 @ =0x00000AD4
	adds r0, r6, r3
	movs r4, #0
	ldrsh r1, [r0, r4]
	lsls r1, r1, #4
	ldr r5, _0805E1C8 @ =0x00000AD6
	adds r0, r6, r5
	movs r7, #0
	ldrsh r0, [r0, r7]
	lsls r0, r0, #4
	subs r0, #0x28
	subs r1, r1, r0
	strh r1, [r2, #2]
	movs r1, #0x9e
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	movs r2, #0xa2
	lsls r2, r2, #1
	adds r0, r6, r2
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r0, #2
	strh r0, [r1, #8]
	movs r0, #1
	strb r0, [r1, #0x18]
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805E0C0
	mov r4, sp
	ldrh r2, [r4, #0x20]
_0805E0C0:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_0805E0C8:
	movs r5, #0xa6
	lsls r5, r5, #1
	adds r0, r6, r5
	ldrh r0, [r0]
	mov r7, sp
	adds r7, #0x6c
	str r7, [sp, #0x74]
	cmp r0, #0
	bne _0805E0DC
	b _0805E2C8
_0805E0DC:
	adds r4, r6, #0
	adds r4, #0x80
	adds r0, r4, #0
	bl func_0805E8F0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	adds r0, r6, #0
	adds r0, #0x84
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r7, sp, #0x3c
	adds r0, r7, #0
	adds r1, r7, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	adds r0, r7, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r4, r5}
	stm r1!, {r4, r5}
	mov r1, sp
	adds r0, r6, #0
	adds r0, #0x94
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0xe8
	strh r0, [r1]
	movs r0, #0x1a
	strh r0, [r1, #2]
	movs r5, #0x96
	lsls r5, r5, #1
	adds r4, r6, r5
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	adds r0, #4
	strh r0, [r1, #6]
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r0, #2
	strh r0, [r1, #8]
	mov r0, sp
	movs r2, #1
	mov sb, r2
	mov r3, sb
	strb r3, [r0, #0x18]
	adds r0, r6, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r0, [sp, #0x24]
	mov r8, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _0805E18C
	mov r1, sp
	ldrh r3, [r1, #0x28]
_0805E18C:
	str r5, [sp, #0x78]
	lsls r2, r2, #5
	ldr r4, _0805E1CC @ =0x06010080
	adds r2, r2, r4
	adds r0, r7, #0
	mov r1, r8
	bl func_08008F0C
	mov sl, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0805E1D0
	cmp r1, #0
	beq _0805E1B6
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805E1B6:
	ldr r3, [sp, #0x78]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _0805E2AA
	.align 2, 0
_0805E1C0: .4byte 0x00000ADA
_0805E1C4: .4byte 0x00000AD4
_0805E1C8: .4byte 0x00000AD6
_0805E1CC: .4byte 0x06010080
_0805E1D0:
	str r1, [sp, #0x7c]
	mov r4, sb
	str r4, [sp, #0x60]
	ldr r5, [sp, #0x78]
	ldr r0, [r5]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x5c]
	add r1, sp, #0x60
	add r0, sp, #0x5c
	cmp r4, #1
	bhs _0805E1EC
	adds r0, r1, #0
_0805E1EC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805E20A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0805E20E
	mov r0, sb
	bl func_080D3BC0
	b _0805E20E
_0805E20A:
	movs r0, #0
	mov sb, r0
_0805E20E:
	adds r4, r0, #0
	mov r8, r4
	ldr r0, [sp, #0x78]
	ldr r2, [r0]
	mov r3, r8
	mov r1, sp
	adds r1, #0x6c
	str r1, [sp, #0x74]
	ldr r4, [sp, #0x7c]
	cmp r2, r4
	beq _0805E23E
_0805E224:
	cmp r3, #0
	beq _0805E234
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805E234:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x7c]
	cmp r2, r5
	bne _0805E224
_0805E23E:
	adds r4, r3, #0
	ldr r0, [sp, #0x60]
	cmp r0, #1
	bne _0805E25A
	cmp r4, #0
	beq _0805E256
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805E256:
	adds r4, #0x10
	b _0805E282
_0805E25A:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _0805E280
_0805E262:
	cmp r2, #0
	beq _0805E272
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805E272:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _0805E262
_0805E280:
	adds r4, r2, #0
_0805E282:
	ldr r3, [sp, #0x78]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _0805E294
_0805E28E:
	adds r1, #0x10
	cmp r1, r2
	bne _0805E28E
_0805E294:
	cmp r0, #0
	beq _0805E29C
	bl free
_0805E29C:
	mov r0, sb
	add r0, r8
	mov r5, r8
	ldr r7, [sp, #0x78]
	str r5, [r7]
	str r4, [r7, #4]
	str r0, [r7, #0xc]
_0805E2AA:
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805E2C0
	mov r0, sp
	ldrh r2, [r0, #0x20]
_0805E2C0:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_0805E2C8:
	movs r1, #0xa6
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrh r0, [r0]
	cmp r0, #0x1f
	bls _0805E2D6
	b _0805E4B2
_0805E2D6:
	adds r4, r6, #0
	adds r4, #0xb4
	adds r0, r4, #0
	bl func_0805E8F0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	adds r0, r6, #0
	adds r0, #0xb8
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r7, sp, #0x3c
	adds r0, r7, #0
	adds r1, r7, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	adds r0, r7, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r4, r5}
	stm r1!, {r4, r5}
	mov r1, sp
	adds r0, r6, #0
	adds r0, #0xc8
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0xe8
	strh r0, [r1]
	movs r0, #0x98
	strh r0, [r1, #2]
	movs r5, #0x96
	lsls r5, r5, #1
	adds r4, r6, r5
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	adds r0, #8
	strh r0, [r1, #6]
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r0, #2
	strh r0, [r1, #8]
	mov r0, sp
	movs r2, #1
	mov sb, r2
	mov r3, sb
	strb r3, [r0, #0x18]
	adds r0, r6, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r0, [sp, #0x24]
	mov r8, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _0805E386
	mov r1, sp
	ldrh r3, [r1, #0x28]
_0805E386:
	str r5, [sp, #0x78]
	lsls r2, r2, #5
	ldr r4, _0805E3BC @ =0x06010100
	adds r2, r2, r4
	adds r0, r7, #0
	mov r1, r8
	bl func_08008F0C
	mov sl, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0805E3C0
	cmp r1, #0
	beq _0805E3B0
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805E3B0:
	ldr r3, [sp, #0x78]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _0805E494
	.align 2, 0
_0805E3BC: .4byte 0x06010100
_0805E3C0:
	str r1, [sp, #0x7c]
	mov r4, sb
	str r4, [sp, #0x68]
	ldr r5, [sp, #0x78]
	ldr r0, [r5]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r1, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _0805E3DC
	adds r0, r1, #0
_0805E3DC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805E3FA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0805E3FE
	mov r0, sb
	bl func_080D3BC0
	b _0805E3FE
_0805E3FA:
	movs r0, #0
	mov sb, r0
_0805E3FE:
	adds r4, r0, #0
	mov r8, r4
	ldr r0, [sp, #0x78]
	ldr r2, [r0]
	mov r3, r8
	ldr r1, [sp, #0x7c]
	cmp r2, r1
	beq _0805E428
_0805E40E:
	cmp r3, #0
	beq _0805E41E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805E41E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x7c]
	cmp r2, r0
	bne _0805E40E
_0805E428:
	adds r4, r3, #0
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _0805E444
	cmp r4, #0
	beq _0805E440
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_0805E440:
	adds r4, #0x10
	b _0805E46C
_0805E444:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _0805E46A
_0805E44C:
	cmp r2, #0
	beq _0805E45C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805E45C:
	movs r5, #1
	rsbs r5, r5, #0
	add ip, r5
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _0805E44C
_0805E46A:
	adds r4, r2, #0
_0805E46C:
	ldr r0, [sp, #0x78]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _0805E47E
_0805E478:
	adds r1, #0x10
	cmp r1, r2
	bne _0805E478
_0805E47E:
	cmp r0, #0
	beq _0805E486
	bl free
_0805E486:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x78]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_0805E494:
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0805E4AA
	mov r4, sp
	ldrh r2, [r4, #0x20]
_0805E4AA:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_0805E4B2:
	ldr r1, _0805E5E8 @ =0xFFFFFCFF
	ldr r0, [sp, #0x6c]
	ands r0, r1
	ldr r1, _0805E5EC @ =0xFFFFF3FF
	ands r0, r1
	movs r4, #0x80
	lsls r4, r4, #5
	orrs r0, r4
	ldr r1, _0805E5F0 @ =0xFFFFDFFF
	ands r0, r1
	ldr r1, _0805E5F4 @ =0xFFFF3FFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	ldr r1, _0805E5F8 @ =0xF1FFFFFF
	ands r0, r1
	ldr r1, _0805E5FC @ =0xEFFFFFFF
	ands r0, r1
	ldr r1, _0805E600 @ =0xDFFFFFFF
	ands r0, r1
	ldr r1, _0805E604 @ =0x3FFFFFFF
	ands r0, r1
	str r0, [sp, #0x6c]
	movs r5, #0x92
	lsls r5, r5, #1
	adds r0, r6, r5
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _0805E608 @ =0xFFFF0FFF
	ldr r7, [sp, #0x74]
	ldr r1, [r7, #4]
	ands r1, r2
	orrs r1, r0
	ldr r0, _0805E60C @ =0x0000FFFF
	ands r1, r0
	str r1, [r7, #4]
	ldr r0, [sp, #0x6c]
	orrs r0, r4
	str r0, [sp, #0x6c]
	ldr r0, _0805E610 @ =0x000002CE
	adds r1, r6, r0
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _0805E5D8
	adds r4, r1, #0
	ldr r5, [sp, #0x74]
_0805E522:
	movs r2, #0
	ldrsh r1, [r4, r2]
	lsls r1, r1, #3
	movs r3, #0xaa
	lsls r3, r3, #1
	adds r0, r6, r3
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r0, #3
	ands r1, r0
	lsls r1, r1, #0xa
	ldr r2, _0805E5EC @ =0xFFFFF3FF
	ldr r0, [r5, #4]
	ands r0, r2
	orrs r0, r1
	str r0, [r5, #4]
	movs r7, #0
	ldrsh r1, [r4, r7]
	lsls r1, r1, #3
	movs r2, #0xa7
	lsls r2, r2, #1
	adds r0, r6, r2
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, _0805E614 @ =0x000001FF
	ands r1, r0
	lsls r1, r1, #0x10
	ldr r0, _0805E618 @ =0xFE00FFFF
	ldr r2, [sp, #0x6c]
	ands r2, r0
	orrs r2, r1
	movs r7, #0
	ldrsh r1, [r4, r7]
	lsls r1, r1, #3
	movs r3, #0xa8
	lsls r3, r3, #1
	adds r0, r6, r3
	adds r0, r0, r1
	ldrb r1, [r0]
	ldr r0, _0805E61C @ =0xFFFFFF00
	ands r2, r0
	orrs r2, r1
	str r2, [sp, #0x6c]
	movs r7, #0x8e
	lsls r7, r7, #1
	adds r0, r6, r7
	ldr r1, [r0, #4]
	bl func_08007D4C
	movs r1, #0
	ldrsh r2, [r4, r1]
	lsls r2, r2, #3
	movs r3, #0xa9
	lsls r3, r3, #1
	adds r1, r6, r3
	adds r1, r1, r2
	movs r7, #0
	ldrsh r1, [r1, r7]
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0805E620 @ =0xFFFFFC00
	ldr r1, [r5, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r5, #4]
	adds r0, r6, #0
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _0805E5CC
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp, #0x6c]
	str r0, [r1]
	ldr r7, [sp, #0x74]
	ldrh r0, [r7, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_0805E5CC:
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0805E522
_0805E5D8:
	add sp, #0x80
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805E5E8: .4byte 0xFFFFFCFF
_0805E5EC: .4byte 0xFFFFF3FF
_0805E5F0: .4byte 0xFFFFDFFF
_0805E5F4: .4byte 0xFFFF3FFF
_0805E5F8: .4byte 0xF1FFFFFF
_0805E5FC: .4byte 0xEFFFFFFF
_0805E600: .4byte 0xDFFFFFFF
_0805E604: .4byte 0x3FFFFFFF
_0805E608: .4byte 0xFFFF0FFF
_0805E60C: .4byte 0x0000FFFF
_0805E610: .4byte 0x000002CE
_0805E614: .4byte 0x000001FF
_0805E618: .4byte 0xFE00FFFF
_0805E61C: .4byte 0xFFFFFF00
_0805E620: .4byte 0xFFFFFC00

	thumb_func_start func_0805E624
func_0805E624: @ 0x0805E624
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _0805E650 @ =vtable_unk_080E79B8
	str r0, [r4]
	ldr r0, _0805E654 @ =0x00000AF4
	bl __builtin_new
	adds r1, r5, #0
	bl func_0805CF70
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0805E650: .4byte vtable_unk_080E79B8
_0805E654: .4byte 0x00000AF4

	thumb_func_start func_0805E658
func_0805E658: @ 0x0805E658
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0805E694 @ =vtable_unk_080E79B8
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0805E674
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805E674:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0805E686
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805E686:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0805E694: .4byte vtable_unk_080E79B8

	thumb_func_start func_0805E698
func_0805E698: @ 0x0805E698
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r4, #4]
	mov r0, sp
	bl func_0805D170
	ldr r1, [sp]
	cmp r1, #0
	beq _0805E6BA
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805E6BA:
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0805E6CC
func_0805E6CC: @ 0x0805E6CC
	push {lr}
	adds r2, r0, #0
	ldr r0, _0805E738 @ =vtable_unk_080E79C8
	str r0, [r2]
	cmp r1, #0
	beq _0805E73C
	ldrh r0, [r1]
	strh r0, [r2, #0x20]
	adds r1, #4
	str r1, [r2, #4]
	ldrh r0, [r2, #0x20]
	lsls r0, r0, #2
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r2, #0x22]
	adds r1, #4
	str r1, [r2, #8]
	ldrh r0, [r2, #0x22]
	lsls r0, r0, #4
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r2, #0x24]
	adds r1, #4
	str r1, [r2, #0xc]
	ldrh r0, [r2, #0x24]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r2, #0x26]
	adds r1, #4
	str r1, [r2, #0x10]
	ldrh r0, [r2, #0x26]
	lsls r0, r0, #5
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r2, #0x28]
	adds r1, #4
	str r1, [r2, #0x14]
	ldrh r0, [r2, #0x28]
	lsls r0, r0, #5
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r2, #0x2a]
	adds r1, #4
	str r1, [r2, #0x18]
	ldrh r0, [r2, #0x2a]
	lsls r0, r0, #3
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r2, #0x2c]
	adds r0, r1, #4
	str r0, [r2, #0x1c]
	b _0805E758
	.align 2, 0
_0805E738: .4byte vtable_unk_080E79C8
_0805E73C:
	strh r1, [r2, #0x20]
	str r1, [r2, #4]
	strh r1, [r2, #0x22]
	str r1, [r2, #8]
	strh r1, [r2, #0x24]
	str r1, [r2, #0xc]
	strh r1, [r2, #0x26]
	str r1, [r2, #0x10]
	strh r1, [r2, #0x28]
	str r1, [r2, #0x14]
	strh r1, [r2, #0x2a]
	str r1, [r2, #0x18]
	strh r1, [r2, #0x2c]
	str r1, [r2, #0x1c]
_0805E758:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0805E760
func_0805E760: @ 0x0805E760
	push {r4, lr}
	adds r4, r0, #0
	adds r3, r1, #0
	ldrh r0, [r3, #0x20]
	cmp r2, r0
	bhs _0805E782
	lsls r1, r2, #2
	ldr r0, [r3, #4]
	adds r0, r0, r1
	ldrh r1, [r0, #2]
	ldrh r2, [r0]
	lsls r1, r1, #2
	ldr r0, [r3, #0x1c]
	adds r1, r1, r0
	str r1, [r4]
	strh r2, [r4, #4]
	b _0805E788
_0805E782:
	movs r0, #0
	str r0, [r4]
	strh r0, [r4, #4]
_0805E788:
	adds r0, r4, #0
	pop {r4}
	pop {r2}
	bx r2

	thumb_func_start func_0805E790
func_0805E790: @ 0x0805E790
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov ip, r0
	adds r7, r1, #0
	ldrh r0, [r7, #0x22]
	cmp r2, r0
	bhs _0805E7F0
	lsls r1, r2, #4
	ldr r0, [r7, #8]
	adds r0, r0, r1
	ldrh r3, [r0, #2]
	ldrh r1, [r0]
	mov sb, r1
	ldrh r4, [r0, #6]
	lsls r4, r4, #5
	ldr r1, [r7, #0x10]
	adds r4, r4, r1
	ldrh r6, [r0, #4]
	ldrh r2, [r0, #0xa]
	lsls r2, r2, #5
	ldr r1, [r7, #0x14]
	adds r2, r2, r1
	ldrh r5, [r0, #8]
	ldrh r1, [r0, #0xe]
	ldrh r0, [r0, #0xc]
	mov r8, r0
	lsls r3, r3, #3
	ldr r0, [r7, #0xc]
	adds r3, r3, r0
	lsls r6, r6, #5
	lsls r5, r5, #5
	lsls r1, r1, #3
	ldr r0, [r7, #0x18]
	adds r1, r1, r0
	mov r0, ip
	str r3, [r0]
	mov r3, sb
	strh r3, [r0, #4]
	str r4, [r0, #8]
	strh r6, [r0, #0xc]
	str r2, [r0, #0x10]
	strh r5, [r0, #0x14]
	str r1, [r0, #0x18]
	mov r1, r8
	strh r1, [r0, #0x1c]
	b _0805E80C
_0805E7F0:
	movs r0, #0
	mov r2, ip
	str r0, [r2]
	strh r0, [r2, #4]
	mov r1, ip
	adds r1, #8
	str r0, [r2, #8]
	strh r0, [r1, #4]
	adds r1, #8
	str r0, [r2, #0x10]
	strh r0, [r1, #4]
	adds r1, #8
	str r0, [r2, #0x18]
	strh r0, [r1, #4]
_0805E80C:
	mov r0, ip
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0805E81C:
	.byte 0x40, 0x8C, 0x70, 0x47
	.byte 0x00, 0x8C, 0x70, 0x47

	thumb_func_start func_0805E824
func_0805E824: @ 0x0805E824
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r3, #0
	stm r0!, {r1}
	ldr r3, [r1]
	ldr r3, [r3, #0xc]
	bl _call_via_r3
	movs r0, #0
	strh r0, [r4, #0xc]
	ldr r0, [r4, #4]
	ldrh r0, [r0, #2]
	lsls r0, r0, #8
	strh r0, [r4, #0xe]
	strh r5, [r4, #0x10]
	movs r0, #1
	strb r0, [r4, #0x12]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0805E850
func_0805E850: @ 0x0805E850
	push {lr}
	str r1, [r0]
	adds r1, r2, #0
	bl func_0805E860
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0805E860
func_0805E860: @ 0x0805E860
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	adds r2, r1, #0
	ldr r1, [r4]
	ldr r3, [r1]
	mov r0, sp
	ldr r3, [r3, #0xc]
	bl _call_via_r3
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r4, #4]
	str r1, [r4, #8]
	movs r0, #0
	strh r0, [r4, #0xc]
	ldr r0, [r4, #4]
	ldrh r0, [r0, #2]
	lsls r0, r0, #8
	strh r0, [r4, #0xe]
	movs r0, #1
	strb r0, [r4, #0x12]
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start func_0805E894
func_0805E894: @ 0x0805E894
	push {r4, r5, lr}
	movs r1, #0x10
	ldrsh r3, [r0, r1]
	ldrh r2, [r0, #0xe]
	cmp r3, #0
	beq _0805E8E8
	cmp r2, #0
	beq _0805E8E8
	adds r1, r3, #0
	cmp r3, #0
	bge _0805E8AC
	rsbs r1, r3, #0
_0805E8AC:
	subs r2, r2, r1
	cmp r2, #0
	bgt _0805E8E8
	ldrh r1, [r0, #0xc]
	adds r4, r0, #4
	ldr r0, [r0, #4]
	movs r5, #0
	cmp r0, #0
	beq _0805E8C0
	ldrh r5, [r4, #4]
_0805E8C0:
	adds r4, r0, #0
_0805E8C2:
	cmp r3, #0
	ble _0805E8D0
	adds r1, #1
	cmp r1, r5
	blo _0805E8D6
_0805E8CC:
	movs r0, #1
	b _0805E8EA
_0805E8D0:
	cmp r1, #0
	beq _0805E8CC
	subs r1, #1
_0805E8D6:
	lsls r0, r1, #2
	adds r0, r4, r0
	ldrh r0, [r0, #2]
	cmp r0, #0
	beq _0805E8E8
	lsls r0, r0, #8
	adds r2, r2, r0
	cmp r2, #0
	ble _0805E8C2
_0805E8E8:
	movs r0, #0
_0805E8EA:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0805E8F0
func_0805E8F0: @ 0x0805E8F0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	movs r7, #0
	ldrb r0, [r4, #0x12]
	cmp r0, #0
	beq _0805E908
	movs r7, #2
	movs r0, #0
	strb r0, [r4, #0x12]
_0805E908:
	movs r1, #0x10
	ldrsh r0, [r4, r1]
	mov ip, r0
	ldrh r3, [r4, #0xe]
	cmp r0, #0
	beq _0805E98C
	cmp r3, #0
	beq _0805E98C
	cmp r0, #0
	bge _0805E91E
	rsbs r0, r0, #0
_0805E91E:
	subs r3, r3, r0
	cmp r3, #0
	bgt _0805E98A
	ldrh r2, [r4, #0xc]
	adds r5, r4, #4
	lsls r0, r2, #2
	ldr r1, [r4, #4]
	adds r0, r1, r0
	ldrh r0, [r0]
	mov sb, r0
	movs r0, #1
	orrs r7, r0
	movs r0, #0
	adds r6, r1, #0
	cmp r6, #0
	beq _0805E940
	ldrh r0, [r5, #4]
_0805E940:
	adds r5, r0, #0
	movs r0, #4
	mov r8, r0
_0805E946:
	mov r1, ip
	cmp r1, #0
	ble _0805E95A
	adds r2, #1
	cmp r2, r5
	blo _0805E966
	movs r2, #0
	mov r0, r8
	orrs r7, r0
	b _0805E966
_0805E95A:
	cmp r2, #0
	bne _0805E964
	adds r2, r5, #0
	mov r1, r8
	orrs r7, r1
_0805E964:
	subs r2, #1
_0805E966:
	lsls r1, r2, #2
	adds r0, r6, r1
	ldrh r0, [r0, #2]
	cmp r0, #0
	beq _0805E97A
	lsls r0, r0, #8
	adds r3, r3, r0
	cmp r3, #0
	bgt _0805E97C
	b _0805E946
_0805E97A:
	movs r3, #0
_0805E97C:
	adds r0, r6, r1
	ldrh r0, [r0]
	cmp r0, sb
	beq _0805E988
	movs r0, #2
	orrs r7, r0
_0805E988:
	strh r2, [r4, #0xc]
_0805E98A:
	strh r3, [r4, #0xe]
_0805E98C:
	adds r0, r7, #0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0805E99C
func_0805E99C: @ 0x0805E99C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	str r0, [sp, #0x24]
	adds r7, r3, #0
	mov sl, r1
	lsls r2, r2, #3
	add r2, sl
	str r2, [sp, #0x28]
	cmp sl, r2
	bne _0805E9BA
	b _0805EBDE
_0805E9BA:
	mov r2, sl
	ldr r0, [r2]
	ldr r1, [r2, #4]
	str r0, [sp, #0x1c]
	str r1, [sp, #0x20]
	ldr r1, [sp, #0x1c]
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x1e
	adds r3, r0, #0
	lsrs r1, r1, #0x1e
	cmp r3, #0
	bne _0805E9E0
	movs r3, #8
	mov sb, r3
	mov r0, sb
	lsls r0, r1
	mov sb, r0
	mov r6, sb
	b _0805EA00
_0805E9E0:
	adds r0, r1, #1
	lsrs r0, r0, #1
	adds r0, #1
	movs r2, #8
	lsls r2, r0
	movs r0, #8
	cmp r1, #1
	beq _0805E9F2
	lsrs r0, r2, #1
_0805E9F2:
	cmp r3, #1
	beq _0805E9FC
	mov sb, r2
	adds r6, r0, #0
	b _0805EA00
_0805E9FC:
	mov sb, r0
	adds r6, r2, #0
_0805EA00:
	ldr r4, [sp, #0x1c]
	lsls r0, r4, #7
	asrs r5, r0, #0x17
	str r5, [sp, #0xc]
	add r1, sp, #0x1c
	movs r0, #0
	ldrsb r0, [r1, r0]
	str r0, [sp, #0x10]
	ldr r2, [r7, #0x14]
	mov r8, r2
	adds r3, r4, #0
	cmp r2, #0
	bne _0805EA6C
	ldrb r2, [r7, #0x10]
	movs r4, #1
	adds r0, r4, #0
	ands r0, r2
	cmp r0, #0
	beq _0805EA3E
	adds r0, r5, r6
	rsbs r0, r0, #0
	str r0, [sp, #0xc]
	lsls r1, r3, #3
	lsrs r1, r1, #0x1f
	eors r1, r4
	ands r1, r4
	lsls r1, r1, #0x1c
	ldr r0, _0805EA64 @ =0xEFFFFFFF
	ands r0, r3
	orrs r0, r1
	str r0, [sp, #0x1c]
_0805EA3E:
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _0805EB04
	ldr r0, [sp, #0x10]
	add r0, sb
	rsbs r0, r0, #0
	str r0, [sp, #0x10]
	ldr r2, [sp, #0x1c]
	lsls r1, r2, #2
	lsrs r1, r1, #0x1f
	eors r1, r4
	ands r1, r4
	lsls r1, r1, #0x1d
	ldr r0, _0805EA68 @ =0xDFFFFFFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x1c]
	b _0805EB04
	.align 2, 0
_0805EA64: .4byte 0xEFFFFFFF
_0805EA68: .4byte 0xDFFFFFFF
_0805EA6C:
	ldrb r3, [r7, #0x11]
	movs r0, #7
	ands r0, r3
	lsls r0, r0, #0x19
	ldr r2, _0805EBF0 @ =0xF1FFFFFF
	ands r2, r4
	orrs r2, r0
	movs r0, #8
	ands r0, r3
	lsrs r0, r0, #3
	movs r1, #1
	ands r0, r1
	lsls r0, r0, #0x1c
	ldr r1, _0805EBF4 @ =0xEFFFFFFF
	ands r2, r1
	orrs r2, r0
	movs r0, #0x10
	ands r0, r3
	lsrs r0, r0, #4
	movs r1, #1
	ands r0, r1
	lsls r0, r0, #0x1d
	ldr r1, _0805EBF8 @ =0xDFFFFFFF
	ands r2, r1
	orrs r2, r0
	str r2, [sp, #0x1c]
	movs r0, #0x1f
	ands r3, r0
	lsls r3, r3, #5
	adds r3, #4
	ldr r2, [sp, #0x24]
	adds r3, r2, r3
	ldr r2, _0805EBFC @ =0xFFFF0000
	ldrh r1, [r3, #0xe]
	lsls r1, r1, #0x10
	ldr r4, _0805EC00 @ =0x0000FFFF
	ldrh r0, [r3, #6]
	orrs r0, r1
	str r0, [sp, #4]
	ldrh r1, [r3, #0x16]
	ldr r0, [sp, #8]
	ands r0, r2
	orrs r0, r1
	ldrh r1, [r3, #0x1e]
	lsls r1, r1, #0x10
	ands r0, r4
	orrs r0, r1
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	ldr r1, [sp, #8]
	str r0, [sp, #0x14]
	str r1, [sp, #0x18]
	add r0, sp, #0x14
	str r0, [sp]
	add r0, sp, #0xc
	add r1, sp, #0x10
	adds r2, r6, #0
	mov r3, sb
	bl func_0805EC24
	mov r3, r8
	cmp r3, #3
	bne _0805EB04
	lsrs r1, r6, #0x1f
	adds r1, r6, r1
	asrs r1, r1, #1
	ldr r0, [sp, #0xc]
	subs r0, r0, r1
	str r0, [sp, #0xc]
	mov r0, sb
	lsrs r1, r0, #0x1f
	add r1, sb
	asrs r1, r1, #1
	ldr r0, [sp, #0x10]
	subs r0, r0, r1
	str r0, [sp, #0x10]
_0805EB04:
	movs r2, #0
	ldrsh r1, [r7, r2]
	ldr r0, [sp, #0xc]
	adds r3, r0, r1
	str r3, [sp, #0xc]
	movs r0, #2
	ldrsh r1, [r7, r0]
	ldr r0, [sp, #0x10]
	adds r1, r0, r1
	str r1, [sp, #0x10]
	mov r2, r8
	cmp r2, #0
	bne _0805EB34
	adds r0, r3, r6
	cmp r0, #0
	ble _0805EBD2
	cmp r3, #0xef
	bgt _0805EBD2
	mov r2, sb
	adds r0, r1, r2
	cmp r0, #0
	ble _0805EBD2
	cmp r1, #0x9f
	bgt _0805EBD2
_0805EB34:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0805EC04 @ =0xFFFFFF00
	ldr r1, [sp, #0x1c]
	ands r1, r2
	orrs r1, r0
	mov r0, r8
	movs r2, #3
	ands r0, r2
	lsls r2, r0, #8
	ldr r0, _0805EC08 @ =0xFFFFFCFF
	ands r1, r0
	orrs r1, r2
	ldr r0, [r7, #0xc]
	movs r2, #3
	ands r0, r2
	lsls r0, r0, #0xa
	ldr r2, _0805EC0C @ =0xFFFFF3FF
	ands r1, r2
	orrs r1, r0
	ldrb r2, [r7, #0x18]
	movs r0, #1
	ands r2, r0
	lsls r2, r2, #0xc
	ldr r0, _0805EC10 @ =0xFFFFEFFF
	ands r1, r0
	orrs r1, r2
	ldr r0, _0805EC14 @ =0x000001FF
	ands r3, r0
	lsls r2, r3, #0x10
	ldr r0, _0805EC18 @ =0xFE00FFFF
	ands r1, r0
	orrs r1, r2
	str r1, [sp, #0x1c]
	ldr r1, [sp, #0x20]
	lsls r0, r1, #0x16
	lsrs r0, r0, #0x16
	ldrh r2, [r7, #6]
	adds r0, r0, r2
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0805EC1C @ =0xFFFFFC00
	ands r2, r1
	orrs r2, r0
	ldrh r0, [r7, #8]
	movs r3, #3
	ands r0, r3
	lsls r0, r0, #0xa
	ldr r1, _0805EC0C @ =0xFFFFF3FF
	ands r2, r1
	orrs r2, r0
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x1c
	ldrh r3, [r7, #4]
	adds r1, r1, r3
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #0xf
	ands r1, r0
	lsls r1, r1, #0xc
	ldr r0, _0805EC20 @ =0xFFFF0FFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x20]
	ldr r0, [sp, #0x24]
	ldrb r2, [r0]
	cmp r2, #0x7f
	bhi _0805EBD2
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r0, r1
	ldr r0, [sp, #0x1c]
	str r0, [r1]
	mov r3, sp
	ldrh r0, [r3, #0x20]
	strh r0, [r1, #4]
	adds r0, r2, #1
	ldr r1, [sp, #0x24]
	strb r0, [r1]
_0805EBD2:
	movs r2, #8
	add sl, r2
	ldr r3, [sp, #0x28]
	cmp sl, r3
	beq _0805EBDE
	b _0805E9BA
_0805EBDE:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805EBF0: .4byte 0xF1FFFFFF
_0805EBF4: .4byte 0xEFFFFFFF
_0805EBF8: .4byte 0xDFFFFFFF
_0805EBFC: .4byte 0xFFFF0000
_0805EC00: .4byte 0x0000FFFF
_0805EC04: .4byte 0xFFFFFF00
_0805EC08: .4byte 0xFFFFFCFF
_0805EC0C: .4byte 0xFFFFF3FF
_0805EC10: .4byte 0xFFFFEFFF
_0805EC14: .4byte 0x000001FF
_0805EC18: .4byte 0xFE00FFFF
_0805EC1C: .4byte 0xFFFFFC00
_0805EC20: .4byte 0xFFFF0FFF

	thumb_func_start func_0805EC24
func_0805EC24: @ 0x0805EC24
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sb, r0
	mov sl, r1
	ldr r4, [sp, #0x20]
	lsrs r2, r2, #1
	ldr r0, [r0]
	adds r0, r0, r2
	lsls r7, r0, #8
	lsrs r3, r3, #1
	ldr r0, [r1]
	adds r0, r0, r3
	lsls r0, r0, #8
	mov r8, r0
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #4
	cmp r0, #0
	bge _0805EC56
	adds r0, #0xff
_0805EC56:
	lsls r0, r0, #8
	lsrs r5, r0, #0x10
	movs r2, #2
	ldrsh r1, [r4, r2]
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #4
	cmp r0, #0
	bge _0805EC6A
	adds r0, #0xff
_0805EC6A:
	lsls r0, r0, #8
	lsrs r2, r0, #0x10
	movs r3, #4
	ldrsh r1, [r4, r3]
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #4
	cmp r0, #0
	bge _0805EC7E
	adds r0, #0xff
_0805EC7E:
	lsls r0, r0, #8
	lsrs r3, r0, #0x10
	movs r0, #6
	ldrsh r1, [r4, r0]
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #4
	cmp r0, #0
	bge _0805EC92
	adds r0, #0xff
_0805EC92:
	lsls r1, r0, #8
	lsls r0, r5, #0x10
	asrs r6, r0, #0x10
	asrs r4, r1, #0x10
	adds r1, r6, #0
	muls r1, r4, r1
	lsls r0, r2, #0x10
	asrs r2, r0, #0x10
	lsls r0, r3, #0x10
	asrs r3, r0, #0x10
	adds r0, r2, #0
	muls r0, r3, r0
	subs r1, r1, r0
	cmp r1, #0
	bge _0805ECB2
	adds r1, #0xff
_0805ECB2:
	asrs r5, r1, #8
	cmp r5, #0
	beq _0805ED3E
	adds r1, r4, #0
	muls r1, r7, r1
	mov r0, r8
	muls r0, r2, r0
	subs r2, r1, r0
	mov r1, r8
	muls r1, r6, r1
	adds r0, r3, #0
	muls r0, r7, r0
	subs r4, r1, r0
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r5, r0
	bne _0805ECEA
	adds r0, r2, #0
	cmp r2, #0
	bge _0805ECDC
	adds r0, #0xff
_0805ECDC:
	asrs r6, r0, #8
	adds r0, r4, #0
	cmp r4, #0
	bge _0805ECE6
	adds r0, #0xff
_0805ECE6:
	asrs r2, r0, #8
	b _0805ED24
_0805ECEA:
	ldr r0, _0805ED0C @ =0xFFFFFF00
	cmp r5, r0
	bne _0805ED10
	adds r0, r2, #0
	cmp r2, #0
	bge _0805ECF8
	adds r0, #0xff
_0805ECF8:
	asrs r6, r0, #8
	rsbs r6, r6, #0
	adds r0, r4, #0
	cmp r4, #0
	bge _0805ED04
	adds r0, #0xff
_0805ED04:
	asrs r2, r0, #8
	rsbs r2, r2, #0
	b _0805ED24
	.align 2, 0
_0805ED0C: .4byte 0xFFFFFF00
_0805ED10:
	adds r0, r2, #0
	adds r1, r5, #0
	bl __divsi3
	adds r6, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl __divsi3
	adds r2, r0, #0
_0805ED24:
	subs r1, r6, r7
	asrs r1, r1, #8
	mov r3, sb
	ldr r0, [r3]
	adds r0, r0, r1
	str r0, [r3]
	mov r0, r8
	subs r1, r2, r0
	asrs r1, r1, #8
	mov r2, sl
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
_0805ED3E:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0805ED4C
func_0805ED4C: @ 0x0805ED4C
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0x18
	adds r4, r0, #0
	adds r5, r1, #0
	add r1, sp, #0x14
	movs r0, #0x1e
	movs r2, #1
	movs r3, #0
	mov r8, r3
	strh r0, [r1]
	strh r2, [r1, #2]
	adds r0, r4, #0
	bl func_080084DC
	ldr r0, _0805EE20 @ =vtable_unk_080E79DC
	str r0, [r4, #4]
	str r5, [r4, #8]
	mov r0, r8
	str r0, [r4, #0xc]
	movs r0, #4
	bl __builtin_new
	adds r6, r0, #0
	add r0, sp, #0xc
	bl func_0800835C
	add r5, sp, #0x10
	adds r0, r5, #0
	bl func_0800770C
	ldr r0, [r4, #0xc]
	str r0, [sp]
	add r1, sp, #0xc
	str r1, [sp, #4]
	str r5, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0xf
	bl func_08050CC0
	str r0, [r4, #0x10]
	adds r0, r5, #0
	movs r1, #2
	bl func_08007714
	add r0, sp, #0xc
	movs r1, #2
	bl func_08008364
	adds r0, r4, #0
	adds r0, #0x14
	movs r1, #1
	bl func_08008B54
	adds r0, r4, #0
	adds r0, #0x18
	movs r1, #0
	bl func_08008B54
	adds r0, r4, #0
	adds r0, #0x1c
	movs r1, #2
	bl func_08008B54
	ldr r2, _0805EE24 @ =0x00006428
	adds r1, r4, r2
	ldr r0, _0805EE28 @ =vtable_unk_080E79E8
	str r0, [r1]
	mov r3, r8
	str r3, [r1, #4]
	ldr r0, [r4, #0x10]
	movs r1, #0xb
	bl func_08050E98
	ldr r1, _0805EE2C @ =0x00006420
	adds r0, r4, r1
	mov r2, r8
	strh r2, [r0]
	ldr r3, _0805EE30 @ =0x00006422
	adds r0, r4, r3
	strh r2, [r0]
	ldr r0, _0805EE34 @ =0x00006426
	adds r1, r4, r0
	movs r0, #2
	strh r0, [r1]
	ldr r1, _0805EE38 @ =0x00006424
	adds r0, r4, r1
	strh r2, [r0]
	ldr r0, [r4, #8]
	ldr r2, _0805EE3C @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E4E0
	ldr r3, _0805EE40 @ =0x0000642C
	adds r1, r4, r3
	str r0, [r1]
	adds r0, r4, #0
	add sp, #0x18
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0805EE20: .4byte vtable_unk_080E79DC
_0805EE24: .4byte 0x00006428
_0805EE28: .4byte vtable_unk_080E79E8
_0805EE2C: .4byte 0x00006420
_0805EE30: .4byte 0x00006422
_0805EE34: .4byte 0x00006426
_0805EE38: .4byte 0x00006424
_0805EE3C: .4byte 0x00001BD8
_0805EE40: .4byte 0x0000642C

	thumb_func_start func_0805EE44
func_0805EE44: @ 0x0805EE44
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x50
	str r0, [sp, #0x30]
	adds r5, r1, #0
	movs r0, #0
	str r0, [sp, #0x34]
	movs r1, #0
	str r1, [sp, #0x38]
	adds r0, r5, #0
	bl func_08008724
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r5, #0
	bl func_08008918
	adds r1, r0, #0
	ldr r2, [sp, #0x38]
	str r2, [r4]
	str r2, [r4, #4]
	ldr r0, _0805EF00 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl func_08009300
	str r4, [sp, #4]
	adds r0, r5, #0
	bl func_0805FBB8
	adds r0, r5, #0
	adds r0, #0x18
	movs r1, #0x25
	bl func_08008B6C
	ldr r0, [sp, #4]
	ldr r1, _0805EF04 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #0
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r3, _0805EF08 @ =0x00006422
	adds r1, r5, r3
	movs r0, #4
	strh r0, [r1]
	mov r4, sp
	adds r4, #8
	str r4, [sp, #0x40]
	mov r7, sp
	adds r7, #0x28
	str r7, [sp, #0x44]
_0805EED8:
	adds r0, r5, #0
	bl func_080087C8
	adds r0, r5, #0
	bl func_080088B8
	ldr r1, _0805EF08 @ =0x00006422
	adds r0, r5, r1
	ldrh r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #9
	bls _0805EEF6
	b _0805F59E
_0805EEF6:
	lsls r0, r0, #2
	ldr r1, _0805EF0C @ =_0805EF10
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805EF00: .4byte vtable_unk_080E5B80
_0805EF04: .4byte 0x00000889
_0805EF08: .4byte 0x00006422
_0805EF0C: .4byte _0805EF10
_0805EF10: @ jump table
	.4byte _0805EF38 @ case 0
	.4byte _0805EF64 @ case 1
	.4byte _0805EF88 @ case 2
	.4byte _0805EFB4 @ case 3
	.4byte _0805EFF6 @ case 4
	.4byte _0805F11C @ case 5
	.4byte _0805F138 @ case 6
	.4byte _0805F15C @ case 7
	.4byte _0805F1FA @ case 8
	.4byte _0805F58E @ case 9
_0805EF38:
	ldr r0, [sp, #4]
	ldr r1, _0805EF5C @ =0x00000889
	adds r0, #0xc
	movs r2, #2
	movs r3, #0
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r2, _0805EF60 @ =0x00006422
	adds r1, r5, r2
	b _0805F090
	.align 2, 0
_0805EF5C: .4byte 0x00000889
_0805EF60: .4byte 0x00006422
_0805EF64:
	ldr r3, [sp, #0x34]
	lsls r0, r3, #0x10
	ldr r4, _0805EF80 @ =0xFFFF0000
	adds r0, r0, r4
	lsrs r7, r0, #0x10
	str r7, [sp, #0x34]
	cmp r0, #0
	blt _0805EF76
	b _0805F59E
_0805EF76:
	ldr r0, _0805EF84 @ =0x00006422
	adds r1, r5, r0
	movs r0, #3
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805EF80: .4byte 0xFFFF0000
_0805EF84: .4byte 0x00006422
_0805EF88:
	ldr r0, [sp, #4]
	ldr r1, _0805EFAC @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #0
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r2, _0805EFB0 @ =0x00006422
	adds r1, r5, r2
	b _0805F090
	.align 2, 0
_0805EFAC: .4byte 0x00000889
_0805EFB0: .4byte 0x00006422
_0805EFB4:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0805EFC2
	b _0805F59E
_0805EFC2:
	ldr r3, _0805EFE8 @ =0x00006422
	adds r0, r5, r3
	movs r1, #5
	strh r1, [r0]
	ldr r4, _0805EFEC @ =0x00006420
	adds r0, r5, r4
	movs r7, #0
	ldrsh r0, [r0, r7]
	cmp r0, #1
	beq _0805EFE2
	cmp r0, #1
	blt _0805EFF0
	cmp r0, #0xc
	bgt _0805EFF0
	cmp r0, #0xb
	blt _0805EFF0
_0805EFE2:
	movs r0, #0x3c
	str r0, [sp, #0x34]
	b _0805F59E
	.align 2, 0
_0805EFE8: .4byte 0x00006422
_0805EFEC: .4byte 0x00006420
_0805EFF0:
	movs r1, #0
	str r1, [sp, #0x34]
	b _0805F59E
_0805EFF6:
	ldr r2, [sp, #0x34]
	lsls r0, r2, #0x10
	ldr r3, _0805F030 @ =0xFFFF0000
	adds r0, r0, r3
	lsrs r4, r0, #0x10
	str r4, [sp, #0x34]
	cmp r0, #0
	blt _0805F008
	b _0805F59E
_0805F008:
	ldr r7, _0805F034 @ =0x00006422
	adds r1, r5, r7
	movs r2, #0
	movs r0, #6
	strh r0, [r1]
	ldr r1, _0805F038 @ =0x00006426
	adds r0, r5, r1
	strh r2, [r0]
	ldr r2, _0805F03C @ =0x00006420
	adds r0, r5, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #0xd
	bhi _0805F0FC
	lsls r0, r0, #2
	ldr r1, _0805F040 @ =_0805F044
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805F030: .4byte 0xFFFF0000
_0805F034: .4byte 0x00006422
_0805F038: .4byte 0x00006426
_0805F03C: .4byte 0x00006420
_0805F040: .4byte _0805F044
_0805F044: @ jump table
	.4byte _0805F07C @ case 0
	.4byte _0805F08C @ case 1
	.4byte _0805F09C @ case 2
	.4byte _0805F0FC @ case 3
	.4byte _0805F0FC @ case 4
	.4byte _0805F0FC @ case 5
	.4byte _0805F0FC @ case 6
	.4byte _0805F0FC @ case 7
	.4byte _0805F0FC @ case 8
	.4byte _0805F0AC @ case 9
	.4byte _0805F0BC @ case 10
	.4byte _0805F0CC @ case 11
	.4byte _0805F0DC @ case 12
	.4byte _0805F0EC @ case 13
_0805F07C:
	ldr r4, _0805F088 @ =0x00006424
	adds r1, r5, r4
	movs r0, #0
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805F088: .4byte 0x00006424
_0805F08C:
	ldr r7, _0805F098 @ =0x00006424
	adds r1, r5, r7
_0805F090:
	movs r0, #4
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805F098: .4byte 0x00006424
_0805F09C:
	ldr r0, _0805F0A8 @ =0x00006424
	adds r1, r5, r0
	movs r0, #5
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805F0A8: .4byte 0x00006424
_0805F0AC:
	ldr r2, _0805F0B8 @ =0x00006424
	adds r1, r5, r2
	movs r0, #0xe
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805F0B8: .4byte 0x00006424
_0805F0BC:
	ldr r3, _0805F0C8 @ =0x00006424
	adds r1, r5, r3
	movs r0, #0x10
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805F0C8: .4byte 0x00006424
_0805F0CC:
	ldr r4, _0805F0D8 @ =0x00006424
	adds r1, r5, r4
	movs r0, #0x13
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805F0D8: .4byte 0x00006424
_0805F0DC:
	ldr r7, _0805F0E8 @ =0x00006424
	adds r1, r5, r7
	movs r0, #0x16
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805F0E8: .4byte 0x00006424
_0805F0EC:
	ldr r0, _0805F0F8 @ =0x00006424
	adds r1, r5, r0
	movs r0, #0x19
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805F0F8: .4byte 0x00006424
_0805F0FC:
	movs r1, #0xb4
	str r1, [sp, #0x34]
	ldr r2, _0805F114 @ =0x00006426
	adds r1, r5, r2
	movs r0, #2
	strh r0, [r1]
	ldr r3, _0805F118 @ =0x00006422
	adds r1, r5, r3
	movs r0, #7
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805F114: .4byte 0x00006426
_0805F118: .4byte 0x00006422
_0805F11C:
	ldr r4, _0805F130 @ =0x00006426
	adds r0, r5, r4
	movs r7, #0
	ldrsh r0, [r0, r7]
	cmp r0, #2
	beq _0805F12A
	b _0805F59E
_0805F12A:
	ldr r0, _0805F134 @ =0x00006422
	adds r1, r5, r0
	b _0805F14E
	.align 2, 0
_0805F130: .4byte 0x00006426
_0805F134: .4byte 0x00006422
_0805F138:
	ldr r1, [sp, #0x34]
	lsls r0, r1, #0x10
	ldr r2, _0805F154 @ =0xFFFF0000
	adds r0, r0, r2
	lsrs r3, r0, #0x10
	str r3, [sp, #0x34]
	cmp r0, #0
	blt _0805F14A
	b _0805F59E
_0805F14A:
	ldr r4, _0805F158 @ =0x00006422
	adds r1, r5, r4
_0805F14E:
	movs r0, #8
	strh r0, [r1]
	b _0805F59E
	.align 2, 0
_0805F154: .4byte 0xFFFF0000
_0805F158: .4byte 0x00006422
_0805F15C:
	ldr r7, _0805F19C @ =0x00006420
	adds r1, r5, r7
	ldrh r2, [r1]
	adds r0, r2, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xd
	bgt _0805F1D4
	adds r0, r2, #0
	subs r0, #8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _0805F1A4
	ldr r0, [sp, #4]
	ldr r1, _0805F1A0 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #0
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	b _0805F1C2
	.align 2, 0
_0805F19C: .4byte 0x00006420
_0805F1A0: .4byte 0x00000889
_0805F1A4:
	ldr r0, [sp, #4]
	ldr r1, _0805F1CC @ =0x00000889
	adds r0, #0xc
	movs r2, #2
	movs r3, #0
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_0805F1C2:
	ldr r0, _0805F1D0 @ =0x00006422
	adds r1, r5, r0
	movs r0, #9
	b _0805F1F8
	.align 2, 0
_0805F1CC: .4byte 0x00000889
_0805F1D0: .4byte 0x00006422
_0805F1D4:
	ldr r0, [sp, #4]
	ldr r1, _0805F22C @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r2, _0805F230 @ =0x00006422
	adds r1, r5, r2
	movs r0, #0xa
_0805F1F8:
	strh r0, [r1]
_0805F1FA:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0805F208
	b _0805F59E
_0805F208:
	movs r3, #1
	rsbs r3, r3, #0
	mov sl, r3
	ldr r4, _0805F234 @ =0x00006420
	adds r0, r5, r4
	ldrh r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	bls _0805F220
	b _0805F32E
_0805F220:
	lsls r0, r0, #2
	ldr r1, _0805F238 @ =_0805F23C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805F22C: .4byte 0x00000889
_0805F230: .4byte 0x00006422
_0805F234: .4byte 0x00006420
_0805F238: .4byte _0805F23C
_0805F23C: @ jump table
	.4byte _0805F270 @ case 0
	.4byte _0805F280 @ case 1
	.4byte _0805F2BC @ case 2
	.4byte _0805F2BC @ case 3
	.4byte _0805F2BC @ case 4
	.4byte _0805F2BC @ case 5
	.4byte _0805F2BC @ case 6
	.4byte _0805F2BC @ case 7
	.4byte _0805F29C @ case 8
	.4byte _0805F2DC @ case 9
	.4byte _0805F2F8 @ case 10
	.4byte _0805F318 @ case 11
	.4byte _0805F280 @ case 12
_0805F270:
	movs r7, #0
	mov sl, r7
	ldr r0, _0805F27C @ =0x00006422
	adds r1, r5, r0
	b _0805F2CE
	.align 2, 0
_0805F27C: .4byte 0x00006422
_0805F280:
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	movs r3, #0x92
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	ldr r4, _0805F298 @ =0x00006422
	adds r1, r5, r4
	b _0805F2CE
	.align 2, 0
_0805F298: .4byte 0x00006422
_0805F29C:
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	movs r7, #0x82
	lsls r7, r7, #5
	adds r1, r7, #0
	strh r1, [r2]
	strh r1, [r0]
	ldr r0, _0805F2B8 @ =0x00006422
	adds r1, r5, r0
	movs r0, #3
	strh r0, [r1]
	b _0805F32E
	.align 2, 0
_0805F2B8: .4byte 0x00006422
_0805F2BC:
	ldr r1, _0805F2D4 @ =0x00006420
	adds r0, r5, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	subs r0, #2
	lsls r0, r0, #1
	mov sl, r0
	ldr r3, _0805F2D8 @ =0x00006422
	adds r1, r5, r3
_0805F2CE:
	movs r0, #1
	strh r0, [r1]
	b _0805F32E
	.align 2, 0
_0805F2D4: .4byte 0x00006420
_0805F2D8: .4byte 0x00006422
_0805F2DC:
	ldr r4, _0805F2F0 @ =0x00006422
	adds r1, r5, r4
	movs r0, #3
	strh r0, [r1]
	ldr r7, _0805F2F4 @ =0x00006420
	adds r0, r5, r7
	movs r1, #0
	ldrsh r0, [r0, r1]
	b _0805F328
	.align 2, 0
_0805F2F0: .4byte 0x00006422
_0805F2F4: .4byte 0x00006420
_0805F2F8:
	movs r2, #0x78
	str r2, [sp, #0x34]
	ldr r3, _0805F310 @ =0x00006422
	adds r1, r5, r3
	movs r0, #2
	strh r0, [r1]
	ldr r4, _0805F314 @ =0x00006420
	adds r0, r5, r4
	movs r7, #0
	ldrsh r0, [r0, r7]
	b _0805F328
	.align 2, 0
_0805F310: .4byte 0x00006422
_0805F314: .4byte 0x00006420
_0805F318:
	ldr r0, _0805F380 @ =0x00006422
	adds r1, r5, r0
	movs r0, #1
	strh r0, [r1]
	ldr r1, _0805F384 @ =0x00006420
	adds r0, r5, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
_0805F328:
	subs r0, #3
	lsls r0, r0, #1
	mov sl, r0
_0805F32E:
	movs r0, #1
	rsbs r0, r0, #0
	cmp sl, r0
	bne _0805F338
	b _0805F59E
_0805F338:
	adds r0, r5, #0
	bl func_08008910
	adds r6, r0, #0
	mov r3, sl
	lsls r4, r3, #2
	adds r1, r4, r3
	lsls r1, r1, #8
	adds r1, r1, r5
	adds r1, #0x20
	add r0, sp, #8
	ldr r2, _0805F388 @ =0x0600F000
	movs r3, #0xa0
	lsls r3, r3, #3
	bl func_08008F0C
	ldr r7, [sp, #0x40]
	str r7, [sp, #0x3c]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	str r4, [sp, #0x48]
	cmp r1, r0
	beq _0805F38C
	cmp r1, #0
	beq _0805F376
	adds r0, r1, #0
	adds r1, r7, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0805F376:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0805F460
	.align 2, 0
_0805F380: .4byte 0x00006422
_0805F384: .4byte 0x00006420
_0805F388: .4byte 0x0600F000
_0805F38C:
	str r1, [sp, #0x4c]
	movs r0, #1
	str r0, [sp, #0x1c]
	ldr r1, [r6]
	ldr r7, [sp, #0x4c]
	subs r0, r7, r1
	asrs r4, r0, #4
	str r4, [sp, #0x18]
	add r2, sp, #0x1c
	add r0, sp, #0x18
	cmp r4, #1
	bhs _0805F3A6
	adds r0, r2, #0
_0805F3A6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805F3C6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0805F3C2
	mov r0, sb
	bl func_080D3BC0
_0805F3C2:
	ldr r1, [r6]
	b _0805F3CA
_0805F3C6:
	movs r0, #0
	mov sb, r0
_0805F3CA:
	adds r4, r0, #0
	mov r8, r4
	adds r2, r1, #0
	mov ip, r8
	ldr r0, [sp, #0x4c]
	cmp r2, r0
	beq _0805F3F6
_0805F3D8:
	mov r1, ip
	cmp r1, #0
	beq _0805F3EA
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805F3EA:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	ldr r1, [sp, #0x4c]
	cmp r2, r1
	bne _0805F3D8
_0805F3F6:
	mov r4, ip
	ldr r0, [sp, #0x1c]
	cmp r0, #1
	bne _0805F412
	cmp r4, #0
	beq _0805F40E
	adds r0, r4, #0
	ldr r1, [sp, #0x3c]
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805F40E:
	adds r4, #0x10
	b _0805F43A
_0805F412:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _0805F438
_0805F41A:
	cmp r2, #0
	beq _0805F42A
	adds r0, r2, #0
	ldr r1, [sp, #0x3c]
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805F42A:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _0805F41A
_0805F438:
	adds r4, r2, #0
_0805F43A:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _0805F44A
_0805F444:
	adds r0, #0x10
	cmp r0, r2
	bne _0805F444
_0805F44A:
	cmp r1, #0
	beq _0805F454
	adds r0, r1, #0
	bl free
_0805F454:
	mov r0, sb
	add r0, r8
	mov r2, r8
	str r2, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_0805F460:
	adds r0, r5, #0
	bl func_08008910
	adds r6, r0, #0
	ldr r1, [sp, #0x48]
	add r1, sl
	lsls r1, r1, #8
	adds r1, r1, r5
	movs r3, #0xa4
	lsls r3, r3, #3
	adds r1, r1, r3
	add r0, sp, #8
	ldr r2, _0805F4A4 @ =0x0600E800
	subs r3, #0x20
	bl func_08008F0C
	ldr r4, [sp, #0x40]
	mov sl, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0805F4A8
	cmp r1, #0
	beq _0805F49C
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805F49C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0805F57A
	.align 2, 0
_0805F4A4: .4byte 0x0600E800
_0805F4A8:
	str r1, [sp, #0x4c]
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r1, [r6]
	ldr r4, [sp, #0x4c]
	subs r0, r4, r1
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r2, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _0805F4C2
	adds r0, r2, #0
_0805F4C2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0805F4E2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0805F4DE
	mov r0, sb
	bl func_080D3BC0
_0805F4DE:
	ldr r1, [r6]
	b _0805F4E6
_0805F4E2:
	movs r0, #0
	mov sb, r0
_0805F4E6:
	adds r4, r0, #0
	mov r8, r4
	adds r2, r1, #0
	mov ip, r8
	ldr r7, [sp, #0x4c]
	cmp r2, r7
	beq _0805F510
_0805F4F4:
	mov r0, ip
	cmp r0, #0
	beq _0805F504
	adds r1, r2, #0
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805F504:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	ldr r1, [sp, #0x4c]
	cmp r2, r1
	bne _0805F4F4
_0805F510:
	mov r4, ip
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _0805F52C
	cmp r4, #0
	beq _0805F528
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805F528:
	adds r4, #0x10
	b _0805F554
_0805F52C:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _0805F552
_0805F534:
	cmp r2, #0
	beq _0805F544
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0805F544:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _0805F534
_0805F552:
	adds r4, r2, #0
_0805F554:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _0805F564
_0805F55E:
	adds r0, #0x10
	cmp r0, r2
	bne _0805F55E
_0805F564:
	cmp r1, #0
	beq _0805F56E
	adds r0, r1, #0
	bl free
_0805F56E:
	mov r0, sb
	add r0, r8
	mov r2, r8
	str r2, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_0805F57A:
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	movs r3, #0xe2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	b _0805F59E
_0805F58E:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0805F59E
	movs r4, #1
	str r4, [sp, #0x38]
_0805F59E:
	adds r0, r5, #0
	bl func_0805F5F4
	ldr r7, [sp, #0x38]
	cmp r7, #0
	bne _0805F5AC
	b _0805EED8
_0805F5AC:
	movs r0, #0
	str r0, [sp, #8]
	ldr r1, [sp, #0x40]
	str r1, [sp, #0x28]
	ldr r2, [sp, #0x44]
	str r0, [r2, #4]
	str r0, [r1]
	ldr r3, [sp, #0x30]
	str r0, [r3]
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _0805F5D0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805F5D0:
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _0805F5E2
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805F5E2:
	ldr r0, [sp, #0x30]
	add sp, #0x50
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0805F5F4
func_0805F5F4: @ 0x0805F5F4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r0, [r7, #0x10]
	mov sb, r0
	adds r0, r7, #0
	bl func_080088DC
	mov r8, r0
	adds r0, r7, #0
	bl func_08008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_0800894C
	adds r1, r7, #0
	adds r1, #0x14
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl func_08050D3C
	cmp r0, #6
	bls _0805F646
	b _0805FB9C
_0805F646:
	lsls r0, r0, #2
	ldr r1, _0805F650 @ =_0805F654
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805F650: .4byte _0805F654
_0805F654: @ jump table
	.4byte _0805F670 @ case 0
	.4byte _0805FB9C @ case 1
	.4byte _0805FB9C @ case 2
	.4byte _0805F6A4 @ case 3
	.4byte _0805FB9C @ case 4
	.4byte _0805FB9C @ case 5
	.4byte _0805FB9C @ case 6
_0805F670:
	ldr r1, _0805F690 @ =0x00006426
	adds r4, r7, r1
	movs r2, #0
	ldrsh r0, [r4, r2]
	cmp r0, #0
	bne _0805F694
	ldr r0, [r7, #0x10]
	bl func_08050E74
	ldr r0, [r7, #0x10]
	bl func_08050D5C
	movs r0, #3
	strh r0, [r4]
	b _0805FB9C
	.align 2, 0
_0805F690: .4byte 0x00006426
_0805F694:
	cmp r0, #6
	bne _0805F69E
	movs r0, #0
	strh r0, [r4]
	b _0805FB9C
_0805F69E:
	movs r0, #2
	strh r0, [r4]
	b _0805FB9C
_0805F6A4:
	ldr r3, _0805F6BC @ =0x00006426
	adds r4, r7, r3
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #5
	bne _0805F6C0
	ldr r0, [r7, #0x10]
	bl func_08050D74
	movs r0, #1
	strh r0, [r4]
	b _0805FB9C
	.align 2, 0
_0805F6BC: .4byte 0x00006426
_0805F6C0:
	cmp r0, #6
	bne _0805F6CC
	ldr r0, [r7, #0x10]
	bl func_08050D74
	b _0805FB9C
_0805F6CC:
	cmp r0, #3
	beq _0805F6D2
	b _0805FB9C
_0805F6D2:
	movs r0, #5
	strh r0, [r4]
	ldr r2, _0805F6F0 @ =0x00006424
	adds r0, r7, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #0x19
	bls _0805F6E4
	b _0805FB9C
_0805F6E4:
	lsls r0, r0, #2
	ldr r1, _0805F6F4 @ =_0805F6F8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0805F6F0: .4byte 0x00006424
_0805F6F4: .4byte _0805F6F8
_0805F6F8: @ jump table
	.4byte _0805F760 @ case 0
	.4byte _0805F79C @ case 1
	.4byte _0805F7D8 @ case 2
	.4byte _0805F814 @ case 3
	.4byte _0805F82C @ case 4
	.4byte _0805F844 @ case 5
	.4byte _0805F87C @ case 6
	.4byte _0805F8B8 @ case 7
	.4byte _0805FB9C @ case 8
	.4byte _0805F8F4 @ case 9
	.4byte _0805F930 @ case 10
	.4byte _0805F96C @ case 11
	.4byte _0805FB9C @ case 12
	.4byte _0805FB9C @ case 13
	.4byte _0805F984 @ case 14
	.4byte _0805F9C0 @ case 15
	.4byte _0805F9CC @ case 16
	.4byte _0805FA08 @ case 17
	.4byte _0805FA44 @ case 18
	.4byte _0805FA5C @ case 19
	.4byte _0805FA98 @ case 20
	.4byte _0805FAD4 @ case 21
	.4byte _0805FAEC @ case 22
	.4byte _0805FB28 @ case 23
	.4byte _0805FB64 @ case 24
	.4byte _0805FB88 @ case 25
_0805F760:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F788 @ =0x080FB234
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F78C @ =0x080FB23C
	ldr r3, _0805F790 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805F794 @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805F798 @ =0x00006424
	adds r1, r7, r2
	movs r0, #1
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805F788: .4byte 0x080FB234
_0805F78C: .4byte 0x080FB23C
_0805F790: .4byte 0x00006428
_0805F794: .4byte 0x00006426
_0805F798: .4byte 0x00006424
_0805F79C:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F7C4 @ =0x080FB27C
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F7C8 @ =0x080FB284
	ldr r3, _0805F7CC @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805F7D0 @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805F7D4 @ =0x00006424
	adds r1, r7, r2
	movs r0, #2
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805F7C4: .4byte 0x080FB27C
_0805F7C8: .4byte 0x080FB284
_0805F7CC: .4byte 0x00006428
_0805F7D0: .4byte 0x00006426
_0805F7D4: .4byte 0x00006424
_0805F7D8:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F800 @ =0x080FB234
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F804 @ =0x080FB2D0
	ldr r3, _0805F808 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805F80C @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805F810 @ =0x00006424
	adds r1, r7, r2
	movs r0, #3
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805F800: .4byte 0x080FB234
_0805F804: .4byte 0x080FB2D0
_0805F808: .4byte 0x00006428
_0805F80C: .4byte 0x00006426
_0805F810: .4byte 0x00006424
_0805F814:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F824 @ =0x080FB27C
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F828 @ =0x080FB2F4
	b _0805FB70
	.align 2, 0
_0805F824: .4byte 0x080FB27C
_0805F828: .4byte 0x080FB2F4
_0805F82C:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F83C @ =0x080FB300
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F840 @ =0x080FB308
	b _0805FB70
	.align 2, 0
_0805F83C: .4byte 0x080FB300
_0805F840: .4byte 0x080FB308
_0805F844:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F868 @ =0x080FB234
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F86C @ =0x080FB398
	ldr r3, _0805F870 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r1, _0805F874 @ =0x00006426
	adds r0, r7, r1
	movs r1, #6
	strh r1, [r0]
	ldr r2, _0805F878 @ =0x00006424
	adds r0, r7, r2
	strh r1, [r0]
	b _0805FB9C
	.align 2, 0
_0805F868: .4byte 0x080FB234
_0805F86C: .4byte 0x080FB398
_0805F870: .4byte 0x00006428
_0805F874: .4byte 0x00006426
_0805F878: .4byte 0x00006424
_0805F87C:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F8A4 @ =0x080FB27C
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F8A8 @ =0x080FB3CC
	ldr r3, _0805F8AC @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805F8B0 @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805F8B4 @ =0x00006424
	adds r1, r7, r2
	movs r0, #7
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805F8A4: .4byte 0x080FB27C
_0805F8A8: .4byte 0x080FB3CC
_0805F8AC: .4byte 0x00006428
_0805F8B0: .4byte 0x00006426
_0805F8B4: .4byte 0x00006424
_0805F8B8:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F8E0 @ =0x080FB300
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F8E4 @ =0x080FB420
	ldr r3, _0805F8E8 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805F8EC @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805F8F0 @ =0x00006424
	adds r1, r7, r2
	movs r0, #9
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805F8E0: .4byte 0x080FB300
_0805F8E4: .4byte 0x080FB420
_0805F8E8: .4byte 0x00006428
_0805F8EC: .4byte 0x00006426
_0805F8F0: .4byte 0x00006424
_0805F8F4:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F91C @ =0x080FB27C
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F920 @ =0x080FB46C
	ldr r3, _0805F924 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805F928 @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805F92C @ =0x00006424
	adds r1, r7, r2
	movs r0, #0xa
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805F91C: .4byte 0x080FB27C
_0805F920: .4byte 0x080FB46C
_0805F924: .4byte 0x00006428
_0805F928: .4byte 0x00006426
_0805F92C: .4byte 0x00006424
_0805F930:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F958 @ =0x080FB300
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F95C @ =0x080FB484
	ldr r3, _0805F960 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805F964 @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805F968 @ =0x00006424
	adds r1, r7, r2
	movs r0, #0xb
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805F958: .4byte 0x080FB300
_0805F95C: .4byte 0x080FB484
_0805F960: .4byte 0x00006428
_0805F964: .4byte 0x00006426
_0805F968: .4byte 0x00006424
_0805F96C:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F97C @ =0x080FB234
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F980 @ =0x080FB4D4
	b _0805FB70
	.align 2, 0
_0805F97C: .4byte 0x080FB234
_0805F980: .4byte 0x080FB4D4
_0805F984:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F9AC @ =0x080FB51C
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F9B0 @ =0x080FB520
	ldr r3, _0805F9B4 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805F9B8 @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805F9BC @ =0x00006424
	adds r1, r7, r2
	movs r0, #0xf
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805F9AC: .4byte 0x080FB51C
_0805F9B0: .4byte 0x080FB520
_0805F9B4: .4byte 0x00006428
_0805F9B8: .4byte 0x00006426
_0805F9BC: .4byte 0x00006424
_0805F9C0:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F9C8 @ =0x080FB534
	b _0805FB70
	.align 2, 0
_0805F9C8: .4byte 0x080FB534
_0805F9CC:
	ldr r0, [r7, #0x10]
	ldr r1, _0805F9F4 @ =0x080FB53C
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805F9F8 @ =0x080FB544
	ldr r3, _0805F9FC @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805FA00 @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805FA04 @ =0x00006424
	adds r1, r7, r2
	movs r0, #0x11
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805F9F4: .4byte 0x080FB53C
_0805F9F8: .4byte 0x080FB544
_0805F9FC: .4byte 0x00006428
_0805FA00: .4byte 0x00006426
_0805FA04: .4byte 0x00006424
_0805FA08:
	ldr r0, [r7, #0x10]
	ldr r1, _0805FA30 @ =0x080FB53C
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805FA34 @ =0x080FB578
	ldr r3, _0805FA38 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805FA3C @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805FA40 @ =0x00006424
	adds r1, r7, r2
	movs r0, #0x12
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805FA30: .4byte 0x080FB53C
_0805FA34: .4byte 0x080FB578
_0805FA38: .4byte 0x00006428
_0805FA3C: .4byte 0x00006426
_0805FA40: .4byte 0x00006424
_0805FA44:
	ldr r0, [r7, #0x10]
	ldr r1, _0805FA54 @ =0x080FB53C
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805FA58 @ =0x080FB5D4
	b _0805FB70
	.align 2, 0
_0805FA54: .4byte 0x080FB53C
_0805FA58: .4byte 0x080FB5D4
_0805FA5C:
	ldr r0, [r7, #0x10]
	ldr r1, _0805FA84 @ =0x080FB300
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805FA88 @ =0x080FB634
	ldr r3, _0805FA8C @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805FA90 @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805FA94 @ =0x00006424
	adds r1, r7, r2
	movs r0, #0x14
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805FA84: .4byte 0x080FB300
_0805FA88: .4byte 0x080FB634
_0805FA8C: .4byte 0x00006428
_0805FA90: .4byte 0x00006426
_0805FA94: .4byte 0x00006424
_0805FA98:
	ldr r0, [r7, #0x10]
	ldr r1, _0805FAC0 @ =0x080FB300
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805FAC4 @ =0x080FB6C0
	ldr r3, _0805FAC8 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805FACC @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805FAD0 @ =0x00006424
	adds r1, r7, r2
	movs r0, #0x15
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805FAC0: .4byte 0x080FB300
_0805FAC4: .4byte 0x080FB6C0
_0805FAC8: .4byte 0x00006428
_0805FACC: .4byte 0x00006426
_0805FAD0: .4byte 0x00006424
_0805FAD4:
	ldr r0, [r7, #0x10]
	ldr r1, _0805FAE4 @ =0x080FB300
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805FAE8 @ =0x080FB710
	b _0805FB70
	.align 2, 0
_0805FAE4: .4byte 0x080FB300
_0805FAE8: .4byte 0x080FB710
_0805FAEC:
	ldr r0, [r7, #0x10]
	ldr r1, _0805FB14 @ =0x080FB53C
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805FB18 @ =0x080FB738
	ldr r3, _0805FB1C @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805FB20 @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805FB24 @ =0x00006424
	adds r1, r7, r2
	movs r0, #0x17
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805FB14: .4byte 0x080FB53C
_0805FB18: .4byte 0x080FB738
_0805FB1C: .4byte 0x00006428
_0805FB20: .4byte 0x00006426
_0805FB24: .4byte 0x00006424
_0805FB28:
	ldr r0, [r7, #0x10]
	ldr r1, _0805FB50 @ =0x080FB53C
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805FB54 @ =0x080FB754
	ldr r3, _0805FB58 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	ldr r0, _0805FB5C @ =0x00006426
	adds r1, r7, r0
	movs r0, #6
	strh r0, [r1]
	ldr r2, _0805FB60 @ =0x00006424
	adds r1, r7, r2
	movs r0, #0x18
	strh r0, [r1]
	b _0805FB9C
	.align 2, 0
_0805FB50: .4byte 0x080FB53C
_0805FB54: .4byte 0x080FB754
_0805FB58: .4byte 0x00006428
_0805FB5C: .4byte 0x00006426
_0805FB60: .4byte 0x00006424
_0805FB64:
	ldr r0, [r7, #0x10]
	ldr r1, _0805FB7C @ =0x080FB300
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805FB80 @ =0x080FB7A0
_0805FB70:
	ldr r3, _0805FB84 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
	b _0805FB9C
	.align 2, 0
_0805FB7C: .4byte 0x080FB300
_0805FB80: .4byte 0x080FB7A0
_0805FB84: .4byte 0x00006428
_0805FB88:
	ldr r0, [r7, #0x10]
	ldr r1, _0805FBAC @ =0x080FB300
	bl func_08050E68
	ldr r0, [r7, #0x10]
	ldr r1, _0805FBB0 @ =0x080FB7F0
	ldr r3, _0805FBB4 @ =0x00006428
	adds r2, r7, r3
	bl func_08050DA0
_0805FB9C:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0805FBAC: .4byte 0x080FB300
_0805FBB0: .4byte 0x080FB7F0
_0805FBB4: .4byte 0x00006428

	thumb_func_start func_0805FBB8
func_0805FBB8: @ 0x0805FBB8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r1, _0805FCA0 @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	ldr r4, _0805FCA4 @ =0x10661066
	ldr r1, _0805FCA8 @ =0x0600E000
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r1, _0805FCAC @ =0x0600E800
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r1, _0805FCB0 @ =0x0600F000
	adds r0, r4, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r0, _0805FCB4 @ =0x08743058
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl func_080D102C
	ldr r0, _0805FCB8 @ =0x08747A14
	movs r4, #0xa0
	lsls r4, r4, #0x13
	adds r1, r4, #0
	movs r2, #0x40
	bl func_08008E64
	ldr r1, _0805FCBC @ =0x00007FFF
	adds r0, r1, #0
	strh r0, [r4]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r3, #0xe2
	lsls r3, r3, #5
	adds r2, r3, #0
	strh r2, [r1]
	movs r4, #0
	strh r2, [r0]
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _0805FCC0 @ =0x00001E43
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _0805FCC4 @ =0x00001D42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _0805FCC8 @ =0x00001C41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x18]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1a]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1c]
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	adds r6, #0x20
	ldr r5, _0805FCCC @ =0x080FB1E4
	movs r4, #0x13
_0805FC84:
	ldm r5!, {r0}
	adds r1, r6, #0
	bl func_080D102C
	movs r0, #0xa0
	lsls r0, r0, #3
	adds r6, r6, r0
	subs r4, #1
	cmp r4, #0
	bge _0805FC84
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0805FCA0: .4byte 0x06007FE0
_0805FCA4: .4byte 0x10661066
_0805FCA8: .4byte 0x0600E000
_0805FCAC: .4byte 0x0600E800
_0805FCB0: .4byte 0x0600F000
_0805FCB4: .4byte 0x08743058
_0805FCB8: .4byte 0x08747A14
_0805FCBC: .4byte 0x00007FFF
_0805FCC0: .4byte 0x00001E43
_0805FCC4: .4byte 0x00001D42
_0805FCC8: .4byte 0x00001C41
_0805FCCC: .4byte 0x080FB1E4

	thumb_func_start func_0805FCD0
func_0805FCD0: @ 0x0805FCD0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _0805FCFC @ =vtable_unk_080E79F8
	str r0, [r4]
	ldr r0, _0805FD00 @ =0x00006430
	bl __builtin_new
	adds r1, r5, #0
	bl func_0805ED4C
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0805FCFC: .4byte vtable_unk_080E79F8
_0805FD00: .4byte 0x00006430

	thumb_func_start func_0805FD04
func_0805FD04: @ 0x0805FD04
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0805FD40 @ =vtable_unk_080E79F8
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0805FD20
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805FD20:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0805FD32
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805FD32:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0805FD40: .4byte vtable_unk_080E79F8

	thumb_func_start func_0805FD44
func_0805FD44: @ 0x0805FD44
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r4, #4]
	mov r0, sp
	bl func_0805EE44
	ldr r1, [sp]
	cmp r1, #0
	beq _0805FD66
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0805FD66:
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0805FD78
func_0805FD78: @ 0x0805FD78
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	bl func_08075E7C
	ldr r0, _0805FF10 @ =vtable_unk_080E7A88
	str r0, [r5, #4]
	movs r1, #0x90
	lsls r1, r1, #1
	adds r0, r5, r1
	str r4, [r0]
	movs r0, #0x92
	lsls r0, r0, #1
	adds r6, r5, r0
	movs r0, #0
	str r0, [r6]
	mov r1, sp
	str r0, [sp]
	strh r0, [r1, #4]
	str r0, [sp]
	movs r1, #0x94
	lsls r1, r1, #1
	adds r2, r5, r1
	cmp r2, #0
	beq _0805FDB8
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r2]
	str r1, [r2, #4]
_0805FDB8:
	ldr r0, [r6]
	adds r0, #1
	str r0, [r6]
	movs r0, #0x90
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r0, [r4]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	bl CountChickens__C4Coop
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	bge _0805FDFC
	movs r0, #1
	str r0, [sp]
	adds r1, r6, #0
	ldr r0, [r1]
	cmp r0, #6
	bhi _0805FDFC
	lsls r0, r0, #3
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0805FDF6
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r2]
	str r1, [r2, #4]
_0805FDF6:
	ldr r0, [r6]
	adds r0, #1
	str r0, [r6]
_0805FDFC:
	ldr r0, [r4]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl CountCows__C4Barn
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	bge _0805FE38
	movs r0, #2
	str r0, [sp]
	movs r0, #0x92
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r0, [r2]
	cmp r0, #6
	bhi _0805FE38
	lsls r0, r0, #3
	adds r0, #4
	adds r3, r2, r0
	cmp r3, #0
	beq _0805FE32
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r3]
	str r1, [r3, #4]
_0805FE32:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0805FE38:
	ldr r0, [r4]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl CountSheeps__C4Barn
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	bge _0805FE74
	movs r0, #3
	str r0, [sp]
	movs r0, #0x92
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r0, [r2]
	cmp r0, #6
	bhi _0805FE74
	lsls r0, r0, #3
	adds r0, #4
	adds r3, r2, r0
	cmp r3, #0
	beq _0805FE6E
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r3]
	str r1, [r3, #4]
_0805FE6E:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0805FE74:
	movs r0, #4
	str r0, [sp]
	movs r1, #0x92
	lsls r1, r1, #1
	adds r2, r5, r1
	ldr r0, [r2]
	cmp r0, #6
	bhi _0805FE9C
	lsls r0, r0, #3
	adds r0, #4
	adds r3, r2, r0
	cmp r3, #0
	beq _0805FE96
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r3]
	str r1, [r3, #4]
_0805FE96:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0805FE9C:
	movs r0, #5
	str r0, [sp]
	movs r0, #0x92
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r0, [r2]
	cmp r0, #6
	bhi _0805FEC4
	lsls r0, r0, #3
	adds r0, #4
	adds r3, r2, r0
	cmp r3, #0
	beq _0805FEBE
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r3]
	str r1, [r3, #4]
_0805FEBE:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0805FEC4:
	movs r0, #6
	str r0, [sp]
	movs r1, #0x92
	lsls r1, r1, #1
	adds r2, r5, r1
	ldr r0, [r2]
	cmp r0, #6
	bhi _0805FEEC
	lsls r0, r0, #3
	adds r0, #4
	adds r3, r2, r0
	cmp r3, #0
	beq _0805FEE6
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r3]
	str r1, [r3, #4]
_0805FEE6:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0805FEEC:
	movs r0, #0xb0
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #0
	str r0, [r1]
	movs r1, #0x94
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r1, [r0]
	adds r0, r5, #0
	bl func_08069C34
	adds r0, r5, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0805FF10: .4byte vtable_unk_080E7A88

	thumb_func_start func_0805FF14
func_0805FF14: @ 0x0805FF14
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _080600A4 @ =0xFFFFFD64
	add sp, r4
	str r0, [sp, #0x1c4]
	str r1, [sp, #0x1c8]
	mov sl, r2
	mov r0, sl
	adds r0, #0x14
	bl func_08009AF4
	adds r6, r0, #0
	add r5, sp, #0x20
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x16
	bls _0805FF40
	movs r4, #0x16
_0805FF40:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r5, r4
	movs r1, #0
	mov sb, r1
	strb r1, [r0]
	adds r7, r5, #0
	ldr r2, _080600A8 @ =0x080FB824
	mov r8, r2
	adds r0, r7, #0
	bl strlen
	adds r6, r7, r0
	movs r1, #0x16
	subs r5, r1, r0
	cmp r5, #0
	beq _0805FF86
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0805FF76
	adds r4, r5, #0
_0805FF76:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	mov r3, sb
	strb r3, [r0]
_0805FF86:
	add r0, sp, #8
	adds r1, r7, #0
	bl strcpy
	add r0, sp, #8
	adds r1, r0, #0
	movs r2, #0x18
	bl memcpy
	add r4, sp, #8
	str r4, [sp]
	ldr r0, [sp, #0x1c4]
	ldr r1, [sp, #0x1c8]
	mov r2, sl
	movs r3, #0x40
	bl func_08076BFC
	ldr r5, [sp, #0x1c4]
	ldr r7, _080600AC @ =0x000005B4
	adds r1, r5, r7
	ldr r0, _080600B0 @ =vtable_unk_080E7A78
	str r0, [r1]
	ldr r0, [r5, #4]
	str r0, [sp, #0x1cc]
	ldr r2, _080600B4 @ =0x080FB830
	add r1, sp, #0x58
	movs r0, #2
	strh r0, [r1]
	strh r0, [r1, #2]
	ldr r0, [sp, #0x58]
	ldr r1, _080600B8 @ =0x000005BC
	adds r4, r5, r1
	str r2, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r0, [r5]
	bl func_08008910
	adds r6, r0, #0
	movs r3, #0x38
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x38
	adds r1, r4, #0
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #0x38
	mov r8, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	mov sl, r8
	cmp r1, r0
	beq _080600D0
	cmp r1, #0
	beq _0806000C
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806000C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r3, sp
	adds r3, #0x64
	str r3, [sp, #0x22c]
	movs r5, #0xc8
	lsls r5, r5, #3
	ldr r4, [sp, #0x1c4]
	adds r5, r4, r5
	str r5, [sp, #0x1f4]
	mov r7, sp
	adds r7, #0x70
	str r7, [sp, #0x230]
	ldr r0, _080600BC @ =0x000006C4
	adds r0, r4, r0
	str r0, [sp, #0x1f8]
	mov r1, sp
	adds r1, #0x7c
	str r1, [sp, #0x234]
	movs r2, #0xe9
	lsls r2, r2, #3
	adds r2, r4, r2
	str r2, [sp, #0x1fc]
	adds r3, #0x24
	str r3, [sp, #0x23c]
	ldr r5, _080600C0 @ =0x000007CC
	adds r5, r4, r5
	str r5, [sp, #0x200]
	adds r7, #0x24
	str r7, [sp, #0x240]
	movs r0, #0x85
	lsls r0, r0, #4
	adds r0, r4, r0
	str r0, [sp, #0x204]
	adds r1, #0x24
	str r1, [sp, #0x244]
	ldr r2, _080600C4 @ =0x000008D4
	adds r2, r4, r2
	str r2, [sp, #0x208]
	adds r3, #0x74
	str r3, [sp, #0x248]
	ldr r5, _080600C8 @ =0x00000958
	adds r5, r4, r5
	str r5, [sp, #0x20c]
	movs r7, #0x80
	lsls r7, r7, #1
	add r7, sp
	str r7, [sp, #0x24c]
	mov r0, sp
	adds r0, #0x48
	str r0, [sp, #0x228]
	movs r1, #0xaa
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x274]
	ldr r2, _080600CC @ =0x00001568
	adds r2, r4, r2
	str r2, [sp, #0x224]
	movs r3, #0xac
	lsls r3, r3, #1
	add r3, sp
	str r3, [sp, #0x278]
	movs r4, #0xb2
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x27c]
	movs r5, #0xb4
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x280]
	movs r7, #0x38
	lsls r7, r7, #0x10
	str r7, [sp, #0x238]
	b _08060236
	.align 2, 0
_080600A4: .4byte 0xFFFFFD64
_080600A8: .4byte 0x080FB824
_080600AC: .4byte 0x000005B4
_080600B0: .4byte vtable_unk_080E7A78
_080600B4: .4byte 0x080FB830
_080600B8: .4byte 0x000005BC
_080600BC: .4byte 0x000006C4
_080600C0: .4byte 0x000007CC
_080600C4: .4byte 0x000008D4
_080600C8: .4byte 0x00000958
_080600CC: .4byte 0x00001568
_080600D0:
	str r1, [sp, #0x294]
	movs r0, #1
	str r0, [sp, #0x60]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x5c]
	add r1, sp, #0x60
	add r0, sp, #0x5c
	cmp r4, #1
	bhs _080600E8
	adds r0, r1, #0
_080600E8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08060106
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806010A
	mov r0, sb
	bl func_080D3BC0
	b _0806010A
_08060106:
	movs r0, #0
	mov sb, r0
_0806010A:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r4, sp
	adds r4, #0x64
	str r4, [sp, #0x22c]
	movs r7, #0xc8
	lsls r7, r7, #3
	ldr r5, [sp, #0x1c4]
	adds r7, r5, r7
	str r7, [sp, #0x1f4]
	mov r0, sp
	adds r0, #0x70
	str r0, [sp, #0x230]
	ldr r1, _080601DC @ =0x000006C4
	adds r1, r5, r1
	str r1, [sp, #0x1f8]
	adds r4, #0x18
	str r4, [sp, #0x234]
	movs r7, #0xe9
	lsls r7, r7, #3
	adds r7, r5, r7
	str r7, [sp, #0x1fc]
	adds r0, #0x18
	str r0, [sp, #0x23c]
	ldr r1, _080601E0 @ =0x000007CC
	adds r1, r5, r1
	str r1, [sp, #0x200]
	adds r4, #0x18
	str r4, [sp, #0x240]
	movs r7, #0x85
	lsls r7, r7, #4
	adds r7, r5, r7
	str r7, [sp, #0x204]
	adds r0, #0x18
	str r0, [sp, #0x244]
	ldr r1, _080601E4 @ =0x000008D4
	adds r1, r5, r1
	str r1, [sp, #0x208]
	adds r4, #0x68
	str r4, [sp, #0x248]
	ldr r7, _080601E8 @ =0x00000958
	adds r7, r5, r7
	str r7, [sp, #0x20c]
	movs r0, #0x80
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x24c]
	mov r1, sp
	adds r1, #0x48
	str r1, [sp, #0x228]
	movs r4, #0xaa
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x274]
	ldr r7, _080601EC @ =0x00001568
	adds r7, r5, r7
	str r7, [sp, #0x224]
	movs r0, #0xac
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x278]
	movs r1, #0xb2
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x27c]
	movs r4, #0xb4
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x280]
	movs r5, #0x38
	lsls r5, r5, #0x10
	str r5, [sp, #0x238]
	ldr r7, [sp, #0x294]
	cmp r2, r7
	beq _080601BE
_080601A4:
	cmp r3, #0
	beq _080601B4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080601B4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _080601A4
_080601BE:
	adds r5, r3, #0
	ldr r0, [sp, #0x60]
	cmp r0, #1
	bne _080601F0
	cmp r5, #0
	beq _080601D6
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080601D6:
	adds r5, #0x10
	b _08060212
	.align 2, 0
_080601DC: .4byte 0x000006C4
_080601E0: .4byte 0x000007CC
_080601E4: .4byte 0x000008D4
_080601E8: .4byte 0x00000958
_080601EC: .4byte 0x00001568
_080601F0:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060210
_080601F8:
	cmp r2, #0
	beq _08060208
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060208:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080601F8
_08060210:
	adds r5, r2, #0
_08060212:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060222
_0806021C:
	adds r1, #0x10
	cmp r1, r2
	bne _0806021C
_08060222:
	cmp r0, #0
	beq _0806022A
	bl free
_0806022A:
	ldr r0, [sp, #0x298]
	add r0, sb
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060236:
	ldr r2, _08060298 @ =0x080FB830
	movs r1, #2
	add r0, sp, #0x64
	strh r1, [r0]
	ldr r0, [sp, #0x22c]
	strh r1, [r0, #2]
	ldr r0, [sp, #0x64]
	str r2, [sp]
	ldr r1, [sp, #0x1f4]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r1, [sp, #0x1c4]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	movs r3, #0x3c
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x38
	ldr r1, [sp, #0x1f4]
	movs r3, #0x80
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806029C
	cmp r1, #0
	beq _08060288
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060288:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r0, #0x3c
	lsls r0, r0, #0x10
	str r0, [sp, #0x260]
	b _08060366
	.align 2, 0
_08060298: .4byte 0x080FB830
_0806029C:
	str r1, [sp, #0x294]
	movs r0, #1
	str r0, [sp, #0x6c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x68]
	add r1, sp, #0x6c
	add r0, sp, #0x68
	cmp r4, #1
	bhs _080602B4
	adds r0, r1, #0
_080602B4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080602D2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080602D6
	mov r0, r8
	bl func_080D3BC0
	b _080602D6
_080602D2:
	movs r0, #0
	mov r8, r0
_080602D6:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	movs r4, #0x3c
	lsls r4, r4, #0x10
	str r4, [sp, #0x260]
	ldr r5, [sp, #0x294]
	cmp r2, r5
	beq _08060304
_080602EA:
	cmp r3, #0
	beq _080602FA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080602FA:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x294]
	cmp r2, r7
	bne _080602EA
_08060304:
	adds r5, r3, #0
	ldr r0, [sp, #0x6c]
	cmp r0, #1
	bne _08060320
	cmp r5, #0
	beq _0806031C
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806031C:
	adds r5, #0x10
	b _08060342
_08060320:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060340
_08060328:
	cmp r2, #0
	beq _08060338
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060338:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08060328
_08060340:
	adds r5, r2, #0
_08060342:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060352
_0806034C:
	adds r1, #0x10
	cmp r1, r2
	bne _0806034C
_08060352:
	cmp r0, #0
	beq _0806035A
	bl free
_0806035A:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060366:
	ldr r2, _080603B8 @ =0x080FB830
	movs r1, #2
	add r0, sp, #0x70
	strh r1, [r0]
	ldr r0, [sp, #0x230]
	strh r1, [r0, #2]
	ldr r0, [sp, #0x70]
	str r2, [sp]
	ldr r1, [sp, #0x1f8]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r1, [sp, #0x1c4]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r2, _080603BC @ =0x06000800
	add r0, sp, #0x38
	ldr r1, [sp, #0x1f8]
	movs r3, #0x80
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080603C0
	cmp r1, #0
	beq _080603B0
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080603B0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08060486
	.align 2, 0
_080603B8: .4byte 0x080FB830
_080603BC: .4byte 0x06000800
_080603C0:
	str r1, [sp, #0x294]
	movs r0, #1
	str r0, [sp, #0x78]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r1, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _080603DA
	adds r0, r1, #0
_080603DA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080603F8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080603FC
	mov r0, r8
	bl func_080D3BC0
	b _080603FC
_080603F8:
	movs r0, #0
	mov r8, r0
_080603FC:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x294]
	cmp r2, r7
	beq _08060424
_0806040A:
	cmp r3, #0
	beq _0806041A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806041A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _0806040A
_08060424:
	adds r5, r3, #0
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _08060440
	cmp r5, #0
	beq _0806043C
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806043C:
	adds r5, #0x10
	b _08060462
_08060440:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060460
_08060448:
	cmp r2, #0
	beq _08060458
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060458:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08060448
_08060460:
	adds r5, r2, #0
_08060462:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060472
_0806046C:
	adds r1, #0x10
	cmp r1, r2
	bne _0806046C
_08060472:
	cmp r0, #0
	beq _0806047A
	bl free
_0806047A:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060486:
	ldr r2, _080604E8 @ =0x080FB830
	movs r1, #2
	add r0, sp, #0x7c
	strh r1, [r0]
	ldr r0, [sp, #0x234]
	strh r1, [r0, #2]
	ldr r0, [sp, #0x7c]
	str r2, [sp]
	ldr r1, [sp, #0x1fc]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r1, [sp, #0x1c4]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	movs r3, #0x44
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x38
	ldr r1, [sp, #0x1fc]
	movs r3, #0x80
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080604EC
	cmp r1, #0
	beq _080604D8
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080604D8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r0, #0x44
	lsls r0, r0, #0x10
	str r0, [sp, #0x1e4]
	b _080605B6
	.align 2, 0
_080604E8: .4byte 0x080FB830
_080604EC:
	str r1, [sp, #0x294]
	movs r0, #1
	str r0, [sp, #0x84]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x80]
	add r1, sp, #0x84
	add r0, sp, #0x80
	cmp r4, #1
	bhs _08060504
	adds r0, r1, #0
_08060504:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08060522
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08060526
	mov r0, r8
	bl func_080D3BC0
	b _08060526
_08060522:
	movs r0, #0
	mov r8, r0
_08060526:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	movs r4, #0x44
	lsls r4, r4, #0x10
	str r4, [sp, #0x1e4]
	ldr r5, [sp, #0x294]
	cmp r2, r5
	beq _08060554
_0806053A:
	cmp r3, #0
	beq _0806054A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806054A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x294]
	cmp r2, r7
	bne _0806053A
_08060554:
	adds r5, r3, #0
	ldr r0, [sp, #0x84]
	cmp r0, #1
	bne _08060570
	cmp r5, #0
	beq _0806056C
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806056C:
	adds r5, #0x10
	b _08060592
_08060570:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060590
_08060578:
	cmp r2, #0
	beq _08060588
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060588:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08060578
_08060590:
	adds r5, r2, #0
_08060592:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080605A2
_0806059C:
	adds r1, #0x10
	cmp r1, r2
	bne _0806059C
_080605A2:
	cmp r0, #0
	beq _080605AA
	bl free
_080605AA:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080605B6:
	ldr r2, _08060618 @ =0x080FB830
	movs r0, #2
	add r1, sp, #0x88
	strh r0, [r1]
	ldr r3, [sp, #0x23c]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x200]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r4, [sp, #0x1c4]
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	movs r5, #0x48
	lsls r2, r5, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x38
	ldr r1, [sp, #0x200]
	movs r3, #0x80
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806061C
	cmp r1, #0
	beq _08060608
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060608:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r4, #0x48
	lsls r4, r4, #0x10
	str r4, [sp, #0x1e8]
	b _080606E6
	.align 2, 0
_08060618: .4byte 0x080FB830
_0806061C:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0x90
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x294]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x8c
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08060638
	adds r0, r1, #0
_08060638:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08060656
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806065A
	mov r0, r8
	bl func_080D3BC0
	b _0806065A
_08060656:
	movs r0, #0
	mov r8, r0
_0806065A:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	movs r7, #0x48
	lsls r7, r7, #0x10
	str r7, [sp, #0x1e8]
	b _0806067E
_0806066A:
	cmp r3, #0
	beq _0806067A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806067A:
	adds r2, #0x10
	adds r3, #0x10
_0806067E:
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _0806066A
	adds r5, r3, #0
	ldr r1, [sp, #0x90]
	cmp r1, #1
	bne _080606A0
	cmp r5, #0
	beq _0806069C
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806069C:
	adds r5, #0x10
	b _080606C2
_080606A0:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080606C0
_080606A8:
	cmp r2, #0
	beq _080606B8
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080606B8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080606A8
_080606C0:
	adds r5, r2, #0
_080606C2:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080606D2
_080606CC:
	adds r1, #0x10
	cmp r1, r2
	bne _080606CC
_080606D2:
	cmp r0, #0
	beq _080606DA
	bl free
_080606DA:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080606E6:
	ldr r2, _08060748 @ =0x080FB830
	movs r0, #2
	add r1, sp, #0x94
	strh r0, [r1]
	ldr r3, [sp, #0x240]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x204]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r4, [sp, #0x1c4]
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	movs r5, #0x4c
	lsls r2, r5, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x38
	ldr r1, [sp, #0x204]
	movs r3, #0x80
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806074C
	cmp r1, #0
	beq _08060738
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060738:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r4, #0x4c
	lsls r4, r4, #0x10
	str r4, [sp, #0x1ec]
	b _08060816
	.align 2, 0
_08060748: .4byte 0x080FB830
_0806074C:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0x9c
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x294]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x98
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08060768
	adds r0, r1, #0
_08060768:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08060786
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806078A
	mov r0, r8
	bl func_080D3BC0
	b _0806078A
_08060786:
	movs r0, #0
	mov r8, r0
_0806078A:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	movs r7, #0x4c
	lsls r7, r7, #0x10
	str r7, [sp, #0x1ec]
	b _080607AE
_0806079A:
	cmp r3, #0
	beq _080607AA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080607AA:
	adds r2, #0x10
	adds r3, #0x10
_080607AE:
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _0806079A
	adds r5, r3, #0
	ldr r1, [sp, #0x9c]
	cmp r1, #1
	bne _080607D0
	cmp r5, #0
	beq _080607CC
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080607CC:
	adds r5, #0x10
	b _080607F2
_080607D0:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080607F0
_080607D8:
	cmp r2, #0
	beq _080607E8
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080607E8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080607D8
_080607F0:
	adds r5, r2, #0
_080607F2:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060802
_080607FC:
	adds r1, #0x10
	cmp r1, r2
	bne _080607FC
_08060802:
	cmp r0, #0
	beq _0806080A
	bl free
_0806080A:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060816:
	ldr r2, _08060878 @ =0x080FB834
	movs r0, #2
	add r1, sp, #0xa0
	strh r0, [r1]
	ldr r3, [sp, #0x244]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x208]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r4, [sp, #0x1c4]
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	movs r5, #0x50
	lsls r2, r5, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x38
	ldr r1, [sp, #0x208]
	movs r3, #0x80
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806087C
	cmp r1, #0
	beq _08060868
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060868:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r4, #0x50
	lsls r4, r4, #0x10
	str r4, [sp, #0x1f0]
	b _08060946
	.align 2, 0
_08060878: .4byte 0x080FB834
_0806087C:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xa8
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x294]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xa4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08060898
	adds r0, r1, #0
_08060898:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080608B6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080608BA
	mov r0, r8
	bl func_080D3BC0
	b _080608BA
_080608B6:
	movs r0, #0
	mov r8, r0
_080608BA:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	movs r7, #0x50
	lsls r7, r7, #0x10
	str r7, [sp, #0x1f0]
	b _080608DE
_080608CA:
	cmp r3, #0
	beq _080608DA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080608DA:
	adds r2, #0x10
	adds r3, #0x10
_080608DE:
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _080608CA
	adds r5, r3, #0
	ldr r1, [sp, #0xa8]
	cmp r1, #1
	bne _08060900
	cmp r5, #0
	beq _080608FC
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080608FC:
	adds r5, #0x10
	b _08060922
_08060900:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060920
_08060908:
	cmp r2, #0
	beq _08060918
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060918:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08060908
_08060920:
	adds r5, r2, #0
_08060922:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060932
_0806092C:
	adds r1, #0x10
	cmp r1, r2
	bne _0806092C
_08060932:
	cmp r0, #0
	beq _0806093A
	bl free
_0806093A:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060946:
	ldr r1, [sp, #0x1c4]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08060988 @ =0x0875196C
	movs r3, #0x54
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x38
	movs r3, #0x80
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806098C
	cmp r1, #0
	beq _0806097E
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806097E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08060A54
	.align 2, 0
_08060988: .4byte 0x0875196C
_0806098C:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xb0
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x294]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xac
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080609A8
	adds r0, r1, #0
_080609A8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080609C6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080609CA
	mov r0, r8
	bl func_080D3BC0
	b _080609CA
_080609C6:
	movs r0, #0
	mov r8, r0
_080609CA:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x294]
	cmp r2, r4
	beq _080609F2
_080609D8:
	cmp r3, #0
	beq _080609E8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080609E8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x294]
	cmp r2, r5
	bne _080609D8
_080609F2:
	adds r5, r3, #0
	ldr r1, [sp, #0xb0]
	cmp r1, #1
	bne _08060A0E
	cmp r5, #0
	beq _08060A0A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060A0A:
	adds r5, #0x10
	b _08060A30
_08060A0E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060A2E
_08060A16:
	cmp r2, #0
	beq _08060A26
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060A26:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08060A16
_08060A2E:
	adds r5, r2, #0
_08060A30:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060A40
_08060A3A:
	adds r1, #0x10
	cmp r1, r2
	bne _08060A3A
_08060A40:
	cmp r0, #0
	beq _08060A48
	bl free
_08060A48:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060A54:
	ldr r2, [sp, #0x1c4]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08060A8C @ =0x087519EC
	add r0, sp, #0x38
	ldr r2, _08060A90 @ =0x05000020
	movs r3, #0x20
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08060A94
	cmp r1, #0
	beq _08060A84
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08060A84:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08060B58
	.align 2, 0
_08060A8C: .4byte 0x087519EC
_08060A90: .4byte 0x05000020
_08060A94:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xb8
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x294]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xb4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08060AB0
	adds r0, r1, #0
_08060AB0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08060ACE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08060AD2
	mov r0, r8
	bl func_080D3BC0
	b _08060AD2
_08060ACE:
	movs r0, #0
	mov r8, r0
_08060AD2:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	b _08060AF0
_08060ADC:
	cmp r3, #0
	beq _08060AEC
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060AEC:
	adds r2, #0x10
	adds r3, #0x10
_08060AF0:
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _08060ADC
	adds r5, r3, #0
	ldr r1, [sp, #0xb8]
	cmp r1, #1
	bne _08060B12
	cmp r5, #0
	beq _08060B0E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08060B0E:
	adds r5, #0x10
	b _08060B34
_08060B12:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060B32
_08060B1A:
	cmp r2, #0
	beq _08060B2A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060B2A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08060B1A
_08060B32:
	adds r5, r2, #0
_08060B34:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060B44
_08060B3E:
	adds r1, #0x10
	cmp r1, r2
	bne _08060B3E
_08060B44:
	cmp r0, #0
	beq _08060B4C
	bl free
_08060B4C:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060B58:
	ldr r1, [sp, #0x1c4]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08060B98 @ =0x0875254C
	movs r3, #0x58
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x38
	movs r3, #0x20
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08060B9C
	cmp r1, #0
	beq _08060B90
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060B90:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08060C64
	.align 2, 0
_08060B98: .4byte 0x0875254C
_08060B9C:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xc0
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x294]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xbc
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08060BB8
	adds r0, r1, #0
_08060BB8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08060BD6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08060BDA
	mov r0, r8
	bl func_080D3BC0
	b _08060BDA
_08060BD6:
	movs r0, #0
	mov r8, r0
_08060BDA:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x294]
	cmp r2, r4
	beq _08060C02
_08060BE8:
	cmp r3, #0
	beq _08060BF8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060BF8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x294]
	cmp r2, r5
	bne _08060BE8
_08060C02:
	adds r5, r3, #0
	ldr r1, [sp, #0xc0]
	cmp r1, #1
	bne _08060C1E
	cmp r5, #0
	beq _08060C1A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060C1A:
	adds r5, #0x10
	b _08060C40
_08060C1E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060C3E
_08060C26:
	cmp r2, #0
	beq _08060C36
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060C36:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08060C26
_08060C3E:
	adds r5, r2, #0
_08060C40:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060C50
_08060C4A:
	adds r1, #0x10
	cmp r1, r2
	bne _08060C4A
_08060C50:
	cmp r0, #0
	beq _08060C58
	bl free
_08060C58:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060C64:
	ldr r2, [sp, #0x1c4]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08060C9C @ =0x087525CC
	add r0, sp, #0x38
	ldr r2, _08060CA0 @ =0x05000040
	movs r3, #0x20
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08060CA4
	cmp r1, #0
	beq _08060C94
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08060C94:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08060D68
	.align 2, 0
_08060C9C: .4byte 0x087525CC
_08060CA0: .4byte 0x05000040
_08060CA4:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xc8
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x294]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xc4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08060CC0
	adds r0, r1, #0
_08060CC0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08060CDE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08060CE2
	mov r0, r8
	bl func_080D3BC0
	b _08060CE2
_08060CDE:
	movs r0, #0
	mov r8, r0
_08060CE2:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	b _08060D00
_08060CEC:
	cmp r3, #0
	beq _08060CFC
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060CFC:
	adds r2, #0x10
	adds r3, #0x10
_08060D00:
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _08060CEC
	adds r5, r3, #0
	ldr r1, [sp, #0xc8]
	cmp r1, #1
	bne _08060D22
	cmp r5, #0
	beq _08060D1E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08060D1E:
	adds r5, #0x10
	b _08060D44
_08060D22:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060D42
_08060D2A:
	cmp r2, #0
	beq _08060D3A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060D3A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08060D2A
_08060D42:
	adds r5, r2, #0
_08060D44:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060D54
_08060D4E:
	adds r1, #0x10
	cmp r1, r2
	bne _08060D4E
_08060D54:
	cmp r0, #0
	beq _08060D5C
	bl free
_08060D5C:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060D68:
	ldr r1, [sp, #0x1c4]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08060DA8 @ =0x087530CC
	movs r3, #0x5c
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x38
	movs r3, #0x20
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08060DAC
	cmp r1, #0
	beq _08060DA0
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060DA0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08060E74
	.align 2, 0
_08060DA8: .4byte 0x087530CC
_08060DAC:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xd0
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x294]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xcc
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08060DC8
	adds r0, r1, #0
_08060DC8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08060DE6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08060DEA
	mov r0, r8
	bl func_080D3BC0
	b _08060DEA
_08060DE6:
	movs r0, #0
	mov r8, r0
_08060DEA:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x294]
	cmp r2, r4
	beq _08060E12
_08060DF8:
	cmp r3, #0
	beq _08060E08
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060E08:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x294]
	cmp r2, r5
	bne _08060DF8
_08060E12:
	adds r5, r3, #0
	ldr r1, [sp, #0xd0]
	cmp r1, #1
	bne _08060E2E
	cmp r5, #0
	beq _08060E2A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060E2A:
	adds r5, #0x10
	b _08060E50
_08060E2E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060E4E
_08060E36:
	cmp r2, #0
	beq _08060E46
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060E46:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08060E36
_08060E4E:
	adds r5, r2, #0
_08060E50:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060E60
_08060E5A:
	adds r1, #0x10
	cmp r1, r2
	bne _08060E5A
_08060E60:
	cmp r0, #0
	beq _08060E68
	bl free
_08060E68:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060E74:
	ldr r2, [sp, #0x1c4]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08060EAC @ =0x0875314C
	add r0, sp, #0x38
	ldr r2, _08060EB0 @ =0x05000060
	movs r3, #0x20
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08060EB4
	cmp r1, #0
	beq _08060EA4
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08060EA4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08060F78
	.align 2, 0
_08060EAC: .4byte 0x0875314C
_08060EB0: .4byte 0x05000060
_08060EB4:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xd8
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x294]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xd4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08060ED0
	adds r0, r1, #0
_08060ED0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08060EEE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08060EF2
	mov r0, r8
	bl func_080D3BC0
	b _08060EF2
_08060EEE:
	movs r0, #0
	mov r8, r0
_08060EF2:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	b _08060F10
_08060EFC:
	cmp r3, #0
	beq _08060F0C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060F0C:
	adds r2, #0x10
	adds r3, #0x10
_08060F10:
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _08060EFC
	adds r5, r3, #0
	ldr r1, [sp, #0xd8]
	cmp r1, #1
	bne _08060F32
	cmp r5, #0
	beq _08060F2E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08060F2E:
	adds r5, #0x10
	b _08060F54
_08060F32:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08060F52
_08060F3A:
	cmp r2, #0
	beq _08060F4A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060F4A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08060F3A
_08060F52:
	adds r5, r2, #0
_08060F54:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08060F64
_08060F5E:
	adds r1, #0x10
	cmp r1, r2
	bne _08060F5E
_08060F64:
	cmp r0, #0
	beq _08060F6C
	bl free
_08060F6C:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08060F78:
	ldr r1, [sp, #0x1c4]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08060FB8 @ =0x0875348C
	movs r3, #0x5d
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x38
	movs r3, #0x20
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08060FBC
	cmp r1, #0
	beq _08060FB0
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08060FB0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08061084
	.align 2, 0
_08060FB8: .4byte 0x0875348C
_08060FBC:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xe0
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x294]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xdc
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08060FD8
	adds r0, r1, #0
_08060FD8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08060FF6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08060FFA
	mov r0, r8
	bl func_080D3BC0
	b _08060FFA
_08060FF6:
	movs r0, #0
	mov r8, r0
_08060FFA:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x294]
	cmp r2, r4
	beq _08061022
_08061008:
	cmp r3, #0
	beq _08061018
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061018:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x294]
	cmp r2, r5
	bne _08061008
_08061022:
	adds r5, r3, #0
	ldr r1, [sp, #0xe0]
	cmp r1, #1
	bne _0806103E
	cmp r5, #0
	beq _0806103A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806103A:
	adds r5, #0x10
	b _08061060
_0806103E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806105E
_08061046:
	cmp r2, #0
	beq _08061056
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061056:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08061046
_0806105E:
	adds r5, r2, #0
_08061060:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08061070
_0806106A:
	adds r1, #0x10
	cmp r1, r2
	bne _0806106A
_08061070:
	cmp r0, #0
	beq _08061078
	bl free
_08061078:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08061084:
	ldr r2, [sp, #0x1c4]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _080610BC @ =0x0875350C
	add r0, sp, #0x38
	ldr r2, _080610C0 @ =0x05000080
	movs r3, #0x20
	bl func_08008F0C
	mov sb, sl
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080610C4
	cmp r1, #0
	beq _080610B4
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080610B4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08061188
	.align 2, 0
_080610BC: .4byte 0x0875350C
_080610C0: .4byte 0x05000080
_080610C4:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xe8
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x294]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xe4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080610E0
	adds r0, r1, #0
_080610E0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080610FE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08061102
	mov r0, r8
	bl func_080D3BC0
	b _08061102
_080610FE:
	movs r0, #0
	mov r8, r0
_08061102:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	b _08061120
_0806110C:
	cmp r3, #0
	beq _0806111C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806111C:
	adds r2, #0x10
	adds r3, #0x10
_08061120:
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _0806110C
	adds r5, r3, #0
	ldr r1, [sp, #0xe8]
	cmp r1, #1
	bne _08061142
	cmp r5, #0
	beq _0806113E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806113E:
	adds r5, #0x10
	b _08061164
_08061142:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08061162
_0806114A:
	cmp r2, #0
	beq _0806115A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806115A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806114A
_08061162:
	adds r5, r2, #0
_08061164:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08061174
_0806116E:
	adds r1, #0x10
	cmp r1, r2
	bne _0806116E
_08061174:
	cmp r0, #0
	beq _0806117C
	bl free
_0806117C:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08061188:
	movs r0, #4
	str r0, [sp, #0x1d0]
	movs r0, #0x20
	movs r1, #0
	mov r2, sl
	strh r0, [r2]
	str r1, [r2, #4]
	ldr r0, _080611C8 @ =0x08752F8C
	str r0, [r2, #8]
	ldr r0, _080611CC @ =0x0875300C
	str r0, [r2, #0xc]
	ldr r3, [sp, #0x1c4]
	ldr r4, _080611D0 @ =0x00000594
	adds r6, r3, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080611D4
	cmp r1, #0
	beq _080611BC
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_080611BC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r3, #7
	str r3, [sp, #0x210]
	b _080612AC
	.align 2, 0
_080611C8: .4byte 0x08752F8C
_080611CC: .4byte 0x0875300C
_080611D0: .4byte 0x00000594
_080611D4:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xf0
	str r0, [r1]
	ldr r3, [r6]
	ldr r4, [sp, #0x294]
	subs r0, r4, r3
	asrs r4, r0, #4
	add r0, sp, #0xec
	str r4, [r0]
	ldr r2, [r1]
	mov sb, r1
	adds r1, r3, #0
	cmp r4, r2
	bhs _080611F4
	mov r0, sb
_080611F4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08061214
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08061210
	mov r0, r8
	bl func_080D3BC0
_08061210:
	ldr r1, [r6]
	b _08061218
_08061214:
	movs r0, #0
	mov r8, r0
_08061218:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r3, r1, #0
	adds r2, r5, #0
	ldr r5, [sp, #0x1d0]
	adds r5, #3
	str r5, [sp, #0x210]
	ldr r7, [sp, #0x294]
	cmp r3, r7
	beq _08061246
_0806122C:
	cmp r2, #0
	beq _0806123C
	adds r0, r2, #0
	adds r1, r3, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806123C:
	adds r3, #0x10
	adds r2, #0x10
	ldr r0, [sp, #0x294]
	cmp r3, r0
	bne _0806122C
_08061246:
	adds r5, r2, #0
	mov r2, sb
	ldr r1, [r2]
	cmp r1, #1
	bne _08061264
	cmp r5, #0
	beq _08061260
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08061260:
	adds r5, #0x10
	b _08061286
_08061264:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08061284
_0806126C:
	cmp r2, #0
	beq _0806127C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_0806127C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806126C
_08061284:
	adds r5, r2, #0
_08061286:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08061296
_08061290:
	adds r0, #0x10
	cmp r0, r2
	bne _08061290
_08061296:
	cmp r1, #0
	beq _080612A0
	adds r0, r1, #0
	bl free
_080612A0:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080612AC:
	ldr r2, [sp, #0x1c4]
	ldr r3, _08061334 @ =0x0000058C
	adds r0, r2, r3
	ldr r0, [r0]
	ldr r4, _08061338 @ =0x00001AA8
	adds r0, r0, r4
	ldr r0, [r0]
	ldr r5, [sp, #0x1cc]
	ldr r1, [r5, #0x18]
	ldr r7, [sp, #0x1d0]
	lsls r4, r7, #6
	adds r1, r1, r4
	adds r1, #0x2c
	movs r2, #0x90
	lsls r2, r2, #1
	movs r5, #0x20
	str r5, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0x1cc]
	ldr r0, [r1, #0x18]
	adds r0, r0, r4
	adds r0, #0x2e
	ldr r2, [sp, #0x1f0]
	lsrs r1, r2, #0x10
	movs r4, #0
	str r4, [sp]
	str r5, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x210]
	str r3, [sp, #0x1d0]
	lsls r0, r3, #3
	mov r5, sl
	strh r0, [r5]
	str r4, [r5, #4]
	ldr r0, _0806133C @ =0x087518CC
	str r0, [r5, #8]
	ldr r0, _08061340 @ =0x0875194C
	str r0, [r5, #0xc]
	ldr r7, [sp, #0x1c4]
	ldr r0, _08061344 @ =0x00000594
	adds r6, r7, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08061348
	cmp r1, #0
	beq _08061320
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08061320:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r5, [sp, #0x1d0]
	lsls r5, r5, #6
	str r5, [sp, #0x220]
	ldr r7, [sp, #0x1d0]
	adds r7, #4
	str r7, [sp, #0x214]
	b _08061426
	.align 2, 0
_08061334: .4byte 0x0000058C
_08061338: .4byte 0x00001AA8
_0806133C: .4byte 0x087518CC
_08061340: .4byte 0x0875194C
_08061344: .4byte 0x00000594
_08061348:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0xf8
	str r0, [r1]
	ldr r3, [r6]
	ldr r2, [sp, #0x294]
	subs r0, r2, r3
	asrs r4, r0, #4
	add r0, sp, #0xf4
	str r4, [r0]
	ldr r2, [r1]
	mov sb, r1
	adds r1, r3, #0
	cmp r4, r2
	bhs _08061368
	mov r0, sb
_08061368:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08061388
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08061384
	mov r0, r8
	bl func_080D3BC0
_08061384:
	ldr r1, [r6]
	b _0806138C
_08061388:
	movs r0, #0
	mov r8, r0
_0806138C:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r3, r1, #0
	adds r2, r5, #0
	ldr r4, [sp, #0x1d0]
	lsls r4, r4, #6
	str r4, [sp, #0x220]
	ldr r5, [sp, #0x1d0]
	adds r5, #4
	str r5, [sp, #0x214]
	ldr r7, [sp, #0x294]
	cmp r3, r7
	beq _080613C0
_080613A6:
	cmp r2, #0
	beq _080613B6
	adds r0, r2, #0
	adds r1, r3, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080613B6:
	adds r3, #0x10
	adds r2, #0x10
	ldr r0, [sp, #0x294]
	cmp r3, r0
	bne _080613A6
_080613C0:
	adds r5, r2, #0
	mov r2, sb
	ldr r1, [r2]
	cmp r1, #1
	bne _080613DE
	cmp r5, #0
	beq _080613DA
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_080613DA:
	adds r5, #0x10
	b _08061400
_080613DE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080613FE
_080613E6:
	cmp r2, #0
	beq _080613F6
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_080613F6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080613E6
_080613FE:
	adds r5, r2, #0
_08061400:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08061410
_0806140A:
	adds r0, #0x10
	cmp r0, r2
	bne _0806140A
_08061410:
	cmp r1, #0
	beq _0806141A
	adds r0, r1, #0
	bl free
_0806141A:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08061426:
	movs r4, #0xc
	movs r5, #2
	add r0, sp, #0xfc
	strh r4, [r0]
	ldr r2, [sp, #0x248]
	strh r5, [r2, #2]
	ldr r0, [r0]
	ldr r1, [sp, #0x20c]
	movs r2, #0
	bl func_0804E7A0
	ldr r3, [sp, #0x1c4]
	ldr r7, _080614A0 @ =0x0000058C
	adds r0, r3, r7
	ldr r0, [r0]
	ldr r1, _080614A4 @ =0x00001BD8
	adds r0, r0, r1
	bl func_0800E4E0
	adds r1, r0, #0
	add r0, sp, #0x100
	strh r4, [r0]
	ldr r2, [sp, #0x24c]
	strh r5, [r2, #2]
	ldr r0, [r0]
	str r1, [sp]
	ldr r1, [sp, #0x20c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r3, [sp, #0x1c4]
	ldr r0, [r3]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #0x48
	ldr r1, [sp, #0x20c]
	ldr r2, _080614A8 @ =0x06003000
	bl func_08008F0C
	ldr r4, [sp, #0x228]
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080614AC
	cmp r1, #0
	beq _08061498
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061498:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08061578
	.align 2, 0
_080614A0: .4byte 0x0000058C
_080614A4: .4byte 0x00001BD8
_080614A8: .4byte 0x06003000
_080614AC:
	str r1, [sp, #0x294]
	movs r0, #1
	add r2, sp, #0x108
	str r0, [r2]
	ldr r0, [r6]
	ldr r3, [sp, #0x294]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r1, sp, #0x104
	str r4, [r1]
	adds r3, r2, #0
	ldr r0, [r2]
	cmp r4, r0
	bhs _080614CA
	adds r1, r3, #0
_080614CA:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080614E8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080614EC
	mov r0, r8
	bl func_080D3BC0
	b _080614EC
_080614E8:
	movs r0, #0
	mov r8, r0
_080614EC:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x294]
	cmp r2, r4
	beq _08061514
_080614FA:
	cmp r3, #0
	beq _0806150A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806150A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x294]
	cmp r2, r5
	bne _080614FA
_08061514:
	adds r5, r3, #0
	add r0, sp, #0x108
	ldr r0, [r0]
	cmp r0, #1
	bne _08061532
	cmp r5, #0
	beq _0806152E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806152E:
	adds r5, #0x10
	b _08061554
_08061532:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08061552
_0806153A:
	cmp r2, #0
	beq _0806154A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806154A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806153A
_08061552:
	adds r5, r2, #0
_08061554:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08061564
_0806155E:
	adds r1, #0x10
	cmp r1, r2
	bne _0806155E
_08061564:
	cmp r0, #0
	beq _0806156C
	bl free
_0806156C:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08061578:
	ldr r2, [sp, #0x1cc]
	ldr r0, [r2, #0x18]
	ldr r3, [sp, #0x220]
	adds r0, r0, r3
	adds r0, #4
	movs r1, #0xc0
	lsls r1, r1, #1
	movs r2, #0
	str r2, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	ldr r5, [sp, #0x1c4]
	ldr r7, _08061658 @ =0x0000058C
	adds r4, r5, r7
	ldr r0, [r4]
	ldr r5, _0806165C @ =0x00001BD8
	adds r0, r0, r5
	bl func_0800E53C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080615CA
	ldr r1, [sp, #0x1d0]
	adds r1, #2
	ldr r2, [sp, #0x1cc]
	ldr r0, [r2, #0x18]
	lsls r1, r1, #6
	adds r0, r0, r1
	adds r0, #4
	movs r1, #0x5d
	movs r2, #4
	str r2, [sp]
	str r6, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
_080615CA:
	ldr r0, [r4]
	adds r0, r0, r5
	bl func_0800E530
	adds r6, r0, #0
	movs r4, #0
	cmp r4, r6
	bhs _0806160A
	ldr r0, [sp, #0x1d0]
	adds r0, #2
	lsls r0, r0, #6
	mov r8, r0
	movs r5, #8
	movs r3, #0x5c
	lsls r7, r3, #0x10
_080615E8:
	ldr r1, [sp, #0x1cc]
	ldr r0, [r1, #0x18]
	add r0, r8
	adds r0, r0, r5
	movs r1, #3
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r7, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r4, #1
	cmp r4, r6
	blo _080615E8
_0806160A:
	ldr r2, [sp, #0x214]
	str r2, [sp, #0x1d0]
	ldr r3, [sp, #0x1c4]
	ldr r5, _08061658 @ =0x0000058C
	adds r4, r3, r5
	ldr r0, [r4]
	ldr r7, _08061660 @ =0x00001CD4
	adds r0, r0, r7
	bl func_080A0504
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08061628
	bl sub_08061E00
_08061628:
	ldr r0, [r4]
	adds r1, r7, #0
	adds r0, r0, r1
	bl func_080A0490
	str r0, [sp, #0x1d4]
	ldr r0, [r4]
	adds r2, r7, #0
	adds r0, r0, r2
	ldr r1, [sp, #0x1d4]
	bl func_080A01F8
	str r0, [sp, #0x1d8]
	ldr r0, [sp, #0x1d4]
	subs r0, #3
	cmp r0, #0x1c
	bls _0806164C
	b _08061754
_0806164C:
	lsls r0, r0, #2
	ldr r1, _08061664 @ =_08061668
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08061658: .4byte 0x0000058C
_0806165C: .4byte 0x00001BD8
_08061660: .4byte 0x00001CD4
_08061664: .4byte _08061668
_08061668: @ jump table
	.4byte _080616DC @ case 0
	.4byte _08061754 @ case 1
	.4byte _08061754 @ case 2
	.4byte _08061754 @ case 3
	.4byte _08061754 @ case 4
	.4byte _08061754 @ case 5
	.4byte _08061754 @ case 6
	.4byte _08061754 @ case 7
	.4byte _08061754 @ case 8
	.4byte _080616F0 @ case 9
	.4byte _08061754 @ case 10
	.4byte _08061754 @ case 11
	.4byte _08061754 @ case 12
	.4byte _08061754 @ case 13
	.4byte _08061754 @ case 14
	.4byte _08061754 @ case 15
	.4byte _08061704 @ case 16
	.4byte _08061754 @ case 17
	.4byte _0806172C @ case 18
	.4byte _08061754 @ case 19
	.4byte _08061754 @ case 20
	.4byte _08061754 @ case 21
	.4byte _08061718 @ case 22
	.4byte _08061754 @ case 23
	.4byte _08061754 @ case 24
	.4byte _08061754 @ case 25
	.4byte _08061754 @ case 26
	.4byte _08061754 @ case 27
	.4byte _08061740 @ case 28
_080616DC:
	ldr r0, _080616E8 @ =0x08751A0C
	mov r3, sl
	str r0, [r3, #8]
	ldr r0, _080616EC @ =0x08751A8C
	str r0, [r3, #0xc]
	b _08061758
	.align 2, 0
_080616E8: .4byte 0x08751A0C
_080616EC: .4byte 0x08751A8C
_080616F0:
	ldr r0, _080616FC @ =0x08752E4C
	mov r4, sl
	str r0, [r4, #8]
	ldr r0, _08061700 @ =0x08752ECC
	str r0, [r4, #0xc]
	b _08061758
	.align 2, 0
_080616FC: .4byte 0x08752E4C
_08061700: .4byte 0x08752ECC
_08061704:
	ldr r0, _08061710 @ =0x087524AC
	mov r5, sl
	str r0, [r5, #8]
	ldr r0, _08061714 @ =0x0875252C
	str r0, [r5, #0xc]
	b _08061758
	.align 2, 0
_08061710: .4byte 0x087524AC
_08061714: .4byte 0x0875252C
_08061718:
	ldr r0, _08061724 @ =0x0875286C
	mov r7, sl
	str r0, [r7, #8]
	ldr r0, _08061728 @ =0x087528EC
	str r0, [r7, #0xc]
	b _08061758
	.align 2, 0
_08061724: .4byte 0x0875286C
_08061728: .4byte 0x087528EC
_0806172C:
	ldr r0, _08061738 @ =0x0875302C
	mov r1, sl
	str r0, [r1, #8]
	ldr r0, _0806173C @ =0x087530AC
	str r0, [r1, #0xc]
	b _08061758
	.align 2, 0
_08061738: .4byte 0x0875302C
_0806173C: .4byte 0x087530AC
_08061740:
	ldr r0, _0806174C @ =0x0875240C
	mov r2, sl
	str r0, [r2, #8]
	ldr r0, _08061750 @ =0x0875248C
	str r0, [r2, #0xc]
	b _08061758
	.align 2, 0
_0806174C: .4byte 0x0875240C
_08061750: .4byte 0x0875248C
_08061754:
	movs r3, #0
	str r3, [sp, #0x1d8]
_08061758:
	ldr r4, [sp, #0x1d0]
	adds r4, #5
	str r4, [sp, #0x218]
	ldr r5, [sp, #0x1d8]
	cmp r5, #0
	bne _08061766
	b _08061AA4
_08061766:
	ldr r7, [sp, #0x1d0]
	lsls r0, r7, #3
	movs r1, #0
	mov r2, sl
	strh r0, [r2]
	str r1, [r2, #4]
	ldr r3, [sp, #0x1c4]
	ldr r4, _080617C8 @ =0x00000594
	adds r6, r3, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080617D0
	cmp r1, #0
	beq _08061790
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08061790:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r3, [sp, #0x1d0]
	lsls r3, r3, #6
	str r3, [sp, #0x220]
	movs r4, #0x8a
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x250]
	ldr r5, [sp, #0x1c4]
	ldr r7, _080617CC @ =0x00000C5C
	adds r5, r5, r7
	mov sb, r5
	movs r0, #0x8c
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x254]
	movs r1, #0x92
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x258]
	movs r2, #0x94
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x25c]
	b _080618D8
	.align 2, 0
_080617C8: .4byte 0x00000594
_080617CC: .4byte 0x00000C5C
_080617D0:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0x110
	str r0, [r1]
	ldr r2, [r6]
	ldr r3, [sp, #0x294]
	subs r0, r3, r2
	asrs r4, r0, #4
	add r0, sp, #0x10c
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x10c
	adds r1, r2, #0
	cmp r4, r0
	bhs _080617F2
	adds r3, r5, #0
_080617F2:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _08061812
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806180E
	mov r0, r8
	bl func_080D3BC0
_0806180E:
	ldr r1, [r6]
	b _08061816
_08061812:
	movs r0, #0
	mov r8, r0
_08061816:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0x1d0]
	lsls r4, r4, #6
	str r4, [sp, #0x220]
	movs r5, #0x8a
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x250]
	ldr r7, [sp, #0x1c4]
	ldr r0, _08061854 @ =0x00000C5C
	adds r7, r7, r0
	mov sb, r7
	movs r1, #0x8c
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x254]
	movs r4, #0x92
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x258]
	movs r5, #0x94
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x25c]
	ldr r7, [sp, #0x1d0]
	adds r7, #5
	str r7, [sp, #0x218]
	b _0806186C
	.align 2, 0
_08061854: .4byte 0x00000C5C
_08061858:
	cmp r3, #0
	beq _08061868
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061868:
	adds r2, #0x10
	adds r3, #0x10
_0806186C:
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _08061858
	adds r5, r3, #0
	add r0, sp, #0x110
	ldr r0, [r0]
	cmp r0, #1
	bne _08061890
	cmp r5, #0
	beq _0806188C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_0806188C:
	adds r5, #0x10
	b _080618B2
_08061890:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080618B0
_08061898:
	cmp r2, #0
	beq _080618A8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_080618A8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08061898
_080618B0:
	adds r5, r2, #0
_080618B2:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _080618C2
_080618BC:
	adds r0, #0x10
	cmp r0, r3
	bne _080618BC
_080618C2:
	cmp r1, #0
	beq _080618CC
	adds r0, r1, #0
	bl free
_080618CC:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080618D8:
	movs r4, #0xc
	movs r5, #2
	add r0, sp, #0x114
	strh r4, [r0]
	ldr r1, [sp, #0x250]
	strh r5, [r1, #2]
	ldr r0, [r0]
	mov r1, sb
	movs r2, #0
	bl func_0804E7A0
	ldr r2, [sp, #0x1c4]
	ldr r3, _08061954 @ =0x0000058C
	adds r0, r2, r3
	ldr r0, [r0]
	ldr r7, _08061958 @ =0x00001CD4
	adds r0, r0, r7
	ldr r1, [sp, #0x1d4]
	bl func_0809FE3C
	adds r1, r0, #0
	add r0, sp, #0x118
	strh r4, [r0]
	ldr r2, [sp, #0x254]
	strh r5, [r2, #2]
	ldr r0, [r0]
	str r1, [sp]
	mov r1, sb
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r3, [sp, #0x1c4]
	ldr r0, [r3]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #0x48
	mov r1, sb
	ldr r2, _0806195C @ =0x06003300
	bl func_08008F0C
	ldr r4, [sp, #0x228]
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08061960
	cmp r1, #0
	beq _0806194C
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806194C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08061A2E
	.align 2, 0
_08061954: .4byte 0x0000058C
_08061958: .4byte 0x00001CD4
_0806195C: .4byte 0x06003300
_08061960:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0x120
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0x294]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x11c
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x11c
	cmp r4, r0
	bhs _08061980
	adds r1, r2, #0
_08061980:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806199E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080619A2
	mov r0, r8
	bl func_080D3BC0
	b _080619A2
_0806199E:
	movs r0, #0
	mov r8, r0
_080619A2:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x294]
	cmp r2, r4
	beq _080619CA
_080619B0:
	cmp r3, #0
	beq _080619C0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080619C0:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x294]
	cmp r2, r5
	bne _080619B0
_080619CA:
	adds r5, r3, #0
	add r0, sp, #0x120
	ldr r0, [r0]
	cmp r0, #1
	bne _080619E8
	cmp r5, #0
	beq _080619E4
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080619E4:
	adds r5, #0x10
	b _08061A0A
_080619E8:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08061A08
_080619F0:
	cmp r2, #0
	beq _08061A00
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061A00:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080619F0
_08061A08:
	adds r5, r2, #0
_08061A0A:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08061A1A
_08061A14:
	adds r1, #0x10
	cmp r1, r2
	bne _08061A14
_08061A1A:
	cmp r0, #0
	beq _08061A22
	bl free
_08061A22:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08061A2E:
	ldr r2, [sp, #0x1cc]
	ldr r0, [r2, #0x18]
	ldr r3, [sp, #0x220]
	adds r0, r0, r3
	adds r0, #4
	movs r1, #0xcc
	lsls r1, r1, #1
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	movs r0, #0xa
	add r4, sp, #0x124
	str r0, [r4]
	ldr r0, [sp, #0x1d8]
	bl GetLove__C12Bachelorette
	ldr r1, _08061B28 @ =0x00001999
	bl func_080D0EDA
	add r1, sp, #0x128
	str r0, [r1]
	ldr r1, [r4]
	ldr r2, [sp, #0x258]
	cmp r1, r0
	bls _08061A6C
	ldr r2, [sp, #0x25c]
_08061A6C:
	ldr r6, [r2]
	movs r4, #0
	cmp r4, r6
	bhs _08061AA4
	ldr r0, [sp, #0x1d0]
	adds r0, #2
	lsls r0, r0, #6
	mov r8, r0
	movs r5, #8
	movs r0, #0x58
	lsls r7, r0, #0x10
_08061A82:
	ldr r1, [sp, #0x1cc]
	ldr r0, [r1, #0x18]
	add r0, r8
	adds r0, r0, r5
	movs r1, #2
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r7, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r4, #1
	cmp r4, r6
	blo _08061A82
_08061AA4:
	ldr r2, [sp, #0x1c4]
	ldr r3, _08061B2C @ =0x0000058C
	adds r0, r2, r3
	ldr r0, [r0]
	ldr r4, _08061B30 @ =0x00001CD4
	adds r0, r0, r4
	bl func_080A0384
	str r0, [sp, #0x1dc]
	cmp r0, #0
	bne _08061ABC
	b _08061DFC
_08061ABC:
	ldr r5, [sp, #0x1d0]
	lsls r0, r5, #3
	mov r7, sl
	strh r0, [r7]
	movs r0, #0x78
	str r0, [r7, #4]
	ldr r0, _08061B34 @ =0x08751AAC
	str r0, [r7, #8]
	ldr r0, _08061B38 @ =0x08751B2C
	str r0, [r7, #0xc]
	ldr r0, [sp, #0x1c4]
	ldr r1, _08061B3C @ =0x00000594
	adds r6, r0, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08061B40
	cmp r1, #0
	beq _08061AEE
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08061AEE:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r5, [sp, #0x1d0]
	lsls r5, r5, #6
	str r5, [sp, #0x220]
	movs r7, #0x9a
	lsls r7, r7, #1
	add r7, sp
	str r7, [sp, #0x264]
	ldr r0, [sp, #0x1c4]
	movs r1, #0xf6
	lsls r1, r1, #4
	adds r0, r0, r1
	mov sb, r0
	movs r2, #0x9c
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x268]
	movs r3, #0xa2
	lsls r3, r3, #1
	add r3, sp
	str r3, [sp, #0x26c]
	movs r4, #0xa4
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x270]
	b _08061C44
	.align 2, 0
_08061B28: .4byte 0x00001999
_08061B2C: .4byte 0x0000058C
_08061B30: .4byte 0x00001CD4
_08061B34: .4byte 0x08751AAC
_08061B38: .4byte 0x08751B2C
_08061B3C: .4byte 0x00000594
_08061B40:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0x130
	str r0, [r1]
	ldr r2, [r6]
	ldr r5, [sp, #0x294]
	subs r0, r5, r2
	asrs r4, r0, #4
	add r0, sp, #0x12c
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x12c
	adds r1, r2, #0
	cmp r4, r0
	bhs _08061B62
	adds r3, r5, #0
_08061B62:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _08061B82
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08061B7E
	mov r0, r8
	bl func_080D3BC0
_08061B7E:
	ldr r1, [r6]
	b _08061B86
_08061B82:
	movs r0, #0
	mov r8, r0
_08061B86:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r7, [sp, #0x1d0]
	lsls r7, r7, #6
	str r7, [sp, #0x220]
	movs r0, #0x9a
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x264]
	ldr r1, [sp, #0x1c4]
	movs r4, #0xf6
	lsls r4, r4, #4
	adds r1, r1, r4
	mov sb, r1
	movs r5, #0x9c
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x268]
	movs r7, #0xa2
	lsls r7, r7, #1
	add r7, sp
	str r7, [sp, #0x26c]
	movs r0, #0xa4
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x270]
	ldr r1, [sp, #0x294]
	cmp r2, r1
	beq _08061BDE
_08061BC4:
	cmp r3, #0
	beq _08061BD4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061BD4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _08061BC4
_08061BDE:
	adds r5, r3, #0
	add r0, sp, #0x130
	ldr r0, [r0]
	cmp r0, #1
	bne _08061BFC
	cmp r5, #0
	beq _08061BF8
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08061BF8:
	adds r5, #0x10
	b _08061C1E
_08061BFC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08061C1C
_08061C04:
	cmp r2, #0
	beq _08061C14
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08061C14:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08061C04
_08061C1C:
	adds r5, r2, #0
_08061C1E:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _08061C2E
_08061C28:
	adds r0, #0x10
	cmp r0, r3
	bne _08061C28
_08061C2E:
	cmp r1, #0
	beq _08061C38
	adds r0, r1, #0
	bl free
_08061C38:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08061C44:
	movs r4, #0xc
	movs r5, #2
	add r0, sp, #0x134
	strh r4, [r0]
	ldr r1, [sp, #0x264]
	strh r5, [r1, #2]
	ldr r0, [r0]
	mov r1, sb
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [sp, #0x1dc]
	bl func_0809EACC
	adds r1, r0, #0
	add r0, sp, #0x138
	strh r4, [r0]
	ldr r2, [sp, #0x268]
	strh r5, [r2, #2]
	ldr r0, [r0]
	str r1, [sp]
	mov r1, sb
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r3, [sp, #0x1c4]
	ldr r0, [r3]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #0x48
	mov r1, sb
	ldr r2, _08061CB4 @ =0x06003600
	bl func_08008F0C
	ldr r4, [sp, #0x228]
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08061CB8
	cmp r1, #0
	beq _08061CAC
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061CAC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08061D86
	.align 2, 0
_08061CB4: .4byte 0x06003600
_08061CB8:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0x140
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0x294]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x13c
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x13c
	cmp r4, r0
	bhs _08061CD8
	adds r1, r2, #0
_08061CD8:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08061CF6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08061CFA
	mov r0, r8
	bl func_080D3BC0
	b _08061CFA
_08061CF6:
	movs r0, #0
	mov r8, r0
_08061CFA:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x294]
	cmp r2, r4
	beq _08061D22
_08061D08:
	cmp r3, #0
	beq _08061D18
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061D18:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x294]
	cmp r2, r5
	bne _08061D08
_08061D22:
	adds r5, r3, #0
	add r0, sp, #0x140
	ldr r0, [r0]
	cmp r0, #1
	bne _08061D40
	cmp r5, #0
	beq _08061D3C
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061D3C:
	adds r5, #0x10
	b _08061D62
_08061D40:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08061D60
_08061D48:
	cmp r2, #0
	beq _08061D58
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061D58:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08061D48
_08061D60:
	adds r5, r2, #0
_08061D62:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08061D72
_08061D6C:
	adds r1, #0x10
	cmp r1, r2
	bne _08061D6C
_08061D72:
	cmp r0, #0
	beq _08061D7A
	bl free
_08061D7A:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08061D86:
	ldr r2, [sp, #0x1cc]
	ldr r0, [r2, #0x18]
	ldr r3, [sp, #0x220]
	adds r0, r0, r3
	adds r0, #0x22
	movs r1, #0xd8
	lsls r1, r1, #1
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	movs r0, #0xa
	add r4, sp, #0x144
	str r0, [r4]
	ldr r0, [sp, #0x1dc]
	bl GetFriendship__C3Npc
	movs r1, #0x19
	bl func_080D0EDA
	add r1, sp, #0x148
	str r0, [r1]
	ldr r1, [r4]
	ldr r2, [sp, #0x26c]
	cmp r1, r0
	bls _08061DC4
	ldr r2, [sp, #0x270]
_08061DC4:
	ldr r6, [r2]
	movs r4, #0
	cmp r4, r6
	bhs _08061DFC
	ldr r0, [sp, #0x1d0]
	adds r0, #2
	lsls r0, r0, #6
	mov r8, r0
	movs r5, #0x26
	movs r0, #0x58
	lsls r7, r0, #0x10
_08061DDA:
	ldr r1, [sp, #0x1cc]
	ldr r0, [r1, #0x18]
	add r0, r8
	adds r0, r0, r5
	movs r1, #2
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r7, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r4, #1
	cmp r4, r6
	blo _08061DDA
_08061DFC:
	ldr r2, [sp, #0x218]
	str r2, [sp, #0x1d0]

	thumb_func_start sub_08061E00
sub_08061E00: @ 0x08061E00
	ldr r3, [sp, #0x1d0]
	lsls r1, r3, #3
	movs r0, #0
	mov r4, sl
	strh r1, [r4]
	str r0, [r4, #4]
	ldr r0, _08061E48 @ =0x08751E6C
	str r0, [r4, #8]
	ldr r0, _08061E4C @ =0x08751EEC
	str r0, [r4, #0xc]
	ldr r5, [sp, #0x1c4]
	ldr r7, _08061E50 @ =0x00000594
	adds r6, r5, r7
	ldr r2, [r6, #4]
	ldr r0, [r6, #0xc]
	str r1, [sp, #0x21c]
	cmp r2, r0
	beq _08061E54
	cmp r2, #0
	beq _08061E34
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08061E34:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r5, [sp, #0x1d0]
	lsls r5, r5, #6
	str r5, [sp, #0x220]
	ldr r7, [sp, #0x1d0]
	adds r7, #4
	str r7, [sp, #0x214]
	b _08061F30
	.align 2, 0
_08061E48: .4byte 0x08751E6C
_08061E4C: .4byte 0x08751EEC
_08061E50: .4byte 0x00000594
_08061E54:
	mov sb, r2
	movs r0, #1
	add r1, sp, #0x150
	str r0, [r1]
	ldr r2, [r6]
	mov r3, sb
	subs r0, r3, r2
	asrs r4, r0, #4
	add r0, sp, #0x14c
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x14c
	adds r1, r2, #0
	cmp r4, r0
	bhs _08061E76
	adds r3, r5, #0
_08061E76:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _08061E96
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08061E92
	mov r0, r8
	bl func_080D3BC0
_08061E92:
	ldr r1, [r6]
	b _08061E9A
_08061E96:
	movs r0, #0
	mov r8, r0
_08061E9A:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0x1d0]
	lsls r4, r4, #6
	str r4, [sp, #0x220]
	ldr r5, [sp, #0x1d0]
	adds r5, #4
	str r5, [sp, #0x214]
	cmp r2, sb
	beq _08061ECA
_08061EB2:
	cmp r3, #0
	beq _08061EC2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061EC2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sb
	bne _08061EB2
_08061ECA:
	adds r5, r3, #0
	add r0, sp, #0x150
	ldr r0, [r0]
	cmp r0, #1
	bne _08061EE8
	cmp r5, #0
	beq _08061EE4
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08061EE4:
	adds r5, #0x10
	b _08061F0A
_08061EE8:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08061F08
_08061EF0:
	cmp r2, #0
	beq _08061F00
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08061F00:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08061EF0
_08061F08:
	adds r5, r2, #0
_08061F0A:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _08061F1A
_08061F14:
	adds r0, #0x10
	cmp r0, r3
	bne _08061F14
_08061F1A:
	cmp r1, #0
	beq _08061F24
	adds r0, r1, #0
	bl free
_08061F24:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08061F30:
	ldr r2, [sp, #0x1c4]
	ldr r3, _08061FD8 @ =0x0000058C
	adds r6, r2, r3
	ldr r0, [r6]
	ldr r7, _08061FDC @ =0x00001C70
	adds r0, r0, r7
	bl IsFestivalWinner__C6Animal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08061F64
	ldr r1, [sp, #0x1d0]
	subs r1, #2
	ldr r4, [sp, #0x1cc]
	ldr r0, [r4, #0x18]
	lsls r1, r1, #6
	adds r0, r0, r1
	movs r1, #0x54
	movs r2, #1
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
_08061F64:
	movs r4, #0xc
	movs r5, #2
	add r0, sp, #0x154
	strh r4, [r0]
	ldr r1, [sp, #0x274]
	strh r5, [r1, #2]
	ldr r0, [r0]
	ldr r1, [sp, #0x224]
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [r6]
	adds r0, r0, r7
	bl GetName__C6Animal
	adds r1, r0, #0
	add r0, sp, #0x158
	strh r4, [r0]
	ldr r2, [sp, #0x278]
	strh r5, [r2, #2]
	ldr r0, [r0]
	str r1, [sp]
	ldr r1, [sp, #0x224]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r3, [sp, #0x1c4]
	ldr r0, [r3]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #0x48
	ldr r1, [sp, #0x224]
	ldr r2, _08061FE0 @ =0x06003900
	bl func_08008F0C
	ldr r4, [sp, #0x228]
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08061FE4
	cmp r1, #0
	beq _08061FCE
	adds r0, r1, #0
	adds r1, r4, #0
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08061FCE:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080620B2
	.align 2, 0
_08061FD8: .4byte 0x0000058C
_08061FDC: .4byte 0x00001C70
_08061FE0: .4byte 0x06003900
_08061FE4:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0x160
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0x294]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x15c
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x15c
	cmp r4, r0
	bhs _08062004
	adds r1, r2, #0
_08062004:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08062022
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08062026
	mov r0, r8
	bl func_080D3BC0
	b _08062026
_08062022:
	movs r0, #0
	mov r8, r0
_08062026:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x294]
	cmp r2, r4
	beq _0806204E
_08062034:
	cmp r3, #0
	beq _08062044
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08062044:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x294]
	cmp r2, r5
	bne _08062034
_0806204E:
	adds r5, r3, #0
	add r0, sp, #0x160
	ldr r0, [r0]
	cmp r0, #1
	bne _0806206C
	cmp r5, #0
	beq _08062068
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08062068:
	adds r5, #0x10
	b _0806208E
_0806206C:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806208C
_08062074:
	cmp r2, #0
	beq _08062084
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08062084:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08062074
_0806208C:
	adds r5, r2, #0
_0806208E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806209E
_08062098:
	adds r1, #0x10
	cmp r1, r2
	bne _08062098
_0806209E:
	cmp r0, #0
	beq _080620A6
	bl free
_080620A6:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080620B2:
	ldr r2, [sp, #0x1cc]
	ldr r0, [r2, #0x18]
	ldr r3, [sp, #0x220]
	adds r0, r0, r3
	adds r0, #4
	movs r1, #0xe4
	lsls r1, r1, #1
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	movs r0, #0xa
	add r4, sp, #0x164
	str r0, [r4]
	ldr r5, [sp, #0x1c4]
	ldr r7, _080621A8 @ =0x0000058C
	adds r0, r5, r7
	ldr r0, [r0]
	ldr r1, _080621AC @ =0x00001C70
	adds r0, r0, r1
	bl GetAffection__C6Animal
	movs r1, #0x19
	bl func_080D0EDA
	add r1, sp, #0x168
	str r0, [r1]
	ldr r1, [r4]
	ldr r2, [sp, #0x27c]
	cmp r1, r0
	bls _080620FA
	ldr r2, [sp, #0x280]
_080620FA:
	ldr r6, [r2]
	movs r4, #0
	cmp r4, r6
	bhs _08062132
	ldr r0, [sp, #0x1d0]
	adds r0, #2
	lsls r0, r0, #6
	mov r8, r0
	movs r5, #8
	movs r2, #0x58
	lsls r7, r2, #0x10
_08062110:
	ldr r3, [sp, #0x1cc]
	ldr r0, [r3, #0x18]
	add r0, r8
	adds r0, r0, r5
	movs r1, #2
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r7, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r4, #1
	cmp r4, r6
	blo _08062110
_08062132:
	ldr r4, [sp, #0x1c4]
	ldr r5, _080621A8 @ =0x0000058C
	adds r0, r4, r5
	ldr r0, [r0]
	adds r0, #0x14
	bl func_08009B00
	str r0, [sp, #0x1e0]
	cmp r0, #0
	bne _08062148
	b _080624A4
_08062148:
	add r7, sp, #0x21c
	ldrh r0, [r7]
	mov r7, sl
	strh r0, [r7]
	movs r0, #0x78
	str r0, [r7, #4]
	ldr r0, _080621B0 @ =0x087527CC
	str r0, [r7, #8]
	ldr r0, _080621B4 @ =0x0875284C
	str r0, [r7, #0xc]
	ldr r0, _080621B8 @ =0x00000594
	adds r6, r4, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080621C0
	cmp r1, #0
	beq _08062178
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062178:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r5, #0xba
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x284]
	ldr r7, [sp, #0x1c4]
	ldr r0, _080621BC @ =0x0000186C
	adds r7, r7, r0
	mov sb, r7
	movs r1, #0xbc
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x288]
	movs r2, #0xc2
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x28c]
	movs r3, #0xc4
	lsls r3, r3, #1
	add r3, sp
	str r3, [sp, #0x290]
	b _080622C0
	.align 2, 0
_080621A8: .4byte 0x0000058C
_080621AC: .4byte 0x00001C70
_080621B0: .4byte 0x087527CC
_080621B4: .4byte 0x0875284C
_080621B8: .4byte 0x00000594
_080621BC: .4byte 0x0000186C
_080621C0:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0x170
	str r0, [r1]
	ldr r2, [r6]
	ldr r4, [sp, #0x294]
	subs r0, r4, r2
	asrs r4, r0, #4
	add r0, sp, #0x16c
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x16c
	adds r1, r2, #0
	cmp r4, r0
	bhs _080621E2
	adds r3, r5, #0
_080621E2:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _08062202
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080621FE
	mov r0, r8
	bl func_080D3BC0
_080621FE:
	ldr r1, [r6]
	b _08062206
_08062202:
	movs r0, #0
	mov r8, r0
_08062206:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	movs r5, #0xba
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x284]
	ldr r7, [sp, #0x1c4]
	ldr r0, _08062274 @ =0x0000186C
	adds r7, r7, r0
	mov sb, r7
	movs r1, #0xbc
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x288]
	movs r4, #0xc2
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x28c]
	movs r5, #0xc4
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x290]
	ldr r7, [sp, #0x294]
	cmp r2, r7
	beq _08062256
_0806223C:
	cmp r3, #0
	beq _0806224C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806224C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _0806223C
_08062256:
	adds r5, r3, #0
	add r0, sp, #0x170
	ldr r0, [r0]
	cmp r0, #1
	bne _08062278
	cmp r5, #0
	beq _08062270
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062270:
	adds r5, #0x10
	b _0806229A
	.align 2, 0
_08062274: .4byte 0x0000186C
_08062278:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08062298
_08062280:
	cmp r2, #0
	beq _08062290
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062290:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08062280
_08062298:
	adds r5, r2, #0
_0806229A:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _080622AA
_080622A4:
	adds r0, #0x10
	cmp r0, r3
	bne _080622A4
_080622AA:
	cmp r1, #0
	beq _080622B4
	adds r0, r1, #0
	bl free
_080622B4:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080622C0:
	ldr r0, [sp, #0x1e0]
	bl IsFestivalWinner__C6Animal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080622EC
	ldr r1, [sp, #0x1d0]
	subs r1, #2
	ldr r2, [sp, #0x1cc]
	ldr r0, [r2, #0x18]
	lsls r1, r1, #6
	adds r0, r0, r1
	adds r0, #0x1e
	movs r1, #0x54
	movs r2, #1
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
_080622EC:
	movs r4, #0xc
	movs r5, #2
	add r0, sp, #0x174
	strh r4, [r0]
	ldr r3, [sp, #0x284]
	strh r5, [r3, #2]
	ldr r0, [r0]
	mov r1, sb
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [sp, #0x1e0]
	bl GetName__C6Animal
	adds r1, r0, #0
	add r0, sp, #0x178
	strh r4, [r0]
	ldr r4, [sp, #0x288]
	strh r5, [r4, #2]
	ldr r0, [r0]
	str r1, [sp]
	mov r1, sb
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r5, [sp, #0x1c4]
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #0x48
	mov r1, sb
	ldr r2, _0806235C @ =0x06003C00
	bl func_08008F0C
	ldr r7, [sp, #0x228]
	mov r8, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08062360
	cmp r1, #0
	beq _08062354
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08062354:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806242E
	.align 2, 0
_0806235C: .4byte 0x06003C00
_08062360:
	str r1, [sp, #0x294]
	movs r0, #1
	add r1, sp, #0x180
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x294]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x17c
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x17c
	cmp r4, r0
	bhs _08062380
	adds r1, r2, #0
_08062380:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806239E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _080623A2
	mov r0, sb
	bl func_080D3BC0
	b _080623A2
_0806239E:
	movs r0, #0
	mov sb, r0
_080623A2:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x294]
	cmp r2, r7
	beq _080623CA
_080623B0:
	cmp r3, #0
	beq _080623C0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080623C0:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x294]
	cmp r2, r0
	bne _080623B0
_080623CA:
	adds r5, r3, #0
	add r0, sp, #0x180
	ldr r0, [r0]
	cmp r0, #1
	bne _080623E8
	cmp r5, #0
	beq _080623E4
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080623E4:
	adds r5, #0x10
	b _0806240A
_080623E8:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08062408
_080623F0:
	cmp r2, #0
	beq _08062400
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08062400:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080623F0
_08062408:
	adds r5, r2, #0
_0806240A:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806241A
_08062414:
	adds r1, #0x10
	cmp r1, r2
	bne _08062414
_0806241A:
	cmp r0, #0
	beq _08062422
	bl free
_08062422:
	ldr r0, [sp, #0x298]
	add r0, sb
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806242E:
	ldr r1, [sp, #0x1cc]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x220]
	adds r0, r0, r2
	adds r0, #0x22
	movs r1, #0xf0
	lsls r1, r1, #1
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	movs r0, #0xa
	add r4, sp, #0x184
	str r0, [r4]
	ldr r0, [sp, #0x1e0]
	bl GetAffection__C6Animal
	movs r1, #0x19
	bl func_080D0EDA
	add r1, sp, #0x188
	str r0, [r1]
	ldr r1, [r4]
	ldr r2, [sp, #0x28c]
	cmp r1, r0
	bls _0806246C
	ldr r2, [sp, #0x290]
_0806246C:
	ldr r6, [r2]
	movs r4, #0
	cmp r4, r6
	bhs _080624A4
	ldr r0, [sp, #0x1d0]
	adds r0, #2
	lsls r0, r0, #6
	mov r8, r0
	movs r5, #0x26
	movs r3, #0x58
	lsls r7, r3, #0x10
_08062482:
	ldr r1, [sp, #0x1cc]
	ldr r0, [r1, #0x18]
	add r0, r8
	adds r0, r0, r5
	movs r1, #2
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r7, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r4, #1
	cmp r4, r6
	blo _08062482
_080624A4:
	ldr r2, [sp, #0x214]
	str r2, [sp, #0x1d0]
	lsls r0, r2, #3
	mov r3, sl
	strh r0, [r3]
	movs r0, #0x20
	str r0, [r3, #4]
	ldr r0, _080624E8 @ =0x0875268C
	str r0, [r3, #8]
	ldr r0, _080624EC @ =0x0875270C
	str r0, [r3, #0xc]
	ldr r4, [sp, #0x1c4]
	ldr r5, _080624F0 @ =0x00000594
	adds r6, r4, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080624F4
	cmp r1, #0
	beq _080624D8
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_080624D8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r4, [sp, #0x1d0]
	lsls r4, r4, #6
	str r4, [sp, #0x220]
	b _080625CA
	.align 2, 0
_080624E8: .4byte 0x0875268C
_080624EC: .4byte 0x0875270C
_080624F0: .4byte 0x00000594
_080624F4:
	mov sb, r1
	movs r0, #1
	add r1, sp, #0x190
	str r0, [r1]
	ldr r2, [r6]
	mov r5, sb
	subs r0, r5, r2
	asrs r4, r0, #4
	add r0, sp, #0x18c
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x18c
	adds r1, r2, #0
	cmp r4, r0
	bhs _08062516
	adds r3, r5, #0
_08062516:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _08062536
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08062532
	mov r0, r8
	bl func_080D3BC0
_08062532:
	ldr r1, [r6]
	b _0806253A
_08062536:
	movs r0, #0
	mov r8, r0
_0806253A:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r7, [sp, #0x1d0]
	lsls r7, r7, #6
	str r7, [sp, #0x220]
	cmp r2, sb
	beq _08062564
_0806254C:
	cmp r3, #0
	beq _0806255C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806255C:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sb
	bne _0806254C
_08062564:
	adds r5, r3, #0
	add r0, sp, #0x190
	ldr r0, [r0]
	cmp r0, #1
	bne _08062582
	cmp r5, #0
	beq _0806257E
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_0806257E:
	adds r5, #0x10
	b _080625A4
_08062582:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080625A2
_0806258A:
	cmp r2, #0
	beq _0806259A
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_0806259A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806258A
_080625A2:
	adds r5, r2, #0
_080625A4:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _080625B4
_080625AE:
	adds r0, #0x10
	cmp r0, r3
	bne _080625AE
_080625B4:
	cmp r1, #0
	beq _080625BE
	adds r0, r1, #0
	bl free
_080625BE:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080625CA:
	ldr r1, [sp, #0x1c4]
	ldr r2, _08062644 @ =0x0000058C
	adds r0, r1, r2
	ldr r0, [r0]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl CountChickens__C4Coop
	ldr r4, [sp, #0x1cc]
	ldr r1, [r4, #0x18]
	ldr r5, [sp, #0x220]
	adds r1, r1, r5
	adds r1, #0x12
	movs r2, #0x90
	lsls r2, r2, #1
	movs r4, #0x20
	str r4, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r7, [sp, #0x1cc]
	ldr r0, [r7, #0x18]
	adds r0, r0, r5
	adds r0, #0x14
	ldr r2, [sp, #0x238]
	lsrs r1, r2, #0x10
	movs r2, #0
	str r2, [sp]
	str r4, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	movs r0, #0x94
	mov r3, sl
	str r0, [r3, #4]
	ldr r0, _08062648 @ =0x087525EC
	str r0, [r3, #8]
	ldr r0, _0806264C @ =0x0875266C
	str r0, [r3, #0xc]
	ldr r4, [sp, #0x1c4]
	ldr r5, _08062650 @ =0x00000594
	adds r6, r4, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08062654
	cmp r1, #0
	beq _0806263A
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_0806263A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08062724
	.align 2, 0
_08062644: .4byte 0x0000058C
_08062648: .4byte 0x087525EC
_0806264C: .4byte 0x0875266C
_08062650: .4byte 0x00000594
_08062654:
	mov sb, r1
	movs r0, #1
	add r1, sp, #0x198
	str r0, [r1]
	ldr r2, [r6]
	mov r4, sb
	subs r0, r4, r2
	asrs r4, r0, #4
	add r0, sp, #0x194
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x194
	adds r1, r2, #0
	cmp r4, r0
	bhs _08062676
	adds r3, r5, #0
_08062676:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _08062696
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08062692
	mov r0, r8
	bl func_080D3BC0
_08062692:
	ldr r1, [r6]
	b _0806269A
_08062696:
	movs r0, #0
	mov r8, r0
_0806269A:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sb
	beq _080626BE
_080626A6:
	cmp r3, #0
	beq _080626B6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080626B6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sb
	bne _080626A6
_080626BE:
	adds r5, r3, #0
	add r0, sp, #0x198
	ldr r0, [r0]
	cmp r0, #1
	bne _080626DC
	cmp r5, #0
	beq _080626D8
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_080626D8:
	adds r5, #0x10
	b _080626FE
_080626DC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080626FC
_080626E4:
	cmp r2, #0
	beq _080626F4
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_080626F4:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080626E4
_080626FC:
	adds r5, r2, #0
_080626FE:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _0806270E
_08062708:
	adds r0, #0x10
	cmp r0, r3
	bne _08062708
_0806270E:
	cmp r1, #0
	beq _08062718
	adds r0, r1, #0
	bl free
_08062718:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08062724:
	ldr r2, [sp, #0x1c4]
	ldr r3, _080627AC @ =0x0000058C
	adds r0, r2, r3
	ldr r0, [r0]
	movs r4, #0x82
	lsls r4, r4, #3
	adds r0, r0, r4
	bl GetStoredBushelCount__C4Coop
	ldr r5, [sp, #0x1cc]
	ldr r1, [r5, #0x18]
	ldr r7, [sp, #0x1d0]
	lsls r5, r7, #6
	adds r1, r1, r5
	adds r1, #0x32
	movs r2, #0x90
	lsls r2, r2, #1
	movs r4, #0x20
	str r4, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0x1cc]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, #0x34
	ldr r2, [sp, #0x1e8]
	lsrs r1, r2, #0x10
	movs r2, #0
	str r2, [sp]
	str r4, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	adds r3, r7, #0
	adds r3, #3
	str r3, [sp, #0x1d0]
	lsls r0, r3, #3
	mov r5, sl
	strh r0, [r5]
	str r4, [r5, #4]
	ldr r0, _080627B0 @ =0x08751B4C
	str r0, [r5, #8]
	ldr r0, _080627B4 @ =0x08751BCC
	str r0, [r5, #0xc]
	ldr r7, [sp, #0x1c4]
	ldr r0, _080627B8 @ =0x00000594
	adds r6, r7, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080627BC
	cmp r1, #0
	beq _0806279E
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_0806279E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r5, [sp, #0x1d0]
	lsls r5, r5, #6
	str r5, [sp, #0x220]
	b _08062892
	.align 2, 0
_080627AC: .4byte 0x0000058C
_080627B0: .4byte 0x08751B4C
_080627B4: .4byte 0x08751BCC
_080627B8: .4byte 0x00000594
_080627BC:
	mov sb, r1
	movs r0, #1
	add r1, sp, #0x1a0
	str r0, [r1]
	ldr r2, [r6]
	mov r7, sb
	subs r0, r7, r2
	asrs r4, r0, #4
	add r0, sp, #0x19c
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x19c
	adds r1, r2, #0
	cmp r4, r0
	bhs _080627DE
	adds r3, r5, #0
_080627DE:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _080627FE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080627FA
	mov r0, r8
	bl func_080D3BC0
_080627FA:
	ldr r1, [r6]
	b _08062802
_080627FE:
	movs r0, #0
	mov r8, r0
_08062802:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r0, [sp, #0x1d0]
	lsls r0, r0, #6
	str r0, [sp, #0x220]
	cmp r2, sb
	beq _0806282C
_08062814:
	cmp r3, #0
	beq _08062824
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08062824:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sb
	bne _08062814
_0806282C:
	adds r5, r3, #0
	add r0, sp, #0x1a0
	ldr r0, [r0]
	cmp r0, #1
	bne _0806284A
	cmp r5, #0
	beq _08062846
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062846:
	adds r5, #0x10
	b _0806286C
_0806284A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806286A
_08062852:
	cmp r2, #0
	beq _08062862
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062862:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08062852
_0806286A:
	adds r5, r2, #0
_0806286C:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _0806287C
_08062876:
	adds r0, #0x10
	cmp r0, r3
	bne _08062876
_0806287C:
	cmp r1, #0
	beq _08062886
	adds r0, r1, #0
	bl free
_08062886:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08062892:
	ldr r1, [sp, #0x1c4]
	ldr r2, _0806290C @ =0x0000058C
	adds r0, r1, r2
	ldr r0, [r0]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	bl CountCows__C4Barn
	ldr r4, [sp, #0x1cc]
	ldr r1, [r4, #0x18]
	ldr r5, [sp, #0x220]
	adds r1, r1, r5
	adds r1, #0x12
	movs r2, #0x90
	lsls r2, r2, #1
	movs r4, #0x20
	str r4, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r7, [sp, #0x1cc]
	ldr r0, [r7, #0x18]
	adds r0, r0, r5
	adds r0, #0x14
	ldr r2, [sp, #0x260]
	lsrs r1, r2, #0x10
	movs r2, #0
	str r2, [sp]
	str r4, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	movs r0, #0x94
	mov r3, sl
	str r0, [r3, #4]
	ldr r0, _08062910 @ =0x0875236C
	str r0, [r3, #8]
	ldr r0, _08062914 @ =0x087523EC
	str r0, [r3, #0xc]
	ldr r4, [sp, #0x1c4]
	ldr r5, _08062918 @ =0x00000594
	adds r6, r4, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806291C
	cmp r1, #0
	beq _08062902
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062902:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080629EC
	.align 2, 0
_0806290C: .4byte 0x0000058C
_08062910: .4byte 0x0875236C
_08062914: .4byte 0x087523EC
_08062918: .4byte 0x00000594
_0806291C:
	mov sb, r1
	movs r0, #1
	add r1, sp, #0x1a8
	str r0, [r1]
	ldr r2, [r6]
	mov r4, sb
	subs r0, r4, r2
	asrs r4, r0, #4
	add r0, sp, #0x1a4
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x1a4
	adds r1, r2, #0
	cmp r4, r0
	bhs _0806293E
	adds r3, r5, #0
_0806293E:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806295E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806295A
	mov r0, r8
	bl func_080D3BC0
_0806295A:
	ldr r1, [r6]
	b _08062962
_0806295E:
	movs r0, #0
	mov r8, r0
_08062962:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sb
	beq _08062986
_0806296E:
	cmp r3, #0
	beq _0806297E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806297E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sb
	bne _0806296E
_08062986:
	adds r5, r3, #0
	add r0, sp, #0x1a8
	ldr r0, [r0]
	cmp r0, #1
	bne _080629A4
	cmp r5, #0
	beq _080629A0
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_080629A0:
	adds r5, #0x10
	b _080629C6
_080629A4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080629C4
_080629AC:
	cmp r2, #0
	beq _080629BC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_080629BC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080629AC
_080629C4:
	adds r5, r2, #0
_080629C6:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _080629D6
_080629D0:
	adds r0, #0x10
	cmp r0, r3
	bne _080629D0
_080629D6:
	cmp r1, #0
	beq _080629E0
	adds r0, r1, #0
	bl free
_080629E0:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080629EC:
	ldr r2, [sp, #0x1c4]
	ldr r3, _08062A70 @ =0x0000058C
	adds r0, r2, r3
	ldr r0, [r0]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	bl GetStoredBushelCount__C4Barn
	ldr r5, [sp, #0x1cc]
	ldr r1, [r5, #0x18]
	ldr r7, [sp, #0x1d0]
	lsls r5, r7, #6
	adds r1, r1, r5
	adds r1, #0x32
	movs r2, #0x90
	lsls r2, r2, #1
	movs r4, #0x20
	str r4, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0x1cc]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, #0x34
	ldr r2, [sp, #0x1e8]
	lsrs r1, r2, #0x10
	movs r2, #0
	str r2, [sp]
	str r4, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	adds r3, r7, #0
	adds r3, #3
	str r3, [sp, #0x1d0]
	lsls r0, r3, #3
	mov r5, sl
	strh r0, [r5]
	str r4, [r5, #4]
	ldr r0, _08062A74 @ =0x0875320C
	str r0, [r5, #8]
	ldr r0, _08062A78 @ =0x0875328C
	str r0, [r5, #0xc]
	ldr r7, [sp, #0x1c4]
	ldr r0, _08062A7C @ =0x00000594
	adds r6, r7, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08062A80
	cmp r1, #0
	beq _08062A66
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062A66:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08062B50
	.align 2, 0
_08062A70: .4byte 0x0000058C
_08062A74: .4byte 0x0875320C
_08062A78: .4byte 0x0875328C
_08062A7C: .4byte 0x00000594
_08062A80:
	mov sb, r1
	movs r0, #1
	add r1, sp, #0x1b0
	str r0, [r1]
	ldr r2, [r6]
	mov r5, sb
	subs r0, r5, r2
	asrs r4, r0, #4
	add r0, sp, #0x1ac
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x1ac
	adds r1, r2, #0
	cmp r4, r0
	bhs _08062AA2
	adds r3, r5, #0
_08062AA2:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _08062AC2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08062ABE
	mov r0, r8
	bl func_080D3BC0
_08062ABE:
	ldr r1, [r6]
	b _08062AC6
_08062AC2:
	movs r0, #0
	mov r8, r0
_08062AC6:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sb
	beq _08062AEA
_08062AD2:
	cmp r3, #0
	beq _08062AE2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08062AE2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sb
	bne _08062AD2
_08062AEA:
	adds r5, r3, #0
	add r0, sp, #0x1b0
	ldr r0, [r0]
	cmp r0, #1
	bne _08062B08
	cmp r5, #0
	beq _08062B04
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062B04:
	adds r5, #0x10
	b _08062B2A
_08062B08:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08062B28
_08062B10:
	cmp r2, #0
	beq _08062B20
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062B20:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08062B10
_08062B28:
	adds r5, r2, #0
_08062B2A:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _08062B3A
_08062B34:
	adds r0, #0x10
	cmp r0, r3
	bne _08062B34
_08062B3A:
	cmp r1, #0
	beq _08062B44
	adds r0, r1, #0
	bl free
_08062B44:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08062B50:
	ldr r2, [sp, #0x1c4]
	ldr r3, _08062BE0 @ =0x0000058C
	adds r0, r2, r3
	ldr r0, [r0]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	bl CountSheeps__C4Barn
	ldr r5, [sp, #0x1cc]
	ldr r1, [r5, #0x18]
	ldr r7, [sp, #0x1d0]
	lsls r5, r7, #6
	adds r1, r1, r5
	adds r1, #0x12
	movs r2, #0x90
	lsls r2, r2, #1
	movs r4, #0x20
	str r4, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0x1cc]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, #0x14
	ldr r2, [sp, #0x260]
	lsrs r1, r2, #0x10
	movs r2, #0
	str r2, [sp]
	str r4, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	adds r3, r7, #0
	adds r3, #3
	str r3, [sp, #0x1d0]
	lsls r2, r3, #3
	mov r5, sl
	strh r2, [r5]
	str r4, [r5, #4]
	ldr r0, _08062BE4 @ =0x0875316C
	str r0, [r5, #8]
	ldr r0, _08062BE8 @ =0x087531EC
	str r0, [r5, #0xc]
	ldr r7, [sp, #0x1c4]
	ldr r0, _08062BEC @ =0x00000594
	adds r6, r7, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08062BF0
	cmp r1, #0
	beq _08062BCA
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062BCA:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r7, [sp, #0x1d0]
	lsls r7, r7, #6
	str r7, [sp, #0x220]
	ldr r0, [sp, #0x1d0]
	adds r0, #3
	str r0, [sp, #0x210]
	str r2, [sp, #0x21c]
	b _08062CD2
	.align 2, 0
_08062BE0: .4byte 0x0000058C
_08062BE4: .4byte 0x0875316C
_08062BE8: .4byte 0x087531EC
_08062BEC: .4byte 0x00000594
_08062BF0:
	mov sb, r1
	movs r0, #1
	add r1, sp, #0x1b8
	str r0, [r1]
	ldr r2, [r6]
	mov r3, sb
	subs r0, r3, r2
	asrs r4, r0, #4
	add r0, sp, #0x1b4
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x1b4
	adds r1, r2, #0
	cmp r4, r0
	bhs _08062C12
	adds r3, r5, #0
_08062C12:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _08062C32
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08062C2E
	mov r0, r8
	bl func_080D3BC0
_08062C2E:
	ldr r1, [r6]
	b _08062C36
_08062C32:
	movs r0, #0
	mov r8, r0
_08062C36:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0x1d0]
	lsls r4, r4, #6
	str r4, [sp, #0x220]
	ldr r5, [sp, #0x1d0]
	adds r5, #3
	str r5, [sp, #0x210]
	ldr r7, [sp, #0x1d0]
	lsls r7, r7, #3
	str r7, [sp, #0x21c]
	cmp r2, sb
	beq _08062C6C
_08062C54:
	cmp r3, #0
	beq _08062C64
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08062C64:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sb
	bne _08062C54
_08062C6C:
	adds r5, r3, #0
	add r0, sp, #0x1b8
	ldr r0, [r0]
	cmp r0, #1
	bne _08062C8A
	cmp r5, #0
	beq _08062C86
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062C86:
	adds r5, #0x10
	b _08062CAC
_08062C8A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08062CAA
_08062C92:
	cmp r2, #0
	beq _08062CA2
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062CA2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08062C92
_08062CAA:
	adds r5, r2, #0
_08062CAC:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _08062CBC
_08062CB6:
	adds r0, #0x10
	cmp r0, r3
	bne _08062CB6
_08062CBC:
	cmp r1, #0
	beq _08062CC6
	adds r0, r1, #0
	bl free
_08062CC6:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r7, [sp, #0x298]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08062CD2:
	ldr r1, [sp, #0x1c4]
	ldr r2, _08062D50 @ =0x0000058C
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r3, _08062D54 @ =0x00002214
	adds r0, r0, r3
	bl func_0809AA28
	ldr r4, [sp, #0x1cc]
	ldr r1, [r4, #0x18]
	ldr r5, [sp, #0x220]
	adds r1, r1, r5
	adds r1, #0x16
	movs r2, #0x90
	lsls r2, r2, #1
	movs r4, #0x20
	str r4, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r7, [sp, #0x1cc]
	ldr r0, [r7, #0x18]
	adds r0, r0, r5
	adds r0, #0x18
	ldr r2, [sp, #0x1e4]
	lsrs r1, r2, #0x10
	movs r2, #0
	str r2, [sp]
	str r4, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	add r3, sp, #0x21c
	ldrh r4, [r3]
	mov r3, sl
	strh r4, [r3]
	movs r0, #0x94
	str r0, [r3, #4]
	ldr r0, _08062D58 @ =0x08752EEC
	str r0, [r3, #8]
	ldr r0, _08062D5C @ =0x08752F6C
	str r0, [r3, #0xc]
	ldr r4, [sp, #0x1c4]
	ldr r5, _08062D60 @ =0x00000594
	adds r6, r4, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08062D64
	cmp r1, #0
	beq _08062D46
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062D46:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08062E34
	.align 2, 0
_08062D50: .4byte 0x0000058C
_08062D54: .4byte 0x00002214
_08062D58: .4byte 0x08752EEC
_08062D5C: .4byte 0x08752F6C
_08062D60: .4byte 0x00000594
_08062D64:
	mov sb, r1
	movs r0, #1
	add r1, sp, #0x1c0
	str r0, [r1]
	ldr r2, [r6]
	mov r4, sb
	subs r0, r4, r2
	asrs r4, r0, #4
	add r0, sp, #0x1bc
	str r4, [r0]
	adds r5, r1, #0
	ldr r0, [r1]
	add r3, sp, #0x1bc
	adds r1, r2, #0
	cmp r4, r0
	bhs _08062D86
	adds r3, r5, #0
_08062D86:
	ldr r0, [r3]
	adds r0, r4, r0
	cmp r0, #0
	beq _08062DA6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08062DA2
	mov r0, r8
	bl func_080D3BC0
_08062DA2:
	ldr r1, [r6]
	b _08062DAA
_08062DA6:
	movs r0, #0
	mov r8, r0
_08062DAA:
	adds r5, r0, #0
	str r5, [sp, #0x298]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sb
	beq _08062DCE
_08062DB6:
	cmp r3, #0
	beq _08062DC6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08062DC6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sb
	bne _08062DB6
_08062DCE:
	adds r5, r3, #0
	add r0, sp, #0x1c0
	ldr r0, [r0]
	cmp r0, #1
	bne _08062DEC
	cmp r5, #0
	beq _08062DE8
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062DE8:
	adds r5, #0x10
	b _08062E0E
_08062DEC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08062E0C
_08062DF4:
	cmp r2, #0
	beq _08062E04
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x44]
	str r1, [r0]
_08062E04:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08062DF4
_08062E0C:
	adds r5, r2, #0
_08062E0E:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _08062E1E
_08062E18:
	adds r0, #0x10
	cmp r0, r3
	bne _08062E18
_08062E1E:
	cmp r1, #0
	beq _08062E28
	adds r0, r1, #0
	bl free
_08062E28:
	ldr r0, [sp, #0x298]
	add r0, r8
	ldr r1, [sp, #0x298]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08062E34:
	ldr r2, [sp, #0x1c4]
	ldr r3, _08062E98 @ =0x0000058C
	adds r0, r2, r3
	ldr r0, [r0]
	adds r0, #0x14
	bl func_08009AF8
	ldr r4, [sp, #0x1cc]
	ldr r1, [r4, #0x18]
	ldr r5, [sp, #0x220]
	adds r1, r1, r5
	adds r1, #0x32
	movs r2, #0x90
	lsls r2, r2, #1
	movs r4, #0x20
	str r4, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r7, [sp, #0x1cc]
	ldr r0, [r7, #0x18]
	adds r0, r0, r5
	adds r0, #0x34
	ldr r2, [sp, #0x1ec]
	lsrs r1, r2, #0x10
	movs r2, #0
	str r2, [sp]
	str r4, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x210]
	lsls r1, r3, #0x13
	asrs r1, r1, #0x10
	ldr r0, [sp, #0x1cc]
	bl func_08075E24
	ldr r0, [sp, #0x1c4]
	movs r3, #0xa7
	lsls r3, r3, #2
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08062E98: .4byte 0x0000058C

	thumb_func_start func_08062E9C
func_08062E9C: @ 0x08062E9C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xf4
	str r0, [sp, #0xa8]
	ldr r0, [sp, #0x114]
	str r0, [sp]
	ldr r0, [sp, #0xa8]
	bl func_08076BFC
	ldr r0, [sp, #0xa8]
	ldr r2, _08062FA4 @ =0x000005B4
	adds r1, r0, r2
	ldr r0, _08062FA8 @ =vtable_unk_080E7A68
	str r0, [r1]
	movs r0, #0xf
	add r4, sp, #0x14
	add r3, sp, #0x18
	mov r8, r3
	mov r5, sp
	adds r5, #0x24
	str r5, [sp, #0xd4]
	mov r6, sp
	adds r6, #0x30
	str r6, [sp, #0xd8]
	mov r1, sp
	adds r1, #0x34
	str r1, [sp, #0xdc]
	mov r2, sp
	adds r2, #0x40
	str r2, [sp, #0xe0]
	mov r3, sp
	adds r3, #0x4c
	str r3, [sp, #0xe4]
	adds r5, #0x34
	str r5, [sp, #0xe8]
	adds r6, #0x34
	str r6, [sp, #0xac]
	adds r1, #0x3c
	str r1, [sp, #0xb0]
	adds r2, #0x3c
	str r2, [sp, #0xb4]
	movs r1, #1
	rsbs r1, r1, #0
_08062EF8:
	subs r0, #1
	cmp r0, r1
	bne _08062EF8
	ldr r3, [sp, #0xa8]
	ldr r0, [r3]
	bl func_08008910
	adds r7, r0, #0
	movs r5, #8
	movs r6, #2
	add r0, sp, #0x14
	strh r5, [r0]
	strh r6, [r4, #2]
	ldr r0, [sp, #0x14]
	ldr r1, [sp, #0xa8]
	ldr r2, _08062FAC @ =0x000005BC
	adds r4, r1, r2
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	ldr r1, _08062FB0 @ =0x080FB838
	add r0, sp, #0x18
	strh r5, [r0]
	mov r3, r8
	strh r6, [r3, #2]
	ldr r0, [sp, #0x18]
	str r1, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	movs r3, #0x80
	lsls r3, r3, #2
	add r0, sp, #4
	adds r1, r4, #0
	ldr r2, _08062FB4 @ =0x06000700
	bl func_08008F0C
	add r4, sp, #4
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _08062FD0
	cmp r1, #0
	beq _08062F64
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08062F64:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	ldr r3, [sp, #0xa8]
	movs r4, #0xf8
	lsls r4, r4, #3
	adds r3, r3, r4
	mov sl, r3
	ldr r6, _08062FB8 @ =0x000009C4
	ldr r5, [sp, #0xa8]
	adds r6, r5, r6
	str r6, [sp, #0xc8]
	movs r0, #0xcd
	lsls r0, r0, #4
	adds r0, r5, r0
	str r0, [sp, #0xc4]
	ldr r1, _08062FBC @ =0x00000E54
	adds r1, r5, r1
	str r1, [sp, #0xd0]
	ldr r2, _08062FC0 @ =0x00000FD8
	adds r2, r5, r2
	str r2, [sp, #0xbc]
	ldr r3, _08062FC4 @ =0x0000115C
	adds r3, r5, r3
	str r3, [sp, #0xcc]
	ldr r4, _08062FC8 @ =0x00000BC8
	adds r4, r5, r4
	str r4, [sp, #0xb8]
	ldr r6, _08062FCC @ =0x00000C4C
	adds r6, r5, r6
	str r6, [sp, #0xc0]
	b _080630EC
	.align 2, 0
_08062FA4: .4byte 0x000005B4
_08062FA8: .4byte vtable_unk_080E7A68
_08062FAC: .4byte 0x000005BC
_08062FB0: .4byte 0x080FB838
_08062FB4: .4byte 0x06000700
_08062FB8: .4byte 0x000009C4
_08062FBC: .4byte 0x00000E54
_08062FC0: .4byte 0x00000FD8
_08062FC4: .4byte 0x0000115C
_08062FC8: .4byte 0x00000BC8
_08062FCC: .4byte 0x00000C4C
_08062FD0:
	str r1, [sp, #0xec]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r1, [r7]
	ldr r2, [sp, #0xec]
	subs r0, r2, r1
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r2, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _08062FEA
	adds r0, r2, #0
_08062FEA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806300A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08063006
	mov r0, r8
	bl func_080D3BC0
_08063006:
	ldr r1, [r7]
	b _0806300E
_0806300A:
	movs r0, #0
	mov r8, r0
_0806300E:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0xa8]
	movs r5, #0xf8
	lsls r5, r5, #3
	adds r4, r4, r5
	mov sl, r4
	ldr r0, _0806308C @ =0x000009C4
	ldr r6, [sp, #0xa8]
	adds r0, r6, r0
	str r0, [sp, #0xc8]
	movs r1, #0xcd
	lsls r1, r1, #4
	adds r1, r6, r1
	str r1, [sp, #0xc4]
	ldr r4, _08063090 @ =0x00000E54
	adds r4, r6, r4
	str r4, [sp, #0xd0]
	ldr r5, _08063094 @ =0x00000FD8
	adds r5, r6, r5
	str r5, [sp, #0xbc]
	ldr r0, _08063098 @ =0x0000115C
	adds r0, r6, r0
	str r0, [sp, #0xcc]
	ldr r1, _0806309C @ =0x00000BC8
	adds r1, r6, r1
	str r1, [sp, #0xb8]
	ldr r4, _080630A0 @ =0x00000C4C
	adds r4, r6, r4
	str r4, [sp, #0xc0]
	ldr r5, [sp, #0xec]
	cmp r2, r5
	beq _0806306E
_08063054:
	cmp r3, #0
	beq _08063064
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063064:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0xec]
	cmp r2, r6
	bne _08063054
_0806306E:
	adds r5, r3, #0
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _080630A4
	cmp r5, #0
	beq _08063086
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08063086:
	adds r5, #0x10
	b _080630C6
	.align 2, 0
_0806308C: .4byte 0x000009C4
_08063090: .4byte 0x00000E54
_08063094: .4byte 0x00000FD8
_08063098: .4byte 0x0000115C
_0806309C: .4byte 0x00000BC8
_080630A0: .4byte 0x00000C4C
_080630A4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080630C4
_080630AC:
	cmp r2, #0
	beq _080630BC
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080630BC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080630AC
_080630C4:
	adds r5, r2, #0
_080630C6:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _080630D6
_080630D0:
	adds r0, #0x10
	cmp r0, r2
	bne _080630D0
_080630D6:
	cmp r1, #0
	beq _080630E0
	adds r0, r1, #0
	bl free
_080630E0:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r6, [sp, #0xf0]
	str r6, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080630EC:
	ldr r3, _0806313C @ =0x080FB844
	movs r1, #8
	movs r2, #2
	add r0, sp, #0x24
	strh r1, [r0]
	ldr r0, [sp, #0xd4]
	strh r2, [r0, #2]
	ldr r0, [sp, #0x24]
	str r3, [sp]
	mov r1, sl
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	movs r3, #0x80
	lsls r3, r3, #2
	add r0, sp, #4
	mov r1, sl
	ldr r2, _08063140 @ =0x06000900
	bl func_08008F0C
	add r1, sp, #4
	mov sb, r1
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _08063144
	cmp r1, #0
	beq _08063132
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08063132:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _0806320A
	.align 2, 0
_0806313C: .4byte 0x080FB844
_08063140: .4byte 0x06000900
_08063144:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r1, [r7]
	mov r5, sl
	subs r0, r5, r1
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r2, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _0806315E
	adds r0, r2, #0
_0806315E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806317E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806317A
	mov r0, r8
	bl func_080D3BC0
_0806317A:
	ldr r1, [r7]
	b _08063182
_0806317E:
	movs r0, #0
	mov r8, r0
_08063182:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _080631A6
_0806318E:
	cmp r3, #0
	beq _0806319E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806319E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _0806318E
_080631A6:
	adds r5, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080631C2
	cmp r5, #0
	beq _080631BE
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080631BE:
	adds r5, #0x10
	b _080631E4
_080631C2:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080631E2
_080631CA:
	cmp r2, #0
	beq _080631DA
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080631DA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080631CA
_080631E2:
	adds r5, r2, #0
_080631E4:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _080631F4
_080631EE:
	adds r0, #0x10
	cmp r0, r2
	bne _080631EE
_080631F4:
	cmp r1, #0
	beq _080631FE
	adds r0, r1, #0
	bl free
_080631FE:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_0806320A:
	movs r4, #8
	movs r5, #2
	add r0, sp, #0x30
	strh r4, [r0]
	ldr r2, [sp, #0xd8]
	strh r5, [r2, #2]
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0xc8]
	movs r2, #0
	bl func_0804E7A0
	ldr r1, _0806326C @ =0x080FB850
	add r0, sp, #0x34
	strh r4, [r0]
	ldr r3, [sp, #0xdc]
	strh r5, [r3, #2]
	ldr r0, [sp, #0x34]
	str r1, [sp]
	ldr r1, [sp, #0xc8]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	movs r3, #0x80
	lsls r3, r3, #2
	add r0, sp, #4
	ldr r1, [sp, #0xc8]
	ldr r2, _08063270 @ =0x06000B00
	bl func_08008F0C
	add r4, sp, #4
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _08063274
	cmp r1, #0
	beq _08063262
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063262:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _0806333A
	.align 2, 0
_0806326C: .4byte 0x080FB850
_08063270: .4byte 0x06000B00
_08063274:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r1, [r7]
	mov r3, sl
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r2, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _0806328E
	adds r0, r2, #0
_0806328E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080632AE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080632AA
	mov r0, r8
	bl func_080D3BC0
_080632AA:
	ldr r1, [r7]
	b _080632B2
_080632AE:
	movs r0, #0
	mov r8, r0
_080632B2:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _080632D6
_080632BE:
	cmp r3, #0
	beq _080632CE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080632CE:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080632BE
_080632D6:
	adds r5, r3, #0
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _080632F2
	cmp r5, #0
	beq _080632EE
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080632EE:
	adds r5, #0x10
	b _08063314
_080632F2:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08063312
_080632FA:
	cmp r2, #0
	beq _0806330A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806330A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080632FA
_08063312:
	adds r5, r2, #0
_08063314:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _08063324
_0806331E:
	adds r0, #0x10
	cmp r0, r2
	bne _0806331E
_08063324:
	cmp r1, #0
	beq _0806332E
	adds r0, r1, #0
	bl free
_0806332E:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r6, [sp, #0xf0]
	str r6, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_0806333A:
	ldr r3, _08063388 @ =0x080FB85C
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x40
	strh r1, [r0]
	ldr r0, [sp, #0xe0]
	strh r2, [r0, #2]
	ldr r0, [sp, #0x40]
	str r3, [sp]
	ldr r1, [sp, #0xc4]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	movs r3, #0xc0
	lsls r3, r3, #1
	add r0, sp, #4
	ldr r1, [sp, #0xc4]
	ldr r2, _0806338C @ =0x06000D00
	bl func_08008F0C
	add r1, sp, #4
	mov sb, r1
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _08063390
	cmp r1, #0
	beq _08063380
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08063380:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _08063456
	.align 2, 0
_08063388: .4byte 0x080FB85C
_0806338C: .4byte 0x06000D00
_08063390:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x48]
	ldr r1, [r7]
	mov r5, sl
	subs r0, r5, r1
	asrs r4, r0, #4
	str r4, [sp, #0x44]
	add r2, sp, #0x48
	add r0, sp, #0x44
	cmp r4, #1
	bhs _080633AA
	adds r0, r2, #0
_080633AA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080633CA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080633C6
	mov r0, r8
	bl func_080D3BC0
_080633C6:
	ldr r1, [r7]
	b _080633CE
_080633CA:
	movs r0, #0
	mov r8, r0
_080633CE:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _080633F2
_080633DA:
	cmp r3, #0
	beq _080633EA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080633EA:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080633DA
_080633F2:
	adds r5, r3, #0
	ldr r0, [sp, #0x48]
	cmp r0, #1
	bne _0806340E
	cmp r5, #0
	beq _0806340A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806340A:
	adds r5, #0x10
	b _08063430
_0806340E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806342E
_08063416:
	cmp r2, #0
	beq _08063426
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063426:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08063416
_0806342E:
	adds r5, r2, #0
_08063430:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _08063440
_0806343A:
	adds r0, #0x10
	cmp r0, r2
	bne _0806343A
_08063440:
	cmp r1, #0
	beq _0806344A
	adds r0, r1, #0
	bl free
_0806344A:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_08063456:
	ldr r3, _080634A4 @ =0x080FB864
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x4c
	strh r1, [r0]
	ldr r4, [sp, #0xe4]
	strh r2, [r4, #2]
	ldr r0, [sp, #0x4c]
	str r3, [sp]
	ldr r1, [sp, #0xd0]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	movs r3, #0xc0
	lsls r3, r3, #1
	add r0, sp, #4
	ldr r1, [sp, #0xd0]
	ldr r2, _080634A8 @ =0x06000E80
	bl func_08008F0C
	add r5, sp, #4
	mov sb, r5
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080634AC
	cmp r1, #0
	beq _0806349C
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806349C:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _08063572
	.align 2, 0
_080634A4: .4byte 0x080FB864
_080634A8: .4byte 0x06000E80
_080634AC:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x54]
	ldr r1, [r7]
	mov r4, sl
	subs r0, r4, r1
	asrs r4, r0, #4
	str r4, [sp, #0x50]
	add r2, sp, #0x54
	add r0, sp, #0x50
	cmp r4, #1
	bhs _080634C6
	adds r0, r2, #0
_080634C6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080634E6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080634E2
	mov r0, r8
	bl func_080D3BC0
_080634E2:
	ldr r1, [r7]
	b _080634EA
_080634E6:
	movs r0, #0
	mov r8, r0
_080634EA:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _0806350E
_080634F6:
	cmp r3, #0
	beq _08063506
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063506:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080634F6
_0806350E:
	adds r5, r3, #0
	ldr r0, [sp, #0x54]
	cmp r0, #1
	bne _0806352A
	cmp r5, #0
	beq _08063526
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063526:
	adds r5, #0x10
	b _0806354C
_0806352A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806354A
_08063532:
	cmp r2, #0
	beq _08063542
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063542:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08063532
_0806354A:
	adds r5, r2, #0
_0806354C:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _0806355C
_08063556:
	adds r0, #0x10
	cmp r0, r2
	bne _08063556
_0806355C:
	cmp r1, #0
	beq _08063566
	adds r0, r1, #0
	bl free
_08063566:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_08063572:
	ldr r3, _080635C0 @ =0x080FB86C
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x58
	strh r1, [r0]
	ldr r4, [sp, #0xe8]
	strh r2, [r4, #2]
	ldr r0, [sp, #0x58]
	str r3, [sp]
	ldr r1, [sp, #0xbc]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	movs r3, #0xc0
	lsls r3, r3, #1
	add r0, sp, #4
	ldr r1, [sp, #0xbc]
	ldr r2, _080635C4 @ =0x06001000
	bl func_08008F0C
	add r5, sp, #4
	mov sb, r5
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080635C8
	cmp r1, #0
	beq _080635B8
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080635B8:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _0806368E
	.align 2, 0
_080635C0: .4byte 0x080FB86C
_080635C4: .4byte 0x06001000
_080635C8:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x60]
	ldr r1, [r7]
	mov r4, sl
	subs r0, r4, r1
	asrs r4, r0, #4
	str r4, [sp, #0x5c]
	add r2, sp, #0x60
	add r0, sp, #0x5c
	cmp r4, #1
	bhs _080635E2
	adds r0, r2, #0
_080635E2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08063602
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080635FE
	mov r0, r8
	bl func_080D3BC0
_080635FE:
	ldr r1, [r7]
	b _08063606
_08063602:
	movs r0, #0
	mov r8, r0
_08063606:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _0806362A
_08063612:
	cmp r3, #0
	beq _08063622
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063622:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08063612
_0806362A:
	adds r5, r3, #0
	ldr r0, [sp, #0x60]
	cmp r0, #1
	bne _08063646
	cmp r5, #0
	beq _08063642
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063642:
	adds r5, #0x10
	b _08063668
_08063646:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08063666
_0806364E:
	cmp r2, #0
	beq _0806365E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806365E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806364E
_08063666:
	adds r5, r2, #0
_08063668:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _08063678
_08063672:
	adds r0, #0x10
	cmp r0, r2
	bne _08063672
_08063678:
	cmp r1, #0
	beq _08063682
	adds r0, r1, #0
	bl free
_08063682:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_0806368E:
	ldr r3, _080636DC @ =0x080FB874
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x64
	strh r1, [r0]
	ldr r4, [sp, #0xac]
	strh r2, [r4, #2]
	ldr r0, [sp, #0x64]
	str r3, [sp]
	ldr r1, [sp, #0xcc]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	movs r3, #0xc0
	lsls r3, r3, #1
	add r0, sp, #4
	ldr r1, [sp, #0xcc]
	ldr r2, _080636E0 @ =0x06001180
	bl func_08008F0C
	add r5, sp, #4
	mov sb, r5
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080636E4
	cmp r1, #0
	beq _080636D4
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080636D4:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080637AA
	.align 2, 0
_080636DC: .4byte 0x080FB874
_080636E0: .4byte 0x06001180
_080636E4:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x6c]
	ldr r1, [r7]
	mov r4, sl
	subs r0, r4, r1
	asrs r4, r0, #4
	str r4, [sp, #0x68]
	add r2, sp, #0x6c
	add r0, sp, #0x68
	cmp r4, #1
	bhs _080636FE
	adds r0, r2, #0
_080636FE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806371E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806371A
	mov r0, r8
	bl func_080D3BC0
_0806371A:
	ldr r1, [r7]
	b _08063722
_0806371E:
	movs r0, #0
	mov r8, r0
_08063722:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08063746
_0806372E:
	cmp r3, #0
	beq _0806373E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806373E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _0806372E
_08063746:
	adds r5, r3, #0
	ldr r0, [sp, #0x6c]
	cmp r0, #1
	bne _08063762
	cmp r5, #0
	beq _0806375E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806375E:
	adds r5, #0x10
	b _08063784
_08063762:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08063782
_0806376A:
	cmp r2, #0
	beq _0806377A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806377A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806376A
_08063782:
	adds r5, r2, #0
_08063784:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _08063794
_0806378E:
	adds r0, #0x10
	cmp r0, r2
	bne _0806378E
_08063794:
	cmp r1, #0
	beq _0806379E
	adds r0, r1, #0
	bl free
_0806379E:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080637AA:
	ldr r2, _080637F4 @ =0x080FB87C
	movs r1, #2
	add r0, sp, #0x70
	strh r1, [r0]
	ldr r3, [sp, #0xb0]
	strh r1, [r3, #2]
	ldr r0, [sp, #0x70]
	str r2, [sp]
	ldr r1, [sp, #0xb8]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	add r0, sp, #4
	ldr r1, [sp, #0xb8]
	ldr r2, _080637F8 @ =0x06001300
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #4
	mov sb, r4
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _080637FC
	cmp r1, #0
	beq _080637EC
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080637EC:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080638C2
	.align 2, 0
_080637F4: .4byte 0x080FB87C
_080637F8: .4byte 0x06001300
_080637FC:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x78]
	ldr r1, [r7]
	mov r3, sl
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r2, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _08063816
	adds r0, r2, #0
_08063816:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08063836
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08063832
	mov r0, r8
	bl func_080D3BC0
_08063832:
	ldr r1, [r7]
	b _0806383A
_08063836:
	movs r0, #0
	mov r8, r0
_0806383A:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _0806385E
_08063846:
	cmp r3, #0
	beq _08063856
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063856:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08063846
_0806385E:
	adds r5, r3, #0
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _0806387A
	cmp r5, #0
	beq _08063876
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08063876:
	adds r5, #0x10
	b _0806389C
_0806387A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806389A
_08063882:
	cmp r2, #0
	beq _08063892
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063892:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08063882
_0806389A:
	adds r5, r2, #0
_0806389C:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _080638AC
_080638A6:
	adds r0, #0x10
	cmp r0, r2
	bne _080638A6
_080638AC:
	cmp r1, #0
	beq _080638B6
	adds r0, r1, #0
	bl free
_080638B6:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r6, [sp, #0xf0]
	str r6, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080638C2:
	ldr r2, _0806390C @ =0x080FB830
	movs r1, #2
	add r0, sp, #0x7c
	strh r1, [r0]
	ldr r0, [sp, #0xb4]
	strh r1, [r0, #2]
	ldr r0, [sp, #0x7c]
	str r2, [sp]
	ldr r1, [sp, #0xc0]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	add r0, sp, #4
	ldr r1, [sp, #0xc0]
	ldr r2, _08063910 @ =0x06001380
	movs r3, #0x80
	bl func_08008F0C
	add r1, sp, #4
	mov sb, r1
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _08063914
	cmp r1, #0
	beq _08063904
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08063904:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _080639E2
	.align 2, 0
_0806390C: .4byte 0x080FB830
_08063910: .4byte 0x06001380
_08063914:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0x84
	str r0, [r1]
	ldr r0, [r7]
	ldr r5, [sp, #0xec]
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x80]
	ldr r0, [r1]
	add r2, sp, #0x80
	mov sl, r1
	cmp r4, r0
	bhs _08063932
	mov r2, sl
_08063932:
	ldr r0, [r2]
	adds r0, r4, r0
	cmp r0, #0
	beq _08063950
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08063954
	mov r0, r8
	bl func_080D3BC0
	b _08063954
_08063950:
	movs r0, #0
	mov r8, r0
_08063954:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r7]
	adds r3, r5, #0
	ldr r6, [sp, #0xec]
	cmp r2, r6
	beq _0806397C
_08063962:
	cmp r3, #0
	beq _08063972
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063972:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xec]
	cmp r2, r0
	bne _08063962
_0806397C:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _0806399A
	cmp r5, #0
	beq _08063996
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063996:
	adds r5, #0x10
	b _080639BC
_0806399A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080639BA
_080639A2:
	cmp r2, #0
	beq _080639B2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080639B2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080639A2
_080639BA:
	adds r5, r2, #0
_080639BC:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _080639CC
_080639C6:
	adds r0, #0x10
	cmp r0, r2
	bne _080639C6
_080639CC:
	cmp r1, #0
	beq _080639D6
	adds r0, r1, #0
	bl free
_080639D6:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_080639E2:
	ldr r1, _08063A14 @ =0x0875196C
	add r0, sp, #4
	ldr r2, _08063A18 @ =0x06001400
	movs r3, #0x80
	bl func_08008F0C
	add r2, sp, #4
	mov sb, r2
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _08063A1C
	cmp r1, #0
	beq _08063A0A
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08063A0A:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _08063AE6
	.align 2, 0
_08063A14: .4byte 0x0875196C
_08063A18: .4byte 0x06001400
_08063A1C:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0x8c
	str r0, [r1]
	ldr r0, [r7]
	ldr r6, [sp, #0xec]
	subs r0, r6, r0
	asrs r4, r0, #4
	add r0, sp, #0x88
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08063A3A
	mov r0, sl
_08063A3A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08063A58
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08063A5C
	mov r0, r8
	bl func_080D3BC0
	b _08063A5C
_08063A58:
	movs r0, #0
	mov r8, r0
_08063A5C:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r7]
	adds r3, r5, #0
	b _08063A7A
_08063A66:
	cmp r3, #0
	beq _08063A76
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063A76:
	adds r2, #0x10
	adds r3, #0x10
_08063A7A:
	ldr r0, [sp, #0xec]
	cmp r2, r0
	bne _08063A66
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _08063A9E
	cmp r5, #0
	beq _08063A9A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063A9A:
	adds r5, #0x10
	b _08063AC0
_08063A9E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08063ABE
_08063AA6:
	cmp r2, #0
	beq _08063AB6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063AB6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08063AA6
_08063ABE:
	adds r5, r2, #0
_08063AC0:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _08063AD0
_08063ACA:
	adds r0, #0x10
	cmp r0, r2
	bne _08063ACA
_08063AD0:
	cmp r1, #0
	beq _08063ADA
	adds r0, r1, #0
	bl free
_08063ADA:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_08063AE6:
	ldr r1, _08063B18 @ =0x087519EC
	add r0, sp, #4
	ldr r2, _08063B1C @ =0x05000020
	movs r3, #0x20
	bl func_08008F0C
	add r2, sp, #4
	mov sb, r2
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _08063B20
	cmp r1, #0
	beq _08063B0E
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08063B0E:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _08063BEA
	.align 2, 0
_08063B18: .4byte 0x087519EC
_08063B1C: .4byte 0x05000020
_08063B20:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0x94
	str r0, [r1]
	ldr r0, [r7]
	ldr r6, [sp, #0xec]
	subs r0, r6, r0
	asrs r4, r0, #4
	add r0, sp, #0x90
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08063B3E
	mov r0, sl
_08063B3E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08063B5C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08063B60
	mov r0, r8
	bl func_080D3BC0
	b _08063B60
_08063B5C:
	movs r0, #0
	mov r8, r0
_08063B60:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r7]
	adds r3, r5, #0
	b _08063B7E
_08063B6A:
	cmp r3, #0
	beq _08063B7A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063B7A:
	adds r2, #0x10
	adds r3, #0x10
_08063B7E:
	ldr r0, [sp, #0xec]
	cmp r2, r0
	bne _08063B6A
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _08063BA2
	cmp r5, #0
	beq _08063B9E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063B9E:
	adds r5, #0x10
	b _08063BC4
_08063BA2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08063BC2
_08063BAA:
	cmp r2, #0
	beq _08063BBA
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063BBA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08063BAA
_08063BC2:
	adds r5, r2, #0
_08063BC4:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _08063BD4
_08063BCE:
	adds r0, #0x10
	cmp r0, r2
	bne _08063BCE
_08063BD4:
	cmp r1, #0
	beq _08063BDE
	adds r0, r1, #0
	bl free
_08063BDE:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_08063BEA:
	ldr r1, _08063C1C @ =0x0875254C
	add r0, sp, #4
	ldr r2, _08063C20 @ =0x06001480
	movs r3, #0x20
	bl func_08008F0C
	add r2, sp, #4
	mov sb, r2
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _08063C24
	cmp r1, #0
	beq _08063C12
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08063C12:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _08063CEE
	.align 2, 0
_08063C1C: .4byte 0x0875254C
_08063C20: .4byte 0x06001480
_08063C24:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0x9c
	str r0, [r1]
	ldr r0, [r7]
	ldr r6, [sp, #0xec]
	subs r0, r6, r0
	asrs r4, r0, #4
	add r0, sp, #0x98
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08063C42
	mov r0, sl
_08063C42:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08063C60
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08063C64
	mov r0, r8
	bl func_080D3BC0
	b _08063C64
_08063C60:
	movs r0, #0
	mov r8, r0
_08063C64:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r7]
	adds r3, r5, #0
	b _08063C82
_08063C6E:
	cmp r3, #0
	beq _08063C7E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063C7E:
	adds r2, #0x10
	adds r3, #0x10
_08063C82:
	ldr r0, [sp, #0xec]
	cmp r2, r0
	bne _08063C6E
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _08063CA6
	cmp r5, #0
	beq _08063CA2
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063CA2:
	adds r5, #0x10
	b _08063CC8
_08063CA6:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08063CC6
_08063CAE:
	cmp r2, #0
	beq _08063CBE
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063CBE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08063CAE
_08063CC6:
	adds r5, r2, #0
_08063CC8:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _08063CD8
_08063CD2:
	adds r0, #0x10
	cmp r0, r2
	bne _08063CD2
_08063CD8:
	cmp r1, #0
	beq _08063CE2
	adds r0, r1, #0
	bl free
_08063CE2:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_08063CEE:
	ldr r1, _08063D20 @ =0x087525CC
	add r0, sp, #4
	ldr r2, _08063D24 @ =0x05000040
	movs r3, #0x20
	bl func_08008F0C
	add r2, sp, #4
	mov sb, r2
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _08063D28
	cmp r1, #0
	beq _08063D16
	adds r0, r1, #0
	add r1, sp, #4
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08063D16:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	b _08063DF2
	.align 2, 0
_08063D20: .4byte 0x087525CC
_08063D24: .4byte 0x05000040
_08063D28:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0xa4
	str r0, [r1]
	ldr r0, [r7]
	ldr r6, [sp, #0xec]
	subs r0, r6, r0
	asrs r4, r0, #4
	add r0, sp, #0xa0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08063D46
	mov r0, sl
_08063D46:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08063D64
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08063D68
	mov r0, r8
	bl func_080D3BC0
	b _08063D68
_08063D64:
	movs r0, #0
	mov r8, r0
_08063D68:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r7]
	adds r3, r5, #0
	b _08063D86
_08063D72:
	cmp r3, #0
	beq _08063D82
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063D82:
	adds r2, #0x10
	adds r3, #0x10
_08063D86:
	ldr r0, [sp, #0xec]
	cmp r2, r0
	bne _08063D72
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _08063DAA
	cmp r5, #0
	beq _08063DA6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063DA6:
	adds r5, #0x10
	b _08063DCC
_08063DAA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08063DCA
_08063DB2:
	cmp r2, #0
	beq _08063DC2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08063DC2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08063DB2
_08063DCA:
	adds r5, r2, #0
_08063DCC:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _08063DDC
_08063DD6:
	adds r0, #0x10
	cmp r0, r2
	bne _08063DD6
_08063DDC:
	cmp r1, #0
	beq _08063DE6
	adds r0, r1, #0
	bl free
_08063DE6:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_08063DF2:
	ldr r0, [sp, #0xa8]
	add sp, #0xf4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_08063E04
func_08063E04: @ 0x08063E04
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r7, r2, #0
	cmp r1, #0xf
	bls _08063E12
	movs r0, #0
	b _08063E50
_08063E12:
	lsls r4, r1, #1
	adds r4, r4, r1
	lsls r4, r4, #6
	adds r4, r4, r1
	lsls r4, r4, #2
	adds r4, r4, r0
	add r1, sp, #4
	movs r5, #0xc
	movs r6, #2
	adds r0, r1, #0
	strh r5, [r0]
	strh r6, [r1, #2]
	ldr r0, [sp, #4]
	movs r1, #0x97
	lsls r1, r1, #5
	adds r4, r4, r1
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	add r0, sp, #8
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #8]
	str r7, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	adds r0, r4, #0
_08063E50:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_08063E58
func_08063E58: @ 0x08063E58
	push {lr}
	bl func_08076EA8
	movs r0, #1
	pop {r1}
	bx r1

	thumb_func_start func_08063E64
func_08063E64: @ 0x08063E64
	push {lr}
	sub sp, #8
	movs r1, #0xa
	str r1, [sp]
	bl GetAffection__C6Animal
	movs r1, #0x19
	bl func_080D0EDA
	str r0, [sp, #4]
	add r2, sp, #4
	ldr r1, [sp]
	mov r3, sp
	cmp r1, r0
	bls _08063E84
	adds r3, r2, #0
_08063E84:
	ldr r0, [r3]
	add sp, #8
	pop {r1}
	bx r1

	thumb_func_start func_08063E8C
func_08063E8C: @ 0x08063E8C
	push {r4, lr}
	adds r4, r0, #0
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08063E9E
	movs r0, #0x58
	b _08063EB0
_08063E9E:
	adds r0, r4, #0
	bl IsUnhappy__C9Livestock
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08063EAE
	movs r0, #0x38
	b _08063EB0
_08063EAE:
	movs r0, #0x48
_08063EB0:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08063EB8
func_08063EB8: @ 0x08063EB8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x6c
	str r0, [sp, #0x3c]
	str r1, [sp, #0x40]
	str r2, [sp, #0x44]
	ldr r1, [sp, #0x8c]
	ldr r2, [sp, #0x40]
	lsls r0, r2, #2
	adds r4, r0, r2
	adds r5, r4, #5
	mov sl, r5
	add r0, sp, #8
	lsls r2, r5, #3
	strh r2, [r0]
	movs r0, #8
	str r0, [sp, #0xc]
	str r3, [sp, #0x10]
	str r1, [sp, #0x14]
	ldr r7, [sp, #0x3c]
	ldr r0, _08063F28 @ =0x00000594
	adds r6, r7, r0
	mov r1, sp
	adds r1, #8
	str r1, [sp, #0x48]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08063F2C
	cmp r1, #0
	beq _08063F08
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r5, r7}
	stm r0!, {r3, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08063F08:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	str r2, [sp, #0x58]
	adds r4, #7
	str r4, [sp, #0x54]
	add r0, sp, #0x18
	mov r8, r0
	mov r1, sl
	lsls r1, r1, #6
	str r1, [sp, #0x5c]
	mov r2, sp
	adds r2, #0x38
	str r2, [sp, #0x60]
	b _08064012
	.align 2, 0
_08063F28: .4byte 0x00000594
_08063F2C:
	str r1, [sp, #0x64]
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r1, [r6]
	ldr r3, [sp, #0x64]
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r2, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _08063F46
	adds r0, r2, #0
_08063F46:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08063F66
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08063F62
	mov r0, sb
	bl func_080D3BC0
_08063F62:
	ldr r1, [r6]
	b _08063F6A
_08063F66:
	movs r0, #0
	mov sb, r0
_08063F6A:
	adds r5, r0, #0
	str r5, [sp, #0x68]
	adds r2, r1, #0
	adds r3, r5, #0
	mov r4, sl
	lsls r4, r4, #3
	str r4, [sp, #0x58]
	mov r5, sl
	adds r5, #2
	str r5, [sp, #0x54]
	add r7, sp, #0x18
	mov r8, r7
	mov r0, sl
	lsls r0, r0, #6
	str r0, [sp, #0x5c]
	mov r1, sp
	adds r1, #0x38
	str r1, [sp, #0x60]
	ldr r4, [sp, #0x64]
	cmp r2, r4
	beq _08063FAE
_08063F94:
	cmp r3, #0
	beq _08063FA4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08063FA4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x64]
	cmp r2, r5
	bne _08063F94
_08063FAE:
	adds r5, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _08063FCA
	cmp r5, #0
	beq _08063FC6
	adds r0, r5, #0
	ldr r1, [sp, #0x48]
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08063FC6:
	adds r5, #0x10
	b _08063FEC
_08063FCA:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08063FEA
_08063FD2:
	cmp r2, #0
	beq _08063FE2
	adds r0, r2, #0
	ldr r1, [sp, #0x48]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08063FE2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08063FD2
_08063FEA:
	adds r5, r2, #0
_08063FEC:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08063FFC
_08063FF6:
	adds r0, #0x10
	cmp r0, r2
	bne _08063FF6
_08063FFC:
	cmp r1, #0
	beq _08064006
	adds r0, r1, #0
	bl free
_08064006:
	ldr r0, [sp, #0x68]
	add r0, sb
	ldr r1, [sp, #0x68]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08064012:
	ldr r2, [sp, #0x3c]
	ldr r2, [r2, #4]
	str r2, [sp, #0x4c]
	ldr r0, [sp, #0x44]
	bl IsFestivalWinner__C6Animal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08064044
	mov r1, sl
	subs r1, #2
	ldr r3, [sp, #0x4c]
	ldr r0, [r3, #0x18]
	lsls r1, r1, #6
	adds r0, r0, r1
	adds r0, #2
	movs r1, #1
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	movs r1, #0xa0
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
_08064044:
	ldr r0, [sp, #0x44]
	bl func_08063E64
	adds r6, r0, #0
	movs r4, #0
	cmp r4, r6
	bhs _0806407A
	movs r5, #0xa
_08064054:
	ldr r7, [sp, #0x4c]
	ldr r0, [r7, #0x18]
	ldr r2, [sp, #0x54]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r5
	movs r1, #2
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	movs r1, #0xa4
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r4, #1
	cmp r4, r6
	blo _08064054
_0806407A:
	movs r5, #0
	add r3, sp, #0x58
	ldrh r4, [r3]
	mov r3, r8
	strh r4, [r3]
	ldr r0, [sp, #0x44]
	bl GetName__C6Animal
	adds r2, r0, #0
	ldr r0, [sp, #0x3c]
	ldr r1, [sp, #0x40]
	bl func_08063E04
	mov r4, r8
	str r0, [r4, #4]
	movs r0, #3
	ldr r7, [sp, #0x40]
	ands r0, r7
	lsls r4, r0, #1
	adds r4, r4, r0
	lsls r4, r4, #3
	movs r0, #0xc0
	lsls r0, r0, #1
	adds r4, r4, r0
	ldr r1, [sp, #0x4c]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x5c]
	adds r0, r0, r2
	adds r0, #6
	str r5, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	adds r1, r4, #0
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r4, r4, r0
	mov r3, r8
	str r4, [r3, #8]
	movs r0, #0xc0
	lsls r0, r0, #2
	str r0, [r3, #0xc]
	ldr r4, [sp, #0x3c]
	ldr r5, _080640FC @ =0x000005A4
	adds r6, r4, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08064100
	cmp r1, #0
	beq _080640F4
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x24]
	str r1, [r0]
_080640F4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080641C6
	.align 2, 0
_080640FC: .4byte 0x000005A4
_08064100:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r1, [r6]
	mov r4, sl
	subs r0, r4, r1
	asrs r4, r0, #4
	str r4, [sp, #0x30]
	add r2, sp, #0x34
	add r0, sp, #0x30
	cmp r4, #1
	bhs _0806411A
	adds r0, r2, #0
_0806411A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806413A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08064136
	mov r0, sb
	bl func_080D3BC0
_08064136:
	ldr r1, [r6]
	b _0806413E
_0806413A:
	movs r0, #0
	mov sb, r0
_0806413E:
	adds r5, r0, #0
	str r5, [sp, #0x68]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08064162
_0806414A:
	cmp r3, #0
	beq _0806415A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806415A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _0806414A
_08064162:
	adds r5, r3, #0
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _0806417E
	cmp r5, #0
	beq _0806417A
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x24]
	str r1, [r0]
_0806417A:
	adds r5, #0x10
	b _080641A0
_0806417E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806419E
_08064186:
	cmp r2, #0
	beq _08064196
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x24]
	str r1, [r0]
_08064196:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08064186
_0806419E:
	adds r5, r2, #0
_080641A0:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080641B0
_080641AA:
	adds r0, #0x10
	cmp r0, r2
	bne _080641AA
_080641B0:
	cmp r1, #0
	beq _080641BA
	adds r0, r1, #0
	bl free
_080641BA:
	ldr r0, [sp, #0x68]
	add r0, sb
	ldr r1, [sp, #0x68]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080641C6:
	ldr r2, [sp, #0x4c]
	ldr r4, [r2, #0x18]
	ldr r3, [sp, #0x5c]
	adds r4, r4, r3
	adds r4, #0x20
	ldr r0, [sp, #0x44]
	bl func_08063E8C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r6, #0
	str r6, [sp]
	movs r5, #0x20
	str r5, [sp, #4]
	adds r0, r4, #0
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [sp, #0x44]
	bl GetAge__C6Animal
	movs r1, #0x78
	bl func_080D0EDA
	ldr r4, [sp, #0x4c]
	ldr r1, [r4, #0x18]
	ldr r7, [sp, #0x5c]
	adds r1, r1, r7
	adds r1, #0x34
	movs r2, #0x90
	lsls r2, r2, #1
	str r5, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r4, #0x18]
	adds r0, r0, r7
	adds r0, #0x36
	str r6, [sp]
	str r5, [sp, #4]
	movs r1, #0x98
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	movs r5, #0
	ldr r0, [sp, #0x3c]
	ldr r1, _08064258 @ =0x0000058C
	adds r4, r0, r1
	ldr r0, [r4]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	cmp r0, #5
	bhi _0806423A
	movs r5, #1
_0806423A:
	ldr r0, [sp, #0x44]
	bl GetAge__C6Animal
	ldr r1, [r4]
	adds r4, r0, r5
	ldrb r0, [r1, #0x11]
	ldr r2, [sp, #0x60]
	strb r0, [r2]
	add r6, sp, #0x38
	cmp r4, #0x1d
	bhi _0806425C
	adds r5, r4, #0
	movs r3, #0
	b _08064270
	.align 2, 0
_08064258: .4byte 0x0000058C
_0806425C:
	adds r0, r4, #0
	movs r1, #0x1e
	bl __umodsi3
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1e
	bl func_080D0EDA
	adds r3, r0, #0
_08064270:
	ldrb r0, [r6]
	lsls r1, r0, #0x19
	lsrs r1, r1, #0x1b
	adds r2, r5, #0
	subs r2, #0x1e
	subs r2, r1, r2
	cmp r2, #0x1d
	bhi _08064284
	adds r3, #1
	b _08064286
_08064284:
	subs r2, #0x1e
_08064286:
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	movs r4, #4
	rsbs r4, r4, #0
	subs r0, r0, r3
	movs r1, #3
	ands r0, r1
	ldrb r1, [r6]
	ands r4, r1
	orrs r4, r0
	movs r0, #0x1f
	ands r2, r0
	lsls r1, r2, #2
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r4, r0
	orrs r4, r1
	strb r4, [r6]
	ldr r3, [sp, #0x4c]
	ldr r0, [r3, #0x18]
	ldr r5, [sp, #0x54]
	lsls r6, r5, #6
	adds r0, r0, r6
	adds r0, #0x22
	lsls r2, r4, #0x1e
	lsrs r2, r2, #0x1e
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #0x12
	movs r7, #0xd0
	lsls r7, r7, #0xf
	adds r1, r1, r7
	lsrs r1, r1, #0x10
	movs r2, #0
	mov r8, r2
	str r2, [sp]
	movs r5, #0x20
	str r5, [sp, #4]
	movs r2, #6
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #0x19
	lsrs r4, r4, #0x1b
	adds r4, #1
	ldr r3, [sp, #0x4c]
	ldr r1, [r3, #0x18]
	adds r1, r1, r6
	adds r1, #0x34
	movs r2, #0x90
	lsls r2, r2, #1
	str r5, [sp]
	adds r0, r4, #0
	movs r3, #0
	bl func_0804EDB4
	ldr r4, [sp, #0x4c]
	ldr r0, [r4, #0x18]
	adds r0, r0, r6
	adds r0, #0x36
	mov r7, r8
	str r7, [sp]
	str r5, [sp, #4]
	movs r1, #0x9c
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	add sp, #0x6c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08064320
func_08064320: @ 0x08064320
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _08064384 @ =0x080FB880
	str r0, [sp]
	adds r0, r5, #0
	movs r3, #0x2d
	bl func_08062E9C
	ldr r0, _08064388 @ =0x000005B4
	adds r1, r5, r0
	ldr r0, _0806438C @ =vtable_unk_080E7A58
	str r0, [r1]
	movs r6, #0
	movs r7, #0
	ldr r1, _08064390 @ =0x0000058C
	adds r0, r5, r1
	ldr r0, [r0]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetCapacity__C4Coop
	mov r8, r0
	cmp r6, r8
	bhs _080643B4
_08064358:
	ldr r1, _08064390 @ =0x0000058C
	adds r0, r5, r1
	ldr r0, [r0]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r7, #0
	bl GetChicken__C4CoopUi
	adds r4, r0, #0
	cmp r4, #0
	beq _080643AE
	bl GetGrowthStage__C7Chicken
	cmp r0, #0
	beq _0806439C
	cmp r0, #1
	bne _0806439C
	ldr r3, _08064394 @ =0x0875268C
	ldr r0, _08064398 @ =0x0875270C
	b _080643A0
	.align 2, 0
_08064384: .4byte 0x080FB880
_08064388: .4byte 0x000005B4
_0806438C: .4byte vtable_unk_080E7A58
_08064390: .4byte 0x0000058C
_08064394: .4byte 0x0875268C
_08064398: .4byte 0x0875270C
_0806439C:
	ldr r3, _080643D4 @ =0x0875272C
	ldr r0, _080643D8 @ =0x087527AC
_080643A0:
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl func_08063EB8
	adds r6, #1
_080643AE:
	adds r7, #1
	cmp r7, r8
	blo _08064358
_080643B4:
	ldr r0, [r5, #4]
	lsls r1, r6, #2
	adds r1, r1, r6
	adds r1, #5
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	adds r0, r5, #0
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080643D4: .4byte 0x0875272C
_080643D8: .4byte 0x087527AC

	thumb_func_start func_080643DC
func_080643DC: @ 0x080643DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r0, _08064458 @ =0x080FB894
	str r0, [sp]
	adds r0, r7, #0
	movs r3, #0x55
	bl func_08062E9C
	ldr r0, _0806445C @ =0x000005B4
	adds r1, r7, r0
	ldr r0, _08064460 @ =vtable_unk_080E7A48
	str r0, [r1]
	movs r1, #0
	mov r8, r1
	mov sb, r1
	ldr r2, _08064464 @ =0x0000058C
	adds r0, r7, r2
	ldr r0, [r0]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetCapacity__C4Barn
	mov sl, r0
	cmp r8, sl
	bhs _080644C2
_0806441A:
	ldr r2, _08064464 @ =0x0000058C
	adds r0, r7, r2
	ldr r0, [r0]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	mov r1, sb
	bl GetCow__C4BarnUi
	adds r4, r0, #0
	cmp r4, #0
	beq _080644BA
	bl GetGrowthStage__C3Cow
	cmp r0, #1
	beq _08064494
	cmp r0, #1
	blo _080644A4
	cmp r0, #2
	bne _080644A4
	ldr r6, _08064468 @ =0x08751B4C
	ldr r5, _0806446C @ =0x08751BCC
	adds r0, r4, #0
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08064478
	ldr r6, _08064470 @ =0x08751C8C
	ldr r5, _08064474 @ =0x08751D0C
	b _080644A8
	.align 2, 0
_08064458: .4byte 0x080FB894
_0806445C: .4byte 0x000005B4
_08064460: .4byte vtable_unk_080E7A48
_08064464: .4byte 0x0000058C
_08064468: .4byte 0x08751B4C
_0806446C: .4byte 0x08751BCC
_08064470: .4byte 0x08751C8C
_08064474: .4byte 0x08751D0C
_08064478:
	adds r0, r4, #0
	bl HasBeenMilked__C3Cow
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080644A8
	ldr r6, _0806448C @ =0x08751DCC
	ldr r5, _08064490 @ =0x08751E4C
	b _080644A8
	.align 2, 0
_0806448C: .4byte 0x08751DCC
_08064490: .4byte 0x08751E4C
_08064494:
	ldr r6, _0806449C @ =0x08751BEC
	ldr r5, _080644A0 @ =0x08751C6C
	b _080644A8
	.align 2, 0
_0806449C: .4byte 0x08751BEC
_080644A0: .4byte 0x08751C6C
_080644A4:
	ldr r6, _080644E8 @ =0x08751D2C
	ldr r5, _080644EC @ =0x08751DAC
_080644A8:
	str r5, [sp]
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	adds r3, r6, #0
	bl func_08063EB8
	movs r2, #1
	add r8, r2
_080644BA:
	movs r0, #1
	add sb, r0
	cmp sb, sl
	blo _0806441A
_080644C2:
	ldr r0, [r7, #4]
	mov r2, r8
	lsls r1, r2, #2
	add r1, r8
	adds r1, #5
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	adds r0, r7, #0
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080644E8: .4byte 0x08751D2C
_080644EC: .4byte 0x08751DAC

	thumb_func_start func_080644F0
func_080644F0: @ 0x080644F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r0, _08064568 @ =0x080FB8A4
	str r0, [sp]
	adds r0, r7, #0
	movs r3, #0x55
	bl func_08062E9C
	ldr r0, _0806456C @ =0x000005B4
	adds r1, r7, r0
	ldr r0, _08064570 @ =vtable_unk_080E7A38
	str r0, [r1]
	movs r1, #0
	mov r8, r1
	mov sb, r1
	ldr r2, _08064574 @ =0x0000058C
	adds r0, r7, r2
	ldr r0, [r0]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetCapacity__C4Barn
	mov sl, r0
	cmp r8, sl
	bhs _080645C2
_0806452E:
	ldr r2, _08064574 @ =0x0000058C
	adds r0, r7, r2
	ldr r0, [r0]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	mov r1, sb
	bl GetSheep__C4BarnUi
	adds r4, r0, #0
	cmp r4, #0
	beq _080645BA
	bl GetGrowthStage__C5Sheep
	cmp r0, #0
	beq _080645A4
	cmp r0, #1
	bne _080645A4
	ldr r6, _08064578 @ =0x0875320C
	ldr r5, _0806457C @ =0x0875328C
	adds r0, r4, #0
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08064588
	ldr r6, _08064580 @ =0x0875334C
	ldr r5, _08064584 @ =0x087533CC
	b _080645A8
	.align 2, 0
_08064568: .4byte 0x080FB8A4
_0806456C: .4byte 0x000005B4
_08064570: .4byte vtable_unk_080E7A38
_08064574: .4byte 0x0000058C
_08064578: .4byte 0x0875320C
_0806457C: .4byte 0x0875328C
_08064580: .4byte 0x0875334C
_08064584: .4byte 0x087533CC
_08064588:
	adds r0, r4, #0
	bl IsSheared__C5Sheep
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080645A8
	ldr r6, _0806459C @ =0x087532AC
	ldr r5, _080645A0 @ =0x0875332C
	b _080645A8
	.align 2, 0
_0806459C: .4byte 0x087532AC
_080645A0: .4byte 0x0875332C
_080645A4:
	ldr r6, _080645E8 @ =0x087533EC
	ldr r5, _080645EC @ =0x0875346C
_080645A8:
	str r5, [sp]
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	adds r3, r6, #0
	bl func_08063EB8
	movs r2, #1
	add r8, r2
_080645BA:
	movs r0, #1
	add sb, r0
	cmp sb, sl
	blo _0806452E
_080645C2:
	ldr r0, [r7, #4]
	mov r2, r8
	lsls r1, r2, #2
	add r1, r8
	adds r1, #5
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	adds r0, r7, #0
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080645E8: .4byte 0x087533EC
_080645EC: .4byte 0x0875346C

	thumb_func_start func_080645F0
func_080645F0: @ 0x080645F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x168
	str r0, [sp, #0xf0]
	ldr r0, _080646BC @ =0x080FB8B4
	str r0, [sp]
	ldr r0, [sp, #0xf0]
	movs r3, #0x35
	bl func_08076BFC
	ldr r0, [sp, #0xf0]
	ldr r2, _080646C0 @ =0x000005B4
	adds r1, r0, r2
	ldr r0, _080646C4 @ =vtable_unk_080E7A28
	str r0, [r1]
	movs r0, #6
	add r3, sp, #0x28
	mov r4, sp
	adds r4, #0x34
	str r4, [sp, #0x110]
	mov r5, sp
	adds r5, #0x40
	str r5, [sp, #0x114]
	mov r7, sp
	adds r7, #0x4c
	str r7, [sp, #0x118]
	movs r1, #1
	rsbs r1, r1, #0
_0806462E:
	subs r0, #1
	cmp r0, r1
	bne _0806462E
	ldr r0, [sp, #0xf0]
	ldr r2, _080646C8 @ =0x00002164
	adds r1, r0, r2
	movs r0, #0
	str r0, [r1]
	ldr r4, [sp, #0xf0]
	ldr r4, [r4, #4]
	str r4, [sp, #0xf4]
	ldr r2, _080646CC @ =0x080FB8C8
	movs r1, #2
	add r0, sp, #0x28
	strh r1, [r0]
	strh r1, [r3, #2]
	ldr r0, [sp, #0x28]
	ldr r5, [sp, #0xf0]
	ldr r7, _080646D0 @ =0x000005BC
	adds r4, r5, r7
	str r2, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r0, [r5]
	bl func_08008910
	adds r6, r0, #0
	movs r0, #0x38
	lsls r2, r0, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	adds r1, r4, #0
	movs r3, #0x80
	bl func_08008F0C
	add r1, sp, #8
	mov sb, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080646DC
	cmp r1, #0
	beq _0806469A
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806469A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r5, [sp, #0xf0]
	movs r7, #0xc8
	lsls r7, r7, #3
	adds r5, r5, r7
	mov sl, r5
	ldr r1, _080646D4 @ =0x00000744
	ldr r0, [sp, #0xf0]
	adds r1, r0, r1
	str r1, [sp, #0x10c]
	ldr r2, _080646D8 @ =0x00000948
	adds r2, r0, r2
	str r2, [sp, #0x130]
	b _080647C2
	.align 2, 0
_080646BC: .4byte 0x080FB8B4
_080646C0: .4byte 0x000005B4
_080646C4: .4byte vtable_unk_080E7A28
_080646C8: .4byte 0x00002164
_080646CC: .4byte 0x080FB8C8
_080646D0: .4byte 0x000005BC
_080646D4: .4byte 0x00000744
_080646D8: .4byte 0x00000948
_080646DC:
	str r1, [sp, #0x160]
	movs r0, #1
	str r0, [sp, #0x30]
	ldr r0, [r6]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x2c]
	add r1, sp, #0x30
	add r0, sp, #0x2c
	cmp r4, #1
	bhs _080646F6
	adds r0, r1, #0
_080646F6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08064714
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08064718
	mov r0, r8
	bl func_080D3BC0
	b _08064718
_08064714:
	movs r0, #0
	mov r8, r0
_08064718:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0xf0]
	movs r5, #0xc8
	lsls r5, r5, #3
	adds r4, r4, r5
	mov sl, r4
	ldr r0, _08064774 @ =0x00000744
	ldr r7, [sp, #0xf0]
	adds r0, r7, r0
	str r0, [sp, #0x10c]
	ldr r1, _08064778 @ =0x00000948
	adds r1, r7, r1
	str r1, [sp, #0x130]
	ldr r4, [sp, #0x160]
	cmp r2, r4
	beq _08064758
_0806473E:
	cmp r3, #0
	beq _0806474E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806474E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x160]
	cmp r2, r5
	bne _0806473E
_08064758:
	adds r5, r3, #0
	ldr r0, [sp, #0x30]
	cmp r0, #1
	bne _0806477C
	cmp r5, #0
	beq _08064770
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064770:
	adds r5, #0x10
	b _0806479E
	.align 2, 0
_08064774: .4byte 0x00000744
_08064778: .4byte 0x00000948
_0806477C:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806479C
_08064784:
	cmp r2, #0
	beq _08064794
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064794:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08064784
_0806479C:
	adds r5, r2, #0
_0806479E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080647AE
_080647A8:
	adds r1, #0x10
	cmp r1, r2
	bne _080647A8
_080647AE:
	cmp r0, #0
	beq _080647B6
	bl free
_080647B6:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r1, [sp, #0x164]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080647C2:
	ldr r3, _08064824 @ =0x080FB8CC
	movs r1, #4
	movs r2, #2
	add r0, sp, #0x34
	strh r1, [r0]
	ldr r4, [sp, #0x110]
	strh r2, [r4, #2]
	ldr r0, [sp, #0x34]
	str r3, [sp]
	mov r1, sl
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r5, [sp, #0xf0]
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r0, #0
	movs r7, #0x3c
	lsls r2, r7, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	mov r1, sl
	bl func_08008F0C
	add r0, sp, #8
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08064828
	cmp r1, #0
	beq _0806481A
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806481A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080648E8
	.align 2, 0
_08064824: .4byte 0x080FB8CC
_08064828:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r1, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _08064840
	adds r0, r1, #0
_08064840:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806485E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08064862
	mov r0, r8
	bl func_080D3BC0
	b _08064862
_0806485E:
	movs r0, #0
	mov r8, r0
_08064862:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _08064886
_0806486E:
	cmp r3, #0
	beq _0806487E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806487E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _0806486E
_08064886:
	adds r5, r3, #0
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _080648A2
	cmp r5, #0
	beq _0806489E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806489E:
	adds r5, #0x10
	b _080648C4
_080648A2:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080648C2
_080648AA:
	cmp r2, #0
	beq _080648BA
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080648BA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080648AA
_080648C2:
	adds r5, r2, #0
_080648C4:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080648D4
_080648CE:
	adds r1, #0x10
	cmp r1, r2
	bne _080648CE
_080648D4:
	cmp r0, #0
	beq _080648DC
	bl free
_080648DC:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r1, [sp, #0x164]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080648E8:
	ldr r3, _08064948 @ =0x080FB8D4
	movs r1, #8
	movs r2, #2
	add r0, sp, #0x40
	strh r1, [r0]
	ldr r4, [sp, #0x114]
	strh r2, [r4, #2]
	ldr r0, [sp, #0x40]
	str r3, [sp]
	ldr r1, [sp, #0x10c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r5, [sp, #0xf0]
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #2
	adds r6, r0, #0
	movs r7, #0x44
	lsls r2, r7, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	ldr r1, [sp, #0x10c]
	bl func_08008F0C
	add r0, sp, #8
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806494C
	cmp r1, #0
	beq _08064940
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08064940:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08064A0C
	.align 2, 0
_08064948: .4byte 0x080FB8D4
_0806494C:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x48]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x44]
	add r1, sp, #0x48
	add r0, sp, #0x44
	cmp r4, #1
	bhs _08064964
	adds r0, r1, #0
_08064964:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08064982
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08064986
	mov r0, r8
	bl func_080D3BC0
	b _08064986
_08064982:
	movs r0, #0
	mov r8, r0
_08064986:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _080649AA
_08064992:
	cmp r3, #0
	beq _080649A2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080649A2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08064992
_080649AA:
	adds r5, r3, #0
	ldr r0, [sp, #0x48]
	cmp r0, #1
	bne _080649C6
	cmp r5, #0
	beq _080649C2
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080649C2:
	adds r5, #0x10
	b _080649E8
_080649C6:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080649E6
_080649CE:
	cmp r2, #0
	beq _080649DE
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080649DE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080649CE
_080649E6:
	adds r5, r2, #0
_080649E8:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080649F8
_080649F2:
	adds r1, #0x10
	cmp r1, r2
	bne _080649F2
_080649F8:
	cmp r0, #0
	beq _08064A00
	bl free
_08064A00:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r1, [sp, #0x164]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08064A0C:
	ldr r3, _08064A6C @ =0x080FB8E0
	movs r1, #0xc
	movs r2, #2
	add r0, sp, #0x4c
	strh r1, [r0]
	ldr r4, [sp, #0x118]
	strh r2, [r4, #2]
	ldr r0, [sp, #0x4c]
	str r3, [sp]
	ldr r1, [sp, #0x130]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r5, [sp, #0xf0]
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r6, r0, #0
	movs r7, #0x54
	lsls r2, r7, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	ldr r1, [sp, #0x130]
	bl func_08008F0C
	add r0, sp, #8
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08064A70
	cmp r1, #0
	beq _08064A64
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08064A64:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08064B30
	.align 2, 0
_08064A6C: .4byte 0x080FB8E0
_08064A70:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x54]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x50]
	add r1, sp, #0x54
	add r0, sp, #0x50
	cmp r4, #1
	bhs _08064A88
	adds r0, r1, #0
_08064A88:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08064AA6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08064AAA
	mov r0, r8
	bl func_080D3BC0
	b _08064AAA
_08064AA6:
	movs r0, #0
	mov r8, r0
_08064AAA:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _08064ACE
_08064AB6:
	cmp r3, #0
	beq _08064AC6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064AC6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08064AB6
_08064ACE:
	adds r5, r3, #0
	ldr r0, [sp, #0x54]
	cmp r0, #1
	bne _08064AEA
	cmp r5, #0
	beq _08064AE6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064AE6:
	adds r5, #0x10
	b _08064B0C
_08064AEA:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08064B0A
_08064AF2:
	cmp r2, #0
	beq _08064B02
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064B02:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08064AF2
_08064B0A:
	adds r5, r2, #0
_08064B0C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08064B1C
_08064B16:
	adds r1, #0x10
	cmp r1, r2
	bne _08064B16
_08064B1C:
	cmp r0, #0
	beq _08064B24
	bl free
_08064B24:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r1, [sp, #0x164]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08064B30:
	ldr r2, [sp, #0xf0]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08064B74 @ =0x0875254C
	movs r3, #0x6c
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08064B78
	cmp r1, #0
	beq _08064B6A
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064B6A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08064C3E
	.align 2, 0
_08064B74: .4byte 0x0875254C
_08064B78:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x5c]
	ldr r1, [r6]
	mov r3, sl
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x58]
	add r2, sp, #0x5c
	add r0, sp, #0x58
	cmp r4, #1
	bhs _08064B92
	adds r0, r2, #0
_08064B92:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08064BB2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08064BAE
	mov r0, r8
	bl func_080D3BC0
_08064BAE:
	ldr r1, [r6]
	b _08064BB6
_08064BB2:
	movs r0, #0
	mov r8, r0
_08064BB6:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08064BDA
_08064BC2:
	cmp r3, #0
	beq _08064BD2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064BD2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08064BC2
_08064BDA:
	adds r5, r3, #0
	ldr r0, [sp, #0x5c]
	cmp r0, #1
	bne _08064BF6
	cmp r5, #0
	beq _08064BF2
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08064BF2:
	adds r5, #0x10
	b _08064C18
_08064BF6:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08064C16
_08064BFE:
	cmp r2, #0
	beq _08064C0E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064C0E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08064BFE
_08064C16:
	adds r5, r2, #0
_08064C18:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08064C28
_08064C22:
	adds r0, #0x10
	cmp r0, r2
	bne _08064C22
_08064C28:
	cmp r1, #0
	beq _08064C32
	adds r0, r1, #0
	bl free
_08064C32:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08064C3E:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08064C78 @ =0x087525CC
	add r0, sp, #8
	ldr r2, _08064C7C @ =0x05000020
	movs r3, #0x20
	bl func_08008F0C
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08064C80
	cmp r1, #0
	beq _08064C70
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08064C70:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08064D46
	.align 2, 0
_08064C78: .4byte 0x087525CC
_08064C7C: .4byte 0x05000020
_08064C80:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x64]
	ldr r1, [r6]
	mov r7, sl
	subs r0, r7, r1
	asrs r4, r0, #4
	str r4, [sp, #0x60]
	add r2, sp, #0x64
	add r0, sp, #0x60
	cmp r4, #1
	bhs _08064C9A
	adds r0, r2, #0
_08064C9A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08064CBA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08064CB6
	mov r0, r8
	bl func_080D3BC0
_08064CB6:
	ldr r1, [r6]
	b _08064CBE
_08064CBA:
	movs r0, #0
	mov r8, r0
_08064CBE:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08064CE2
_08064CCA:
	cmp r3, #0
	beq _08064CDA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064CDA:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08064CCA
_08064CE2:
	adds r5, r3, #0
	ldr r0, [sp, #0x64]
	cmp r0, #1
	bne _08064CFE
	cmp r5, #0
	beq _08064CFA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08064CFA:
	adds r5, #0x10
	b _08064D20
_08064CFE:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08064D1E
_08064D06:
	cmp r2, #0
	beq _08064D16
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064D16:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08064D06
_08064D1E:
	adds r5, r2, #0
_08064D20:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08064D30
_08064D2A:
	adds r0, #0x10
	cmp r0, r2
	bne _08064D2A
_08064D30:
	cmp r1, #0
	beq _08064D3A
	adds r0, r1, #0
	bl free
_08064D3A:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08064D46:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08064D88 @ =0x08752DCC
	movs r3, #0x70
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x20
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08064D8C
	cmp r1, #0
	beq _08064D80
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064D80:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08064E52
	.align 2, 0
_08064D88: .4byte 0x08752DCC
_08064D8C:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x6c]
	ldr r1, [r6]
	mov r3, sl
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x68]
	add r2, sp, #0x6c
	add r0, sp, #0x68
	cmp r4, #1
	bhs _08064DA6
	adds r0, r2, #0
_08064DA6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08064DC6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08064DC2
	mov r0, r8
	bl func_080D3BC0
_08064DC2:
	ldr r1, [r6]
	b _08064DCA
_08064DC6:
	movs r0, #0
	mov r8, r0
_08064DCA:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08064DEE
_08064DD6:
	cmp r3, #0
	beq _08064DE6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064DE6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08064DD6
_08064DEE:
	adds r5, r3, #0
	ldr r0, [sp, #0x6c]
	cmp r0, #1
	bne _08064E0A
	cmp r5, #0
	beq _08064E06
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08064E06:
	adds r5, #0x10
	b _08064E2C
_08064E0A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08064E2A
_08064E12:
	cmp r2, #0
	beq _08064E22
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064E22:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08064E12
_08064E2A:
	adds r5, r2, #0
_08064E2C:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08064E3C
_08064E36:
	adds r0, #0x10
	cmp r0, r2
	bne _08064E36
_08064E3C:
	cmp r1, #0
	beq _08064E46
	adds r0, r1, #0
	bl free
_08064E46:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08064E52:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08064E94 @ =0x08752B4C
	movs r3, #0x71
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x20
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08064E98
	cmp r1, #0
	beq _08064E8C
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064E8C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08064F5E
	.align 2, 0
_08064E94: .4byte 0x08752B4C
_08064E98:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x74]
	ldr r1, [r6]
	mov r3, sl
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x70]
	add r2, sp, #0x74
	add r0, sp, #0x70
	cmp r4, #1
	bhs _08064EB2
	adds r0, r2, #0
_08064EB2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08064ED2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08064ECE
	mov r0, r8
	bl func_080D3BC0
_08064ECE:
	ldr r1, [r6]
	b _08064ED6
_08064ED2:
	movs r0, #0
	mov r8, r0
_08064ED6:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08064EFA
_08064EE2:
	cmp r3, #0
	beq _08064EF2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064EF2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08064EE2
_08064EFA:
	adds r5, r3, #0
	ldr r0, [sp, #0x74]
	cmp r0, #1
	bne _08064F16
	cmp r5, #0
	beq _08064F12
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08064F12:
	adds r5, #0x10
	b _08064F38
_08064F16:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08064F36
_08064F1E:
	cmp r2, #0
	beq _08064F2E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064F2E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08064F1E
_08064F36:
	adds r5, r2, #0
_08064F38:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08064F48
_08064F42:
	adds r0, #0x10
	cmp r0, r2
	bne _08064F42
_08064F48:
	cmp r1, #0
	beq _08064F52
	adds r0, r1, #0
	bl free
_08064F52:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08064F5E:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08064FA0 @ =0x087529AC
	movs r3, #0x72
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x20
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08064FA4
	cmp r1, #0
	beq _08064F98
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064F98:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806506A
	.align 2, 0
_08064FA0: .4byte 0x087529AC
_08064FA4:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x7c]
	ldr r1, [r6]
	mov r3, sl
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x78]
	add r2, sp, #0x7c
	add r0, sp, #0x78
	cmp r4, #1
	bhs _08064FBE
	adds r0, r2, #0
_08064FBE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08064FDE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08064FDA
	mov r0, r8
	bl func_080D3BC0
_08064FDA:
	ldr r1, [r6]
	b _08064FE2
_08064FDE:
	movs r0, #0
	mov r8, r0
_08064FE2:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08065006
_08064FEE:
	cmp r3, #0
	beq _08064FFE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08064FFE:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08064FEE
_08065006:
	adds r5, r3, #0
	ldr r0, [sp, #0x7c]
	cmp r0, #1
	bne _08065022
	cmp r5, #0
	beq _0806501E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806501E:
	adds r5, #0x10
	b _08065044
_08065022:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08065042
_0806502A:
	cmp r2, #0
	beq _0806503A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806503A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806502A
_08065042:
	adds r5, r2, #0
_08065044:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08065054
_0806504E:
	adds r0, #0x10
	cmp r0, r2
	bne _0806504E
_08065054:
	cmp r1, #0
	beq _0806505E
	adds r0, r1, #0
	bl free
_0806505E:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806506A:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _080650AC @ =0x08752D4C
	movs r3, #0x73
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080650B0
	cmp r1, #0
	beq _080650A4
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080650A4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08065176
	.align 2, 0
_080650AC: .4byte 0x08752D4C
_080650B0:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x84]
	ldr r1, [r6]
	mov r3, sl
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x80]
	add r2, sp, #0x84
	add r0, sp, #0x80
	cmp r4, #1
	bhs _080650CA
	adds r0, r2, #0
_080650CA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080650EA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080650E6
	mov r0, r8
	bl func_080D3BC0
_080650E6:
	ldr r1, [r6]
	b _080650EE
_080650EA:
	movs r0, #0
	mov r8, r0
_080650EE:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08065112
_080650FA:
	cmp r3, #0
	beq _0806510A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806510A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080650FA
_08065112:
	adds r5, r3, #0
	ldr r0, [sp, #0x84]
	cmp r0, #1
	bne _0806512E
	cmp r5, #0
	beq _0806512A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806512A:
	adds r5, #0x10
	b _08065150
_0806512E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806514E
_08065136:
	cmp r2, #0
	beq _08065146
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065146:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08065136
_0806514E:
	adds r5, r2, #0
_08065150:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08065160
_0806515A:
	adds r0, #0x10
	cmp r0, r2
	bne _0806515A
_08065160:
	cmp r1, #0
	beq _0806516A
	adds r0, r1, #0
	bl free
_0806516A:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08065176:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _080651B8 @ =0x08752ACC
	movs r3, #0x77
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080651BC
	cmp r1, #0
	beq _080651B0
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080651B0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08065288
	.align 2, 0
_080651B8: .4byte 0x08752ACC
_080651BC:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0x8c
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0x160]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x88
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080651DA
	mov r0, sl
_080651DA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080651F8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080651FC
	mov r0, r8
	bl func_080D3BC0
	b _080651FC
_080651F8:
	movs r0, #0
	mov r8, r0
_080651FC:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x160]
	cmp r2, r4
	beq _08065224
_0806520A:
	cmp r3, #0
	beq _0806521A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806521A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x160]
	cmp r2, r5
	bne _0806520A
_08065224:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _08065242
	cmp r5, #0
	beq _0806523E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806523E:
	adds r5, #0x10
	b _08065264
_08065242:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08065262
_0806524A:
	cmp r2, #0
	beq _0806525A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806525A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806524A
_08065262:
	adds r5, r2, #0
_08065264:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08065274
_0806526E:
	adds r1, #0x10
	cmp r1, r2
	bne _0806526E
_08065274:
	cmp r0, #0
	beq _0806527C
	bl free
_0806527C:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08065288:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _080652CC @ =0x0875290C
	movs r3, #0x7b
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080652D0
	cmp r1, #0
	beq _080652C2
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080652C2:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806539C
	.align 2, 0
_080652CC: .4byte 0x0875290C
_080652D0:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0x94
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0x160]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x90
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080652EE
	mov r0, sl
_080652EE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806530C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08065310
	mov r0, r8
	bl func_080D3BC0
	b _08065310
_0806530C:
	movs r0, #0
	mov r8, r0
_08065310:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x160]
	cmp r2, r4
	beq _08065338
_0806531E:
	cmp r3, #0
	beq _0806532E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806532E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x160]
	cmp r2, r5
	bne _0806531E
_08065338:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _08065356
	cmp r5, #0
	beq _08065352
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08065352:
	adds r5, #0x10
	b _08065378
_08065356:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08065376
_0806535E:
	cmp r2, #0
	beq _0806536E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806536E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806535E
_08065376:
	adds r5, r2, #0
_08065378:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08065388
_08065382:
	adds r1, #0x10
	cmp r1, r2
	bne _08065382
_08065388:
	cmp r0, #0
	beq _08065390
	bl free
_08065390:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806539C:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _080653D8 @ =0x0875298C
	add r0, sp, #8
	ldr r2, _080653DC @ =0x05000040
	movs r3, #0x20
	bl func_08008F0C
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080653E0
	cmp r1, #0
	beq _080653CE
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080653CE:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080654A8
	.align 2, 0
_080653D8: .4byte 0x0875298C
_080653DC: .4byte 0x05000040
_080653E0:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0x9c
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x160]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0x98
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080653FE
	mov r0, sl
_080653FE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806541C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08065420
	mov r0, r8
	bl func_080D3BC0
	b _08065420
_0806541C:
	movs r0, #0
	mov r8, r0
_08065420:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	b _0806543E
_0806542A:
	cmp r3, #0
	beq _0806543A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806543A:
	adds r2, #0x10
	adds r3, #0x10
_0806543E:
	ldr r0, [sp, #0x160]
	cmp r2, r0
	bne _0806542A
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _08065462
	cmp r5, #0
	beq _0806545E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806545E:
	adds r5, #0x10
	b _08065484
_08065462:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08065482
_0806546A:
	cmp r2, #0
	beq _0806547A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806547A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806546A
_08065482:
	adds r5, r2, #0
_08065484:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08065494
_0806548E:
	adds r1, #0x10
	cmp r1, r2
	bne _0806548E
_08065494:
	cmp r0, #0
	beq _0806549C
	bl free
_0806549C:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r1, [sp, #0x164]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080654A8:
	ldr r2, [sp, #0xf0]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _080654EC @ =0x087517AC
	movs r3, #0x9c
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	adds r3, #0x84
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080654F0
	cmp r1, #0
	beq _080654E2
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080654E2:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080655BC
	.align 2, 0
_080654EC: .4byte 0x087517AC
_080654F0:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0xa4
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0x160]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xa0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _0806550E
	mov r0, sl
_0806550E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806552C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08065530
	mov r0, r8
	bl func_080D3BC0
	b _08065530
_0806552C:
	movs r0, #0
	mov r8, r0
_08065530:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x160]
	cmp r2, r4
	beq _08065558
_0806553E:
	cmp r3, #0
	beq _0806554E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806554E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x160]
	cmp r2, r5
	bne _0806553E
_08065558:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _08065576
	cmp r5, #0
	beq _08065572
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08065572:
	adds r5, #0x10
	b _08065598
_08065576:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08065596
_0806557E:
	cmp r2, #0
	beq _0806558E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806558E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806557E
_08065596:
	adds r5, r2, #0
_08065598:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080655A8
_080655A2:
	adds r1, #0x10
	cmp r1, r2
	bne _080655A2
_080655A8:
	cmp r0, #0
	beq _080655B0
	bl free
_080655B0:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080655BC:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08065600 @ =0x08750F8C
	movs r3, #0xa5
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	adds r3, #0x7b
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08065604
	cmp r1, #0
	beq _080655F6
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080655F6:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080656D0
	.align 2, 0
_08065600: .4byte 0x08750F8C
_08065604:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0xac
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0x160]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xa8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08065622
	mov r0, sl
_08065622:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08065640
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08065644
	mov r0, r8
	bl func_080D3BC0
	b _08065644
_08065640:
	movs r0, #0
	mov r8, r0
_08065644:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x160]
	cmp r2, r4
	beq _0806566C
_08065652:
	cmp r3, #0
	beq _08065662
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065662:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x160]
	cmp r2, r5
	bne _08065652
_0806566C:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _0806568A
	cmp r5, #0
	beq _08065686
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08065686:
	adds r5, #0x10
	b _080656AC
_0806568A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080656AA
_08065692:
	cmp r2, #0
	beq _080656A2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080656A2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08065692
_080656AA:
	adds r5, r2, #0
_080656AC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080656BC
_080656B6:
	adds r1, #0x10
	cmp r1, r2
	bne _080656B6
_080656BC:
	cmp r0, #0
	beq _080656C4
	bl free
_080656C4:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080656D0:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08065714 @ =0x08750E4C
	movs r3, #0xae
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	adds r3, #0x72
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08065718
	cmp r1, #0
	beq _0806570A
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806570A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080657E4
	.align 2, 0
_08065714: .4byte 0x08750E4C
_08065718:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0xb4
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0x160]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xb0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08065736
	mov r0, sl
_08065736:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08065754
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08065758
	mov r0, r8
	bl func_080D3BC0
	b _08065758
_08065754:
	movs r0, #0
	mov r8, r0
_08065758:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x160]
	cmp r2, r4
	beq _08065780
_08065766:
	cmp r3, #0
	beq _08065776
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065776:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x160]
	cmp r2, r5
	bne _08065766
_08065780:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _0806579E
	cmp r5, #0
	beq _0806579A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806579A:
	adds r5, #0x10
	b _080657C0
_0806579E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080657BE
_080657A6:
	cmp r2, #0
	beq _080657B6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080657B6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080657A6
_080657BE:
	adds r5, r2, #0
_080657C0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080657D0
_080657CA:
	adds r1, #0x10
	cmp r1, r2
	bne _080657CA
_080657D0:
	cmp r0, #0
	beq _080657D8
	bl free
_080657D8:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080657E4:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08065820 @ =0x08750F6C
	add r0, sp, #8
	ldr r2, _08065824 @ =0x05000060
	movs r3, #0x20
	bl func_08008F0C
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08065828
	cmp r1, #0
	beq _08065816
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08065816:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080658F0
	.align 2, 0
_08065820: .4byte 0x08750F6C
_08065824: .4byte 0x05000060
_08065828:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0xbc
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x160]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xb8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08065846
	mov r0, sl
_08065846:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08065864
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08065868
	mov r0, r8
	bl func_080D3BC0
	b _08065868
_08065864:
	movs r0, #0
	mov r8, r0
_08065868:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	b _08065886
_08065872:
	cmp r3, #0
	beq _08065882
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065882:
	adds r2, #0x10
	adds r3, #0x10
_08065886:
	ldr r0, [sp, #0x160]
	cmp r2, r0
	bne _08065872
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080658AA
	cmp r5, #0
	beq _080658A6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080658A6:
	adds r5, #0x10
	b _080658CC
_080658AA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080658CA
_080658B2:
	cmp r2, #0
	beq _080658C2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080658C2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080658B2
_080658CA:
	adds r5, r2, #0
_080658CC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080658DC
_080658D6:
	adds r1, #0x10
	cmp r1, r2
	bne _080658D6
_080658DC:
	cmp r0, #0
	beq _080658E4
	bl free
_080658E4:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r1, [sp, #0x164]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080658F0:
	ldr r2, [sp, #0xf0]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _0806592C @ =0x08750C4C
	add r0, sp, #8
	ldr r2, _08065930 @ =0x060100A0
	movs r3, #0x20
	bl func_08008F0C
	add r3, sp, #8
	mov sb, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08065934
	cmp r1, #0
	beq _08065922
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065922:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08065A00
	.align 2, 0
_0806592C: .4byte 0x08750C4C
_08065930: .4byte 0x060100A0
_08065934:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0xc4
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x160]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xc0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08065952
	mov r0, sl
_08065952:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08065970
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08065974
	mov r0, r8
	bl func_080D3BC0
	b _08065974
_08065970:
	movs r0, #0
	mov r8, r0
_08065974:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x160]
	cmp r2, r4
	beq _0806599C
_08065982:
	cmp r3, #0
	beq _08065992
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065992:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x160]
	cmp r2, r5
	bne _08065982
_0806599C:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _080659BA
	cmp r5, #0
	beq _080659B6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080659B6:
	adds r5, #0x10
	b _080659DC
_080659BA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080659DA
_080659C2:
	cmp r2, #0
	beq _080659D2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080659D2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080659C2
_080659DA:
	adds r5, r2, #0
_080659DC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080659EC
_080659E6:
	adds r1, #0x10
	cmp r1, r2
	bne _080659E6
_080659EC:
	cmp r0, #0
	beq _080659F4
	bl free
_080659F4:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08065A00:
	ldr r1, [sp, #0xf0]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08065A3C @ =0x08750C6C
	add r0, sp, #8
	ldr r2, _08065A40 @ =0x05000220
	movs r3, #0x20
	bl func_08008F0C
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08065A44
	cmp r1, #0
	beq _08065A32
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08065A32:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08065B0C
	.align 2, 0
_08065A3C: .4byte 0x08750C6C
_08065A40: .4byte 0x05000220
_08065A44:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0xcc
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x160]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xc8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08065A62
	mov r0, sl
_08065A62:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08065A80
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08065A84
	mov r0, r8
	bl func_080D3BC0
	b _08065A84
_08065A80:
	movs r0, #0
	mov r8, r0
_08065A84:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	ldr r2, [r6]
	adds r3, r5, #0
	b _08065AA2
_08065A8E:
	cmp r3, #0
	beq _08065A9E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065A9E:
	adds r2, #0x10
	adds r3, #0x10
_08065AA2:
	ldr r0, [sp, #0x160]
	cmp r2, r0
	bne _08065A8E
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _08065AC6
	cmp r5, #0
	beq _08065AC2
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065AC2:
	adds r5, #0x10
	b _08065AE8
_08065AC6:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08065AE6
_08065ACE:
	cmp r2, #0
	beq _08065ADE
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065ADE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08065ACE
_08065AE6:
	adds r5, r2, #0
_08065AE8:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08065AF8
_08065AF2:
	adds r1, #0x10
	cmp r1, r2
	bne _08065AF2
_08065AF8:
	cmp r0, #0
	beq _08065B00
	bl free
_08065B00:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r1, [sp, #0x164]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08065B0C:
	movs r2, #4
	mov r8, r2
	movs r3, #0
	str r3, [sp, #0xf8]

	thumb_func_start sub_08065B14
sub_08065B14: @ 0x08065B14
	ldr r4, [sp, #0xf0]
	ldr r5, _08065B58 @ =0x0000058C
	adds r0, r4, r5
	ldr r0, [r0]
	ldr r7, _08065B5C @ =0x00001CD4
	adds r0, r0, r7
	ldr r1, [sp, #0xf8]
	bl func_080A031C
	str r0, [sp, #0xfc]
	ldr r0, [sp, #0xf8]
	adds r0, #1
	str r0, [sp, #0x138]
	ldr r1, [sp, #0xfc]
	cmp r1, #0
	bne _08065B38
	bl sub_0806641E
_08065B38:
	movs r0, #8
	str r0, [sp, #0xc]
	add r1, sp, #8
	mov r2, r8
	lsls r0, r2, #3
	strh r0, [r1]
	str r0, [sp, #0x150]
	ldr r3, [sp, #0xf8]
	cmp r3, #6
	bhi _08065B80
	lsls r0, r3, #2
	ldr r1, _08065B60 @ =_08065B64
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08065B58: .4byte 0x0000058C
_08065B5C: .4byte 0x00001CD4
_08065B60: .4byte _08065B64
_08065B64: @ jump table
	.4byte _08065BE0 @ case 0
	.4byte _08065B98 @ case 1
	.4byte _08065BF8 @ case 2
	.4byte _08065B80 @ case 3
	.4byte _08065C10 @ case 4
	.4byte _08065BC8 @ case 5
	.4byte _08065BB0 @ case 6
_08065B80:
	ldr r0, _08065B90 @ =0x0875218C
	str r0, [sp, #0x10]
	ldr r0, _08065B94 @ =0x0875220C
	str r0, [sp, #0x14]
	movs r4, #0x27
	str r4, [sp, #0x100]
	b _08065C1C
	.align 2, 0
_08065B90: .4byte 0x0875218C
_08065B94: .4byte 0x0875220C
_08065B98:
	ldr r0, _08065BA8 @ =0x0875204C
	str r0, [sp, #0x10]
	ldr r0, _08065BAC @ =0x087520CC
	str r0, [sp, #0x14]
	movs r5, #0x25
	str r5, [sp, #0x100]
	b _08065C1C
	.align 2, 0
_08065BA8: .4byte 0x0875204C
_08065BAC: .4byte 0x087520CC
_08065BB0:
	ldr r0, _08065BC0 @ =0x08751FAC
	str r0, [sp, #0x10]
	ldr r0, _08065BC4 @ =0x0875202C
	str r0, [sp, #0x14]
	movs r7, #0x2a
	str r7, [sp, #0x100]
	b _08065C1C
	.align 2, 0
_08065BC0: .4byte 0x08751FAC
_08065BC4: .4byte 0x0875202C
_08065BC8:
	ldr r0, _08065BD8 @ =0x087522CC
	str r0, [sp, #0x10]
	ldr r0, _08065BDC @ =0x0875234C
	str r0, [sp, #0x14]
	movs r0, #0x29
	str r0, [sp, #0x100]
	b _08065C1C
	.align 2, 0
_08065BD8: .4byte 0x087522CC
_08065BDC: .4byte 0x0875234C
_08065BE0:
	ldr r0, _08065BF0 @ =0x08751F0C
	str r0, [sp, #0x10]
	ldr r0, _08065BF4 @ =0x08751F8C
	str r0, [sp, #0x14]
	movs r1, #0x24
	str r1, [sp, #0x100]
	b _08065C1C
	.align 2, 0
_08065BF0: .4byte 0x08751F0C
_08065BF4: .4byte 0x08751F8C
_08065BF8:
	ldr r0, _08065C08 @ =0x087520EC
	str r0, [sp, #0x10]
	ldr r0, _08065C0C @ =0x0875216C
	str r0, [sp, #0x14]
	movs r2, #0x26
	str r2, [sp, #0x100]
	b _08065C1C
	.align 2, 0
_08065C08: .4byte 0x087520EC
_08065C0C: .4byte 0x0875216C
_08065C10:
	ldr r0, _08065CAC @ =0x0875222C
	str r0, [sp, #0x10]
	ldr r0, _08065CB0 @ =0x087522AC
	str r0, [sp, #0x14]
	movs r3, #0x28
	str r3, [sp, #0x100]
_08065C1C:
	ldr r4, [sp, #0xf0]
	ldr r5, _08065CB4 @ =0x00000594
	adds r6, r4, r5
	mov r7, sp
	adds r7, #8
	str r7, [sp, #0x104]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08065CB8
	cmp r1, #0
	beq _08065C40
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08065C40:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	add r5, sp, #0x18
	mov sb, r5
	ldr r7, [sp, #0xf8]
	lsls r7, r7, #1
	str r7, [sp, #0x14c]
	mov r0, sp
	adds r0, #0xd8
	str r0, [sp, #0x11c]
	mov r1, sp
	adds r1, #0xdc
	str r1, [sp, #0x120]
	mov r2, r8
	lsls r2, r2, #6
	str r2, [sp, #0x154]
	mov r3, sp
	adds r3, #0xe8
	str r3, [sp, #0x124]
	mov r4, sp
	adds r4, #0xec
	str r4, [sp, #0x128]
	mov r5, r8
	adds r5, #2
	str r5, [sp, #0x134]
	mov r7, r8
	adds r7, #3
	str r7, [sp, #0x13c]
	movs r0, #0x70
	lsls r0, r0, #0x10
	str r0, [sp, #0x158]
	mov r1, r8
	adds r1, #4
	str r1, [sp, #0x140]
	movs r2, #0x71
	lsls r2, r2, #0x10
	str r2, [sp, #0x15c]
	mov r3, r8
	adds r3, #5
	str r3, [sp, #0x144]
	movs r4, #0x72
	lsls r4, r4, #0x10
	str r4, [sp, #0x108]
	movs r5, #0x44
	lsls r5, r5, #0x10
	str r5, [sp, #0x12c]
	adds r7, #3
	str r7, [sp, #0x148]
	ldr r0, [sp, #0xf8]
	adds r0, #1
	str r0, [sp, #0x138]
	b _08065DE6
	.align 2, 0
_08065CAC: .4byte 0x0875222C
_08065CB0: .4byte 0x087522AC
_08065CB4: .4byte 0x00000594
_08065CB8:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0xd4
	str r0, [r1]
	ldr r3, [r6]
	ldr r2, [sp, #0x160]
	subs r0, r2, r3
	asrs r4, r0, #4
	add r0, sp, #0xd0
	str r4, [r0]
	ldr r2, [r1]
	adds r1, r3, #0
	cmp r4, r2
	bhs _08065CD6
	add r0, sp, #0xd4
_08065CD6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08065CF6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08065CF2
	mov r0, sl
	bl func_080D3BC0
_08065CF2:
	ldr r1, [r6]
	b _08065CFA
_08065CF6:
	movs r0, #0
	mov sl, r0
_08065CFA:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	adds r3, r1, #0
	adds r2, r5, #0
	add r4, sp, #0x18
	mov sb, r4
	ldr r5, [sp, #0xf8]
	lsls r5, r5, #1
	str r5, [sp, #0x14c]
	mov r7, sp
	adds r7, #0xd8
	str r7, [sp, #0x11c]
	mov r0, sp
	adds r0, #0xdc
	str r0, [sp, #0x120]
	mov r1, r8
	lsls r1, r1, #6
	str r1, [sp, #0x154]
	mov r4, sp
	adds r4, #0xe8
	str r4, [sp, #0x124]
	mov r5, sp
	adds r5, #0xec
	str r5, [sp, #0x128]
	mov r7, r8
	adds r7, #2
	str r7, [sp, #0x134]
	mov r0, r8
	adds r0, #3
	str r0, [sp, #0x13c]
	movs r1, #0x70
	lsls r1, r1, #0x10
	str r1, [sp, #0x158]
	mov r4, r8
	adds r4, #4
	str r4, [sp, #0x140]
	movs r5, #0x71
	lsls r5, r5, #0x10
	str r5, [sp, #0x15c]
	adds r7, #3
	str r7, [sp, #0x144]
	movs r0, #0x72
	lsls r0, r0, #0x10
	str r0, [sp, #0x108]
	movs r1, #0x44
	lsls r1, r1, #0x10
	str r1, [sp, #0x12c]
	adds r4, #2
	str r4, [sp, #0x148]
	ldr r5, [sp, #0xf8]
	adds r5, #1
	str r5, [sp, #0x138]
	ldr r7, [sp, #0x160]
	cmp r3, r7
	beq _08065D82
_08065D68:
	cmp r2, #0
	beq _08065D78
	adds r0, r2, #0
	adds r1, r3, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065D78:
	adds r3, #0x10
	adds r2, #0x10
	ldr r0, [sp, #0x160]
	cmp r3, r0
	bne _08065D68
_08065D82:
	adds r5, r2, #0
	ldr r1, [sp, #0xd4]
	cmp r1, #1
	bne _08065D9E
	cmp r5, #0
	beq _08065D9A
	adds r0, r5, #0
	ldr r1, [sp, #0x104]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08065D9A:
	adds r5, #0x10
	b _08065DC0
_08065D9E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08065DBE
_08065DA6:
	cmp r2, #0
	beq _08065DB6
	adds r0, r2, #0
	ldr r1, [sp, #0x104]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065DB6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08065DA6
_08065DBE:
	adds r5, r2, #0
_08065DC0:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08065DD0
_08065DCA:
	adds r0, #0x10
	cmp r0, r2
	bne _08065DCA
_08065DD0:
	cmp r1, #0
	beq _08065DDA
	adds r0, r1, #0
	bl free
_08065DDA:
	ldr r0, [sp, #0x164]
	add r0, sl
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08065DE6:
	movs r0, #0
	mov r8, r0
	add r1, sp, #0x150
	ldrh r2, [r1]
	mov r1, sb
	strh r2, [r1]
	ldr r2, [sp, #0x14c]
	ldr r3, [sp, #0xf8]
	adds r4, r2, r3
	lsls r4, r4, #6
	adds r4, r4, r3
	lsls r4, r4, #2
	ldr r5, [sp, #0xf0]
	adds r1, r4, r5
	movs r5, #0xc
	movs r6, #2
	add r0, sp, #0xd8
	strh r5, [r0]
	ldr r7, [sp, #0x11c]
	strh r6, [r7, #2]
	ldr r0, [r0]
	ldr r2, _08065EBC @ =0x00000C4C
	adds r1, r1, r2
	movs r2, #0
	bl func_0804E7A0
	ldr r3, [sp, #0xf0]
	ldr r7, _08065EC0 @ =0x0000058C
	adds r0, r3, r7
	ldr r0, [r0]
	ldr r1, _08065EC4 @ =0x00001CD4
	adds r0, r0, r1
	ldr r1, [sp, #0x100]
	bl func_0809FE3C
	adds r2, r0, #0
	ldr r3, [sp, #0xf0]
	adds r1, r4, r3
	add r0, sp, #0xdc
	strh r5, [r0]
	ldr r5, [sp, #0x120]
	strh r6, [r5, #2]
	ldr r0, [r0]
	ldr r7, _08065EBC @ =0x00000C4C
	adds r1, r1, r7
	str r2, [sp]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r0, [sp, #0xf0]
	adds r4, r4, r0
	adds r1, r7, #0
	adds r4, r4, r1
	mov r2, sb
	str r4, [r2, #4]
	movs r0, #3
	ldr r3, [sp, #0xf8]
	ands r0, r3
	lsls r4, r0, #1
	adds r4, r4, r0
	lsls r4, r4, #3
	movs r0, #0xc0
	lsls r0, r0, #1
	adds r4, r4, r0
	ldr r5, [sp, #0xf4]
	ldr r0, [r5, #0x18]
	ldr r7, [sp, #0x154]
	adds r0, r0, r7
	adds r0, #6
	mov r1, r8
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	adds r1, r4, #0
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r4, r4, r0
	mov r2, sb
	str r4, [r2, #8]
	movs r0, #0xc0
	lsls r0, r0, #2
	str r0, [r2, #0xc]
	ldr r3, [sp, #0xf0]
	ldr r4, _08065EC8 @ =0x000005A4
	adds r6, r3, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08065ECC
	cmp r1, #0
	beq _08065EB4
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [sp, #0x24]
	str r1, [r0]
_08065EB4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08065F9E
	.align 2, 0
_08065EBC: .4byte 0x00000C4C
_08065EC0: .4byte 0x0000058C
_08065EC4: .4byte 0x00001CD4
_08065EC8: .4byte 0x000005A4
_08065ECC:
	str r1, [sp, #0x160]
	movs r0, #1
	add r1, sp, #0xe4
	str r0, [r1]
	ldr r3, [r6]
	ldr r4, [sp, #0x160]
	subs r0, r4, r3
	asrs r4, r0, #4
	add r0, sp, #0xe0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	adds r1, r3, #0
	cmp r4, r2
	bhs _08065EEC
	mov r0, sl
_08065EEC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08065F0C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08065F08
	mov r0, r8
	bl func_080D3BC0
_08065F08:
	ldr r1, [r6]
	b _08065F10
_08065F0C:
	movs r0, #0
	mov r8, r0
_08065F10:
	adds r5, r0, #0
	str r5, [sp, #0x164]
	adds r3, r1, #0
	adds r2, r5, #0
	ldr r5, [sp, #0x160]
	cmp r3, r5
	beq _08065F38
_08065F1E:
	cmp r2, #0
	beq _08065F2E
	adds r0, r2, #0
	adds r1, r3, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08065F2E:
	adds r3, #0x10
	adds r2, #0x10
	ldr r7, [sp, #0x160]
	cmp r3, r7
	bne _08065F1E
_08065F38:
	adds r5, r2, #0
	mov r0, sl
	ldr r1, [r0]
	cmp r1, #1
	bne _08065F56
	cmp r5, #0
	beq _08065F52
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [sp, #0x24]
	str r1, [r0]
_08065F52:
	adds r5, #0x10
	b _08065F78
_08065F56:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08065F76
_08065F5E:
	cmp r2, #0
	beq _08065F6E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [sp, #0x24]
	str r1, [r0]
_08065F6E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08065F5E
_08065F76:
	adds r5, r2, #0
_08065F78:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08065F88
_08065F82:
	adds r0, #0x10
	cmp r0, r2
	bne _08065F82
_08065F88:
	cmp r1, #0
	beq _08065F92
	adds r0, r1, #0
	bl free
_08065F92:
	ldr r0, [sp, #0x164]
	add r0, r8
	ldr r7, [sp, #0x164]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08065F9E:
	movs r0, #0xa
	ldr r1, [sp, #0x124]
	str r0, [r1]
	ldr r0, [sp, #0xfc]
	bl GetFriendship__C3Npc
	movs r1, #0x19
	bl func_080D0EDA
	ldr r2, [sp, #0x128]
	str r0, [r2]
	add r1, sp, #0xe8
	add r3, sp, #0xec
	ldr r2, [r1]
	ldr r0, [r3]
	cmp r2, r0
	bls _08065FC2
	adds r1, r3, #0
_08065FC2:
	ldr r6, [r1]
	movs r4, #0
	cmp r4, r6
	bhs _08065FF6
	movs r5, #0xa
	movs r3, #0x6c
	lsls r7, r3, #0x10
_08065FD0:
	ldr r1, [sp, #0xf4]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x134]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r5
	movs r1, #1
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r7, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r4, #1
	cmp r4, r6
	blo _08065FD0
_08065FF6:
	movs r0, #0x78
	str r0, [sp, #0xc]
	ldr r0, _08066048 @ =0x08750C4C
	str r0, [sp, #0x10]
	ldr r0, _0806604C @ =0x08750C6C
	str r0, [sp, #0x14]
	movs r5, #0
	ldr r3, [sp, #0xf4]
	ldr r0, [r3, #0x18]
	ldr r4, [sp, #0x13c]
	lsls r1, r4, #6
	adds r0, r0, r1
	adds r0, #8
	ldr r7, [sp, #0x158]
	lsrs r1, r7, #0x10
	movs r2, #2
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	ldr r0, [sp, #0xfc]
	movs r1, #1
	bl GetTaskExp__C13HarvestSpriteQ213HarvestSprite4Task
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xff
	bl func_080D0EDA
	adds r4, r0, #0
	movs r0, #0x9c
	adds r0, #8
	lsls r7, r0, #0x10
	movs r6, #0xa
	b _08066072
	.align 2, 0
_08066048: .4byte 0x08750C4C
_0806604C: .4byte 0x08750C6C
_08066050:
	ldr r1, [sp, #0xf4]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x13c]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r6
	movs r1, #3
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r7, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #2
	adds r5, #1
_08066072:
	adds r1, r4, #0
	cmp r4, #0
	bge _0806607A
	adds r1, r4, #7
_0806607A:
	asrs r2, r1, #3
	cmp r5, r2
	blt _08066050
	cmp r5, #9
	bgt _080660E6
	ldr r3, [sp, #0xf4]
	ldr r1, [r3, #0x18]
	ldr r7, [sp, #0x13c]
	lsls r0, r7, #6
	adds r1, r1, r0
	adds r0, r5, #5
	lsls r0, r0, #1
	adds r3, r1, r0
	lsls r1, r2, #3
	subs r1, r4, r1
	adds r1, #0x9c
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #3
	str r0, [sp]
	movs r0, #0x20
	str r0, [sp, #4]
	adds r0, r3, #0
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #1
	cmp r5, #9
	bgt _080660E6
	lsls r0, r5, #1
	adds r4, r0, #0
	adds r4, #0xa
	movs r0, #0x9c
	lsls r6, r0, #0x10
_080660C0:
	ldr r1, [sp, #0xf4]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x13c]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r4
	movs r1, #3
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r6, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r4, #2
	adds r5, #1
	cmp r5, #9
	ble _080660C0
_080660E6:
	add r1, sp, #8
	ldr r3, [sp, #0x13c]
	lsls r0, r3, #3
	adds r0, #1
	strh r0, [r1]
	ldr r4, [sp, #0xf0]
	ldr r5, _08066158 @ =0x00002164
	adds r2, r4, r5
	ldr r0, [r2]
	cmp r0, #0x14
	bhi _08066114
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r2, r0
	cmp r0, #0
	beq _0806610E
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806610E:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_08066114:
	movs r5, #0
	ldr r7, [sp, #0xf4]
	ldr r0, [r7, #0x18]
	ldr r2, [sp, #0x140]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, #8
	ldr r3, [sp, #0x15c]
	lsrs r1, r3, #0x10
	movs r2, #2
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	ldr r0, [sp, #0xfc]
	movs r1, #0
	bl GetTaskExp__C13HarvestSpriteQ213HarvestSprite4Task
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xff
	bl func_080D0EDA
	adds r4, r0, #0
	movs r0, #0xa5
	adds r0, #8
	lsls r7, r0, #0x10
	movs r6, #0xa
	b _0806617E
	.align 2, 0
_08066158: .4byte 0x00002164
_0806615C:
	ldr r1, [sp, #0xf4]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x140]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r6
	movs r1, #3
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r7, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #2
	adds r5, #1
_0806617E:
	adds r1, r4, #0
	cmp r4, #0
	bge _08066186
	adds r1, r4, #7
_08066186:
	asrs r2, r1, #3
	cmp r5, r2
	blt _0806615C
	cmp r5, #9
	bgt _080661F2
	ldr r3, [sp, #0xf4]
	ldr r1, [r3, #0x18]
	ldr r7, [sp, #0x140]
	lsls r0, r7, #6
	adds r1, r1, r0
	adds r0, r5, #5
	lsls r0, r0, #1
	adds r3, r1, r0
	lsls r1, r2, #3
	subs r1, r4, r1
	adds r1, #0xa5
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #3
	str r0, [sp]
	movs r0, #0x20
	str r0, [sp, #4]
	adds r0, r3, #0
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #1
	cmp r5, #9
	bgt _080661F2
	lsls r0, r5, #1
	adds r4, r0, #0
	adds r4, #0xa
	movs r0, #0xa5
	lsls r6, r0, #0x10
_080661CC:
	ldr r1, [sp, #0xf4]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x140]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r4
	movs r1, #3
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r6, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r4, #2
	adds r5, #1
	cmp r5, #9
	ble _080661CC
_080661F2:
	add r1, sp, #8
	ldr r3, [sp, #0x140]
	lsls r0, r3, #3
	adds r0, #1
	strh r0, [r1]
	ldr r4, [sp, #0xf0]
	ldr r5, _08066264 @ =0x00002164
	adds r2, r4, r5
	ldr r0, [r2]
	cmp r0, #0x14
	bhi _08066220
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r2, r0
	cmp r0, #0
	beq _0806621A
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806621A:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_08066220:
	movs r5, #0
	ldr r7, [sp, #0xf4]
	ldr r0, [r7, #0x18]
	ldr r2, [sp, #0x144]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, #8
	ldr r3, [sp, #0x108]
	lsrs r1, r3, #0x10
	movs r2, #2
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	ldr r0, [sp, #0xfc]
	movs r1, #2
	bl GetTaskExp__C13HarvestSpriteQ213HarvestSprite4Task
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	movs r1, #0xff
	bl func_080D0EDA
	adds r4, r0, #0
	movs r0, #0xae
	adds r0, #8
	lsls r7, r0, #0x10
	movs r6, #0xa
	b _0806628A
	.align 2, 0
_08066264: .4byte 0x00002164
_08066268:
	ldr r1, [sp, #0xf4]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x144]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r6
	movs r1, #3
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r7, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #2
	adds r5, #1
_0806628A:
	adds r1, r4, #0
	cmp r4, #0
	bge _08066292
	adds r1, r4, #7
_08066292:
	asrs r2, r1, #3
	cmp r5, r2
	blt _08066268
	cmp r5, #9
	bgt _080662FE
	ldr r3, [sp, #0xf4]
	ldr r1, [r3, #0x18]
	ldr r7, [sp, #0x144]
	lsls r0, r7, #6
	adds r1, r1, r0
	adds r0, r5, #5
	lsls r0, r0, #1
	adds r3, r1, r0
	lsls r1, r2, #3
	subs r1, r4, r1
	adds r1, #0xae
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #3
	str r0, [sp]
	movs r0, #0x20
	str r0, [sp, #4]
	adds r0, r3, #0
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #1
	cmp r5, #9
	bgt _080662FE
	lsls r0, r5, #1
	adds r4, r0, #0
	adds r4, #0xa
	movs r0, #0xae
	lsls r6, r0, #0x10
_080662D8:
	ldr r1, [sp, #0xf4]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x144]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r4
	movs r1, #3
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r6, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r4, #2
	adds r5, #1
	cmp r5, #9
	ble _080662D8
_080662FE:
	add r1, sp, #8
	ldr r3, [sp, #0x144]
	lsls r0, r3, #3
	adds r0, #1
	strh r0, [r1]
	ldr r4, [sp, #0xf0]
	ldr r5, _08066364 @ =0x00002164
	adds r2, r4, r5
	ldr r0, [r2]
	cmp r0, #0x14
	bhi _0806632C
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r2, r0
	cmp r0, #0
	beq _08066326
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066326:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0806632C:
	ldr r5, [sp, #0xf4]
	ldr r0, [r5, #0x18]
	ldr r7, [sp, #0x134]
	lsls r1, r7, #6
	adds r0, r0, r1
	adds r0, #0x22
	ldr r2, [sp, #0x12c]
	lsrs r1, r2, #0x10
	movs r6, #0
	str r6, [sp]
	movs r5, #0x20
	str r5, [sp, #4]
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [sp, #0xfc]
	bl GetCurrentTask__C13HarvestSprite
	adds r2, r0, #0
	cmp r2, #1
	beq _08066372
	cmp r2, #1
	bgt _08066368
	cmp r2, #0
	beq _08066388
	b _0806641A
	.align 2, 0
_08066364: .4byte 0x00002164
_08066368:
	cmp r2, #2
	beq _0806639E
	cmp r2, #3
	beq _08066400
	b _0806641A
_08066372:
	ldr r3, [sp, #0xf4]
	ldr r0, [r3, #0x18]
	ldr r7, [sp, #0x140]
	lsls r4, r7, #6
	adds r0, r0, r4
	adds r0, #0x22
	movs r1, #0x73
	movs r2, #2
	str r2, [sp]
	str r5, [sp, #4]
	b _080663B2
_08066388:
	ldr r4, [sp, #0xf4]
	ldr r0, [r4, #0x18]
	ldr r7, [sp, #0x140]
	lsls r4, r7, #6
	adds r0, r0, r4
	adds r0, #0x22
	movs r1, #0x77
	movs r2, #2
	str r2, [sp]
	str r5, [sp, #4]
	b _080663B2
_0806639E:
	ldr r4, [sp, #0xf4]
	ldr r0, [r4, #0x18]
	ldr r7, [sp, #0x140]
	lsls r4, r7, #6
	adds r0, r0, r4
	adds r0, #0x22
	movs r1, #0x7b
	str r2, [sp]
	str r5, [sp, #4]
	movs r2, #2
_080663B2:
	movs r3, #2
	bl func_0804E9F4
	ldr r1, [sp, #0xf4]
	ldr r0, [r1, #0x18]
	adds r0, r0, r4
	adds r0, #0x30
	movs r1, #0x3c
	str r6, [sp]
	str r5, [sp, #4]
	movs r2, #4
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [sp, #0xfc]
	bl GetWorkDaysLeft__C13HarvestSprite
	ldr r2, [sp, #0xf4]
	ldr r1, [r2, #0x18]
	adds r1, r1, r4
	adds r1, #0x26
	movs r2, #0x90
	lsls r2, r2, #1
	str r5, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0xf4]
	ldr r0, [r3, #0x18]
	adds r0, r0, r4
	adds r0, #0x2a
	movs r1, #0x38
	str r6, [sp]
	str r5, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	b _0806641A
_08066400:
	ldr r4, [sp, #0xf4]
	ldr r0, [r4, #0x18]
	ldr r7, [sp, #0x140]
	lsls r1, r7, #6
	adds r0, r0, r1
	adds r0, #0x22
	movs r1, #0x54
	str r6, [sp]
	str r5, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
_0806641A:
	ldr r0, [sp, #0x148]
	mov r8, r0

	non_word_aligned_thumb_func_start sub_0806641E
sub_0806641E: @ 0x0806641E
	ldr r1, [sp, #0x138]
	str r1, [sp, #0xf8]
	cmp r1, #6
	bhi _0806642A
	bl sub_08065B14
_0806642A:
	mov r1, r8
	adds r1, #1
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	ldr r0, [sp, #0xf4]
	bl func_08075E24
	ldr r0, [sp, #0xf0]
	add sp, #0x168
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0806644C
func_0806644C: @ 0x0806644C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18c
	str r0, [sp, #0xe8]
	ldr r0, _08066578 @ =0x080FB8F0
	str r0, [sp]
	ldr r0, [sp, #0xe8]
	movs r3, #0x96
	bl func_08076BFC
	ldr r0, [sp, #0xe8]
	ldr r2, _0806657C @ =0x000005B4
	adds r1, r0, r2
	ldr r0, _08066580 @ =vtable_unk_080E7A18
	str r0, [r1]
	ldr r3, [sp, #0xe8]
	ldr r4, _08066584 @ =0x00001264
	adds r0, r3, r4
	movs r1, #0
	str r1, [r0]
	ldr r5, _08066588 @ =0x00001638
	adds r0, r3, r5
	str r1, [r0]
	ldr r6, [r3, #4]
	str r6, [sp, #0xec]
	ldr r2, _0806658C @ =0x080FB8C8
	add r1, sp, #0x18
	movs r0, #2
	strh r0, [r1]
	strh r0, [r1, #2]
	ldr r0, [sp, #0x18]
	movs r7, #0xe9
	lsls r7, r7, #3
	adds r4, r3, r7
	str r2, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r1, [sp, #0xe8]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	movs r3, #0x38
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	adds r1, r4, #0
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080665AC
	cmp r1, #0
	beq _080664DC
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080664DC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r3, sp
	adds r3, #0x24
	str r3, [sp, #0x130]
	ldr r4, [sp, #0xe8]
	ldr r5, _08066590 @ =0x000005BC
	adds r4, r4, r5
	mov sl, r4
	mov r6, sp
	adds r6, #0x30
	str r6, [sp, #0x134]
	movs r0, #0xc8
	lsls r0, r0, #3
	ldr r7, [sp, #0xe8]
	adds r0, r7, r0
	str r0, [sp, #0x120]
	mov r1, sp
	adds r1, #0x3c
	str r1, [sp, #0x138]
	ldr r2, _08066594 @ =0x000006C4
	adds r2, r7, r2
	str r2, [sp, #0x128]
	adds r3, #0x24
	str r3, [sp, #0x13c]
	movs r4, #0x8d
	lsls r4, r4, #4
	adds r4, r7, r4
	str r4, [sp, #0x170]
	mov r5, sp
	adds r5, #0x54
	str r5, [sp, #0x140]
	ldr r6, _08066598 @ =0x00000A54
	adds r6, r7, r6
	str r6, [sp, #0x180]
	mov r7, sp
	adds r7, #0x60
	str r7, [sp, #0x144]
	ldr r1, _0806659C @ =0x00000BD8
	ldr r0, [sp, #0xe8]
	adds r1, r0, r1
	str r1, [sp, #0x10c]
	mov r2, sp
	adds r2, #0x6c
	str r2, [sp, #0x148]
	ldr r3, _080665A0 @ =0x00000D5C
	adds r3, r0, r3
	str r3, [sp, #0x11c]
	mov r4, sp
	adds r4, #0x78
	str r4, [sp, #0x150]
	ldr r5, _080665A4 @ =0x000007CC
	adds r5, r0, r5
	str r5, [sp, #0x15c]
	mov r6, sp
	adds r6, #0x84
	str r6, [sp, #0x154]
	movs r7, #0xee
	lsls r7, r7, #4
	adds r7, r0, r7
	str r7, [sp, #0x14c]
	mov r0, sp
	adds r0, #0x90
	str r0, [sp, #0x158]
	ldr r2, _080665A8 @ =0x00001064
	ldr r1, [sp, #0xe8]
	adds r2, r1, r2
	str r2, [sp, #0x178]
	mov r3, sp
	adds r3, #0xe4
	str r3, [sp, #0x168]
	adds r4, #0x64
	str r4, [sp, #0x160]
	mov r5, sp
	adds r5, #0xe0
	str r5, [sp, #0x164]
	b _08066712
	.align 2, 0
_08066578: .4byte 0x080FB8F0
_0806657C: .4byte 0x000005B4
_08066580: .4byte vtable_unk_080E7A18
_08066584: .4byte 0x00001264
_08066588: .4byte 0x00001638
_0806658C: .4byte 0x080FB8C8
_08066590: .4byte 0x000005BC
_08066594: .4byte 0x000006C4
_08066598: .4byte 0x00000A54
_0806659C: .4byte 0x00000BD8
_080665A0: .4byte 0x00000D5C
_080665A4: .4byte 0x000007CC
_080665A8: .4byte 0x00001064
_080665AC:
	str r1, [sp, #0x184]
	movs r0, #1
	str r0, [sp, #0x20]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x1c]
	add r1, sp, #0x20
	add r0, sp, #0x1c
	cmp r4, #1
	bhs _080665C6
	adds r0, r1, #0
_080665C6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080665E4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080665E8
	mov r0, r8
	bl func_080D3BC0
	b _080665E8
_080665E4:
	movs r0, #0
	mov r8, r0
_080665E8:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r0, sp
	adds r0, #0x24
	str r0, [sp, #0x130]
	ldr r1, [sp, #0xe8]
	ldr r4, _080666B0 @ =0x000005BC
	adds r1, r1, r4
	mov sl, r1
	mov r5, sp
	adds r5, #0x30
	str r5, [sp, #0x134]
	movs r0, #0xc8
	lsls r0, r0, #3
	ldr r7, [sp, #0xe8]
	adds r0, r7, r0
	str r0, [sp, #0x120]
	mov r1, sp
	adds r1, #0x3c
	str r1, [sp, #0x138]
	ldr r4, _080666B4 @ =0x000006C4
	adds r4, r7, r4
	str r4, [sp, #0x128]
	adds r5, #0x18
	str r5, [sp, #0x13c]
	movs r0, #0x8d
	lsls r0, r0, #4
	adds r0, r7, r0
	str r0, [sp, #0x170]
	adds r1, #0x18
	str r1, [sp, #0x140]
	ldr r4, _080666B8 @ =0x00000A54
	adds r4, r7, r4
	str r4, [sp, #0x180]
	adds r5, #0x18
	str r5, [sp, #0x144]
	ldr r0, _080666BC @ =0x00000BD8
	adds r0, r7, r0
	str r0, [sp, #0x10c]
	adds r1, #0x18
	str r1, [sp, #0x148]
	ldr r4, _080666C0 @ =0x00000D5C
	adds r4, r7, r4
	str r4, [sp, #0x11c]
	adds r5, #0x18
	str r5, [sp, #0x150]
	ldr r0, _080666C4 @ =0x000007CC
	adds r0, r7, r0
	str r0, [sp, #0x15c]
	adds r1, #0x18
	str r1, [sp, #0x154]
	movs r4, #0xee
	lsls r4, r4, #4
	adds r4, r7, r4
	str r4, [sp, #0x14c]
	adds r5, #0x18
	str r5, [sp, #0x158]
	ldr r0, _080666C8 @ =0x00001064
	adds r0, r7, r0
	str r0, [sp, #0x178]
	adds r1, #0x60
	str r1, [sp, #0x168]
	mov r4, sp
	adds r4, #0xdc
	str r4, [sp, #0x160]
	adds r5, #0x50
	str r5, [sp, #0x164]
	ldr r7, [sp, #0x184]
	cmp r2, r7
	beq _08066692
_08066678:
	cmp r3, #0
	beq _08066688
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066688:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x184]
	cmp r2, r0
	bne _08066678
_08066692:
	adds r5, r3, #0
	ldr r0, [sp, #0x20]
	cmp r0, #1
	bne _080666CC
	cmp r5, #0
	beq _080666AA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080666AA:
	adds r5, #0x10
	b _080666EE
	.align 2, 0
_080666B0: .4byte 0x000005BC
_080666B4: .4byte 0x000006C4
_080666B8: .4byte 0x00000A54
_080666BC: .4byte 0x00000BD8
_080666C0: .4byte 0x00000D5C
_080666C4: .4byte 0x000007CC
_080666C8: .4byte 0x00001064
_080666CC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080666EC
_080666D4:
	cmp r2, #0
	beq _080666E4
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080666E4:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080666D4
_080666EC:
	adds r5, r2, #0
_080666EE:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080666FE
_080666F8:
	adds r1, #0x10
	cmp r1, r2
	bne _080666F8
_080666FE:
	cmp r0, #0
	beq _08066706
	bl free
_08066706:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08066712:
	ldr r2, _08066774 @ =0x080FB834
	movs r1, #2
	add r0, sp, #0x24
	strh r1, [r0]
	ldr r0, [sp, #0x130]
	strh r1, [r0, #2]
	ldr r0, [sp, #0x24]
	str r2, [sp]
	mov r1, sl
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r1, [sp, #0xe8]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	movs r3, #0x3c
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	mov r1, sl
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08066778
	cmp r1, #0
	beq _08066766
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066766:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r3, #0x3c
	lsls r3, r3, #0x10
	str r3, [sp, #0x16c]
	b _0806683E
	.align 2, 0
_08066774: .4byte 0x080FB834
_08066778:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _08066790
	adds r0, r1, #0
_08066790:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080667AE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080667B2
	mov r0, r8
	bl func_080D3BC0
	b _080667B2
_080667AE:
	movs r0, #0
	mov r8, r0
_080667B2:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	movs r4, #0x3c
	lsls r4, r4, #0x10
	str r4, [sp, #0x16c]
	cmp r2, sl
	beq _080667DC
_080667C4:
	cmp r3, #0
	beq _080667D4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080667D4:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080667C4
_080667DC:
	adds r5, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _080667F8
	cmp r5, #0
	beq _080667F4
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080667F4:
	adds r5, #0x10
	b _0806681A
_080667F8:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08066818
_08066800:
	cmp r2, #0
	beq _08066810
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066810:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08066800
_08066818:
	adds r5, r2, #0
_0806681A:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806682A
_08066824:
	adds r1, #0x10
	cmp r1, r2
	bne _08066824
_0806682A:
	cmp r0, #0
	beq _08066832
	bl free
_08066832:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r1, [sp, #0x188]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806683E:
	movs r2, #0x40
	mov sl, r2
	ldr r2, _080668A4 @ =0x080FB904
	movs r1, #2
	add r0, sp, #0x30
	strh r1, [r0]
	ldr r3, [sp, #0x134]
	strh r1, [r3, #2]
	ldr r0, [sp, #0x30]
	str r2, [sp]
	ldr r1, [sp, #0x120]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r4, [sp, #0xe8]
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	mov r5, sl
	lsls r2, r5, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	ldr r1, [sp, #0x120]
	movs r3, #0x80
	bl func_08008F0C
	add r7, sp, #8
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080668A8
	cmp r1, #0
	beq _08066896
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08066896:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r5, sl
	lsls r5, r5, #0x10
	str r5, [sp, #0x174]
	b _08066974
	.align 2, 0
_080668A4: .4byte 0x080FB904
_080668A8:
	str r1, [sp, #0x184]
	movs r0, #1
	str r0, [sp, #0x38]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x34]
	add r1, sp, #0x38
	add r0, sp, #0x34
	cmp r4, #1
	bhs _080668C2
	adds r0, r1, #0
_080668C2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080668E0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080668E4
	mov r0, r8
	bl func_080D3BC0
	b _080668E4
_080668E0:
	movs r0, #0
	mov r8, r0
_080668E4:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r0, sl
	lsls r0, r0, #0x10
	str r0, [sp, #0x174]
	ldr r1, [sp, #0x184]
	cmp r2, r1
	beq _08066912
_080668F8:
	cmp r3, #0
	beq _08066908
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066908:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x184]
	cmp r2, r0
	bne _080668F8
_08066912:
	adds r5, r3, #0
	ldr r0, [sp, #0x38]
	cmp r0, #1
	bne _0806692E
	cmp r5, #0
	beq _0806692A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806692A:
	adds r5, #0x10
	b _08066950
_0806692E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806694E
_08066936:
	cmp r2, #0
	beq _08066946
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066946:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08066936
_0806694E:
	adds r5, r2, #0
_08066950:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08066960
_0806695A:
	adds r1, #0x10
	cmp r1, r2
	bne _0806695A
_08066960:
	cmp r0, #0
	beq _08066968
	bl free
_08066968:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08066974:
	movs r0, #0x44
	mov sl, r0
	ldr r2, _080669DC @ =0x080FB908
	movs r1, #2
	add r0, sp, #0x3c
	strh r1, [r0]
	ldr r3, [sp, #0x138]
	strh r1, [r3, #2]
	ldr r0, [sp, #0x3c]
	str r2, [sp]
	ldr r1, [sp, #0x128]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r4, [sp, #0xe8]
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	mov r5, sl
	lsls r2, r5, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	ldr r1, [sp, #0x128]
	movs r3, #0x80
	bl func_08008F0C
	add r7, sp, #8
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080669E0
	cmp r1, #0
	beq _080669CC
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080669CC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r5, sl
	lsls r5, r5, #0x10
	str r5, [sp, #0x17c]
	b _08066AAC
	.align 2, 0
_080669DC: .4byte 0x080FB908
_080669E0:
	str r1, [sp, #0x184]
	movs r0, #1
	str r0, [sp, #0x44]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x40]
	add r1, sp, #0x44
	add r0, sp, #0x40
	cmp r4, #1
	bhs _080669FA
	adds r0, r1, #0
_080669FA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08066A18
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08066A1C
	mov r0, r8
	bl func_080D3BC0
	b _08066A1C
_08066A18:
	movs r0, #0
	mov r8, r0
_08066A1C:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r0, sl
	lsls r0, r0, #0x10
	str r0, [sp, #0x17c]
	ldr r1, [sp, #0x184]
	cmp r2, r1
	beq _08066A4A
_08066A30:
	cmp r3, #0
	beq _08066A40
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066A40:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x184]
	cmp r2, r0
	bne _08066A30
_08066A4A:
	adds r5, r3, #0
	ldr r0, [sp, #0x44]
	cmp r0, #1
	bne _08066A66
	cmp r5, #0
	beq _08066A62
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08066A62:
	adds r5, #0x10
	b _08066A88
_08066A66:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08066A86
_08066A6E:
	cmp r2, #0
	beq _08066A7E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066A7E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08066A6E
_08066A86:
	adds r5, r2, #0
_08066A88:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08066A98
_08066A92:
	adds r1, #0x10
	cmp r1, r2
	bne _08066A92
_08066A98:
	cmp r0, #0
	beq _08066AA0
	bl free
_08066AA0:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08066AAC:
	ldr r3, _08066B0C @ =0x080FB85C
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x48
	strh r1, [r0]
	ldr r0, [sp, #0x13c]
	strh r2, [r0, #2]
	ldr r0, [sp, #0x48]
	str r3, [sp]
	ldr r1, [sp, #0x170]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r1, [sp, #0xe8]
	ldr r0, [r1]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r6, r0, #0
	movs r4, #0x48
	lsls r2, r4, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	ldr r1, [sp, #0x170]
	bl func_08008F0C
	add r5, sp, #8
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08066B10
	cmp r1, #0
	beq _08066B04
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066B04:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08066BD0
	.align 2, 0
_08066B0C: .4byte 0x080FB85C
_08066B10:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x50]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x4c]
	add r1, sp, #0x50
	add r0, sp, #0x4c
	cmp r4, #1
	bhs _08066B28
	adds r0, r1, #0
_08066B28:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08066B46
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08066B4A
	mov r0, r8
	bl func_080D3BC0
	b _08066B4A
_08066B46:
	movs r0, #0
	mov r8, r0
_08066B4A:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _08066B6E
_08066B56:
	cmp r3, #0
	beq _08066B66
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066B66:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08066B56
_08066B6E:
	adds r5, r3, #0
	ldr r0, [sp, #0x50]
	cmp r0, #1
	bne _08066B8A
	cmp r5, #0
	beq _08066B86
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08066B86:
	adds r5, #0x10
	b _08066BAC
_08066B8A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08066BAA
_08066B92:
	cmp r2, #0
	beq _08066BA2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066BA2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08066B92
_08066BAA:
	adds r5, r2, #0
_08066BAC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08066BBC
_08066BB6:
	adds r1, #0x10
	cmp r1, r2
	bne _08066BB6
_08066BBC:
	cmp r0, #0
	beq _08066BC4
	bl free
_08066BC4:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08066BD0:
	ldr r3, _08066C28 @ =0x080FB864
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x54
	strh r1, [r0]
	ldr r0, [sp, #0x140]
	strh r2, [r0, #2]
	ldr r0, [sp, #0x54]
	str r3, [sp]
	ldr r1, [sp, #0x180]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r1, [sp, #0xe8]
	ldr r0, [r1]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r6, r0, #0
	ldr r2, _08066C2C @ =0x06000A80
	add r0, sp, #8
	ldr r1, [sp, #0x180]
	bl func_08008F0C
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08066C30
	cmp r1, #0
	beq _08066C20
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08066C20:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08066CF0
	.align 2, 0
_08066C28: .4byte 0x080FB864
_08066C2C: .4byte 0x06000A80
_08066C30:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x5c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x58]
	add r1, sp, #0x5c
	add r0, sp, #0x58
	cmp r4, #1
	bhs _08066C48
	adds r0, r1, #0
_08066C48:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08066C66
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08066C6A
	mov r0, r8
	bl func_080D3BC0
	b _08066C6A
_08066C66:
	movs r0, #0
	mov r8, r0
_08066C6A:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _08066C8E
_08066C76:
	cmp r3, #0
	beq _08066C86
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066C86:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08066C76
_08066C8E:
	adds r5, r3, #0
	ldr r0, [sp, #0x5c]
	cmp r0, #1
	bne _08066CAA
	cmp r5, #0
	beq _08066CA6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066CA6:
	adds r5, #0x10
	b _08066CCC
_08066CAA:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08066CCA
_08066CB2:
	cmp r2, #0
	beq _08066CC2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066CC2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08066CB2
_08066CCA:
	adds r5, r2, #0
_08066CCC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08066CDC
_08066CD6:
	adds r1, #0x10
	cmp r1, r2
	bne _08066CD6
_08066CDC:
	cmp r0, #0
	beq _08066CE4
	bl free
_08066CE4:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r1, [sp, #0x188]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08066CF0:
	ldr r3, _08066D48 @ =0x080FB86C
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x60
	strh r1, [r0]
	ldr r4, [sp, #0x144]
	strh r2, [r4, #2]
	ldr r0, [sp, #0x60]
	str r3, [sp]
	ldr r1, [sp, #0x10c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r5, [sp, #0xe8]
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r6, r0, #0
	ldr r2, _08066D4C @ =0x06000C00
	add r0, sp, #8
	ldr r1, [sp, #0x10c]
	bl func_08008F0C
	add r7, sp, #8
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08066D50
	cmp r1, #0
	beq _08066D40
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08066D40:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08066E10
	.align 2, 0
_08066D48: .4byte 0x080FB86C
_08066D4C: .4byte 0x06000C00
_08066D50:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x68]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r1, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _08066D68
	adds r0, r1, #0
_08066D68:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08066D86
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08066D8A
	mov r0, r8
	bl func_080D3BC0
	b _08066D8A
_08066D86:
	movs r0, #0
	mov r8, r0
_08066D8A:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _08066DAE
_08066D96:
	cmp r3, #0
	beq _08066DA6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066DA6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08066D96
_08066DAE:
	adds r5, r3, #0
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _08066DCA
	cmp r5, #0
	beq _08066DC6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066DC6:
	adds r5, #0x10
	b _08066DEC
_08066DCA:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08066DEA
_08066DD2:
	cmp r2, #0
	beq _08066DE2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066DE2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08066DD2
_08066DEA:
	adds r5, r2, #0
_08066DEC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08066DFC
_08066DF6:
	adds r1, #0x10
	cmp r1, r2
	bne _08066DF6
_08066DFC:
	cmp r0, #0
	beq _08066E04
	bl free
_08066E04:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r1, [sp, #0x188]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08066E10:
	ldr r3, _08066E68 @ =0x080FB874
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x6c
	strh r1, [r0]
	ldr r4, [sp, #0x148]
	strh r2, [r4, #2]
	ldr r0, [sp, #0x6c]
	str r3, [sp]
	ldr r1, [sp, #0x11c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r5, [sp, #0xe8]
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r6, r0, #0
	ldr r2, _08066E6C @ =0x06000D80
	add r0, sp, #8
	ldr r1, [sp, #0x11c]
	bl func_08008F0C
	add r7, sp, #8
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08066E70
	cmp r1, #0
	beq _08066E60
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08066E60:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08066F30
	.align 2, 0
_08066E68: .4byte 0x080FB874
_08066E6C: .4byte 0x06000D80
_08066E70:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x74]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x70]
	add r1, sp, #0x74
	add r0, sp, #0x70
	cmp r4, #1
	bhs _08066E88
	adds r0, r1, #0
_08066E88:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08066EA6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08066EAA
	mov r0, r8
	bl func_080D3BC0
	b _08066EAA
_08066EA6:
	movs r0, #0
	mov r8, r0
_08066EAA:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _08066ECE
_08066EB6:
	cmp r3, #0
	beq _08066EC6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066EC6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08066EB6
_08066ECE:
	adds r5, r3, #0
	ldr r0, [sp, #0x74]
	cmp r0, #1
	bne _08066EEA
	cmp r5, #0
	beq _08066EE6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066EE6:
	adds r5, #0x10
	b _08066F0C
_08066EEA:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08066F0A
_08066EF2:
	cmp r2, #0
	beq _08066F02
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08066F02:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08066EF2
_08066F0A:
	adds r5, r2, #0
_08066F0C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08066F1C
_08066F16:
	adds r1, #0x10
	cmp r1, r2
	bne _08066F16
_08066F1C:
	cmp r0, #0
	beq _08066F24
	bl free
_08066F24:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r1, [sp, #0x188]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08066F30:
	movs r2, #0x78
	mov sl, r2
	ldr r3, _08066F9C @ =0x080FB90C
	movs r1, #4
	movs r2, #2
	add r0, sp, #0x78
	strh r1, [r0]
	ldr r4, [sp, #0x150]
	strh r2, [r4, #2]
	ldr r0, [sp, #0x78]
	str r3, [sp]
	ldr r1, [sp, #0x15c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r5, [sp, #0xe8]
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r0, #0
	mov r7, sl
	lsls r2, r7, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	ldr r1, [sp, #0x15c]
	bl func_08008F0C
	add r0, sp, #8
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08066FA0
	cmp r1, #0
	beq _08066F8C
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08066F8C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r5, sl
	lsls r5, r5, #0x10
	str r5, [sp, #0x118]
	b _0806706C
	.align 2, 0
_08066F9C: .4byte 0x080FB90C
_08066FA0:
	str r1, [sp, #0x184]
	movs r0, #1
	str r0, [sp, #0x80]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x7c]
	add r1, sp, #0x80
	add r0, sp, #0x7c
	cmp r4, #1
	bhs _08066FBA
	adds r0, r1, #0
_08066FBA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08066FD8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08066FDC
	mov r0, r8
	bl func_080D3BC0
	b _08066FDC
_08066FD8:
	movs r0, #0
	mov r8, r0
_08066FDC:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r0, sl
	lsls r0, r0, #0x10
	str r0, [sp, #0x118]
	ldr r1, [sp, #0x184]
	cmp r2, r1
	beq _0806700A
_08066FF0:
	cmp r3, #0
	beq _08067000
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067000:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x184]
	cmp r2, r0
	bne _08066FF0
_0806700A:
	adds r5, r3, #0
	ldr r0, [sp, #0x80]
	cmp r0, #1
	bne _08067026
	cmp r5, #0
	beq _08067022
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08067022:
	adds r5, #0x10
	b _08067048
_08067026:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08067046
_0806702E:
	cmp r2, #0
	beq _0806703E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806703E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806702E
_08067046:
	adds r5, r2, #0
_08067048:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08067058
_08067052:
	adds r1, #0x10
	cmp r1, r2
	bne _08067052
_08067058:
	cmp r0, #0
	beq _08067060
	bl free
_08067060:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806706C:
	movs r0, #0x80
	mov sl, r0
	ldr r3, _080670D8 @ =0x080FB914
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x84
	strh r1, [r0]
	ldr r1, [sp, #0x154]
	strh r2, [r1, #2]
	ldr r0, [sp, #0x84]
	str r3, [sp]
	ldr r1, [sp, #0x14c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r2, [sp, #0xe8]
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r6, r0, #0
	mov r4, sl
	lsls r2, r4, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	ldr r1, [sp, #0x14c]
	bl func_08008F0C
	add r5, sp, #8
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080670DC
	cmp r1, #0
	beq _080670C8
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080670C8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r4, sl
	lsls r4, r4, #0x10
	str r4, [sp, #0x124]
	b _080671A6
	.align 2, 0
_080670D8: .4byte 0x080FB914
_080670DC:
	str r1, [sp, #0x184]
	movs r0, #1
	add r1, sp, #0x8c
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x184]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x88
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080670F8
	adds r0, r1, #0
_080670F8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08067116
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806711A
	mov r0, r8
	bl func_080D3BC0
	b _0806711A
_08067116:
	movs r0, #0
	mov r8, r0
_0806711A:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r7, sl
	lsls r7, r7, #0x10
	str r7, [sp, #0x124]
	b _0806713E
_0806712A:
	cmp r3, #0
	beq _0806713A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806713A:
	adds r2, #0x10
	adds r3, #0x10
_0806713E:
	ldr r0, [sp, #0x184]
	cmp r2, r0
	bne _0806712A
	adds r5, r3, #0
	ldr r1, [sp, #0x8c]
	cmp r1, #1
	bne _08067160
	cmp r5, #0
	beq _0806715C
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806715C:
	adds r5, #0x10
	b _08067182
_08067160:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08067180
_08067168:
	cmp r2, #0
	beq _08067178
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067178:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08067168
_08067180:
	adds r5, r2, #0
_08067182:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08067192
_0806718C:
	adds r1, #0x10
	cmp r1, r2
	bne _0806718C
_08067192:
	cmp r0, #0
	beq _0806719A
	bl free
_0806719A:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080671A6:
	movs r0, #0x8c
	mov sl, r0
	ldr r3, _08067210 @ =0x080FB91C
	movs r1, #8
	movs r2, #2
	add r0, sp, #0x90
	strh r1, [r0]
	ldr r1, [sp, #0x158]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x178]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r2, [sp, #0xe8]
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #2
	adds r6, r0, #0
	mov r4, sl
	lsls r2, r4, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	ldr r1, [sp, #0x178]
	bl func_08008F0C
	add r5, sp, #8
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08067214
	cmp r1, #0
	beq _08067202
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067202:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r4, sl
	lsls r4, r4, #0x10
	str r4, [sp, #0x12c]
	b _080672DE
	.align 2, 0
_08067210: .4byte 0x080FB91C
_08067214:
	str r1, [sp, #0x184]
	movs r0, #1
	add r1, sp, #0x98
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x184]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x94
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08067230
	adds r0, r1, #0
_08067230:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806724E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08067252
	mov r0, r8
	bl func_080D3BC0
	b _08067252
_0806724E:
	movs r0, #0
	mov r8, r0
_08067252:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r7, sl
	lsls r7, r7, #0x10
	str r7, [sp, #0x12c]
	b _08067276
_08067262:
	cmp r3, #0
	beq _08067272
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067272:
	adds r2, #0x10
	adds r3, #0x10
_08067276:
	ldr r0, [sp, #0x184]
	cmp r2, r0
	bne _08067262
	adds r5, r3, #0
	ldr r1, [sp, #0x98]
	cmp r1, #1
	bne _08067298
	cmp r5, #0
	beq _08067294
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08067294:
	adds r5, #0x10
	b _080672BA
_08067298:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080672B8
_080672A0:
	cmp r2, #0
	beq _080672B0
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080672B0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080672A0
_080672B8:
	adds r5, r2, #0
_080672BA:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080672CA
_080672C4:
	adds r1, #0x10
	cmp r1, r2
	bne _080672C4
_080672CA:
	cmp r0, #0
	beq _080672D2
	bl free
_080672D2:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080672DE:
	ldr r1, [sp, #0xe8]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08067318 @ =0x08752F8C
	add r0, sp, #8
	ldr r2, _0806731C @ =0x06010200
	movs r3, #0x80
	bl func_08008F0C
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08067320
	cmp r1, #0
	beq _08067310
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08067310:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080673E8
	.align 2, 0
_08067318: .4byte 0x08752F8C
_0806731C: .4byte 0x06010200
_08067320:
	str r1, [sp, #0x184]
	movs r0, #1
	add r1, sp, #0xa0
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x184]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0x9c
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _0806733E
	mov r0, sl
_0806733E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806735C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08067360
	mov r0, r8
	bl func_080D3BC0
	b _08067360
_0806735C:
	movs r0, #0
	mov r8, r0
_08067360:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	b _0806737E
_0806736A:
	cmp r3, #0
	beq _0806737A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806737A:
	adds r2, #0x10
	adds r3, #0x10
_0806737E:
	ldr r0, [sp, #0x184]
	cmp r2, r0
	bne _0806736A
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080673A2
	cmp r5, #0
	beq _0806739E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806739E:
	adds r5, #0x10
	b _080673C4
_080673A2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080673C2
_080673AA:
	cmp r2, #0
	beq _080673BA
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080673BA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080673AA
_080673C2:
	adds r5, r2, #0
_080673C4:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080673D4
_080673CE:
	adds r1, #0x10
	cmp r1, r2
	bne _080673CE
_080673D4:
	cmp r0, #0
	beq _080673DC
	bl free
_080673DC:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r1, [sp, #0x188]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080673E8:
	ldr r2, [sp, #0xe8]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08067424 @ =0x0875300C
	add r0, sp, #8
	ldr r2, _08067428 @ =0x05000240
	movs r3, #0x20
	bl func_08008F0C
	add r3, sp, #8
	mov sb, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806742C
	cmp r1, #0
	beq _0806741A
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806741A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080674F8
	.align 2, 0
_08067424: .4byte 0x0875300C
_08067428: .4byte 0x05000240
_0806742C:
	str r1, [sp, #0x184]
	movs r0, #1
	add r1, sp, #0xa8
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x184]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xa4
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _0806744A
	mov r0, sl
_0806744A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08067468
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806746C
	mov r0, r8
	bl func_080D3BC0
	b _0806746C
_08067468:
	movs r0, #0
	mov r8, r0
_0806746C:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x184]
	cmp r2, r4
	beq _08067494
_0806747A:
	cmp r3, #0
	beq _0806748A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806748A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x184]
	cmp r2, r5
	bne _0806747A
_08067494:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _080674B2
	cmp r5, #0
	beq _080674AE
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080674AE:
	adds r5, #0x10
	b _080674D4
_080674B2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080674D2
_080674BA:
	cmp r2, #0
	beq _080674CA
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080674CA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080674BA
_080674D2:
	adds r5, r2, #0
_080674D4:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080674E4
_080674DE:
	adds r1, #0x10
	cmp r1, r2
	bne _080674DE
_080674E4:
	cmp r0, #0
	beq _080674EC
	bl free
_080674EC:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080674F8:
	ldr r1, [sp, #0xe8]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08067534 @ =0x08750C8C
	add r0, sp, #8
	ldr r2, _08067538 @ =0x06002A00
	movs r3, #0xd0
	lsls r3, r3, #1
	bl func_08008F0C
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806753C
	cmp r1, #0
	beq _0806752C
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806752C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08067604
	.align 2, 0
_08067534: .4byte 0x08750C8C
_08067538: .4byte 0x06002A00
_0806753C:
	str r1, [sp, #0x184]
	movs r0, #1
	add r1, sp, #0xb0
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x184]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xac
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _0806755A
	mov r0, sl
_0806755A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08067578
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806757C
	mov r0, r8
	bl func_080D3BC0
	b _0806757C
_08067578:
	movs r0, #0
	mov r8, r0
_0806757C:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	b _0806759A
_08067586:
	cmp r3, #0
	beq _08067596
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067596:
	adds r2, #0x10
	adds r3, #0x10
_0806759A:
	ldr r0, [sp, #0x184]
	cmp r2, r0
	bne _08067586
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080675BE
	cmp r5, #0
	beq _080675BA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080675BA:
	adds r5, #0x10
	b _080675E0
_080675BE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080675DE
_080675C6:
	cmp r2, #0
	beq _080675D6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080675D6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080675C6
_080675DE:
	adds r5, r2, #0
_080675E0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080675F0
_080675EA:
	adds r1, #0x10
	cmp r1, r2
	bne _080675EA
_080675F0:
	cmp r0, #0
	beq _080675F8
	bl free
_080675F8:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r1, [sp, #0x188]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08067604:
	ldr r2, [sp, #0xe8]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08067640 @ =0x0875166C
	add r0, sp, #8
	ldr r2, _08067644 @ =0x06001380
	movs r3, #0x90
	lsls r3, r3, #1
	bl func_08008F0C
	add r3, sp, #8
	mov sb, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08067648
	cmp r1, #0
	beq _08067638
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067638:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08067714
	.align 2, 0
_08067640: .4byte 0x0875166C
_08067644: .4byte 0x06001380
_08067648:
	str r1, [sp, #0x184]
	movs r0, #1
	add r1, sp, #0xb8
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x184]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xb4
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08067666
	mov r0, sl
_08067666:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08067684
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08067688
	mov r0, r8
	bl func_080D3BC0
	b _08067688
_08067684:
	movs r0, #0
	mov r8, r0
_08067688:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x184]
	cmp r2, r4
	beq _080676B0
_08067696:
	cmp r3, #0
	beq _080676A6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080676A6:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x184]
	cmp r2, r5
	bne _08067696
_080676B0:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _080676CE
	cmp r5, #0
	beq _080676CA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080676CA:
	adds r5, #0x10
	b _080676F0
_080676CE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080676EE
_080676D6:
	cmp r2, #0
	beq _080676E6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080676E6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080676D6
_080676EE:
	adds r5, r2, #0
_080676F0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08067700
_080676FA:
	adds r1, #0x10
	cmp r1, r2
	bne _080676FA
_08067700:
	cmp r0, #0
	beq _08067708
	bl free
_08067708:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08067714:
	ldr r1, [sp, #0xe8]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08067750 @ =0x087510AC
	add r0, sp, #8
	ldr r2, _08067754 @ =0x060014A0
	movs r3, #0x90
	lsls r3, r3, #1
	bl func_08008F0C
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08067758
	cmp r1, #0
	beq _08067748
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08067748:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08067820
	.align 2, 0
_08067750: .4byte 0x087510AC
_08067754: .4byte 0x060014A0
_08067758:
	str r1, [sp, #0x184]
	movs r0, #1
	add r1, sp, #0xc0
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x184]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xbc
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08067776
	mov r0, sl
_08067776:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08067794
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08067798
	mov r0, r8
	bl func_080D3BC0
	b _08067798
_08067794:
	movs r0, #0
	mov r8, r0
_08067798:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080677B6
_080677A2:
	cmp r3, #0
	beq _080677B2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080677B2:
	adds r2, #0x10
	adds r3, #0x10
_080677B6:
	ldr r0, [sp, #0x184]
	cmp r2, r0
	bne _080677A2
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080677DA
	cmp r5, #0
	beq _080677D6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080677D6:
	adds r5, #0x10
	b _080677FC
_080677DA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080677FA
_080677E2:
	cmp r2, #0
	beq _080677F2
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080677F2:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080677E2
_080677FA:
	adds r5, r2, #0
_080677FC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806780C
_08067806:
	adds r1, #0x10
	cmp r1, r2
	bne _08067806
_0806780C:
	cmp r0, #0
	beq _08067814
	bl free
_08067814:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r1, [sp, #0x188]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08067820:
	ldr r2, [sp, #0xe8]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _0806785C @ =0x0875178C
	add r0, sp, #8
	ldr r2, _08067860 @ =0x05000040
	movs r3, #0x20
	bl func_08008F0C
	add r3, sp, #8
	mov sb, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08067864
	cmp r1, #0
	beq _08067852
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067852:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08067930
	.align 2, 0
_0806785C: .4byte 0x0875178C
_08067860: .4byte 0x05000040
_08067864:
	str r1, [sp, #0x184]
	movs r0, #1
	add r1, sp, #0xc8
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x184]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xc4
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08067882
	mov r0, sl
_08067882:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080678A0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080678A4
	mov r0, r8
	bl func_080D3BC0
	b _080678A4
_080678A0:
	movs r0, #0
	mov r8, r0
_080678A4:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x184]
	cmp r2, r4
	beq _080678CC
_080678B2:
	cmp r3, #0
	beq _080678C2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080678C2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x184]
	cmp r2, r5
	bne _080678B2
_080678CC:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _080678EA
	cmp r5, #0
	beq _080678E6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080678E6:
	adds r5, #0x10
	b _0806790C
_080678EA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806790A
_080678F2:
	cmp r2, #0
	beq _08067902
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067902:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080678F2
_0806790A:
	adds r5, r2, #0
_0806790C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806791C
_08067916:
	adds r1, #0x10
	cmp r1, r2
	bne _08067916
_0806791C:
	cmp r0, #0
	beq _08067924
	bl free
_08067924:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08067930:
	ldr r1, [sp, #0xe8]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _0806796C @ =0x08750C4C
	add r0, sp, #8
	ldr r2, _08067970 @ =0x060100A0
	movs r3, #0x20
	bl func_08008F0C
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08067974
	cmp r1, #0
	beq _08067962
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08067962:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08067A3C
	.align 2, 0
_0806796C: .4byte 0x08750C4C
_08067970: .4byte 0x060100A0
_08067974:
	str r1, [sp, #0x184]
	movs r0, #1
	add r1, sp, #0xd0
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x184]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xcc
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08067992
	mov r0, sl
_08067992:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080679B0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080679B4
	mov r0, r8
	bl func_080D3BC0
	b _080679B4
_080679B0:
	movs r0, #0
	mov r8, r0
_080679B4:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080679D2
_080679BE:
	cmp r3, #0
	beq _080679CE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080679CE:
	adds r2, #0x10
	adds r3, #0x10
_080679D2:
	ldr r0, [sp, #0x184]
	cmp r2, r0
	bne _080679BE
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _080679F6
	cmp r5, #0
	beq _080679F2
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080679F2:
	adds r5, #0x10
	b _08067A18
_080679F6:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08067A16
_080679FE:
	cmp r2, #0
	beq _08067A0E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067A0E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080679FE
_08067A16:
	adds r5, r2, #0
_08067A18:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08067A28
_08067A22:
	adds r1, #0x10
	cmp r1, r2
	bne _08067A22
_08067A28:
	cmp r0, #0
	beq _08067A30
	bl free
_08067A30:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r1, [sp, #0x188]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08067A3C:
	ldr r2, [sp, #0xe8]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08067A78 @ =0x08750C6C
	add r0, sp, #8
	ldr r2, _08067A7C @ =0x05000220
	movs r3, #0x20
	bl func_08008F0C
	add r3, sp, #8
	mov sb, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08067A80
	cmp r1, #0
	beq _08067A6E
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067A6E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08067B4C
	.align 2, 0
_08067A78: .4byte 0x08750C6C
_08067A7C: .4byte 0x05000220
_08067A80:
	str r1, [sp, #0x184]
	movs r0, #1
	add r1, sp, #0xd8
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x184]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xd4
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08067A9E
	mov r0, sl
_08067A9E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08067ABC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08067AC0
	mov r0, r8
	bl func_080D3BC0
	b _08067AC0
_08067ABC:
	movs r0, #0
	mov r8, r0
_08067AC0:
	adds r5, r0, #0
	str r5, [sp, #0x188]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x184]
	cmp r2, r4
	beq _08067AE8
_08067ACE:
	cmp r3, #0
	beq _08067ADE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067ADE:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x184]
	cmp r2, r5
	bne _08067ACE
_08067AE8:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _08067B06
	cmp r5, #0
	beq _08067B02
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08067B02:
	adds r5, #0x10
	b _08067B28
_08067B06:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08067B26
_08067B0E:
	cmp r2, #0
	beq _08067B1E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067B1E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08067B0E
_08067B26:
	adds r5, r2, #0
_08067B28:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08067B38
_08067B32:
	adds r1, #0x10
	cmp r1, r2
	bne _08067B32
_08067B38:
	cmp r0, #0
	beq _08067B40
	bl free
_08067B40:
	ldr r0, [sp, #0x188]
	add r0, r8
	ldr r7, [sp, #0x188]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08067B4C:
	movs r0, #4
	str r0, [sp, #0xf0]
	ldr r1, [sp, #0xe8]
	ldr r2, _08067BBC @ =0x0000058C
	adds r4, r1, r2
	ldr r0, [r4]
	ldrb r0, [r0, #0x11]
	ldr r3, [sp, #0x168]
	strb r0, [r3]
	ldr r1, [r4]
	movs r0, #0xc8
	ldr r5, [sp, #0x160]
	str r0, [r5]
	ldrb r1, [r1, #0x10]
	lsrs r2, r1, #3
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r1, r1, #0x1d
	lsrs r1, r1, #0x1d
	adds r0, r0, r1
	ldr r6, [sp, #0x164]
	str r0, [r6]
	add r1, sp, #0xdc
	add r3, sp, #0xe0
	ldr r2, [r1]
	ldr r0, [r3]
	cmp r2, r0
	bls _08067B86
	adds r1, r3, #0
_08067B86:
	ldr r3, [r1]
	ldr r0, [r4]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	cmp r0, #5
	bhi _08067BEA
	ldr r5, [sp, #0x168]
	add r4, sp, #0xe4
	ldrb r1, [r4]
	lsls r0, r1, #0x19
	lsrs r2, r0, #0x1b
	cmp r2, #0
	bne _08067BC0
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	movs r2, #4
	rsbs r2, r2, #0
	subs r0, #1
	movs r1, #3
	ands r0, r1
	ldrb r1, [r5]
	ands r2, r1
	orrs r2, r0
	strb r2, [r4]
	movs r2, #0x1d
	b _08067BC2
	.align 2, 0
_08067BBC: .4byte 0x0000058C
_08067BC0:
	subs r2, #1
_08067BC2:
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #2
	ldrb r1, [r5]
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strb r0, [r5]
	ldr r7, [sp, #0x168]
	ldrb r1, [r7]
	lsls r0, r1, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #3
	bne _08067BEA
	lsls r0, r1, #0x19
	lsrs r0, r0, #0x1b
	cmp r0, #0x1d
	bne _08067BEA
	subs r3, #1
_08067BEA:
	ldr r0, [sp, #0xec]
	ldr r1, [r0, #0x18]
	ldr r2, [sp, #0xf0]
	lsls r4, r2, #6
	adds r1, r1, r4
	adds r1, #0xc
	movs r6, #0x20
	str r6, [sp]
	adds r0, r3, #0
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0xec]
	ldr r0, [r3, #0x18]
	adds r0, r0, r4
	adds r0, #0xe
	ldr r5, [sp, #0x118]
	lsrs r1, r5, #0x10
	movs r7, #0
	str r7, [sp]
	str r6, [sp, #4]
	movs r2, #4
	movs r3, #2
	bl func_0804E9F4
	ldr r1, [sp, #0xec]
	ldr r0, [r1, #0x18]
	adds r0, r0, r4
	adds r0, #0x1a
	ldr r3, [sp, #0x168]
	ldrb r2, [r3]
	lsls r2, r2, #0x1e
	lsrs r2, r2, #0x1e
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, #0x48
	str r7, [sp]
	str r6, [sp, #4]
	movs r2, #6
	movs r3, #2
	bl func_0804E9F4
	ldr r4, [sp, #0xf0]
	adds r4, #3
	ldr r5, [sp, #0xec]
	ldr r0, [r5, #0x18]
	lsls r4, r4, #6
	mov sb, r4
	add r0, sb
	adds r0, #0xa
	ldr r2, [sp, #0x174]
	lsrs r1, r2, #0x10
	str r7, [sp]
	str r6, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0xf0]
	adds r3, #5
	ldr r0, [r5, #0x18]
	lsls r3, r3, #6
	mov r8, r3
	add r0, r8
	adds r0, #0xa
	ldr r4, [sp, #0x17c]
	lsrs r1, r4, #0x10
	str r7, [sp]
	str r6, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [sp, #0xe8]
	ldr r1, _08067D80 @ =0x0000058C
	adds r5, r0, r1
	ldr r0, [r5]
	ldr r4, _08067D84 @ =0x00001AA8
	adds r0, r0, r4
	movs r1, #0
	bl func_0809B038
	ldr r0, [r0]
	mov sl, r0
	ldr r0, [r5]
	adds r0, r0, r4
	movs r1, #0
	bl func_0809B038
	ldr r4, [r0, #4]
	ldr r2, [sp, #0xec]
	ldr r1, [r2, #0x18]
	add r1, sb
	adds r1, #0x34
	str r6, [sp]
	mov r0, sl
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0xec]
	ldr r1, [r3, #0x18]
	add r1, r8
	adds r1, #0x34
	str r6, [sp]
	adds r0, r4, #0
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r4, [sp, #0xec]
	ldr r0, [r4, #0x18]
	add r0, sb
	adds r0, #0x36
	ldr r5, [sp, #0x16c]
	lsrs r4, r5, #0x10
	str r7, [sp]
	str r6, [sp, #4]
	adds r1, r4, #0
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r1, [sp, #0xec]
	ldr r0, [r1, #0x18]
	add r0, r8
	adds r0, #0x36
	str r7, [sp]
	str r6, [sp, #4]
	adds r1, r4, #0
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r2, [sp, #0xf0]
	adds r2, #8
	str r2, [sp, #0xf0]
	movs r0, #0x10
	str r0, [sp, #0xc]
	add r1, sp, #8
	lsls r0, r2, #3
	strh r0, [r1]
	ldr r3, [sp, #0xe8]
	ldr r4, _08067D88 @ =0x00001264
	adds r2, r3, r4
	ldr r0, [r2]
	cmp r0, #0x3c
	bhi _08067D34
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r2, r0
	cmp r0, #0
	beq _08067D2E
	ldm r1!, {r5, r6, r7}
	stm r0!, {r5, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067D2E:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_08067D34:
	ldr r1, [sp, #0xf0]
	adds r1, #1
	ldr r2, [sp, #0xec]
	ldr r0, [r2, #0x18]
	lsls r4, r1, #6
	adds r0, r0, r4
	adds r0, #8
	ldr r1, _08067D8C @ =0x0000015B
	movs r2, #0
	str r2, [sp]
	movs r5, #0x20
	str r5, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	ldr r3, [sp, #0xe8]
	ldr r6, _08067D80 @ =0x0000058C
	adds r0, r3, r6
	ldr r0, [r0]
	ldr r7, _08067D84 @ =0x00001AA8
	adds r0, r0, r7
	ldrb r0, [r0, #4]
	lsls r0, r0, #0x1f
	cmp r0, #0
	beq _08067D94
	ldr r0, [sp, #0xec]
	ldr r1, [r0, #0x18]
	adds r1, r1, r4
	adds r1, #0x14
	ldr r0, _08067D90 @ =0x000186A0
	movs r2, #0xa8
	lsls r2, r2, #1
	str r5, [sp]
	movs r3, #0
	bl func_0804EE30
	b _08067DAA
	.align 2, 0
_08067D80: .4byte 0x0000058C
_08067D84: .4byte 0x00001AA8
_08067D88: .4byte 0x00001264
_08067D8C: .4byte 0x0000015B
_08067D90: .4byte 0x000186A0
_08067D94:
	ldr r2, [sp, #0xec]
	ldr r1, [r2, #0x18]
	adds r1, r1, r4
	adds r1, #0x12
	ldr r0, _08067F88 @ =0x00002710
	movs r2, #0xa8
	lsls r2, r2, #1
	str r5, [sp]
	movs r3, #0
	bl func_0804EE30
_08067DAA:
	ldr r3, [sp, #0xec]
	ldr r0, [r3, #0x18]
	ldr r4, [sp, #0xf0]
	lsls r6, r4, #6
	adds r0, r0, r6
	adds r0, #0x14
	ldr r5, [sp, #0x124]
	lsrs r1, r5, #0x10
	movs r5, #0
	str r5, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r2, #6
	movs r3, #2
	bl func_0804E9F4
	ldr r7, [sp, #0xec]
	ldr r0, [r7, #0x18]
	adds r0, r0, r6
	adds r0, #0x24
	ldr r2, [sp, #0x12c]
	lsrs r1, r2, #0x10
	str r5, [sp]
	str r4, [sp, #4]
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0xf0]
	adds r3, #2
	str r3, [sp, #0xf0]
	ldr r4, [sp, #0xe8]
	ldr r5, _08067F8C @ =0x0000058C
	adds r0, r4, r5
	ldr r1, [r0]
	ldr r6, _08067F90 @ =0x00001AA8
	adds r0, r1, r6
	ldrb r0, [r0, #4]
	lsls r0, r0, #0x1f
	ldr r7, _08067F88 @ =0x00002710
	str r7, [sp, #0xf8]
	cmp r0, #0
	beq _08067E04
	ldr r0, _08067F94 @ =0x000186A0
	str r0, [sp, #0xf8]
_08067E04:
	movs r2, #0
	str r2, [sp, #0xfc]
	ldr r3, _08067F98 @ =0x00001AB0
	adds r0, r1, r3
	ldr r0, [r0]
	cmp r2, r0
	blo _08067E14
	b _080681C6
_08067E14:
	ldr r4, [sp, #0x168]
	ldrb r0, [r4]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	cmp r2, r0
	blo _08067E24
	b _080681C6
_08067E24:
	movs r5, #0x20
	mov sl, r5
	ldr r7, _08067F9C @ =0x00001264
	ldr r6, [sp, #0xe8]
	adds r7, r6, r7
	str r7, [sp, #0x100]
_08067E30:
	movs r6, #0
	ldr r1, [sp, #0x168]
	ldrb r0, [r1]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	ldr r2, [sp, #0xfc]
	subs r0, r0, r2
	ldr r5, [sp, #0xf0]
	adds r5, #1
	ldr r3, [sp, #0xec]
	ldr r1, [r3, #0x18]
	lsls r4, r5, #6
	adds r1, r1, r4
	adds r1, #8
	mov r7, sl
	str r7, [sp]
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0xec]
	ldr r0, [r1, #0x18]
	adds r0, r0, r4
	adds r0, #0xa
	movs r2, #0x38
	lsls r1, r2, #0x10
	str r6, [sp]
	str r7, [sp, #4]
	lsrs r1, r1, #0x10
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	movs r0, #0x40
	str r0, [sp, #0xc]
	add r0, sp, #8
	ldr r3, [sp, #0xf0]
	lsls r1, r3, #3
	strh r1, [r0]
	ldr r4, [sp, #0x100]
	ldr r0, [r4]
	adds r2, r1, #0
	str r5, [sp, #0x110]
	cmp r0, #0x3c
	bhi _08067EAA
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _08067EA2
	add r1, sp, #8
	ldm r1!, {r5, r6, r7}
	stm r0!, {r5, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067EA2:
	ldr r1, [sp, #0x100]
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08067EAA:
	movs r0, #0xd0
	str r0, [sp, #0xc]
	add r0, sp, #8
	strh r2, [r0]
	ldr r3, [sp, #0xe8]
	ldr r4, _08067F9C @ =0x00001264
	adds r2, r3, r4
	ldr r0, [r2]
	cmp r0, #0x3c
	bhi _08067ED8
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r2, r0
	cmp r0, #0
	beq _08067ED2
	add r1, sp, #8
	ldm r1!, {r5, r6, r7}
	stm r0!, {r5, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08067ED2:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_08067ED8:
	movs r0, #0x40
	str r0, [sp, #0xc]
	add r1, sp, #8
	ldr r2, [sp, #0xf0]
	adds r2, #2
	lsls r0, r2, #3
	strh r0, [r1]
	ldr r0, [sp, #0xe8]
	ldr r1, _08067FA0 @ =0x00001638
	adds r3, r0, r1
	ldr r0, [r3]
	mov r8, r2
	cmp r0, #0x3b
	bhi _08067F0E
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r3, r0
	cmp r0, #0
	beq _08067F08
	add r1, sp, #8
	ldm r1!, {r2, r4, r5}
	stm r0!, {r2, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08067F08:
	ldr r0, [r3]
	adds r0, #1
	str r0, [r3]
_08067F0E:
	movs r0, #0xe0
	str r0, [sp, #0xc]
	ldr r6, [sp, #0xe8]
	ldr r7, _08067FA0 @ =0x00001638
	adds r2, r6, r7
	ldr r0, [r2]
	cmp r0, #0x3b
	bhi _08067F38
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r2, r0
	cmp r0, #0
	beq _08067F32
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08067F32:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_08067F38:
	ldr r6, [sp, #0xe8]
	ldr r7, _08067F8C @ =0x0000058C
	adds r0, r6, r7
	ldr r0, [r0]
	ldr r1, _08067F90 @ =0x00001AA8
	adds r0, r0, r1
	ldr r1, [sp, #0xfc]
	bl func_0809B018
	ldr r7, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0xf8]
	bl func_080D0EDA
	adds r5, r0, #0
	cmp r5, #0
	beq _08067FD6
	ldr r2, [sp, #0xec]
	ldr r0, [r2, #0x18]
	ldr r3, [sp, #0x110]
	lsls r6, r3, #6
	adds r0, r0, r6
	adds r0, #0x14
	movs r1, #0
	str r1, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0xad
	lsls r1, r1, #1
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	cmp r5, #0x64
	ble _08067FA4
	ldr r0, [sp, #0xec]
	ldr r1, [r0, #0x18]
	adds r1, r1, r6
	adds r1, #0x1e
	b _08067FB0
	.align 2, 0
_08067F88: .4byte 0x00002710
_08067F8C: .4byte 0x0000058C
_08067F90: .4byte 0x00001AA8
_08067F94: .4byte 0x000186A0
_08067F98: .4byte 0x00001AB0
_08067F9C: .4byte 0x00001264
_08067FA0: .4byte 0x00001638
_08067FA4:
	cmp r5, #0xa
	ble _08067FC0
	ldr r2, [sp, #0xec]
	ldr r1, [r2, #0x18]
	adds r1, r1, r6
	adds r1, #0x1c
_08067FB0:
	str r4, [sp]
	adds r0, r5, #0
	movs r2, #0xa8
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EE30
	b _08067FD6
_08067FC0:
	ldr r3, [sp, #0xec]
	ldr r1, [r3, #0x18]
	adds r1, r1, r6
	adds r1, #0x1a
	str r4, [sp]
	adds r0, r5, #0
	movs r2, #0xa8
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EE30
_08067FD6:
	adds r0, r7, #0
	ldr r1, [sp, #0xf8]
	bl __umodsi3
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	ldr r1, [sp, #0xf8]
	bl func_080D0EDA
	adds r4, r0, #0
	movs r6, #0
	ldr r5, [sp, #0xf0]
	adds r5, #3
	str r5, [sp, #0x114]
	ldr r7, [sp, #0xfc]
	adds r7, #1
	mov sb, r7
	b _08068024
_08067FFE:
	ldr r1, [sp, #0xec]
	ldr r0, [r1, #0x18]
	mov r2, r8
	lsls r1, r2, #6
	adds r0, r0, r1
	movs r1, #0x11
	subs r1, r1, r6
	lsls r1, r1, #1
	adds r0, r0, r1
	movs r1, #2
	str r1, [sp]
	mov r3, sl
	str r3, [sp, #4]
	movs r1, #0xa4
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #1
_08068024:
	adds r1, r4, #0
	cmp r4, #0
	bge _0806802C
	adds r1, r4, #7
_0806802C:
	asrs r2, r1, #3
	cmp r6, r2
	blt _08067FFE
	cmp r6, #9
	bgt _08068088
	ldr r5, [sp, #0xec]
	ldr r1, [r5, #0x18]
	mov r7, r8
	lsls r0, r7, #6
	adds r1, r1, r0
	movs r0, #0x11
	subs r0, r0, r6
	lsls r0, r0, #1
	adds r3, r1, r0
	lsls r1, r2, #3
	subs r1, r4, r1
	adds r1, #0x9c
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #2
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	adds r0, r3, #0
	b _0806807A
_0806805E:
	ldr r1, [sp, #0xec]
	ldr r0, [r1, #0x18]
	mov r2, r8
	lsls r1, r2, #6
	adds r0, r0, r1
	movs r1, #0x11
	subs r1, r1, r6
	lsls r1, r1, #1
	adds r0, r0, r1
	movs r1, #2
	str r1, [sp]
	mov r3, sl
	str r3, [sp, #4]
	movs r1, #0x9c
_0806807A:
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #1
	cmp r6, #9
	ble _0806805E
_08068088:
	movs r6, #0
	ldr r4, [sp, #0xe8]
	ldr r5, _08068100 @ =0x0000058C
	adds r0, r4, r5
	ldr r0, [r0]
	ldr r7, _08068104 @ =0x00001AA8
	adds r0, r0, r7
	ldr r1, [sp, #0xfc]
	bl func_0809B018
	ldr r0, [r0, #4]
	adds r7, r0, #0
	ldr r1, [sp, #0xf8]
	bl func_080D0EDA
	adds r5, r0, #0
	cmp r5, #0
	beq _080680E2
	ldr r1, [sp, #0xec]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x110]
	lsls r4, r2, #6
	adds r0, r0, r4
	adds r0, #0x32
	str r6, [sp]
	mov r3, sl
	str r3, [sp, #4]
	movs r1, #0xad
	lsls r1, r1, #1
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	ldr r0, [sp, #0xec]
	ldr r1, [r0, #0x18]
	adds r1, r1, r4
	adds r1, #0x30
	mov r2, sl
	str r2, [sp]
	adds r0, r5, #0
	movs r2, #0xa8
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EE30
_080680E2:
	adds r0, r7, #0
	ldr r1, [sp, #0xf8]
	bl __umodsi3
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #4
	ldr r1, [sp, #0xf8]
	bl func_080D0EDA
	adds r4, r0, #0
	movs r5, #0x24
	b _0806812A
	.align 2, 0
_08068100: .4byte 0x0000058C
_08068104: .4byte 0x00001AA8
_08068108:
	ldr r3, [sp, #0xec]
	ldr r0, [r3, #0x18]
	mov r7, r8
	lsls r1, r7, #6
	adds r0, r0, r1
	adds r0, r0, r5
	movs r1, #2
	str r1, [sp]
	mov r1, sl
	str r1, [sp, #4]
	movs r1, #0xad
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r6, #1
_0806812A:
	adds r1, r4, #0
	cmp r4, #0
	bge _08068132
	adds r1, r4, #7
_08068132:
	asrs r2, r1, #3
	cmp r6, r2
	blt _08068108
	cmp r6, #9
	bgt _0806819C
	ldr r3, [sp, #0xec]
	ldr r1, [r3, #0x18]
	mov r5, r8
	lsls r0, r5, #6
	adds r1, r1, r0
	adds r0, r6, #0
	adds r0, #0x12
	lsls r0, r0, #1
	adds r3, r1, r0
	lsls r1, r2, #3
	subs r1, r4, r1
	adds r1, #0xa5
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #2
	str r0, [sp]
	mov r7, sl
	str r7, [sp, #4]
	adds r0, r3, #0
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #1
	cmp r6, #9
	bgt _0806819C
	lsls r0, r6, #1
	adds r4, r0, #0
	adds r4, #0x24
_08068176:
	ldr r1, [sp, #0xec]
	ldr r0, [r1, #0x18]
	mov r2, r8
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r4
	movs r1, #2
	str r1, [sp]
	mov r3, sl
	str r3, [sp, #4]
	movs r1, #0xa5
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r4, #2
	adds r6, #1
	cmp r6, #9
	ble _08068176
_0806819C:
	ldr r4, [sp, #0x114]
	str r4, [sp, #0xf0]
	mov r5, sb
	str r5, [sp, #0xfc]
	ldr r6, [sp, #0xe8]
	ldr r7, _08068334 @ =0x0000058C
	adds r0, r6, r7
	ldr r0, [r0]
	ldr r1, _08068338 @ =0x00001AB0
	adds r0, r0, r1
	ldr r0, [r0]
	cmp sb, r0
	bhs _080681C6
	ldr r2, [sp, #0x168]
	ldrb r0, [r2]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	cmp sb, r0
	bhs _080681C6
	b _08067E30
_080681C6:
	ldr r3, [sp, #0xf0]
	adds r3, #1
	str r3, [sp, #0xf0]
	movs r4, #1
	mov sb, r4
	ldr r5, [sp, #0xe8]
	ldr r6, _08068334 @ =0x0000058C
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r7, _0806833C @ =0x00001BA4
	adds r0, r0, r7
	ldr r0, [r0]
	cmp sb, r0
	blo _080681E4
	b _08068316
_080681E4:
	movs r0, #0
	mov sl, r0
	movs r1, #0x20
	mov r8, r1
	lsls r0, r3, #6
	adds r7, r0, #0
	adds r7, #0x80
	adds r2, r6, #0
	adds r2, r5, r2
	str r2, [sp, #0x108]
_080681F8:
	ldr r3, [sp, #0x168]
	ldrb r0, [r3]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	movs r4, #3
	ands r0, r4
	movs r2, #4
	rsbs r2, r2, #0
	add r5, sp, #0x104
	ldrb r5, [r5]
	ands r2, r5
	orrs r2, r0
	add r6, sp, #0x104
	strb r2, [r6]
	lsls r2, r2, #0x1e
	lsrs r2, r2, #0x1e
	mov r0, sb
	subs r2, r2, r0
	ands r2, r4
	ldr r1, [sp, #0xec]
	ldr r0, [r1, #0x18]
	ldr r3, [sp, #0xf0]
	lsls r6, r3, #6
	adds r0, r0, r6
	adds r0, #4
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, #0x48
	mov r4, sl
	str r4, [sp]
	mov r5, r8
	str r5, [sp, #4]
	movs r2, #6
	movs r3, #2
	bl func_0804E9F4
	ldr r1, [sp, #0xec]
	ldr r0, [r1, #0x18]
	adds r0, r0, r6
	adds r0, #0x12
	str r4, [sp]
	str r5, [sp, #4]
	ldr r2, [sp, #0x174]
	lsrs r1, r2, #0x10
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0xec]
	ldr r0, [r3, #0x18]
	adds r0, r0, r7
	adds r0, #0x12
	str r4, [sp]
	str r5, [sp, #4]
	ldr r4, [sp, #0x17c]
	lsrs r1, r4, #0x10
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r5, [sp, #0x108]
	ldr r0, [r5]
	ldr r1, _08068340 @ =0x00001AA8
	adds r0, r0, r1
	mov r1, sb
	bl func_0809B038
	ldr r4, [r0]
	ldr r0, [r5]
	ldr r2, _08068340 @ =0x00001AA8
	adds r0, r0, r2
	mov r1, sb
	bl func_0809B038
	ldr r5, [r0, #4]
	ldr r3, [sp, #0xec]
	ldr r1, [r3, #0x18]
	adds r1, r1, r6
	adds r1, #0x34
	mov r0, r8
	str r0, [sp]
	adds r0, r4, #0
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r2, [sp, #0xec]
	ldr r1, [r2, #0x18]
	adds r1, r1, r7
	adds r1, #0x34
	mov r3, r8
	str r3, [sp]
	adds r0, r5, #0
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r4, [sp, #0xec]
	ldr r0, [r4, #0x18]
	adds r0, r0, r6
	adds r0, #0x36
	ldr r5, [sp, #0x16c]
	lsrs r4, r5, #0x10
	mov r6, sl
	str r6, [sp]
	mov r1, r8
	str r1, [sp, #4]
	adds r1, r4, #0
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r2, [sp, #0xec]
	ldr r0, [r2, #0x18]
	adds r0, r0, r7
	adds r0, #0x36
	str r6, [sp]
	mov r3, r8
	str r3, [sp, #4]
	adds r1, r4, #0
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	movs r4, #0xa0
	lsls r4, r4, #1
	adds r7, r7, r4
	ldr r5, [sp, #0xf0]
	adds r5, #5
	str r5, [sp, #0xf0]
	movs r6, #1
	add sb, r6
	ldr r1, [sp, #0x108]
	ldr r0, [r1]
	ldr r2, _0806833C @ =0x00001BA4
	adds r0, r0, r2
	ldr r0, [r0]
	cmp sb, r0
	bhs _08068316
	b _080681F8
_08068316:
	ldr r3, [sp, #0xf0]
	lsls r1, r3, #0x13
	asrs r1, r1, #0x10
	ldr r0, [sp, #0xec]
	bl func_08075E24
	ldr r0, [sp, #0xe8]
	add sp, #0x18c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08068334: .4byte 0x0000058C
_08068338: .4byte 0x00001AB0
_0806833C: .4byte 0x00001BA4
_08068340: .4byte 0x00001AA8

	thumb_func_start func_08068344
func_08068344: @ 0x08068344
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xf4
	str r0, [sp, #0xbc]
	ldr r0, _080683FC @ =0x080FB928
	str r0, [sp]
	ldr r0, [sp, #0xbc]
	movs r3, #0x20
	bl func_08076BFC
	ldr r0, [sp, #0xbc]
	ldr r2, _08068400 @ =0x000005B4
	adds r1, r0, r2
	ldr r0, _08068404 @ =vtable_unk_080E7A08
	str r0, [r1]
	ldr r3, [sp, #0xbc]
	ldr r4, _08068408 @ =0x000009C4
	adds r0, r3, r4
	ldr r1, _0806840C @ =0x086678A0
	bl func_0805E6CC
	ldr r5, [sp, #0xbc]
	ldr r5, [r5, #4]
	str r5, [sp, #0xc0]
	ldr r3, _08068410 @ =0x080FB93C
	add r2, sp, #0x38
	movs r0, #6
	movs r1, #2
	strh r0, [r2]
	strh r1, [r2, #2]
	ldr r0, [sp, #0x38]
	ldr r7, [sp, #0xbc]
	movs r1, #0xc8
	lsls r1, r1, #3
	adds r4, r7, r1
	str r3, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r0, [r7]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r6, r0, #0
	movs r5, #0x38
	lsls r2, r5, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	adds r1, r4, #0
	bl func_08008F0C
	add r7, sp, #8
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806841C
	cmp r1, #0
	beq _080683D6
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080683D6:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r5, sp
	adds r5, #0x44
	str r5, [sp, #0xe0]
	ldr r7, [sp, #0xbc]
	ldr r0, _08068414 @ =0x000007C4
	adds r7, r7, r0
	mov sl, r7
	mov r1, sp
	adds r1, #0x50
	str r1, [sp, #0xe4]
	ldr r3, _08068418 @ =0x000005BC
	ldr r2, [sp, #0xbc]
	adds r3, r2, r3
	str r3, [sp, #0xdc]
	b _08068506
	.align 2, 0
_080683FC: .4byte 0x080FB928
_08068400: .4byte 0x000005B4
_08068404: .4byte vtable_unk_080E7A08
_08068408: .4byte 0x000009C4
_0806840C: .4byte 0x086678A0
_08068410: .4byte 0x080FB93C
_08068414: .4byte 0x000007C4
_08068418: .4byte 0x000005BC
_0806841C:
	str r1, [sp, #0xec]
	movs r0, #1
	str r0, [sp, #0x40]
	ldr r0, [r6]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x3c]
	add r1, sp, #0x40
	add r0, sp, #0x3c
	cmp r4, #1
	bhs _08068436
	adds r0, r1, #0
_08068436:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08068454
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08068458
	mov r0, r8
	bl func_080D3BC0
	b _08068458
_08068454:
	movs r0, #0
	mov r8, r0
_08068458:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r5, sp
	adds r5, #0x44
	str r5, [sp, #0xe0]
	ldr r7, [sp, #0xbc]
	ldr r0, _080684B8 @ =0x000007C4
	adds r7, r7, r0
	mov sl, r7
	mov r1, sp
	adds r1, #0x50
	str r1, [sp, #0xe4]
	ldr r5, _080684BC @ =0x000005BC
	ldr r4, [sp, #0xbc]
	adds r5, r4, r5
	str r5, [sp, #0xdc]
	ldr r7, [sp, #0xec]
	cmp r2, r7
	beq _0806849C
_08068482:
	cmp r3, #0
	beq _08068492
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068492:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xec]
	cmp r2, r0
	bne _08068482
_0806849C:
	adds r5, r3, #0
	ldr r0, [sp, #0x40]
	cmp r0, #1
	bne _080684C0
	cmp r5, #0
	beq _080684B4
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080684B4:
	adds r5, #0x10
	b _080684E2
	.align 2, 0
_080684B8: .4byte 0x000007C4
_080684BC: .4byte 0x000005BC
_080684C0:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080684E0
_080684C8:
	cmp r2, #0
	beq _080684D8
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080684D8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080684C8
_080684E0:
	adds r5, r2, #0
_080684E2:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080684F2
_080684EC:
	adds r1, #0x10
	cmp r1, r2
	bne _080684EC
_080684F2:
	cmp r0, #0
	beq _080684FA
	bl free
_080684FA:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08068506:
	ldr r3, _08068568 @ =0x080FB944
	movs r1, #8
	movs r2, #2
	add r0, sp, #0x44
	strh r1, [r0]
	ldr r0, [sp, #0xe0]
	strh r2, [r0, #2]
	ldr r0, [sp, #0x44]
	str r3, [sp]
	mov r1, sl
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #2
	adds r6, r0, #0
	movs r4, #0x44
	lsls r2, r4, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	mov r1, sl
	bl func_08008F0C
	add r5, sp, #8
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806856C
	cmp r1, #0
	beq _0806855E
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806855E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806862C
	.align 2, 0
_08068568: .4byte 0x080FB944
_0806856C:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x4c]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x48]
	add r1, sp, #0x4c
	add r0, sp, #0x48
	cmp r4, #1
	bhs _08068584
	adds r0, r1, #0
_08068584:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080685A2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080685A6
	mov r0, r8
	bl func_080D3BC0
	b _080685A6
_080685A2:
	movs r0, #0
	mov r8, r0
_080685A6:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _080685CA
_080685B2:
	cmp r3, #0
	beq _080685C2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080685C2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080685B2
_080685CA:
	adds r5, r3, #0
	ldr r0, [sp, #0x4c]
	cmp r0, #1
	bne _080685E6
	cmp r5, #0
	beq _080685E2
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080685E2:
	adds r5, #0x10
	b _08068608
_080685E6:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08068606
_080685EE:
	cmp r2, #0
	beq _080685FE
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080685FE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080685EE
_08068606:
	adds r5, r2, #0
_08068608:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08068618
_08068612:
	adds r1, #0x10
	cmp r1, r2
	bne _08068612
_08068618:
	cmp r0, #0
	beq _08068620
	bl free
_08068620:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806862C:
	ldr r2, _08068688 @ =0x080FB950
	movs r1, #2
	add r0, sp, #0x50
	strh r1, [r0]
	ldr r0, [sp, #0xe4]
	strh r1, [r0, #2]
	ldr r0, [sp, #0x50]
	str r2, [sp]
	ldr r1, [sp, #0xdc]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	movs r3, #0x54
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	ldr r1, [sp, #0xdc]
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806868C
	cmp r1, #0
	beq _08068680
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068680:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806874C
	.align 2, 0
_08068688: .4byte 0x080FB950
_0806868C:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x58]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x54]
	add r1, sp, #0x58
	add r0, sp, #0x54
	cmp r4, #1
	bhs _080686A4
	adds r0, r1, #0
_080686A4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080686C2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080686C6
	mov r0, r8
	bl func_080D3BC0
	b _080686C6
_080686C2:
	movs r0, #0
	mov r8, r0
_080686C6:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, sl
	beq _080686EA
_080686D2:
	cmp r3, #0
	beq _080686E2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080686E2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080686D2
_080686EA:
	adds r5, r3, #0
	ldr r0, [sp, #0x58]
	cmp r0, #1
	bne _08068706
	cmp r5, #0
	beq _08068702
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08068702:
	adds r5, #0x10
	b _08068728
_08068706:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08068726
_0806870E:
	cmp r2, #0
	beq _0806871E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806871E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806870E
_08068726:
	adds r5, r2, #0
_08068728:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08068738
_08068732:
	adds r1, #0x10
	cmp r1, r2
	bne _08068732
_08068738:
	cmp r0, #0
	beq _08068740
	bl free
_08068740:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806874C:
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08068794 @ =0x08752A2C
	movs r3, #0x58
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x20
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08068798
	cmp r1, #0
	beq _08068786
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068786:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r3, #0x20
	mov sl, r3
	b _08068864
	.align 2, 0
_08068794: .4byte 0x08752A2C
_08068798:
	str r1, [sp, #0xec]
	movs r4, #1
	str r4, [sp, #0x60]
	ldr r1, [r6]
	ldr r5, [sp, #0xec]
	subs r0, r5, r1
	asrs r4, r0, #4
	str r4, [sp, #0x5c]
	add r2, sp, #0x60
	add r0, sp, #0x5c
	cmp r4, #1
	bhs _080687B2
	adds r0, r2, #0
_080687B2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080687D2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080687CE
	mov r0, r8
	bl func_080D3BC0
_080687CE:
	ldr r1, [r6]
	b _080687D6
_080687D2:
	movs r0, #0
	mov r8, r0
_080687D6:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	movs r7, #1
	lsls r7, r7, #5
	mov sl, r7
	b _080687FA
_080687E6:
	cmp r3, #0
	beq _080687F6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080687F6:
	adds r2, #0x10
	adds r3, #0x10
_080687FA:
	ldr r0, [sp, #0xec]
	cmp r2, r0
	bne _080687E6
	adds r5, r3, #0
	ldr r0, [sp, #0x60]
	cmp r0, #1
	bne _0806881C
	cmp r5, #0
	beq _08068818
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08068818:
	adds r5, #0x10
	b _0806883E
_0806881C:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0806883C
_08068824:
	cmp r2, #0
	beq _08068834
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068834:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08068824
_0806883C:
	adds r5, r2, #0
_0806883E:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _0806884E
_08068848:
	adds r0, #0x10
	cmp r0, r2
	bne _08068848
_0806884E:
	cmp r1, #0
	beq _08068858
	adds r0, r1, #0
	bl free
_08068858:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08068864:
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _080688A4 @ =0x08752AAC
	movs r2, #0xa0
	lsls r2, r2, #0x13
	add r2, sl
	add r0, sp, #8
	movs r3, #0x20
	bl func_08008F0C
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080688A8
	cmp r1, #0
	beq _0806889A
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806889A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806896E
	.align 2, 0
_080688A4: .4byte 0x08752AAC
_080688A8:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x68]
	ldr r1, [r6]
	mov r7, sl
	subs r0, r7, r1
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r2, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _080688C2
	adds r0, r2, #0
_080688C2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080688E2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080688DE
	mov r0, r8
	bl func_080D3BC0
_080688DE:
	ldr r1, [r6]
	b _080688E6
_080688E2:
	movs r0, #0
	mov r8, r0
_080688E6:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _0806890A
_080688F2:
	cmp r3, #0
	beq _08068902
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068902:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080688F2
_0806890A:
	adds r5, r3, #0
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _08068926
	cmp r5, #0
	beq _08068922
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08068922:
	adds r5, #0x10
	b _08068948
_08068926:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08068946
_0806892E:
	cmp r2, #0
	beq _0806893E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806893E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806892E
_08068946:
	adds r5, r2, #0
_08068948:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08068958
_08068952:
	adds r0, #0x10
	cmp r0, r2
	bne _08068952
_08068958:
	cmp r1, #0
	beq _08068962
	adds r0, r1, #0
	bl free
_08068962:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806896E:
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _080689B0 @ =0x08752CCC
	movs r3, #0x59
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x20
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080689B4
	cmp r1, #0
	beq _080689A8
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080689A8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08068A7A
	.align 2, 0
_080689B0: .4byte 0x08752CCC
_080689B4:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x70]
	ldr r1, [r6]
	mov r3, sl
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x6c]
	add r2, sp, #0x70
	add r0, sp, #0x6c
	cmp r4, #1
	bhs _080689CE
	adds r0, r2, #0
_080689CE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080689EE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080689EA
	mov r0, r8
	bl func_080D3BC0
_080689EA:
	ldr r1, [r6]
	b _080689F2
_080689EE:
	movs r0, #0
	mov r8, r0
_080689F2:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08068A16
_080689FE:
	cmp r3, #0
	beq _08068A0E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068A0E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080689FE
_08068A16:
	adds r5, r3, #0
	ldr r0, [sp, #0x70]
	cmp r0, #1
	bne _08068A32
	cmp r5, #0
	beq _08068A2E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08068A2E:
	adds r5, #0x10
	b _08068A54
_08068A32:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08068A52
_08068A3A:
	cmp r2, #0
	beq _08068A4A
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068A4A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08068A3A
_08068A52:
	adds r5, r2, #0
_08068A54:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08068A64
_08068A5E:
	adds r0, #0x10
	cmp r0, r2
	bne _08068A5E
_08068A64:
	cmp r1, #0
	beq _08068A6E
	adds r0, r1, #0
	bl free
_08068A6E:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08068A7A:
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08068ABC @ =0x08752BCC
	movs r3, #0x5a
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x20
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08068AC0
	cmp r1, #0
	beq _08068AB4
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068AB4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08068B86
	.align 2, 0
_08068ABC: .4byte 0x08752BCC
_08068AC0:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x78]
	ldr r1, [r6]
	mov r3, sl
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r2, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _08068ADA
	adds r0, r2, #0
_08068ADA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08068AFA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08068AF6
	mov r0, r8
	bl func_080D3BC0
_08068AF6:
	ldr r1, [r6]
	b _08068AFE
_08068AFA:
	movs r0, #0
	mov r8, r0
_08068AFE:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08068B22
_08068B0A:
	cmp r3, #0
	beq _08068B1A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068B1A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08068B0A
_08068B22:
	adds r5, r3, #0
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _08068B3E
	cmp r5, #0
	beq _08068B3A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08068B3A:
	adds r5, #0x10
	b _08068B60
_08068B3E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08068B5E
_08068B46:
	cmp r2, #0
	beq _08068B56
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068B56:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08068B46
_08068B5E:
	adds r5, r2, #0
_08068B60:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08068B70
_08068B6A:
	adds r0, #0x10
	cmp r0, r2
	bne _08068B6A
_08068B70:
	cmp r1, #0
	beq _08068B7A
	adds r0, r1, #0
	bl free
_08068B7A:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08068B86:
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08068BC8 @ =0x08752C4C
	movs r3, #0x5b
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	movs r3, #0x20
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08068BCC
	cmp r1, #0
	beq _08068BC0
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068BC0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08068C92
	.align 2, 0
_08068BC8: .4byte 0x08752C4C
_08068BCC:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x80]
	ldr r1, [r6]
	mov r3, sl
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x7c]
	add r2, sp, #0x80
	add r0, sp, #0x7c
	cmp r4, #1
	bhs _08068BE6
	adds r0, r2, #0
_08068BE6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08068C06
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08068C02
	mov r0, r8
	bl func_080D3BC0
_08068C02:
	ldr r1, [r6]
	b _08068C0A
_08068C06:
	movs r0, #0
	mov r8, r0
_08068C0A:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r2, r1, #0
	adds r3, r5, #0
	cmp r2, sl
	beq _08068C2E
_08068C16:
	cmp r3, #0
	beq _08068C26
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068C26:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08068C16
_08068C2E:
	adds r5, r3, #0
	ldr r0, [sp, #0x80]
	cmp r0, #1
	bne _08068C4A
	cmp r5, #0
	beq _08068C46
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08068C46:
	adds r5, #0x10
	b _08068C6C
_08068C4A:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08068C6A
_08068C52:
	cmp r2, #0
	beq _08068C62
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068C62:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08068C52
_08068C6A:
	adds r5, r2, #0
_08068C6C:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08068C7C
_08068C76:
	adds r0, #0x10
	cmp r0, r2
	bne _08068C76
_08068C7C:
	cmp r1, #0
	beq _08068C86
	adds r0, r1, #0
	bl free
_08068C86:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08068C92:
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08068CD8 @ =0x087511CC
	movs r3, #0x9c
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	adds r3, #0x84
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08068CDC
	cmp r1, #0
	beq _08068CCC
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068CCC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r3, #0x40
	str r3, [sp, #0xd8]
	b _08068DAE
	.align 2, 0
_08068CD8: .4byte 0x087511CC
_08068CDC:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0x88
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0xec]
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x84]
	ldr r0, [r1]
	add r2, sp, #0x84
	mov sl, r1
	cmp r4, r0
	bhs _08068CFA
	mov r2, sl
_08068CFA:
	ldr r0, [r2]
	adds r0, r4, r0
	cmp r0, #0
	beq _08068D18
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08068D1C
	mov r0, r8
	bl func_080D3BC0
	b _08068D1C
_08068D18:
	movs r0, #0
	mov r8, r0
_08068D1C:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r6]
	adds r3, r5, #0
	movs r5, #2
	lsls r5, r5, #5
	str r5, [sp, #0xd8]
	ldr r7, [sp, #0xec]
	cmp r2, r7
	beq _08068D4A
_08068D30:
	cmp r3, #0
	beq _08068D40
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068D40:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xec]
	cmp r2, r0
	bne _08068D30
_08068D4A:
	adds r5, r3, #0
	mov r2, sl
	ldr r1, [r2]
	cmp r1, #1
	bne _08068D68
	cmp r5, #0
	beq _08068D64
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068D64:
	adds r5, #0x10
	b _08068D8A
_08068D68:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08068D88
_08068D70:
	cmp r2, #0
	beq _08068D80
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068D80:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08068D70
_08068D88:
	adds r5, r2, #0
_08068D8A:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08068D9A
_08068D94:
	adds r1, #0x10
	cmp r1, r2
	bne _08068D94
_08068D9A:
	cmp r0, #0
	beq _08068DA2
	bl free
_08068DA2:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r1, [sp, #0xf0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08068DAE:
	ldr r2, [sp, #0xbc]
	ldr r0, [r2]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08068DF0 @ =0x087512EC
	movs r2, #0xa0
	lsls r2, r2, #0x13
	ldr r3, [sp, #0xd8]
	adds r2, r3, r2
	add r0, sp, #8
	movs r3, #0x20
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08068DF4
	cmp r1, #0
	beq _08068DE6
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068DE6:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08068EC0
	.align 2, 0
_08068DF0: .4byte 0x087512EC
_08068DF4:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0x90
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0xec]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x8c
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08068E12
	mov r0, sl
_08068E12:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08068E30
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08068E34
	mov r0, r8
	bl func_080D3BC0
	b _08068E34
_08068E30:
	movs r0, #0
	mov r8, r0
_08068E34:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0xec]
	cmp r2, r4
	beq _08068E5C
_08068E42:
	cmp r3, #0
	beq _08068E52
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068E52:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0xec]
	cmp r2, r5
	bne _08068E42
_08068E5C:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _08068E7A
	cmp r5, #0
	beq _08068E76
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08068E76:
	adds r5, #0x10
	b _08068E9C
_08068E7A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08068E9A
_08068E82:
	cmp r2, #0
	beq _08068E92
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068E92:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08068E82
_08068E9A:
	adds r5, r2, #0
_08068E9C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08068EAC
_08068EA6:
	adds r1, #0x10
	cmp r1, r2
	bne _08068EA6
_08068EAC:
	cmp r0, #0
	beq _08068EB4
	bl free
_08068EB4:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08068EC0:
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08068F04 @ =0x0875154C
	movs r3, #0xa5
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	adds r3, #0x7b
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08068F08
	cmp r1, #0
	beq _08068EFA
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068EFA:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08068FD4
	.align 2, 0
_08068F04: .4byte 0x0875154C
_08068F08:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0x98
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0xec]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x94
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08068F26
	mov r0, sl
_08068F26:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08068F44
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08068F48
	mov r0, r8
	bl func_080D3BC0
	b _08068F48
_08068F44:
	movs r0, #0
	mov r8, r0
_08068F48:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0xec]
	cmp r2, r4
	beq _08068F70
_08068F56:
	cmp r3, #0
	beq _08068F66
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068F66:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0xec]
	cmp r2, r5
	bne _08068F56
_08068F70:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _08068F8E
	cmp r5, #0
	beq _08068F8A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08068F8A:
	adds r5, #0x10
	b _08068FB0
_08068F8E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08068FAE
_08068F96:
	cmp r2, #0
	beq _08068FA6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08068FA6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08068F96
_08068FAE:
	adds r5, r2, #0
_08068FB0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08068FC0
_08068FBA:
	adds r1, #0x10
	cmp r1, r2
	bne _08068FBA
_08068FC0:
	cmp r0, #0
	beq _08068FC8
	bl free
_08068FC8:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08068FD4:
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _08069018 @ =0x0875130C
	movs r3, #0xae
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	adds r3, #0x72
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806901C
	cmp r1, #0
	beq _0806900E
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806900E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080690E8
	.align 2, 0
_08069018: .4byte 0x0875130C
_0806901C:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0xa0
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0xec]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x9c
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _0806903A
	mov r0, sl
_0806903A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08069058
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806905C
	mov r0, r8
	bl func_080D3BC0
	b _0806905C
_08069058:
	movs r0, #0
	mov r8, r0
_0806905C:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0xec]
	cmp r2, r4
	beq _08069084
_0806906A:
	cmp r3, #0
	beq _0806907A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806907A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0xec]
	cmp r2, r5
	bne _0806906A
_08069084:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _080690A2
	cmp r5, #0
	beq _0806909E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806909E:
	adds r5, #0x10
	b _080690C4
_080690A2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080690C2
_080690AA:
	cmp r2, #0
	beq _080690BA
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080690BA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080690AA
_080690C2:
	adds r5, r2, #0
_080690C4:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080690D4
_080690CE:
	adds r1, #0x10
	cmp r1, r2
	bne _080690CE
_080690D4:
	cmp r0, #0
	beq _080690DC
	bl free
_080690DC:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080690E8:
	ldr r1, [sp, #0xbc]
	ldr r0, [r1]
	bl func_08008910
	adds r6, r0, #0
	ldr r1, _0806912C @ =0x0875142C
	movs r3, #0xb7
	lsls r2, r3, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #8
	adds r3, #0x69
	bl func_08008F0C
	add r4, sp, #8
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08069130
	cmp r1, #0
	beq _08069122
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08069122:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080691FC
	.align 2, 0
_0806912C: .4byte 0x0875142C
_08069130:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0xa8
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0xec]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xa4
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _0806914E
	mov r0, sl
_0806914E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806916C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08069170
	mov r0, r8
	bl func_080D3BC0
	b _08069170
_0806916C:
	movs r0, #0
	mov r8, r0
_08069170:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0xec]
	cmp r2, r4
	beq _08069198
_0806917E:
	cmp r3, #0
	beq _0806918E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806918E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0xec]
	cmp r2, r5
	bne _0806917E
_08069198:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _080691B6
	cmp r5, #0
	beq _080691B2
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080691B2:
	adds r5, #0x10
	b _080691D8
_080691B6:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080691D6
_080691BE:
	cmp r2, #0
	beq _080691CE
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080691CE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080691BE
_080691D6:
	adds r5, r2, #0
_080691D8:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080691E8
_080691E2:
	adds r1, #0x10
	cmp r1, r2
	bne _080691E2
_080691E8:
	cmp r0, #0
	beq _080691F0
	bl free
_080691F0:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080691FC:
	movs r1, #0
	ldr r2, [sp, #0xbc]
	ldr r3, _08069278 @ =0x0000058C
	adds r0, r2, r3
	ldr r0, [r0]
	ldr r4, _0806927C @ =0x00002185
	adds r0, r0, r4
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #2
	bne _08069216
	movs r1, #1
_08069216:
	movs r5, #4
	str r5, [sp, #0xc4]
	cmp r1, #0
	beq _08069222
	movs r7, #3
	str r7, [sp, #0xc4]
_08069222:
	movs r0, #5
	cmp r1, #0
	beq _0806922A
	movs r0, #6
_0806922A:
	str r0, [sp, #0xc8]
	movs r0, #0
	str r0, [sp, #0xcc]
	ldr r1, [sp, #0xc8]
	cmp r0, r1
	blt _0806923A
	bl _08069C14
_0806923A:
	ldr r2, [sp, #0xbc]
	ldr r3, _08069278 @ =0x0000058C
	adds r0, r2, r3
	ldr r0, [r0]
	ldr r4, _08069280 @ =0x00001BD8
	adds r0, r0, r4
	ldr r1, [sp, #0xcc]
	bl func_0800E548
	str r0, [sp, #0xd0]
	bl func_0800EF68
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xd4]
	ldr r0, [sp, #0xd0]
	bl func_0800EF6C
	mov sl, r0
	movs r2, #1
	rsbs r2, r2, #0
	ldr r5, [sp, #0xcc]
	cmp r5, #5
	bls _0806926C
	b _0806946E
_0806926C:
	lsls r0, r5, #2
	ldr r1, _08069284 @ =_08069288
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08069278: .4byte 0x0000058C
_0806927C: .4byte 0x00002185
_08069280: .4byte 0x00001BD8
_08069284: .4byte _08069288
_08069288: @ jump table
	.4byte _080693A4 @ case 0
	.4byte _080692A0 @ case 1
	.4byte _080692FE @ case 2
	.4byte _080693E8 @ case 3
	.4byte _08069344 @ case 4
	.4byte _0806942C @ case 5
_080692A0:
	mov r7, sl
	cmp r7, #5
	bls _080692A8
	b _0806946E
_080692A8:
	lsls r0, r7, #2
	ldr r1, _080692B4 @ =_080692B8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080692B4: .4byte _080692B8
_080692B8: @ jump table
	.4byte _080692D0 @ case 0
	.4byte _080692D8 @ case 1
	.4byte _080692DE @ case 2
	.4byte _080692E8 @ case 3
	.4byte _080692EE @ case 4
	.4byte _080692F8 @ case 5
_080692D0:
	ldr r2, _080692D4 @ =0x00000193
	b _0806946E
	.align 2, 0
_080692D4: .4byte 0x00000193
_080692D8:
	movs r2, #0xca
	lsls r2, r2, #1
	b _0806946E
_080692DE:
	ldr r2, _080692E4 @ =0x00000195
	b _0806946E
	.align 2, 0
_080692E4: .4byte 0x00000195
_080692E8:
	movs r2, #0xcb
	lsls r2, r2, #1
	b _0806946E
_080692EE:
	ldr r2, _080692F4 @ =0x00000197
	b _0806946E
	.align 2, 0
_080692F4: .4byte 0x00000197
_080692F8:
	movs r2, #0xcd
	lsls r2, r2, #1
	b _0806946E
_080692FE:
	mov r0, sl
	cmp r0, #5
	bls _08069306
	b _0806946E
_08069306:
	lsls r0, r0, #2
	ldr r1, _08069310 @ =_08069314
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08069310: .4byte _08069314
_08069314: @ jump table
	.4byte _0806932C @ case 0
	.4byte _08069330 @ case 1
	.4byte _08069334 @ case 2
	.4byte _08069338 @ case 3
	.4byte _0806933C @ case 4
	.4byte _08069340 @ case 5
_0806932C:
	movs r2, #0xd
	b _0806946E
_08069330:
	movs r2, #0xe
	b _0806946E
_08069334:
	movs r2, #0xf
	b _0806946E
_08069338:
	movs r2, #0x10
	b _0806946E
_0806933C:
	movs r2, #0x11
	b _0806946E
_08069340:
	movs r2, #0x14
	b _0806946E
_08069344:
	mov r1, sl
	cmp r1, #5
	bls _0806934C
	b _0806946E
_0806934C:
	lsls r0, r1, #2
	ldr r1, _08069358 @ =_0806935C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08069358: .4byte _0806935C
_0806935C: @ jump table
	.4byte _08069374 @ case 0
	.4byte _0806937A @ case 1
	.4byte _08069384 @ case 2
	.4byte _0806938A @ case 3
	.4byte _08069394 @ case 4
	.4byte _0806939A @ case 5
_08069374:
	movs r2, #0xe7
	lsls r2, r2, #1
	b _0806946E
_0806937A:
	ldr r2, _08069380 @ =0x000001CF
	b _0806946E
	.align 2, 0
_08069380: .4byte 0x000001CF
_08069384:
	movs r2, #0xe8
	lsls r2, r2, #1
	b _0806946E
_0806938A:
	ldr r2, _08069390 @ =0x000001D1
	b _0806946E
	.align 2, 0
_08069390: .4byte 0x000001D1
_08069394:
	movs r2, #0xe9
	lsls r2, r2, #1
	b _0806946E
_0806939A:
	ldr r2, _080693A0 @ =0x000001D5
	b _0806946E
	.align 2, 0
_080693A0: .4byte 0x000001D5
_080693A4:
	mov r3, sl
	cmp r3, #5
	bhi _0806946E
	lsls r0, r3, #2
	ldr r1, _080693B4 @ =_080693B8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080693B4: .4byte _080693B8
_080693B8: @ jump table
	.4byte _080693D0 @ case 0
	.4byte _080693D4 @ case 1
	.4byte _080693D8 @ case 2
	.4byte _080693DC @ case 3
	.4byte _080693E0 @ case 4
	.4byte _080693E4 @ case 5
_080693D0:
	movs r2, #0xea
	b _0806946E
_080693D4:
	movs r2, #0xeb
	b _0806946E
_080693D8:
	movs r2, #0xec
	b _0806946E
_080693DC:
	movs r2, #0xed
	b _0806946E
_080693E0:
	movs r2, #0xee
	b _0806946E
_080693E4:
	movs r2, #0xf1
	b _0806946E
_080693E8:
	mov r4, sl
	cmp r4, #5
	bhi _0806946E
	lsls r0, r4, #2
	ldr r1, _080693F8 @ =_080693FC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080693F8: .4byte _080693FC
_080693FC: @ jump table
	.4byte _08069414 @ case 0
	.4byte _08069418 @ case 1
	.4byte _0806941C @ case 2
	.4byte _08069420 @ case 3
	.4byte _08069424 @ case 4
	.4byte _08069428 @ case 5
_08069414:
	movs r2, #0xdf
	b _0806946E
_08069418:
	movs r2, #0xe0
	b _0806946E
_0806941C:
	movs r2, #0xe1
	b _0806946E
_08069420:
	movs r2, #0xe2
	b _0806946E
_08069424:
	movs r2, #0xe3
	b _0806946E
_08069428:
	movs r2, #0xe6
	b _0806946E
_0806942C:
	mov r5, sl
	cmp r5, #5
	bhi _0806946E
	lsls r0, r5, #2
	ldr r1, _0806943C @ =_08069440
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806943C: .4byte _08069440
_08069440: @ jump table
	.4byte _08069458 @ case 0
	.4byte _0806945C @ case 1
	.4byte _08069460 @ case 2
	.4byte _08069464 @ case 3
	.4byte _08069468 @ case 4
	.4byte _0806946C @ case 5
_08069458:
	movs r2, #0x94
	b _0806946E
_0806945C:
	movs r2, #0x95
	b _0806946E
_08069460:
	movs r2, #0x96
	b _0806946E
_08069464:
	movs r2, #0x97
	b _0806946E
_08069468:
	movs r2, #0x98
	b _0806946E
_0806946C:
	movs r2, #0x9b
_0806946E:
	movs r0, #1
	rsbs r0, r0, #0
	ldr r7, [sp, #0xcc]
	adds r7, #1
	str r7, [sp, #0xe8]
	cmp r2, r0
	bne _0806947E
	b _080695BC
_0806947E:
	add r0, sp, #0x18
	mov r8, r0
	ldr r1, [sp, #0xbc]
	ldr r3, _080694E4 @ =0x000009C4
	adds r4, r1, r3
	ldr r6, [r4]
	add r5, sp, #0xac
	adds r0, r5, #0
	ldr r3, [r6, #0xc]
	adds r1, r4, #0
	bl _call_via_r3
	ldr r0, [r5]
	ldrh r2, [r0]
	mov r0, r8
	ldr r3, [r6, #0x10]
	adds r1, r4, #0
	bl _call_via_r3
	movs r0, #0x10
	str r0, [sp, #0xc]
	add r1, sp, #8
	ldr r4, [sp, #0xc4]
	lsls r0, r4, #3
	strh r0, [r1]
	ldr r0, [sp, #0x20]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x28]
	str r0, [sp, #0x14]
	ldr r5, [sp, #0xbc]
	ldr r7, _080694E8 @ =0x00000594
	adds r6, r5, r7
	add r0, sp, #8
	mov sb, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080694EC
	cmp r1, #0
	beq _080694DA
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080694DA:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080695BC
	.align 2, 0
_080694E4: .4byte 0x000009C4
_080694E8: .4byte 0x00000594
_080694EC:
	str r1, [sp, #0xec]
	movs r0, #1
	add r1, sp, #0xb8
	str r0, [r1]
	ldr r3, [r6]
	ldr r5, [sp, #0xec]
	subs r0, r5, r3
	asrs r4, r0, #4
	add r0, sp, #0xb4
	str r4, [r0]
	ldr r2, [r1]
	adds r1, r3, #0
	cmp r4, r2
	bhs _0806950A
	add r0, sp, #0xb8
_0806950A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806952A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08069526
	mov r0, r8
	bl func_080D3BC0
_08069526:
	ldr r1, [r6]
	b _0806952E
_0806952A:
	movs r0, #0
	mov r8, r0
_0806952E:
	adds r5, r0, #0
	str r5, [sp, #0xf0]
	adds r3, r1, #0
	adds r2, r5, #0
	ldr r7, [sp, #0xcc]
	adds r7, #1
	str r7, [sp, #0xe8]
	b _08069552
_0806953E:
	cmp r2, #0
	beq _0806954E
	adds r0, r2, #0
	adds r1, r3, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806954E:
	adds r3, #0x10
	adds r2, #0x10
_08069552:
	ldr r0, [sp, #0xec]
	cmp r3, r0
	bne _0806953E
	adds r5, r2, #0
	ldr r1, [sp, #0xb8]
	cmp r1, #1
	bne _08069574
	cmp r5, #0
	beq _08069570
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08069570:
	adds r5, #0x10
	b _08069596
_08069574:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08069594
_0806957C:
	cmp r2, #0
	beq _0806958C
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806958C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0806957C
_08069594:
	adds r5, r2, #0
_08069596:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _080695A6
_080695A0:
	adds r0, #0x10
	cmp r0, r2
	bne _080695A0
_080695A6:
	cmp r1, #0
	beq _080695B0
	adds r0, r1, #0
	bl free
_080695B0:
	ldr r0, [sp, #0xf0]
	add r0, r8
	ldr r7, [sp, #0xf0]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080695BC:
	ldr r0, _08069628 @ =0x0000FFFF
	ldr r1, [sp, #0xd4]
	cmp r1, r0
	bne _08069650
	movs r7, #0
	ldr r2, [sp, #0xc4]
	lsls r5, r2, #6
	movs r0, #0xb7
	adds r0, #8
	movs r3, #2
	lsls r4, r3, #0x10
	lsls r0, r0, #0x10
	mov r8, r0
	movs r6, #0xa
_080695D8:
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, r0, r6
	lsrs r1, r4, #0x10
	str r1, [sp]
	movs r2, #0x20
	mov sb, r2
	str r2, [sp, #4]
	mov r3, r8
	lsrs r1, r3, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #2
	adds r7, #1
	cmp r7, #0xe
	bls _080695D8
	mov r4, sl
	cmp r4, #3
	bgt _0806962C
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	bne _0806962C
	ldr r7, [sp, #0xc0]
	ldr r0, [r7, #0x18]
	adds r0, r0, r5
	adds r0, #0x2a
	movs r1, #0x44
	str r2, [sp]
	mov r2, sb
	str r2, [sp, #4]
	movs r2, #8
	b _08069A5E
	.align 2, 0
_08069628: .4byte 0x0000FFFF
_0806962C:
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806963A
	b _08069B62
_0806963A:
	ldr r3, [sp, #0xc0]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x2a
	movs r1, #0x38
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #6
	b _08069A5E
_08069650:
	ldr r0, _0806973C @ =0x00008C9F
	ldr r4, [sp, #0xd4]
	cmp r4, r0
	bhi _0806965A
	b _080697C0
_0806965A:
	ldr r5, _08069740 @ =0xFFFF7360
	adds r1, r4, r5
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #3
	ldr r1, _08069744 @ =0x0000735F
	bl func_080D0EDA
	adds r4, r0, #0
	movs r7, #0
	lsrs r1, r4, #3
	cmp r7, r1
	bhs _080696AC
	movs r0, #0xb7
	adds r0, #8
	lsls r0, r0, #0x10
	mov sb, r0
	movs r0, #2
	mov r8, r0
	movs r5, #0xa
	adds r6, r1, #0
_08069684:
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0xc4]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r5
	mov r3, r8
	str r3, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	mov r2, sb
	lsrs r1, r2, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r7, #1
	cmp r7, r6
	blo _08069684
_080696AC:
	cmp r7, #0xe
	bhi _0806970E
	ldr r3, [sp, #0xc0]
	ldr r0, [r3, #0x18]
	ldr r1, [sp, #0xc4]
	lsls r5, r1, #6
	adds r0, r0, r5
	adds r1, r7, #5
	lsls r1, r1, #1
	adds r0, r0, r1
	movs r1, #7
	ands r1, r4
	adds r1, #0xb7
	movs r2, #2
	lsls r4, r2, #0x10
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r7, #1
	cmp r7, #0xe
	bhi _0806970E
	lsls r0, r7, #1
	adds r6, r0, #0
	adds r6, #0xa
	movs r3, #0xb7
	lsls r3, r3, #0x10
	mov r8, r3
_080696EA:
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, r0, r6
	lsrs r1, r4, #0x10
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	mov r2, r8
	lsrs r1, r2, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #2
	adds r7, #1
	cmp r7, #0xe
	bls _080696EA
_0806970E:
	mov r3, sl
	cmp r3, #2
	bgt _08069748
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	bne _08069748
	ldr r4, [sp, #0xc0]
	ldr r0, [r4, #0x18]
	ldr r5, [sp, #0xc4]
	lsls r1, r5, #6
	adds r0, r0, r1
	adds r0, #0x2a
	movs r1, #0x44
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #8
	b _08069A5E
	.align 2, 0
_0806973C: .4byte 0x00008C9F
_08069740: .4byte 0xFFFF7360
_08069744: .4byte 0x0000735F
_08069748:
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806976E
	ldr r7, [sp, #0xc0]
	ldr r0, [r7, #0x18]
	ldr r2, [sp, #0xc4]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, #0x2a
	movs r1, #0x38
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #6
	b _08069A5E
_0806976E:
	mov r3, sl
	cmp r3, #3
	beq _08069776
	b _08069B62
_08069776:
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0
	beq _08069786
	b _08069B62
_08069786:
	ldr r5, [sp, #0xc0]
	ldr r4, [r5, #0x18]
	ldr r0, [sp, #0xc4]
	lsls r6, r0, #6
	adds r4, r4, r6
	adds r4, #0x32
	ldr r2, [sp, #0xd4]
	ldr r3, _080697B8 @ =0xFFFF7360
	adds r1, r2, r3
	movs r0, #0x64
	muls r0, r1, r0
	ldr r1, _080697BC @ =0x0000735F
	bl func_080D0EDA
	movs r2, #0x90
	lsls r2, r2, #1
	movs r5, #0x20
	str r5, [sp]
	adds r1, r4, #0
	movs r3, #0
	bl func_0804EDB4
	ldr r4, [sp, #0xc0]
	ldr r0, [r4, #0x18]
	b _08069A52
	.align 2, 0
_080697B8: .4byte 0xFFFF7360
_080697BC: .4byte 0x0000735F
_080697C0:
	ldr r0, _080698A0 @ =0x0000464F
	ldr r5, [sp, #0xd4]
	cmp r5, r0
	bhi _080697CA
	b _08069900
_080697CA:
	ldr r7, _080698A4 @ =0xFFFFB9B0
	adds r0, r5, r7
	movs r1, #0x96
	bl func_080D0EDA
	adds r4, r0, #0
	movs r7, #0
	lsrs r0, r4, #3
	cmp r7, r0
	bhs _08069812
	movs r0, #0xae
	adds r0, #8
	lsls r0, r0, #0x10
	mov r8, r0
	movs r6, #2
	movs r5, #0xa
_080697EA:
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0xc4]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r5
	str r6, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	mov r3, r8
	lsrs r1, r3, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r7, #1
	lsrs r0, r4, #3
	cmp r7, r0
	blo _080697EA
_08069812:
	cmp r7, #0xe
	bhi _08069874
	ldr r5, [sp, #0xc0]
	ldr r0, [r5, #0x18]
	ldr r1, [sp, #0xc4]
	lsls r5, r1, #6
	adds r0, r0, r5
	adds r1, r7, #5
	lsls r1, r1, #1
	adds r0, r0, r1
	movs r1, #7
	ands r1, r4
	adds r1, #0xae
	movs r2, #2
	lsls r4, r2, #0x10
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r7, #1
	cmp r7, #0xe
	bhi _08069874
	lsls r0, r7, #1
	adds r6, r0, #0
	adds r6, #0xa
	movs r3, #0xae
	lsls r3, r3, #0x10
	mov r8, r3
_08069850:
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, r0, r6
	lsrs r1, r4, #0x10
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	mov r2, r8
	lsrs r1, r2, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #2
	adds r7, #1
	cmp r7, #0xe
	bls _08069850
_08069874:
	mov r3, sl
	cmp r3, #1
	bgt _080698A8
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	bne _080698A8
	ldr r4, [sp, #0xc0]
	ldr r0, [r4, #0x18]
	ldr r5, [sp, #0xc4]
	lsls r1, r5, #6
	adds r0, r0, r1
	adds r0, #0x2a
	movs r1, #0x44
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #8
	b _08069A5E
	.align 2, 0
_080698A0: .4byte 0x0000464F
_080698A4: .4byte 0xFFFFB9B0
_080698A8:
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080698CE
	ldr r7, [sp, #0xc0]
	ldr r0, [r7, #0x18]
	ldr r2, [sp, #0xc4]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, #0x2a
	movs r1, #0x38
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #6
	b _08069A5E
_080698CE:
	mov r3, sl
	cmp r3, #2
	beq _080698D6
	b _08069B62
_080698D6:
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0
	beq _080698E6
	b _08069B62
_080698E6:
	ldr r5, [sp, #0xc0]
	ldr r4, [r5, #0x18]
	ldr r0, [sp, #0xc4]
	lsls r6, r0, #6
	adds r4, r4, r6
	adds r4, #0x32
	ldr r1, [sp, #0xd4]
	ldr r2, _080698FC @ =0xFFFFB9B0
	adds r0, r1, r2
	movs r1, #0xb4
	b _08069A3A
	.align 2, 0
_080698FC: .4byte 0xFFFFB9B0
_08069900:
	ldr r0, _080699E0 @ =0x0000176F
	ldr r4, [sp, #0xd4]
	cmp r4, r0
	bhi _0806990A
	b _08069A6C
_0806990A:
	ldr r5, _080699E4 @ =0xFFFFE890
	adds r0, r4, r5
	movs r1, #0x64
	bl func_080D0EDA
	adds r4, r0, #0
	movs r7, #0
	lsrs r0, r4, #3
	cmp r7, r0
	bhs _08069952
	movs r0, #0xa5
	adds r0, #8
	lsls r0, r0, #0x10
	mov r8, r0
	movs r6, #2
	movs r5, #0xa
_0806992A:
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0xc4]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r5
	str r6, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	mov r3, r8
	lsrs r1, r3, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r7, #1
	lsrs r0, r4, #3
	cmp r7, r0
	blo _0806992A
_08069952:
	cmp r7, #0xe
	bhi _080699B4
	ldr r5, [sp, #0xc0]
	ldr r0, [r5, #0x18]
	ldr r1, [sp, #0xc4]
	lsls r5, r1, #6
	adds r0, r0, r5
	adds r1, r7, #5
	lsls r1, r1, #1
	adds r0, r0, r1
	movs r1, #7
	ands r1, r4
	adds r1, #0xa5
	movs r2, #2
	lsls r4, r2, #0x10
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r7, #1
	cmp r7, #0xe
	bhi _080699B4
	lsls r0, r7, #1
	adds r6, r0, #0
	adds r6, #0xa
	movs r3, #0xa5
	lsls r3, r3, #0x10
	mov r8, r3
_08069990:
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, r0, r6
	lsrs r1, r4, #0x10
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	mov r2, r8
	lsrs r1, r2, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #2
	adds r7, #1
	cmp r7, #0xe
	bls _08069990
_080699B4:
	mov r3, sl
	cmp r3, #0
	bgt _080699E8
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	bne _080699E8
	ldr r4, [sp, #0xc0]
	ldr r0, [r4, #0x18]
	ldr r5, [sp, #0xc4]
	lsls r1, r5, #6
	adds r0, r0, r1
	adds r0, #0x2a
	movs r1, #0x44
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #8
	b _08069A5E
	.align 2, 0
_080699E0: .4byte 0x0000176F
_080699E4: .4byte 0xFFFFE890
_080699E8:
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08069A0E
	ldr r7, [sp, #0xc0]
	ldr r0, [r7, #0x18]
	ldr r2, [sp, #0xc4]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, #0x2a
	movs r1, #0x38
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #6
	b _08069A5E
_08069A0E:
	mov r3, sl
	cmp r3, #1
	beq _08069A16
	b _08069B62
_08069A16:
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0
	beq _08069A26
	b _08069B62
_08069A26:
	ldr r5, [sp, #0xc0]
	ldr r4, [r5, #0x18]
	ldr r0, [sp, #0xc4]
	lsls r6, r0, #6
	adds r4, r4, r6
	adds r4, #0x32
	ldr r1, [sp, #0xd4]
	ldr r2, _08069A68 @ =0xFFFFE890
	adds r0, r1, r2
	movs r1, #0x78
_08069A3A:
	bl func_080D0EDA
	movs r2, #0x90
	lsls r2, r2, #1
	movs r5, #0x20
	str r5, [sp]
	adds r1, r4, #0
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0xc0]
	ldr r0, [r3, #0x18]
_08069A52:
	adds r0, r0, r6
	adds r0, #0x34
	movs r1, #0x54
	str r7, [sp]
	str r5, [sp, #4]
	movs r2, #2
_08069A5E:
	movs r3, #2
	bl func_0804E9F4
	b _08069B62
	.align 2, 0
_08069A68: .4byte 0xFFFFE890
_08069A6C:
	ldr r0, [sp, #0xd4]
	movs r1, #0x32
	bl func_080D0EDA
	adds r4, r0, #0
	movs r7, #0
	lsrs r0, r4, #3
	cmp r7, r0
	bhs _08069AB2
	movs r0, #0x9c
	adds r0, #8
	lsls r0, r0, #0x10
	mov r8, r0
	movs r6, #2
	movs r5, #0xa
_08069A8A:
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0xc4]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, r0, r5
	str r6, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	mov r3, r8
	lsrs r1, r3, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #2
	adds r7, #1
	lsrs r0, r4, #3
	cmp r7, r0
	blo _08069A8A
_08069AB2:
	cmp r7, #0xe
	bhi _08069B14
	ldr r5, [sp, #0xc0]
	ldr r0, [r5, #0x18]
	ldr r1, [sp, #0xc4]
	lsls r5, r1, #6
	adds r0, r0, r5
	adds r1, r7, #5
	lsls r1, r1, #1
	adds r0, r0, r1
	movs r1, #7
	ands r1, r4
	adds r1, #0x9c
	movs r2, #2
	lsls r4, r2, #0x10
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r7, #1
	cmp r7, #0xe
	bhi _08069B14
	lsls r0, r7, #1
	adds r6, r0, #0
	adds r6, #0xa
	movs r3, #0x9c
	lsls r3, r3, #0x10
	mov r8, r3
_08069AF0:
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, r0, r6
	lsrs r1, r4, #0x10
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	mov r2, r8
	lsrs r1, r2, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r6, #2
	adds r7, #1
	cmp r7, #0xe
	bls _08069AF0
_08069B14:
	mov r3, sl
	cmp r3, #0
	bne _08069B62
	ldr r0, [sp, #0xd0]
	bl func_0800EF74
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0
	bne _08069B62
	ldr r5, [sp, #0xc0]
	ldr r4, [r5, #0x18]
	ldr r0, [sp, #0xc4]
	lsls r6, r0, #6
	adds r4, r4, r6
	adds r4, #0x32
	ldr r0, [sp, #0xd4]
	movs r1, #0x3c
	bl func_080D0EDA
	movs r2, #0x90
	lsls r2, r2, #1
	movs r5, #0x20
	str r5, [sp]
	adds r1, r4, #0
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	adds r0, r0, r6
	adds r0, #0x34
	movs r1, #0x54
	str r7, [sp]
	str r5, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
_08069B62:
	ldr r0, _08069BF0 @ =0x0000176F
	ldr r2, [sp, #0xd4]
	cmp r2, r0
	bls _08069BE0
	ldr r1, [sp, #0xc4]
	adds r1, #1
	ldr r3, [sp, #0xc0]
	ldr r0, [r3, #0x18]
	lsls r5, r1, #6
	adds r0, r0, r5
	adds r0, #0xa
	movs r1, #0x58
	movs r4, #1
	str r4, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	ldr r0, _08069BF4 @ =0x0000464F
	ldr r7, [sp, #0xd4]
	cmp r7, r0
	bls _08069BE0
	ldr r1, [sp, #0xc0]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, #0xc
	movs r1, #0x59
	str r4, [sp]
	str r6, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	ldr r0, _08069BF8 @ =0x00008C9F
	cmp r7, r0
	bls _08069BE0
	ldr r2, [sp, #0xc0]
	ldr r0, [r2, #0x18]
	adds r0, r0, r5
	adds r0, #0xe
	movs r1, #0x5a
	str r4, [sp]
	str r6, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	ldr r0, _08069BFC @ =0x0000FFFF
	cmp r7, r0
	bne _08069BE0
	ldr r3, [sp, #0xc0]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x10
	movs r1, #0x5b
	str r4, [sp]
	str r6, [sp, #4]
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
_08069BE0:
	ldr r4, [sp, #0xe8]
	ldr r5, [sp, #0xc8]
	cmp r4, r5
	bge _08069C00
	ldr r7, [sp, #0xc4]
	adds r7, #3
	str r7, [sp, #0xc4]
	b _08069C06
	.align 2, 0
_08069BF0: .4byte 0x0000176F
_08069BF4: .4byte 0x0000464F
_08069BF8: .4byte 0x00008C9F
_08069BFC: .4byte 0x0000FFFF
_08069C00:
	ldr r0, [sp, #0xc4]
	adds r0, #2
	str r0, [sp, #0xc4]
_08069C06:
	ldr r1, [sp, #0xe8]
	str r1, [sp, #0xcc]
	ldr r2, [sp, #0xc8]
	cmp r1, r2
	bge _08069C14
	bl _0806923A
_08069C14:
	ldr r3, [sp, #0xc4]
	lsls r1, r3, #0x13
	asrs r1, r1, #0x10
	ldr r0, [sp, #0xc0]
	bl func_08075E24
	ldr r0, [sp, #0xbc]
	add sp, #0xf4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08069C34
func_08069C34: @ 0x08069C34
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r4, r0, #0
	movs r0, #0
	str r0, [sp]
	cmp r1, #6
	bls _08069C44
	b _08069D4C
_08069C44:
	lsls r0, r1, #2
	ldr r1, _08069C50 @ =_08069C54
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08069C50: .4byte _08069C54
_08069C54: @ jump table
	.4byte _08069C70 @ case 0
	.4byte _08069C8C @ case 1
	.4byte _08069CA8 @ case 2
	.4byte _08069CC4 @ case 3
	.4byte _08069CE0 @ case 4
	.4byte _08069CFC @ case 5
	.4byte _08069D18 @ case 6
_08069C70:
	ldr r0, _08069C88 @ =0x00001B6C
	bl __builtin_new
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r4, r2
	ldr r2, [r1]
	adds r1, r4, #0
	bl func_0805FF14
	b _08069D2C
	.align 2, 0
_08069C88: .4byte 0x00001B6C
_08069C8C:
	ldr r0, _08069CA4 @ =0x0000431C
	bl __builtin_new
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r4, r2
	ldr r2, [r1]
	adds r1, r4, #0
	bl func_08064320
	b _08069D2C
	.align 2, 0
_08069CA4: .4byte 0x0000431C
_08069CA8:
	ldr r0, _08069CC0 @ =0x0000431C
	bl __builtin_new
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r4, r2
	ldr r2, [r1]
	adds r1, r4, #0
	bl func_080643DC
	b _08069D2C
	.align 2, 0
_08069CC0: .4byte 0x0000431C
_08069CC4:
	ldr r0, _08069CDC @ =0x0000431C
	bl __builtin_new
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r4, r2
	ldr r2, [r1]
	adds r1, r4, #0
	bl func_080644F0
	b _08069D2C
	.align 2, 0
_08069CDC: .4byte 0x0000431C
_08069CE0:
	ldr r0, _08069CF8 @ =0x000022B8
	bl __builtin_new
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r4, r2
	ldr r2, [r1]
	adds r1, r4, #0
	bl func_080645F0
	b _08069D2C
	.align 2, 0
_08069CF8: .4byte 0x000022B8
_08069CFC:
	ldr r0, _08069D14 @ =0x000019FC
	bl __builtin_new
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r4, r2
	ldr r2, [r1]
	adds r1, r4, #0
	bl func_0806644C
	b _08069D2C
	.align 2, 0
_08069D14: .4byte 0x000019FC
_08069D18:
	ldr r0, _08069D7C @ =0x000009F4
	bl __builtin_new
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r4, r2
	ldr r2, [r1]
	adds r1, r4, #0
	bl func_08068344
_08069D2C:
	mov r6, sp
	adds r5, r0, #0
	ldr r1, [sp]
	cmp r5, r1
	beq _08069D4A
	cmp r1, #0
	beq _08069D4A
	ldr r2, _08069D80 @ =0x000005B4
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08069D4A:
	str r5, [r6]
_08069D4C:
	ldr r0, [sp]
	movs r1, #0
	str r1, [sp]
	str r0, [sp, #4]
	add r1, sp, #4
	adds r0, r4, #0
	bl func_08076B94
	ldr r1, [sp]
	cmp r1, #0
	beq _08069D72
	ldr r2, _08069D80 @ =0x000005B4
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08069D72:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08069D7C: .4byte 0x000009F4
_08069D80: .4byte 0x000005B4

	thumb_func_start func_08069D84
func_08069D84: @ 0x08069D84
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	adds r7, r1, #0
	movs r0, #0x92
	lsls r0, r0, #1
	adds r0, r0, r6
	mov r8, r0
	movs r1, #0xb0
	lsls r1, r1, #1
	adds r5, r6, r1
	ldr r4, [r5]
	lsls r4, r4, #3
	adds r4, #4
	add r4, r8
	adds r0, r6, #0
	bl func_08076BEC
	strh r0, [r4, #4]
	adds r0, r6, #0
	bl func_08076B64
	cmp r7, #0
	beq _08069DBC
	cmp r7, #1
	beq _08069DCE
	b _08069DDC
_08069DBC:
	ldr r0, [r5]
	adds r0, #1
	str r0, [r5]
	mov r2, r8
	ldr r1, [r2]
	cmp r0, r1
	bne _08069DDC
	str r7, [r5]
	b _08069DDC
_08069DCE:
	ldr r0, [r5]
	cmp r0, #0
	bne _08069DD8
	mov r1, r8
	ldr r0, [r1]
_08069DD8:
	subs r0, #1
	str r0, [r5]
_08069DDC:
	movs r2, #0x92
	lsls r2, r2, #1
	adds r4, r6, r2
	movs r0, #0xb0
	lsls r0, r0, #1
	adds r5, r6, r0
	ldr r0, [r5]
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r4, r0
	ldr r1, [r0]
	adds r0, r6, #0
	bl func_08069C34
	ldr r0, [r5]
	lsls r0, r0, #3
	adds r0, #4
	adds r4, r4, r0
	movs r2, #4
	ldrsh r1, [r4, r2]
	adds r0, r6, #0
	bl func_08076BE0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_08069E14
func_08069E14: @ 0x08069E14
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r5, r0, #0
	mov r8, r1
	adds r6, r2, #0
	lsls r4, r3, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08069E54 @ =vtable_unk_080E7A98
	str r0, [r5]
	movs r0, #0xb2
	lsls r0, r0, #1
	bl __builtin_new
	adds r1, r6, #0
	adds r2, r4, #0
	bl func_0805FD78
	str r0, [r5, #4]
	mov r0, r8
	ldr r1, [r0]
	movs r0, #0
	mov r2, r8
	str r0, [r2]
	str r1, [r5, #8]
	adds r0, r5, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08069E54: .4byte vtable_unk_080E7A98

	thumb_func_start func_08069E58
func_08069E58: @ 0x08069E58
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08069E94 @ =vtable_unk_080E7A98
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08069E74
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08069E74:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _08069E86
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08069E86:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08069E94: .4byte vtable_unk_080E7A98

	thumb_func_start func_08069E98
func_08069E98: @ 0x08069E98
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_080769A0
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
_08069EB4:
	.byte 0x00, 0xB5, 0x90, 0x21, 0x49, 0x00, 0x40, 0x18, 0x00, 0x68, 0xBE, 0x21
	.byte 0xC9, 0x00, 0x40, 0x18, 0xA3, 0xF7, 0x96, 0xF8, 0x01, 0x1C, 0x48, 0x42, 0x08, 0x43, 0xC0, 0x0F
	.byte 0x02, 0xBC, 0x08, 0x47, 0x00, 0xB5, 0x90, 0x21, 0x49, 0x00, 0x40, 0x18, 0x00, 0x68, 0xBE, 0x21
	.byte 0xC9, 0x00, 0x40, 0x18, 0xA3, 0xF7, 0x6E, 0xF8, 0x01, 0x1C, 0x48, 0x42, 0x08, 0x43, 0xC0, 0x0F
	.byte 0x02, 0xBC, 0x08, 0x47, 0x00, 0xB5, 0x90, 0x21, 0x49, 0x00, 0x40, 0x18, 0x00, 0x68, 0x82, 0x21
	.byte 0xC9, 0x00, 0x40, 0x18, 0xA2, 0xF7, 0x94, 0xFB, 0x01, 0x1C, 0x48, 0x42, 0x08, 0x43, 0xC0, 0x0F
	.byte 0x02, 0xBC, 0x08, 0x47

	thumb_func_start func_08069F14
func_08069F14: @ 0x08069F14
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r7, r0, #0
	mov sb, r1
	adds r5, r2, #0
	mov sl, r3
	bl func_08008444
	ldr r0, _0806A120 @ =vtable_unk_080E7AA8
	str r0, [r7, #4]
	mov r1, sb
	ldr r0, [r1]
	movs r4, #0
	str r4, [r1]
	str r0, [r7, #8]
	str r5, [r7, #0xc]
	mov r2, sl
	str r2, [r7, #0x10]
	str r4, [r7, #0x14]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x18]
	str r4, [r7, #0x1c]
	movs r5, #0
	strh r4, [r7, #0x20]
	adds r6, r7, #0
	adds r6, #0x24
	ldr r1, _0806A124 @ =0x08527094
	adds r0, r6, #0
	bl func_0805E6CC
	movs r1, #0x54
	adds r1, r1, r7
	mov r8, r1
	ldr r1, _0806A128 @ =0x08728208
	mov r0, r8
	bl func_0805E6CC
	adds r0, r7, #0
	adds r0, #0x84
	strh r4, [r0]
	strh r4, [r0, #2]
	adds r0, #4
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0x9c
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	adds r0, #0x1c
	strb r5, [r0]
	adds r0, #4
	strh r4, [r0]
	strh r4, [r0, #2]
	adds r0, #4
	adds r1, r6, #0
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0xd4
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	adds r0, #0x1c
	strb r5, [r0]
	adds r6, #0xd0
	movs r0, #0xc
	strh r0, [r6]
	adds r1, r7, #0
	adds r1, #0xf8
	movs r0, #0x18
	str r0, [r1]
	adds r0, r7, #0
	adds r0, #0xfc
	mov r1, r8
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r2, #0x88
	lsls r2, r2, #1
	adds r0, r7, r2
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r0, #0x96
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	str r4, [r6, #0x3c]
	add r0, sp, #0xc
	bl func_0800835C
	add r5, sp, #0x10
	adds r0, r5, #0
	bl func_0800770C
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r7, r1
	str r4, [sp]
	add r2, sp, #0xc
	str r2, [sp, #4]
	str r5, [sp, #8]
	movs r1, #0
	movs r2, #0x1d
	movs r3, #0
	bl func_08050CC0
	adds r0, r5, #0
	movs r1, #2
	bl func_08007714
	add r0, sp, #0xc
	movs r1, #2
	bl func_08008364
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r0, r7, r1
	str r4, [r0]
	movs r0, #0xf
	movs r1, #1
	rsbs r1, r1, #0
_0806A052:
	subs r0, #1
	cmp r0, r1
	bne _0806A052
	ldr r2, _0806A12C @ =0x00003EA0
	adds r0, r7, r2
	movs r1, #0
	str r1, [r0]
	ldr r2, _0806A130 @ =0x00003FA4
	adds r0, r7, r2
	str r1, [r0]
	adds r2, #0xc4
	adds r0, r7, r2
	str r1, [r0]
	adds r2, #0x44
	adds r0, r7, r2
	str r1, [r0]
	ldr r0, _0806A134 @ =0x000040B0
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #1
	bl func_08007B54
	str r0, [r4, #4]
	ldr r1, _0806A138 @ =0x000040B8
	adds r4, r7, r1
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	ldr r2, _0806A13C @ =0x000040C0
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r4, #4]
	ldr r0, _0806A140 @ =0x000040C8
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	ldr r1, _0806A144 @ =0x000040D0
	adds r4, r7, r1
	movs r5, #9
	movs r2, #0
	mov r8, r2
	movs r6, #1
	rsbs r6, r6, #0
_0806A0CC:
	adds r0, r4, #0
	bl func_08007874
	mov r0, r8
	str r0, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r6
	bne _0806A0CC
	ldr r1, _0806A148 @ =0x00004120
	adds r4, r7, r1
	movs r5, #9
	movs r2, #0
	mov r8, r2
	movs r6, #1
	rsbs r6, r6, #0
_0806A0EC:
	adds r0, r4, #0
	bl func_08007128
	mov r0, r8
	str r0, [r4, #4]
	adds r4, #8
	subs r5, #1
	cmp r5, r6
	bne _0806A0EC
	ldr r1, _0806A14C @ =0x00004170
	adds r0, r7, r1
	movs r1, #1
	bl func_08008B54
	ldr r2, _0806A150 @ =0x00004174
	adds r1, r7, r2
	movs r0, #0
	str r0, [r1]
	mov r0, sl
	cmp r0, #1
	beq _0806A15A
	cmp r0, #1
	bgt _0806A154
	cmp r0, #0
	beq _0806A170
	b _0806A15A
	.align 2, 0
_0806A120: .4byte vtable_unk_080E7AA8
_0806A124: .4byte 0x08527094
_0806A128: .4byte 0x08728208
_0806A12C: .4byte 0x00003EA0
_0806A130: .4byte 0x00003FA4
_0806A134: .4byte 0x000040B0
_0806A138: .4byte 0x000040B8
_0806A13C: .4byte 0x000040C0
_0806A140: .4byte 0x000040C8
_0806A144: .4byte 0x000040D0
_0806A148: .4byte 0x00004120
_0806A14C: .4byte 0x00004170
_0806A150: .4byte 0x00004174
_0806A154:
	mov r1, sl
	cmp r1, #2
	beq _0806A162
_0806A15A:
	movs r2, #0x9a
	lsls r2, r2, #1
	adds r0, r7, r2
	b _0806A168
_0806A162:
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r7, r1
_0806A168:
	movs r1, #0xb4
	bl func_08050E50
	b _0806A17C
_0806A170:
	movs r2, #0x9a
	lsls r2, r2, #1
	adds r0, r7, r2
	movs r1, #0
	bl func_08050E50
_0806A17C:
	movs r0, #0
	mov r8, r0
	ldr r1, _0806A1E8 @ =0x000040D4
	adds r6, r7, r1
_0806A184:
	mov r2, r8
	lsls r5, r2, #3
	adds r4, r5, r7
	ldr r0, _0806A1EC @ =0x000040D0
	adds r4, r4, r0
	ldr r1, [r6]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r6]
	adds r5, r5, r7
	ldr r1, _0806A1F0 @ =0x00004120
	adds r5, r5, r1
	ldr r1, [r6, #0x50]
	adds r0, r5, #0
	bl func_080073E0
	adds r0, r5, #0
	bl func_0800736C
	str r0, [r6, #0x50]
	adds r6, #8
	movs r2, #1
	add r8, r2
	mov r0, r8
	cmp r0, #9
	ble _0806A184
	mov r2, sb
	ldr r1, [r2]
	cmp r1, #0
	beq _0806A1D6
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0806A1D6:
	adds r0, r7, #0
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806A1E8: .4byte 0x000040D4
_0806A1EC: .4byte 0x000040D0
_0806A1F0: .4byte 0x00004120

	thumb_func_start func_0806A1F4
func_0806A1F4: @ 0x0806A1F4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _0806A45C @ =0xFFFFFC78
	add sp, r4
	str r0, [sp, #0x20c]
	adds r7, r1, #0
	adds r0, r7, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0x10
	movs r3, #0xea
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #8]
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0x10
	ldr r4, _0806A460 @ =0x00001E41
	adds r1, r4, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0x10
	ldr r5, _0806A464 @ =0x00003F42
	adds r1, r5, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r1, _0806A468 @ =0x0600E800
	movs r2, #0xc0
	lsls r2, r2, #5
	bl func_08008EB8
	ldr r1, _0806A46C @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0x10
	movs r6, #0xb2
	lsls r6, r6, #5
	adds r1, r6, #0
	strh r1, [r2]
	strh r1, [r0]
	ldr r0, _0806A470 @ =0x080F9F70
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r2, _0806A474 @ =0x080F9F74
	ldr r2, [r2]
	bl func_08008E64
	ldr r0, _0806A478 @ =0x00030003
	ldr r1, _0806A47C @ =0x0600F800
	movs r2, #0x80
	lsls r2, r2, #4
	bl func_08008EB8
	movs r0, #0
	mov sl, r0
	add r1, sp, #0xf8
	mov sb, r1
	mov r2, sp
	adds r2, #0x18
	str r2, [sp, #0x2b0]
	mov r3, sp
	adds r3, #0x58
	str r3, [sp, #0x2b8]
	mov r4, sp
	adds r4, #0xfc
	str r4, [sp, #0x304]
	movs r5, #0x80
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x308]
	mov r6, sp
	adds r6, #0x60
	str r6, [sp, #0x2bc]
	movs r0, #0x86
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x30c]
	movs r1, #0x8c
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x314]
	movs r2, #0x8e
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x318]
	movs r3, #0x94
	lsls r3, r3, #1
	add r3, sp
	str r3, [sp, #0x324]
	movs r4, #0x9a
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x328]
	movs r5, #0xa0
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x32c]
	movs r6, #0xa6
	lsls r6, r6, #1
	add r6, sp
	str r6, [sp, #0x330]
	movs r0, #0xac
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x334]
	movs r1, #0xb2
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x338]
	mov r2, sp
	adds r2, #0x7c
	str r2, [sp, #0x2c4]
	mov r3, sp
	adds r3, #0x8c
	str r3, [sp, #0x2c8]
	mov r4, sp
	adds r4, #0x9c
	str r4, [sp, #0x2d0]
	mov r5, sp
	adds r5, #0xac
	str r5, [sp, #0x2e8]
	mov r6, sp
	adds r6, #0x64
	str r6, [sp, #0x2c0]
	movs r0, #1
	mov r8, r0
	ldr r5, _0806A480 @ =0x06001400
	mov r6, sb
	ldr r4, _0806A484 @ =0x080FB966
_0806A31C:
	ldrh r1, [r4]
	mov r2, r8
	strh r2, [r6]
	movs r0, #2
	mov r3, sb
	strh r0, [r3, #2]
	ldr r0, [r6]
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	mov r2, r8
	str r2, [sp, #8]
	add r1, sp, #0x18
	movs r2, #0
	movs r3, #0
	bl func_0804E5AC
	ldr r0, [sp, #0x2b0]
	adds r1, r5, #0
	movs r2, #0x40
	bl func_08008E64
	adds r5, #0x40
	adds r4, #2
	movs r3, #1
	add sl, r3
	mov r0, sl
	cmp r0, #9
	ble _0806A31C
	ldr r0, [sp, #0x2b8]
	movs r1, #0
	movs r2, #6
	bl memset
	movs r1, #0
	str r1, [sp, #0x210]
	movs r0, #0x20
	ldr r2, [sp, #0x2b8]
	strh r0, [r2]
	movs r5, #8
	movs r6, #2
	add r0, sp, #0xfc
	strh r5, [r0]
	ldr r3, [sp, #0x304]
	strh r6, [r3, #2]
	ldr r0, [r0]
	movs r1, #0xa0
	lsls r1, r1, #1
	adds r4, r7, r1
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	ldr r1, _0806A488 @ =0x080FB97C
	movs r2, #1
	mov sb, r2
	add r0, sp, #0x100
	strh r5, [r0]
	ldr r3, [sp, #0x308]
	strh r6, [r3, #2]
	ldr r0, [r0]
	str r1, [sp]
	ldr r5, [sp, #0x210]
	str r5, [sp, #4]
	str r2, [sp, #8]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r0, r7, #0
	bl func_08008910
	ldr r6, [sp, #0x2b8]
	ldrh r2, [r6]
	movs r3, #0x80
	lsls r3, r3, #2
	str r0, [sp, #0x380]
	lsls r2, r2, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x60
	adds r1, r4, #0
	bl func_08008F0C
	ldr r0, [sp, #0x2bc]
	mov sl, r0
	ldr r2, [sp, #0x380]
	ldr r1, [r2, #4]
	ldr r0, [r2, #0xc]
	cmp r1, r0
	beq _0806A49C
	cmp r1, #0
	beq _0806A3E6
	adds r0, r1, #0
	ldr r1, [sp, #0x2bc]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806A3E6:
	ldr r6, [sp, #0x380]
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r0, #0xd1
	lsls r0, r0, #2
	adds r0, r7, r0
	str r0, [sp, #0x368]
	movs r1, #0xa9
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x36c]
	ldr r2, _0806A48C @ =0x00000854
	adds r2, r7, r2
	str r2, [sp, #0x288]
	ldr r3, _0806A490 @ =0x000009D8
	adds r3, r7, r3
	str r3, [sp, #0x29c]
	ldr r4, _0806A494 @ =0x00000B5C
	adds r4, r7, r4
	str r4, [sp, #0x2a0]
	movs r5, #0xce
	lsls r5, r5, #4
	adds r5, r7, r5
	str r5, [sp, #0x2cc]
	ldr r6, _0806A498 @ =0x0000074C
	adds r6, r7, r6
	str r6, [sp, #0x378]
	movs r0, #0xfa
	lsls r0, r0, #3
	adds r0, r7, r0
	str r0, [sp, #0x37c]
	adds r1, r7, #0
	adds r1, #0x1c
	str r1, [sp, #0x2b4]
	adds r2, r7, #0
	adds r2, #0x84
	str r2, [sp, #0x2d4]
	adds r3, r7, #0
	adds r3, #0x86
	str r3, [sp, #0x2d8]
	adds r4, r7, #0
	adds r4, #0xbc
	str r4, [sp, #0x2fc]
	adds r5, r7, #0
	adds r5, #0xbe
	str r5, [sp, #0x300]
	adds r6, r7, #0
	adds r6, #0xfc
	str r6, [sp, #0x31c]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r0, r7, r0
	str r0, [sp, #0x320]
	adds r1, #0x6c
	str r1, [sp, #0x2e0]
	adds r2, #8
	str r2, [sp, #0x2e4]
	b _0806A5E8
	.align 2, 0
_0806A45C: .4byte 0xFFFFFC78
_0806A460: .4byte 0x00001E41
_0806A464: .4byte 0x00003F42
_0806A468: .4byte 0x0600E800
_0806A46C: .4byte 0x06007FE0
_0806A470: .4byte 0x080F9F70
_0806A474: .4byte 0x080F9F74
_0806A478: .4byte 0x00030003
_0806A47C: .4byte 0x0600F800
_0806A480: .4byte 0x06001400
_0806A484: .4byte 0x080FB966
_0806A488: .4byte 0x080FB97C
_0806A48C: .4byte 0x00000854
_0806A490: .4byte 0x000009D8
_0806A494: .4byte 0x00000B5C
_0806A498: .4byte 0x0000074C
_0806A49C:
	mov r8, r1
	add r1, sp, #0x108
	mov r3, sb
	str r3, [r1]
	ldr r4, [sp, #0x380]
	ldr r0, [r4]
	mov r5, r8
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x104
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _0806A4BA
	adds r0, r1, #0
_0806A4BA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806A4D8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806A4DC
	mov r0, sb
	bl func_080D3BC0
	b _0806A4DC
_0806A4D8:
	movs r0, #0
	mov sb, r0
_0806A4DC:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r6, [sp, #0x380]
	ldr r2, [r6]
	adds r3, r5, #0
	movs r0, #0xd1
	lsls r0, r0, #2
	adds r0, r7, r0
	str r0, [sp, #0x368]
	movs r1, #0xa9
	lsls r1, r1, #3
	adds r1, r7, r1
	str r1, [sp, #0x36c]
	ldr r4, _0806A588 @ =0x00000854
	adds r4, r7, r4
	str r4, [sp, #0x288]
	ldr r5, _0806A58C @ =0x000009D8
	adds r5, r7, r5
	str r5, [sp, #0x29c]
	ldr r6, _0806A590 @ =0x00000B5C
	adds r6, r7, r6
	str r6, [sp, #0x2a0]
	movs r0, #0xce
	lsls r0, r0, #4
	adds r0, r7, r0
	str r0, [sp, #0x2cc]
	ldr r1, _0806A594 @ =0x0000074C
	adds r1, r7, r1
	str r1, [sp, #0x378]
	movs r4, #0xfa
	lsls r4, r4, #3
	adds r4, r7, r4
	str r4, [sp, #0x37c]
	adds r5, r7, #0
	adds r5, #0x1c
	str r5, [sp, #0x2b4]
	adds r6, r7, #0
	adds r6, #0x84
	str r6, [sp, #0x2d4]
	adds r0, r7, #0
	adds r0, #0x86
	str r0, [sp, #0x2d8]
	adds r1, r7, #0
	adds r1, #0xbc
	str r1, [sp, #0x2fc]
	adds r4, r7, #0
	adds r4, #0xbe
	str r4, [sp, #0x300]
	adds r5, #0xe0
	str r5, [sp, #0x31c]
	movs r6, #0x80
	lsls r6, r6, #1
	adds r6, r7, r6
	str r6, [sp, #0x320]
	adds r0, #2
	str r0, [sp, #0x2e0]
	subs r1, #0x30
	str r1, [sp, #0x2e4]
	cmp r2, r8
	beq _0806A56C
_0806A554:
	cmp r3, #0
	beq _0806A564
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A564:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806A554
_0806A56C:
	adds r5, r3, #0
	ldr r1, [sp, #0x108]
	cmp r1, #1
	bne _0806A598
	cmp r5, #0
	beq _0806A584
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806A584:
	adds r5, #0x10
	b _0806A5C0
	.align 2, 0
_0806A588: .4byte 0x00000854
_0806A58C: .4byte 0x000009D8
_0806A590: .4byte 0x00000B5C
_0806A594: .4byte 0x0000074C
_0806A598:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _0806A5BE
_0806A5A0:
	cmp r2, #0
	beq _0806A5B0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A5B0:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _0806A5A0
_0806A5BE:
	adds r5, r2, #0
_0806A5C0:
	ldr r6, [sp, #0x380]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806A5D2
_0806A5CC:
	adds r1, #0x10
	cmp r1, r2
	bne _0806A5CC
_0806A5D2:
	cmp r0, #0
	beq _0806A5DA
	bl free
_0806A5DA:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r1, [sp, #0x384]
	ldr r2, [sp, #0x380]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0806A5E8:
	movs r3, #0x10
	str r3, [sp, #0x210]
	movs r0, #0x30
	movs r4, #0
	ldr r5, [sp, #0x2b8]
	strh r0, [r5, #2]
	ldr r3, _0806A660 @ =0x080FB988
	movs r5, #1
	movs r1, #8
	movs r2, #2
	add r0, sp, #0x10c
	strh r1, [r0]
	ldr r6, [sp, #0x30c]
	strh r2, [r6, #2]
	ldr r0, [r0]
	str r3, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	ldr r1, [sp, #0x368]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r0, r7, #0
	bl func_08008910
	ldr r1, [sp, #0x2b8]
	ldrh r2, [r1, #2]
	movs r3, #0x80
	lsls r3, r3, #2
	str r0, [sp, #0x380]
	lsls r2, r2, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x60
	ldr r1, [sp, #0x368]
	bl func_08008F0C
	ldr r2, [sp, #0x2bc]
	mov sl, r2
	ldr r3, [sp, #0x380]
	ldr r1, [r3, #4]
	ldr r0, [r3, #0xc]
	cmp r1, r0
	beq _0806A664
	cmp r1, #0
	beq _0806A654
	adds r0, r1, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A654:
	ldr r1, [sp, #0x380]
	ldr r0, [r1, #4]
	adds r0, #0x10
	str r0, [r1, #4]
	b _0806A73A
	.align 2, 0
_0806A660: .4byte 0x080FB988
_0806A664:
	mov r8, r1
	add r1, sp, #0x114
	str r5, [r1]
	ldr r2, [sp, #0x380]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x110
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x110
	cmp r4, r0
	bhs _0806A684
	adds r1, r2, #0
_0806A684:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806A6A2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806A6A6
	mov r0, sb
	bl func_080D3BC0
	b _0806A6A6
_0806A6A2:
	movs r0, #0
	mov sb, r0
_0806A6A6:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r4, [sp, #0x380]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806A6CC
_0806A6B4:
	cmp r3, #0
	beq _0806A6C4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A6C4:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806A6B4
_0806A6CC:
	adds r5, r3, #0
	add r0, sp, #0x114
	ldr r0, [r0]
	cmp r0, #1
	bne _0806A6EA
	cmp r5, #0
	beq _0806A6E6
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A6E6:
	adds r5, #0x10
	b _0806A712
_0806A6EA:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806A710
_0806A6F2:
	cmp r2, #0
	beq _0806A702
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A702:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _0806A6F2
_0806A710:
	adds r5, r2, #0
_0806A712:
	ldr r3, [sp, #0x380]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806A724
_0806A71E:
	adds r1, #0x10
	cmp r1, r2
	bne _0806A71E
_0806A724:
	cmp r0, #0
	beq _0806A72C
	bl free
_0806A72C:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r4, [sp, #0x384]
	ldr r6, [sp, #0x380]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806A73A:
	ldr r0, [sp, #0x210]
	adds r0, #0x10
	str r0, [sp, #0x210]
	adds r0, #0x20
	movs r6, #0
	ldr r1, [sp, #0x2b8]
	strh r0, [r1, #4]
	movs r4, #8
	movs r5, #2
	add r0, sp, #0x118
	strh r4, [r0]
	ldr r2, [sp, #0x314]
	strh r5, [r2, #2]
	ldr r0, [r0]
	ldr r1, [sp, #0x36c]
	movs r2, #0
	bl func_0804E7A0
	ldr r1, _0806A7CC @ =0x080FB994
	movs r3, #1
	mov sb, r3
	add r0, sp, #0x11c
	strh r4, [r0]
	ldr r4, [sp, #0x318]
	strh r5, [r4, #2]
	ldr r0, [r0]
	str r1, [sp]
	str r6, [sp, #4]
	str r3, [sp, #8]
	ldr r1, [sp, #0x36c]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r0, r7, #0
	bl func_08008910
	ldr r5, [sp, #0x2b8]
	ldrh r2, [r5, #4]
	movs r3, #0x80
	lsls r3, r3, #2
	str r0, [sp, #0x380]
	lsls r2, r2, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x60
	ldr r1, [sp, #0x36c]
	bl func_08008F0C
	ldr r6, [sp, #0x2bc]
	mov sl, r6
	ldr r0, [sp, #0x380]
	ldr r1, [r0, #4]
	ldr r0, [r0, #0xc]
	cmp r1, r0
	beq _0806A7D0
	cmp r1, #0
	beq _0806A7BC
	adds r0, r1, #0
	adds r1, r6, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806A7BC:
	ldr r5, [sp, #0x380]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r6, [sp, #0x210]
	adds r6, #0x10
	str r6, [sp, #0x2f0]
	b _0806A8AE
	.align 2, 0
_0806A7CC: .4byte 0x080FB994
_0806A7D0:
	mov r8, r1
	add r1, sp, #0x124
	mov r0, sb
	str r0, [r1]
	ldr r2, [sp, #0x380]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x120
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x120
	cmp r4, r0
	bhs _0806A7F2
	adds r1, r2, #0
_0806A7F2:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806A810
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806A814
	mov r0, sb
	bl func_080D3BC0
	b _0806A814
_0806A810:
	movs r0, #0
	mov sb, r0
_0806A814:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r4, [sp, #0x380]
	ldr r2, [r4]
	adds r3, r5, #0
	ldr r5, [sp, #0x210]
	adds r5, #0x10
	str r5, [sp, #0x2f0]
	cmp r2, r8
	beq _0806A840
_0806A828:
	cmp r3, #0
	beq _0806A838
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A838:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806A828
_0806A840:
	adds r5, r3, #0
	add r0, sp, #0x124
	ldr r0, [r0]
	cmp r0, #1
	bne _0806A85E
	cmp r5, #0
	beq _0806A85A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A85A:
	adds r5, #0x10
	b _0806A886
_0806A85E:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806A884
_0806A866:
	cmp r2, #0
	beq _0806A876
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A876:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _0806A866
_0806A884:
	adds r5, r2, #0
_0806A886:
	ldr r3, [sp, #0x380]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806A898
_0806A892:
	adds r1, #0x10
	cmp r1, r2
	bne _0806A892
_0806A898:
	cmp r0, #0
	beq _0806A8A0
	bl free
_0806A8A0:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r4, [sp, #0x384]
	ldr r6, [sp, #0x380]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806A8AE:
	ldr r0, [sp, #0x2f0]
	str r0, [sp, #0x210]
	adds r1, r0, #0
	adds r1, #0x20
	str r1, [sp, #0x214]
	ldr r3, _0806A924 @ =0x080FB9A0
	movs r4, #0
	movs r5, #1
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x128
	strh r1, [r0]
	ldr r6, [sp, #0x324]
	strh r2, [r6, #2]
	ldr r0, [r0]
	str r3, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	ldr r1, [sp, #0x288]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r0, r7, #0
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	str r0, [sp, #0x380]
	ldr r0, [sp, #0x214]
	lsls r2, r0, #5
	movs r1, #0xc0
	lsls r1, r1, #0x13
	adds r2, r2, r1
	add r0, sp, #0x60
	ldr r1, [sp, #0x288]
	bl func_08008F0C
	ldr r2, [sp, #0x2bc]
	mov sl, r2
	ldr r3, [sp, #0x380]
	ldr r1, [r3, #4]
	ldr r0, [r3, #0xc]
	cmp r1, r0
	beq _0806A928
	cmp r1, #0
	beq _0806A918
	adds r0, r1, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A918:
	ldr r1, [sp, #0x380]
	ldr r0, [r1, #4]
	adds r0, #0x10
	str r0, [r1, #4]
	b _0806A9FE
	.align 2, 0
_0806A924: .4byte 0x080FB9A0
_0806A928:
	mov r8, r1
	add r1, sp, #0x130
	str r5, [r1]
	ldr r2, [sp, #0x380]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x12c
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x12c
	cmp r4, r0
	bhs _0806A948
	adds r1, r2, #0
_0806A948:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806A966
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806A96A
	mov r0, sb
	bl func_080D3BC0
	b _0806A96A
_0806A966:
	movs r0, #0
	mov sb, r0
_0806A96A:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r4, [sp, #0x380]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806A990
_0806A978:
	cmp r3, #0
	beq _0806A988
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A988:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806A978
_0806A990:
	adds r5, r3, #0
	add r0, sp, #0x130
	ldr r0, [r0]
	cmp r0, #1
	bne _0806A9AE
	cmp r5, #0
	beq _0806A9AA
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A9AA:
	adds r5, #0x10
	b _0806A9D6
_0806A9AE:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806A9D4
_0806A9B6:
	cmp r2, #0
	beq _0806A9C6
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806A9C6:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _0806A9B6
_0806A9D4:
	adds r5, r2, #0
_0806A9D6:
	ldr r3, [sp, #0x380]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806A9E8
_0806A9E2:
	adds r1, #0x10
	cmp r1, r2
	bne _0806A9E2
_0806A9E8:
	cmp r0, #0
	beq _0806A9F0
	bl free
_0806A9F0:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r4, [sp, #0x384]
	ldr r6, [sp, #0x380]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806A9FE:
	ldr r0, [sp, #0x210]
	adds r0, #0xc
	str r0, [sp, #0x210]
	adds r4, r0, #0
	adds r4, #0x20
	ldr r3, _0806AA78 @ =0x080FB9A8
	movs r5, #0
	movs r1, #1
	mov sb, r1
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x134
	strh r1, [r0]
	ldr r6, [sp, #0x328]
	strh r2, [r6, #2]
	ldr r0, [r0]
	str r3, [sp]
	str r5, [sp, #4]
	mov r1, sb
	str r1, [sp, #8]
	ldr r1, [sp, #0x29c]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r0, r7, #0
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	str r0, [sp, #0x380]
	lsls r4, r4, #5
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r4, r4, r2
	add r0, sp, #0x60
	ldr r1, [sp, #0x29c]
	adds r2, r4, #0
	bl func_08008F0C
	ldr r3, [sp, #0x2bc]
	mov sl, r3
	ldr r4, [sp, #0x380]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _0806AA7C
	cmp r1, #0
	beq _0806AA6C
	adds r0, r1, #0
	adds r1, r3, #0
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806AA6C:
	ldr r3, [sp, #0x380]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _0806AB54
	.align 2, 0
_0806AA78: .4byte 0x080FB9A8
_0806AA7C:
	mov r8, r1
	add r1, sp, #0x13c
	mov r4, sb
	str r4, [r1]
	ldr r5, [sp, #0x380]
	ldr r0, [r5]
	mov r6, r8
	subs r0, r6, r0
	asrs r4, r0, #4
	add r0, sp, #0x138
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x138
	cmp r4, r0
	bhs _0806AA9E
	adds r1, r2, #0
_0806AA9E:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806AABC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806AAC0
	mov r0, sb
	bl func_080D3BC0
	b _0806AAC0
_0806AABC:
	movs r0, #0
	mov sb, r0
_0806AAC0:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r0, [sp, #0x380]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806AAE6
_0806AACE:
	cmp r3, #0
	beq _0806AADE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806AADE:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806AACE
_0806AAE6:
	adds r5, r3, #0
	add r0, sp, #0x13c
	ldr r0, [r0]
	cmp r0, #1
	bne _0806AB04
	cmp r5, #0
	beq _0806AB00
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806AB00:
	adds r5, #0x10
	b _0806AB2C
_0806AB04:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806AB2A
_0806AB0C:
	cmp r2, #0
	beq _0806AB1C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806AB1C:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _0806AB0C
_0806AB2A:
	adds r5, r2, #0
_0806AB2C:
	ldr r6, [sp, #0x380]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806AB3E
_0806AB38:
	adds r1, #0x10
	cmp r1, r2
	bne _0806AB38
_0806AB3E:
	cmp r0, #0
	beq _0806AB46
	bl free
_0806AB46:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r1, [sp, #0x384]
	ldr r2, [sp, #0x380]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0806AB54:
	ldr r3, [sp, #0x210]
	adds r3, #0xc
	str r3, [sp, #0x210]
	adds r4, r3, #0
	adds r4, #0x20
	ldr r3, _0806ABCC @ =0x080FB9B0
	movs r5, #0
	movs r6, #1
	mov sb, r6
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x140
	strh r1, [r0]
	ldr r1, [sp, #0x32c]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	str r5, [sp, #4]
	str r6, [sp, #8]
	ldr r1, [sp, #0x2a0]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r0, r7, #0
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	str r0, [sp, #0x380]
	lsls r4, r4, #5
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r4, r4, r2
	add r0, sp, #0x60
	ldr r1, [sp, #0x2a0]
	adds r2, r4, #0
	bl func_08008F0C
	ldr r3, [sp, #0x2bc]
	mov sl, r3
	ldr r4, [sp, #0x380]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _0806ABD0
	cmp r1, #0
	beq _0806ABC0
	adds r0, r1, #0
	adds r1, r3, #0
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806ABC0:
	ldr r3, [sp, #0x380]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _0806ACA8
	.align 2, 0
_0806ABCC: .4byte 0x080FB9B0
_0806ABD0:
	mov r8, r1
	add r1, sp, #0x148
	mov r4, sb
	str r4, [r1]
	ldr r5, [sp, #0x380]
	ldr r0, [r5]
	mov r6, r8
	subs r0, r6, r0
	asrs r4, r0, #4
	add r0, sp, #0x144
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x144
	cmp r4, r0
	bhs _0806ABF2
	adds r1, r2, #0
_0806ABF2:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806AC10
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806AC14
	mov r0, sb
	bl func_080D3BC0
	b _0806AC14
_0806AC10:
	movs r0, #0
	mov sb, r0
_0806AC14:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r0, [sp, #0x380]
	ldr r2, [r0]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806AC3A
_0806AC22:
	cmp r3, #0
	beq _0806AC32
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806AC32:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806AC22
_0806AC3A:
	adds r5, r3, #0
	add r0, sp, #0x148
	ldr r0, [r0]
	cmp r0, #1
	bne _0806AC58
	cmp r5, #0
	beq _0806AC54
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806AC54:
	adds r5, #0x10
	b _0806AC80
_0806AC58:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806AC7E
_0806AC60:
	cmp r2, #0
	beq _0806AC70
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806AC70:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _0806AC60
_0806AC7E:
	adds r5, r2, #0
_0806AC80:
	ldr r6, [sp, #0x380]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806AC92
_0806AC8C:
	adds r1, #0x10
	cmp r1, r2
	bne _0806AC8C
_0806AC92:
	cmp r0, #0
	beq _0806AC9A
	bl free
_0806AC9A:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r1, [sp, #0x384]
	ldr r2, [sp, #0x380]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0806ACA8:
	ldr r3, [sp, #0x210]
	adds r3, #0xc
	str r3, [sp, #0x210]
	adds r4, r3, #0
	adds r4, #0x20
	ldr r3, _0806AD24 @ =0x080FB9B8
	movs r5, #0
	movs r6, #1
	mov sb, r6
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x14c
	strh r1, [r0]
	ldr r1, [sp, #0x330]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	str r5, [sp, #4]
	str r6, [sp, #8]
	ldr r1, [sp, #0x2cc]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r0, r7, #0
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	str r0, [sp, #0x380]
	lsls r4, r4, #5
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r4, r4, r2
	add r0, sp, #0x60
	ldr r1, [sp, #0x2cc]
	adds r2, r4, #0
	bl func_08008F0C
	ldr r3, [sp, #0x2bc]
	mov sl, r3
	ldr r4, [sp, #0x380]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _0806AD28
	cmp r1, #0
	beq _0806AD14
	adds r0, r1, #0
	adds r1, r3, #0
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806AD14:
	ldr r3, [sp, #0x380]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	ldr r4, [sp, #0x210]
	adds r4, #0xc
	str r4, [sp, #0x2ec]
	b _0806AE06
	.align 2, 0
_0806AD24: .4byte 0x080FB9B8
_0806AD28:
	mov r8, r1
	add r1, sp, #0x154
	mov r5, sb
	str r5, [r1]
	ldr r6, [sp, #0x380]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x150
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x150
	cmp r4, r0
	bhs _0806AD4A
	adds r1, r2, #0
_0806AD4A:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806AD68
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806AD6C
	mov r0, sb
	bl func_080D3BC0
	b _0806AD6C
_0806AD68:
	movs r0, #0
	mov sb, r0
_0806AD6C:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r3, [sp, #0x380]
	ldr r2, [r3]
	adds r3, r5, #0
	ldr r4, [sp, #0x210]
	adds r4, #0xc
	str r4, [sp, #0x2ec]
	cmp r2, r8
	beq _0806AD98
_0806AD80:
	cmp r3, #0
	beq _0806AD90
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806AD90:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806AD80
_0806AD98:
	adds r5, r3, #0
	add r0, sp, #0x154
	ldr r0, [r0]
	cmp r0, #1
	bne _0806ADB6
	cmp r5, #0
	beq _0806ADB2
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806ADB2:
	adds r5, #0x10
	b _0806ADDE
_0806ADB6:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806ADDC
_0806ADBE:
	cmp r2, #0
	beq _0806ADCE
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806ADCE:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _0806ADBE
_0806ADDC:
	adds r5, r2, #0
_0806ADDE:
	ldr r3, [sp, #0x380]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806ADF0
_0806ADEA:
	adds r1, #0x10
	cmp r1, r2
	bne _0806ADEA
_0806ADF0:
	cmp r0, #0
	beq _0806ADF8
	bl free
_0806ADF8:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r4, [sp, #0x384]
	ldr r6, [sp, #0x380]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806AE06:
	ldr r0, [sp, #0x2ec]
	str r0, [sp, #0x210]
	adds r1, r0, #0
	adds r1, #0x20
	str r1, [sp, #0x218]
	ldr r2, _0806AE74 @ =0x080FB9C0
	movs r3, #0
	movs r4, #1
	movs r0, #2
	add r1, sp, #0x158
	strh r0, [r1]
	ldr r5, [sp, #0x334]
	strh r0, [r5, #2]
	ldr r0, [r1]
	str r2, [sp]
	str r3, [sp, #4]
	str r4, [sp, #8]
	ldr r1, [sp, #0x378]
	movs r2, #0
	bl func_0804E958
	adds r0, r7, #0
	bl func_08008910
	str r0, [sp, #0x380]
	ldr r6, [sp, #0x218]
	lsls r2, r6, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x60
	ldr r1, [sp, #0x378]
	movs r3, #0x80
	bl func_08008F0C
	ldr r1, [sp, #0x2bc]
	mov sl, r1
	ldr r2, [sp, #0x380]
	ldr r1, [r2, #4]
	ldr r0, [r2, #0xc]
	cmp r1, r0
	beq _0806AE78
	cmp r1, #0
	beq _0806AE6A
	adds r0, r1, #0
	ldr r1, [sp, #0x2bc]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806AE6A:
	ldr r6, [sp, #0x380]
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806AF4E
	.align 2, 0
_0806AE74: .4byte 0x080FB9C0
_0806AE78:
	mov r8, r1
	add r1, sp, #0x160
	str r4, [r1]
	ldr r2, [sp, #0x380]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x15c
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x15c
	cmp r4, r0
	bhs _0806AE98
	adds r1, r2, #0
_0806AE98:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806AEB6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806AEBA
	mov r0, sb
	bl func_080D3BC0
	b _0806AEBA
_0806AEB6:
	movs r0, #0
	mov sb, r0
_0806AEBA:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r4, [sp, #0x380]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806AEE0
_0806AEC8:
	cmp r3, #0
	beq _0806AED8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806AED8:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806AEC8
_0806AEE0:
	adds r5, r3, #0
	add r0, sp, #0x160
	ldr r0, [r0]
	cmp r0, #1
	bne _0806AEFE
	cmp r5, #0
	beq _0806AEFA
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806AEFA:
	adds r5, #0x10
	b _0806AF26
_0806AEFE:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806AF24
_0806AF06:
	cmp r2, #0
	beq _0806AF16
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806AF16:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _0806AF06
_0806AF24:
	adds r5, r2, #0
_0806AF26:
	ldr r3, [sp, #0x380]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806AF38
_0806AF32:
	adds r1, #0x10
	cmp r1, r2
	bne _0806AF32
_0806AF38:
	cmp r0, #0
	beq _0806AF40
	bl free
_0806AF40:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r4, [sp, #0x384]
	ldr r6, [sp, #0x380]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806AF4E:
	ldr r0, [sp, #0x210]
	adds r0, #4
	str r0, [sp, #0x210]
	adds r0, #0x20
	str r0, [sp, #0x21c]
	ldr r2, _0806AFBC @ =0x080FB9C4
	movs r3, #0
	movs r4, #1
	movs r0, #2
	add r1, sp, #0x164
	strh r0, [r1]
	ldr r5, [sp, #0x338]
	strh r0, [r5, #2]
	ldr r0, [r1]
	str r2, [sp]
	str r3, [sp, #4]
	str r4, [sp, #8]
	ldr r1, [sp, #0x37c]
	movs r2, #0
	bl func_0804E958
	adds r0, r7, #0
	bl func_08008910
	str r0, [sp, #0x380]
	ldr r6, [sp, #0x21c]
	lsls r2, r6, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x60
	ldr r1, [sp, #0x37c]
	movs r3, #0x80
	bl func_08008F0C
	ldr r1, [sp, #0x2bc]
	mov sl, r1
	ldr r2, [sp, #0x380]
	ldr r1, [r2, #4]
	ldr r0, [r2, #0xc]
	cmp r1, r0
	beq _0806AFC0
	cmp r1, #0
	beq _0806AFB2
	adds r0, r1, #0
	ldr r1, [sp, #0x2bc]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806AFB2:
	ldr r6, [sp, #0x380]
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806B096
	.align 2, 0
_0806AFBC: .4byte 0x080FB9C4
_0806AFC0:
	mov r8, r1
	add r1, sp, #0x16c
	str r4, [r1]
	ldr r2, [sp, #0x380]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x168
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x168
	cmp r4, r0
	bhs _0806AFE0
	adds r1, r2, #0
_0806AFE0:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806AFFE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806B002
	mov r0, sb
	bl func_080D3BC0
	b _0806B002
_0806AFFE:
	movs r0, #0
	mov sb, r0
_0806B002:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r4, [sp, #0x380]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806B028
_0806B010:
	cmp r3, #0
	beq _0806B020
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B020:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806B010
_0806B028:
	adds r5, r3, #0
	add r0, sp, #0x16c
	ldr r0, [r0]
	cmp r0, #1
	bne _0806B046
	cmp r5, #0
	beq _0806B042
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B042:
	adds r5, #0x10
	b _0806B06E
_0806B046:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806B06C
_0806B04E:
	cmp r2, #0
	beq _0806B05E
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B05E:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _0806B04E
_0806B06C:
	adds r5, r2, #0
_0806B06E:
	ldr r3, [sp, #0x380]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806B080
_0806B07A:
	adds r1, #0x10
	cmp r1, r2
	bne _0806B07A
_0806B080:
	cmp r0, #0
	beq _0806B088
	bl free
_0806B088:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r4, [sp, #0x384]
	ldr r6, [sp, #0x380]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806B096:
	ldr r0, [sp, #0x210]
	adds r0, #4
	str r0, [sp, #0x210]
	adds r0, #0x20
	str r0, [sp, #0x220]
	adds r0, r7, #0
	bl func_08008910
	str r0, [sp, #0x380]
	ldr r1, _0806B0EC @ =0x0875196C
	ldr r3, [sp, #0x220]
	lsls r2, r3, #5
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r2, r2, r4
	add r0, sp, #0x60
	movs r3, #0x80
	bl func_08008F0C
	ldr r5, [sp, #0x2bc]
	mov sl, r5
	ldr r6, [sp, #0x380]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806B0F0
	cmp r1, #0
	beq _0806B0DA
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806B0DA:
	ldr r5, [sp, #0x380]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r6, [sp, #0x210]
	adds r6, #4
	str r6, [sp, #0x2dc]
	b _0806B1CE
	.align 2, 0
_0806B0EC: .4byte 0x0875196C
_0806B0F0:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x174
	str r0, [r1]
	ldr r2, [sp, #0x380]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x170
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x170
	cmp r4, r0
	bhs _0806B112
	adds r1, r2, #0
_0806B112:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806B130
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806B134
	mov r0, sb
	bl func_080D3BC0
	b _0806B134
_0806B130:
	movs r0, #0
	mov sb, r0
_0806B134:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r4, [sp, #0x380]
	ldr r2, [r4]
	adds r3, r5, #0
	ldr r5, [sp, #0x210]
	adds r5, #4
	str r5, [sp, #0x2dc]
	cmp r2, r8
	beq _0806B160
_0806B148:
	cmp r3, #0
	beq _0806B158
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B158:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806B148
_0806B160:
	adds r5, r3, #0
	add r0, sp, #0x174
	ldr r0, [r0]
	cmp r0, #1
	bne _0806B17E
	cmp r5, #0
	beq _0806B17A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B17A:
	adds r5, #0x10
	b _0806B1A6
_0806B17E:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806B1A4
_0806B186:
	cmp r2, #0
	beq _0806B196
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B196:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _0806B186
_0806B1A4:
	adds r5, r2, #0
_0806B1A6:
	ldr r3, [sp, #0x380]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806B1B8
_0806B1B2:
	adds r1, #0x10
	cmp r1, r2
	bne _0806B1B2
_0806B1B8:
	cmp r0, #0
	beq _0806B1C0
	bl free
_0806B1C0:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r4, [sp, #0x384]
	ldr r6, [sp, #0x380]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806B1CE:
	adds r0, r7, #0
	bl func_08008910
	str r0, [sp, #0x380]
	ldr r1, _0806B20C @ =0x087519EC
	add r0, sp, #0x60
	ldr r2, _0806B210 @ =0x05000020
	movs r3, #0x20
	bl func_08008F0C
	ldr r0, [sp, #0x2bc]
	mov sl, r0
	ldr r2, [sp, #0x380]
	ldr r1, [r2, #4]
	ldr r0, [r2, #0xc]
	cmp r1, r0
	beq _0806B214
	cmp r1, #0
	beq _0806B200
	adds r0, r1, #0
	ldr r1, [sp, #0x2bc]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806B200:
	ldr r6, [sp, #0x380]
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806B2EC
	.align 2, 0
_0806B20C: .4byte 0x087519EC
_0806B210: .4byte 0x05000020
_0806B214:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x17c
	str r0, [r1]
	ldr r2, [sp, #0x380]
	ldr r0, [r2]
	mov r3, r8
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x178
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x178
	cmp r4, r0
	bhs _0806B236
	adds r1, r2, #0
_0806B236:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806B254
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806B258
	mov r0, sb
	bl func_080D3BC0
	b _0806B258
_0806B254:
	movs r0, #0
	mov sb, r0
_0806B258:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r4, [sp, #0x380]
	ldr r2, [r4]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806B27E
_0806B266:
	cmp r3, #0
	beq _0806B276
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B276:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806B266
_0806B27E:
	adds r5, r3, #0
	add r0, sp, #0x17c
	ldr r0, [r0]
	cmp r0, #1
	bne _0806B29C
	cmp r5, #0
	beq _0806B298
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B298:
	adds r5, #0x10
	b _0806B2C4
_0806B29C:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806B2C2
_0806B2A4:
	cmp r2, #0
	beq _0806B2B4
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B2B4:
	movs r0, #1
	rsbs r0, r0, #0
	add r8, r0
	adds r2, #0x10
	mov r1, r8
	cmp r1, #0
	bne _0806B2A4
_0806B2C2:
	adds r5, r2, #0
_0806B2C4:
	ldr r3, [sp, #0x380]
	ldr r2, [r3, #4]
	ldr r0, [r3]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806B2D6
_0806B2D0:
	adds r1, #0x10
	cmp r1, r2
	bne _0806B2D0
_0806B2D6:
	cmp r0, #0
	beq _0806B2DE
	bl free
_0806B2DE:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r4, [sp, #0x384]
	ldr r6, [sp, #0x380]
	str r4, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806B2EC:
	ldr r0, [sp, #0x2dc]
	adds r0, #0x20
	str r0, [sp, #0x224]
	adds r0, r7, #0
	bl func_08008910
	str r0, [sp, #0x380]
	ldr r1, _0806B338 @ =0x0875254C
	ldr r3, [sp, #0x224]
	lsls r2, r3, #5
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r2, r2, r4
	add r0, sp, #0x60
	movs r3, #0x20
	bl func_08008F0C
	ldr r5, [sp, #0x2bc]
	mov sl, r5
	ldr r6, [sp, #0x380]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806B33C
	cmp r1, #0
	beq _0806B32C
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806B32C:
	ldr r5, [sp, #0x380]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0806B414
	.align 2, 0
_0806B338: .4byte 0x0875254C
_0806B33C:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x184
	str r0, [r1]
	ldr r6, [sp, #0x380]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x180
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x180
	cmp r4, r0
	bhs _0806B35E
	adds r1, r2, #0
_0806B35E:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806B37C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806B380
	mov r0, sb
	bl func_080D3BC0
	b _0806B380
_0806B37C:
	movs r0, #0
	mov sb, r0
_0806B380:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r3, [sp, #0x380]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806B3A6
_0806B38E:
	cmp r3, #0
	beq _0806B39E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B39E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806B38E
_0806B3A6:
	adds r5, r3, #0
	add r0, sp, #0x184
	ldr r0, [r0]
	cmp r0, #1
	bne _0806B3C4
	cmp r5, #0
	beq _0806B3C0
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806B3C0:
	adds r5, #0x10
	b _0806B3EC
_0806B3C4:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806B3EA
_0806B3CC:
	cmp r2, #0
	beq _0806B3DC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B3DC:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _0806B3CC
_0806B3EA:
	adds r5, r2, #0
_0806B3EC:
	ldr r6, [sp, #0x380]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806B3FE
_0806B3F8:
	adds r1, #0x10
	cmp r1, r2
	bne _0806B3F8
_0806B3FE:
	cmp r0, #0
	beq _0806B406
	bl free
_0806B406:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r1, [sp, #0x384]
	ldr r2, [sp, #0x380]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0806B414:
	adds r0, r7, #0
	bl func_08008910
	str r0, [sp, #0x380]
	ldr r1, _0806B450 @ =0x087525CC
	add r0, sp, #0x60
	ldr r2, _0806B454 @ =0x05000040
	movs r3, #0x20
	bl func_08008F0C
	ldr r3, [sp, #0x2bc]
	mov sl, r3
	ldr r4, [sp, #0x380]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _0806B458
	cmp r1, #0
	beq _0806B446
	adds r0, r1, #0
	adds r1, r3, #0
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B446:
	ldr r3, [sp, #0x380]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _0806B530
	.align 2, 0
_0806B450: .4byte 0x087525CC
_0806B454: .4byte 0x05000040
_0806B458:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x18c
	str r0, [r1]
	ldr r4, [sp, #0x380]
	ldr r0, [r4]
	mov r5, r8
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x188
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x188
	cmp r4, r0
	bhs _0806B47A
	adds r1, r2, #0
_0806B47A:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806B498
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806B49C
	mov r0, sb
	bl func_080D3BC0
	b _0806B49C
_0806B498:
	movs r0, #0
	mov sb, r0
_0806B49C:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r6, [sp, #0x380]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806B4C2
_0806B4AA:
	cmp r3, #0
	beq _0806B4BA
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B4BA:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806B4AA
_0806B4C2:
	adds r5, r3, #0
	add r0, sp, #0x18c
	ldr r0, [r0]
	cmp r0, #1
	bne _0806B4E0
	cmp r5, #0
	beq _0806B4DC
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806B4DC:
	adds r5, #0x10
	b _0806B508
_0806B4E0:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806B506
_0806B4E8:
	cmp r2, #0
	beq _0806B4F8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806B4F8:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _0806B4E8
_0806B506:
	adds r5, r2, #0
_0806B508:
	ldr r6, [sp, #0x380]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806B51A
_0806B514:
	adds r1, #0x10
	cmp r1, r2
	bne _0806B514
_0806B51A:
	cmp r0, #0
	beq _0806B522
	bl free
_0806B522:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r1, [sp, #0x384]
	ldr r2, [sp, #0x380]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0806B530:
	ldr r0, _0806B5C4 @ =0x03FF03FF
	ldr r6, _0806B5C8 @ =0x0600F000
	movs r2, #0x80
	lsls r2, r2, #4
	adds r1, r6, #0
	bl func_08008EB8
	movs r0, #0x4c
	bl __builtin_new
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_0800894C
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r3, r0, #0
	str r6, [sp]
	adds r0, r5, #0
	movs r1, #0x64
	adds r2, r4, #0
	bl func_08075B00
	ldr r6, [sp, #0x2b4]
	adds r5, r0, #0
	ldr r4, [r7, #0x1c]
	cmp r5, r4
	beq _0806B59C
	cmp r4, #0
	beq _0806B59C
	adds r0, r4, #0
	adds r0, #0x28
	movs r1, #2
	bl func_08075DEC
	adds r0, r4, #0
	adds r0, #0x18
	ldr r2, [r0, #4]
	ldr r1, [r4, #0x18]
	cmp r1, r2
	beq _0806B58C
_0806B586:
	adds r1, #0x40
	cmp r1, r2
	bne _0806B586
_0806B58C:
	ldr r0, [r0]
	cmp r0, #0
	beq _0806B596
	bl free
_0806B596:
	adds r0, r4, #0
	bl __builtin_delete
_0806B59C:
	str r5, [r6]
	movs r3, #0
	str r3, [sp, #0x228]
	movs r4, #0
	str r4, [sp, #0x22c]
	movs r5, #0
	str r5, [sp, #0x230]
	movs r6, #0
	str r6, [sp, #0x234]
	ldr r0, [r7, #0x10]
	cmp r0, #1
	bne _0806B5B6
	b _0806B98C
_0806B5B6:
	cmp r0, #1
	bgt _0806B5CC
	cmp r0, #0
	beq _0806B5D6
	bl _0806C162
	.align 2, 0
_0806B5C4: .4byte 0x03FF03FF
_0806B5C8: .4byte 0x0600F000
_0806B5CC:
	cmp r0, #2
	bne _0806B5D2
	b _0806BD74
_0806B5D2:
	bl _0806C162
_0806B5D6:
	movs r0, #0
	str r0, [sp, #0x23c]
	ldr r0, [r7, #0xc]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetCapacity__C4Coop
	str r0, [sp, #0x238]
	movs r1, #0
	ldr r2, [sp, #0x228]
	cmp r2, r0
	blo _0806B5F4
	bl _0806C162
_0806B5F4:
	ldr r0, [r7, #0xc]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl GetChicken__4CoopUi
	mov sb, r0
	cmp r0, #0
	bne _0806B608
	b _0806B97A
_0806B608:
	ldr r4, _0806B658 @ =0x00004068
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0xf
	bhi _0806B626
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0806B620
	ldr r5, [sp, #0x23c]
	str r5, [r0]
_0806B620:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0806B626:
	ldr r6, [sp, #0x22c]
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #1
	adds r0, #2
	str r0, [sp, #0x228]
	lsls r0, r0, #3
	ldr r1, [sp, #0x2bc]
	strh r0, [r1]
	movs r0, #8
	str r0, [r1, #4]
	mov r0, sb
	bl GetGrowthStage__C7Chicken
	cmp r0, #0
	beq _0806B664
	cmp r0, #1
	bne _0806B664
	ldr r0, _0806B65C @ =0x0875268C
	ldr r2, [sp, #0x2bc]
	str r0, [r2, #8]
	ldr r0, _0806B660 @ =0x0875270C
	str r0, [r2, #0xc]
	b _0806B66E
	.align 2, 0
_0806B658: .4byte 0x00004068
_0806B65C: .4byte 0x0875268C
_0806B660: .4byte 0x0875270C
_0806B664:
	ldr r0, _0806B704 @ =0x0875272C
	ldr r3, [sp, #0x2bc]
	str r0, [r3, #8]
	ldr r0, _0806B708 @ =0x087527AC
	str r0, [r3, #0xc]
_0806B66E:
	ldr r4, _0806B70C @ =0x00003EA0
	adds r2, r7, r4
	ldr r0, [r2]
	cmp r0, #0xf
	bhi _0806B692
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r2, r0
	cmp r0, #0
	beq _0806B68C
	ldr r1, [sp, #0x2bc]
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [sp, #0x6c]
	str r1, [r0]
_0806B68C:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0806B692:
	mov r0, sb
	bl IsFestivalWinner__C6Animal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B6C2
	ldr r0, [r7, #0x1c]
	ldr r1, [sp, #0x228]
	subs r1, #2
	ldr r0, [r0, #0x18]
	lsls r1, r1, #6
	adds r0, r0, r1
	adds r0, #2
	ldr r4, [sp, #0x220]
	lsls r1, r4, #0x10
	movs r5, #1
	str r5, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	lsrs r1, r1, #0x10
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
_0806B6C2:
	movs r4, #0
	ldr r0, [sp, #0x228]
	lsls r0, r0, #3
	mov r8, r0
	ldr r1, [sp, #0x228]
	adds r1, #2
	str r1, [sp, #0x28c]
	add r6, sp, #0x70
	movs r2, #0xc8
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x33c]
	movs r3, #0xca
	lsls r3, r3, #1
	add r3, sp
	str r3, [sp, #0x340]
	ldr r5, [sp, #0x228]
	lsls r5, r5, #6
	mov sl, r5
	ldr r0, [sp, #0x218]
	lsls r0, r0, #0x10
	str r0, [sp, #0x370]
	movs r1, #0xcc
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x344]
	ldr r2, [sp, #0x21c]
	lsls r2, r2, #0x10
	str r2, [sp, #0x374]
	ldr r3, [sp, #0x22c]
	adds r3, #1
	str r3, [sp, #0x290]
	b _0806B738
	.align 2, 0
_0806B704: .4byte 0x0875272C
_0806B708: .4byte 0x087527AC
_0806B70C: .4byte 0x00003EA0
_0806B710:
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r5, [sp, #0x28c]
	lsls r1, r5, #6
	adds r0, r0, r1
	adds r1, r4, #5
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r2, [sp, #0x224]
	lsls r1, r2, #0x10
	movs r3, #2
	str r3, [sp]
	movs r5, #0x20
	str r5, [sp, #4]
	lsrs r1, r1, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r4, #1
_0806B738:
	mov r0, sb
	bl GetAffection__C6Animal
	movs r1, #0x19
	bl func_080D0EDA
	cmp r4, r0
	blo _0806B710
	mov r0, r8
	strh r0, [r6]
	ldr r1, [sp, #0x23c]
	lsls r4, r1, #1
	adds r4, r4, r1
	lsls r4, r4, #6
	adds r4, r4, r1
	lsls r4, r4, #2
	adds r1, r4, r7
	movs r2, #0xe6
	lsls r2, r2, #4
	adds r1, r1, r2
	movs r5, #0xc
	add r0, sp, #0x190
	strh r5, [r0]
	movs r2, #2
	ldr r3, [sp, #0x33c]
	strh r2, [r3, #2]
	ldr r0, [r0]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	mov r0, sb
	bl GetName__C6Animal
	adds r2, r0, #0
	adds r1, r4, r7
	movs r3, #0xe6
	lsls r3, r3, #4
	adds r1, r1, r3
	add r0, sp, #0x194
	strh r5, [r0]
	movs r3, #2
	ldr r5, [sp, #0x340]
	strh r3, [r5, #2]
	ldr r0, [r0]
	adds r1, #4
	str r2, [sp]
	movs r5, #0
	str r5, [sp, #4]
	movs r2, #1
	str r2, [sp, #8]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r4, r4, r7
	movs r3, #0xe6
	lsls r3, r3, #4
	adds r4, r4, r3
	adds r4, #4
	str r4, [r6, #4]
	movs r0, #3
	ldr r4, [sp, #0x22c]
	ands r0, r4
	lsls r4, r0, #1
	adds r4, r4, r0
	lsls r4, r4, #3
	movs r5, #0x80
	lsls r5, r5, #1
	adds r4, r4, r5
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, sl
	adds r0, #6
	movs r1, #0
	str r1, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	adds r1, r4, #0
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #5
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r4, r4, r3
	str r4, [r6, #8]
	ldr r4, _0806B828 @ =0x00003FA4
	adds r2, r7, r4
	ldr r1, [r2]
	cmp r1, #0xf
	bhi _0806B80C
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, #4
	adds r1, r2, r0
	cmp r1, #0
	beq _0806B806
	adds r0, r6, #0
	ldm r0!, {r3, r5, r6}
	stm r1!, {r3, r5, r6}
_0806B806:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0806B80C:
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, sl
	adds r5, r0, #0
	adds r5, #0x20
	ldr r4, [sp, #0x2b8]
	mov r0, sb
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B82C
	movs r0, #2
	b _0806B83C
	.align 2, 0
_0806B828: .4byte 0x00003FA4
_0806B82C:
	mov r0, sb
	bl IsUnhappy__C9Livestock
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r0, r1, #0x1f
_0806B83C:
	lsls r0, r0, #1
	adds r0, r4, r0
	ldrh r1, [r0]
	movs r4, #0
	str r4, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	adds r0, r5, #0
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	mov r0, sb
	bl GetAge__C6Animal
	movs r1, #0x78
	bl func_080D0EDA
	ldr r1, [r7, #0x1c]
	ldr r1, [r1, #0x18]
	add r1, sl
	adds r1, #0x34
	str r6, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, sl
	adds r0, #0x36
	ldr r2, [sp, #0x370]
	lsrs r1, r2, #0x10
	str r4, [sp]
	str r6, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	mov r0, sb
	bl GetAge__C6Animal
	adds r4, r0, #0
	ldr r0, [r7, #0xc]
	ldrb r1, [r0, #0x11]
	add r0, sp, #0x198
	strb r1, [r0]
	ldr r3, [sp, #0x344]
	mov r8, r3
	cmp r4, #0x1d
	bhi _0806B8A8
	adds r5, r4, #0
	movs r3, #0
	b _0806B8BC
_0806B8A8:
	adds r0, r4, #0
	movs r1, #0x1e
	bl __umodsi3
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1e
	bl func_080D0EDA
	adds r3, r0, #0
_0806B8BC:
	mov r4, r8
	ldrb r0, [r4]
	lsls r1, r0, #0x19
	lsrs r1, r1, #0x1b
	adds r2, r5, #0
	subs r2, #0x1e
	subs r2, r1, r2
	cmp r2, #0x1d
	bhi _0806B8D2
	adds r3, #1
	b _0806B8D4
_0806B8D2:
	subs r2, #0x1e
_0806B8D4:
	lsls r1, r0, #0x1e
	lsrs r1, r1, #0x1e
	movs r5, #3
	ands r1, r5
	movs r4, #4
	rsbs r4, r4, #0
	adds r0, r4, #0
	add r6, sp, #0x240
	ldrb r6, [r6]
	ands r0, r6
	orrs r0, r1
	subs r1, r1, r3
	ands r1, r5
	ands r0, r4
	orrs r0, r1
	add r1, sp, #0x240
	strb r0, [r1]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	ands r0, r5
	mov r3, r8
	ldrb r1, [r3]
	ands r4, r1
	orrs r4, r0
	movs r0, #0x1f
	ands r2, r0
	lsls r1, r2, #2
	subs r5, #0x80
	adds r0, r5, #0
	ands r4, r0
	orrs r4, r1
	strb r4, [r3]
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r6, [sp, #0x28c]
	lsls r5, r6, #6
	adds r0, r0, r5
	adds r0, #0x22
	lsls r2, r4, #0x1e
	lsrs r2, r2, #0x1e
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	ldr r2, [sp, #0x214]
	adds r1, r2, r1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r3, #0
	str r3, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	movs r2, #6
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #0x19
	lsrs r4, r4, #0x1b
	adds r4, #1
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	adds r1, r1, r5
	adds r1, #0x34
	str r6, [sp]
	adds r0, r4, #0
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r5
	adds r0, #0x36
	ldr r2, [sp, #0x374]
	lsrs r1, r2, #0x10
	movs r3, #0
	str r3, [sp]
	str r6, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r4, [sp, #0x290]
	str r4, [sp, #0x22c]
_0806B97A:
	ldr r5, [sp, #0x23c]
	adds r5, #1
	str r5, [sp, #0x23c]
	adds r1, r5, #0
	ldr r6, [sp, #0x238]
	cmp r1, r6
	bhs _0806B98A
	b _0806B5F4
_0806B98A:
	b _0806C162
_0806B98C:
	movs r0, #0
	str r0, [sp, #0x248]
	ldr r0, [r7, #0xc]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetCapacity__C4Barn
	str r0, [sp, #0x244]
	movs r1, #0
	ldr r2, [sp, #0x228]
	cmp r2, r0
	blo _0806B9A8
	b _0806C162
_0806B9A8:
	ldr r0, [r7, #0xc]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	bl GetCow__4BarnUi
	mov sb, r0
	cmp r0, #0
	bne _0806B9BC
	b _0806BD62
_0806B9BC:
	ldr r4, _0806BA24 @ =0x00004068
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0xf
	bhi _0806B9DA
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0806B9D4
	ldr r5, [sp, #0x248]
	str r5, [r0]
_0806B9D4:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0806B9DA:
	ldr r6, [sp, #0x230]
	lsls r4, r6, #1
	adds r0, r4, r6
	lsls r0, r0, #1
	adds r0, #2
	str r0, [sp, #0x228]
	lsls r0, r0, #3
	ldr r1, [sp, #0x2bc]
	strh r0, [r1]
	movs r0, #8
	str r0, [r1, #4]
	mov r0, sb
	bl GetGrowthStage__C3Cow
	cmp r0, #1
	beq _0806BA38
	cmp r0, #1
	blo _0806BA4C
	cmp r0, #2
	bne _0806BA4C
	ldr r0, _0806BA28 @ =0x08751B4C
	ldr r2, [sp, #0x2bc]
	str r0, [r2, #8]
	ldr r0, _0806BA2C @ =0x08751BCC
	str r0, [r2, #0xc]
	mov r0, sb
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BA56
	ldr r0, _0806BA30 @ =0x08751C8C
	ldr r3, [sp, #0x2bc]
	str r0, [r3, #8]
	ldr r0, _0806BA34 @ =0x08751D0C
	str r0, [r3, #0xc]
	b _0806BA56
	.align 2, 0
_0806BA24: .4byte 0x00004068
_0806BA28: .4byte 0x08751B4C
_0806BA2C: .4byte 0x08751BCC
_0806BA30: .4byte 0x08751C8C
_0806BA34: .4byte 0x08751D0C
_0806BA38:
	ldr r0, _0806BA44 @ =0x08751BEC
	ldr r5, [sp, #0x2bc]
	str r0, [r5, #8]
	ldr r0, _0806BA48 @ =0x08751C6C
	str r0, [r5, #0xc]
	b _0806BA56
	.align 2, 0
_0806BA44: .4byte 0x08751BEC
_0806BA48: .4byte 0x08751C6C
_0806BA4C:
	ldr r0, _0806BAEC @ =0x08751D2C
	ldr r6, [sp, #0x2bc]
	str r0, [r6, #8]
	ldr r0, _0806BAF0 @ =0x08751DAC
	str r0, [r6, #0xc]
_0806BA56:
	ldr r0, _0806BAF4 @ =0x00003EA0
	adds r2, r7, r0
	ldr r0, [r2]
	cmp r0, #0xf
	bhi _0806BA7A
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r2, r0
	cmp r0, #0
	beq _0806BA74
	ldr r1, [sp, #0x2bc]
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [sp, #0x6c]
	str r1, [r0]
_0806BA74:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0806BA7A:
	mov r0, sb
	bl IsFestivalWinner__C6Animal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BAAA
	ldr r0, [r7, #0x1c]
	ldr r1, [sp, #0x228]
	subs r1, #2
	ldr r0, [r0, #0x18]
	lsls r1, r1, #6
	adds r0, r0, r1
	adds r0, #2
	ldr r2, [sp, #0x220]
	lsls r1, r2, #0x10
	movs r3, #1
	str r3, [sp]
	movs r5, #0x20
	str r5, [sp, #4]
	lsrs r1, r1, #0x10
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
_0806BAAA:
	movs r5, #0
	ldr r6, [sp, #0x228]
	lsls r6, r6, #3
	mov r8, r6
	ldr r0, [sp, #0x228]
	adds r0, #2
	str r0, [sp, #0x28c]
	add r6, sp, #0x70
	ldr r1, [sp, #0x228]
	lsls r1, r1, #6
	mov sl, r1
	ldr r2, [sp, #0x218]
	lsls r2, r2, #0x10
	str r2, [sp, #0x370]
	ldr r3, [sp, #0x21c]
	lsls r3, r3, #0x10
	str r3, [sp, #0x374]
	movs r0, #0xce
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x348]
	movs r1, #0xd0
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x34c]
	movs r2, #0xd2
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x350]
	ldr r3, [sp, #0x230]
	adds r3, #1
	str r3, [sp, #0x294]
	b _0806BB20
	.align 2, 0
_0806BAEC: .4byte 0x08751D2C
_0806BAF0: .4byte 0x08751DAC
_0806BAF4: .4byte 0x00003EA0
_0806BAF8:
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r2, [sp, #0x28c]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r1, r5, #5
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r3, [sp, #0x224]
	lsls r1, r3, #0x10
	movs r2, #2
	str r2, [sp]
	movs r3, #0x20
	str r3, [sp, #4]
	lsrs r1, r1, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #1
_0806BB20:
	mov r0, sb
	bl GetAffection__C6Animal
	movs r1, #0x19
	bl func_080D0EDA
	cmp r5, r0
	blo _0806BAF8
	mov r5, r8
	strh r5, [r6]
	ldr r0, [sp, #0x230]
	adds r4, r4, r0
	lsls r4, r4, #6
	adds r4, r4, r0
	lsls r4, r4, #2
	adds r1, r4, r7
	movs r2, #0xe6
	lsls r2, r2, #4
	adds r1, r1, r2
	movs r5, #0xc
	add r0, sp, #0x19c
	strh r5, [r0]
	movs r2, #2
	ldr r3, [sp, #0x348]
	strh r2, [r3, #2]
	ldr r0, [r0]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	mov r0, sb
	bl GetName__C6Animal
	adds r2, r0, #0
	adds r1, r4, r7
	movs r3, #0xe6
	lsls r3, r3, #4
	adds r1, r1, r3
	add r0, sp, #0x1a0
	strh r5, [r0]
	movs r3, #2
	ldr r5, [sp, #0x34c]
	strh r3, [r5, #2]
	ldr r0, [r0]
	adds r1, #4
	str r2, [sp]
	movs r5, #0
	str r5, [sp, #4]
	movs r2, #1
	str r2, [sp, #8]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r4, r4, r7
	movs r3, #0xe6
	lsls r3, r3, #4
	adds r4, r4, r3
	adds r4, #4
	str r4, [r6, #4]
	movs r0, #3
	ldr r4, [sp, #0x230]
	ands r0, r4
	lsls r4, r0, #1
	adds r4, r4, r0
	lsls r4, r4, #3
	movs r5, #0x80
	lsls r5, r5, #1
	adds r4, r4, r5
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, sl
	adds r0, #6
	movs r1, #0
	str r1, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	adds r1, r4, #0
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #5
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r4, r4, r3
	str r4, [r6, #8]
	ldr r4, _0806BC10 @ =0x00003FA4
	adds r2, r7, r4
	ldr r1, [r2]
	cmp r1, #0xf
	bhi _0806BBF2
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, #4
	adds r1, r2, r0
	cmp r1, #0
	beq _0806BBEC
	adds r0, r6, #0
	ldm r0!, {r3, r5, r6}
	stm r1!, {r3, r5, r6}
_0806BBEC:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0806BBF2:
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, sl
	adds r5, r0, #0
	adds r5, #0x20
	ldr r4, [sp, #0x2b8]
	mov r0, sb
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BC14
	movs r0, #2
	b _0806BC24
	.align 2, 0
_0806BC10: .4byte 0x00003FA4
_0806BC14:
	mov r0, sb
	bl IsUnhappy__C9Livestock
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r0, r1, #0x1f
_0806BC24:
	lsls r0, r0, #1
	adds r0, r4, r0
	ldrh r1, [r0]
	movs r4, #0
	str r4, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	adds r0, r5, #0
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	mov r0, sb
	bl GetAge__C6Animal
	movs r1, #0x78
	bl func_080D0EDA
	ldr r1, [r7, #0x1c]
	ldr r1, [r1, #0x18]
	add r1, sl
	adds r1, #0x34
	str r6, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, sl
	adds r0, #0x36
	ldr r2, [sp, #0x370]
	lsrs r1, r2, #0x10
	str r4, [sp]
	str r6, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	mov r0, sb
	bl GetAge__C6Animal
	adds r4, r0, #0
	ldr r0, [r7, #0xc]
	ldrb r1, [r0, #0x11]
	add r0, sp, #0x1a4
	strb r1, [r0]
	ldr r3, [sp, #0x350]
	mov r8, r3
	cmp r4, #0x1d
	bhi _0806BC90
	adds r5, r4, #0
	movs r3, #0
	b _0806BCA4
_0806BC90:
	adds r0, r4, #0
	movs r1, #0x1e
	bl __umodsi3
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1e
	bl func_080D0EDA
	adds r3, r0, #0
_0806BCA4:
	mov r4, r8
	ldrb r0, [r4]
	lsls r1, r0, #0x19
	lsrs r1, r1, #0x1b
	adds r2, r5, #0
	subs r2, #0x1e
	subs r2, r1, r2
	cmp r2, #0x1d
	bhi _0806BCBA
	adds r3, #1
	b _0806BCBC
_0806BCBA:
	subs r2, #0x1e
_0806BCBC:
	lsls r1, r0, #0x1e
	lsrs r1, r1, #0x1e
	movs r5, #3
	ands r1, r5
	movs r4, #4
	rsbs r4, r4, #0
	adds r0, r4, #0
	add r6, sp, #0x24c
	ldrb r6, [r6]
	ands r0, r6
	orrs r0, r1
	subs r1, r1, r3
	ands r1, r5
	ands r0, r4
	orrs r0, r1
	add r1, sp, #0x24c
	strb r0, [r1]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	ands r0, r5
	mov r3, r8
	ldrb r1, [r3]
	ands r4, r1
	orrs r4, r0
	movs r0, #0x1f
	ands r2, r0
	lsls r1, r2, #2
	subs r5, #0x80
	adds r0, r5, #0
	ands r4, r0
	orrs r4, r1
	strb r4, [r3]
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r6, [sp, #0x28c]
	lsls r5, r6, #6
	adds r0, r0, r5
	adds r0, #0x22
	lsls r2, r4, #0x1e
	lsrs r2, r2, #0x1e
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	ldr r2, [sp, #0x214]
	adds r1, r2, r1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r3, #0
	str r3, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	movs r2, #6
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #0x19
	lsrs r4, r4, #0x1b
	adds r4, #1
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	adds r1, r1, r5
	adds r1, #0x34
	str r6, [sp]
	adds r0, r4, #0
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r5
	adds r0, #0x36
	ldr r2, [sp, #0x374]
	lsrs r1, r2, #0x10
	movs r3, #0
	str r3, [sp]
	str r6, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r4, [sp, #0x294]
	str r4, [sp, #0x230]
_0806BD62:
	ldr r5, [sp, #0x248]
	adds r5, #1
	str r5, [sp, #0x248]
	adds r1, r5, #0
	ldr r6, [sp, #0x244]
	cmp r1, r6
	bhs _0806BD72
	b _0806B9A8
_0806BD72:
	b _0806C162
_0806BD74:
	movs r0, #0
	str r0, [sp, #0x254]
	ldr r0, [r7, #0xc]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetCapacity__C4Barn
	str r0, [sp, #0x250]
	movs r1, #0
	ldr r2, [sp, #0x228]
	cmp r2, r0
	blo _0806BD90
	b _0806C162
_0806BD90:
	ldr r0, [r7, #0xc]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	bl GetSheep__4BarnUi
	mov sb, r0
	cmp r0, #0
	bne _0806BDA4
	b _0806C152
_0806BDA4:
	ldr r4, _0806BE20 @ =0x00004068
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0xf
	bhi _0806BDC2
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0806BDBC
	ldr r5, [sp, #0x254]
	str r5, [r0]
_0806BDBC:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0806BDC2:
	ldr r6, [sp, #0x234]
	lsls r4, r6, #1
	adds r0, r4, r6
	lsls r0, r0, #1
	adds r0, #2
	str r0, [sp, #0x228]
	lsls r0, r0, #3
	ldr r1, [sp, #0x2bc]
	strh r0, [r1]
	movs r0, #8
	str r0, [r1, #4]
	mov r0, sb
	bl GetGrowthStage__C5Sheep
	cmp r0, #0
	beq _0806BE3C
	cmp r0, #1
	bne _0806BE3C
	ldr r0, _0806BE24 @ =0x0875320C
	ldr r2, [sp, #0x2bc]
	str r0, [r2, #8]
	ldr r0, _0806BE28 @ =0x0875328C
	str r0, [r2, #0xc]
	mov r0, sb
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BE06
	ldr r0, _0806BE2C @ =0x0875334C
	ldr r3, [sp, #0x2bc]
	str r0, [r3, #8]
	ldr r0, _0806BE30 @ =0x087533CC
	str r0, [r3, #0xc]
_0806BE06:
	mov r0, sb
	bl IsSheared__C5Sheep
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BE46
	ldr r0, _0806BE34 @ =0x087532AC
	ldr r5, [sp, #0x2bc]
	str r0, [r5, #8]
	ldr r0, _0806BE38 @ =0x0875332C
	str r0, [r5, #0xc]
	b _0806BE46
	.align 2, 0
_0806BE20: .4byte 0x00004068
_0806BE24: .4byte 0x0875320C
_0806BE28: .4byte 0x0875328C
_0806BE2C: .4byte 0x0875334C
_0806BE30: .4byte 0x087533CC
_0806BE34: .4byte 0x087532AC
_0806BE38: .4byte 0x0875332C
_0806BE3C:
	ldr r0, _0806BEDC @ =0x087533EC
	ldr r6, [sp, #0x2bc]
	str r0, [r6, #8]
	ldr r0, _0806BEE0 @ =0x0875346C
	str r0, [r6, #0xc]
_0806BE46:
	ldr r0, _0806BEE4 @ =0x00003EA0
	adds r2, r7, r0
	ldr r0, [r2]
	cmp r0, #0xf
	bhi _0806BE6A
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r2, r0
	cmp r0, #0
	beq _0806BE64
	ldr r1, [sp, #0x2bc]
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [sp, #0x6c]
	str r1, [r0]
_0806BE64:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0806BE6A:
	mov r0, sb
	bl IsFestivalWinner__C6Animal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BE9A
	ldr r0, [r7, #0x1c]
	ldr r1, [sp, #0x228]
	subs r1, #2
	ldr r0, [r0, #0x18]
	lsls r1, r1, #6
	adds r0, r0, r1
	adds r0, #2
	ldr r2, [sp, #0x220]
	lsls r1, r2, #0x10
	movs r3, #1
	str r3, [sp]
	movs r5, #0x20
	str r5, [sp, #4]
	lsrs r1, r1, #0x10
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
_0806BE9A:
	movs r5, #0
	ldr r6, [sp, #0x228]
	lsls r6, r6, #3
	mov r8, r6
	ldr r0, [sp, #0x228]
	adds r0, #2
	str r0, [sp, #0x28c]
	add r6, sp, #0x70
	ldr r1, [sp, #0x228]
	lsls r1, r1, #6
	mov sl, r1
	ldr r2, [sp, #0x218]
	lsls r2, r2, #0x10
	str r2, [sp, #0x370]
	ldr r3, [sp, #0x21c]
	lsls r3, r3, #0x10
	str r3, [sp, #0x374]
	movs r0, #0xd4
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x354]
	movs r1, #0xd6
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x358]
	movs r2, #0xd8
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x35c]
	ldr r3, [sp, #0x234]
	adds r3, #1
	str r3, [sp, #0x298]
	b _0806BF10
	.align 2, 0
_0806BEDC: .4byte 0x087533EC
_0806BEE0: .4byte 0x0875346C
_0806BEE4: .4byte 0x00003EA0
_0806BEE8:
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r2, [sp, #0x28c]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r1, r5, #5
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r3, [sp, #0x224]
	lsls r1, r3, #0x10
	movs r2, #2
	str r2, [sp]
	movs r3, #0x20
	str r3, [sp, #4]
	lsrs r1, r1, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r5, #1
_0806BF10:
	mov r0, sb
	bl GetAffection__C6Animal
	movs r1, #0x19
	bl func_080D0EDA
	cmp r5, r0
	blo _0806BEE8
	mov r5, r8
	strh r5, [r6]
	ldr r0, [sp, #0x234]
	adds r4, r4, r0
	lsls r4, r4, #6
	adds r4, r4, r0
	lsls r4, r4, #2
	adds r1, r4, r7
	movs r2, #0xe6
	lsls r2, r2, #4
	adds r1, r1, r2
	movs r5, #0xc
	add r0, sp, #0x1a8
	strh r5, [r0]
	movs r2, #2
	ldr r3, [sp, #0x354]
	strh r2, [r3, #2]
	ldr r0, [r0]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	mov r0, sb
	bl GetName__C6Animal
	adds r2, r0, #0
	adds r1, r4, r7
	movs r3, #0xe6
	lsls r3, r3, #4
	adds r1, r1, r3
	add r0, sp, #0x1ac
	strh r5, [r0]
	movs r3, #2
	ldr r5, [sp, #0x358]
	strh r3, [r5, #2]
	ldr r0, [r0]
	adds r1, #4
	str r2, [sp]
	movs r5, #0
	str r5, [sp, #4]
	movs r2, #1
	str r2, [sp, #8]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r4, r4, r7
	movs r3, #0xe6
	lsls r3, r3, #4
	adds r4, r4, r3
	adds r4, #4
	str r4, [r6, #4]
	movs r0, #3
	ldr r4, [sp, #0x234]
	ands r0, r4
	lsls r4, r0, #1
	adds r4, r4, r0
	lsls r4, r4, #3
	movs r5, #0x80
	lsls r5, r5, #1
	adds r4, r4, r5
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, sl
	adds r0, #6
	movs r1, #0
	str r1, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	adds r1, r4, #0
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #5
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r4, r4, r3
	str r4, [r6, #8]
	ldr r4, _0806C000 @ =0x00003FA4
	adds r2, r7, r4
	ldr r1, [r2]
	cmp r1, #0xf
	bhi _0806BFE2
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, #4
	adds r1, r2, r0
	cmp r1, #0
	beq _0806BFDC
	adds r0, r6, #0
	ldm r0!, {r3, r5, r6}
	stm r1!, {r3, r5, r6}
_0806BFDC:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_0806BFE2:
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, sl
	adds r5, r0, #0
	adds r5, #0x20
	ldr r4, [sp, #0x2b8]
	mov r0, sb
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806C004
	movs r0, #2
	b _0806C014
	.align 2, 0
_0806C000: .4byte 0x00003FA4
_0806C004:
	mov r0, sb
	bl IsUnhappy__C9Livestock
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r0, r1, #0x1f
_0806C014:
	lsls r0, r0, #1
	adds r0, r4, r0
	ldrh r1, [r0]
	movs r4, #0
	str r4, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	adds r0, r5, #0
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	mov r0, sb
	bl GetAge__C6Animal
	movs r1, #0x78
	bl func_080D0EDA
	ldr r1, [r7, #0x1c]
	ldr r1, [r1, #0x18]
	add r1, sl
	adds r1, #0x34
	str r6, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, sl
	adds r0, #0x36
	ldr r2, [sp, #0x370]
	lsrs r1, r2, #0x10
	str r4, [sp]
	str r6, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	mov r0, sb
	bl GetAge__C6Animal
	adds r4, r0, #0
	ldr r0, [r7, #0xc]
	ldrb r1, [r0, #0x11]
	add r0, sp, #0x1b0
	strb r1, [r0]
	ldr r3, [sp, #0x35c]
	mov r8, r3
	cmp r4, #0x1d
	bhi _0806C080
	adds r5, r4, #0
	movs r3, #0
	b _0806C094
_0806C080:
	adds r0, r4, #0
	movs r1, #0x1e
	bl __umodsi3
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1e
	bl func_080D0EDA
	adds r3, r0, #0
_0806C094:
	mov r4, r8
	ldrb r0, [r4]
	lsls r1, r0, #0x19
	lsrs r1, r1, #0x1b
	adds r2, r5, #0
	subs r2, #0x1e
	subs r2, r1, r2
	cmp r2, #0x1d
	bhi _0806C0AA
	adds r3, #1
	b _0806C0AC
_0806C0AA:
	subs r2, #0x1e
_0806C0AC:
	lsls r1, r0, #0x1e
	lsrs r1, r1, #0x1e
	movs r5, #3
	ands r1, r5
	movs r4, #4
	rsbs r4, r4, #0
	adds r0, r4, #0
	add r6, sp, #0x258
	ldrb r6, [r6]
	ands r0, r6
	orrs r0, r1
	subs r1, r1, r3
	ands r1, r5
	ands r0, r4
	orrs r0, r1
	add r1, sp, #0x258
	strb r0, [r1]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	ands r0, r5
	mov r3, r8
	ldrb r1, [r3]
	ands r4, r1
	orrs r4, r0
	movs r0, #0x1f
	ands r2, r0
	lsls r1, r2, #2
	subs r5, #0x80
	adds r0, r5, #0
	ands r4, r0
	orrs r4, r1
	strb r4, [r3]
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r6, [sp, #0x28c]
	lsls r5, r6, #6
	adds r0, r0, r5
	adds r0, #0x22
	lsls r2, r4, #0x1e
	lsrs r2, r2, #0x1e
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	ldr r2, [sp, #0x214]
	adds r1, r2, r1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r3, #0
	str r3, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	movs r2, #6
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #0x19
	lsrs r4, r4, #0x1b
	adds r4, #1
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	adds r1, r1, r5
	adds r1, #0x34
	str r6, [sp]
	adds r0, r4, #0
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r5
	adds r0, #0x36
	ldr r2, [sp, #0x374]
	lsrs r1, r2, #0x10
	movs r3, #0
	str r3, [sp]
	str r6, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r4, [sp, #0x298]
	str r4, [sp, #0x234]
_0806C152:
	ldr r5, [sp, #0x254]
	adds r5, #1
	str r5, [sp, #0x254]
	adds r1, r5, #0
	ldr r6, [sp, #0x250]
	cmp r1, r6
	bhs _0806C162
	b _0806BD90
_0806C162:
	ldr r0, [r7, #0x1c]
	ldr r1, [sp, #0x228]
	adds r1, #6
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r0, [r7, #0x1c]
	ldrh r1, [r7, #0x20]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	bl func_08075C88
	movs r1, #0xe8
	ldr r0, [sp, #0x2d4]
	strh r1, [r0]
	movs r0, #8
	ldr r2, [sp, #0x2d8]
	strh r0, [r2]
	ldr r3, [sp, #0x2fc]
	strh r1, [r3]
	movs r0, #0x90
	ldr r4, [sp, #0x300]
	strh r0, [r4]
	ldr r5, [sp, #0x31c]
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r6, [sp, #0x320]
	ldr r0, [r6]
	adds r0, r0, r2
	ldrh r2, [r0]
	ldr r0, [sp, #0x2c4]
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r7, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x8c]
	ldr r1, _0806C204 @ =0x000040B8
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	ldr r0, [sp, #0x8c]
	movs r3, #0
	cmp r0, #0
	beq _0806C1CE
	ldr r6, [sp, #0x2c8]
	ldrh r3, [r6, #4]
_0806C1CE:
	str r4, [sp, #0x380]
	lsls r2, r2, #5
	ldr r0, _0806C208 @ =0x05000200
	adds r2, r2, r0
	add r0, sp, #0x60
	adds r1, r5, #0
	bl func_08008F0C
	ldr r1, [sp, #0x2bc]
	mov sl, r1
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _0806C20C
	cmp r1, #0
	beq _0806C1FA
	adds r0, r1, #0
	ldr r1, [sp, #0x2bc]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806C1FA:
	ldr r5, [sp, #0x380]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0806C2E4
	.align 2, 0
_0806C204: .4byte 0x000040B8
_0806C208: .4byte 0x05000200
_0806C20C:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x1b8
	str r0, [r1]
	ldr r6, [sp, #0x380]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x1b4
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1b4
	cmp r4, r0
	bhs _0806C22E
	adds r1, r2, #0
_0806C22E:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806C24C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806C250
	mov r0, sb
	bl func_080D3BC0
	b _0806C250
_0806C24C:
	movs r0, #0
	mov sb, r0
_0806C250:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r3, [sp, #0x380]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806C276
_0806C25E:
	cmp r3, #0
	beq _0806C26E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806C26E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806C25E
_0806C276:
	adds r5, r3, #0
	add r0, sp, #0x1b8
	ldr r0, [r0]
	cmp r0, #1
	bne _0806C294
	cmp r5, #0
	beq _0806C290
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806C290:
	adds r5, #0x10
	b _0806C2BC
_0806C294:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806C2BA
_0806C29C:
	cmp r2, #0
	beq _0806C2AC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806C2AC:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _0806C29C
_0806C2BA:
	adds r5, r2, #0
_0806C2BC:
	ldr r6, [sp, #0x380]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806C2CE
_0806C2C8:
	adds r1, #0x10
	cmp r1, r2
	bne _0806C2C8
_0806C2CE:
	cmp r0, #0
	beq _0806C2D6
	bl free
_0806C2D6:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r1, [sp, #0x384]
	ldr r2, [sp, #0x380]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0806C2E4:
	ldr r3, [sp, #0x2e0]
	ldr r1, [r3]
	ldr r3, [r1]
	ldr r4, [sp, #0x2e0]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r5, [sp, #0x2e4]
	ldr r0, [r5]
	adds r0, r0, r2
	ldrh r2, [r0]
	ldr r0, [sp, #0x2d0]
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r7, #0
	bl func_08008910
	adds r4, r0, #0
	ldr r6, [sp, #0x2e8]
	ldr r5, [r6]
	ldr r1, _0806C35C @ =0x000040C8
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	adds r2, r0, #0
	ldr r0, [r6]
	movs r3, #0
	cmp r0, #0
	beq _0806C322
	ldrh r3, [r6, #4]
_0806C322:
	str r4, [sp, #0x380]
	lsls r2, r2, #5
	ldr r4, _0806C360 @ =0x05000200
	adds r2, r2, r4
	add r0, sp, #0x60
	adds r1, r5, #0
	bl func_08008F0C
	ldr r5, [sp, #0x2bc]
	mov sb, r5
	ldr r6, [sp, #0x380]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806C364
	cmp r1, #0
	beq _0806C350
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806C350:
	ldr r5, [sp, #0x380]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0806C43C
	.align 2, 0
_0806C35C: .4byte 0x000040C8
_0806C360: .4byte 0x05000200
_0806C364:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x1c0
	str r0, [r1]
	ldr r6, [sp, #0x380]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x1bc
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1bc
	cmp r4, r0
	bhs _0806C386
	adds r1, r2, #0
_0806C386:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806C3A4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _0806C3A8
	mov r0, sl
	bl func_080D3BC0
	b _0806C3A8
_0806C3A4:
	movs r0, #0
	mov sl, r0
_0806C3A8:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r3, [sp, #0x380]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _0806C3CE
_0806C3B6:
	cmp r3, #0
	beq _0806C3C6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806C3C6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0806C3B6
_0806C3CE:
	adds r5, r3, #0
	add r0, sp, #0x1c0
	ldr r0, [r0]
	cmp r0, #1
	bne _0806C3EC
	cmp r5, #0
	beq _0806C3E8
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806C3E8:
	adds r5, #0x10
	b _0806C414
_0806C3EC:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806C412
_0806C3F4:
	cmp r2, #0
	beq _0806C404
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0806C404:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _0806C3F4
_0806C412:
	adds r5, r2, #0
_0806C414:
	ldr r6, [sp, #0x380]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806C426
_0806C420:
	adds r1, #0x10
	cmp r1, r2
	bne _0806C420
_0806C426:
	cmp r0, #0
	beq _0806C42E
	bl free
_0806C42E:
	ldr r0, [sp, #0x384]
	add r0, sl
	ldr r1, [sp, #0x384]
	ldr r2, [sp, #0x380]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0806C43C:
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #0x10
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0806C514 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0x60]
	ldr r1, _0806C518 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x60]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r3, #0
	str r3, [sp, #0x25c]

	non_word_aligned_thumb_func_start sub_0806C492
sub_0806C492: @ 0x0806C492
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	adds r0, r7, #0
	bl func_080088DC
	mov r8, r0
	adds r0, r7, #0
	bl func_08008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_0800894C
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r2, r7, r1
	ldr r3, _0806C51C @ =0x00004170
	adds r1, r7, r3
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	adds r0, r2, #0
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl func_08050D3C
	mov r8, r0
	ldr r0, [sp, #0x60]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r3, r0, #0x1f
	ldr r4, [sp, #0x25c]
	cmp r4, #0
	beq _0806C520
	cmp r3, #0
	bne _0806C520
	ldr r1, [r7, #8]
	ldr r0, [r7, #0x18]
	str r0, [r1, #0xc]
	ldr r1, [r7, #8]
	str r3, [r7, #8]
	str r1, [sp, #0x64]
	add r2, sp, #0x1c4
	adds r0, r2, #0
	ldr r5, [sp, #0x2c0]
	str r5, [r0]
	str r1, [r2, #4]
	str r3, [r5]
	ldr r6, [sp, #0x20c]
	str r1, [r6]
	b _0806C562
	.align 2, 0
_0806C514: .4byte vtable_unk_080E5B80
_0806C518: .4byte 0x00000889
_0806C51C: .4byte 0x00004170
_0806C520:
	ldr r1, _0806C538 @ =0x00004068
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #1
	beq _0806C58E
	cmp r0, #1
	blo _0806C53C
	cmp r0, #2
	beq _0806C592
	movs r6, #0x78
	b _0806C594
	.align 2, 0
_0806C538: .4byte 0x00004068
_0806C53C:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	movs r1, #1
	rsbs r1, r1, #0
	str r1, [r7, #0x18]
	ldr r0, [r7, #8]
	str r1, [r0, #0xc]
	ldr r1, [r7, #8]
	movs r3, #0
	str r3, [r7, #8]
	str r1, [sp, #0x64]
	add r2, sp, #0x1cc
	adds r0, r2, #0
	ldr r4, [sp, #0x2c0]
	str r4, [r0]
	str r1, [r2, #4]
	str r3, [r4]
	ldr r5, [sp, #0x20c]
	str r1, [r5]
_0806C562:
	ldr r1, [sp, #0x64]
	cmp r1, #0
	beq _0806C574
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0806C574:
	ldr r1, [sp, #0x60]
	cmp r1, #0
	bne _0806C57E
	bl sub_0806D8B2
_0806C57E:
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
	bl sub_0806D8B2
_0806C58E:
	movs r6, #0x18
	b _0806C594
_0806C592:
	movs r6, #0x48
_0806C594:
	ldr r1, _0806C5AC @ =0x00004174
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #9
	bls _0806C5A2
	bl _0806CDEA
_0806C5A2:
	lsls r0, r0, #2
	ldr r1, _0806C5B0 @ =_0806C5B4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806C5AC: .4byte 0x00004174
_0806C5B0: .4byte _0806C5B4
_0806C5B4: @ jump table
	.4byte _0806C5DC @ case 0
	.4byte _0806C8B0 @ case 1
	.4byte _0806CA7C @ case 2
	.4byte _0806CAA4 @ case 3
	.4byte _0806CB98 @ case 4
	.4byte _0806CC44 @ case 5
	.4byte _0806CD38 @ case 6
	.4byte _0806CD58 @ case 7
	.4byte _0806CDA4 @ case 8
	.4byte _0806CDEA @ case 9
_0806C5DC:
	movs r2, #0x98
	lsls r2, r2, #1
	adds r4, r7, r2
	ldr r5, [r4]
	cmp r5, #0
	beq _0806C628
	cmp r5, #0
	ble _0806C602
	ldrh r0, [r7, #0x20]
	adds r0, #4
	movs r1, #0
	strh r0, [r7, #0x20]
	ldr r0, [r4]
	adds r0, #1
	str r0, [r4]
	cmp r0, #0xc
	bne _0806C61A
	str r1, [r4]
	b _0806C61A
_0806C602:
	ldrh r0, [r7, #0x20]
	subs r0, #4
	movs r2, #0
	strh r0, [r7, #0x20]
	ldr r1, [r4]
	subs r1, #1
	str r1, [r4]
	movs r0, #0xc
	rsbs r0, r0, #0
	cmp r1, r0
	bne _0806C61A
	str r2, [r4]
_0806C61A:
	ldr r0, [r7, #0x1c]
	movs r3, #0x20
	ldrsh r1, [r7, r3]
	bl func_08075C88
	bl _0806CDEA
_0806C628:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0806C68C
	adds r1, r7, #0
	adds r1, #0xf8
	ldr r0, [r1]
	cmp r0, #0x18
	ble _0806C664
	cmp r0, #0x48
	beq _0806C64E
	cmp r0, #0x48
	ble _0806C656
	cmp r0, #0x78
	beq _0806C652
	b _0806C656
_0806C64E:
	movs r0, #0x18
	b _0806C654
_0806C652:
	movs r0, #0x48
_0806C654:
	str r0, [r1]
_0806C656:
	ldr r4, _0806C660 @ =0x000040AC
	adds r0, r7, r4
	ldr r1, [r0]
	subs r1, #1
	b _0806C6CC
	.align 2, 0
_0806C660: .4byte 0x000040AC
_0806C664:
	ldrh r1, [r7, #0x20]
	movs r6, #0x20
	ldrsh r0, [r7, r6]
	cmp r0, #0
	bgt _0806C672
	strh r5, [r7, #0x20]
	b _0806C714
_0806C672:
	subs r0, r1, #4
	strh r0, [r7, #0x20]
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
	ldr r0, _0806C688 @ =0x000040AC
	adds r1, r7, r0
	ldr r0, [r1]
	subs r0, #1
	b _0806C708
	.align 2, 0
_0806C688: .4byte 0x000040AC
_0806C68C:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0806C728
	ldr r0, [r7, #0x1c]
	movs r3, #0xe
	ldrsh r0, [r0, r3]
	subs r0, #0xa0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r1, r7, #0
	adds r1, #0xf8
	ldr r0, [r1]
	cmp r0, r6
	bge _0806C6E4
	cmp r0, #0x48
	beq _0806C6C0
	cmp r0, #0x48
	bgt _0806C6C4
	cmp r0, #0x18
	bne _0806C6C4
	movs r0, #0x48
	b _0806C6C2
_0806C6C0:
	movs r0, #0x78
_0806C6C2:
	str r0, [r1]
_0806C6C4:
	ldr r4, _0806C6DC @ =0x000040AC
	adds r0, r7, r4
	ldr r1, [r0]
	adds r1, #1
_0806C6CC:
	str r1, [r0]
	ldr r5, _0806C6E0 @ =0x00004170
	adds r0, r7, r5
	movs r1, #0xcb
	bl func_08008B6C
	b _0806C714
	.align 2, 0
_0806C6DC: .4byte 0x000040AC
_0806C6E0: .4byte 0x00004170
_0806C6E4:
	ldrh r2, [r7, #0x20]
	movs r6, #0x20
	ldrsh r1, [r7, r6]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	blt _0806C6F6
	strh r3, [r7, #0x20]
	b _0806C714
_0806C6F6:
	adds r0, r2, #4
	strh r0, [r7, #0x20]
	ldr r0, [r4]
	adds r0, #1
	str r0, [r4]
	ldr r0, _0806C720 @ =0x000040AC
	adds r1, r7, r0
	ldr r0, [r1]
	adds r0, #1
_0806C708:
	str r0, [r1]
	ldr r1, _0806C724 @ =0x00004170
	adds r0, r7, r1
	movs r1, #0xcb
	bl func_08008B6C
_0806C714:
	ldr r0, [r7, #0x1c]
	movs r2, #0x20
	ldrsh r1, [r7, r2]
	bl func_08075C88
	b _0806CDEA
	.align 2, 0
_0806C720: .4byte 0x000040AC
_0806C724: .4byte 0x00004170
_0806C728:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0806C738
	b _0806C888
_0806C738:
	ldr r0, [r7, #0x10]
	cmp r0, #1
	beq _0806C7A0
	cmp r0, #1
	bgt _0806C748
	cmp r0, #0
	beq _0806C74E
	b _0806C870
_0806C748:
	cmp r0, #2
	beq _0806C800
	b _0806C870
_0806C74E:
	ldr r0, [r7, #0xc]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	ldr r4, _0806C780 @ =0x000040AC
	adds r1, r7, r4
	ldr r1, [r1]
	lsls r1, r1, #2
	adds r1, r1, r7
	ldr r5, _0806C784 @ =0x0000406C
	adds r1, r1, r5
	ldr r1, [r1]
	bl GetChicken__4CoopUi
	adds r4, r0, #0
	cmp r4, #0
	bne _0806C772
	b _0806C870
_0806C772:
	bl GetGrowthStage__C7Chicken
	cmp r0, #0
	bne _0806C788
	movs r1, #2
	b _0806C798
	.align 2, 0
_0806C780: .4byte 0x000040AC
_0806C784: .4byte 0x0000406C
_0806C788:
	adds r0, r4, #0
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	movs r1, #1
	cmp r0, #0
	beq _0806C798
	movs r1, #3
_0806C798:
	movs r6, #0x9c
	lsls r6, r6, #1
	adds r0, r7, r6
	b _0806C86E
_0806C7A0:
	ldr r0, [r7, #0xc]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r2, _0806C7D0 @ =0x000040AC
	adds r1, r7, r2
	ldr r1, [r1]
	lsls r1, r1, #2
	adds r1, r1, r7
	ldr r3, _0806C7D4 @ =0x0000406C
	adds r1, r1, r3
	ldr r1, [r1]
	bl GetCow__4BarnUi
	adds r4, r0, #0
	cmp r4, #0
	beq _0806C870
	bl GetGrowthStage__C3Cow
	cmp r0, #1
	bhi _0806C7D8
	movs r1, #2
	b _0806C7F8
	.align 2, 0
_0806C7D0: .4byte 0x000040AC
_0806C7D4: .4byte 0x0000406C
_0806C7D8:
	adds r0, r4, #0
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806C7E8
	movs r1, #3
	b _0806C7F8
_0806C7E8:
	adds r0, r4, #0
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	movs r1, #1
	cmp r0, #0
	beq _0806C7F8
	movs r1, #4
_0806C7F8:
	movs r4, #0x9c
	lsls r4, r4, #1
	adds r0, r7, r4
	b _0806C86E
_0806C800:
	ldr r0, [r7, #0xc]
	movs r5, #0xbe
	lsls r5, r5, #3
	adds r0, r0, r5
	ldr r6, _0806C830 @ =0x000040AC
	adds r1, r7, r6
	ldr r1, [r1]
	lsls r1, r1, #2
	adds r1, r1, r7
	ldr r2, _0806C834 @ =0x0000406C
	adds r1, r1, r2
	ldr r1, [r1]
	bl GetSheep__4BarnUi
	adds r4, r0, #0
	cmp r4, #0
	beq _0806C870
	bl GetGrowthStage__C5Sheep
	cmp r0, #0
	bne _0806C838
	movs r1, #2
	b _0806C868
	.align 2, 0
_0806C830: .4byte 0x000040AC
_0806C834: .4byte 0x0000406C
_0806C838:
	adds r0, r4, #0
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806C848
	movs r1, #3
	b _0806C868
_0806C848:
	adds r0, r4, #0
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806C858
	movs r1, #4
	b _0806C868
_0806C858:
	adds r0, r4, #0
	bl IsSheared__C5Sheep
	lsls r0, r0, #0x18
	movs r1, #1
	cmp r0, #0
	beq _0806C868
	movs r1, #5
_0806C868:
	movs r3, #0x9c
	lsls r3, r3, #1
	adds r0, r7, r3
_0806C86E:
	str r1, [r0]
_0806C870:
	movs r4, #0x9a
	lsls r4, r4, #1
	adds r0, r7, r4
	bl func_08050D5C
	ldr r5, _0806C884 @ =0x00004174
	adds r1, r7, r5
	movs r0, #1
	b _0806CDE8
	.align 2, 0
_0806C884: .4byte 0x00004174
_0806C888:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0806C898
	b _0806CDEA
_0806C898:
	movs r6, #0x9a
	lsls r6, r6, #1
	adds r0, r7, r6
	bl func_08050D5C
	ldr r0, _0806C8AC @ =0x00004174
	adds r1, r7, r0
	movs r0, #4
	b _0806CDE8
	.align 2, 0
_0806C8AC: .4byte 0x00004174
_0806C8B0:
	mov r1, r8
	cmp r1, #3
	beq _0806C8B8
	b _0806CDEA
_0806C8B8:
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #5
	bls _0806C8C6
	b _0806CDEA
_0806C8C6:
	lsls r0, r0, #2
	ldr r1, _0806C8D0 @ =_0806C8D4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806C8D0: .4byte _0806C8D4
_0806C8D4: @ jump table
	.4byte _0806CDEA @ case 0
	.4byte _0806C8EC @ case 1
	.4byte _0806C974 @ case 2
	.4byte _0806C9CC @ case 3
	.4byte _0806CA24 @ case 4
	.4byte _0806CA60 @ case 5
_0806C8EC:
	ldr r4, [r7, #0x10]
	cmp r4, #1
	beq _0806C91C
	cmp r4, #1
	bgt _0806C8FC
	cmp r4, #0
	beq _0806C902
	b _0806C95C
_0806C8FC:
	cmp r4, #2
	beq _0806C944
	b _0806C95C
_0806C902:
	movs r3, #0x9a
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r1, _0806C910 @ =0x080FB9C8
	ldr r2, _0806C914 @ =0x080FB9DC
	ldr r3, _0806C918 @ =0x080FB9E0
	b _0806C92A
	.align 2, 0
_0806C910: .4byte 0x080FB9C8
_0806C914: .4byte 0x080FB9DC
_0806C918: .4byte 0x080FB9E0
_0806C91C:
	movs r4, #0x9a
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r1, _0806C938 @ =0x080FB9E4
	ldr r2, _0806C93C @ =0x080FB9DC
	ldr r3, _0806C940 @ =0x080FB9E0
	movs r4, #0
_0806C92A:
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl func_08050E30
	b _0806C95C
	.align 2, 0
_0806C938: .4byte 0x080FB9E4
_0806C93C: .4byte 0x080FB9DC
_0806C940: .4byte 0x080FB9E0
_0806C944:
	movs r5, #0x9a
	lsls r5, r5, #1
	adds r0, r7, r5
	ldr r1, _0806C964 @ =0x080FB9F4
	ldr r2, _0806C968 @ =0x080FB9DC
	ldr r3, _0806C96C @ =0x080FB9E0
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl func_08050E30
_0806C95C:
	ldr r6, _0806C970 @ =0x00004174
	adds r1, r7, r6
	movs r0, #3
	b _0806CDE8
	.align 2, 0
_0806C964: .4byte 0x080FB9F4
_0806C968: .4byte 0x080FB9DC
_0806C96C: .4byte 0x080FB9E0
_0806C970: .4byte 0x00004174
_0806C974:
	ldr r0, [r7, #0x10]
	cmp r0, #1
	beq _0806C99C
	cmp r0, #1
	bgt _0806C984
	cmp r0, #0
	beq _0806C98A
	b _0806C9BC
_0806C984:
	cmp r0, #2
	beq _0806C9B0
	b _0806C9BC
_0806C98A:
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, _0806C998 @ =0x080FBA08
	bl func_08050D8C
	b _0806C9BC
	.align 2, 0
_0806C998: .4byte 0x080FBA08
_0806C99C:
	movs r2, #0x9a
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r1, _0806C9AC @ =0x080FBA3C
	bl func_08050D8C
	b _0806C9BC
	.align 2, 0
_0806C9AC: .4byte 0x080FBA3C
_0806C9B0:
	movs r3, #0x9a
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r1, _0806C9C4 @ =0x080FBA70
	bl func_08050D8C
_0806C9BC:
	ldr r4, _0806C9C8 @ =0x00004174
	adds r1, r7, r4
	movs r0, #2
	b _0806CDE8
	.align 2, 0
_0806C9C4: .4byte 0x080FBA70
_0806C9C8: .4byte 0x00004174
_0806C9CC:
	ldr r0, [r7, #0x10]
	cmp r0, #1
	beq _0806C9F4
	cmp r0, #1
	bgt _0806C9DC
	cmp r0, #0
	beq _0806C9E2
	b _0806CA14
_0806C9DC:
	cmp r0, #2
	beq _0806CA08
	b _0806CA14
_0806C9E2:
	movs r5, #0x9a
	lsls r5, r5, #1
	adds r0, r7, r5
	ldr r1, _0806C9F0 @ =0x080FBAA8
	bl func_08050D8C
	b _0806CA14
	.align 2, 0
_0806C9F0: .4byte 0x080FBAA8
_0806C9F4:
	movs r6, #0x9a
	lsls r6, r6, #1
	adds r0, r7, r6
	ldr r1, _0806CA04 @ =0x080FBAE0
	bl func_08050D8C
	b _0806CA14
	.align 2, 0
_0806CA04: .4byte 0x080FBAE0
_0806CA08:
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, _0806CA1C @ =0x080FBB14
	bl func_08050D8C
_0806CA14:
	ldr r2, _0806CA20 @ =0x00004174
	adds r1, r7, r2
	movs r0, #2
	b _0806CDE8
	.align 2, 0
_0806CA1C: .4byte 0x080FBB14
_0806CA20: .4byte 0x00004174
_0806CA24:
	ldr r0, [r7, #0x10]
	cmp r0, #1
	beq _0806CA30
	cmp r0, #2
	beq _0806CA44
	b _0806CA50
_0806CA30:
	movs r3, #0x9a
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r1, _0806CA40 @ =0x080FBB4C
	bl func_08050D8C
	b _0806CA50
	.align 2, 0
_0806CA40: .4byte 0x080FBB4C
_0806CA44:
	movs r4, #0x9a
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r1, _0806CA58 @ =0x080FBB80
	bl func_08050D8C
_0806CA50:
	ldr r5, _0806CA5C @ =0x00004174
	adds r1, r7, r5
	movs r0, #2
	b _0806CDE8
	.align 2, 0
_0806CA58: .4byte 0x080FBB80
_0806CA5C: .4byte 0x00004174
_0806CA60:
	movs r6, #0x9a
	lsls r6, r6, #1
	adds r0, r7, r6
	ldr r1, _0806CA74 @ =0x080FBBB8
	bl func_08050D8C
	ldr r0, _0806CA78 @ =0x00004174
	adds r1, r7, r0
	movs r0, #2
	b _0806CDE8
	.align 2, 0
_0806CA74: .4byte 0x080FBBB8
_0806CA78: .4byte 0x00004174
_0806CA7C:
	mov r1, r8
	cmp r1, #3
	beq _0806CA84
	b _0806CDEA
_0806CA84:
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r0, r7, r2
	movs r1, #0
	str r1, [r0]
	ldr r3, _0806CAA0 @ =0x00004174
	adds r0, r7, r3
	str r1, [r0]
	movs r4, #0x9a
	lsls r4, r4, #1
	adds r0, r7, r4
	bl func_08050D74
	b _0806CDEA
	.align 2, 0
_0806CAA0: .4byte 0x00004174
_0806CAA4:
	mov r5, r8
	cmp r5, #3
	beq _0806CAAC
	b _0806CDEA
_0806CAAC:
	ldr r0, [r7, #0x10]
	cmp r0, #1
	beq _0806CB08
	cmp r0, #1
	bgt _0806CABC
	cmp r0, #0
	beq _0806CAC2
	b _0806CDEA
_0806CABC:
	cmp r0, #2
	beq _0806CB50
	b _0806CDEA
_0806CAC2:
	movs r6, #0x9a
	lsls r6, r6, #1
	adds r4, r7, r6
	adds r0, r4, #0
	bl func_08050DF0
	cmp r0, #1
	beq _0806CAD8
	cmp r0, #2
	beq _0806CAF0
	b _0806CDEA
_0806CAD8:
	ldr r1, _0806CAE8 @ =0x080FBBEC
	adds r0, r4, #0
	bl func_08050D8C
	ldr r0, _0806CAEC @ =0x00004174
	adds r1, r7, r0
	movs r0, #8
	b _0806CDE8
	.align 2, 0
_0806CAE8: .4byte 0x080FBBEC
_0806CAEC: .4byte 0x00004174
_0806CAF0:
	ldr r1, _0806CB00 @ =0x080FBC18
	adds r0, r4, #0
	bl func_08050D8C
	ldr r2, _0806CB04 @ =0x00004174
	adds r1, r7, r2
	movs r0, #6
	b _0806CDE8
	.align 2, 0
_0806CB00: .4byte 0x080FBC18
_0806CB04: .4byte 0x00004174
_0806CB08:
	movs r3, #0x9a
	lsls r3, r3, #1
	adds r4, r7, r3
	adds r0, r4, #0
	bl func_08050DF0
	cmp r0, #1
	beq _0806CB1E
	cmp r0, #2
	beq _0806CB38
	b _0806CDEA
_0806CB1E:
	ldr r1, _0806CB30 @ =0x080FBBEC
	adds r0, r4, #0
	bl func_08050D8C
	ldr r4, _0806CB34 @ =0x00004174
	adds r1, r7, r4
	movs r0, #8
	b _0806CDE8
	.align 2, 0
_0806CB30: .4byte 0x080FBBEC
_0806CB34: .4byte 0x00004174
_0806CB38:
	ldr r1, _0806CB48 @ =0x080FBC48
	adds r0, r4, #0
	bl func_08050D8C
	ldr r5, _0806CB4C @ =0x00004174
	adds r1, r7, r5
	movs r0, #6
	b _0806CDE8
	.align 2, 0
_0806CB48: .4byte 0x080FBC48
_0806CB4C: .4byte 0x00004174
_0806CB50:
	movs r6, #0x9a
	lsls r6, r6, #1
	adds r4, r7, r6
	adds r0, r4, #0
	bl func_08050DF0
	cmp r0, #1
	beq _0806CB66
	cmp r0, #2
	beq _0806CB80
	b _0806CDEA
_0806CB66:
	ldr r1, _0806CB78 @ =0x080FBBEC
	adds r0, r4, #0
	bl func_08050D8C
	ldr r0, _0806CB7C @ =0x00004174
	adds r1, r7, r0
	movs r0, #8
	b _0806CDE8
	.align 2, 0
_0806CB78: .4byte 0x080FBBEC
_0806CB7C: .4byte 0x00004174
_0806CB80:
	ldr r1, _0806CB90 @ =0x080FBC70
	adds r0, r4, #0
	bl func_08050D8C
	ldr r2, _0806CB94 @ =0x00004174
	adds r1, r7, r2
	movs r0, #6
	b _0806CDE8
	.align 2, 0
_0806CB90: .4byte 0x080FBC70
_0806CB94: .4byte 0x00004174
_0806CB98:
	mov r3, r8
	cmp r3, #3
	beq _0806CBA0
	b _0806CDEA
_0806CBA0:
	ldr r4, [r7, #0x10]
	cmp r4, #1
	beq _0806CBE4
	cmp r4, #1
	bgt _0806CBB0
	cmp r4, #0
	beq _0806CBB6
	b _0806CDEA
_0806CBB0:
	cmp r4, #2
	beq _0806CC14
	b _0806CDEA
_0806CBB6:
	movs r5, #0x9a
	lsls r5, r5, #1
	adds r0, r7, r5
	ldr r1, _0806CBD4 @ =0x080FBC9C
	ldr r2, _0806CBD8 @ =0x080FB9DC
	ldr r3, _0806CBDC @ =0x080FB9E0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl func_08050E30
	ldr r6, _0806CBE0 @ =0x00004174
	adds r1, r7, r6
	movs r0, #5
	b _0806CDE8
	.align 2, 0
_0806CBD4: .4byte 0x080FBC9C
_0806CBD8: .4byte 0x080FB9DC
_0806CBDC: .4byte 0x080FB9E0
_0806CBE0: .4byte 0x00004174
_0806CBE4:
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, _0806CC04 @ =0x080FBC9C
	ldr r2, _0806CC08 @ =0x080FB9DC
	ldr r3, _0806CC0C @ =0x080FB9E0
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl func_08050E30
	ldr r2, _0806CC10 @ =0x00004174
	adds r1, r7, r2
	movs r0, #5
	b _0806CDE8
	.align 2, 0
_0806CC04: .4byte 0x080FBC9C
_0806CC08: .4byte 0x080FB9DC
_0806CC0C: .4byte 0x080FB9E0
_0806CC10: .4byte 0x00004174
_0806CC14:
	movs r3, #0x9a
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r1, _0806CC34 @ =0x080FBC9C
	ldr r2, _0806CC38 @ =0x080FB9DC
	ldr r3, _0806CC3C @ =0x080FB9E0
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl func_08050E30
	ldr r4, _0806CC40 @ =0x00004174
	adds r1, r7, r4
	movs r0, #5
	b _0806CDE8
	.align 2, 0
_0806CC34: .4byte 0x080FBC9C
_0806CC38: .4byte 0x080FB9DC
_0806CC3C: .4byte 0x080FB9E0
_0806CC40: .4byte 0x00004174
_0806CC44:
	mov r5, r8
	cmp r5, #3
	beq _0806CC4C
	b _0806CDEA
_0806CC4C:
	ldr r0, [r7, #0x10]
	cmp r0, #1
	beq _0806CCA8
	cmp r0, #1
	bgt _0806CC5C
	cmp r0, #0
	beq _0806CC62
	b _0806CDEA
_0806CC5C:
	cmp r0, #2
	beq _0806CCF0
	b _0806CDEA
_0806CC62:
	movs r6, #0x9a
	lsls r6, r6, #1
	adds r4, r7, r6
	adds r0, r4, #0
	bl func_08050DF0
	cmp r0, #1
	beq _0806CC78
	cmp r0, #2
	beq _0806CC90
	b _0806CDEA
_0806CC78:
	ldr r1, _0806CC88 @ =0x080FBCB8
	adds r0, r4, #0
	bl func_08050D8C
	ldr r0, _0806CC8C @ =0x00004174
	adds r1, r7, r0
	movs r0, #7
	b _0806CDE8
	.align 2, 0
_0806CC88: .4byte 0x080FBCB8
_0806CC8C: .4byte 0x00004174
_0806CC90:
	ldr r1, _0806CCA0 @ =0x080FBC18
	adds r0, r4, #0
	bl func_08050D8C
	ldr r2, _0806CCA4 @ =0x00004174
	adds r1, r7, r2
	movs r0, #6
	b _0806CDE8
	.align 2, 0
_0806CCA0: .4byte 0x080FBC18
_0806CCA4: .4byte 0x00004174
_0806CCA8:
	movs r3, #0x9a
	lsls r3, r3, #1
	adds r4, r7, r3
	adds r0, r4, #0
	bl func_08050DF0
	cmp r0, #1
	beq _0806CCBE
	cmp r0, #2
	beq _0806CCD8
	b _0806CDEA
_0806CCBE:
	ldr r1, _0806CCD0 @ =0x080FBCE0
	adds r0, r4, #0
	bl func_08050D8C
	ldr r4, _0806CCD4 @ =0x00004174
	adds r1, r7, r4
	movs r0, #7
	b _0806CDE8
	.align 2, 0
_0806CCD0: .4byte 0x080FBCE0
_0806CCD4: .4byte 0x00004174
_0806CCD8:
	ldr r1, _0806CCE8 @ =0x080FBC48
	adds r0, r4, #0
	bl func_08050D8C
	ldr r5, _0806CCEC @ =0x00004174
	adds r1, r7, r5
	movs r0, #6
	b _0806CDE8
	.align 2, 0
_0806CCE8: .4byte 0x080FBC48
_0806CCEC: .4byte 0x00004174
_0806CCF0:
	movs r6, #0x9a
	lsls r6, r6, #1
	adds r4, r7, r6
	adds r0, r4, #0
	bl func_08050DF0
	cmp r0, #1
	beq _0806CD06
	cmp r0, #2
	beq _0806CD20
	b _0806CDEA
_0806CD06:
	ldr r1, _0806CD18 @ =0x080FBCE0
	adds r0, r4, #0
	bl func_08050D8C
	ldr r0, _0806CD1C @ =0x00004174
	adds r1, r7, r0
	movs r0, #7
	b _0806CDE8
	.align 2, 0
_0806CD18: .4byte 0x080FBCE0
_0806CD1C: .4byte 0x00004174
_0806CD20:
	ldr r1, _0806CD30 @ =0x080FBC70
	adds r0, r4, #0
	bl func_08050D8C
	ldr r2, _0806CD34 @ =0x00004174
	adds r1, r7, r2
	movs r0, #6
	b _0806CDE8
	.align 2, 0
_0806CD30: .4byte 0x080FBC70
_0806CD34: .4byte 0x00004174
_0806CD38:
	mov r3, r8
	cmp r3, #3
	bne _0806CDEA
	ldr r4, _0806CD54 @ =0x00004174
	adds r0, r7, r4
	movs r1, #0
	str r1, [r0]
	movs r5, #0x9a
	lsls r5, r5, #1
	adds r0, r7, r5
	bl func_08050D74
	b _0806CDEA
	.align 2, 0
_0806CD54: .4byte 0x00004174
_0806CD58:
	mov r6, r8
	cmp r6, #3
	bne _0806CDEA
	ldr r0, _0806CD9C @ =0x00004174
	adds r1, r7, r0
	movs r0, #9
	str r0, [r1]
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r7, r1
	bl func_08050D74
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x18]
	movs r2, #1
	str r2, [sp, #0x25c]
	ldr r0, [sp, #0x60]
	ldr r1, _0806CDA0 @ =0x00000889
	adds r0, #0xc
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x60]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	b _0806CDEA
	.align 2, 0
_0806CD9C: .4byte 0x00004174
_0806CDA0: .4byte 0x00000889
_0806CDA4:
	mov r3, r8
	cmp r3, #3
	bne _0806CDEA
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	ldr r4, _0806CE20 @ =0x000040AC
	adds r0, r7, r4
	ldr r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r7
	ldr r5, _0806CE24 @ =0x0000406C
	adds r0, r0, r5
	ldr r0, [r0]
	str r0, [r7, #0x18]
	movs r6, #1
	str r6, [sp, #0x25c]
	ldr r0, [sp, #0x60]
	ldr r1, _0806CE28 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x60]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r0, _0806CE2C @ =0x00004174
	adds r1, r7, r0
	movs r0, #9
_0806CDE8:
	str r0, [r1]
_0806CDEA:
	add r1, sp, #0xbc
	movs r3, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [r1, #0xc]
	strb r3, [r1, #0x10]
	strb r3, [r1, #0x11]
	str r0, [r1, #0x14]
	strb r3, [r1, #0x18]
	movs r4, #0x20
	ldrsh r2, [r7, r4]
	ldr r0, [r7, #0x1c]
	movs r5, #0xe
	ldrsh r0, [r0, r5]
	subs r0, #0xa0
	mov sl, r1
	cmp r2, r0
	blt _0806CE30
	adds r0, r7, #0
	adds r0, #0xf0
	strb r3, [r0]
	str r0, [sp, #0x310]
	b _0806CE3A
	.align 2, 0
_0806CE20: .4byte 0x000040AC
_0806CE24: .4byte 0x0000406C
_0806CE28: .4byte 0x00000889
_0806CE2C: .4byte 0x00004174
_0806CE30:
	adds r1, r7, #0
	adds r1, #0xf0
	movs r0, #1
	strb r0, [r1]
	str r1, [sp, #0x310]
_0806CE3A:
	movs r6, #0x20
	ldrsh r1, [r7, r6]
	cmp r1, #0
	bne _0806CE4C
	adds r0, r7, #0
	adds r0, #0xb8
	strb r1, [r0]
	str r0, [sp, #0x2f8]
	b _0806CE56
_0806CE4C:
	adds r1, r7, #0
	adds r1, #0xb8
	movs r0, #1
	strb r0, [r1]
	str r1, [sp, #0x2f8]
_0806CE56:
	movs r0, #0
	str r0, [sp, #0x260]
	mov r1, r8
	cmp r1, #0
	bne _0806CE64
	movs r2, #1
	str r2, [sp, #0x260]
_0806CE64:
	movs r3, #0x96
	lsls r3, r3, #1
	adds r0, r7, r3
	ldrb r0, [r0]
	ldr r4, _0806CF64 @ =0x00003EA4
	adds r4, r7, r4
	str r4, [sp, #0x2f4]
	ldr r5, _0806CF68 @ =0x00003FA8
	adds r5, r7, r5
	str r5, [sp, #0x360]
	cmp r0, #0
	bne _0806CE7E
	b _0806D060
_0806CE7E:
	ldr r6, [sp, #0x260]
	cmp r6, #0
	beq _0806CE8A
	ldr r0, [sp, #0x31c]
	bl func_0805E8F0
_0806CE8A:
	add r6, sp, #0xd8
	ldr r0, [sp, #0x31c]
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x320]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r6, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r1, sl
	movs r5, #0x88
	lsls r5, r5, #1
	adds r0, r7, r5
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r0, [r0]
	str r0, [r1]
	adds r0, r7, #0
	adds r0, #0xf4
	ldrh r0, [r0]
	mov r4, sl
	strh r0, [r4]
	adds r0, r7, #0
	adds r0, #0xf8
	ldr r0, [r0]
	strh r0, [r4, #2]
	movs r4, #1
	movs r5, #1
	mov sb, r5
	mov r1, sb
	mov r0, sl
	strh r1, [r0, #8]
	ldr r2, _0806CF6C @ =0x000040B8
	adds r0, r7, r2
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r3, sl
	strh r0, [r3, #4]
	ldr r0, _0806CF70 @ =0x000040B0
	adds r5, r7, r0
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	mov r1, sl
	strh r0, [r1, #6]
	strb r4, [r1, #0x18]
	adds r0, r7, #0
	bl func_08008920
	ldr r1, [r6]
	movs r2, #0
	cmp r1, #0
	beq _0806CF08
	ldrh r2, [r6, #4]
_0806CF08:
	mov r3, sl
	bl func_0805E99C
	adds r0, r7, #0
	bl func_08008910
	adds r6, r0, #0
	add r4, sp, #0xe0
	ldr r2, [r4]
	mov r8, r2
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _0806CF30
	ldrh r3, [r4, #4]
_0806CF30:
	lsls r2, r2, #5
	ldr r4, _0806CF74 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x64
	mov r1, r8
	bl func_08008F0C
	ldr r5, [sp, #0x2c0]
	str r5, [sp, #0x264]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806CF78
	cmp r1, #0
	beq _0806CF5A
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806CF5A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806D060
	.align 2, 0
_0806CF64: .4byte 0x00003EA4
_0806CF68: .4byte 0x00003FA8
_0806CF6C: .4byte 0x000040B8
_0806CF70: .4byte 0x000040B0
_0806CF74: .4byte 0x06010000
_0806CF78:
	mov r8, r1
	add r1, sp, #0x1d8
	mov r5, sb
	str r5, [r1]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x1d4
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1d4
	cmp r4, r0
	bhs _0806CF98
	adds r1, r2, #0
_0806CF98:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806CFB6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806CFBA
	mov r0, sb
	bl func_080D3BC0
	b _0806CFBA
_0806CFB6:
	movs r0, #0
	mov sb, r0
_0806CFBA:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r2, [r6]
	mov ip, r5
	ldr r3, _0806D00C @ =0x00003EA4
	adds r3, r7, r3
	str r3, [sp, #0x2f4]
	ldr r4, _0806D010 @ =0x00003FA8
	adds r4, r7, r4
	str r4, [sp, #0x360]
	cmp r2, r8
	beq _0806CFEE
_0806CFD2:
	mov r5, ip
	cmp r5, #0
	beq _0806CFE4
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806CFE4:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _0806CFD2
_0806CFEE:
	mov r5, ip
	add r0, sp, #0x1d8
	ldr r0, [r0]
	cmp r0, #1
	bne _0806D014
	cmp r5, #0
	beq _0806D008
	adds r0, r5, #0
	ldr r1, [sp, #0x264]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806D008:
	adds r5, #0x10
	b _0806D03C
	.align 2, 0
_0806D00C: .4byte 0x00003EA4
_0806D010: .4byte 0x00003FA8
_0806D014:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806D03A
_0806D01C:
	cmp r2, #0
	beq _0806D02C
	adds r0, r2, #0
	ldr r1, [sp, #0x264]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D02C:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _0806D01C
_0806D03A:
	adds r5, r2, #0
_0806D03C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806D04C
_0806D046:
	adds r1, #0x10
	cmp r1, r2
	bne _0806D046
_0806D04C:
	cmp r0, #0
	beq _0806D054
	bl free
_0806D054:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r1, [sp, #0x384]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806D060:
	ldr r2, [sp, #0x2f8]
	ldrb r0, [r2]
	cmp r0, #0
	bne _0806D06A
	b _0806D220
_0806D06A:
	ldr r3, [sp, #0x260]
	cmp r3, #0
	beq _0806D076
	ldr r0, [sp, #0x2e0]
	bl func_0805E8F0
_0806D076:
	add r4, sp, #0xd8
	ldr r5, [sp, #0x2e0]
	ldr r1, [r5]
	ldr r3, [r1]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r6, [sp, #0x2e4]
	ldr r0, [r6]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r4, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r1, sl
	adds r0, r7, #0
	adds r0, #0x9c
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldr r0, [r0]
	str r0, [r1]
	ldr r5, [sp, #0x2d4]
	ldrh r0, [r5]
	mov r6, sl
	strh r0, [r6]
	ldr r1, [sp, #0x2d8]
	ldrh r0, [r1]
	strh r0, [r6, #2]
	movs r2, #1
	mov sb, r2
	mov r3, sb
	strh r3, [r6, #8]
	ldr r5, _0806D140 @ =0x000040C8
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl func_080074C0
	strh r0, [r6, #4]
	ldr r6, _0806D144 @ =0x000040C0
	adds r5, r7, r6
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	mov r1, sl
	strh r0, [r1, #6]
	adds r0, r7, #0
	bl func_08008920
	ldr r1, [r4]
	movs r2, #0
	cmp r1, #0
	beq _0806D0E6
	ldrh r2, [r4, #4]
_0806D0E6:
	mov r3, sl
	bl func_0805E99C
	adds r0, r7, #0
	bl func_08008910
	adds r6, r0, #0
	add r4, sp, #0xe0
	ldr r2, [r4]
	mov r8, r2
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _0806D10E
	ldrh r3, [r4, #4]
_0806D10E:
	lsls r2, r2, #5
	ldr r4, _0806D148 @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x64
	mov r1, r8
	bl func_08008F0C
	ldr r5, [sp, #0x2c0]
	str r5, [sp, #0x268]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806D14C
	cmp r1, #0
	beq _0806D138
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806D138:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806D220
	.align 2, 0
_0806D140: .4byte 0x000040C8
_0806D144: .4byte 0x000040C0
_0806D148: .4byte 0x06010000
_0806D14C:
	mov r8, r1
	add r1, sp, #0x1e0
	mov r5, sb
	str r5, [r1]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x1dc
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1dc
	cmp r4, r0
	bhs _0806D16C
	adds r1, r2, #0
_0806D16C:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806D18A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806D18E
	mov r0, sb
	bl func_080D3BC0
	b _0806D18E
_0806D18A:
	movs r0, #0
	mov sb, r0
_0806D18E:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _0806D1B6
_0806D19A:
	mov r3, ip
	cmp r3, #0
	beq _0806D1AC
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D1AC:
	adds r2, #0x10
	movs r4, #0x10
	add ip, r4
	cmp r2, r8
	bne _0806D19A
_0806D1B6:
	mov r5, ip
	add r0, sp, #0x1e0
	ldr r0, [r0]
	cmp r0, #1
	bne _0806D1D4
	cmp r5, #0
	beq _0806D1D0
	adds r0, r5, #0
	ldr r1, [sp, #0x268]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806D1D0:
	adds r5, #0x10
	b _0806D1FC
_0806D1D4:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806D1FA
_0806D1DC:
	cmp r2, #0
	beq _0806D1EC
	adds r0, r2, #0
	ldr r1, [sp, #0x268]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D1EC:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _0806D1DC
_0806D1FA:
	adds r5, r2, #0
_0806D1FC:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806D20C
_0806D206:
	adds r1, #0x10
	cmp r1, r2
	bne _0806D206
_0806D20C:
	cmp r0, #0
	beq _0806D214
	bl free
_0806D214:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r1, [sp, #0x384]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806D220:
	ldr r2, [sp, #0x310]
	ldrb r0, [r2]
	cmp r0, #0
	bne _0806D22A
	b _0806D3E4
_0806D22A:
	adds r4, r7, #0
	adds r4, #0xc0
	ldr r3, [sp, #0x260]
	cmp r3, #0
	beq _0806D23A
	adds r0, r4, #0
	bl func_0805E8F0
_0806D23A:
	add r6, sp, #0xd8
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	adds r0, r7, #0
	adds r0, #0xc4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r6, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r4, sl
	adds r1, r4, #0
	adds r0, r7, #0
	adds r0, #0xd4
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r0, [r0]
	str r0, [r1]
	ldr r5, [sp, #0x2fc]
	ldrh r0, [r5]
	strh r0, [r4]
	ldr r1, [sp, #0x300]
	ldrh r0, [r1]
	strh r0, [r4, #2]
	movs r2, #1
	mov sb, r2
	mov r3, sb
	strh r3, [r4, #8]
	ldr r5, _0806D304 @ =0x000040C8
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl func_080074C0
	strh r0, [r4, #4]
	ldr r0, _0806D308 @ =0x000040C0
	adds r5, r7, r0
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	strh r0, [r4, #6]
	adds r0, r7, #0
	bl func_08008920
	ldr r1, [r6]
	movs r2, #0
	cmp r1, #0
	beq _0806D2A8
	ldrh r2, [r6, #4]
_0806D2A8:
	mov r3, sl
	bl func_0805E99C
	adds r0, r7, #0
	bl func_08008910
	adds r6, r0, #0
	add r4, sp, #0xe0
	ldr r1, [r4]
	mov r8, r1
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [r4]
	movs r3, #0
	cmp r0, #0
	beq _0806D2D0
	ldrh r3, [r4, #4]
_0806D2D0:
	lsls r2, r2, #5
	ldr r4, _0806D30C @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x64
	mov r1, r8
	bl func_08008F0C
	ldr r5, [sp, #0x2c0]
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806D310
	cmp r1, #0
	beq _0806D2FA
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806D2FA:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806D3E4
	.align 2, 0
_0806D304: .4byte 0x000040C8
_0806D308: .4byte 0x000040C0
_0806D30C: .4byte 0x06010000
_0806D310:
	mov r8, r1
	add r1, sp, #0x1e8
	mov r5, sb
	str r5, [r1]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x1e4
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1e4
	cmp r4, r0
	bhs _0806D330
	adds r1, r2, #0
_0806D330:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806D34E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806D352
	mov r0, sb
	bl func_080D3BC0
	b _0806D352
_0806D34E:
	movs r0, #0
	mov sb, r0
_0806D352:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _0806D37A
_0806D35E:
	mov r3, ip
	cmp r3, #0
	beq _0806D370
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D370:
	adds r2, #0x10
	movs r4, #0x10
	add ip, r4
	cmp r2, r8
	bne _0806D35E
_0806D37A:
	mov r5, ip
	add r0, sp, #0x1e8
	ldr r0, [r0]
	cmp r0, #1
	bne _0806D398
	cmp r5, #0
	beq _0806D394
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806D394:
	adds r5, #0x10
	b _0806D3C0
_0806D398:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806D3BE
_0806D3A0:
	cmp r2, #0
	beq _0806D3B0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D3B0:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _0806D3A0
_0806D3BE:
	adds r5, r2, #0
_0806D3C0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806D3D0
_0806D3CA:
	adds r1, #0x10
	cmp r1, r2
	bne _0806D3CA
_0806D3D0:
	cmp r0, #0
	beq _0806D3D8
	bl free
_0806D3D8:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r1, [sp, #0x384]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806D3E4:
	movs r2, #0
	mov sb, r2
	ldr r3, [sp, #0x2f4]
	movs r4, #0
	ldrsh r0, [r3, r4]
	adds r0, #0x30
	movs r5, #0x20
	ldrsh r1, [r7, r5]
	cmp r0, r1
	bge _0806D40E
	adds r2, r1, #0
	ldr r6, _0806D4BC @ =0x00003EA4
	adds r1, r7, r6
_0806D3FE:
	adds r1, #0x10
	movs r0, #1
	add sb, r0
	movs r3, #0
	ldrsh r0, [r1, r3]
	adds r0, #0x30
	cmp r0, r2
	blt _0806D3FE
_0806D40E:
	movs r4, #0
	str r4, [sp, #0x26c]
	ldr r5, _0806D4C0 @ =0x00003EA0
	adds r0, r7, r5
	ldr r0, [r0]
	cmp sb, r0
	blo _0806D41E
	b _0806D72A
_0806D41E:
	adds r6, r5, #0
	adds r6, r7, r6
	str r6, [sp, #0x270]
_0806D424:
	mov r0, sb
	lsls r1, r0, #4
	adds r0, r1, #4
	ldr r2, [sp, #0x270]
	adds r5, r2, r0
	movs r3, #0
	ldrsh r2, [r5, r3]
	movs r4, #0x20
	ldrsh r0, [r7, r4]
	adds r0, #0xa0
	mov r6, sb
	adds r6, #1
	str r6, [sp, #0x2a4]
	str r1, [sp, #0x2ac]
	cmp r2, r0
	ble _0806D446
	b _0806D71C
_0806D446:
	ldr r0, [sp, #0x26c]
	lsls r4, r0, #3
	adds r0, r4, r7
	ldr r1, _0806D4C4 @ =0x000040D0
	adds r0, r0, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	str r0, [sp, #0x274]
	adds r4, r4, r7
	ldr r2, _0806D4C8 @ =0x00004120
	adds r4, r4, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	str r0, [sp, #0x278]
	adds r0, r7, #0
	bl func_08008910
	adds r6, r0, #0
	ldr r1, [r5, #8]
	ldr r3, [sp, #0x274]
	lsls r2, r3, #5
	ldr r4, _0806D4CC @ =0x06010000
	adds r2, r2, r4
	add r0, sp, #0x64
	movs r3, #0x80
	bl func_08008F0C
	ldr r5, [sp, #0x2c0]
	str r5, [sp, #0x27c]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806D4D0
	cmp r1, #0
	beq _0806D49E
	adds r0, r1, #0
	adds r1, r5, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806D49E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r5, [sp, #0x278]
	lsls r5, r5, #5
	mov sb, r5
	movs r6, #0xfe
	lsls r6, r6, #1
	add r6, sp
	str r6, [sp, #0x364]
	ldr r0, [sp, #0x26c]
	adds r0, #1
	str r0, [sp, #0x2a8]
	b _0806D5B6
	.align 2, 0
_0806D4BC: .4byte 0x00003EA4
_0806D4C0: .4byte 0x00003EA0
_0806D4C4: .4byte 0x000040D0
_0806D4C8: .4byte 0x00004120
_0806D4CC: .4byte 0x06010000
_0806D4D0:
	mov r8, r1
	movs r0, #1
	add r2, sp, #0x1f0
	str r0, [r2]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	add r0, sp, #0x1ec
	str r4, [r0]
	ldr r1, [r2]
	cmp r4, r1
	bhs _0806D4EA
	adds r0, r2, #0
_0806D4EA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806D508
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _0806D50C
	mov r0, sl
	bl func_080D3BC0
	b _0806D50C
_0806D508:
	movs r0, #0
	mov sl, r0
_0806D50C:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r2, [r6]
	mov ip, r5
	mov r1, sb
	adds r1, #1
	str r1, [sp, #0x2a4]
	ldr r3, [sp, #0x278]
	lsls r3, r3, #5
	mov sb, r3
	movs r4, #0xfe
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x364]
	ldr r5, [sp, #0x26c]
	adds r5, #1
	str r5, [sp, #0x2a8]
	cmp r2, r8
	beq _0806D54C
_0806D532:
	mov r0, ip
	cmp r0, #0
	beq _0806D542
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D542:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	cmp r2, r8
	bne _0806D532
_0806D54C:
	mov r5, ip
	add r0, sp, #0x1f0
	ldr r0, [r0]
	cmp r0, #1
	bne _0806D56A
	cmp r5, #0
	beq _0806D566
	adds r0, r5, #0
	ldr r1, [sp, #0x27c]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806D566:
	adds r5, #0x10
	b _0806D592
_0806D56A:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806D590
_0806D572:
	cmp r2, #0
	beq _0806D582
	adds r0, r2, #0
	ldr r1, [sp, #0x27c]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D582:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _0806D572
_0806D590:
	adds r5, r2, #0
_0806D592:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806D5A2
_0806D59C:
	adds r1, #0x10
	cmp r1, r2
	bne _0806D59C
_0806D5A2:
	cmp r0, #0
	beq _0806D5AA
	bl free
_0806D5AA:
	ldr r0, [sp, #0x384]
	add r0, sl
	ldr r1, [sp, #0x384]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806D5B6:
	adds r0, r7, #0
	bl func_08008910
	ldr r1, [sp, #0x2ac]
	adds r1, #4
	ldr r2, [sp, #0x270]
	adds r1, r2, r1
	adds r6, r0, #0
	ldr r1, [r1, #0xc]
	ldr r2, _0806D5F8 @ =0x05000200
	add r2, sb
	add r0, sp, #0x64
	movs r3, #0x20
	bl func_08008F0C
	ldr r3, [sp, #0x2c0]
	mov sl, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806D5FC
	cmp r1, #0
	beq _0806D5F0
	adds r0, r1, #0
	adds r1, r3, #0
	ldm r1!, {r2, r4, r5}
	stm r0!, {r2, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D5F0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806D6CA
	.align 2, 0
_0806D5F8: .4byte 0x05000200
_0806D5FC:
	mov r8, r1
	movs r0, #1
	add r2, sp, #0x1f8
	str r0, [r2]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	add r0, sp, #0x1f4
	str r4, [r0]
	ldr r1, [r2]
	cmp r4, r1
	bhs _0806D616
	adds r0, r2, #0
_0806D616:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806D634
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0806D638
	mov r0, sb
	bl func_080D3BC0
	b _0806D638
_0806D634:
	movs r0, #0
	mov sb, r0
_0806D638:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r2, [r6]
	mov ip, r5
	cmp r2, r8
	beq _0806D660
_0806D644:
	mov r3, ip
	cmp r3, #0
	beq _0806D656
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D656:
	adds r2, #0x10
	movs r4, #0x10
	add ip, r4
	cmp r2, r8
	bne _0806D644
_0806D660:
	mov r5, ip
	add r0, sp, #0x1f8
	ldr r0, [r0]
	cmp r0, #1
	bne _0806D67E
	cmp r5, #0
	beq _0806D67A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806D67A:
	adds r5, #0x10
	b _0806D6A6
_0806D67E:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806D6A4
_0806D686:
	cmp r2, #0
	beq _0806D696
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D696:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _0806D686
_0806D6A4:
	adds r5, r2, #0
_0806D6A6:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806D6B6
_0806D6B0:
	adds r1, #0x10
	cmp r1, r2
	bne _0806D6B0
_0806D6B6:
	cmp r0, #0
	beq _0806D6BE
	bl free
_0806D6BE:
	ldr r0, [sp, #0x384]
	add r0, sb
	ldr r1, [sp, #0x384]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806D6CA:
	adds r0, r7, #0
	bl func_08008920
	adds r4, r0, #0
	ldr r1, [sp, #0x2ac]
	adds r1, #4
	ldr r2, [sp, #0x270]
	adds r1, r2, r1
	movs r3, #0
	ldrsh r2, [r1, r3]
	movs r5, #0x20
	ldrsh r0, [r7, r5]
	subs r2, r2, r0
	ldr r1, [r1, #4]
	ldr r6, [sp, #0x278]
	str r6, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x364]
	ldr r3, [sp, #0x274]
	bl func_0804EA94
	ldrb r2, [r4]
	cmp r2, #0x7f
	bhi _0806D718
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r4, r0
	add r1, sp, #0x1fc
	ldr r1, [r1]
	str r1, [r0]
	ldr r3, [sp, #0x364]
	ldrh r1, [r3, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r4]
_0806D718:
	ldr r4, [sp, #0x2a8]
	str r4, [sp, #0x26c]
_0806D71C:
	ldr r5, [sp, #0x2a4]
	mov sb, r5
	ldr r6, [sp, #0x270]
	ldr r0, [r6]
	cmp sb, r0
	bhs _0806D72A
	b _0806D424
_0806D72A:
	movs r0, #0
	mov sb, r0
	ldr r1, [sp, #0x360]
	movs r2, #0
	ldrsh r0, [r1, r2]
	adds r0, #0x30
	movs r3, #0x20
	ldrsh r1, [r7, r3]
	cmp r0, r1
	bge _0806D754
	adds r2, r1, #0
	ldr r4, _0806D7C4 @ =0x00003FA8
	adds r1, r7, r4
_0806D744:
	adds r1, #0xc
	movs r5, #1
	add sb, r5
	movs r6, #0
	ldrsh r0, [r1, r6]
	adds r0, #0x30
	cmp r0, r2
	blt _0806D744
_0806D754:
	ldr r1, _0806D7C8 @ =0x00003FA4
	adds r0, r7, r1
	ldr r0, [r0]
	cmp sb, r0
	blo _0806D762
	bl sub_0806C492
_0806D762:
	adds r2, r1, #0
	adds r2, r7, r2
	str r2, [sp, #0x280]
_0806D768:
	mov r3, sb
	lsls r0, r3, #1
	add r0, sb
	lsls r0, r0, #2
	adds r0, #4
	ldr r5, [sp, #0x280]
	adds r4, r5, r0
	movs r6, #0
	ldrsh r1, [r4, r6]
	movs r2, #0x20
	ldrsh r0, [r7, r2]
	adds r0, #0xa0
	adds r3, #1
	str r3, [sp, #0x2a4]
	cmp r1, r0
	ble _0806D78A
	b _0806D8A0
_0806D78A:
	adds r0, r7, #0
	bl func_08008910
	adds r6, r0, #0
	ldr r1, [r4, #4]
	ldr r2, [r4, #8]
	add r0, sp, #0x64
	movs r3, #0xc0
	lsls r3, r3, #2
	bl func_08008F0C
	ldr r3, [sp, #0x2c0]
	str r3, [sp, #0x284]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806D7CC
	cmp r1, #0
	beq _0806D7BC
	adds r0, r1, #0
	adds r1, r3, #0
	ldm r1!, {r2, r4, r5}
	stm r0!, {r2, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D7BC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0806D8A0
	.align 2, 0
_0806D7C4: .4byte 0x00003FA8
_0806D7C8: .4byte 0x00003FA4
_0806D7CC:
	mov r8, r1
	movs r0, #1
	add r2, sp, #0x208
	str r0, [r2]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	add r0, sp, #0x204
	str r4, [r0]
	ldr r1, [r2]
	cmp r4, r1
	bhs _0806D7E6
	adds r0, r2, #0
_0806D7E6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806D804
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _0806D808
	mov r0, sl
	bl func_080D3BC0
	b _0806D808
_0806D804:
	movs r0, #0
	mov sl, r0
_0806D808:
	adds r5, r0, #0
	str r5, [sp, #0x384]
	ldr r2, [r6]
	mov ip, r5
	mov r3, sb
	adds r3, #1
	str r3, [sp, #0x2a4]
	cmp r2, r8
	beq _0806D836
_0806D81A:
	mov r4, ip
	cmp r4, #0
	beq _0806D82C
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D82C:
	adds r2, #0x10
	movs r5, #0x10
	add ip, r5
	cmp r2, r8
	bne _0806D81A
_0806D836:
	mov r5, ip
	add r0, sp, #0x208
	ldr r0, [r0]
	cmp r0, #1
	bne _0806D854
	cmp r5, #0
	beq _0806D850
	adds r0, r5, #0
	ldr r1, [sp, #0x284]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0806D850:
	adds r5, #0x10
	b _0806D87C
_0806D854:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0806D87A
_0806D85C:
	cmp r2, #0
	beq _0806D86C
	adds r0, r2, #0
	ldr r1, [sp, #0x284]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0806D86C:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _0806D85C
_0806D87A:
	adds r5, r2, #0
_0806D87C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0806D88C
_0806D886:
	adds r1, #0x10
	cmp r1, r2
	bne _0806D886
_0806D88C:
	cmp r0, #0
	beq _0806D894
	bl free
_0806D894:
	ldr r0, [sp, #0x384]
	add r0, sl
	ldr r1, [sp, #0x384]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0806D8A0:
	ldr r2, [sp, #0x2a4]
	mov sb, r2
	ldr r3, [sp, #0x280]
	ldr r0, [r3]
	cmp sb, r0
	bhs _0806D8AE
	b _0806D768
_0806D8AE:
	bl sub_0806C492

	non_word_aligned_thumb_func_start sub_0806D8B2
sub_0806D8B2: @ 0x0806D8B2
	ldr r0, [sp, #0x20c]
	movs r3, #0xe2
	lsls r3, r3, #2
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0806D8C8
func_0806D8C8: @ 0x0806D8C8
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r7, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	ldr r0, _0806D910 @ =vtable_unk_080E7AB4
	str r0, [r7]
	ldr r1, [r4]
	movs r0, #0
	str r0, [r4]
	str r1, [sp]
	ldr r0, _0806D914 @ =0x00004178
	bl __builtin_new
	mov r1, sp
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_08069F14
	str r0, [r7, #4]
	ldr r4, [r4]
	cmp r4, #0
	beq _0806D904
	ldr r0, [r4]
	ldr r2, [r0, #8]
	adds r0, r4, #0
	movs r1, #3
	bl _call_via_r2
_0806D904:
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806D910: .4byte vtable_unk_080E7AB4
_0806D914: .4byte 0x00004178

	thumb_func_start func_0806D918
func_0806D918: @ 0x0806D918
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0806D944 @ =vtable_unk_080E7AB4
	str r0, [r4]
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0806D934
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0806D934:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806D944: .4byte vtable_unk_080E7AB4

	thumb_func_start func_0806D948
func_0806D948: @ 0x0806D948
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r1, [r1, #4]
	mov r0, sp
	bl func_0806A1F4
	ldr r2, [sp]
	mov r0, sp
	str r0, [sp, #4]
	str r2, [sp, #8]
	adds r1, r0, #0
	movs r0, #0
	str r0, [r1]
	str r2, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _0806D978
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0806D978:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0806D984:
	.byte 0x49, 0x68, 0x8A, 0x69, 0x49, 0x69, 0x01, 0x60, 0x42, 0x60, 0x70, 0x47

	thumb_func_start func_0806D990
func_0806D990: @ 0x0806D990
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x18
	adds r7, r0, #0
	adds r6, r1, #0
	add r1, sp, #0x14
	movs r0, #0x1e
	movs r2, #1
	movs r3, #0
	mov r8, r3
	strh r0, [r1]
	strh r2, [r1, #2]
	adds r0, r7, #0
	bl func_080084DC
	ldr r0, _0806DAB0 @ =vtable_unk_080E7AC4
	str r0, [r7, #4]
	mov r0, r8
	str r0, [r7, #8]
	movs r0, #4
	bl __builtin_new
	adds r5, r0, #0
	add r0, sp, #0xc
	bl func_0800835C
	add r4, sp, #0x10
	adds r0, r4, #0
	bl func_0800770C
	ldr r0, [r7, #8]
	str r0, [sp]
	add r1, sp, #0xc
	str r1, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0xf
	bl func_08050CC0
	str r0, [r7, #0xc]
	adds r0, r4, #0
	movs r1, #2
	bl func_08007714
	add r0, sp, #0xc
	movs r1, #2
	bl func_08008364
	adds r0, r7, #0
	adds r0, #0x10
	movs r1, #1
	bl func_08008B54
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #2
	bl func_08008B54
	adds r4, r7, #0
	adds r4, #0x18
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #7
	bl func_08007B54
	str r0, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #3
	bl func_08007B54
	str r0, [r4, #4]
	adds r4, #8
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	lsls r1, r6, #0x1e
	lsls r6, r6, #0x19
	movs r2, #0x89
	lsls r2, r2, #3
	adds r4, r7, r2
	lsrs r1, r1, #0x1e
	ldrb r2, [r4]
	movs r0, #4
	rsbs r0, r0, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r4]
	lsrs r2, r6, #0x1b
	cmp r2, #0x1d
	bls _0806DA78
	adds r0, r2, #0
	movs r1, #0x1e
	bl __umodsi3
	adds r2, r0, #0
_0806DA78:
	movs r0, #0x1f
	ands r2, r0
	lsls r2, r2, #2
	ldrb r1, [r4]
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strb r0, [r4]
	ldr r3, _0806DAB4 @ =0x0000044C
	adds r0, r7, r3
	mov r1, r8
	strh r1, [r0]
	ldr r2, _0806DAB8 @ =0x0000044E
	adds r1, r7, r2
	movs r0, #2
	strh r0, [r1]
	ldrb r0, [r4]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	beq _0806DAD4
	cmp r0, #1
	bgt _0806DABC
	cmp r0, #0
	beq _0806DAC6
	b _0806DAF4
	.align 2, 0
_0806DAB0: .4byte vtable_unk_080E7AC4
_0806DAB4: .4byte 0x0000044C
_0806DAB8: .4byte 0x0000044E
_0806DABC:
	cmp r0, #2
	beq _0806DAE0
	cmp r0, #3
	beq _0806DAEC
	b _0806DAF4
_0806DAC6:
	ldr r3, _0806DAD0 @ =0x00000449
	adds r1, r7, r3
	movs r0, #0
	b _0806DAF2
	.align 2, 0
_0806DAD0: .4byte 0x00000449
_0806DAD4:
	ldr r0, _0806DADC @ =0x00000449
	adds r1, r7, r0
	movs r0, #4
	b _0806DAF2
	.align 2, 0
_0806DADC: .4byte 0x00000449
_0806DAE0:
	ldr r2, _0806DAE8 @ =0x00000449
	adds r1, r7, r2
	movs r0, #8
	b _0806DAF2
	.align 2, 0
_0806DAE8: .4byte 0x00000449
_0806DAEC:
	ldr r3, _0806DB30 @ =0x00000449
	adds r1, r7, r3
	movs r0, #0xc
_0806DAF2:
	strb r0, [r1]
_0806DAF4:
	movs r1, #0x89
	lsls r1, r1, #3
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	ldr r2, _0806DB34 @ =0x0000044A
	adds r1, r7, r2
	movs r2, #0
	strb r0, [r1]
	ldr r3, _0806DB30 @ =0x00000449
	adds r0, r7, r3
	ldrb r1, [r0]
	adds r0, r7, #0
	adds r0, #0x38
	strb r1, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #0xa
	strb r2, [r0]
	adds r0, r7, #0
	add sp, #0x18
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806DB30: .4byte 0x00000449
_0806DB34: .4byte 0x0000044A

	thumb_func_start func_0806DB38
func_0806DB38: @ 0x0806DB38
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	mov sl, r0
	adds r5, r1, #0
	adds r0, r5, #0
	bl func_08008724
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r5, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0806DBE4 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl func_08009300
	str r4, [sp, #4]
	adds r0, r5, #0
	bl func_0806E234
	adds r0, r5, #0
	bl func_0806E43C
	adds r0, r5, #0
	bl func_0806E578
	ldr r0, [sp, #4]
	ldr r1, _0806DBE8 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r0, #0
	mov r8, r0
	add r1, sp, #8
	mov sb, r1
	mov r0, sp
	adds r0, #0xc
	str r0, [sp, #0x14]
_0806DBC0:
	adds r0, r5, #0
	bl func_080087C8
	adds r0, r5, #0
	bl func_080088B8
	ldr r1, _0806DBEC @ =0x0000044C
	adds r0, r5, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #4
	bls _0806DBDA
	b _0806DD3C
_0806DBDA:
	lsls r0, r0, #2
	ldr r1, _0806DBF0 @ =_0806DBF4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806DBE4: .4byte vtable_unk_080E5B80
_0806DBE8: .4byte 0x00000889
_0806DBEC: .4byte 0x0000044C
_0806DBF0: .4byte _0806DBF4
_0806DBF4: @ jump table
	.4byte _0806DC08 @ case 0
	.4byte _0806DC20 @ case 1
	.4byte _0806DC50 @ case 2
	.4byte _0806DCF8 @ case 3
	.4byte _0806DD2C @ case 4
_0806DC08:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0806DC16
	b _0806DD3C
_0806DC16:
	adds r1, r5, #0
	adds r1, #0x44
	movs r0, #1
	strb r0, [r1]
	b _0806DD16
_0806DC20:
	adds r0, r5, #0
	bl func_0806DEC0
	adds r0, r5, #0
	bl func_0806E02C
	adds r0, r5, #0
	bl func_0806E164
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806DC48
	ldr r0, _0806DC44 @ =0x0000044E
	adds r1, r5, r0
	movs r0, #0
	strh r0, [r1]
	b _0806DD16
	.align 2, 0
_0806DC44: .4byte 0x0000044E
_0806DC48:
	adds r0, r5, #0
	bl func_0806E1E8
	b _0806DD3C
_0806DC50:
	ldr r1, _0806DC84 @ =0x0000044E
	adds r0, r5, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #2
	bne _0806DD3C
	movs r1, #0x8a
	lsls r1, r1, #3
	adds r0, r5, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bne _0806DCE8
	ldr r1, _0806DC88 @ =0x00000449
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	beq _0806DC96
	cmp r0, #4
	bgt _0806DC8C
	cmp r0, #0
	beq _0806DC92
	b _0806DC9E
	.align 2, 0
_0806DC84: .4byte 0x0000044E
_0806DC88: .4byte 0x00000449
_0806DC8C:
	cmp r0, #8
	beq _0806DC9A
	b _0806DC9E
_0806DC92:
	movs r2, #0
	b _0806DCA0
_0806DC96:
	movs r2, #1
	b _0806DCA0
_0806DC9A:
	movs r2, #2
	b _0806DCA0
_0806DC9E:
	movs r2, #3
_0806DCA0:
	movs r0, #0x89
	lsls r0, r0, #3
	adds r6, r5, r0
	ldr r1, _0806DCE4 @ =0x0000044A
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r4, #4
	rsbs r4, r4, #0
	ands r4, r7
	orrs r4, r2
	subs r1, r0, #1
	cmp r1, #0x1d
	bls _0806DCC8
	adds r0, r1, #0
	movs r1, #0x1e
	bl __umodsi3
	adds r1, r0, #0
_0806DCC8:
	movs r0, #0x1f
	ands r1, r0
	lsls r1, r1, #2
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r0, r4
	orrs r0, r1
	adds r7, r0, #0
	strb r0, [r6]
	adds r1, r5, #0
	adds r1, #0x44
	movs r0, #0
	strb r0, [r1]
	b _0806DD16
	.align 2, 0
_0806DCE4: .4byte 0x0000044A
_0806DCE8:
	ldr r0, _0806DCF4 @ =0x0000044C
	adds r1, r5, r0
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	b _0806DD3C
	.align 2, 0
_0806DCF4: .4byte 0x0000044C
_0806DCF8:
	ldr r0, [sp, #4]
	ldr r1, _0806DD24 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_0806DD16:
	ldr r0, _0806DD28 @ =0x0000044C
	adds r1, r5, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0806DD3C
	.align 2, 0
_0806DD24: .4byte 0x00000889
_0806DD28: .4byte 0x0000044C
_0806DD2C:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0806DD3C
	movs r1, #1
	mov r8, r1
_0806DD3C:
	adds r0, r5, #0
	bl func_0806DD9C
	adds r0, r5, #0
	bl func_0806E7E0
	mov r0, r8
	cmp r0, #0
	bne _0806DD50
	b _0806DBC0
_0806DD50:
	movs r0, #0
	str r0, [sp, #8]
	mov r1, sb
	str r1, [sp, #0xc]
	ldr r1, [sp, #0x14]
	str r0, [r1, #4]
	mov r1, sb
	str r0, [r1]
	mov r1, sl
	str r0, [r1]
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _0806DD76
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0806DD76:
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _0806DD88
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0806DD88:
	mov r0, sl
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0806DD9C
func_0806DD9C: @ 0x0806DD9C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r0, [r7, #0xc]
	mov sb, r0
	adds r0, r7, #0
	bl func_080088DC
	mov r8, r0
	adds r0, r7, #0
	bl func_08008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_0800894C
	adds r1, r7, #0
	adds r1, #0x10
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl func_08050D3C
	cmp r0, #6
	bhi _0806DEA4
	lsls r0, r0, #2
	ldr r1, _0806DDF8 @ =_0806DDFC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806DDF8: .4byte _0806DDFC
_0806DDFC: @ jump table
	.4byte _0806DE18 @ case 0
	.4byte _0806DEA4 @ case 1
	.4byte _0806DEA4 @ case 2
	.4byte _0806DE3A @ case 3
	.4byte _0806DEA4 @ case 4
	.4byte _0806DEA4 @ case 5
	.4byte _0806DEA4 @ case 6
_0806DE18:
	ldr r1, _0806DE30 @ =0x0000044E
	adds r4, r7, r1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _0806DE34
	ldr r0, [r7, #0xc]
	bl func_08050D5C
	movs r0, #3
	strh r0, [r4]
	b _0806DEA4
	.align 2, 0
_0806DE30: .4byte 0x0000044E
_0806DE34:
	movs r0, #2
	strh r0, [r4]
	b _0806DEA4
_0806DE3A:
	ldr r0, _0806DE50 @ =0x0000044E
	adds r5, r7, r0
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #5
	bne _0806DE54
	ldr r0, [r7, #0xc]
	bl func_08050D74
	movs r0, #1
	b _0806DEA2
	.align 2, 0
_0806DE50: .4byte 0x0000044E
_0806DE54:
	cmp r0, #4
	bne _0806DE84
	ldr r0, [r7, #0xc]
	bl func_08050DF0
	adds r1, r0, #0
	movs r0, #5
	strh r0, [r5]
	cmp r1, #1
	bne _0806DE74
	movs r0, #0x8a
	lsls r0, r0, #3
	adds r1, r7, r0
	movs r0, #0
	strh r0, [r1]
	b _0806DEA4
_0806DE74:
	cmp r1, #2
	bne _0806DEA4
	movs r0, #0x8a
	lsls r0, r0, #3
	adds r1, r7, r0
	movs r0, #1
	strh r0, [r1]
	b _0806DEA4
_0806DE84:
	cmp r0, #3
	bne _0806DEA4
	movs r4, #0
	movs r0, #5
	strh r0, [r5]
	ldr r0, [r7, #0xc]
	ldr r1, _0806DEB4 @ =0x080FBD18
	ldr r2, _0806DEB8 @ =0x080FBD28
	ldr r3, _0806DEBC @ =0x080FBD2C
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl func_08050E30
	movs r0, #4
_0806DEA2:
	strh r0, [r5]
_0806DEA4:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806DEB4: .4byte 0x080FBD18
_0806DEB8: .4byte 0x080FBD28
_0806DEBC: .4byte 0x080FBD2C

	thumb_func_start func_0806DEC0
func_0806DEC0: @ 0x0806DEC0
	push {r4, r5, lr}
	adds r4, r0, #0
	bl func_080088D4
	adds r1, r0, #0
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0806DF1A
	adds r5, r4, #0
	adds r5, #0x39
	movs r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #0
	bne _0806DEE0
	b _0806E024
_0806DEE0:
	adds r0, r4, #0
	adds r0, #0x14
	movs r1, #0xcb
	bl func_08008B6C
	ldrb r0, [r5]
	movs r1, #0
	ldrsb r1, [r5, r1]
	cmp r1, #1
	ble _0806DEFA
	subs r0, #1
	strb r0, [r5]
	b _0806E024
_0806DEFA:
	cmp r1, #1
	beq _0806DF00
	b _0806E024
_0806DF00:
	adds r0, r4, #0
	adds r0, #0x38
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	ble _0806DF14
	movs r0, #4
	strb r0, [r5]
	b _0806E024
_0806DF14:
	movs r0, #5
	strb r0, [r5]
	b _0806E024
_0806DF1A:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0806DF5E
	adds r5, r4, #0
	adds r5, #0x39
	movs r0, #0
	ldrsb r0, [r5, r0]
	cmp r0, #0
	beq _0806E024
	adds r0, r4, #0
	adds r0, #0x14
	movs r1, #0xcb
	bl func_08008B6C
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #6
	beq _0806DF58
	cmp r0, #5
	bne _0806E024
	adds r0, r4, #0
	adds r0, #0x38
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	ble _0806E024
_0806DF58:
	movs r0, #1
	strb r0, [r5]
	b _0806E024
_0806DF5E:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0806DFBE
	adds r0, r4, #0
	adds r0, #0x14
	movs r1, #0xcb
	bl func_08008B6C
	adds r2, r4, #0
	adds r2, #0x39
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	bne _0806DF92
	adds r1, r4, #0
	adds r1, #0x38
	ldrb r0, [r1]
	subs r0, #4
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0806E024
	movs r0, #0xc
	strb r0, [r1]
	b _0806E024
_0806DF92:
	adds r1, r4, #0
	adds r1, #0x38
	ldrb r0, [r1]
	subs r0, #2
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0806E024
	ldrb r0, [r2]
	subs r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	cmp r0, #0
	bgt _0806DFB8
	movs r0, #5
	strb r0, [r2]
	movs r0, #3
	strb r0, [r1]
	b _0806E024
_0806DFB8:
	movs r0, #0xd
	strb r0, [r1]
	b _0806E024
_0806DFBE:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0806E024
	adds r0, r4, #0
	adds r0, #0x14
	movs r1, #0xcb
	bl func_08008B6C
	adds r2, r4, #0
	adds r2, #0x39
	movs r3, #0
	ldrsb r3, [r2, r3]
	cmp r3, #0
	bne _0806DFF2
	adds r1, r4, #0
	adds r1, #0x38
	ldrb r0, [r1]
	adds r0, #4
	strb r0, [r1]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0xc
	ble _0806E024
	strb r3, [r1]
	b _0806E024
_0806DFF2:
	adds r3, r4, #0
	adds r3, #0x38
	ldrb r0, [r3]
	adds r1, r0, #2
	strb r1, [r3]
	ldrb r4, [r2]
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #5
	bne _0806E014
	lsls r0, r1, #0x18
	asrs r0, r0, #0x18
	cmp r0, #3
	ble _0806E024
	movs r0, #1
	strb r0, [r2]
	b _0806E022
_0806E014:
	lsls r0, r1, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0xd
	ble _0806E024
	adds r0, r4, #1
	strb r0, [r2]
	movs r0, #1
_0806E022:
	strb r0, [r3]
_0806E024:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0806E02C
func_0806E02C: @ 0x0806E02C
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r0, #0x38
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #4
	ldr r2, _0806E068 @ =0x000001FF
	adds r0, r2, #0
	ands r1, r0
	ldrh r2, [r5, #0x3e]
	ldr r0, _0806E06C @ =0xFFFFFE00
	ands r0, r2
	orrs r0, r1
	strh r0, [r5, #0x3e]
	adds r1, r5, #0
	adds r1, #0x39
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	ble _0806E070
	subs r0, #1
	lsls r1, r0, #3
	adds r1, r1, r0
	lsls r1, r1, #1
	adds r1, #0x40
	adds r0, r5, #0
	adds r0, #0x3c
	strb r1, [r0]
	b _0806E078
	.align 2, 0
_0806E068: .4byte 0x000001FF
_0806E06C: .4byte 0xFFFFFE00
_0806E070:
	adds r1, r5, #0
	adds r1, #0x3c
	movs r0, #0x28
	strb r0, [r1]
_0806E078:
	adds r1, r5, #0
	adds r1, #0x39
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _0806E106
	adds r0, r5, #0
	adds r0, #0x38
	ldrb r1, [r0]
	ldr r2, _0806E0A4 @ =0x00000449
	adds r0, r5, r2
	strb r1, [r0]
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	beq _0806E0C4
	cmp r0, #4
	bgt _0806E0A8
	cmp r0, #0
	beq _0806E0AE
	b _0806E0F0
	.align 2, 0
_0806E0A4: .4byte 0x00000449
_0806E0A8:
	cmp r0, #8
	beq _0806E0DA
	b _0806E0F0
_0806E0AE:
	adds r2, r5, #0
	adds r2, #0x4a
	movs r1, #0xf
	adds r0, r5, #0
	adds r0, #0x72
_0806E0B8:
	strh r1, [r0]
	subs r1, #1
	subs r0, #8
	cmp r0, r2
	bge _0806E0B8
	b _0806E15A
_0806E0C4:
	adds r2, r5, #0
	adds r2, #0x4a
	movs r1, #0x15
	adds r0, r5, #0
	adds r0, #0x72
_0806E0CE:
	strh r1, [r0]
	subs r1, #1
	subs r0, #8
	cmp r0, r2
	bge _0806E0CE
	b _0806E15A
_0806E0DA:
	adds r2, r5, #0
	adds r2, #0x4a
	movs r1, #0x1b
	adds r0, r5, #0
	adds r0, #0x72
_0806E0E4:
	strh r1, [r0]
	subs r1, #1
	subs r0, #8
	cmp r0, r2
	bge _0806E0E4
	b _0806E15A
_0806E0F0:
	adds r2, r5, #0
	adds r2, #0x4a
	movs r1, #0x21
	adds r0, r5, #0
	adds r0, #0x72
_0806E0FA:
	strh r1, [r0]
	subs r1, #1
	subs r0, #8
	cmp r0, r2
	bge _0806E0FA
	b _0806E15A
_0806E106:
	adds r0, r5, #0
	adds r0, #0x38
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsrs r0, r2, #0x1f
	adds r2, r2, r0
	asrs r2, r2, #1
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	subs r1, #1
	lsls r0, r1, #3
	subs r0, r0, r1
	adds r2, r2, r0
	adds r2, #1
	ldr r1, _0806E160 @ =0x0000044A
	adds r0, r5, r1
	strb r2, [r0]
	movs r4, #0
	ldrsb r4, [r0, r4]
	adds r0, r4, #0
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #0x18
	asrs r6, r0, #0x18
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r7, r0, #0
	movs r1, #0x1a
	cmp r0, #0
	beq _0806E150
	adds r1, r7, #0
_0806E150:
	adds r0, r5, #0
	adds r0, #0x7a
	strh r1, [r0]
	adds r0, #8
	strh r6, [r0]
_0806E15A:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806E160: .4byte 0x0000044A

	thumb_func_start func_0806E164
func_0806E164: @ 0x0806E164
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r7, #0
	movs r5, #0
	bl func_080088D4
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0806E186
	adds r0, r4, #0
	bl func_080088D4
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0806E188
_0806E186:
	movs r5, #1
_0806E188:
	cmp r5, #0
	beq _0806E1DE
	adds r0, r4, #0
	adds r0, #0x14
	movs r1, #0x6a
	bl func_08008B6C
	adds r6, r4, #0
	adds r6, #0x39
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #0
	bne _0806E1DC
	adds r5, r4, #0
	adds r5, #0x38
	ldrb r0, [r5]
	adds r1, r4, #0
	adds r1, #0x3a
	strb r0, [r1]
	ldr r0, _0806E1D8 @ =0x0000044A
	adds r4, r4, r0
	movs r0, #0
	ldrsb r0, [r4, r0]
	subs r0, #1
	movs r1, #7
	bl __divsi3
	adds r0, #1
	strb r0, [r6]
	movs r0, #0
	ldrsb r0, [r4, r0]
	subs r0, #1
	movs r1, #7
	bl __modsi3
	lsls r0, r0, #1
	adds r0, #1
	strb r0, [r5]
	b _0806E1DE
	.align 2, 0
_0806E1D8: .4byte 0x0000044A
_0806E1DC:
	movs r7, #1
_0806E1DE:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0806E1E8
func_0806E1E8: @ 0x0806E1E8
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r5, #0
	bl func_080088D4
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0806E22A
	adds r0, r4, #0
	adds r0, #0x14
	movs r1, #0x6c
	bl func_08008B6C
	adds r2, r4, #0
	adds r2, #0x39
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	ble _0806E228
	adds r0, r4, #0
	adds r0, #0x3a
	ldrb r1, [r0]
	subs r0, #2
	strb r1, [r0]
	strb r5, [r2]
	adds r0, #0x42
	movs r1, #0x22
	strh r1, [r0]
	adds r0, #8
	strh r1, [r0]
	b _0806E22A
_0806E228:
	movs r5, #1
_0806E22A:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0806E234
func_0806E234: @ 0x0806E234
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x58
	adds r6, r0, #0
	bl func_08008918
	add r1, sp, #0xc
	movs r4, #0
	strh r4, [r1]
	strh r4, [r0, #0x18]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1a]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1c]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	ldr r1, _0806E400 @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	movs r4, #1
	rsbs r4, r4, #0
	ldr r0, _0806E404 @ =0x0600E000
	mov sb, r0
	movs r1, #0x80
	lsls r1, r1, #4
	mov r8, r1
	adds r0, r4, #0
	mov r1, sb
	mov r2, r8
	bl func_08008EB8
	ldr r2, _0806E408 @ =0x0600E800
	mov sl, r2
	adds r0, r4, #0
	mov r1, sl
	mov r2, r8
	bl func_08008EB8
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	movs r3, #0xc2
	lsls r3, r3, #5
	adds r2, r3, #0
	strh r2, [r1]
	movs r5, #0
	strh r2, [r0]
	adds r0, r6, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _0806E40C @ =0x00001C03
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	ldr r0, _0806E410 @ =0x080F9F70
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r2, _0806E414 @ =0x080F9F74
	ldr r2, [r2]
	bl func_08008E64
	ldr r0, _0806E418 @ =0x00030003
	mov r1, sb
	mov r2, r8
	bl func_08008EB8
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x1c]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x1e]
	movs r0, #3
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	mov r0, sl
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl func_08051320
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x18]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x1a]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x14]
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r5, [r1]
	strh r5, [r0, #0x16]
	ldr r0, _0806E41C @ =0x080F9F78
	ldr r0, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x20
	bl func_08008E64
	ldr r0, _0806E420 @ =0x05000040
	movs r1, #0xf8
	lsls r1, r1, #2
	mov r8, r1
	strh r1, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, #2
	ldr r2, _0806E424 @ =0x00004218
	mov sb, r2
	strh r2, [r0]
	adds r4, r6, #0
	adds r4, #0x20
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r3, _0806E428 @ =0x05000200
	adds r0, r0, r3
	mov r1, r8
	strh r1, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _0806E42C @ =0x05000202
	adds r0, r0, r2
	strh r5, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r3, _0806E430 @ =0x05000204
	adds r0, r0, r3
	mov r1, sb
	strh r1, [r0]
	add r2, sp, #0x54
	mov sb, r2
	add r3, sp, #0x14
	mov r8, r3
	movs r7, #1
	movs r0, #2
	mov sl, r0
	adds r6, #0x18
_0806E3A8:
	ldr r0, _0806E434 @ =0x080FBD30
	lsls r4, r5, #1
	adds r0, r4, r0
	ldrh r1, [r0]
	add r0, sp, #0x54
	strh r7, [r0]
	mov r3, sl
	mov r2, sb
	strh r3, [r2, #2]
	ldr r0, [sp, #0x54]
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r7, [sp, #8]
	add r1, sp, #0x14
	movs r2, #0
	movs r3, #0
	bl func_0804E5AC
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl func_08007D4C
	adds r1, r0, #0
	adds r1, r1, r4
	lsls r1, r1, #5
	ldr r2, _0806E438 @ =0x06010000
	adds r1, r1, r2
	mov r0, r8
	movs r2, #0x40
	bl func_08008E64
	adds r5, #1
	cmp r5, #0x2a
	ble _0806E3A8
	add sp, #0x58
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806E400: .4byte 0x06007FE0
_0806E404: .4byte 0x0600E000
_0806E408: .4byte 0x0600E800
_0806E40C: .4byte 0x00001C03
_0806E410: .4byte 0x080F9F70
_0806E414: .4byte 0x080F9F74
_0806E418: .4byte 0x00030003
_0806E41C: .4byte 0x080F9F78
_0806E420: .4byte 0x05000040
_0806E424: .4byte 0x00004218
_0806E428: .4byte 0x05000200
_0806E42C: .4byte 0x05000202
_0806E430: .4byte 0x05000204
_0806E434: .4byte 0x080FBD30
_0806E438: .4byte 0x06010000

	thumb_func_start func_0806E43C
func_0806E43C: @ 0x0806E43C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	ldr r0, _0806E550 @ =0x080F9F78
	ldr r4, [r0]
	mov r5, r8
	adds r5, #0x30
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_080074C0
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r0, _0806E554 @ =0x05000200
	adds r1, r1, r0
	adds r0, r4, #0
	movs r2, #0x20
	bl func_08008E64
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r1, _0806E558 @ =0x0500020E
	adds r0, r0, r1
	ldr r2, _0806E55C @ =0x0000027F
	adds r1, r2, #0
	strh r1, [r0]
	mov r6, r8
	adds r6, #0x3c
	movs r0, #0
	adds r1, r6, #0
	movs r2, #8
	bl func_08008EB8
	mov r3, r8
	adds r3, #0x3f
	ldrb r2, [r3]
	movs r1, #0x3f
	adds r0, r1, #0
	ands r0, r2
	movs r2, #0x40
	orrs r0, r2
	strb r0, [r3]
	mov r2, r8
	adds r2, #0x3d
	ldrb r0, [r2]
	ands r1, r0
	movs r0, #0xd
	rsbs r0, r0, #0
	ands r1, r0
	movs r0, #4
	orrs r1, r0
	strb r1, [r2]
	mov r4, r8
	adds r4, #0x28
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r3, r8
	adds r3, #0x40
	ldr r2, _0806E560 @ =0x000003FF
	adds r1, r2, #0
	ands r0, r1
	ldrh r2, [r3]
	ldr r1, _0806E564 @ =0xFFFFFC00
	ands r1, r2
	orrs r1, r0
	strh r1, [r3]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_080074C0
	mov r3, r8
	adds r3, #0x41
	lsls r0, r0, #4
	ldrb r2, [r3]
	movs r1, #0xf
	ands r1, r2
	orrs r1, r0
	movs r0, #0xc
	orrs r1, r0
	strb r1, [r3]
	movs r7, #0
	mov sl, r6
	movs r0, #0x38
	add r0, r8
	mov sb, r0
_0806E4F6:
	movs r5, #0
	adds r6, r7, #1
_0806E4FA:
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r0, r0, r7
	lsls r0, r0, #5
	lsls r1, r5, #2
	adds r0, r0, r1
	ldr r1, _0806E568 @ =0x06010000
	adds r0, r0, r1
	ldr r1, _0806E56C @ =0x77777777
	str r1, [r0]
	adds r5, #1
	cmp r5, #7
	ble _0806E4FA
	adds r7, r6, #0
	cmp r7, #7
	ble _0806E4F6
	mov r2, sb
	movs r1, #0
	ldrsb r1, [r2, r1]
	lsls r1, r1, #4
	ldr r2, _0806E570 @ =0x000001FF
	adds r0, r2, #0
	ands r1, r0
	mov r0, r8
	ldrh r2, [r0, #0x3e]
	ldr r0, _0806E574 @ =0xFFFFFE00
	ands r0, r2
	orrs r0, r1
	mov r1, r8
	strh r0, [r1, #0x3e]
	movs r0, #0x28
	mov r2, sl
	strb r0, [r2]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806E550: .4byte 0x080F9F78
_0806E554: .4byte 0x05000200
_0806E558: .4byte 0x0500020E
_0806E55C: .4byte 0x0000027F
_0806E560: .4byte 0x000003FF
_0806E564: .4byte 0xFFFFFC00
_0806E568: .4byte 0x06010000
_0806E56C: .4byte 0x77777777
_0806E570: .4byte 0x000001FF
_0806E574: .4byte 0xFFFFFE00

	thumb_func_start func_0806E578
func_0806E578: @ 0x0806E578
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r6, r0, #0
	ldr r1, _0806E5A8 @ =0x00000446
	adds r0, r6, r1
	movs r1, #0
	strh r1, [r0]
	ldr r2, _0806E5AC @ =0x00000449
	adds r0, r6, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #4
	beq _0806E5C8
	cmp r0, #4
	bgt _0806E5B0
	cmp r0, #0
	beq _0806E5B6
	b _0806E5EC
	.align 2, 0
_0806E5A8: .4byte 0x00000446
_0806E5AC: .4byte 0x00000449
_0806E5B0:
	cmp r0, #8
	beq _0806E5DA
	b _0806E5EC
_0806E5B6:
	movs r1, #0xf
	add r0, sp, #0x18
_0806E5BA:
	str r1, [r0]
	subs r1, #1
	subs r0, #4
	add r2, sp, #4
	cmp r0, r2
	bge _0806E5BA
	b _0806E5FC
_0806E5C8:
	movs r1, #0x15
	add r0, sp, #0x18
_0806E5CC:
	str r1, [r0]
	subs r1, #1
	subs r0, #4
	add r2, sp, #4
	cmp r0, r2
	bge _0806E5CC
	b _0806E5FC
_0806E5DA:
	movs r1, #0x1b
	add r0, sp, #0x18
_0806E5DE:
	str r1, [r0]
	subs r1, #1
	subs r0, #4
	add r2, sp, #4
	cmp r0, r2
	bge _0806E5DE
	b _0806E5FC
_0806E5EC:
	movs r1, #0x21
	add r0, sp, #0x18
_0806E5F0:
	str r1, [r0]
	subs r1, #1
	subs r0, #4
	add r2, sp, #4
	cmp r0, r2
	bge _0806E5F0
_0806E5FC:
	add r4, sp, #4
	ldr r1, _0806E788 @ =0x0000044A
	adds r0, r6, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xa
	bl __divsi3
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0806E618
	movs r0, #0x1a
_0806E618:
	str r0, [r4, #0x18]
	ldr r2, _0806E788 @ =0x0000044A
	adds r0, r6, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp, #0x20]
	add r7, sp, #4
	movs r5, #0x78
	movs r0, #1
	mov r8, r0
	movs r4, #5
_0806E63A:
	ldm r7!, {r3}
	mov r1, r8
	str r1, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #8
	bl func_0806E78C
	adds r5, #8
	subs r4, #1
	cmp r4, #0
	bge _0806E63A
	ldr r3, [sp, #0x1c]
	movs r4, #1
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #0xc0
	movs r2, #8
	bl func_0806E78C
	ldr r3, [sp, #0x20]
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #0xc8
	movs r2, #8
	bl func_0806E78C
	movs r1, #0
_0806E672:
	movs r2, #0
	mov sb, r2
	lsls r0, r1, #3
	adds r2, r1, #1
	mov sl, r2
	adds r0, r0, r1
	lsls r5, r0, #1
	movs r0, #0x18
	mov r8, r0
	movs r7, #0x10
_0806E686:
	cmp r4, #9
	bls _0806E6A8
	adds r0, r4, #0
	movs r1, #0xa
	bl func_080D0EDA
	adds r3, r0, #0
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	movs r1, #3
	str r1, [sp]
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	adds r2, #0x40
	bl func_0806E78C
_0806E6A8:
	adds r0, r4, #0
	movs r1, #0xa
	bl __umodsi3
	adds r3, r0, #0
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	movs r2, #3
	str r2, [sp]
	adds r0, r6, #0
	mov r1, r8
	adds r2, r5, #0
	adds r2, #0x40
	bl func_0806E78C
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x1e
	bhi _0806E6E0
	movs r0, #0x20
	add r8, r0
	adds r7, #0x20
	movs r1, #1
	add sb, r1
	mov r2, sb
	cmp r2, #6
	ble _0806E686
_0806E6E0:
	mov r1, sl
	cmp r1, #4
	ble _0806E672
	movs r4, #0
	movs r5, #3
_0806E6EA:
	lsls r1, r4, #3
	adds r3, r4, #0
	adds r3, #0xa
	str r5, [sp]
	adds r0, r6, #0
	movs r2, #0x28
	bl func_0806E78C
	adds r4, #1
	cmp r4, #5
	ble _0806E6EA
	movs r4, #0
	movs r7, #3
	movs r5, #0x40
_0806E706:
	adds r3, r4, #0
	adds r3, #0x10
	str r7, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0x28
	bl func_0806E78C
	adds r5, #8
	adds r4, #1
	cmp r4, #5
	ble _0806E706
	movs r4, #0
	movs r7, #3
	movs r5, #0x80
_0806E724:
	adds r3, r4, #0
	adds r3, #0x16
	str r7, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0x28
	bl func_0806E78C
	adds r5, #8
	adds r4, #1
	cmp r4, #5
	ble _0806E724
	movs r4, #0
	movs r7, #3
	movs r5, #0xc0
_0806E742:
	adds r3, r4, #0
	adds r3, #0x1c
	str r7, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0x28
	bl func_0806E78C
	adds r5, #8
	adds r4, #1
	cmp r4, #5
	ble _0806E742
	movs r4, #0
	movs r7, #3
	movs r5, #8
_0806E760:
	adds r3, r4, #0
	adds r3, #0x23
	str r7, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #8
	bl func_0806E78C
	adds r5, #8
	adds r4, #1
	cmp r4, #7
	ble _0806E760
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806E788: .4byte 0x0000044A

	thumb_func_start func_0806E78C
func_0806E78C: @ 0x0806E78C
	push {r4, r5, r6, lr}
	mov ip, r0
	ldr r6, [sp, #0x10]
	ldr r5, _0806E7DC @ =0x00000446
	add r5, ip
	movs r0, #0
	ldrsh r4, [r5, r0]
	lsls r4, r4, #3
	mov r0, ip
	adds r0, #0x46
	adds r0, r0, r4
	strh r1, [r0]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #3
	mov r0, ip
	adds r0, #0x48
	adds r0, r0, r1
	strh r2, [r0]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #3
	mov r0, ip
	adds r0, #0x4a
	adds r0, r0, r1
	strh r3, [r0]
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #3
	mov r0, ip
	adds r0, #0x4c
	adds r0, r0, r1
	strh r6, [r0]
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806E7DC: .4byte 0x00000446

	thumb_func_start func_0806E7E0
func_0806E7E0: @ 0x0806E7E0
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r1, _0806E998 @ =0xFFFFFCFF
	ldr r0, [sp]
	ands r0, r1
	ldr r1, _0806E99C @ =0xFFFFF3FF
	ands r0, r1
	ldr r1, _0806E9A0 @ =0xFFFFDFFF
	ands r0, r1
	ldr r1, _0806E9A4 @ =0xFFFF3FFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	ldr r1, _0806E9A8 @ =0xF1FFFFFF
	ands r0, r1
	ldr r1, _0806E9AC @ =0xEFFFFFFF
	ands r0, r1
	ldr r1, _0806E9B0 @ =0xDFFFFFFF
	ands r0, r1
	ldr r1, _0806E9B4 @ =0x3FFFFFFF
	ands r0, r1
	str r0, [sp]
	adds r0, r5, #0
	adds r0, #0x20
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _0806E9B8 @ =0xFFFF0FFF
	ldr r1, [sp, #4]
	ands r1, r2
	orrs r1, r0
	ldr r0, _0806E9BC @ =0x0000FFFF
	ands r1, r0
	str r1, [sp, #4]
	movs r1, #0x80
	lsls r1, r1, #5
	ldr r0, [sp]
	orrs r0, r1
	str r0, [sp]
	ldr r1, _0806E9C0 @ =0x00000446
	adds r0, r5, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	subs r7, r0, #1
	cmp r7, #0
	blt _0806E8DA
	mov r6, sp
_0806E84C:
	lsls r4, r7, #3
	adds r0, r5, #0
	adds r0, #0x4c
	adds r0, r0, r4
	ldrh r1, [r0]
	movs r0, #3
	ands r1, r0
	lsls r1, r1, #0xa
	ldr r2, _0806E99C @ =0xFFFFF3FF
	ldr r0, [r6, #4]
	ands r0, r2
	orrs r0, r1
	str r0, [r6, #4]
	adds r0, r5, #0
	adds r0, #0x46
	adds r0, r0, r4
	movs r1, #0
	ldrsh r2, [r0, r1]
	ldr r0, _0806E9C4 @ =0x000001FF
	ands r2, r0
	lsls r2, r2, #0x10
	ldr r0, _0806E9C8 @ =0xFE00FFFF
	ldr r1, [sp]
	ands r1, r0
	orrs r1, r2
	adds r0, r5, #0
	adds r0, #0x48
	adds r0, r0, r4
	ldrb r2, [r0]
	ldr r0, _0806E9CC @ =0xFFFFFF00
	ands r1, r0
	orrs r1, r2
	str r1, [sp]
	adds r0, r5, #0
	adds r0, #0x18
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r5, #0
	adds r1, #0x4a
	adds r1, r1, r4
	movs r2, #0
	ldrsh r1, [r1, r2]
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0806E9D0 @ =0xFFFFFC00
	ldr r1, [r6, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r6, #4]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _0806E8D4
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp]
	str r0, [r1]
	ldrh r0, [r6, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_0806E8D4:
	subs r7, #1
	cmp r7, #0
	bge _0806E84C
_0806E8DA:
	adds r0, r5, #0
	adds r0, #0x44
	ldrb r0, [r0]
	cmp r0, #0
	beq _0806E990
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _0806E908
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r1, [r5, #0x3c]
	str r1, [r0]
	adds r1, r5, #0
	adds r1, #0x40
	ldrh r1, [r1]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r3]
_0806E908:
	adds r0, r5, #0
	adds r0, #0x39
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0806E990
	adds r4, r5, #0
	adds r4, #0x38
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #4
	adds r0, #0x10
	ldr r1, _0806E9C4 @ =0x000001FF
	adds r7, r1, #0
	ands r0, r7
	ldrh r2, [r5, #0x3e]
	ldr r6, _0806E9D4 @ =0xFFFFFE00
	adds r1, r6, #0
	ands r1, r2
	orrs r1, r0
	strh r1, [r5, #0x3e]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _0806E958
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r1, [r5, #0x3c]
	str r1, [r0]
	adds r1, r5, #0
	adds r1, #0x40
	ldrh r1, [r1]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r3]
_0806E958:
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #4
	adds r0, #0x20
	ands r0, r7
	ldrh r2, [r5, #0x3e]
	adds r1, r6, #0
	ands r1, r2
	orrs r1, r0
	strh r1, [r5, #0x3e]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _0806E990
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r1, [r5, #0x3c]
	str r1, [r0]
	adds r1, r5, #0
	adds r1, #0x40
	ldrh r1, [r1]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r3]
_0806E990:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806E998: .4byte 0xFFFFFCFF
_0806E99C: .4byte 0xFFFFF3FF
_0806E9A0: .4byte 0xFFFFDFFF
_0806E9A4: .4byte 0xFFFF3FFF
_0806E9A8: .4byte 0xF1FFFFFF
_0806E9AC: .4byte 0xEFFFFFFF
_0806E9B0: .4byte 0xDFFFFFFF
_0806E9B4: .4byte 0x3FFFFFFF
_0806E9B8: .4byte 0xFFFF0FFF
_0806E9BC: .4byte 0x0000FFFF
_0806E9C0: .4byte 0x00000446
_0806E9C4: .4byte 0x000001FF
_0806E9C8: .4byte 0xFE00FFFF
_0806E9CC: .4byte 0xFFFFFF00
_0806E9D0: .4byte 0xFFFFFC00
_0806E9D4: .4byte 0xFFFFFE00

	thumb_func_start func_0806E9D8
func_0806E9D8: @ 0x0806E9D8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0806E9F8 @ =vtable_unk_080E7AD0
	str r0, [r4]
	ldr r0, _0806E9FC @ =0x00000454
	bl __builtin_new
	adds r1, r5, #0
	bl func_0806D990
	str r0, [r4, #4]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0806E9F8: .4byte vtable_unk_080E7AD0
_0806E9FC: .4byte 0x00000454

	thumb_func_start func_0806EA00
func_0806EA00: @ 0x0806EA00
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0806EA2C @ =vtable_unk_080E7AD0
	str r0, [r4]
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0806EA1C
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0806EA1C:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806EA2C: .4byte vtable_unk_080E7AD0

	thumb_func_start func_0806EA30
func_0806EA30: @ 0x0806EA30
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r1, [r1, #4]
	mov r0, sp
	bl func_0806DB38
	ldr r2, [sp]
	mov r0, sp
	str r0, [sp, #4]
	str r2, [sp, #8]
	adds r1, r0, #0
	movs r0, #0
	str r0, [r1]
	str r2, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _0806EA60
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0806EA60:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0806EA6C
func_0806EA6C: @ 0x0806EA6C
	ldr r0, [r0, #4]
	movs r1, #0x89
	lsls r1, r1, #3
	adds r0, r0, r1
	ldrb r0, [r0]
	bx lr

	thumb_func_start func_0806EA78
func_0806EA78: @ 0x0806EA78
	push {r4, r5, lr}
	sub sp, #0x14
	adds r5, r0, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	adds r0, r5, #0
	bl func_08008918
	adds r1, r0, #0
	add r4, sp, #4
	movs r0, #0
	str r0, [sp, #4]
	str r0, [r4, #4]
	ldr r0, _0806EAC4 @ =vtable_unk_080E5B80
	str r0, [sp, #0xc]
	add r0, sp, #0x10
	bl func_08009300
	ldr r1, _0806EAC8 @ =0x00000889
	add r0, sp, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r4, #0
	bl _call_via_r2
	b _0806EAD8
	.align 2, 0
_0806EAC4: .4byte vtable_unk_080E5B80
_0806EAC8: .4byte 0x00000889
_0806EACC:
	adds r0, r5, #0
	bl func_08070140
	adds r0, r5, #0
	bl func_080087C8
_0806EAD8:
	ldr r1, [sp, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0806EACC
	adds r0, r4, #0
	movs r1, #2
	bl func_080094B8
	add sp, #0x14
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0806EAF4
func_0806EAF4: @ 0x0806EAF4
	push {r4, r5, lr}
	sub sp, #0x14
	adds r5, r0, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	adds r0, r5, #0
	bl func_08008918
	adds r1, r0, #0
	add r4, sp, #4
	movs r0, #0
	str r0, [sp, #4]
	str r0, [r4, #4]
	ldr r0, _0806EB40 @ =vtable_unk_080E5B80
	str r0, [sp, #0xc]
	add r0, sp, #0x10
	bl func_08009300
	ldr r1, _0806EB44 @ =0x00000889
	add r0, sp, #0x10
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r4, #0
	bl _call_via_r2
	b _0806EB54
	.align 2, 0
_0806EB40: .4byte vtable_unk_080E5B80
_0806EB44: .4byte 0x00000889
_0806EB48:
	adds r0, r5, #0
	bl func_08070140
	adds r0, r5, #0
	bl func_080087C8
_0806EB54:
	ldr r1, [sp, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0806EB48
	adds r0, r4, #0
	movs r1, #2
	bl func_080094B8
	add sp, #0x14
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0806EB70
func_0806EB70: @ 0x0806EB70
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x18
	mov r8, r1
	adds r5, r2, #0
	cmp r5, #0
	beq _0806EC1A
	mov r6, sp
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	add r0, sp, #8
	str r4, [r0, #4]
	movs r0, #0xb0
	lsls r0, r0, #5
	bl malloc
	adds r1, r0, #0
	cmp r1, #0
	bne _0806EBA4
	movs r0, #0xb0
	lsls r0, r0, #5
	bl func_080D3BC0
	adds r1, r0, #0
_0806EBA4:
	str r1, [sp]
	str r1, [sp, #4]
	movs r2, #0xb0
	lsls r2, r2, #5
	adds r0, r1, r2
	str r0, [sp, #0xc]
	add r0, sp, #0x14
	strh r4, [r0]
	adds r3, r0, #0
	movs r2, #0xb0
	lsls r2, r2, #4
_0806EBBA:
	ldrh r0, [r3]
	strh r0, [r1]
	subs r2, #1
	adds r1, #2
	cmp r2, #0
	bne _0806EBBA
	str r1, [r6, #4]
	ldr r1, [sp]
	adds r0, r5, #0
	bl func_080D102C
	ldr r3, [sp]
	movs r1, #0
	mov ip, r3
	movs r7, #0x1f
_0806EBD8:
	movs r2, #0
	lsrs r0, r1, #5
	adds r6, r1, #1
	lsls r5, r0, #1
	ands r1, r7
	lsls r0, r1, #6
	movs r1, #0xc0
	lsls r1, r1, #0x13
	adds r4, r0, r1
_0806EBEA:
	lsrs r0, r2, #5
	adds r0, r5, r0
	add r0, r8
	lsls r0, r0, #0xb
	adds r0, r0, r4
	adds r1, r2, #0
	ands r1, r7
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrh r1, [r3]
	strh r1, [r0]
	adds r3, #2
	adds r2, #1
	cmp r2, #0x3f
	bls _0806EBEA
	adds r1, r6, #0
	cmp r1, #0x2b
	bls _0806EBD8
	mov r2, ip
	cmp r2, #0
	beq _0806EC1A
	mov r0, ip
	bl free
_0806EC1A:
	add sp, #0x18
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0806EC28
func_0806EC28: @ 0x0806EC28
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sl, r1
	mov sb, r2
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #0x24]
	ldr r4, [sp, #0x28]
	adds r7, r2, r0
	adds r1, r1, r3
	mov r8, r1
	cmp r3, r8
	bhs _0806EC84
_0806EC46:
	mov r2, sb
	adds r0, r3, #1
	mov ip, r0
	cmp r2, r7
	bhs _0806EC7E
	lsrs r0, r3, #5
	lsls r5, r0, #1
	movs r6, #0x1f
	ands r3, r6
	lsls r0, r3, #6
	movs r1, #0xc0
	lsls r1, r1, #0x13
	adds r3, r0, r1
_0806EC60:
	lsrs r0, r2, #5
	adds r0, r5, r0
	add r0, sl
	lsls r0, r0, #0xb
	adds r0, r0, r3
	adds r1, r2, #0
	ands r1, r6
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrh r1, [r4]
	strh r1, [r0]
	adds r4, #2
	adds r2, #1
	cmp r2, r7
	blo _0806EC60
_0806EC7E:
	mov r3, ip
	cmp r3, r8
	blo _0806EC46
_0806EC84:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0806EC94
func_0806EC94: @ 0x0806EC94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	mov sb, r0
	ldr r0, [r0, #8]
	adds r0, #0x10
	bl func_0800E324
	movs r1, #0
	cmp r0, #3
	bne _0806ECB2
	movs r1, #1
_0806ECB2:
	str r1, [sp, #0xc]
	ldr r0, _0806ED6C @ =0x085275D0
	cmp r1, #0
	beq _0806ECBC
	ldr r0, _0806ED70 @ =0x0852AA6C
_0806ECBC:
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl func_080D102C
	ldr r0, _0806ED74 @ =0x08529794
	ldr r1, [sp, #0xc]
	cmp r1, #0
	beq _0806ECCE
	ldr r0, _0806ED78 @ =0x0852CA40
_0806ECCE:
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #2
	bl func_08008E64
	ldr r2, _0806ED7C @ =0x08527238
	ldr r3, [sp, #0xc]
	cmp r3, #0
	beq _0806ECE4
	ldr r2, _0806ED80 @ =0x0852A6D8
_0806ECE4:
	mov r0, sb
	movs r1, #0x1c
	bl func_0806EB70
	ldr r2, _0806ED84 @ =0x08527348
	ldr r0, [sp, #0xc]
	cmp r0, #0
	beq _0806ECF6
	ldr r2, _0806ED88 @ =0x0852A7EC
_0806ECF6:
	mov r0, sb
	movs r1, #0x18
	bl func_0806EB70
	ldr r2, _0806ED8C @ =0x08527520
	ldr r1, [sp, #0xc]
	cmp r1, #0
	beq _0806ED08
	ldr r2, _0806ED90 @ =0x0852A9BC
_0806ED08:
	mov r0, sb
	movs r1, #0x14
	bl func_0806EB70
	movs r1, #0
	ldr r2, [sp, #0xc]
	lsls r2, r2, #2
	str r2, [sp, #0x1c]
	ldr r3, [sp, #0xc]
	lsls r3, r3, #1
	str r3, [sp, #0x18]
	mov r2, sb
	ldr r0, [r2, #8]
	ldr r3, _0806ED94 @ =0x000009DC
	adds r3, r0, r3
	str r3, [sp, #0x10]
	movs r0, #0x1f
	mov ip, r0
_0806ED2C:
	movs r2, #0
	mov r8, r2
	adds r7, r1, #0
	adds r7, #0xb
	adds r3, r1, #1
	str r3, [sp, #0x14]
	lsrs r0, r7, #5
	lsls r5, r0, #1
	mov sl, r5
	adds r0, r7, #0
	mov r2, ip
	ands r0, r2
	lsls r0, r0, #6
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r6, r0, r3
	movs r0, #0xac
	muls r0, r1, r0
	ldr r1, [sp, #0x10]
	adds r4, r0, r1
_0806ED54:
	mov r2, r8
	adds r2, #0x11
	ldr r0, [r4]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	beq _0806ED98
	cmp r0, #1
	ble _0806EDE2
	cmp r0, #2
	beq _0806EDC8
	b _0806EDE2
	.align 2, 0
_0806ED6C: .4byte 0x085275D0
_0806ED70: .4byte 0x0852AA6C
_0806ED74: .4byte 0x08529794
_0806ED78: .4byte 0x0852CA40
_0806ED7C: .4byte 0x08527238
_0806ED80: .4byte 0x0852A6D8
_0806ED84: .4byte 0x08527348
_0806ED88: .4byte 0x0852A7EC
_0806ED8C: .4byte 0x08527520
_0806ED90: .4byte 0x0852A9BC
_0806ED94: .4byte 0x000009DC
_0806ED98:
	lsrs r1, r2, #5
	add r1, sl
	adds r1, #0x1c
	lsls r1, r1, #0xb
	adds r0, r7, #0
	mov r3, ip
	ands r0, r3
	lsls r0, r0, #6
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r0, r0, r3
	adds r1, r1, r0
	adds r0, r2, #0
	mov r3, ip
	ands r0, r3
	lsls r0, r0, #1
	adds r1, r1, r0
	ldr r3, _0806EDC4 @ =0x00009186
	adds r0, r3, #0
	strh r0, [r1]
	b _0806EDE2
	.align 2, 0
_0806EDC4: .4byte 0x00009186
_0806EDC8:
	lsrs r0, r2, #5
	adds r0, r5, r0
	adds r0, #0x1c
	lsls r0, r0, #0xb
	adds r0, r0, r6
	adds r1, r2, #0
	mov r3, ip
	ands r1, r3
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r3, _0806EF84 @ =0x00009187
	adds r1, r3, #0
	strh r1, [r0]
_0806EDE2:
	ldr r1, [r4]
	lsls r0, r1, #0x14
	lsrs r0, r0, #0x1c
	cmp r0, #8
	bgt _0806EE14
	cmp r0, #1
	blt _0806EE14
	lsls r0, r1, #0x18
	lsrs r3, r0, #0x1a
	cmp r3, #0x26
	bhi _0806EE14
	lsrs r1, r2, #5
	adds r1, r5, r1
	adds r1, #0x18
	lsls r1, r1, #0xb
	adds r1, r1, r6
	mov r0, ip
	ands r2, r0
	lsls r0, r2, #1
	adds r1, r1, r0
	ldr r2, _0806EF88 @ =0x080FBDA4
	lsls r0, r3, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
_0806EE14:
	adds r4, #4
	movs r1, #1
	add r8, r1
	mov r2, r8
	cmp r2, #0x2a
	bls _0806ED54
	ldr r1, [sp, #0x14]
	cmp r1, #0x18
	bhi _0806EE28
	b _0806ED2C
_0806EE28:
	mov r3, sb
	ldr r0, [r3, #8]
	movs r6, #0xfa
	lsls r6, r6, #1
	adds r0, r0, r6
	bl GetUpgradeLevel__C9FarmHouse
	lsls r0, r0, #4
	ldr r1, _0806EF8C @ =0x080FBDF4
	adds r0, r0, r1
	ldrh r2, [r0, #8]
	ldrh r3, [r0, #0xa]
	ldrb r1, [r0, #0xc]
	str r1, [sp]
	ldrb r1, [r0, #0xd]
	str r1, [sp, #4]
	ldr r1, [sp, #0x1c]
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #8]
	mov r0, sb
	movs r1, #0x18
	bl func_0806EC28
	mov r2, sb
	ldr r0, [r2, #8]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl GetUpgradeLevel__C4Coop
	lsls r0, r0, #4
	ldr r1, _0806EF90 @ =0x080FBE24
	adds r0, r0, r1
	ldrh r2, [r0, #8]
	ldrh r3, [r0, #0xa]
	ldrb r1, [r0, #0xc]
	str r1, [sp]
	ldrb r1, [r0, #0xd]
	str r1, [sp, #4]
	ldr r1, [sp, #0x1c]
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #8]
	mov r0, sb
	movs r1, #0x18
	bl func_0806EC28
	mov r2, sb
	ldr r0, [r2, #8]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	bl GetUpgradeLevel__C4Barn
	lsls r0, r0, #4
	ldr r1, _0806EF94 @ =0x080FBE44
	adds r0, r0, r1
	ldrh r2, [r0, #8]
	ldrh r3, [r0, #0xa]
	ldrb r1, [r0, #0xc]
	str r1, [sp]
	ldrb r1, [r0, #0xd]
	str r1, [sp, #4]
	ldr r1, [sp, #0x1c]
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #8]
	mov r0, sb
	movs r1, #0x18
	bl func_0806EC28
	mov r2, sb
	ldr r0, [r2, #8]
	adds r0, r0, r6
	bl GetDoghouseStyle__C9FarmHouse
	adds r4, r0, #0
	ldr r1, _0806EF98 @ =0x08529994
	ldr r3, [sp, #0xc]
	cmp r3, #0
	beq _0806EECE
	ldr r1, _0806EF9C @ =0x0852CC40
_0806EECE:
	adds r0, r1, #4
	ldrh r2, [r1]
	adds r1, r2, #0
	muls r1, r4, r1
	lsls r1, r1, #5
	adds r0, r0, r1
	ldr r1, _0806EFA0 @ =0x060002C0
	lsls r2, r2, #5
	bl func_08008E64
	movs r5, #2
	str r5, [sp]
	str r5, [sp, #4]
	ldr r0, _0806EFA4 @ =0x080FBE64
	adds r0, r4, r0
	ldrb r0, [r0]
	str r0, [sp, #8]
	mov r0, sb
	movs r1, #0x14
	movs r2, #0x18
	movs r3, #3
	bl func_080700B8
	mov r1, sb
	ldr r0, [r1, #8]
	adds r0, r0, r6
	bl GetMailboxStyle__C9FarmHouse
	adds r4, r0, #0
	ldr r1, _0806EFA8 @ =0x08529BA8
	ldr r2, [sp, #0xc]
	cmp r2, #0
	beq _0806EF12
	ldr r1, _0806EFAC @ =0x0852CE54
_0806EF12:
	adds r0, r1, #4
	ldrh r2, [r1]
	adds r1, r2, #0
	muls r1, r4, r1
	lsls r1, r1, #5
	adds r0, r0, r1
	ldr r1, _0806EFB0 @ =0x06000340
	lsls r2, r2, #5
	bl func_08008E64
	movs r0, #1
	str r0, [sp]
	str r5, [sp, #4]
	ldr r1, _0806EFB4 @ =0x080FBE67
	ldr r3, [sp, #0x18]
	ldr r2, [sp, #0xc]
	adds r0, r3, r2
	adds r0, r4, r0
	adds r0, r0, r1
	ldrb r0, [r0]
	str r0, [sp, #8]
	mov r0, sb
	movs r1, #0x14
	movs r2, #0x11
	movs r3, #3
	bl func_080700B8
	ldr r4, _0806EFB8 @ =0x08529DA4
	ldr r3, [sp, #0xc]
	cmp r3, #0
	beq _0806EF52
	ldr r4, _0806EFBC @ =0x0852D050
_0806EF52:
	mov r1, sb
	ldr r0, [r1, #8]
	adds r0, r0, r6
	bl GetWindowStyle__C9FarmHouse
	adds r1, r0, #0
	adds r0, r4, #4
	ldrh r2, [r4]
	muls r1, r2, r1
	lsls r1, r1, #5
	adds r0, r0, r1
	movs r1, #0xc0
	lsls r1, r1, #0x13
	lsls r2, r2, #5
	bl func_08008E64
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806EF84: .4byte 0x00009187
_0806EF88: .4byte 0x080FBDA4
_0806EF8C: .4byte 0x080FBDF4
_0806EF90: .4byte 0x080FBE24
_0806EF94: .4byte 0x080FBE44
_0806EF98: .4byte 0x08529994
_0806EF9C: .4byte 0x0852CC40
_0806EFA0: .4byte 0x060002C0
_0806EFA4: .4byte 0x080FBE64
_0806EFA8: .4byte 0x08529BA8
_0806EFAC: .4byte 0x0852CE54
_0806EFB0: .4byte 0x06000340
_0806EFB4: .4byte 0x080FBE67
_0806EFB8: .4byte 0x08529DA4
_0806EFBC: .4byte 0x0852D050

	thumb_func_start func_0806EFC0
func_0806EFC0: @ 0x0806EFC0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	adds r5, r0, #0
	ldr r0, [r5, #0x10]
	adds r7, r0, r2
	cmp r7, #0
	bge _0806EFDA
	movs r7, #0
	b _0806EFE4
_0806EFDA:
	movs r0, #0xc0
	lsls r0, r0, #8
	cmp r7, r0
	ble _0806EFE4
	adds r7, r0, #0
_0806EFE4:
	ldr r0, [r5, #0x14]
	adds r6, r0, r1
	cmp r6, #0
	bge _0806EFF0
	movs r6, #0
	b _0806EFFA
_0806EFF0:
	movs r0, #0x88
	lsls r0, r0, #9
	cmp r6, r0
	ble _0806EFFA
	adds r6, r0, #0
_0806EFFA:
	adds r0, r5, #0
	bl func_08008918
	adds r3, r0, #0
	adds r0, r7, #0
	cmp r7, #0
	bge _0806F00A
	adds r0, #0xff
_0806F00A:
	lsls r0, r0, #8
	lsrs r2, r0, #0x10
	adds r1, r6, #0
	cmp r6, #0
	bge _0806F016
	adds r1, #0xff
_0806F016:
	lsls r1, r1, #8
	lsrs r1, r1, #0x10
	add r0, sp, #4
	strh r2, [r0]
	strh r2, [r3, #0x1e]
	strh r2, [r0]
	strh r2, [r3, #0x1a]
	strh r2, [r0]
	strh r2, [r3, #0x16]
	strh r1, [r0]
	strh r1, [r3, #0x1c]
	strh r1, [r0]
	strh r1, [r3, #0x18]
	strh r1, [r0]
	strh r1, [r3, #0x14]
	adds r4, r5, #0
	adds r4, #0x50
	adds r0, r4, #0
	bl func_0805E8F0
	movs r0, #0x64
	adds r0, r0, r5
	mov sl, r0
	bl func_0805E8F0
	adds r0, r5, #0
	adds r0, #0x78
	str r0, [sp, #0x28]
	bl func_0805E8F0
	movs r0, #0x8c
	adds r0, r0, r5
	mov sb, r0
	bl func_0805E8F0
	adds r0, r5, #0
	bl func_08008920
	mov r8, r0
	cmp r7, #0
	ble _0806F09C
	ldr r1, [r5, #0x50]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [r5, #0x54]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #8
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #8
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	adds r0, r5, #0
	adds r0, #0x18
	movs r1, #0
	str r1, [sp]
	mov r1, r8
	adds r2, r4, #0
	movs r3, #0x74
	bl func_08075AE8
_0806F09C:
	ldr r0, _0806F160 @ =0x0000BFFF
	cmp r7, r0
	bgt _0806F0D6
	ldr r1, [r5, #0x64]
	ldr r3, [r1]
	mov r0, sl
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r5, #0x68]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #4
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	adds r0, r5, #0
	adds r0, #0x18
	movs r1, #0x98
	str r1, [sp]
	mov r1, r8
	add r2, sp, #4
	movs r3, #0x74
	bl func_08075AE8
_0806F0D6:
	ldr r0, _0806F164 @ =0x00010FFF
	cmp r6, r0
	bgt _0806F110
	ldr r1, [r5, #0x78]
	ldr r3, [r1]
	ldr r0, [sp, #0x28]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [r5, #0x7c]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #4
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	adds r0, r5, #0
	adds r0, #0x18
	movs r1, #0x4c
	str r1, [sp]
	mov r1, r8
	add r2, sp, #4
	movs r3, #0xe8
	bl func_08075AE8
_0806F110:
	cmp r6, #0
	ble _0806F14C
	mov r0, sb
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	adds r0, r5, #0
	adds r0, #0x90
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #4
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	adds r0, r5, #0
	adds r0, #0x18
	movs r1, #0x4c
	str r1, [sp]
	mov r1, r8
	add r2, sp, #4
	movs r3, #0
	bl func_08075AE8
_0806F14C:
	str r7, [r5, #0x10]
	str r6, [r5, #0x14]
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806F160: .4byte 0x0000BFFF
_0806F164: .4byte 0x00010FFF

	thumb_func_start func_0806F168
func_0806F168: @ 0x0806F168
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xb0
	adds r7, r0, #0
	adds r4, r2, #0
	ldr r2, [sp, #0xd0]
	adds r0, #0xa0
	ldrh r0, [r0, #0x20]
	cmp r2, r0
	blo _0806F186
	bl _0806FB92
_0806F186:
	subs r0, r1, #2
	cmp r0, #0x23
	bls _0806F190
	bl _0806FB92
_0806F190:
	lsls r0, r0, #2
	ldr r1, _0806F19C @ =_0806F1A0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806F19C: .4byte _0806F1A0
_0806F1A0: @ jump table
	.4byte _0806F230 @ case 0
	.4byte _0806FB92 @ case 1
	.4byte _0806FB92 @ case 2
	.4byte _0806FB92 @ case 3
	.4byte _0806FB92 @ case 4
	.4byte _0806FB92 @ case 5
	.4byte _0806FB92 @ case 6
	.4byte _0806F976 @ case 7
	.4byte _0806FB92 @ case 8
	.4byte _0806FB92 @ case 9
	.4byte _0806FB92 @ case 10
	.4byte _0806FB92 @ case 11
	.4byte _0806FB92 @ case 12
	.4byte _0806FB92 @ case 13
	.4byte _0806FB92 @ case 14
	.4byte _0806F592 @ case 15
	.4byte _0806FB92 @ case 16
	.4byte _0806FB92 @ case 17
	.4byte _0806FB92 @ case 18
	.4byte _0806FB92 @ case 19
	.4byte _0806FB92 @ case 20
	.4byte _0806FB92 @ case 21
	.4byte _0806FB92 @ case 22
	.4byte _0806FB92 @ case 23
	.4byte _0806FB92 @ case 24
	.4byte _0806FB92 @ case 25
	.4byte _0806FB92 @ case 26
	.4byte _0806F39A @ case 27
	.4byte _0806FB92 @ case 28
	.4byte _0806FB92 @ case 29
	.4byte _0806FB92 @ case 30
	.4byte _0806FB92 @ case 31
	.4byte _0806FB92 @ case 32
	.4byte _0806FB92 @ case 33
	.4byte _0806FB92 @ case 34
	.4byte _0806F77E @ case 35
_0806F230:
	lsrs r0, r4, #0x1f
	adds r0, r4, r0
	asrs r6, r0, #1
	lsrs r0, r3, #0x1f
	adds r0, r3, r0
	asrs r5, r0, #1
	cmp r6, #0
	bge _0806F244
	movs r6, #0
	b _0806F24E
_0806F244:
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r6, r0
	bls _0806F24E
	adds r6, r0, #0
_0806F24E:
	cmp r5, #0
	bge _0806F256
	movs r5, #0
	b _0806F260
_0806F256:
	movs r0, #0xb0
	lsls r0, r0, #1
	cmp r5, r0
	bls _0806F260
	adds r5, r0, #0
_0806F260:
	add r4, sp, #0x1c
	adds r1, r7, #0
	adds r1, #0xa0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r4, #0
	bl func_0805E824
	str r6, [sp]
	str r5, [sp, #4]
	add r0, sp, #8
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r5}
	stm r0!, {r1, r5}
	adds r6, r7, #0
	adds r6, #0xd0
	mov sb, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0806F2AA
	cmp r1, #0
	beq _0806F2A0
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806F2A0:
	ldr r0, [r6, #4]
	adds r0, #0x1c
	str r0, [r6, #4]
	bl _0806FB92
_0806F2AA:
	str r1, [sp, #0xa8]
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r2, [r6]
	adds r3, r1, #0
	subs r1, r3, r2
	ldr r0, _0806F2F4 @ =0xB6DB6DB7
	muls r0, r1, r0
	asrs r4, r0, #2
	str r4, [sp, #0x30]
	add r3, sp, #0x34
	add r0, sp, #0x30
	adds r1, r2, #0
	cmp r4, #1
	bhs _0806F2CA
	adds r0, r3, #0
_0806F2CA:
	ldr r0, [r0]
	adds r4, r4, r0
	mov r8, r4
	cmp r4, #0
	beq _0806F2F8
	lsls r4, r4, #3
	mov r5, r8
	subs r0, r4, r5
	lsls r5, r0, #2
	adds r0, r5, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _0806F2EE
	adds r0, r5, #0
	bl func_080D3BC0
_0806F2EE:
	ldr r1, [r6]
	b _0806F2FC
	.align 2, 0
_0806F2F4: .4byte 0xB6DB6DB7
_0806F2F8:
	movs r0, #0
	mov sl, r0
_0806F2FC:
	adds r4, r0, #0
	str r4, [sp, #0xac]
	adds r2, r1, #0
	adds r3, r4, #0
	ldr r7, [sp, #0xa8]
	cmp r2, r7
	beq _0806F328
_0806F30A:
	cmp r3, #0
	beq _0806F31E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806F31E:
	adds r2, #0x1c
	adds r3, #0x1c
	ldr r0, [sp, #0xa8]
	cmp r2, r0
	bne _0806F30A
_0806F328:
	adds r4, r3, #0
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _0806F348
	cmp r4, #0
	beq _0806F344
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806F344:
	adds r4, #0x1c
	b _0806F36E
_0806F348:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0806F36C
_0806F350:
	cmp r2, #0
	beq _0806F364
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806F364:
	subs r3, #1
	adds r2, #0x1c
	cmp r3, #0
	bne _0806F350
_0806F36C:
	adds r4, r2, #0
_0806F36E:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _0806F37E
_0806F378:
	adds r0, #0x1c
	cmp r0, r3
	bne _0806F378
_0806F37E:
	cmp r1, #0
	beq _0806F388
	adds r0, r1, #0
	bl free
_0806F388:
	mov r1, sl
	mov r2, r8
	subs r0, r1, r2
	lsls r0, r0, #2
	ldr r3, [sp, #0xac]
	adds r0, r0, r3
	str r3, [r6]
	bl sub_0806FB8E
_0806F39A:
	adds r5, r7, #0
	adds r5, #0xe0
	str r2, [sp, #0x38]
	cmp r2, #0x10
	bls _0806F3A8
	bl _0806FB92
_0806F3A8:
	lsls r0, r2, #2
	ldr r1, _0806F3B4 @ =_0806F3B8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806F3B4: .4byte _0806F3B8
_0806F3B8: @ jump table
	.4byte _0806F3FC @ case 0
	.4byte _0806F3FC @ case 1
	.4byte _0806F3FC @ case 2
	.4byte _0806F3FC @ case 3
	.4byte _0806F3FC @ case 4
	.4byte _0806F50E @ case 5
	.4byte _0806F50E @ case 6
	.4byte _0806F48A @ case 7
	.4byte _0806F48A @ case 8
	.4byte _0806F50E @ case 9
	.4byte _0806F3FC @ case 10
	.4byte _0806F3FC @ case 11
	.4byte _0806F3FC @ case 12
	.4byte _0806F3FC @ case 13
	.4byte _0806F3FC @ case 14
	.4byte _0806F3FC @ case 15
	.4byte _0806F3FC @ case 16
_0806F3FC:
	add r4, sp, #0x38
	mov sb, r4
	ldr r4, [r5, #4]
	ldr r0, [r5, #0xc]
	adds r1, r4, #0
	cmp r1, r0
	beq _0806F414
	cmp r1, #0
	bne _0806F410
	b _0806F9F0
_0806F410:
	ldr r0, [sp, #0x38]
	b _0806F9EE
_0806F414:
	adds r7, r4, #0
	movs r0, #1
	str r0, [sp, #0x40]
	ldr r0, [r5]
	subs r0, r7, r0
	asrs r4, r0, #2
	str r4, [sp, #0x3c]
	add r1, sp, #0x40
	add r0, sp, #0x3c
	cmp r4, #1
	bhs _0806F42C
	adds r0, r1, #0
_0806F42C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806F44A
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806F44E
	mov r0, r8
	bl func_080D3BC0
	b _0806F44E
_0806F44A:
	movs r0, #0
	mov r8, r0
_0806F44E:
	adds r6, r0, #0
	ldr r1, [r5]
	cmp r7, r1
	beq _0806F462
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806F464
_0806F462:
	adds r0, r6, #0
_0806F464:
	adds r4, r0, #0
	ldr r1, [sp, #0x40]
	ldr r2, [r5]
	cmp r1, #0
	beq _0806F47A
_0806F46E:
	mov r7, sb
	ldr r0, [r7]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806F46E
_0806F47A:
	cmp r2, #0
	beq _0806F484
	adds r0, r2, #0
	bl free
_0806F484:
	mov r1, r8
	adds r0, r1, r6
	b _0806FA70
_0806F48A:
	adds r6, r5, #0
	adds r6, #0x10
	add r2, sp, #0x38
	mov sb, r2
	ldr r4, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r4, r0
	beq _0806F4A4
	cmp r4, #0
	bne _0806F4A0
	b _0806FB0A
_0806F4A0:
	ldr r0, [sp, #0x38]
	b _0806FB08
_0806F4A4:
	adds r7, r4, #0
	movs r0, #1
	str r0, [sp, #0x48]
	ldr r0, [r5, #0x10]
	subs r0, r7, r0
	asrs r1, r0, #2
	str r1, [sp, #0x44]
	add r2, sp, #0x48
	add r0, sp, #0x44
	cmp r1, #1
	bhs _0806F4BC
	adds r0, r2, #0
_0806F4BC:
	ldr r0, [r0]
	adds r0, r1, r0
	cmp r0, #0
	beq _0806F4DA
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806F4DE
	mov r0, r8
	bl func_080D3BC0
	b _0806F4DE
_0806F4DA:
	movs r0, #0
	mov r8, r0
_0806F4DE:
	adds r5, r0, #0
	ldr r1, [r6]
	cmp r7, r1
	beq _0806F4F2
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806F4F4
_0806F4F2:
	adds r0, r5, #0
_0806F4F4:
	adds r4, r0, #0
	ldr r1, [sp, #0x48]
	ldr r2, [r6]
	cmp r1, #0
	bne _0806F500
	b _0806FB7E
_0806F500:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806F500
	b _0806FB7E
_0806F50E:
	adds r6, r5, #0
	adds r6, #0x20
	add r0, sp, #0x38
	mov sb, r0
	ldr r4, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r4, r0
	beq _0806F528
	cmp r4, #0
	bne _0806F524
	b _0806FB0A
_0806F524:
	ldr r0, [sp, #0x38]
	b _0806FB08
_0806F528:
	adds r7, r4, #0
	movs r0, #1
	str r0, [sp, #0x50]
	ldr r0, [r5, #0x20]
	subs r0, r7, r0
	asrs r1, r0, #2
	str r1, [sp, #0x4c]
	add r2, sp, #0x50
	add r0, sp, #0x4c
	cmp r1, #1
	bhs _0806F540
	adds r0, r2, #0
_0806F540:
	ldr r0, [r0]
	adds r0, r1, r0
	cmp r0, #0
	beq _0806F55E
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806F562
	mov r0, r8
	bl func_080D3BC0
	b _0806F562
_0806F55E:
	movs r0, #0
	mov r8, r0
_0806F562:
	adds r5, r0, #0
	ldr r1, [r6]
	cmp r7, r1
	beq _0806F576
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806F578
_0806F576:
	adds r0, r5, #0
_0806F578:
	adds r4, r0, #0
	ldr r1, [sp, #0x50]
	ldr r2, [r6]
	cmp r1, #0
	bne _0806F584
	b _0806FB7E
_0806F584:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806F584
	b _0806FB7E
_0806F592:
	movs r0, #0x88
	lsls r0, r0, #1
	adds r5, r7, r0
	str r2, [sp, #0x54]
	cmp r2, #0x10
	bls _0806F5A0
	b _0806FB92
_0806F5A0:
	lsls r0, r2, #2
	ldr r1, _0806F5AC @ =_0806F5B0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806F5AC: .4byte _0806F5B0
_0806F5B0: @ jump table
	.4byte _0806F5F4 @ case 0
	.4byte _0806F5F4 @ case 1
	.4byte _0806F5F4 @ case 2
	.4byte _0806F5F4 @ case 3
	.4byte _0806F5F4 @ case 4
	.4byte _0806F6FA @ case 5
	.4byte _0806F6FA @ case 6
	.4byte _0806F676 @ case 7
	.4byte _0806F676 @ case 8
	.4byte _0806F6FA @ case 9
	.4byte _0806F5F4 @ case 10
	.4byte _0806F5F4 @ case 11
	.4byte _0806F5F4 @ case 12
	.4byte _0806F5F4 @ case 13
	.4byte _0806F5F4 @ case 14
	.4byte _0806F5F4 @ case 15
	.4byte _0806F5F4 @ case 16
_0806F5F4:
	add r1, sp, #0x54
	mov sb, r1
	ldr r4, [r5, #4]
	ldr r0, [r5, #0xc]
	adds r1, r4, #0
	cmp r1, r0
	beq _0806F60C
	cmp r1, #0
	bne _0806F608
	b _0806F9F0
_0806F608:
	ldr r0, [sp, #0x54]
	b _0806F9EE
_0806F60C:
	adds r7, r4, #0
	movs r0, #1
	str r0, [sp, #0x5c]
	ldr r0, [r5]
	subs r0, r7, r0
	asrs r4, r0, #2
	str r4, [sp, #0x58]
	add r1, sp, #0x5c
	add r0, sp, #0x58
	cmp r4, #1
	bhs _0806F624
	adds r0, r1, #0
_0806F624:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806F642
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806F646
	mov r0, r8
	bl func_080D3BC0
	b _0806F646
_0806F642:
	movs r0, #0
	mov r8, r0
_0806F646:
	adds r6, r0, #0
	ldr r1, [r5]
	cmp r7, r1
	beq _0806F65A
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806F65C
_0806F65A:
	adds r0, r6, #0
_0806F65C:
	adds r4, r0, #0
	ldr r1, [sp, #0x5c]
	ldr r2, [r5]
	cmp r1, #0
	bne _0806F668
	b _0806FA62
_0806F668:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806F668
	b _0806FA62
_0806F676:
	adds r6, r5, #0
	adds r6, #0x10
	add r0, sp, #0x54
	mov sb, r0
	ldr r4, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r4, r0
	beq _0806F690
	cmp r4, #0
	bne _0806F68C
	b _0806FB0A
_0806F68C:
	ldr r0, [sp, #0x54]
	b _0806FB08
_0806F690:
	adds r7, r4, #0
	movs r0, #1
	str r0, [sp, #0x64]
	ldr r0, [r5, #0x10]
	subs r0, r7, r0
	asrs r1, r0, #2
	str r1, [sp, #0x60]
	add r2, sp, #0x64
	add r0, sp, #0x60
	cmp r1, #1
	bhs _0806F6A8
	adds r0, r2, #0
_0806F6A8:
	ldr r0, [r0]
	adds r0, r1, r0
	cmp r0, #0
	beq _0806F6C6
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806F6CA
	mov r0, r8
	bl func_080D3BC0
	b _0806F6CA
_0806F6C6:
	movs r0, #0
	mov r8, r0
_0806F6CA:
	adds r5, r0, #0
	ldr r1, [r6]
	cmp r7, r1
	beq _0806F6DE
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806F6E0
_0806F6DE:
	adds r0, r5, #0
_0806F6E0:
	adds r4, r0, #0
	ldr r1, [sp, #0x64]
	ldr r2, [r6]
	cmp r1, #0
	bne _0806F6EC
	b _0806FB7E
_0806F6EC:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806F6EC
	b _0806FB7E
_0806F6FA:
	adds r6, r5, #0
	adds r6, #0x20
	add r0, sp, #0x54
	mov sb, r0
	ldr r4, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r4, r0
	beq _0806F714
	cmp r4, #0
	bne _0806F710
	b _0806FB0A
_0806F710:
	ldr r0, [sp, #0x54]
	b _0806FB08
_0806F714:
	adds r7, r4, #0
	movs r0, #1
	str r0, [sp, #0x6c]
	ldr r0, [r5, #0x20]
	subs r0, r7, r0
	asrs r1, r0, #2
	str r1, [sp, #0x68]
	add r2, sp, #0x6c
	add r0, sp, #0x68
	cmp r1, #1
	bhs _0806F72C
	adds r0, r2, #0
_0806F72C:
	ldr r0, [r0]
	adds r0, r1, r0
	cmp r0, #0
	beq _0806F74A
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806F74E
	mov r0, r8
	bl func_080D3BC0
	b _0806F74E
_0806F74A:
	movs r0, #0
	mov r8, r0
_0806F74E:
	adds r5, r0, #0
	ldr r1, [r6]
	cmp r7, r1
	beq _0806F762
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806F764
_0806F762:
	adds r0, r5, #0
_0806F764:
	adds r4, r0, #0
	ldr r1, [sp, #0x6c]
	ldr r2, [r6]
	cmp r1, #0
	bne _0806F770
	b _0806FB7E
_0806F770:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806F770
	b _0806FB7E
_0806F77E:
	movs r0, #0xa0
	lsls r0, r0, #1
	adds r5, r7, r0
	str r2, [sp, #0x70]
	cmp r2, #0x10
	bls _0806F78C
	b _0806FB92
_0806F78C:
	lsls r0, r2, #2
	ldr r1, _0806F798 @ =_0806F79C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806F798: .4byte _0806F79C
_0806F79C: @ jump table
	.4byte _0806F7E0 @ case 0
	.4byte _0806F7E0 @ case 1
	.4byte _0806F7E0 @ case 2
	.4byte _0806F7E0 @ case 3
	.4byte _0806F7E0 @ case 4
	.4byte _0806F8EC @ case 5
	.4byte _0806F8EC @ case 6
	.4byte _0806F862 @ case 7
	.4byte _0806F862 @ case 8
	.4byte _0806F8EC @ case 9
	.4byte _0806F7E0 @ case 10
	.4byte _0806F7E0 @ case 11
	.4byte _0806F7E0 @ case 12
	.4byte _0806F7E0 @ case 13
	.4byte _0806F7E0 @ case 14
	.4byte _0806F7E0 @ case 15
	.4byte _0806F7E0 @ case 16
_0806F7E0:
	add r1, sp, #0x70
	mov sb, r1
	ldr r4, [r5, #4]
	ldr r0, [r5, #0xc]
	adds r1, r4, #0
	cmp r1, r0
	beq _0806F7F8
	cmp r1, #0
	bne _0806F7F4
	b _0806F9F0
_0806F7F4:
	ldr r0, [sp, #0x70]
	b _0806F9EE
_0806F7F8:
	adds r7, r4, #0
	movs r0, #1
	str r0, [sp, #0x78]
	ldr r0, [r5]
	subs r0, r7, r0
	asrs r4, r0, #2
	str r4, [sp, #0x74]
	add r1, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _0806F810
	adds r0, r1, #0
_0806F810:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806F82E
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806F832
	mov r0, r8
	bl func_080D3BC0
	b _0806F832
_0806F82E:
	movs r0, #0
	mov r8, r0
_0806F832:
	adds r6, r0, #0
	ldr r1, [r5]
	cmp r7, r1
	beq _0806F846
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806F848
_0806F846:
	adds r0, r6, #0
_0806F848:
	adds r4, r0, #0
	ldr r1, [sp, #0x78]
	ldr r2, [r5]
	cmp r1, #0
	bne _0806F854
	b _0806FA62
_0806F854:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806F854
	b _0806FA62
_0806F862:
	adds r6, r5, #0
	adds r6, #0x10
	add r0, sp, #0x70
	mov sb, r0
	ldr r4, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r4, r0
	beq _0806F87C
	cmp r4, #0
	bne _0806F878
	b _0806FB0A
_0806F878:
	ldr r0, [sp, #0x70]
	b _0806FB08
_0806F87C:
	adds r7, r4, #0
	movs r0, #1
	add r1, sp, #0x80
	str r0, [r1]
	ldr r0, [r5, #0x10]
	subs r0, r7, r0
	asrs r2, r0, #2
	str r2, [sp, #0x7c]
	ldr r0, [r1]
	add r3, sp, #0x7c
	mov sl, r1
	cmp r2, r0
	bhs _0806F898
	mov r3, sl
_0806F898:
	ldr r0, [r3]
	adds r0, r2, r0
	cmp r0, #0
	beq _0806F8B6
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806F8BA
	mov r0, r8
	bl func_080D3BC0
	b _0806F8BA
_0806F8B6:
	movs r0, #0
	mov r8, r0
_0806F8BA:
	adds r5, r0, #0
	ldr r1, [r6]
	cmp r7, r1
	beq _0806F8CE
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806F8D0
_0806F8CE:
	adds r0, r5, #0
_0806F8D0:
	adds r4, r0, #0
	mov r2, sl
	ldr r1, [r2]
	ldr r2, [r6]
	cmp r1, #0
	bne _0806F8DE
	b _0806FB7E
_0806F8DE:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806F8DE
	b _0806FB7E
_0806F8EC:
	adds r6, r5, #0
	adds r6, #0x20
	add r0, sp, #0x70
	mov sb, r0
	ldr r4, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r4, r0
	beq _0806F906
	cmp r4, #0
	bne _0806F902
	b _0806FB0A
_0806F902:
	ldr r0, [sp, #0x70]
	b _0806FB08
_0806F906:
	adds r7, r4, #0
	movs r0, #1
	add r1, sp, #0x88
	str r0, [r1]
	ldr r0, [r5, #0x20]
	subs r0, r7, r0
	asrs r4, r0, #2
	add r0, sp, #0x84
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _0806F922
	mov r0, sl
_0806F922:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806F940
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806F944
	mov r0, r8
	bl func_080D3BC0
	b _0806F944
_0806F940:
	movs r0, #0
	mov r8, r0
_0806F944:
	adds r5, r0, #0
	ldr r1, [r6]
	cmp r7, r1
	beq _0806F958
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806F95A
_0806F958:
	adds r0, r5, #0
_0806F95A:
	adds r4, r0, #0
	mov r2, sl
	ldr r1, [r2]
	ldr r2, [r6]
	cmp r1, #0
	bne _0806F968
	b _0806FB7E
_0806F968:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806F968
	b _0806FB7E
_0806F976:
	movs r0, #0xb8
	lsls r0, r0, #1
	adds r5, r7, r0
	add r0, sp, #0x8c
	str r2, [r0]
	adds r3, r0, #0
	cmp r2, #0x10
	bls _0806F988
	b _0806FB92
_0806F988:
	lsls r0, r2, #2
	ldr r1, _0806F994 @ =_0806F998
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806F994: .4byte _0806F998
_0806F998: @ jump table
	.4byte _0806F9DC @ case 0
	.4byte _0806F9DC @ case 1
	.4byte _0806F9DC @ case 2
	.4byte _0806F9DC @ case 3
	.4byte _0806F9DC @ case 4
	.4byte _0806FAF4 @ case 5
	.4byte _0806FAF4 @ case 6
	.4byte _0806FA78 @ case 7
	.4byte _0806FA78 @ case 8
	.4byte _0806FAF4 @ case 9
	.4byte _0806F9DC @ case 10
	.4byte _0806F9DC @ case 11
	.4byte _0806F9DC @ case 12
	.4byte _0806F9DC @ case 13
	.4byte _0806F9DC @ case 14
	.4byte _0806F9DC @ case 15
	.4byte _0806F9DC @ case 16
_0806F9DC:
	mov sb, r3
	ldr r4, [r5, #4]
	ldr r0, [r5, #0xc]
	adds r1, r4, #0
	cmp r1, r0
	beq _0806F9F6
	cmp r1, #0
	beq _0806F9F0
	ldr r0, [r3]
_0806F9EE:
	str r0, [r1]
_0806F9F0:
	adds r0, r1, #4
	str r0, [r5, #4]
	b _0806FB92
_0806F9F6:
	adds r7, r4, #0
	movs r0, #1
	add r1, sp, #0x94
	str r0, [r1]
	ldr r0, [r5]
	subs r0, r7, r0
	asrs r4, r0, #2
	add r0, sp, #0x90
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _0806FA12
	mov r0, sl
_0806FA12:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806FA30
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806FA34
	mov r0, r8
	bl func_080D3BC0
	b _0806FA34
_0806FA30:
	movs r0, #0
	mov r8, r0
_0806FA34:
	adds r6, r0, #0
	ldr r1, [r5]
	cmp r7, r1
	beq _0806FA48
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806FA4A
_0806FA48:
	adds r0, r6, #0
_0806FA4A:
	adds r4, r0, #0
	mov r2, sl
	ldr r1, [r2]
	ldr r2, [r5]
	cmp r1, #0
	beq _0806FA62
_0806FA56:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806FA56
_0806FA62:
	cmp r2, #0
	beq _0806FA6C
	adds r0, r2, #0
	bl free
_0806FA6C:
	mov r7, r8
	adds r0, r7, r6
_0806FA70:
	str r6, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
	b _0806FB92
_0806FA78:
	adds r6, r5, #0
	adds r6, #0x10
	mov sb, r3
	ldr r4, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r4, r0
	bne _0806FB02
	adds r7, r4, #0
	movs r0, #1
	add r1, sp, #0x9c
	str r0, [r1]
	ldr r0, [r5, #0x10]
	subs r0, r7, r0
	asrs r4, r0, #2
	add r0, sp, #0x98
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _0806FAA2
	mov r0, sl
_0806FAA2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806FAC0
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806FAC4
	mov r0, r8
	bl func_080D3BC0
	b _0806FAC4
_0806FAC0:
	movs r0, #0
	mov r8, r0
_0806FAC4:
	adds r5, r0, #0
	ldr r1, [r6]
	cmp r7, r1
	beq _0806FAD8
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806FADA
_0806FAD8:
	adds r0, r5, #0
_0806FADA:
	adds r4, r0, #0
	mov r0, sl
	ldr r1, [r0]
	ldr r2, [r6]
	cmp r1, #0
	beq _0806FB7E
_0806FAE6:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806FAE6
	b _0806FB7E
_0806FAF4:
	adds r6, r5, #0
	adds r6, #0x20
	mov sb, r3
	ldr r4, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r4, r0
	beq _0806FB12
_0806FB02:
	cmp r4, #0
	beq _0806FB0A
	ldr r0, [r3]
_0806FB08:
	str r0, [r4]
_0806FB0A:
	ldr r0, [r6, #4]
	adds r0, #4
	str r0, [r6, #4]
	b _0806FB92
_0806FB12:
	adds r7, r4, #0
	movs r0, #1
	add r1, sp, #0xa4
	str r0, [r1]
	ldr r0, [r5, #0x20]
	subs r0, r7, r0
	asrs r4, r0, #2
	add r0, sp, #0xa0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _0806FB2E
	mov r0, sl
_0806FB2E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0806FB4C
	lsls r4, r0, #2
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0806FB50
	mov r0, r8
	bl func_080D3BC0
	b _0806FB50
_0806FB4C:
	movs r0, #0
	mov r8, r0
_0806FB50:
	adds r5, r0, #0
	ldr r1, [r6]
	cmp r7, r1
	beq _0806FB64
	subs r4, r7, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
	b _0806FB66
_0806FB64:
	adds r0, r5, #0
_0806FB66:
	adds r4, r0, #0
	mov r0, sl
	ldr r1, [r0]
	ldr r2, [r6]
	cmp r1, #0
	beq _0806FB7E
_0806FB72:
	mov r3, sb
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0806FB72
_0806FB7E:
	cmp r2, #0
	beq _0806FB88
	adds r0, r2, #0
	bl free
_0806FB88:
	mov r7, r8
	adds r0, r7, r5
	str r5, [r6]

	non_word_aligned_thumb_func_start sub_0806FB8E
sub_0806FB8E: @ 0x0806FB8E
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_0806FB92:
	add sp, #0xb0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0806FBA4
func_0806FBA4: @ 0x0806FBA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xa0
	str r0, [sp, #0x48]
	lsls r2, r1, #2
	ldr r0, _0806FC68 @ =0x080FBD94
	adds r2, r2, r0
	str r2, [sp, #0x4c]
	ldrh r0, [r2, #2]
	str r0, [sp, #0x50]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #4
	adds r0, #0xe0
	ldr r1, [sp, #0x48]
	adds r0, r1, r0
	str r0, [sp, #0x54]
	movs r1, #0
	ldr r2, [r0]
	ldr r0, [r0, #4]
	cmp r2, r0
	bne _0806FBD8
	movs r1, #1
_0806FBD8:
	ldr r3, [sp, #0x54]
	adds r3, #0x10
	str r3, [sp, #0x80]
	ldr r4, [sp, #0x54]
	adds r4, #0x20
	str r4, [sp, #0x84]
	cmp r1, #0
	beq _0806FBEA
	b _0806FD76
_0806FBEA:
	ldr r5, [sp, #0x4c]
	ldrh r5, [r5]
	mov sl, r5
	adds r6, r2, #0
	str r0, [sp, #0x58]
	ldr r7, [sp, #0x48]
	adds r7, #0xa0
	str r7, [sp, #0x90]
	mov r0, sp
	adds r0, #8
	str r0, [sp, #0x74]
	ldr r1, [sp, #0x48]
	adds r1, #0xd0
	str r1, [sp, #0x94]
	ldr r2, [sp, #0x50]
	adds r2, #0xc
	str r2, [sp, #0x7c]
	str r1, [sp, #0x98]
	mov r3, sp
	str r3, [sp, #0x60]
	mov r4, sp
	adds r4, #0x1c
	str r4, [sp, #0x5c]
_0806FC18:
	ldr r2, [r6]
	ldr r0, [sp, #0x5c]
	ldr r1, [sp, #0x90]
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	mov r5, sl
	str r5, [sp]
	ldr r7, [sp, #0x50]
	str r7, [sp, #4]
	ldr r1, [sp, #0x74]
	ldr r0, [sp, #0x5c]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r5, r7}
	stm r1!, {r5, r7}
	ldr r0, [sp, #0x98]
	ldr r1, [r0, #4]
	ldr r0, [r0, #0xc]
	cmp r1, r0
	beq _0806FC6C
	cmp r1, #0
	beq _0806FC58
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806FC58:
	ldr r3, [sp, #0x98]
	ldr r0, [r3, #4]
	adds r0, #0x1c
	str r0, [r3, #4]
	movs r4, #4
	add sl, r4
	adds r6, #4
	b _0806FD6A
	.align 2, 0
_0806FC68: .4byte 0x080FBD94
_0806FC6C:
	ldr r5, [sp, #0x94]
	ldr r5, [r5, #4]
	mov r8, r5
	movs r0, #1
	str r0, [sp, #0x34]
	ldr r7, [sp, #0x94]
	ldr r2, [r7]
	subs r1, r5, r2
	ldr r0, _0806FCBC @ =0xB6DB6DB7
	muls r0, r1, r0
	asrs r4, r0, #2
	str r4, [sp, #0x30]
	add r3, sp, #0x34
	add r0, sp, #0x30
	adds r1, r2, #0
	cmp r4, #1
	bhs _0806FC90
	adds r0, r3, #0
_0806FC90:
	ldr r0, [r0]
	adds r4, r4, r0
	mov sb, r4
	cmp r4, #0
	beq _0806FCC0
	lsls r4, r4, #3
	mov r1, sb
	subs r0, r4, r1
	lsls r5, r0, #2
	adds r0, r5, #0
	bl malloc
	str r4, [sp, #0x88]
	cmp r0, #0
	bne _0806FCB4
	adds r0, r5, #0
	bl func_080D3BC0
_0806FCB4:
	ldr r2, [sp, #0x98]
	ldr r1, [r2]
	b _0806FCC6
	.align 2, 0
_0806FCBC: .4byte 0xB6DB6DB7
_0806FCC0:
	movs r0, #0
	movs r3, #0
	str r3, [sp, #0x88]
_0806FCC6:
	adds r4, r0, #0
	str r4, [sp, #0x9c]
	adds r2, r1, #0
	adds r3, r4, #0
	movs r4, #4
	add sl, r4
	adds r6, #4
	cmp r2, r8
	beq _0806FCF4
_0806FCD8:
	cmp r3, #0
	beq _0806FCEC
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806FCEC:
	adds r2, #0x1c
	adds r3, #0x1c
	cmp r2, r8
	bne _0806FCD8
_0806FCF4:
	adds r4, r3, #0
	ldr r0, [sp, #0x34]
	cmp r0, #1
	bne _0806FD14
	cmp r4, #0
	beq _0806FD10
	adds r0, r4, #0
	ldr r1, [sp, #0x60]
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldm r1!, {r3, r5, r7}
	stm r0!, {r3, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806FD10:
	adds r4, #0x1c
	b _0806FD3A
_0806FD14:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0806FD38
_0806FD1C:
	cmp r2, #0
	beq _0806FD30
	adds r0, r2, #0
	ldr r1, [sp, #0x60]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806FD30:
	subs r3, #1
	adds r2, #0x1c
	cmp r3, #0
	bne _0806FD1C
_0806FD38:
	adds r4, r2, #0
_0806FD3A:
	ldr r0, [sp, #0x98]
	ldr r2, [r0, #4]
	ldr r1, [r0]
	adds r0, r1, #0
	cmp r1, r2
	beq _0806FD4C
_0806FD46:
	adds r0, #0x1c
	cmp r0, r2
	bne _0806FD46
_0806FD4C:
	cmp r1, #0
	beq _0806FD56
	adds r0, r1, #0
	bl free
_0806FD56:
	ldr r1, [sp, #0x88]
	mov r2, sb
	subs r0, r1, r2
	lsls r0, r0, #2
	ldr r3, [sp, #0x9c]
	adds r0, r0, r3
	ldr r5, [sp, #0x98]
	str r3, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0806FD6A:
	ldr r7, [sp, #0x58]
	cmp r6, r7
	beq _0806FD72
	b _0806FC18
_0806FD72:
	ldr r0, [sp, #0x7c]
	str r0, [sp, #0x50]
_0806FD76:
	movs r1, #0
	ldr r3, [sp, #0x54]
	ldr r2, [r3, #0x10]
	ldr r4, [sp, #0x80]
	ldr r0, [r4, #4]
	cmp r2, r0
	bne _0806FD86
	movs r1, #1
_0806FD86:
	cmp r1, #0
	beq _0806FD8C
	b _0806FF12
_0806FD8C:
	ldr r5, [sp, #0x4c]
	ldrh r5, [r5]
	mov sl, r5
	adds r6, r2, #0
	str r0, [sp, #0x58]
	ldr r7, [sp, #0x48]
	adds r7, #0xa0
	str r7, [sp, #0x90]
	mov r0, sp
	adds r0, #8
	str r0, [sp, #0x74]
	ldr r1, [sp, #0x48]
	adds r1, #0xd0
	str r1, [sp, #0x94]
	ldr r2, [sp, #0x50]
	adds r2, #0xc
	str r2, [sp, #0x7c]
	str r1, [sp, #0x98]
	mov r3, sp
	str r3, [sp, #0x68]
	mov r4, sp
	adds r4, #0x1c
	str r4, [sp, #0x64]
_0806FDBA:
	ldr r2, [r6]
	ldr r0, [sp, #0x64]
	ldr r1, [sp, #0x90]
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	mov r5, sl
	str r5, [sp]
	ldr r7, [sp, #0x50]
	str r7, [sp, #4]
	ldr r1, [sp, #0x74]
	ldr r0, [sp, #0x64]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r5, r7}
	stm r1!, {r5, r7}
	ldr r0, [sp, #0x98]
	ldr r1, [r0, #4]
	ldr r0, [r0, #0xc]
	cmp r1, r0
	beq _0806FE0A
	cmp r1, #0
	beq _0806FDFA
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806FDFA:
	ldr r3, [sp, #0x98]
	ldr r0, [r3, #4]
	adds r0, #0x1c
	str r0, [r3, #4]
	adds r6, #4
	movs r4, #4
	add sl, r4
	b _0806FF06
_0806FE0A:
	ldr r5, [sp, #0x94]
	ldr r5, [r5, #4]
	mov r8, r5
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r7, [sp, #0x94]
	ldr r2, [r7]
	subs r1, r5, r2
	ldr r0, _0806FE58 @ =0xB6DB6DB7
	muls r0, r1, r0
	asrs r4, r0, #2
	str r4, [sp, #0x38]
	add r3, sp, #0x3c
	add r0, sp, #0x38
	adds r1, r2, #0
	cmp r4, #1
	bhs _0806FE2E
	adds r0, r3, #0
_0806FE2E:
	ldr r0, [r0]
	adds r4, r4, r0
	mov sb, r4
	cmp r4, #0
	beq _0806FE5C
	lsls r4, r4, #3
	mov r1, sb
	subs r0, r4, r1
	lsls r5, r0, #2
	adds r0, r5, #0
	bl malloc
	str r4, [sp, #0x78]
	cmp r0, #0
	bne _0806FE52
	adds r0, r5, #0
	bl func_080D3BC0
_0806FE52:
	ldr r2, [sp, #0x98]
	ldr r1, [r2]
	b _0806FE62
	.align 2, 0
_0806FE58: .4byte 0xB6DB6DB7
_0806FE5C:
	movs r0, #0
	movs r3, #0
	str r3, [sp, #0x78]
_0806FE62:
	adds r4, r0, #0
	str r4, [sp, #0x9c]
	adds r2, r1, #0
	adds r3, r4, #0
	adds r6, #4
	movs r4, #4
	add sl, r4
	cmp r2, r8
	beq _0806FE90
_0806FE74:
	cmp r3, #0
	beq _0806FE88
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806FE88:
	adds r2, #0x1c
	adds r3, #0x1c
	cmp r2, r8
	bne _0806FE74
_0806FE90:
	adds r4, r3, #0
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _0806FEB0
	cmp r4, #0
	beq _0806FEAC
	adds r0, r4, #0
	ldr r1, [sp, #0x68]
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldm r1!, {r3, r5, r7}
	stm r0!, {r3, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806FEAC:
	adds r4, #0x1c
	b _0806FED6
_0806FEB0:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0806FED4
_0806FEB8:
	cmp r2, #0
	beq _0806FECC
	adds r0, r2, #0
	ldr r1, [sp, #0x68]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806FECC:
	subs r3, #1
	adds r2, #0x1c
	cmp r3, #0
	bne _0806FEB8
_0806FED4:
	adds r4, r2, #0
_0806FED6:
	ldr r0, [sp, #0x98]
	ldr r2, [r0, #4]
	ldr r1, [r0]
	adds r0, r1, #0
	cmp r1, r2
	beq _0806FEE8
_0806FEE2:
	adds r0, #0x1c
	cmp r0, r2
	bne _0806FEE2
_0806FEE8:
	cmp r1, #0
	beq _0806FEF2
	adds r0, r1, #0
	bl free
_0806FEF2:
	ldr r1, [sp, #0x78]
	mov r2, sb
	subs r0, r1, r2
	lsls r0, r0, #2
	ldr r3, [sp, #0x9c]
	adds r0, r0, r3
	ldr r5, [sp, #0x98]
	str r3, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0806FF06:
	ldr r7, [sp, #0x58]
	cmp r6, r7
	beq _0806FF0E
	b _0806FDBA
_0806FF0E:
	ldr r0, [sp, #0x7c]
	str r0, [sp, #0x50]
_0806FF12:
	movs r1, #0
	ldr r3, [sp, #0x54]
	ldr r2, [r3, #0x20]
	ldr r4, [sp, #0x84]
	ldr r0, [r4, #4]
	cmp r2, r0
	bne _0806FF22
	movs r1, #1
_0806FF22:
	cmp r1, #0
	beq _0806FF28
	b _080700A6
_0806FF28:
	ldr r5, [sp, #0x4c]
	ldrh r5, [r5]
	mov sl, r5
	adds r6, r2, #0
	str r0, [sp, #0x58]
	ldr r7, [sp, #0x48]
	adds r7, #0xa0
	str r7, [sp, #0x90]
	mov r0, sp
	adds r0, #8
	str r0, [sp, #0x74]
	ldr r1, [sp, #0x48]
	adds r1, #0xd0
	str r1, [sp, #0x94]
	str r1, [sp, #0x98]
	mov r2, sp
	str r2, [sp, #0x70]
	mov r3, sp
	adds r3, #0x1c
	str r3, [sp, #0x6c]
_0806FF50:
	ldr r2, [r6]
	ldr r0, [sp, #0x6c]
	ldr r1, [sp, #0x90]
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	mov r4, sl
	str r4, [sp]
	ldr r5, [sp, #0x50]
	str r5, [sp, #4]
	ldr r1, [sp, #0x74]
	ldr r0, [sp, #0x6c]
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r4, r5}
	stm r1!, {r4, r5}
	ldr r7, [sp, #0x98]
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	beq _0806FFA0
	cmp r1, #0
	beq _0806FF90
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0806FF90:
	ldr r3, [sp, #0x98]
	ldr r0, [r3, #4]
	adds r0, #0x1c
	str r0, [r3, #4]
	adds r6, #4
	movs r4, #4
	add sl, r4
	b _0807009E
_0806FFA0:
	ldr r5, [sp, #0x94]
	ldr r5, [r5, #4]
	mov r8, r5
	movs r0, #1
	str r0, [sp, #0x44]
	ldr r7, [sp, #0x94]
	ldr r2, [r7]
	subs r1, r5, r2
	ldr r0, _0806FFF0 @ =0xB6DB6DB7
	muls r0, r1, r0
	asrs r4, r0, #2
	str r4, [sp, #0x40]
	add r3, sp, #0x44
	add r0, sp, #0x40
	adds r1, r2, #0
	cmp r4, #1
	bhs _0806FFC4
	adds r0, r3, #0
_0806FFC4:
	ldr r0, [r0]
	adds r4, r4, r0
	mov sb, r4
	cmp r4, #0
	beq _0806FFF4
	lsls r4, r4, #3
	mov r1, sb
	subs r0, r4, r1
	lsls r5, r0, #2
	adds r0, r5, #0
	bl malloc
	str r4, [sp, #0x8c]
	cmp r0, #0
	bne _0806FFE8
	adds r0, r5, #0
	bl func_080D3BC0
_0806FFE8:
	ldr r2, [sp, #0x98]
	ldr r1, [r2]
	b _0806FFFA
	.align 2, 0
_0806FFF0: .4byte 0xB6DB6DB7
_0806FFF4:
	movs r0, #0
	movs r3, #0
	str r3, [sp, #0x8c]
_0806FFFA:
	adds r4, r0, #0
	str r4, [sp, #0x9c]
	adds r2, r1, #0
	adds r3, r4, #0
	adds r6, #4
	movs r4, #4
	add sl, r4
	cmp r2, r8
	beq _08070028
_0807000C:
	cmp r3, #0
	beq _08070020
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08070020:
	adds r2, #0x1c
	adds r3, #0x1c
	cmp r2, r8
	bne _0807000C
_08070028:
	adds r4, r3, #0
	ldr r0, [sp, #0x44]
	cmp r0, #1
	bne _08070048
	cmp r4, #0
	beq _08070044
	adds r0, r4, #0
	ldr r1, [sp, #0x70]
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldm r1!, {r3, r5, r7}
	stm r0!, {r3, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08070044:
	adds r4, #0x1c
	b _0807006E
_08070048:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0807006C
_08070050:
	cmp r2, #0
	beq _08070064
	adds r0, r2, #0
	ldr r1, [sp, #0x70]
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08070064:
	subs r3, #1
	adds r2, #0x1c
	cmp r3, #0
	bne _08070050
_0807006C:
	adds r4, r2, #0
_0807006E:
	ldr r0, [sp, #0x98]
	ldr r2, [r0, #4]
	ldr r1, [r0]
	adds r0, r1, #0
	cmp r1, r2
	beq _08070080
_0807007A:
	adds r0, #0x1c
	cmp r0, r2
	bne _0807007A
_08070080:
	cmp r1, #0
	beq _0807008A
	adds r0, r1, #0
	bl free
_0807008A:
	ldr r1, [sp, #0x8c]
	mov r2, sb
	subs r0, r1, r2
	lsls r0, r0, #2
	ldr r3, [sp, #0x9c]
	adds r0, r0, r3
	ldr r5, [sp, #0x98]
	str r3, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0807009E:
	ldr r7, [sp, #0x58]
	cmp r6, r7
	beq _080700A6
	b _0806FF50
_080700A6:
	add sp, #0xa0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_080700B8
func_080700B8: @ 0x080700B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	str r1, [sp]
	mov sl, r2
	ldr r0, [sp, #0x24]
	ldr r1, [sp, #0x28]
	adds r6, r2, r0
	adds r1, r1, r3
	mov sb, r1
	cmp r3, sb
	bhs _0807012C
	ldr r0, [sp, #0x2c]
	lsls r5, r0, #0xc
	movs r1, #0xf0
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r5, r0
_080700E2:
	mov r2, sl
	adds r7, r3, #1
	mov ip, r7
	cmp r2, r6
	bhs _08070126
	lsrs r0, r3, #5
	lsls r4, r0, #1
	movs r0, #0x1f
	ands r3, r0
	lsls r0, r3, #6
	movs r1, #0xc0
	lsls r1, r1, #0x13
	adds r3, r0, r1
	ldr r7, _0807013C @ =0x00000FFF
	mov r8, r7
_08070100:
	lsrs r0, r2, #5
	adds r0, r4, r0
	ldr r1, [sp]
	adds r0, r1, r0
	lsls r0, r0, #0xb
	adds r0, r0, r3
	adds r1, r2, #0
	movs r7, #0x1f
	ands r1, r7
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	mov r7, r8
	ands r1, r7
	orrs r1, r5
	strh r1, [r0]
	adds r2, #1
	cmp r2, r6
	blo _08070100
_08070126:
	mov r3, ip
	cmp r3, sb
	blo _080700E2
_0807012C:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807013C: .4byte 0x00000FFF

	thumb_func_start func_08070140
func_08070140: @ 0x08070140
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x24
	adds r5, r0, #0
	adds r0, #0xd0
	ldr r4, [r0]
	ldr r7, [r0, #4]
	cmp r4, r7
	beq _080701B0
	movs r0, #0x18
	adds r0, r0, r5
	mov r8, r0
_0807015A:
	adds r0, r5, #0
	bl func_08008920
	adds r6, r0, #0
	ldr r1, [r4, #8]
	ldr r3, [r1]
	ldrh r2, [r4, #0x14]
	lsls r2, r2, #2
	ldr r0, [r4, #0xc]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #4
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	ldr r1, [r5, #0x14]
	cmp r1, #0
	bge _0807018A
	adds r1, #0xff
_0807018A:
	asrs r1, r1, #8
	ldr r0, [r4]
	subs r3, r0, r1
	ldr r1, [r5, #0x10]
	cmp r1, #0
	bge _08070198
	adds r1, #0xff
_08070198:
	asrs r1, r1, #8
	ldr r0, [r4, #4]
	subs r0, r0, r1
	str r0, [sp]
	mov r0, r8
	adds r1, r6, #0
	add r2, sp, #4
	bl func_08075AE8
	adds r4, #0x1c
	cmp r4, r7
	bne _0807015A
_080701B0:
	add sp, #0x24
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_080701BC
func_080701BC: @ 0x080701BC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	str r0, [sp, #0x30]
	adds r4, r1, #0
	str r2, [sp, #0x34]
	ldr r0, _080704EC @ =vtable_unk_080E7AEC
	ldr r1, [sp, #0x30]
	str r0, [r1]
	movs r0, #0xd0
	lsls r0, r0, #1
	bl __builtin_new
	ldr r2, [sp, #0x34]
	ldr r1, [r2]
	movs r5, #0
	str r5, [r2]
	str r1, [sp, #4]
	adds r7, r0, #0
	bl func_08008444
	ldr r0, _080704F0 @ =vtable_unk_080E7AE0
	str r0, [r7, #4]
	str r4, [r7, #8]
	ldr r0, [sp, #4]
	str r5, [sp, #4]
	str r0, [r7, #0xc]
	str r5, [r7, #0x10]
	str r5, [r7, #0x14]
	adds r0, r7, #0
	adds r0, #0x18
	bl func_080756B0
	adds r4, r7, #0
	adds r4, #0x20
	ldr r1, _080704F4 @ =0x08527094
	adds r0, r4, #0
	bl func_0805E6CC
	adds r0, r7, #0
	adds r0, #0x50
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0x64
	adds r1, r4, #0
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0x78
	adds r1, r4, #0
	movs r2, #2
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0x8c
	adds r1, r4, #0
	movs r2, #3
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0xa0
	ldr r1, _080704F8 @ =0x087537D0
	bl func_0805E6CC
	adds r0, r7, #0
	adds r0, #0xd0
	str r5, [r0]
	str r5, [r0, #4]
	adds r0, #8
	str r5, [r0, #4]
	adds r4, #0xc0
	movs r5, #3
	add r6, sp, #0xc
	movs r3, #1
	rsbs r3, r3, #0
	mov r8, r3
_08070272:
	adds r0, r4, #0
	bl func_080E2094
	adds r4, #0x30
	subs r5, #1
	cmp r5, r8
	bne _08070272
	movs r4, #0
	adds r0, r7, #0
	adds r0, #0x20
	ldrh r5, [r0, #0x22]
	mov sb, r0
	movs r0, #0xa0
	adds r0, r0, r7
	mov r8, r0
	cmp r4, r5
	bhs _080702AE
_08070294:
	add r0, sp, #0xc
	mov r1, sb
	adds r2, r4, #0
	bl func_0805E790
	adds r0, r7, #0
	adds r0, #0x18
	add r1, sp, #0xc
	bl func_080757E8
	adds r4, #1
	cmp r4, r5
	blo _08070294
_080702AE:
	movs r4, #0
	mov r1, r8
	ldrh r5, [r1, #0x22]
	cmp r4, r5
	bhs _080702D2
_080702B8:
	add r0, sp, #0xc
	mov r1, r8
	adds r2, r4, #0
	bl func_0805E790
	adds r0, r7, #0
	adds r0, #0x18
	add r1, sp, #0xc
	bl func_080757E8
	adds r4, #1
	cmp r4, r5
	blo _080702B8
_080702D2:
	ldr r0, [r7, #8]
	ldr r2, _080704FC @ =0x00001BD8
	adds r2, r2, r0
	mov r8, r2
	movs r4, #0
	add r0, sp, #0x14
	mov r1, r8
	bl func_0800E924
	add r0, sp, #0xc
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ldr r5, _08070500 @ =0x000003FF
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl func_0806F168
	ldr r2, [r7, #8]
	ldr r3, _08070504 @ =0x0000219C
	adds r0, r2, r3
	ldrb r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _08070372
	movs r4, #1
	ldr r0, _08070508 @ =0x00001C70
	adds r1, r2, r0
	add r0, sp, #0x14
	bl __5ActorRC5Actor
	adds r0, r6, #0
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl func_0806F168
_08070372:
	ldr r0, [r7, #8]
	adds r0, #0x14
	bl func_08009C3C
	adds r3, r0, #0
	cmp r3, #0
	beq _080703E0
	ldr r2, [r7, #8]
	ldr r1, _0807050C @ =0x0000219A
	adds r0, r2, r1
	ldrb r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080703E0
	ldr r4, _08070510 @ =0x000021A1
	adds r0, r2, r4
	ldrb r1, [r0]
	movs r4, #4
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	bne _080703E0
	add r0, sp, #0x14
	adds r1, r3, #0
	bl __5ActorRC5Actor
	adds r0, r6, #0
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl func_0806F168
_080703E0:
	mov r0, r8
	bl func_0800E934
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08070446
	mov r4, r8
	adds r4, #0x54
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08070406
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #4
	beq _08070446
_08070406:
	movs r5, #3
	ldr r1, [r7, #8]
	movs r0, #0xe5
	lsls r0, r0, #5
	adds r1, r1, r0
	add r0, sp, #0xc
	bl func_0800FFE0
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ldr r4, _08070500 @ =0x000003FF
	ands r2, r4
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r4
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r5, [sp]
	adds r0, r7, #0
	bl func_0806F168
_08070446:
	mov r0, r8
	bl func_0800E940
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08070528
	mov r4, r8
	adds r4, #0x54
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08070480
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #1
	bne _08070480
	adds r0, r4, #0
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x2c
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x35
	beq _08070528
_08070480:
	mov r0, r8
	adds r0, #0x60
	movs r1, #0x35
	bl func_0800F714
	cmp r0, #0
	bge _08070528
	ldr r0, [r7, #8]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _080704A8
	movs r1, #0x35
	bl GetFirstSlotWith__C5ShelfUi
	cmp r0, #0
	bge _08070518
_080704A8:
	movs r5, #2
	ldr r1, [r7, #8]
	ldr r2, _08070514 @ =0x00001CCC
	adds r1, r1, r2
	add r0, sp, #0xc
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ldr r4, _08070500 @ =0x000003FF
	ands r2, r4
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r4
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r5, [sp]
	adds r0, r7, #0
	bl func_0806F168
	b _08070528
	.align 2, 0
_080704EC: .4byte vtable_unk_080E7AEC
_080704F0: .4byte vtable_unk_080E7AE0
_080704F4: .4byte 0x08527094
_080704F8: .4byte 0x087537D0
_080704FC: .4byte 0x00001BD8
_08070500: .4byte 0x000003FF
_08070504: .4byte 0x0000219C
_08070508: .4byte 0x00001C70
_0807050C: .4byte 0x0000219A
_08070510: .4byte 0x000021A1
_08070514: .4byte 0x00001CCC
_08070518:
	movs r0, #2
	str r0, [sp]
	adds r0, r7, #0
	movs r1, #0x1d
	movs r2, #0
	movs r3, #0
	bl func_0806F168
_08070528:
	movs r4, #0xe
	ldr r1, [r7, #8]
	ldr r3, _080708E4 @ =0x00002010
	adds r1, r1, r3
	add r0, sp, #0x14
	bl GetLocation__C3Npc
	add r0, sp, #0xc
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ldr r5, _080708E8 @ =0x000003FF
	mov sl, r5
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl func_0806F168
	movs r4, #0xb
	ldr r1, [r7, #8]
	ldr r0, _080708EC @ =0x00002034
	adds r1, r1, r0
	add r0, sp, #0x14
	bl GetLocation__C3Npc
	adds r0, r6, #0
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl func_0806F168
	movs r4, #0xf
	ldr r1, [r7, #8]
	ldr r2, _080708F0 @ =0x00002058
	adds r1, r1, r2
	add r0, sp, #0x14
	bl GetLocation__C3Npc
	adds r0, r6, #0
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl func_0806F168
	movs r4, #0xa
	ldr r1, [r7, #8]
	ldr r3, _080708F4 @ =0x0000207C
	adds r1, r1, r3
	add r0, sp, #0x14
	bl GetLocation__C3Npc
	adds r0, r6, #0
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl func_0806F168
	movs r4, #0x10
	ldr r1, [r7, #8]
	ldr r5, _080708F8 @ =0x000020A0
	adds r1, r1, r5
	add r0, sp, #0x14
	bl GetLocation__C3Npc
	adds r0, r6, #0
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	mov r3, sl
	ands r2, r3
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	mov r5, sl
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl func_0806F168
	movs r4, #0xd
	ldr r1, [r7, #8]
	ldr r0, _080708FC @ =0x000020C4
	adds r1, r1, r0
	add r0, sp, #0x14
	bl GetLocation__C3Npc
	adds r0, r6, #0
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl func_0806F168
	movs r4, #0xc
	ldr r1, [r7, #8]
	ldr r2, _08070900 @ =0x000020E8
	adds r1, r1, r2
	add r0, sp, #0x14
	bl GetLocation__C3Npc
	adds r0, r6, #0
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ands r2, r5
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r5
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl func_0806F168
	ldr r0, [r7, #8]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r3, r3, r0
	mov r8, r3
	mov r0, r8
	bl GetCapacity__C4Barn
	str r0, [sp, #0x38]
	mov r0, r8
	bl method_0800D058__C4Barn
	mov sb, r0
	movs r5, #0
	ldr r4, [sp, #0x38]
	cmp r5, r4
	bhs _080707BC
	adds r4, r6, #0
_0807073E:
	mov r0, sb
	cmp r0, #0
	blt _08070748
	cmp r5, sb
	beq _080707B4
_08070748:
	movs r1, #7
	mov sl, r1
	mov r0, r8
	adds r1, r5, #0
	bl GetCow__C4BarnUi
	adds r1, r0, #0
	cmp r1, #0
	bne _0807076C
	movs r2, #8
	mov sl, r2
	mov r0, r8
	adds r1, r5, #0
	bl GetSheep__C4BarnUi
	adds r1, r0, #0
	cmp r1, #0
	beq _080707B4
_0807076C:
	add r0, sp, #0x14
	bl __5ActorRC5Actor
	add r0, sp, #0xc
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r4]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r4, #1]
	lsrs r0, r0, #2
	ldrh r2, [r4, #2]
	ldr r3, _080708E8 @ =0x000003FF
	ands r2, r3
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	mov ip, r2
	ldrb r0, [r4, #3]
	lsrs r0, r0, #2
	ldrh r3, [r4, #4]
	ldr r2, _080708E8 @ =0x000003FF
	ands r3, r2
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	mov r0, sl
	str r0, [sp]
	adds r0, r7, #0
	mov r2, ip
	bl func_0806F168
_080707B4:
	adds r5, #1
	ldr r1, [sp, #0x38]
	cmp r5, r1
	blo _0807073E
_080707BC:
	ldr r0, [r7, #8]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r2, r0, r2
	str r2, [sp, #0x3c]
	adds r0, r2, #0
	bl GetCapacity__C4Coop
	str r0, [sp, #0x40]
	ldr r0, [sp, #0x3c]
	bl GetUnkEnt__C4Coop
	str r0, [sp, #0x44]
	movs r3, #0
	mov r8, r3
	ldr r4, [sp, #0x40]
	cmp r8, r4
	bhs _080708A6
	adds r5, r6, #0
	ldr r0, _080708E8 @ =0x000003FF
	mov sl, r0
_080707E6:
	ldr r1, [sp, #0x44]
	cmp r1, #0
	blt _080707F0
	cmp r8, r1
	beq _08070852
_080707F0:
	ldr r0, [sp, #0x3c]
	mov r1, r8
	bl GetChicken__C4CoopUi
	adds r4, r0, #0
	cmp r4, #0
	beq _08070852
	bl GetGrowthStage__C7Chicken
	movs r2, #6
	mov sb, r2
	cmp r0, #1
	bne _0807080E
	movs r3, #5
	mov sb, r3
_0807080E:
	add r0, sp, #0x14
	adds r1, r4, #0
	bl __5ActorRC5Actor
	add r0, sp, #0xc
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r5]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r5, #1]
	lsrs r0, r0, #2
	ldrh r2, [r5, #2]
	mov r4, sl
	ands r2, r4
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r5, #3]
	lsrs r0, r0, #2
	ldrh r3, [r5, #4]
	ands r3, r4
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	mov r0, sb
	str r0, [sp]
	adds r0, r7, #0
	bl func_0806F168
_08070852:
	ldr r0, [sp, #0x3c]
	mov r1, r8
	bl GetEgg__C4CoopUi
	adds r1, r0, #0
	cmp r1, #0
	beq _0807089C
	add r0, sp, #0xc
	movs r2, #6
	bl memcpy
	ldrh r1, [r5]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r5, #1]
	lsrs r0, r0, #2
	ldrh r2, [r5, #2]
	mov r3, sl
	ands r2, r3
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r5, #3]
	lsrs r0, r0, #2
	ldrh r3, [r5, #4]
	mov r4, sl
	ands r3, r4
	lsls r3, r3, #6
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	movs r0, #9
	str r0, [sp]
	adds r0, r7, #0
	bl func_0806F168
_0807089C:
	movs r1, #1
	add r8, r1
	ldr r2, [sp, #0x40]
	cmp r8, r2
	blo _080707E6
_080708A6:
	movs r5, #0x13
	ldr r1, [r7, #8]
	ldr r3, _08070904 @ =0x000034DC
	adds r1, r1, r3
	add r0, sp, #0x14
	bl __5ActorRC5Actor
	add r0, sp, #0xc
	add r1, sp, #0x14
	movs r2, #6
	bl memcpy
	ldrh r1, [r6]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldrb r0, [r6, #1]
	lsrs r0, r0, #2
	ldrh r2, [r6, #2]
	ldr r4, _080708E8 @ =0x000003FF
	ands r2, r4
	lsls r2, r2, #6
	orrs r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrb r0, [r6, #3]
	lsrs r0, r0, #2
	ldrh r3, [r6, #4]
	ands r3, r4
	lsls r3, r3, #6
	b _08070908
	.align 2, 0
_080708E4: .4byte 0x00002010
_080708E8: .4byte 0x000003FF
_080708EC: .4byte 0x00002034
_080708F0: .4byte 0x00002058
_080708F4: .4byte 0x0000207C
_080708F8: .4byte 0x000020A0
_080708FC: .4byte 0x000020C4
_08070900: .4byte 0x000020E8
_08070904: .4byte 0x000034DC
_08070908:
	orrs r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r5, [sp]
	adds r0, r7, #0
	bl func_0806F168
	ldr r0, [r7, #8]
	adds r0, #0x10
	bl func_0800E324
	cmp r0, #2
	bne _08070966
	ldr r0, [r7, #8]
	ldr r4, _080709D4 @ =0x000034C8
	adds r4, r4, r0
	mov r8, r4
	movs r4, #0x5b
	adds r5, r6, #0
_0807092E:
	mov r0, r8
	adds r1, r4, #0
	movs r2, #2
	bl func_080A1ED4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08070960
	add r0, sp, #0xc
	mov r1, r8
	adds r2, r4, #0
	bl func_080A1CBC
	ldr r1, [sp, #0x10]
	movs r0, #8
	ldrsh r2, [r5, r0]
	adds r2, #8
	movs r0, #0xa
	ldrsh r3, [r5, r0]
	adds r3, #8
	movs r0, #0x11
	str r0, [sp]
	adds r0, r7, #0
	bl func_0806F168
_08070960:
	adds r4, #1
	cmp r4, #0x5d
	bls _0807092E
_08070966:
	ldr r0, [r7, #8]
	adds r0, #0x14
	bl func_08009B18
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08070986
	movs r0, #0x12
	str r0, [sp]
	adds r0, r7, #0
	movs r1, #2
	movs r2, #0x88
	movs r3, #0xb4
	lsls r3, r3, #1
	bl func_0806F168
_08070986:
	movs r4, #0
_08070988:
	adds r0, r7, #0
	adds r1, r4, #0
	bl func_0806FBA4
	adds r4, #1
	cmp r4, #3
	bls _08070988
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _080709A8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080709A8:
	ldr r1, [sp, #0x30]
	str r7, [r1, #4]
	ldr r2, [sp, #0x34]
	ldr r1, [r2]
	cmp r1, #0
	beq _080709C0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080709C0:
	ldr r0, [sp, #0x30]
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080709D4: .4byte 0x000034C8

	thumb_func_start func_080709D8
func_080709D8: @ 0x080709D8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08070A04 @ =vtable_unk_080E7AEC
	str r0, [r4]
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080709F4
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080709F4:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08070A04: .4byte vtable_unk_080E7AEC

	thumb_func_start func_08070A08
func_08070A08: @ 0x08070A08
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	mov sl, r0
	str r0, [sp, #0x14]
	ldr r6, [r1, #4]
	adds r0, r6, #0
	bl func_08008918
	add r2, sp, #4
	movs r3, #0xf2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	ldr r3, _08070A58 @ =0x0000DC40
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	ldr r3, _08070A5C @ =0x0000D840
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	ldr r3, _08070A60 @ =0x0000D440
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	adds r0, r6, #0
	bl func_0806EC94
	adds r0, r6, #0
	bl func_0806EA78
	add r0, sp, #0xc
	mov sb, r0
	b _08070B1A
	.align 2, 0
_08070A58: .4byte 0x0000DC40
_08070A5C: .4byte 0x0000D840
_08070A60: .4byte 0x0000D440
_08070A64:
	adds r0, r6, #0
	bl func_080088C4
	adds r3, r0, #0
	str r3, [sp, #8]
	movs r2, #0
	movs r7, #0
	movs r4, #0
	lsls r1, r3, #0x18
	lsls r0, r3, #0x19
	lsrs r1, r1, #0x1f
	lsrs r0, r0, #0x1f
	cmp r1, r0
	beq _08070A8A
	lsls r1, r3, #0x1a
	lsls r0, r3, #0x1b
	lsrs r4, r1, #0x1f
	lsrs r0, r0, #0x1f
	eors r4, r0
_08070A8A:
	movs r5, #0x80
	lsls r5, r5, #3
	cmp r4, #0
	beq _08070A96
	movs r5, #0xb5
	lsls r5, r5, #2
_08070A96:
	add r1, sp, #8
	ldrb r3, [r1, #1]
	movs r0, #1
	ands r0, r3
	mov r8, r1
	cmp r0, #0
	beq _08070AA6
	lsls r5, r5, #1
_08070AA6:
	movs r0, #2
	ands r0, r3
	cmp r0, #0
	beq _08070AB4
	lsrs r0, r5, #0x1f
	adds r0, r5, r0
	asrs r5, r0, #1
_08070AB4:
	ldrb r1, [r1]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08070AC0
	adds r7, r5, #0
_08070AC0:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08070ACA
	subs r7, r7, r5
_08070ACA:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08070AD4
	rsbs r2, r5, #0
_08070AD4:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08070ADE
	adds r2, r2, r5
_08070ADE:
	adds r0, r6, #0
	adds r1, r2, #0
	adds r2, r7, #0
	bl func_0806EFC0
	adds r0, r6, #0
	adds r0, #0xd0
	ldr r4, [r0]
	ldr r5, [r0, #4]
	cmp r4, r5
	beq _08070B02
_08070AF4:
	adds r0, r4, #0
	adds r0, #8
	bl func_0805E8F0
	adds r4, #0x1c
	cmp r4, r5
	bne _08070AF4
_08070B02:
	mov r3, r8
	ldrb r1, [r3]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08070B14
	adds r0, r6, #0
	bl func_08070140
_08070B14:
	adds r0, r6, #0
	bl func_080087C8
_08070B1A:
	adds r0, r6, #0
	bl func_080088B8
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08070A64
	adds r0, r6, #0
	bl func_0806EAF4
	ldr r0, [r6, #0xc]
	movs r2, #0
	str r2, [r6, #0xc]
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #0xc]
	mov r3, sb
	str r0, [r3, #4]
	ldr r1, [sp, #0xc]
	str r2, [r1]
	ldr r1, [sp, #0x14]
	str r0, [r1]
	ldr r1, [sp]
	cmp r1, #0
	beq _08070B5E
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08070B5E:
	mov r0, sl
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_08070B70
func_08070B70: @ 0x08070B70
	push {r4, r5, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r4, r1, #0
	movs r1, #0
	bl func_08075E7C
	ldr r0, _08070C20 @ =vtable_unk_080E7B3C
	str r0, [r5, #4]
	movs r1, #0x90
	lsls r1, r1, #1
	adds r0, r5, r1
	str r4, [r0]
	movs r0, #0x92
	lsls r0, r0, #1
	adds r3, r5, r0
	movs r0, #0
	str r0, [r3]
	mov r1, sp
	str r0, [sp]
	strh r0, [r1, #4]
	str r0, [sp]
	movs r1, #0x94
	lsls r1, r1, #1
	adds r2, r5, r1
	cmp r2, #0
	beq _08070BAE
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r2]
	str r1, [r2, #4]
_08070BAE:
	ldr r0, [r3]
	adds r1, r0, #1
	str r1, [r3]
	movs r0, #1
	str r0, [sp]
	adds r2, r3, #0
	cmp r1, #9
	bhi _08070BD6
	lsls r0, r1, #3
	adds r0, #4
	adds r2, r2, r0
	cmp r2, #0
	beq _08070BD0
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r2]
	str r1, [r2, #4]
_08070BD0:
	ldr r0, [r3]
	adds r0, #1
	str r0, [r3]
_08070BD6:
	movs r0, #2
	str r0, [sp]
	movs r0, #0x92
	lsls r0, r0, #1
	adds r2, r5, r0
	ldr r0, [r2]
	cmp r0, #9
	bhi _08070BFE
	lsls r0, r0, #3
	adds r0, #4
	adds r3, r2, r0
	cmp r3, #0
	beq _08070BF8
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r3]
	str r1, [r3, #4]
_08070BF8:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_08070BFE:
	movs r0, #0xbc
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #0
	str r0, [r1]
	movs r1, #0x94
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r1, [r0]
	adds r0, r5, #0
	bl func_0807549C
	adds r0, r5, #0
	add sp, #8
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08070C20: .4byte vtable_unk_080E7B3C

	thumb_func_start func_08070C24
func_08070C24: @ 0x08070C24
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, [sp, #0x14]
	str r0, [sp]
	adds r0, r4, #0
	bl func_08076BFC
	ldr r0, _08070C7C @ =0x000005B4
	adds r1, r4, r0
	ldr r0, _08070C80 @ =vtable_unk_080E7B2C
	str r0, [r1]
	movs r0, #0xb7
	lsls r0, r0, #3
	adds r1, r4, r0
	movs r3, #0x77
	ldr r0, _08070C84 @ =0x0000FFFF
	adds r6, r0, #0
	movs r2, #0
	movs r5, #1
	rsbs r5, r5, #0
_08070C4E:
	ldrh r0, [r1]
	orrs r0, r6
	strh r0, [r1]
	strb r2, [r1, #4]
	str r2, [r1, #0x24]
	adds r0, r1, #0
	adds r0, #0x28
	strb r2, [r0]
	adds r1, #0x2c
	subs r3, #1
	cmp r3, r5
	bne _08070C4E
	movs r0, #7
	movs r1, #1
	rsbs r1, r1, #0
_08070C6C:
	subs r0, #1
	cmp r0, r1
	bne _08070C6C
	adds r0, r4, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08070C7C: .4byte 0x000005B4
_08070C80: .4byte vtable_unk_080E7B2C
_08070C84: .4byte 0x0000FFFF

	thumb_func_start func_08070C88
func_08070C88: @ 0x08070C88
	push {lr}
	ldr r2, _08070C9C @ =0x000005B4
	adds r3, r0, r2
	ldr r2, _08070CA0 @ =vtable_unk_080E7B2C
	str r2, [r3]
	bl func_08076E0C
	pop {r0}
	bx r0
	.align 2, 0
_08070C9C: .4byte 0x000005B4
_08070CA0: .4byte vtable_unk_080E7B2C

	thumb_func_start func_08070CA4
func_08070CA4: @ 0x08070CA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	movs r0, #0
	mov r8, r0
	movs r1, #0xb7
	lsls r1, r1, #3
	adds r2, r6, r1
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0
	bge _08070CC6
	b _08070DCA
_08070CC6:
	adds r0, #0x30
	subs r1, #0x28
	adds r4, r6, r1
	movs r3, #0
	ldrsh r1, [r4, r3]
	cmp r0, r1
	bge _08070CF8
	movs r7, #0xbc
	lsls r7, r7, #3
	adds r3, r6, r7
	movs r5, #0
_08070CDC:
	strb r5, [r3]
	adds r2, #0x2c
	adds r3, #0x2c
	movs r0, #1
	add r8, r0
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	blt _08070DCA
	adds r0, #0x30
	movs r7, #0
	ldrsh r1, [r4, r7]
	cmp r0, r1
	blt _08070CDC
_08070CF8:
	movs r0, #0x2c
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	adds r0, r6, r0
	movs r1, #0xb7
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0
	blt _08070DCA
	add r3, sp, #4
	mov sl, r3
	add r7, sp, #8
	mov sb, r7
_08070D18:
	movs r0, #0x2c
	mov r2, r8
	muls r2, r0, r2
	adds r5, r6, r2
	adds r0, r5, r1
	movs r3, #0
	ldrsh r1, [r0, r3]
	movs r7, #0xb2
	lsls r7, r7, #3
	adds r0, r6, r7
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r0, #0xa0
	cmp r1, r0
	bgt _08070DA4
	movs r0, #0xbc
	lsls r0, r0, #3
	adds r7, r5, r0
	ldrb r0, [r7]
	cmp r0, #0
	bne _08070DAE
	ldr r1, _08070D98 @ =0x000005DC
	adds r0, r6, r1
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r4, r0, #2
	adds r4, r4, r0
	lsls r4, r4, #6
	adds r4, r4, r0
	lsls r4, r4, #2
	adds r1, r4, r6
	ldr r2, _08070D9C @ =0x00001A58
	adds r1, r1, r2
	movs r0, #0x14
	mov r3, sl
	strh r0, [r3]
	movs r2, #2
	strh r2, [r3, #2]
	ldr r0, [sp, #4]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	ldr r3, _08070DA0 @ =0x000005BC
	adds r1, r5, r3
	adds r4, r4, r6
	ldr r0, _08070D9C @ =0x00001A58
	adds r4, r4, r0
	movs r3, #0x14
	mov r2, sb
	strh r3, [r2]
	movs r0, #2
	strh r0, [r2, #2]
	ldr r0, [sp, #8]
	adds r4, #4
	str r1, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	movs r0, #1
	strb r0, [r7]
	b _08070DAE
	.align 2, 0
_08070D98: .4byte 0x000005DC
_08070D9C: .4byte 0x00001A58
_08070DA0: .4byte 0x000005BC
_08070DA4:
	movs r2, #0xbc
	lsls r2, r2, #3
	adds r1, r5, r2
	movs r0, #0
	strb r0, [r1]
_08070DAE:
	movs r3, #1
	add r8, r3
	movs r0, #0x2c
	mov r7, r8
	muls r7, r0, r7
	adds r0, r7, #0
	adds r0, r6, r0
	movs r1, #0xb7
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0
	bge _08070D18
_08070DCA:
	adds r0, r6, #0
	bl func_08076EA8
	movs r0, #1
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08070DE4
func_08070DE4: @ 0x08070DE4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x11c
	str r0, [sp, #0xd0]
	movs r3, #0xd0
	lsls r3, r3, #1
	ldr r0, _08070E68 @ =0x080FBE7C
	str r0, [sp]
	ldr r0, [sp, #0xd0]
	bl func_08070C24
	ldr r0, [sp, #0xd0]
	ldr r2, _08070E6C @ =0x000005B4
	adds r1, r0, r2
	ldr r0, _08070E70 @ =vtable_unk_080E7B1C
	str r0, [r1]
	ldr r2, _08070E74 @ =0x080FBE8C
	add r0, sp, #0xa4
	movs r1, #2
	strh r1, [r0]
	strh r1, [r0, #2]
	ldr r0, [r0]
	ldr r3, [sp, #0xd0]
	ldr r5, _08070E78 @ =0x0000427C
	adds r4, r3, r5
	str r2, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r6, [sp, #0xd0]
	ldr r0, [r6]
	bl func_08008910
	adds r6, r0, #0
	add r0, sp, #8
	adds r1, r4, #0
	ldr r2, _08070E7C @ =0x06000700
	movs r3, #0x80
	bl func_08008F0C
	add r7, sp, #8
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08070E80
	cmp r1, #0
	beq _08070E5A
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08070E5A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	add r5, sp, #0x18
	mov sl, r5
	b _08070F4C
	.align 2, 0
_08070E68: .4byte 0x080FBE7C
_08070E6C: .4byte 0x000005B4
_08070E70: .4byte vtable_unk_080E7B1C
_08070E74: .4byte 0x080FBE8C
_08070E78: .4byte 0x0000427C
_08070E7C: .4byte 0x06000700
_08070E80:
	str r1, [sp, #0x110]
	movs r0, #1
	add r1, sp, #0xac
	str r0, [r1]
	ldr r0, [r6]
	ldr r7, [sp, #0x110]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0xa8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08070E9C
	adds r0, r1, #0
_08070E9C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08070EBA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08070EBE
	mov r0, r8
	bl func_080D3BC0
	b _08070EBE
_08070EBA:
	movs r0, #0
	mov r8, r0
_08070EBE:
	adds r5, r0, #0
	str r5, [sp, #0x114]
	ldr r2, [r6]
	adds r3, r5, #0
	add r0, sp, #0x18
	mov sl, r0
	ldr r1, [sp, #0x110]
	cmp r2, r1
	beq _08070EEA
_08070ED0:
	cmp r3, #0
	beq _08070EE0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08070EE0:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x110]
	cmp r2, r0
	bne _08070ED0
_08070EEA:
	adds r5, r3, #0
	ldr r1, [sp, #0xac]
	cmp r1, #1
	bne _08070F06
	cmp r5, #0
	beq _08070F02
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08070F02:
	adds r5, #0x10
	b _08070F28
_08070F06:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08070F26
_08070F0E:
	cmp r2, #0
	beq _08070F1E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08070F1E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08070F0E
_08070F26:
	adds r5, r2, #0
_08070F28:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08070F38
_08070F32:
	adds r1, #0x10
	cmp r1, r2
	bne _08070F32
_08070F38:
	cmp r0, #0
	beq _08070F40
	bl free
_08070F40:
	ldr r0, [sp, #0x114]
	add r0, r8
	ldr r7, [sp, #0x114]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08070F4C:
	ldr r1, _08071030 @ =0x086678A0
	mov r0, sl
	bl func_0805E6CC
	ldr r0, [sp, #0xd0]
	ldr r0, [r0, #4]
	str r0, [sp, #0xd4]
	movs r1, #4
	str r1, [sp, #0xd8]
	movs r2, #0
	str r2, [sp, #0xdc]
	movs r3, #0
	str r3, [sp, #0xe0]
_08070F66:
	ldr r4, [sp, #0xe0]
	str r4, [sp, #0xe4]
	ldr r5, [sp, #0xd0]
	ldr r6, _08071034 @ =0x0000058C
	adds r0, r5, r6
	ldr r0, [r0]
	adds r0, #0x54
	adds r1, r4, #0
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	ldr r7, [sp, #0xe0]
	adds r7, #1
	str r7, [sp, #0x100]
	cmp r0, #0
	bne _08070F88
	b _08071376
_08070F88:
	add r0, sp, #8
	ldr r1, [sp, #0xd8]
	lsls r6, r1, #3
	strh r6, [r0]
	movs r0, #8
	str r0, [sp, #0xc]
	add r4, sp, #0xb0
	adds r0, r4, #0
	ldr r1, [sp, #0xe0]
	bl __7ProductUi
	adds r0, r4, #0
	bl GetIconId__C7Product
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	add r5, sp, #0x48
	ldr r4, [sp, #0x18]
	add r0, sp, #0xb4
	ldr r3, [r4, #0xc]
	add r1, sp, #0x18
	bl _call_via_r3
	add r0, sp, #0xb4
	ldr r0, [r0]
	ldrh r2, [r0]
	adds r0, r5, #0
	ldr r3, [r4, #0x10]
	add r1, sp, #0x18
	bl _call_via_r3
	ldr r0, [sp, #0x50]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x58]
	str r0, [sp, #0x14]
	ldr r2, [sp, #0xd0]
	ldr r3, _08071038 @ =0x00000594
	adds r7, r2, r3
	mov r4, sp
	adds r4, #8
	str r4, [sp, #0xe8]
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	str r6, [sp, #0x108]
	cmp r1, r0
	beq _0807103C
	cmp r1, #0
	beq _08070FF6
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08070FF6:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	mov r3, sp
	adds r3, #0x68
	str r3, [sp, #0xec]
	add r4, sp, #0x6c
	mov sl, r4
	mov r5, sp
	adds r5, #0x90
	str r5, [sp, #0xf0]
	mov r6, sp
	adds r6, #0xc4
	str r6, [sp, #0xf4]
	add r7, sp, #0x94
	mov sb, r7
	ldr r0, [sp, #0xd8]
	lsls r0, r0, #6
	str r0, [sp, #0x10c]
	ldr r1, [sp, #0xd8]
	adds r1, #2
	str r1, [sp, #0xf8]
	ldr r2, [sp, #0xd8]
	adds r2, #4
	str r2, [sp, #0x104]
	ldr r3, [sp, #0xdc]
	adds r3, #1
	str r3, [sp, #0xfc]
	b _08071142
	.align 2, 0
_08071030: .4byte 0x086678A0
_08071034: .4byte 0x0000058C
_08071038: .4byte 0x00000594
_0807103C:
	str r1, [sp, #0x118]
	movs r0, #1
	add r1, sp, #0xc0
	str r0, [r1]
	ldr r3, [r7]
	ldr r4, [sp, #0x118]
	subs r0, r4, r3
	asrs r4, r0, #4
	add r0, sp, #0xbc
	str r4, [r0]
	ldr r2, [r1]
	adds r1, r3, #0
	cmp r4, r2
	bhs _0807105A
	add r0, sp, #0xc0
_0807105A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807107A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08071076
	mov r0, r8
	bl func_080D3BC0
_08071076:
	ldr r1, [r7]
	b _0807107E
_0807107A:
	movs r0, #0
	mov r8, r0
_0807107E:
	adds r5, r0, #0
	str r5, [sp, #0x114]
	adds r3, r1, #0
	adds r2, r5, #0
	mov r5, sp
	adds r5, #0x68
	str r5, [sp, #0xec]
	add r6, sp, #0x6c
	mov sl, r6
	mov r0, sp
	adds r0, #0x90
	str r0, [sp, #0xf0]
	mov r1, sp
	adds r1, #0xc4
	str r1, [sp, #0xf4]
	add r4, sp, #0x94
	mov sb, r4
	ldr r5, [sp, #0xd8]
	lsls r5, r5, #6
	str r5, [sp, #0x10c]
	ldr r6, [sp, #0xd8]
	adds r6, #2
	str r6, [sp, #0xf8]
	ldr r0, [sp, #0xd8]
	adds r0, #4
	str r0, [sp, #0x104]
	ldr r1, [sp, #0xdc]
	adds r1, #1
	str r1, [sp, #0xfc]
	ldr r4, [sp, #0xe0]
	adds r4, #1
	str r4, [sp, #0x100]
	ldr r5, [sp, #0x118]
	cmp r3, r5
	beq _080710DE
_080710C4:
	cmp r2, #0
	beq _080710D4
	adds r0, r2, #0
	adds r1, r3, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080710D4:
	adds r3, #0x10
	adds r2, #0x10
	ldr r6, [sp, #0x118]
	cmp r3, r6
	bne _080710C4
_080710DE:
	adds r5, r2, #0
	ldr r1, [sp, #0xc0]
	cmp r1, #1
	bne _080710FA
	cmp r5, #0
	beq _080710F6
	adds r0, r5, #0
	ldr r1, [sp, #0xe8]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080710F6:
	adds r5, #0x10
	b _0807111C
_080710FA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0807111A
_08071102:
	cmp r2, #0
	beq _08071112
	adds r0, r2, #0
	ldr r1, [sp, #0xe8]
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08071112:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08071102
_0807111A:
	adds r5, r2, #0
_0807111C:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _0807112C
_08071126:
	adds r0, #0x10
	cmp r0, r2
	bne _08071126
_0807112C:
	cmp r1, #0
	beq _08071136
	adds r0, r1, #0
	bl free
_08071136:
	ldr r0, [sp, #0x114]
	add r0, r8
	ldr r6, [sp, #0x114]
	str r6, [r7]
	str r5, [r7, #4]
	str r0, [r7, #0xc]
_08071142:
	ldr r0, [sp, #0xec]
	ldr r1, _08071238 @ =0x0000FFFF
	strh r1, [r0]
	movs r6, #0
	mov r7, sl
	strb r6, [r7]
	str r6, [r0, #0x24]
	ldr r1, [sp, #0xf0]
	strb r6, [r1]
	movs r7, #0
	add r1, sp, #0x108
	ldrh r1, [r1]
	strh r1, [r0]
	ldr r0, [sp, #0xf4]
	ldr r1, [sp, #0xe4]
	bl __7ProductUi
	ldr r0, [sp, #0xf4]
	bl GetName__C7Product
	adds r5, r0, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x1c
	bls _08071178
	movs r4, #0x1c
_08071178:
	mov r0, sl
	adds r1, r5, #0
	adds r2, r4, #0
	bl memcpy
	mov r2, sl
	adds r0, r2, r4
	strb r7, [r0]
	movs r5, #7
	ldr r3, [sp, #0xdc]
	ands r5, r3
	ldr r4, [sp, #0xec]
	str r5, [r4, #0x24]
	movs r0, #0x2c
	adds r4, r3, #0
	muls r4, r0, r4
	ldr r7, [sp, #0xd0]
	adds r4, r4, r7
	movs r0, #0xb7
	lsls r0, r0, #3
	adds r4, r4, r0
	ldr r1, [sp, #0xec]
	ldrh r0, [r1]
	strh r0, [r4]
	adds r0, r4, #4
	mov r1, sl
	bl strcpy
	ldr r2, [sp, #0xec]
	ldr r0, [r2, #0x24]
	str r0, [r4, #0x24]
	ldr r3, [sp, #0xf0]
	ldrb r0, [r3]
	adds r4, #0x28
	strb r0, [r4]
	add r4, sp, #0x108
	ldrh r7, [r4]
	mov r4, sb
	strh r7, [r4]
	lsls r4, r5, #2
	adds r4, r4, r5
	lsls r0, r4, #6
	adds r0, r0, r5
	lsls r0, r0, #2
	ldr r5, [sp, #0xd0]
	adds r0, r0, r5
	ldr r7, _0807123C @ =0x00001A5C
	adds r0, r0, r7
	mov r1, sb
	str r0, [r1, #4]
	lsls r4, r4, #3
	movs r2, #0xc0
	lsls r2, r2, #1
	adds r4, r4, r2
	ldr r3, [sp, #0xd4]
	ldr r0, [r3, #0x18]
	ldr r5, [sp, #0x10c]
	adds r0, r0, r5
	adds r0, #8
	str r6, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	adds r1, r4, #0
	movs r2, #0x14
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #5
	movs r7, #0xc0
	lsls r7, r7, #0x13
	adds r4, r4, r7
	mov r0, sb
	str r4, [r0, #8]
	movs r0, #0xa0
	lsls r0, r0, #3
	mov r1, sb
	str r0, [r1, #0xc]
	ldr r2, [sp, #0xd0]
	ldr r3, _08071240 @ =0x000005A4
	adds r6, r2, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08071244
	cmp r1, #0
	beq _08071230
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071230:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08071316
	.align 2, 0
_08071238: .4byte 0x0000FFFF
_0807123C: .4byte 0x00001A5C
_08071240: .4byte 0x000005A4
_08071244:
	str r1, [sp, #0x110]
	movs r0, #1
	add r1, sp, #0xcc
	str r0, [r1]
	ldr r3, [r6]
	ldr r2, [sp, #0x110]
	subs r0, r2, r3
	asrs r4, r0, #4
	add r0, sp, #0xc8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	adds r1, r3, #0
	cmp r4, r2
	bhs _08071264
	mov r0, sl
_08071264:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08071284
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08071280
	mov r0, r8
	bl func_080D3BC0
_08071280:
	ldr r1, [r6]
	b _08071288
_08071284:
	movs r0, #0
	mov r8, r0
_08071288:
	adds r5, r0, #0
	str r5, [sp, #0x114]
	adds r3, r1, #0
	adds r2, r5, #0
	ldr r4, [sp, #0x110]
	cmp r3, r4
	beq _080712B0
_08071296:
	cmp r2, #0
	beq _080712A6
	adds r0, r2, #0
	adds r1, r3, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080712A6:
	adds r3, #0x10
	adds r2, #0x10
	ldr r5, [sp, #0x110]
	cmp r3, r5
	bne _08071296
_080712B0:
	adds r5, r2, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _080712CE
	cmp r5, #0
	beq _080712CA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080712CA:
	adds r5, #0x10
	b _080712F0
_080712CE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080712EE
_080712D6:
	cmp r2, #0
	beq _080712E6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080712E6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080712D6
_080712EE:
	adds r5, r2, #0
_080712F0:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08071300
_080712FA:
	adds r0, #0x10
	cmp r0, r2
	bne _080712FA
_08071300:
	cmp r1, #0
	beq _0807130A
	adds r0, r1, #0
	bl free
_0807130A:
	ldr r0, [sp, #0x114]
	add r0, r8
	ldr r7, [sp, #0x114]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08071316:
	movs r5, #0
	ldr r0, [sp, #0xd0]
	ldr r1, _080713A4 @ =0x0000058C
	adds r4, r0, r1
	ldr r0, [r4]
	adds r0, #0x54
	ldr r1, [sp, #0xe4]
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807133A
	ldr r0, [r4]
	adds r0, #0x54
	ldr r1, [sp, #0xe4]
	bl GetAmountShipped__C11ShippingBini
	adds r5, r0, #0
_0807133A:
	ldr r2, [sp, #0xd4]
	ldr r1, [r2, #0x18]
	ldr r3, [sp, #0xf8]
	lsls r4, r3, #6
	adds r1, r1, r4
	adds r1, #0x32
	movs r6, #0x20
	str r6, [sp]
	adds r0, r5, #0
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r7, [sp, #0xd4]
	ldr r0, [r7, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	movs r1, #0
	str r1, [sp]
	str r6, [sp, #4]
	movs r1, #0x38
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [sp, #0x104]
	str r0, [sp, #0xd8]
	ldr r1, [sp, #0xfc]
	str r1, [sp, #0xdc]
_08071376:
	ldr r2, [sp, #0x100]
	str r2, [sp, #0xe0]
	cmp r2, #0x66
	bgt _08071380
	b _08070F66
_08071380:
	ldr r3, [sp, #0xd0]
	ldr r0, [r3, #4]
	ldr r4, [sp, #0xd8]
	lsls r1, r4, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r0, _080713A8 @ =vtable_unk_080E5A28
	str r0, [sp, #0x18]
	ldr r0, [sp, #0xd0]
	add sp, #0x11c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080713A4: .4byte 0x0000058C
_080713A8: .4byte vtable_unk_080E5A28

	thumb_func_start func_080713AC
func_080713AC: @ 0x080713AC
	push {lr}
	bl func_08070CA4
	movs r0, #1
	pop {r1}
	bx r1

	thumb_func_start func_080713B8
func_080713B8: @ 0x080713B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x184
	str r0, [sp, #0x100]
	ldr r3, _0807148C @ =0x000001A1
	ldr r0, _08071490 @ =0x080FBE90
	str r0, [sp]
	ldr r0, [sp, #0x100]
	bl func_08070C24
	ldr r0, [sp, #0x100]
	ldr r2, _08071494 @ =0x000005B4
	adds r1, r0, r2
	ldr r0, _08071498 @ =vtable_unk_080E7B0C
	str r0, [r1]
	ldr r3, _0807149C @ =0x080FBE9C
	add r0, sp, #0x94
	movs r1, #4
	movs r2, #2
	strh r1, [r0]
	strh r2, [r0, #2]
	ldr r0, [r0]
	ldr r5, [sp, #0x100]
	ldr r6, _080714A0 @ =0x0000427C
	adds r4, r5, r6
	str r3, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r0, #0
	add r0, sp, #8
	adds r1, r4, #0
	ldr r2, _080714A4 @ =0x06000700
	bl func_08008F0C
	add r7, sp, #8
	mov sb, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080714BC
	cmp r1, #0
	beq _0807142E
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807142E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r5, sp
	adds r5, #0xa0
	str r5, [sp, #0x128]
	ldr r6, [sp, #0x100]
	movs r7, #0x87
	lsls r7, r7, #7
	adds r6, r6, r7
	mov sl, r6
	mov r0, sp
	adds r0, #0xac
	str r0, [sp, #0x12c]
	ldr r2, _080714A8 @ =0x00004684
	ldr r1, [sp, #0x100]
	adds r2, r1, r2
	str r2, [sp, #0x168]
	mov r3, sp
	adds r3, #0xb8
	str r3, [sp, #0x130]
	ldr r4, _080714AC @ =0x00004888
	adds r4, r1, r4
	str r4, [sp, #0x160]
	adds r5, #0x24
	str r5, [sp, #0x134]
	ldr r6, _080714B0 @ =0x0000498C
	adds r6, r1, r6
	str r6, [sp, #0x164]
	mov r7, sp
	adds r7, #0xd0
	str r7, [sp, #0x138]
	ldr r0, _080714B4 @ =0x00004A10
	adds r0, r1, r0
	str r0, [sp, #0x16c]
	mov r1, sp
	adds r1, #0xdc
	str r1, [sp, #0x140]
	ldr r3, _080714B8 @ =0x00004B14
	ldr r2, [sp, #0x100]
	adds r3, r2, r3
	str r3, [sp, #0x13c]
	mov r4, sp
	adds r4, #0x18
	str r4, [sp, #0x170]
	b _080715E6
	.align 2, 0
_0807148C: .4byte 0x000001A1
_08071490: .4byte 0x080FBE90
_08071494: .4byte 0x000005B4
_08071498: .4byte vtable_unk_080E7B0C
_0807149C: .4byte 0x080FBE9C
_080714A0: .4byte 0x0000427C
_080714A4: .4byte 0x06000700
_080714A8: .4byte 0x00004684
_080714AC: .4byte 0x00004888
_080714B0: .4byte 0x0000498C
_080714B4: .4byte 0x00004A10
_080714B8: .4byte 0x00004B14
_080714BC:
	str r1, [sp, #0x174]
	movs r0, #1
	add r1, sp, #0x9c
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x174]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x98
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080714D8
	adds r0, r1, #0
_080714D8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080714F6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080714FA
	mov r0, r8
	bl func_080D3BC0
	b _080714FA
_080714F6:
	movs r0, #0
	mov r8, r0
_080714FA:
	adds r5, r0, #0
	str r5, [sp, #0x178]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r7, sp
	adds r7, #0xa0
	str r7, [sp, #0x128]
	ldr r0, [sp, #0x100]
	movs r1, #0x87
	lsls r1, r1, #7
	adds r0, r0, r1
	mov sl, r0
	mov r4, sp
	adds r4, #0xac
	str r4, [sp, #0x12c]
	ldr r7, _0807158C @ =0x00004684
	ldr r5, [sp, #0x100]
	adds r7, r5, r7
	str r7, [sp, #0x168]
	mov r0, sp
	adds r0, #0xb8
	str r0, [sp, #0x130]
	ldr r1, _08071590 @ =0x00004888
	adds r1, r5, r1
	str r1, [sp, #0x160]
	adds r4, #0x18
	str r4, [sp, #0x134]
	ldr r7, _08071594 @ =0x0000498C
	adds r7, r5, r7
	str r7, [sp, #0x164]
	adds r0, #0x18
	str r0, [sp, #0x138]
	ldr r1, _08071598 @ =0x00004A10
	adds r1, r5, r1
	str r1, [sp, #0x16c]
	adds r4, #0x18
	str r4, [sp, #0x140]
	ldr r7, _0807159C @ =0x00004B14
	adds r7, r5, r7
	str r7, [sp, #0x13c]
	subs r0, #0xb8
	str r0, [sp, #0x170]
	ldr r1, [sp, #0x174]
	cmp r2, r1
	beq _0807156E
_08071554:
	cmp r3, #0
	beq _08071564
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071564:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x174]
	cmp r2, r0
	bne _08071554
_0807156E:
	adds r5, r3, #0
	ldr r1, [sp, #0x9c]
	cmp r1, #1
	bne _080715A0
	cmp r5, #0
	beq _08071586
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08071586:
	adds r5, #0x10
	b _080715C2
	.align 2, 0
_0807158C: .4byte 0x00004684
_08071590: .4byte 0x00004888
_08071594: .4byte 0x0000498C
_08071598: .4byte 0x00004A10
_0807159C: .4byte 0x00004B14
_080715A0:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080715C0
_080715A8:
	cmp r2, #0
	beq _080715B8
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080715B8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080715A8
_080715C0:
	adds r5, r2, #0
_080715C2:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080715D2
_080715CC:
	adds r1, #0x10
	cmp r1, r2
	bne _080715CC
_080715D2:
	cmp r0, #0
	beq _080715DA
	bl free
_080715DA:
	ldr r0, [sp, #0x178]
	add r0, r8
	ldr r7, [sp, #0x178]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080715E6:
	ldr r3, _08071640 @ =0x080FBEA4
	movs r1, #0xc
	movs r2, #2
	add r0, sp, #0xa0
	strh r1, [r0]
	ldr r1, [sp, #0x128]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	mov r1, sl
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r2, [sp, #0x100]
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #8
	mov r1, sl
	ldr r2, _08071644 @ =0x06000800
	bl func_08008F0C
	add r3, sp, #8
	mov sb, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08071648
	cmp r1, #0
	beq _08071636
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071636:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08071714
	.align 2, 0
_08071640: .4byte 0x080FBEA4
_08071644: .4byte 0x06000800
_08071648:
	str r1, [sp, #0x174]
	movs r0, #1
	add r1, sp, #0xa8
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x174]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xa4
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08071666
	mov r0, sl
_08071666:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08071684
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08071688
	mov r0, r8
	bl func_080D3BC0
	b _08071688
_08071684:
	movs r0, #0
	mov r8, r0
_08071688:
	adds r5, r0, #0
	str r5, [sp, #0x178]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x174]
	cmp r2, r4
	beq _080716B0
_08071696:
	cmp r3, #0
	beq _080716A6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080716A6:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x174]
	cmp r2, r5
	bne _08071696
_080716B0:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _080716CE
	cmp r5, #0
	beq _080716CA
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080716CA:
	adds r5, #0x10
	b _080716F0
_080716CE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080716EE
_080716D6:
	cmp r2, #0
	beq _080716E6
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080716E6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080716D6
_080716EE:
	adds r5, r2, #0
_080716F0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08071700
_080716FA:
	adds r1, #0x10
	cmp r1, r2
	bne _080716FA
_08071700:
	cmp r0, #0
	beq _08071708
	bl free
_08071708:
	ldr r0, [sp, #0x178]
	add r0, r8
	ldr r7, [sp, #0x178]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08071714:
	ldr r3, _0807176C @ =0x080FBEB4
	movs r1, #8
	movs r2, #2
	add r0, sp, #0xac
	strh r1, [r0]
	ldr r1, [sp, #0x12c]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x168]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r2, [sp, #0x100]
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x168]
	ldr r2, _08071770 @ =0x06000B00
	bl func_08008F0C
	add r3, sp, #8
	mov sb, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08071774
	cmp r1, #0
	beq _08071764
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071764:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08071840
	.align 2, 0
_0807176C: .4byte 0x080FBEB4
_08071770: .4byte 0x06000B00
_08071774:
	str r1, [sp, #0x174]
	movs r0, #1
	add r1, sp, #0xb4
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x174]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xb0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08071792
	mov r0, sl
_08071792:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080717B0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080717B4
	mov r0, r8
	bl func_080D3BC0
	b _080717B4
_080717B0:
	movs r0, #0
	mov r8, r0
_080717B4:
	adds r5, r0, #0
	str r5, [sp, #0x178]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x174]
	cmp r2, r4
	beq _080717DC
_080717C2:
	cmp r3, #0
	beq _080717D2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080717D2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x174]
	cmp r2, r5
	bne _080717C2
_080717DC:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _080717FA
	cmp r5, #0
	beq _080717F6
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080717F6:
	adds r5, #0x10
	b _0807181C
_080717FA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0807181A
_08071802:
	cmp r2, #0
	beq _08071812
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071812:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08071802
_0807181A:
	adds r5, r2, #0
_0807181C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0807182C
_08071826:
	adds r1, #0x10
	cmp r1, r2
	bne _08071826
_0807182C:
	cmp r0, #0
	beq _08071834
	bl free
_08071834:
	ldr r0, [sp, #0x178]
	add r0, r8
	ldr r7, [sp, #0x178]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08071840:
	ldr r3, _08071898 @ =0x080FBEC0
	movs r1, #4
	movs r2, #2
	add r0, sp, #0xb8
	strh r1, [r0]
	ldr r1, [sp, #0x130]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x160]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r2, [sp, #0x100]
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x160]
	ldr r2, _0807189C @ =0x06000D00
	bl func_08008F0C
	add r3, sp, #8
	mov sb, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080718A0
	cmp r1, #0
	beq _08071890
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071890:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0807196C
	.align 2, 0
_08071898: .4byte 0x080FBEC0
_0807189C: .4byte 0x06000D00
_080718A0:
	str r1, [sp, #0x174]
	movs r0, #1
	add r1, sp, #0xc0
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x174]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xbc
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080718BE
	mov r0, sl
_080718BE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080718DC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080718E0
	mov r0, r8
	bl func_080D3BC0
	b _080718E0
_080718DC:
	movs r0, #0
	mov r8, r0
_080718E0:
	adds r5, r0, #0
	str r5, [sp, #0x178]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x174]
	cmp r2, r4
	beq _08071908
_080718EE:
	cmp r3, #0
	beq _080718FE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080718FE:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x174]
	cmp r2, r5
	bne _080718EE
_08071908:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _08071926
	cmp r5, #0
	beq _08071922
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08071922:
	adds r5, #0x10
	b _08071948
_08071926:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08071946
_0807192E:
	cmp r2, #0
	beq _0807193E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807193E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807192E
_08071946:
	adds r5, r2, #0
_08071948:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08071958
_08071952:
	adds r1, #0x10
	cmp r1, r2
	bne _08071952
_08071958:
	cmp r0, #0
	beq _08071960
	bl free
_08071960:
	ldr r0, [sp, #0x178]
	add r0, r8
	ldr r7, [sp, #0x178]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0807196C:
	ldr r2, _080719C0 @ =0x080FBEC8
	movs r0, #2
	add r1, sp, #0xc4
	strh r0, [r1]
	ldr r3, [sp, #0x134]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x164]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r4, [sp, #0x100]
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x164]
	ldr r2, _080719C4 @ =0x06000E00
	movs r3, #0x80
	bl func_08008F0C
	add r5, sp, #8
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080719C8
	cmp r1, #0
	beq _080719B8
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080719B8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08071A94
	.align 2, 0
_080719C0: .4byte 0x080FBEC8
_080719C4: .4byte 0x06000E00
_080719C8:
	str r1, [sp, #0x174]
	movs r0, #1
	add r1, sp, #0xcc
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0x174]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0xc8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _080719E6
	mov r0, sl
_080719E6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08071A04
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08071A08
	mov r0, r8
	bl func_080D3BC0
	b _08071A08
_08071A04:
	movs r0, #0
	mov r8, r0
_08071A08:
	adds r5, r0, #0
	str r5, [sp, #0x178]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x174]
	cmp r2, r5
	beq _08071A30
_08071A16:
	cmp r3, #0
	beq _08071A26
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071A26:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x174]
	cmp r2, r7
	bne _08071A16
_08071A30:
	adds r5, r3, #0
	mov r0, sl
	ldr r1, [r0]
	cmp r1, #1
	bne _08071A4E
	cmp r5, #0
	beq _08071A4A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08071A4A:
	adds r5, #0x10
	b _08071A70
_08071A4E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08071A6E
_08071A56:
	cmp r2, #0
	beq _08071A66
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071A66:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08071A56
_08071A6E:
	adds r5, r2, #0
_08071A70:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08071A80
_08071A7A:
	adds r1, #0x10
	cmp r1, r2
	bne _08071A7A
_08071A80:
	cmp r0, #0
	beq _08071A88
	bl free
_08071A88:
	ldr r0, [sp, #0x178]
	add r0, r8
	ldr r7, [sp, #0x178]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08071A94:
	ldr r3, _08071AEC @ =0x080FBECC
	movs r1, #4
	movs r2, #2
	add r0, sp, #0xd0
	strh r1, [r0]
	ldr r1, [sp, #0x138]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x16c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r2, [sp, #0x100]
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x16c]
	ldr r2, _08071AF0 @ =0x06000E80
	bl func_08008F0C
	add r3, sp, #8
	mov sb, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08071AF4
	cmp r1, #0
	beq _08071AE4
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071AE4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08071BC0
	.align 2, 0
_08071AEC: .4byte 0x080FBECC
_08071AF0: .4byte 0x06000E80
_08071AF4:
	str r1, [sp, #0x174]
	movs r0, #1
	add r1, sp, #0xd8
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x174]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xd4
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08071B12
	mov r0, sl
_08071B12:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08071B30
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08071B34
	mov r0, r8
	bl func_080D3BC0
	b _08071B34
_08071B30:
	movs r0, #0
	mov r8, r0
_08071B34:
	adds r5, r0, #0
	str r5, [sp, #0x178]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x174]
	cmp r2, r4
	beq _08071B5C
_08071B42:
	cmp r3, #0
	beq _08071B52
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071B52:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x174]
	cmp r2, r5
	bne _08071B42
_08071B5C:
	adds r5, r3, #0
	mov r7, sl
	ldr r1, [r7]
	cmp r1, #1
	bne _08071B7A
	cmp r5, #0
	beq _08071B76
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08071B76:
	adds r5, #0x10
	b _08071B9C
_08071B7A:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08071B9A
_08071B82:
	cmp r2, #0
	beq _08071B92
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071B92:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08071B82
_08071B9A:
	adds r5, r2, #0
_08071B9C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08071BAC
_08071BA6:
	adds r1, #0x10
	cmp r1, r2
	bne _08071BA6
_08071BAC:
	cmp r0, #0
	beq _08071BB4
	bl free
_08071BB4:
	ldr r0, [sp, #0x178]
	add r0, r8
	ldr r7, [sp, #0x178]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08071BC0:
	ldr r2, _08071C14 @ =0x080FBE8C
	movs r0, #2
	add r1, sp, #0xdc
	strh r0, [r1]
	ldr r3, [sp, #0x140]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x13c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	ldr r4, [sp, #0x100]
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x13c]
	ldr r2, _08071C18 @ =0x06000F80
	movs r3, #0x80
	bl func_08008F0C
	add r5, sp, #8
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08071C1C
	cmp r1, #0
	beq _08071C0C
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071C0C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08071CE8
	.align 2, 0
_08071C14: .4byte 0x080FBE8C
_08071C18: .4byte 0x06000F80
_08071C1C:
	str r1, [sp, #0x174]
	movs r0, #1
	add r1, sp, #0xe4
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0x174]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0xe0
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	cmp r4, r2
	bhs _08071C3A
	mov r0, sl
_08071C3A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08071C58
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08071C5C
	mov r0, r8
	bl func_080D3BC0
	b _08071C5C
_08071C58:
	movs r0, #0
	mov r8, r0
_08071C5C:
	adds r5, r0, #0
	str r5, [sp, #0x178]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x174]
	cmp r2, r5
	beq _08071C84
_08071C6A:
	cmp r3, #0
	beq _08071C7A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071C7A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x174]
	cmp r2, r7
	bne _08071C6A
_08071C84:
	adds r5, r3, #0
	mov r0, sl
	ldr r1, [r0]
	cmp r1, #1
	bne _08071CA2
	cmp r5, #0
	beq _08071C9E
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08071C9E:
	adds r5, #0x10
	b _08071CC4
_08071CA2:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08071CC2
_08071CAA:
	cmp r2, #0
	beq _08071CBA
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08071CBA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08071CAA
_08071CC2:
	adds r5, r2, #0
_08071CC4:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08071CD4
_08071CCE:
	adds r1, #0x10
	cmp r1, r2
	bne _08071CCE
_08071CD4:
	cmp r0, #0
	beq _08071CDC
	bl free
_08071CDC:
	ldr r0, [sp, #0x178]
	add r0, r8
	ldr r7, [sp, #0x178]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08071CE8:
	ldr r1, _08071DAC @ =0x086678A0
	ldr r0, [sp, #0x170]
	bl func_0805E6CC
	movs r0, #4
	mov r8, r0
	movs r1, #0
	str r1, [sp, #0x104]
	movs r2, #0
	str r2, [sp, #0x108]
	ldr r4, _08071DB0 @ =0x0000058C
	ldr r3, [sp, #0x100]
	adds r4, r3, r4
	str r4, [sp, #0x114]
_08071D04:
	ldr r5, [sp, #0x100]
	ldr r5, [r5, #4]
	str r5, [sp, #0x10c]
	ldr r6, [sp, #0x108]
	str r6, [sp, #0x110]
	ldr r7, [sp, #0x114]
	ldr r0, [r7]
	movs r4, #0xb2
	lsls r4, r4, #6
	adds r0, r0, r4
	adds r1, r6, #0
	bl func_0809CE1C
	ldr r1, [sp, #0x108]
	adds r1, #1
	str r1, [sp, #0x14c]
	cmp r0, #0
	bne _08071D2A
	b _0807229E
_08071D2A:
	ldr r2, [sp, #0x108]
	cmp r2, #0x34
	bgt _08071D32
	b _08071EBC
_08071D32:
	add r0, sp, #8
	mov r3, r8
	lsls r6, r3, #3
	strh r6, [r0]
	movs r0, #0x10
	str r0, [sp, #0xc]
	ldr r0, [r7]
	adds r0, r0, r4
	ldr r1, [sp, #0x108]
	bl func_0809CE30
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	add r5, sp, #0x48
	ldr r4, [sp, #0x18]
	add r0, sp, #0xe8
	ldr r3, [r4, #0xc]
	add r1, sp, #0x18
	bl _call_via_r3
	add r0, sp, #0xe8
	ldr r0, [r0]
	ldrh r2, [r0]
	adds r0, r5, #0
	ldr r3, [r4, #0x10]
	add r1, sp, #0x18
	bl _call_via_r3
	ldr r0, [sp, #0x50]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x58]
	str r0, [sp, #0x14]
	ldr r4, [sp, #0x100]
	ldr r0, _08071DB4 @ =0x00000594
	adds r7, r4, r0
	mov r1, sp
	adds r1, #8
	str r1, [sp, #0x118]
	ldr r1, [r7, #4]
	ldr r0, [r7, #0xc]
	str r6, [sp, #0x158]
	str r5, [sp, #0x11c]
	cmp r1, r0
	beq _08071DB8
	cmp r1, #0
	beq _08071D9C
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08071D9C:
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	mov r5, r8
	lsls r5, r5, #6
	str r5, [sp, #0x15c]
	b _08071EE8
	.align 2, 0
_08071DAC: .4byte 0x086678A0
_08071DB0: .4byte 0x0000058C
_08071DB4: .4byte 0x00000594
_08071DB8:
	str r1, [sp, #0x17c]
	movs r0, #1
	add r1, sp, #0xf4
	str r0, [r1]
	ldr r3, [r7]
	ldr r5, [sp, #0x17c]
	subs r0, r5, r3
	asrs r4, r0, #4
	add r0, sp, #0xf0
	str r4, [r0]
	ldr r2, [r1]
	adds r1, r3, #0
	cmp r4, r2
	bhs _08071DD6
	add r0, sp, #0xf4
_08071DD6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08071DF6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08071DF2
	mov r0, sb
	bl func_080D3BC0
_08071DF2:
	ldr r1, [r7]
	b _08071DFA
_08071DF6:
	movs r0, #0
	mov sb, r0
_08071DFA:
	adds r4, r0, #0
	str r4, [sp, #0x180]
	adds r3, r1, #0
	adds r2, r4, #0
	mov r6, r8
	lsls r6, r6, #6
	str r6, [sp, #0x15c]
	add r0, sp, #0x68
	mov sl, r0
	mov r1, sp
	adds r1, #0x6c
	str r1, [sp, #0x120]
	mov r4, sp
	adds r4, #0x90
	str r4, [sp, #0x124]
	mov r5, r8
	adds r5, #2
	str r5, [sp, #0x144]
	mov r6, r8
	adds r6, #4
	str r6, [sp, #0x150]
	mov r0, r8
	adds r0, #7
	str r0, [sp, #0x154]
	ldr r1, [sp, #0x104]
	adds r1, #1
	str r1, [sp, #0x148]
	ldr r4, [sp, #0x108]
	adds r4, #1
	str r4, [sp, #0x14c]
	ldr r5, [sp, #0x17c]
	cmp r3, r5
	beq _08071E56
_08071E3C:
	cmp r2, #0
	beq _08071E4C
	adds r0, r2, #0
	adds r1, r3, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08071E4C:
	adds r3, #0x10
	adds r2, #0x10
	ldr r6, [sp, #0x17c]
	cmp r3, r6
	bne _08071E3C
_08071E56:
	adds r4, r2, #0
	ldr r1, [sp, #0xf4]
	cmp r1, #1
	bne _08071E72
	cmp r4, #0
	beq _08071E6E
	adds r0, r4, #0
	ldr r1, [sp, #0x118]
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_08071E6E:
	adds r4, #0x10
	b _08071E94
_08071E72:
	adds r3, r1, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _08071E92
_08071E7A:
	cmp r2, #0
	beq _08071E8A
	adds r0, r2, #0
	ldr r1, [sp, #0x118]
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08071E8A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08071E7A
_08071E92:
	adds r4, r2, #0
_08071E94:
	ldr r2, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	cmp r1, r2
	beq _08071EA4
_08071E9E:
	adds r0, #0x10
	cmp r0, r2
	bne _08071E9E
_08071EA4:
	cmp r1, #0
	beq _08071EAE
	adds r0, r1, #0
	bl free
_08071EAE:
	ldr r0, [sp, #0x180]
	add r0, sb
	ldr r6, [sp, #0x180]
	str r6, [r7]
	str r4, [r7, #4]
	str r0, [r7, #0xc]
	b _08071F10
_08071EBC:
	ldr r7, [sp, #0x10c]
	ldr r0, [r7, #0x18]
	mov r1, r8
	lsls r4, r1, #6
	adds r0, r0, r4
	adds r0, #4
	movs r2, #0
	str r2, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	movs r1, #0x38
	movs r2, #4
	movs r3, #2
	bl func_0804E9F4
	mov r3, r8
	lsls r3, r3, #3
	str r3, [sp, #0x158]
	mov r5, sp
	adds r5, #0x48
	str r5, [sp, #0x11c]
	str r4, [sp, #0x15c]
_08071EE8:
	add r6, sp, #0x68
	mov sl, r6
	mov r7, sp
	adds r7, #0x6c
	str r7, [sp, #0x120]
	mov r0, sp
	adds r0, #0x90
	str r0, [sp, #0x124]
	mov r1, r8
	adds r1, #2
	str r1, [sp, #0x144]
	mov r2, r8
	adds r2, #4
	str r2, [sp, #0x150]
	mov r3, r8
	adds r3, #7
	str r3, [sp, #0x154]
	ldr r4, [sp, #0x104]
	adds r4, #1
	str r4, [sp, #0x148]
_08071F10:
	ldr r0, _08071F64 @ =0x0000FFFF
	mov r5, sl
	strh r0, [r5]
	movs r7, #0
	ldr r6, [sp, #0x120]
	strb r7, [r6]
	movs r0, #0
	str r0, [r5, #0x24]
	ldr r1, [sp, #0x124]
	strb r0, [r1]
	movs r6, #0
	add r2, sp, #0x158
	ldrh r2, [r2]
	strh r2, [r5]
	ldr r3, [sp, #0x114]
	ldr r0, [r3]
	movs r4, #0xb2
	lsls r4, r4, #6
	adds r0, r0, r4
	ldr r1, [sp, #0x110]
	bl func_0809CE7C
	adds r5, r0, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x14
	bls _08071F4A
	movs r4, #0x14
_08071F4A:
	ldr r0, [sp, #0x11c]
	adds r1, r5, #0
	adds r2, r4, #0
	bl memcpy
	ldr r5, [sp, #0x11c]
	adds r0, r5, r4
	strb r6, [r0]
	movs r6, #0
	mov sb, r6
	ldr r7, [sp, #0x120]
	mov r8, r7
	b _08071F9E
	.align 2, 0
_08071F64: .4byte 0x0000FFFF
_08071F68:
	ldr r7, _08072090 @ =0x080FBED4
	mov r0, r8
	bl strlen
	mov r1, r8
	adds r6, r1, r0
	movs r1, #0x1c
	subs r5, r1, r0
	cmp r5, #0
	beq _08071F9A
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08071F8A
	adds r4, r5, #0
_08071F8A:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	movs r2, #0
	strb r2, [r0]
_08071F9A:
	movs r3, #1
	add sb, r3
_08071F9E:
	add r0, sp, #0x48
	bl strlen
	movs r1, #0x11
	subs r1, r1, r0
	cmp sb, r1
	blo _08071F68
	ldr r4, [sp, #0x11c]
	ldr r0, [sp, #0x120]
	bl strlen
	ldr r5, [sp, #0x120]
	adds r7, r5, r0
	movs r1, #0x1c
	subs r5, r1, r0
	cmp r5, #0
	beq _08071FDE
	adds r0, r4, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08071FCE
	adds r4, r5, #0
_08071FCE:
	adds r0, r7, #0
	ldr r1, [sp, #0x11c]
	adds r2, r4, #0
	bl memcpy
	adds r0, r7, r4
	movs r6, #0
	strb r6, [r0]
_08071FDE:
	movs r5, #7
	ldr r7, [sp, #0x104]
	ands r5, r7
	mov r0, sl
	str r5, [r0, #0x24]
	movs r0, #0x2c
	adds r4, r7, #0
	muls r4, r0, r4
	ldr r1, [sp, #0x100]
	adds r4, r4, r1
	movs r2, #0xb7
	lsls r2, r2, #3
	adds r4, r4, r2
	mov r3, sl
	ldrh r0, [r3]
	strh r0, [r4]
	adds r0, r4, #4
	add r1, sp, #0x6c
	bl strcpy
	mov r6, sl
	ldr r0, [r6, #0x24]
	str r0, [r4, #0x24]
	ldr r7, [sp, #0x124]
	ldrb r0, [r7]
	adds r4, #0x28
	strb r0, [r4]
	add r0, sp, #8
	add r1, sp, #0x158
	ldrh r1, [r1]
	strh r1, [r0]
	lsls r4, r5, #2
	adds r4, r4, r5
	lsls r0, r4, #6
	adds r0, r0, r5
	lsls r0, r0, #2
	ldr r2, [sp, #0x100]
	adds r0, r0, r2
	ldr r3, _08072094 @ =0x00001A5C
	adds r0, r0, r3
	str r0, [sp, #0xc]
	lsls r4, r4, #3
	movs r5, #0xc0
	lsls r5, r5, #1
	adds r4, r4, r5
	ldr r6, [sp, #0x10c]
	ldr r0, [r6, #0x18]
	ldr r7, [sp, #0x15c]
	adds r0, r0, r7
	adds r0, #0x16
	movs r1, #0
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	adds r1, r4, #0
	movs r2, #0x14
	movs r3, #2
	bl func_0804E9F4
	lsls r4, r4, #5
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r4, r4, r2
	str r4, [sp, #0x10]
	movs r0, #0xa0
	lsls r0, r0, #3
	str r0, [sp, #0x14]
	ldr r3, [sp, #0x100]
	ldr r4, _08072098 @ =0x000005A4
	adds r6, r3, r4
	add r5, sp, #8
	mov sb, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0807209C
	cmp r1, #0
	beq _08072086
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072086:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0807216E
	.align 2, 0
_08072090: .4byte 0x080FBED4
_08072094: .4byte 0x00001A5C
_08072098: .4byte 0x000005A4
_0807209C:
	str r1, [sp, #0x174]
	movs r0, #1
	add r1, sp, #0xfc
	str r0, [r1]
	ldr r3, [r6]
	ldr r4, [sp, #0x174]
	subs r0, r4, r3
	asrs r4, r0, #4
	add r0, sp, #0xf8
	str r4, [r0]
	ldr r2, [r1]
	mov sl, r1
	adds r1, r3, #0
	cmp r4, r2
	bhs _080720BC
	mov r0, sl
_080720BC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080720DC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080720D8
	mov r0, r8
	bl func_080D3BC0
_080720D8:
	ldr r1, [r6]
	b _080720E0
_080720DC:
	movs r0, #0
	mov r8, r0
_080720E0:
	adds r5, r0, #0
	str r5, [sp, #0x178]
	adds r3, r1, #0
	adds r2, r5, #0
	ldr r5, [sp, #0x174]
	cmp r3, r5
	beq _08072108
_080720EE:
	cmp r2, #0
	beq _080720FE
	adds r0, r2, #0
	adds r1, r3, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080720FE:
	adds r3, #0x10
	adds r2, #0x10
	ldr r7, [sp, #0x174]
	cmp r3, r7
	bne _080720EE
_08072108:
	adds r5, r2, #0
	mov r0, sl
	ldr r1, [r0]
	cmp r1, #1
	bne _08072126
	cmp r5, #0
	beq _08072122
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08072122:
	adds r5, #0x10
	b _08072148
_08072126:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08072146
_0807212E:
	cmp r2, #0
	beq _0807213E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807213E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807212E
_08072146:
	adds r5, r2, #0
_08072148:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _08072158
_08072152:
	adds r0, #0x10
	cmp r0, r2
	bne _08072152
_08072158:
	cmp r1, #0
	beq _08072162
	adds r0, r1, #0
	bl free
_08072162:
	ldr r0, [sp, #0x178]
	add r0, r8
	ldr r7, [sp, #0x178]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0807216E:
	ldr r1, [sp, #0x10c]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x144]
	lsls r5, r2, #6
	adds r0, r0, r5
	adds r0, #4
	movs r3, #0
	mov r8, r3
	str r3, [sp]
	movs r6, #0x20
	str r6, [sp, #4]
	movs r1, #0x40
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	ldr r4, [sp, #0x114]
	ldr r0, [r4]
	movs r7, #0xb2
	lsls r7, r7, #6
	adds r0, r0, r7
	ldr r1, [sp, #0x110]
	bl func_0809CE24
	adds r4, r0, #0
	cmp r4, #0
	beq _08072220
	movs r7, #0x18
	movs r1, #0x64
	bl __umodsi3
	cmp r0, #0
	beq _080721DE
	ldr r2, [sp, #0x10c]
	ldr r1, [r2, #0x18]
	adds r1, r1, r5
	adds r1, #0x2e
	str r6, [sp]
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0x10c]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x30
	mov r7, r8
	str r7, [sp]
	str r6, [sp, #4]
	movs r1, #0x74
	movs r2, #4
	movs r3, #2
	bl func_0804E9F4
	movs r7, #0x12
_080721DE:
	adds r0, r4, #0
	movs r1, #0x64
	bl func_080D0EDA
	adds r2, r0, #0
	cmp r2, #0
	beq _08072220
	ldr r0, [sp, #0x10c]
	ldr r1, [r0, #0x18]
	adds r1, r1, r5
	subs r0, r7, #1
	lsls r0, r0, #1
	adds r1, r1, r0
	str r6, [sp]
	adds r0, r2, #0
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0x10c]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	lsls r1, r7, #1
	adds r0, r0, r1
	mov r2, r8
	str r2, [sp]
	str r6, [sp, #4]
	movs r1, #0x70
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
_08072220:
	ldr r3, [sp, #0x10c]
	ldr r0, [r3, #0x18]
	ldr r5, [sp, #0x150]
	lsls r4, r5, #6
	adds r0, r0, r4
	adds r0, #4
	movs r7, #0
	str r7, [sp]
	movs r5, #0x20
	str r5, [sp, #4]
	movs r1, #0x58
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r6, [sp, #0x114]
	ldr r0, [r6]
	movs r1, #0xb2
	lsls r1, r1, #6
	adds r0, r0, r1
	ldr r1, [sp, #0x110]
	bl func_0809CE1C
	ldr r2, [sp, #0x10c]
	ldr r1, [r2, #0x18]
	adds r1, r1, r4
	adds r1, #0x32
	str r5, [sp]
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0x108]
	cmp r3, #7
	bgt _08072280
	ldr r6, [sp, #0x10c]
	ldr r0, [r6, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	str r7, [sp]
	str r5, [sp, #4]
	movs r1, #0x7c
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	b _08072296
_08072280:
	ldr r1, [sp, #0x10c]
	ldr r0, [r1, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	str r7, [sp]
	str r5, [sp, #4]
	movs r1, #0x68
	movs r2, #4
	movs r3, #2
	bl func_0804E9F4
_08072296:
	ldr r2, [sp, #0x154]
	mov r8, r2
	ldr r3, [sp, #0x148]
	str r3, [sp, #0x104]
_0807229E:
	ldr r4, [sp, #0x14c]
	str r4, [sp, #0x108]
	cmp r4, #0x3a
	bgt _080722A8
	b _08071D04
_080722A8:
	ldr r5, [sp, #0x100]
	ldr r0, [r5, #4]
	mov r6, r8
	lsls r1, r6, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r0, _080722CC @ =vtable_unk_080E5A28
	str r0, [sp, #0x18]
	ldr r0, [sp, #0x100]
	add sp, #0x184
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080722CC: .4byte vtable_unk_080E5A28

	thumb_func_start func_080722D0
func_080722D0: @ 0x080722D0
	push {lr}
	bl func_08070CA4
	movs r0, #1
	pop {r1}
	bx r1

	thumb_func_start func_080722DC
func_080722DC: @ 0x080722DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _080724B8 @ =0xFFFFFD10
	add sp, r4
	mov sb, r0
	ldr r0, _080724BC @ =0x080FBED8
	str r0, [sp]
	mov r0, sb
	movs r3, #0x78
	bl func_08070C24
	ldr r1, _080724C0 @ =0x000005B4
	add r1, sb
	ldr r0, _080724C4 @ =vtable_unk_080E7AFC
	str r0, [r1]
	mov r0, sb
	ldr r0, [r0, #4]
	str r0, [sp, #0x208]
	movs r1, #4
	str r1, [sp, #0x20c]
	ldr r3, _080724C8 @ =0x080FBEE0
	add r0, sp, #0x98
	movs r1, #0x1a
	movs r2, #2
	strh r1, [r0]
	strh r2, [r0, #2]
	ldr r0, [r0]
	ldr r4, _080724CC @ =0x0000427C
	add r4, sb
	str r3, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r2, sb
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0xd0
	lsls r3, r3, #3
	adds r6, r0, #0
	add r0, sp, #8
	adds r1, r4, #0
	ldr r2, _080724D0 @ =0x06003000
	bl func_08008F0C
	add r3, sp, #8
	mov sl, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	bne _0807234E
	b _08072534
_0807234E:
	cmp r1, #0
	beq _0807235E
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807235E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	mov r0, sp
	adds r0, #0xa4
	str r0, [sp, #0x2e0]
	movs r1, #0x92
	lsls r1, r1, #7
	add r1, sb
	str r1, [sp, #0x2ac]
	mov r2, sp
	adds r2, #0xb0
	str r2, [sp, #0x2e4]
	ldr r3, _080724D4 @ =0x00004B04
	add r3, sb
	str r3, [sp, #0x2c0]
	mov r4, sp
	adds r4, #0xbc
	str r4, [sp, #0x210]
	ldr r5, _080724D8 @ =0x00004F08
	add r5, sb
	str r5, [sp, #0x284]
	mov r6, sp
	adds r6, #0xc8
	str r6, [sp, #0x214]
	ldr r7, _080724DC @ =0x0000510C
	add r7, sb
	str r7, [sp, #0x290]
	adds r0, #0x30
	str r0, [sp, #0x218]
	ldr r1, _080724E0 @ =0x00005310
	add r1, sb
	str r1, [sp, #0x2a0]
	adds r2, #0x30
	str r2, [sp, #0x21c]
	ldr r3, _080724E4 @ =0x00005394
	add r3, sb
	str r3, [sp, #0x2a8]
	adds r4, #0x30
	str r4, [sp, #0x220]
	ldr r5, _080724E8 @ =0x00005418
	add r5, sb
	str r5, [sp, #0x2b0]
	adds r6, #0x30
	str r6, [sp, #0x224]
	ldr r7, _080724EC @ =0x0000551C
	add r7, sb
	str r7, [sp, #0x2b4]
	subs r0, #0xbc
	str r0, [sp, #0x2c8]
	mov r1, sp
	adds r1, #0x48
	str r1, [sp, #0x2d0]
	movs r2, #0x82
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x22c]
	ldr r3, _080724F0 @ =0x00005620
	add r3, sb
	str r3, [sp, #0x2c4]
	movs r4, #0x88
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x230]
	ldr r5, _080724F4 @ =0x00005CA4
	add r5, sb
	str r5, [sp, #0x29c]
	movs r6, #0x8e
	lsls r6, r6, #1
	add r6, sp
	str r6, [sp, #0x234]
	ldr r7, _080724F8 @ =0x00006028
	add r7, sb
	str r7, [sp, #0x2b8]
	movs r0, #0x94
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x238]
	ldr r1, _080724FC @ =0x0000622C
	add r1, sb
	str r1, [sp, #0x2cc]
	movs r2, #0x9a
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x23c]
	ldr r3, _08072500 @ =0x00006430
	add r3, sb
	str r3, [sp, #0x27c]
	movs r4, #0xa0
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x240]
	ldr r5, _08072504 @ =0x000064B4
	add r5, sb
	str r5, [sp, #0x280]
	movs r6, #0xa6
	lsls r6, r6, #1
	add r6, sp
	str r6, [sp, #0x244]
	ldr r7, _08072508 @ =0x00006B38
	add r7, sb
	str r7, [sp, #0x2bc]
	movs r0, #0xac
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x24c]
	ldr r1, _0807250C @ =0x00006D3C
	add r1, sb
	str r1, [sp, #0x2d4]
	movs r2, #0xb2
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x250]
	ldr r3, _08072510 @ =0x00006E40
	add r3, sb
	str r3, [sp, #0x248]
	movs r4, #0xb8
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x254]
	ldr r5, _08072514 @ =0x00006FC4
	add r5, sb
	str r5, [sp, #0x288]
	movs r6, #0xbe
	lsls r6, r6, #1
	add r6, sp
	str r6, [sp, #0x258]
	ldr r7, _08072518 @ =0x00007148
	add r7, sb
	str r7, [sp, #0x28c]
	movs r0, #0xc4
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x25c]
	ldr r1, _0807251C @ =0x000071CC
	add r1, sb
	str r1, [sp, #0x294]
	movs r2, #0xe2
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x260]
	ldr r3, _08072520 @ =0x00007250
	add r3, sb
	str r3, [sp, #0x298]
	movs r4, #0xe8
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x264]
	ldr r5, _08072524 @ =0x000078D4
	add r5, sb
	str r5, [sp, #0x228]
	movs r6, #0xee
	lsls r6, r6, #1
	add r6, sp
	str r6, [sp, #0x268]
	ldr r7, _08072528 @ =0x000079D8
	add r7, sb
	str r7, [sp, #0x274]
	movs r0, #0xf4
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x26c]
	ldr r1, _0807252C @ =0x00007EDC
	add r1, sb
	str r1, [sp, #0x2a4]
	movs r2, #0xfa
	lsls r2, r2, #1
	add r2, sp
	str r2, [sp, #0x270]
	ldr r3, _08072530 @ =0x000084E0
	add r3, sb
	str r3, [sp, #0x278]
	b _080727B4
	.align 2, 0
_080724B8: .4byte 0xFFFFFD10
_080724BC: .4byte 0x080FBED8
_080724C0: .4byte 0x000005B4
_080724C4: .4byte vtable_unk_080E7AFC
_080724C8: .4byte 0x080FBEE0
_080724CC: .4byte 0x0000427C
_080724D0: .4byte 0x06003000
_080724D4: .4byte 0x00004B04
_080724D8: .4byte 0x00004F08
_080724DC: .4byte 0x0000510C
_080724E0: .4byte 0x00005310
_080724E4: .4byte 0x00005394
_080724E8: .4byte 0x00005418
_080724EC: .4byte 0x0000551C
_080724F0: .4byte 0x00005620
_080724F4: .4byte 0x00005CA4
_080724F8: .4byte 0x00006028
_080724FC: .4byte 0x0000622C
_08072500: .4byte 0x00006430
_08072504: .4byte 0x000064B4
_08072508: .4byte 0x00006B38
_0807250C: .4byte 0x00006D3C
_08072510: .4byte 0x00006E40
_08072514: .4byte 0x00006FC4
_08072518: .4byte 0x00007148
_0807251C: .4byte 0x000071CC
_08072520: .4byte 0x00007250
_08072524: .4byte 0x000078D4
_08072528: .4byte 0x000079D8
_0807252C: .4byte 0x00007EDC
_08072530: .4byte 0x000084E0
_08072534:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0xa0
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0x2e8]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0x9c
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08072550
	adds r0, r1, #0
_08072550:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807256E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08072572
	mov r0, r8
	bl func_080D3BC0
	b _08072572
_0807256E:
	movs r0, #0
	mov r8, r0
_08072572:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r5, sp
	adds r5, #0xa4
	str r5, [sp, #0x2e0]
	movs r7, #0x92
	lsls r7, r7, #7
	add r7, sb
	str r7, [sp, #0x2ac]
	mov r0, sp
	adds r0, #0xb0
	str r0, [sp, #0x2e4]
	ldr r1, _080726D8 @ =0x00004B04
	add r1, sb
	str r1, [sp, #0x2c0]
	mov r4, sp
	adds r4, #0xbc
	str r4, [sp, #0x210]
	ldr r5, _080726DC @ =0x00004F08
	add r5, sb
	str r5, [sp, #0x284]
	mov r7, sp
	adds r7, #0xc8
	str r7, [sp, #0x214]
	ldr r0, _080726E0 @ =0x0000510C
	add r0, sb
	str r0, [sp, #0x290]
	mov r1, sp
	adds r1, #0xd4
	str r1, [sp, #0x218]
	ldr r4, _080726E4 @ =0x00005310
	add r4, sb
	str r4, [sp, #0x2a0]
	mov r5, sp
	adds r5, #0xe0
	str r5, [sp, #0x21c]
	ldr r7, _080726E8 @ =0x00005394
	add r7, sb
	str r7, [sp, #0x2a8]
	mov r0, sp
	adds r0, #0xec
	str r0, [sp, #0x220]
	ldr r1, _080726EC @ =0x00005418
	add r1, sb
	str r1, [sp, #0x2b0]
	mov r4, sp
	adds r4, #0xf8
	str r4, [sp, #0x224]
	ldr r5, _080726F0 @ =0x0000551C
	add r5, sb
	str r5, [sp, #0x2b4]
	mov r7, sp
	adds r7, #0x18
	str r7, [sp, #0x2c8]
	subs r0, #0xa4
	str r0, [sp, #0x2d0]
	movs r1, #0x82
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x22c]
	ldr r4, _080726F4 @ =0x00005620
	add r4, sb
	str r4, [sp, #0x2c4]
	movs r5, #0x88
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x230]
	ldr r7, _080726F8 @ =0x00005CA4
	add r7, sb
	str r7, [sp, #0x29c]
	movs r0, #0x8e
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x234]
	ldr r1, _080726FC @ =0x00006028
	add r1, sb
	str r1, [sp, #0x2b8]
	movs r4, #0x94
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x238]
	ldr r5, _08072700 @ =0x0000622C
	add r5, sb
	str r5, [sp, #0x2cc]
	movs r7, #0x9a
	lsls r7, r7, #1
	add r7, sp
	str r7, [sp, #0x23c]
	ldr r0, _08072704 @ =0x00006430
	add r0, sb
	str r0, [sp, #0x27c]
	movs r1, #0xa0
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x240]
	ldr r4, _08072708 @ =0x000064B4
	add r4, sb
	str r4, [sp, #0x280]
	movs r5, #0xa6
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x244]
	ldr r7, _0807270C @ =0x00006B38
	add r7, sb
	str r7, [sp, #0x2bc]
	movs r0, #0xac
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x24c]
	ldr r1, _08072710 @ =0x00006D3C
	add r1, sb
	str r1, [sp, #0x2d4]
	movs r4, #0xb2
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x250]
	ldr r5, _08072714 @ =0x00006E40
	add r5, sb
	str r5, [sp, #0x248]
	movs r7, #0xb8
	lsls r7, r7, #1
	add r7, sp
	str r7, [sp, #0x254]
	ldr r0, _08072718 @ =0x00006FC4
	add r0, sb
	str r0, [sp, #0x288]
	movs r1, #0xbe
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x258]
	ldr r4, _0807271C @ =0x00007148
	add r4, sb
	str r4, [sp, #0x28c]
	movs r5, #0xc4
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x25c]
	ldr r7, _08072720 @ =0x000071CC
	add r7, sb
	str r7, [sp, #0x294]
	movs r0, #0xe2
	lsls r0, r0, #1
	add r0, sp
	str r0, [sp, #0x260]
	ldr r1, _08072724 @ =0x00007250
	add r1, sb
	str r1, [sp, #0x298]
	movs r4, #0xe8
	lsls r4, r4, #1
	add r4, sp
	str r4, [sp, #0x264]
	ldr r5, _08072728 @ =0x000078D4
	add r5, sb
	str r5, [sp, #0x228]
	movs r7, #0xee
	lsls r7, r7, #1
	add r7, sp
	str r7, [sp, #0x268]
	ldr r0, _0807272C @ =0x000079D8
	add r0, sb
	str r0, [sp, #0x274]
	movs r1, #0xf4
	lsls r1, r1, #1
	add r1, sp
	str r1, [sp, #0x26c]
	ldr r4, _08072730 @ =0x00007EDC
	add r4, sb
	str r4, [sp, #0x2a4]
	movs r5, #0xfa
	lsls r5, r5, #1
	add r5, sp
	str r5, [sp, #0x270]
	ldr r7, _08072734 @ =0x000084E0
	add r7, sb
	str r7, [sp, #0x278]
	b _0807274C
	.align 2, 0
_080726D8: .4byte 0x00004B04
_080726DC: .4byte 0x00004F08
_080726E0: .4byte 0x0000510C
_080726E4: .4byte 0x00005310
_080726E8: .4byte 0x00005394
_080726EC: .4byte 0x00005418
_080726F0: .4byte 0x0000551C
_080726F4: .4byte 0x00005620
_080726F8: .4byte 0x00005CA4
_080726FC: .4byte 0x00006028
_08072700: .4byte 0x0000622C
_08072704: .4byte 0x00006430
_08072708: .4byte 0x000064B4
_0807270C: .4byte 0x00006B38
_08072710: .4byte 0x00006D3C
_08072714: .4byte 0x00006E40
_08072718: .4byte 0x00006FC4
_0807271C: .4byte 0x00007148
_08072720: .4byte 0x000071CC
_08072724: .4byte 0x00007250
_08072728: .4byte 0x000078D4
_0807272C: .4byte 0x000079D8
_08072730: .4byte 0x00007EDC
_08072734: .4byte 0x000084E0
_08072738:
	cmp r3, #0
	beq _08072748
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072748:
	adds r2, #0x10
	adds r3, #0x10
_0807274C:
	ldr r0, [sp, #0x2e8]
	cmp r2, r0
	bne _08072738
	adds r5, r3, #0
	ldr r1, [sp, #0xa0]
	cmp r1, #1
	bne _0807276E
	cmp r5, #0
	beq _0807276A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807276A:
	adds r5, #0x10
	b _08072790
_0807276E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0807278E
_08072776:
	cmp r2, #0
	beq _08072786
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072786:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08072776
_0807278E:
	adds r5, r2, #0
_08072790:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080727A0
_0807279A:
	adds r1, #0x10
	cmp r1, r2
	bne _0807279A
_080727A0:
	cmp r0, #0
	beq _080727A8
	bl free
_080727A8:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080727B4:
	ldr r3, _0807280C @ =0x080FBEFC
	movs r1, #8
	movs r2, #2
	add r0, sp, #0xa4
	strh r1, [r0]
	ldr r1, [sp, #0x2e0]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x2ac]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r2, sb
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2ac]
	ldr r2, _08072810 @ =0x06003980
	bl func_08008F0C
	add r3, sp, #8
	mov sl, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08072814
	cmp r1, #0
	beq _08072804
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072804:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080728DC
	.align 2, 0
_0807280C: .4byte 0x080FBEFC
_08072810: .4byte 0x06003980
_08072814:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0xac
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x2e8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xa8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08072830
	adds r0, r1, #0
_08072830:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807284E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08072852
	mov r0, r8
	bl func_080D3BC0
	b _08072852
_0807284E:
	movs r0, #0
	mov r8, r0
_08072852:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x2e8]
	cmp r2, r4
	beq _0807287A
_08072860:
	cmp r3, #0
	beq _08072870
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072870:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	bne _08072860
_0807287A:
	adds r5, r3, #0
	ldr r1, [sp, #0xac]
	cmp r1, #1
	bne _08072896
	cmp r5, #0
	beq _08072892
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072892:
	adds r5, #0x10
	b _080728B8
_08072896:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080728B6
_0807289E:
	cmp r2, #0
	beq _080728AE
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080728AE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807289E
_080728B6:
	adds r5, r2, #0
_080728B8:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080728C8
_080728C2:
	adds r1, #0x10
	cmp r1, r2
	bne _080728C2
_080728C8:
	cmp r0, #0
	beq _080728D0
	bl free
_080728D0:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r1, [sp, #0x2ec]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080728DC:
	ldr r3, _08072934 @ =0x080FBF08
	movs r1, #0x10
	movs r2, #2
	add r0, sp, #0xb0
	strh r1, [r0]
	ldr r4, [sp, #0x2e4]
	strh r2, [r4, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x2c0]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r5, sb
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #3
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2c0]
	ldr r2, _08072938 @ =0x06003B80
	bl func_08008F0C
	add r7, sp, #8
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0807293C
	cmp r1, #0
	beq _0807292C
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807292C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08072A04
	.align 2, 0
_08072934: .4byte 0x080FBF08
_08072938: .4byte 0x06003B80
_0807293C:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0xb8
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x2e8]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xb4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08072958
	adds r0, r1, #0
_08072958:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08072976
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0807297A
	mov r0, r8
	bl func_080D3BC0
	b _0807297A
_08072976:
	movs r0, #0
	mov r8, r0
_0807297A:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	beq _080729A2
_08072988:
	cmp r3, #0
	beq _08072998
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072998:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x2e8]
	cmp r2, r0
	bne _08072988
_080729A2:
	adds r5, r3, #0
	ldr r1, [sp, #0xb8]
	cmp r1, #1
	bne _080729BE
	cmp r5, #0
	beq _080729BA
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080729BA:
	adds r5, #0x10
	b _080729E0
_080729BE:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080729DE
_080729C6:
	cmp r2, #0
	beq _080729D6
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080729D6:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080729C6
_080729DE:
	adds r5, r2, #0
_080729E0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080729F0
_080729EA:
	adds r1, #0x10
	cmp r1, r2
	bne _080729EA
_080729F0:
	cmp r0, #0
	beq _080729F8
	bl free
_080729F8:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08072A04:
	ldr r3, _08072A5C @ =0x080FBF1C
	movs r1, #8
	movs r2, #2
	add r0, sp, #0xbc
	strh r1, [r0]
	ldr r1, [sp, #0x210]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x284]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r2, sb
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x284]
	ldr r2, _08072A60 @ =0x06003F80
	bl func_08008F0C
	add r3, sp, #8
	mov sl, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08072A64
	cmp r1, #0
	beq _08072A54
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072A54:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08072B2C
	.align 2, 0
_08072A5C: .4byte 0x080FBF1C
_08072A60: .4byte 0x06003F80
_08072A64:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0xc4
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x2e8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xc0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08072A80
	adds r0, r1, #0
_08072A80:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08072A9E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08072AA2
	mov r0, r8
	bl func_080D3BC0
	b _08072AA2
_08072A9E:
	movs r0, #0
	mov r8, r0
_08072AA2:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x2e8]
	cmp r2, r4
	beq _08072ACA
_08072AB0:
	cmp r3, #0
	beq _08072AC0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072AC0:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	bne _08072AB0
_08072ACA:
	adds r5, r3, #0
	ldr r1, [sp, #0xc4]
	cmp r1, #1
	bne _08072AE6
	cmp r5, #0
	beq _08072AE2
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072AE2:
	adds r5, #0x10
	b _08072B08
_08072AE6:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08072B06
_08072AEE:
	cmp r2, #0
	beq _08072AFE
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072AFE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08072AEE
_08072B06:
	adds r5, r2, #0
_08072B08:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08072B18
_08072B12:
	adds r1, #0x10
	cmp r1, r2
	bne _08072B12
_08072B18:
	cmp r0, #0
	beq _08072B20
	bl free
_08072B20:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r1, [sp, #0x2ec]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08072B2C:
	ldr r3, _08072B84 @ =0x080FBF28
	movs r1, #8
	movs r2, #2
	add r0, sp, #0xc8
	strh r1, [r0]
	ldr r4, [sp, #0x214]
	strh r2, [r4, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x290]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r5, sb
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x290]
	ldr r2, _08072B88 @ =0x06004180
	bl func_08008F0C
	add r7, sp, #8
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08072B8C
	cmp r1, #0
	beq _08072B7C
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08072B7C:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08072C54
	.align 2, 0
_08072B84: .4byte 0x080FBF28
_08072B88: .4byte 0x06004180
_08072B8C:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0xd0
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x2e8]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xcc
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08072BA8
	adds r0, r1, #0
_08072BA8:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08072BC6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08072BCA
	mov r0, r8
	bl func_080D3BC0
	b _08072BCA
_08072BC6:
	movs r0, #0
	mov r8, r0
_08072BCA:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	beq _08072BF2
_08072BD8:
	cmp r3, #0
	beq _08072BE8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072BE8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x2e8]
	cmp r2, r0
	bne _08072BD8
_08072BF2:
	adds r5, r3, #0
	ldr r1, [sp, #0xd0]
	cmp r1, #1
	bne _08072C0E
	cmp r5, #0
	beq _08072C0A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08072C0A:
	adds r5, #0x10
	b _08072C30
_08072C0E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08072C2E
_08072C16:
	cmp r2, #0
	beq _08072C26
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072C26:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08072C16
_08072C2E:
	adds r5, r2, #0
_08072C30:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08072C40
_08072C3A:
	adds r1, #0x10
	cmp r1, r2
	bne _08072C3A
_08072C40:
	cmp r0, #0
	beq _08072C48
	bl free
_08072C48:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08072C54:
	ldr r2, _08072CA8 @ =0x080FBE8C
	movs r0, #2
	add r1, sp, #0xd4
	strh r0, [r1]
	ldr r3, [sp, #0x218]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x2a0]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r4, sb
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2a0]
	ldr r2, _08072CAC @ =0x06000700
	movs r3, #0x80
	bl func_08008F0C
	add r5, sp, #8
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08072CB0
	cmp r1, #0
	beq _08072CA0
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072CA0:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08072D78
	.align 2, 0
_08072CA8: .4byte 0x080FBE8C
_08072CAC: .4byte 0x06000700
_08072CB0:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0xdc
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0x2e8]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0xd8
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08072CCC
	adds r0, r1, #0
_08072CCC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08072CEA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08072CEE
	mov r0, r8
	bl func_080D3BC0
	b _08072CEE
_08072CEA:
	movs r0, #0
	mov r8, r0
_08072CEE:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	beq _08072D16
_08072CFC:
	cmp r3, #0
	beq _08072D0C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072D0C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _08072CFC
_08072D16:
	adds r5, r3, #0
	ldr r1, [sp, #0xdc]
	cmp r1, #1
	bne _08072D32
	cmp r5, #0
	beq _08072D2E
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08072D2E:
	adds r5, #0x10
	b _08072D54
_08072D32:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08072D52
_08072D3A:
	cmp r2, #0
	beq _08072D4A
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072D4A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08072D3A
_08072D52:
	adds r5, r2, #0
_08072D54:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08072D64
_08072D5E:
	adds r1, #0x10
	cmp r1, r2
	bne _08072D5E
_08072D64:
	cmp r0, #0
	beq _08072D6C
	bl free
_08072D6C:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08072D78:
	ldr r2, _08072DCC @ =0x080FBEC8
	movs r0, #2
	add r1, sp, #0xe0
	strh r0, [r1]
	ldr r3, [sp, #0x21c]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x2a8]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r4, sb
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2a8]
	ldr r2, _08072DD0 @ =0x06000780
	movs r3, #0x80
	bl func_08008F0C
	add r5, sp, #8
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08072DD4
	cmp r1, #0
	beq _08072DC4
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072DC4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08072E9C
	.align 2, 0
_08072DCC: .4byte 0x080FBEC8
_08072DD0: .4byte 0x06000780
_08072DD4:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0xe8
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0x2e8]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0xe4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08072DF0
	adds r0, r1, #0
_08072DF0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08072E0E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08072E12
	mov r0, r8
	bl func_080D3BC0
	b _08072E12
_08072E0E:
	movs r0, #0
	mov r8, r0
_08072E12:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	beq _08072E3A
_08072E20:
	cmp r3, #0
	beq _08072E30
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072E30:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _08072E20
_08072E3A:
	adds r5, r3, #0
	ldr r1, [sp, #0xe8]
	cmp r1, #1
	bne _08072E56
	cmp r5, #0
	beq _08072E52
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08072E52:
	adds r5, #0x10
	b _08072E78
_08072E56:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08072E76
_08072E5E:
	cmp r2, #0
	beq _08072E6E
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072E6E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08072E5E
_08072E76:
	adds r5, r2, #0
_08072E78:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08072E88
_08072E82:
	adds r1, #0x10
	cmp r1, r2
	bne _08072E82
_08072E88:
	cmp r0, #0
	beq _08072E90
	bl free
_08072E90:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08072E9C:
	ldr r3, _08072EF4 @ =0x080FBECC
	movs r1, #4
	movs r2, #2
	add r0, sp, #0xec
	strh r1, [r0]
	ldr r1, [sp, #0x220]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x2b0]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r2, sb
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2b0]
	ldr r2, _08072EF8 @ =0x06000800
	bl func_08008F0C
	add r3, sp, #8
	mov sl, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08072EFC
	cmp r1, #0
	beq _08072EEC
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072EEC:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08072FC4
	.align 2, 0
_08072EF4: .4byte 0x080FBECC
_08072EF8: .4byte 0x06000800
_08072EFC:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0xf4
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x2e8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xf0
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08072F18
	adds r0, r1, #0
_08072F18:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08072F36
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08072F3A
	mov r0, r8
	bl func_080D3BC0
	b _08072F3A
_08072F36:
	movs r0, #0
	mov r8, r0
_08072F3A:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x2e8]
	cmp r2, r4
	beq _08072F62
_08072F48:
	cmp r3, #0
	beq _08072F58
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072F58:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	bne _08072F48
_08072F62:
	adds r5, r3, #0
	ldr r1, [sp, #0xf4]
	cmp r1, #1
	bne _08072F7E
	cmp r5, #0
	beq _08072F7A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072F7A:
	adds r5, #0x10
	b _08072FA0
_08072F7E:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08072F9E
_08072F86:
	cmp r2, #0
	beq _08072F96
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08072F96:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08072F86
_08072F9E:
	adds r5, r2, #0
_08072FA0:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08072FB0
_08072FAA:
	adds r1, #0x10
	cmp r1, r2
	bne _08072FAA
_08072FB0:
	cmp r0, #0
	beq _08072FB8
	bl free
_08072FB8:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r1, [sp, #0x2ec]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08072FC4:
	ldr r3, _0807301C @ =0x080FBF34
	movs r1, #4
	movs r2, #2
	add r0, sp, #0xf8
	strh r1, [r0]
	ldr r4, [sp, #0x224]
	strh r2, [r4, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x2b4]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r5, sb
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2b4]
	ldr r2, _08073020 @ =0x06000900
	bl func_08008F0C
	add r7, sp, #8
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08073024
	cmp r1, #0
	beq _08073014
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08073014:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080730EC
	.align 2, 0
_0807301C: .4byte 0x080FBF34
_08073020: .4byte 0x06000900
_08073024:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x100
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x2e8]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xfc
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _08073040
	adds r0, r1, #0
_08073040:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807305E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08073062
	mov r0, r8
	bl func_080D3BC0
	b _08073062
_0807305E:
	movs r0, #0
	mov r8, r0
_08073062:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	beq _0807308A
_08073070:
	cmp r3, #0
	beq _08073080
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073080:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x2e8]
	cmp r2, r0
	bne _08073070
_0807308A:
	adds r5, r3, #0
	ldr r1, [sp, #0x100]
	cmp r1, #1
	bne _080730A6
	cmp r5, #0
	beq _080730A2
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080730A2:
	adds r5, #0x10
	b _080730C8
_080730A6:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080730C6
_080730AE:
	cmp r2, #0
	beq _080730BE
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080730BE:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080730AE
_080730C6:
	adds r5, r2, #0
_080730C8:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080730D8
_080730D2:
	adds r1, #0x10
	cmp r1, r2
	bne _080730D2
_080730D8:
	cmp r0, #0
	beq _080730E0
	bl free
_080730E0:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080730EC:
	ldr r1, _080733E8 @ =0x0858BA28
	ldr r0, [sp, #0x2c8]
	bl func_0805E6CC
	ldr r1, _080733EC @ =0x086678A0
	ldr r0, [sp, #0x2d0]
	bl func_0805E6CC
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x20c]
	lsls r1, r2, #6
	adds r0, r0, r1
	adds r0, #4
	movs r1, #0xc0
	lsls r1, r1, #1
	movs r3, #0
	mov sl, r3
	str r3, [sp]
	movs r4, #0x20
	mov r8, r4
	str r4, [sp, #4]
	movs r2, #0x1a
	movs r3, #2
	bl func_0804E9F4
	ldr r5, [sp, #0x20c]
	adds r5, #2
	str r5, [sp, #0x20c]
	mov r0, sb
	movs r1, #0
	bl func_08075450
	lsls r2, r5, #3
	lsls r0, r0, #3
	ldr r5, _080733F0 @ =0x080FC024
	adds r0, r0, r5
	ldr r3, [r0]
	ldr r0, [r0, #4]
	str r0, [sp]
	mov r0, sb
	movs r1, #0x10
	bl func_08075334
	ldr r6, [sp, #0x208]
	ldr r0, [r6, #0x18]
	ldr r7, [sp, #0x20c]
	lsls r4, r7, #6
	adds r0, r0, r4
	adds r0, #8
	movs r1, #0xe6
	lsls r1, r1, #1
	mov r2, sl
	str r2, [sp]
	mov r3, r8
	str r3, [sp, #4]
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r6, _080733F4 @ =0x0000058C
	add r6, sb
	ldr r0, [r6]
	bl func_08010F0C
	ldr r7, [sp, #0x208]
	ldr r1, [r7, #0x18]
	adds r1, r1, r4
	adds r1, #0x32
	mov r2, r8
	str r2, [sp]
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	mov r3, sl
	str r3, [sp]
	mov r4, r8
	str r4, [sp, #4]
	movs r1, #0x38
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r7, [sp, #0x20c]
	adds r7, #2
	str r7, [sp, #0x20c]
	mov r0, sb
	movs r1, #2
	bl func_08075450
	lsls r2, r7, #3
	lsls r0, r0, #3
	adds r0, r0, r5
	ldr r3, [r0]
	ldr r0, [r0, #4]
	str r0, [sp]
	mov r0, sb
	movs r1, #0x10
	bl func_08075334
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	lsls r4, r7, #6
	adds r0, r0, r4
	adds r0, #8
	movs r1, #0xee
	lsls r1, r1, #1
	mov r2, sl
	str r2, [sp]
	mov r3, r8
	str r3, [sp, #4]
	movs r2, #0x10
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [r6]
	bl func_08010F0C
	ldr r7, [sp, #0x208]
	ldr r1, [r7, #0x18]
	adds r1, r1, r4
	adds r1, #0x32
	mov r2, r8
	str r2, [sp]
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	mov r3, sl
	str r3, [sp]
	mov r4, r8
	str r4, [sp, #4]
	movs r1, #0x38
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r7, [sp, #0x20c]
	adds r7, #2
	str r7, [sp, #0x20c]
	mov r0, sb
	movs r1, #1
	bl func_08075450
	lsls r2, r7, #3
	lsls r0, r0, #3
	adds r0, r0, r5
	ldr r3, [r0]
	ldr r0, [r0, #4]
	str r0, [sp]
	mov r0, sb
	movs r1, #0x10
	bl func_08075334
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	lsls r4, r7, #6
	adds r0, r0, r4
	adds r0, #8
	movs r1, #0xfe
	lsls r1, r1, #1
	mov r2, sl
	str r2, [sp]
	mov r3, r8
	str r3, [sp, #4]
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [r6]
	bl func_08010F1C
	ldr r5, [sp, #0x208]
	ldr r1, [r5, #0x18]
	adds r1, r1, r4
	adds r1, #0x32
	mov r7, r8
	str r7, [sp]
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r5, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	mov r1, sl
	str r1, [sp]
	str r7, [sp, #4]
	movs r1, #0x38
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r2, [sp, #0x20c]
	adds r2, #2
	str r2, [sp, #0x20c]
	lsls r2, r2, #3
	ldr r3, _080733F8 @ =0x08751E6C
	ldr r0, _080733FC @ =0x08751EEC
	str r0, [sp]
	mov r0, sb
	movs r1, #0x10
	bl func_08075334
	ldr r0, [r5, #0x18]
	ldr r3, [sp, #0x20c]
	lsls r4, r3, #6
	adds r0, r0, r4
	adds r0, #8
	movs r1, #0x83
	lsls r1, r1, #2
	mov r5, sl
	str r5, [sp]
	str r7, [sp, #4]
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [r6]
	ldr r6, _08073400 @ =0x00001C9C
	adds r0, r0, r6
	ldrh r1, [r0]
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r5, r0, #0
	ldr r7, [sp, #0x208]
	ldr r0, [r7, #0x18]
	adds r0, r0, r4
	adds r0, #0x32
	mov r1, sl
	str r1, [sp]
	mov r2, r8
	str r2, [sp, #4]
	movs r1, #0x40
	movs r2, #4
	movs r3, #2
	bl func_0804E9F4
	ldr r1, [r7, #0x18]
	adds r1, r1, r4
	adds r1, #0x30
	mov r3, r8
	str r3, [sp]
	adds r0, r5, #0
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	movs r7, #0x19
	adds r0, r5, #0
	movs r1, #0x64
	bl __umodsi3
	adds r6, r0, #0
	cmp r6, #0
	beq _0807333A
	ldr r7, [sp, #0x208]
	ldr r0, [r7, #0x18]
	adds r0, r0, r4
	adds r0, #0x32
	mov r1, sl
	str r1, [sp]
	mov r2, r8
	str r2, [sp, #4]
	movs r1, #0x40
	movs r2, #4
	movs r3, #2
	bl func_0804E9F4
	ldr r1, [r7, #0x18]
	adds r1, r1, r4
	adds r1, #0x30
	mov r3, r8
	str r3, [sp]
	adds r0, r6, #0
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
	movs r7, #0x13
_0807333A:
	adds r0, r5, #0
	movs r1, #0x64
	bl func_080D0EDA
	adds r5, r0, #0
	cmp r5, #0
	beq _0807337E
	ldr r6, [sp, #0x208]
	ldr r0, [r6, #0x18]
	adds r0, r0, r4
	lsls r1, r7, #1
	adds r0, r0, r1
	mov r1, sl
	str r1, [sp]
	mov r2, r8
	str r2, [sp, #4]
	movs r1, #0x3c
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r1, [r6, #0x18]
	adds r1, r1, r4
	subs r0, r7, #1
	lsls r0, r0, #1
	adds r1, r1, r0
	mov r3, r8
	str r3, [sp]
	adds r0, r5, #0
	movs r2, #0x90
	lsls r2, r2, #1
	movs r3, #0
	bl func_0804EDB4
_0807337E:
	ldr r4, [sp, #0x20c]
	adds r4, #3
	str r4, [sp, #0x20c]
	ldr r3, _08073404 @ =0x080FBF3C
	movs r1, #0x1a
	movs r2, #2
	add r0, sp, #0x104
	strh r1, [r0]
	ldr r5, [sp, #0x22c]
	strh r2, [r5, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x2c4]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r6, sb
	ldr r0, [r6]
	bl func_08008910
	movs r3, #0xd0
	lsls r3, r3, #3
	adds r5, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2c4]
	ldr r2, _08073408 @ =0x06004380
	bl func_08008F0C
	add r7, sp, #8
	mov sl, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0807340C
	cmp r1, #0
	beq _080733D4
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080733D4:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r5, [sp, #0x20c]
	lsls r5, r5, #6
	str r5, [sp, #0x2dc]
	ldr r6, [sp, #0x20c]
	adds r6, #2
	str r6, [sp, #0x2d8]
	b _080734E6
	.align 2, 0
_080733E8: .4byte 0x0858BA28
_080733EC: .4byte 0x086678A0
_080733F0: .4byte 0x080FC024
_080733F4: .4byte 0x0000058C
_080733F8: .4byte 0x08751E6C
_080733FC: .4byte 0x08751EEC
_08073400: .4byte 0x00001C9C
_08073404: .4byte 0x080FBF3C
_08073408: .4byte 0x06004380
_0807340C:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x10c
	str r0, [r1]
	ldr r0, [r5]
	ldr r7, [sp, #0x2e8]
	subs r0, r7, r0
	asrs r4, r0, #4
	add r0, sp, #0x108
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x108
	cmp r4, r0
	bhs _0807342C
	adds r1, r2, #0
_0807342C:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807344A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0807344E
	mov r0, r8
	bl func_080D3BC0
	b _0807344E
_0807344A:
	movs r0, #0
	mov r8, r0
_0807344E:
	adds r6, r0, #0
	str r6, [sp, #0x2ec]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r0, [sp, #0x20c]
	lsls r0, r0, #6
	str r0, [sp, #0x2dc]
	ldr r1, [sp, #0x20c]
	adds r1, #2
	str r1, [sp, #0x2d8]
	ldr r4, [sp, #0x2e8]
	cmp r2, r4
	beq _08073482
_08073468:
	cmp r3, #0
	beq _08073478
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073478:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x2e8]
	cmp r2, r6
	bne _08073468
_08073482:
	adds r6, r3, #0
	add r0, sp, #0x10c
	ldr r0, [r0]
	cmp r0, #1
	bne _080734A0
	cmp r6, #0
	beq _0807349C
	adds r0, r6, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807349C:
	adds r6, #0x10
	b _080734C2
_080734A0:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080734C0
_080734A8:
	cmp r2, #0
	beq _080734B8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080734B8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080734A8
_080734C0:
	adds r6, r2, #0
_080734C2:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080734D2
_080734CC:
	adds r1, #0x10
	cmp r1, r2
	bne _080734CC
_080734D2:
	cmp r0, #0
	beq _080734DA
	bl free
_080734DA:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r1, [sp, #0x2ec]
	str r1, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080734E6:
	ldr r3, _08073540 @ =0x080FBF58
	movs r1, #0xe
	movs r2, #2
	add r0, sp, #0x110
	strh r1, [r0]
	ldr r4, [sp, #0x230]
	strh r2, [r4, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x29c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r5, sb
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0xe0
	lsls r3, r3, #2
	adds r5, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x29c]
	ldr r2, _08073544 @ =0x06004A00
	bl func_08008F0C
	add r6, sp, #8
	mov sl, r6
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08073548
	cmp r1, #0
	beq _08073536
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073536:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08073616
	.align 2, 0
_08073540: .4byte 0x080FBF58
_08073544: .4byte 0x06004A00
_08073548:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x118
	str r0, [r1]
	ldr r0, [r5]
	ldr r4, [sp, #0x2e8]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0x114
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x114
	cmp r4, r0
	bhs _08073568
	adds r1, r2, #0
_08073568:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08073586
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0807358A
	mov r0, r8
	bl func_080D3BC0
	b _0807358A
_08073586:
	movs r0, #0
	mov r8, r0
_0807358A:
	adds r6, r0, #0
	str r6, [sp, #0x2ec]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r6, [sp, #0x2e8]
	cmp r2, r6
	beq _080735B2
_08073598:
	cmp r3, #0
	beq _080735A8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080735A8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _08073598
_080735B2:
	adds r6, r3, #0
	add r0, sp, #0x118
	ldr r0, [r0]
	cmp r0, #1
	bne _080735D0
	cmp r6, #0
	beq _080735CC
	adds r0, r6, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080735CC:
	adds r6, #0x10
	b _080735F2
_080735D0:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _080735F0
_080735D8:
	cmp r2, #0
	beq _080735E8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080735E8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080735D8
_080735F0:
	adds r6, r2, #0
_080735F2:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _08073602
_080735FC:
	adds r1, #0x10
	cmp r1, r2
	bne _080735FC
_08073602:
	cmp r0, #0
	beq _0807360A
	bl free
_0807360A:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_08073616:
	ldr r3, _08073670 @ =0x080FBF68
	movs r1, #8
	movs r2, #2
	add r0, sp, #0x11c
	strh r1, [r0]
	ldr r1, [sp, #0x234]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x2b8]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r2, sb
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #2
	adds r5, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2b8]
	ldr r2, _08073674 @ =0x06004D80
	bl func_08008F0C
	add r3, sp, #8
	mov sl, r3
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08073678
	cmp r1, #0
	beq _08073666
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073666:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08073746
	.align 2, 0
_08073670: .4byte 0x080FBF68
_08073674: .4byte 0x06004D80
_08073678:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x124
	str r0, [r1]
	ldr r0, [r5]
	ldr r2, [sp, #0x2e8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x120
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x120
	cmp r4, r0
	bhs _08073698
	adds r1, r2, #0
_08073698:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080736B6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080736BA
	mov r0, r8
	bl func_080D3BC0
	b _080736BA
_080736B6:
	movs r0, #0
	mov r8, r0
_080736BA:
	adds r6, r0, #0
	str r6, [sp, #0x2ec]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r4, [sp, #0x2e8]
	cmp r2, r4
	beq _080736E2
_080736C8:
	cmp r3, #0
	beq _080736D8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080736D8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x2e8]
	cmp r2, r6
	bne _080736C8
_080736E2:
	adds r6, r3, #0
	add r0, sp, #0x124
	ldr r0, [r0]
	cmp r0, #1
	bne _08073700
	cmp r6, #0
	beq _080736FC
	adds r0, r6, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080736FC:
	adds r6, #0x10
	b _08073722
_08073700:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _08073720
_08073708:
	cmp r2, #0
	beq _08073718
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073718:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08073708
_08073720:
	adds r6, r2, #0
_08073722:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _08073732
_0807372C:
	adds r1, #0x10
	cmp r1, r2
	bne _0807372C
_08073732:
	cmp r0, #0
	beq _0807373A
	bl free
_0807373A:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r1, [sp, #0x2ec]
	str r1, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_08073746:
	ldr r3, _080737A0 @ =0x080FBF74
	movs r1, #8
	movs r2, #2
	add r0, sp, #0x128
	strh r1, [r0]
	ldr r4, [sp, #0x238]
	strh r2, [r4, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x2cc]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r5, sb
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #2
	adds r5, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2cc]
	ldr r2, _080737A4 @ =0x06004F80
	bl func_08008F0C
	add r6, sp, #8
	mov sl, r6
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080737A8
	cmp r1, #0
	beq _08073796
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073796:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08073876
	.align 2, 0
_080737A0: .4byte 0x080FBF74
_080737A4: .4byte 0x06004F80
_080737A8:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x130
	str r0, [r1]
	ldr r0, [r5]
	ldr r4, [sp, #0x2e8]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0x12c
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x12c
	cmp r4, r0
	bhs _080737C8
	adds r1, r2, #0
_080737C8:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080737E6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080737EA
	mov r0, r8
	bl func_080D3BC0
	b _080737EA
_080737E6:
	movs r0, #0
	mov r8, r0
_080737EA:
	adds r6, r0, #0
	str r6, [sp, #0x2ec]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r6, [sp, #0x2e8]
	cmp r2, r6
	beq _08073812
_080737F8:
	cmp r3, #0
	beq _08073808
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073808:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _080737F8
_08073812:
	adds r6, r3, #0
	add r0, sp, #0x130
	ldr r0, [r0]
	cmp r0, #1
	bne _08073830
	cmp r6, #0
	beq _0807382C
	adds r0, r6, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807382C:
	adds r6, #0x10
	b _08073852
_08073830:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _08073850
_08073838:
	cmp r2, #0
	beq _08073848
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073848:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08073838
_08073850:
	adds r6, r2, #0
_08073852:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _08073862
_0807385C:
	adds r1, #0x10
	cmp r1, r2
	bne _0807385C
_08073862:
	cmp r0, #0
	beq _0807386A
	bl free
_0807386A:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_08073876:
	ldr r2, _080738CC @ =0x080FBF80
	movs r0, #2
	add r1, sp, #0x134
	strh r0, [r1]
	ldr r3, [sp, #0x23c]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x27c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r4, sb
	ldr r0, [r4]
	bl func_08008910
	adds r5, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x27c]
	ldr r2, _080738D0 @ =0x06000A00
	movs r3, #0x80
	bl func_08008F0C
	add r6, sp, #8
	mov sl, r6
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080738D4
	cmp r1, #0
	beq _080738C2
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080738C2:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _080739A2
	.align 2, 0
_080738CC: .4byte 0x080FBF80
_080738D0: .4byte 0x06000A00
_080738D4:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x13c
	str r0, [r1]
	ldr r0, [r5]
	ldr r4, [sp, #0x2e8]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0x138
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x138
	cmp r4, r0
	bhs _080738F4
	adds r1, r2, #0
_080738F4:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08073912
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08073916
	mov r0, r8
	bl func_080D3BC0
	b _08073916
_08073912:
	movs r0, #0
	mov r8, r0
_08073916:
	adds r6, r0, #0
	str r6, [sp, #0x2ec]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r6, [sp, #0x2e8]
	cmp r2, r6
	beq _0807393E
_08073924:
	cmp r3, #0
	beq _08073934
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073934:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _08073924
_0807393E:
	adds r6, r3, #0
	add r0, sp, #0x13c
	ldr r0, [r0]
	cmp r0, #1
	bne _0807395C
	cmp r6, #0
	beq _08073958
	adds r0, r6, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08073958:
	adds r6, #0x10
	b _0807397E
_0807395C:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _0807397C
_08073964:
	cmp r2, #0
	beq _08073974
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073974:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08073964
_0807397C:
	adds r6, r2, #0
_0807397E:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _0807398E
_08073988:
	adds r1, #0x10
	cmp r1, r2
	bne _08073988
_0807398E:
	cmp r0, #0
	beq _08073996
	bl free
_08073996:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_080739A2:
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x2dc]
	adds r0, r0, r2
	adds r0, #4
	movs r1, #0x87
	lsls r1, r1, #2
	movs r6, #0
	str r6, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r2, #0x1a
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x2d8]
	str r3, [sp, #0x20c]
	ldr r5, [sp, #0x208]
	ldr r1, [r5, #0x18]
	lsls r5, r3, #6
	adds r1, r1, r5
	adds r1, #6
	movs r7, #0x90
	lsls r7, r7, #1
	mov r8, r7
	str r4, [sp]
	movs r0, #1
	mov r2, r8
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, #8
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x88
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r2, [sp, #0x208]
	ldr r0, [r2, #0x18]
	adds r0, r0, r5
	adds r0, #0xc
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x9b
	lsls r1, r1, #2
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x208]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x1c
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x94
	lsls r1, r1, #2
	movs r2, #0xe
	movs r3, #2
	bl func_0804E9F4
	ldr r5, [sp, #0x20c]
	adds r5, #2
	str r5, [sp, #0x20c]
	ldr r7, _08073C98 @ =0x0000058C
	add r7, sb
	mov sl, r7
	ldr r0, [r7]
	ldr r7, _08073C9C @ =0x00001AA8
	adds r0, r0, r7
	bl func_0809B05C
	ldr r2, [sp, #0x208]
	ldr r1, [r2, #0x18]
	lsls r5, r5, #6
	adds r1, r1, r5
	adds r1, #0x32
	str r4, [sp]
	mov r2, r8
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0x208]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x34
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x50
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r5, [sp, #0x20c]
	adds r5, #2
	str r5, [sp, #0x20c]
	ldr r0, [sp, #0x208]
	ldr r1, [r0, #0x18]
	lsls r5, r5, #6
	adds r1, r1, r5
	adds r1, #6
	str r4, [sp]
	movs r0, #1
	mov r2, r8
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, #8
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x88
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r2, [sp, #0x208]
	ldr r0, [r2, #0x18]
	adds r0, r0, r5
	adds r0, #0xc
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x9f
	lsls r1, r1, #2
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x208]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x1c
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x94
	lsls r1, r1, #2
	movs r2, #0xe
	movs r3, #2
	bl func_0804E9F4
	ldr r5, [sp, #0x20c]
	adds r5, #2
	str r5, [sp, #0x20c]
	mov r1, sl
	ldr r0, [r1]
	adds r0, r0, r7
	bl func_0809B084
	ldr r2, [sp, #0x208]
	ldr r1, [r2, #0x18]
	lsls r5, r5, #6
	adds r1, r1, r5
	adds r1, #0x32
	str r4, [sp]
	mov r2, r8
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0x208]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x34
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x50
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r5, [sp, #0x20c]
	adds r5, #2
	str r5, [sp, #0x20c]
	ldr r0, [sp, #0x208]
	ldr r1, [r0, #0x18]
	lsls r5, r5, #6
	adds r1, r1, r5
	adds r1, #6
	str r4, [sp]
	movs r0, #1
	mov r2, r8
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, #8
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x84
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r2, [sp, #0x208]
	ldr r0, [r2, #0x18]
	adds r0, r0, r5
	adds r0, #0xc
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x9b
	lsls r1, r1, #2
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x208]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x1c
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x94
	lsls r1, r1, #2
	movs r2, #0xe
	movs r3, #2
	bl func_0804E9F4
	ldr r5, [sp, #0x20c]
	adds r5, #2
	str r5, [sp, #0x20c]
	mov r1, sl
	ldr r0, [r1]
	adds r0, r0, r7
	bl func_0809B0B0
	ldr r2, [sp, #0x208]
	ldr r1, [r2, #0x18]
	lsls r5, r5, #6
	adds r1, r1, r5
	adds r1, #0x32
	str r4, [sp]
	mov r2, r8
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0x208]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x34
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x50
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r5, [sp, #0x20c]
	adds r5, #2
	str r5, [sp, #0x20c]
	ldr r0, [sp, #0x208]
	ldr r1, [r0, #0x18]
	lsls r5, r5, #6
	adds r1, r1, r5
	adds r1, #6
	str r4, [sp]
	movs r0, #1
	mov r2, r8
	movs r3, #0
	bl func_0804EDB4
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	adds r0, r0, r5
	adds r0, #8
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x84
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r2, [sp, #0x208]
	ldr r0, [r2, #0x18]
	adds r0, r0, r5
	adds r0, #0xc
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x9f
	lsls r1, r1, #2
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x208]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x1c
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x94
	lsls r1, r1, #2
	movs r2, #0xe
	movs r3, #2
	bl func_0804E9F4
	ldr r5, [sp, #0x20c]
	adds r5, #2
	str r5, [sp, #0x20c]
	mov r1, sl
	ldr r0, [r1]
	adds r0, r0, r7
	bl func_0809B0D8
	ldr r2, [sp, #0x208]
	ldr r1, [r2, #0x18]
	lsls r5, r5, #6
	adds r1, r1, r5
	adds r1, #0x32
	str r4, [sp]
	mov r2, r8
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0x208]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0x34
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x50
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r4, [sp, #0x20c]
	adds r4, #3
	str r4, [sp, #0x20c]
	ldr r3, _08073CA0 @ =0x080FBF84
	movs r1, #0x1a
	movs r2, #2
	add r0, sp, #0x140
	strh r1, [r0]
	ldr r5, [sp, #0x240]
	strh r2, [r5, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x280]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r6, sb
	ldr r0, [r6]
	bl func_08008910
	movs r3, #0xd0
	lsls r3, r3, #3
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x280]
	ldr r2, _08073CA4 @ =0x06005180
	bl func_08008F0C
	add r7, sp, #8
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08073CA8
	cmp r1, #0
	beq _08073C90
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08073C90:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08073D76
	.align 2, 0
_08073C98: .4byte 0x0000058C
_08073C9C: .4byte 0x00001AA8
_08073CA0: .4byte 0x080FBF84
_08073CA4: .4byte 0x06005180
_08073CA8:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x148
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x2e8]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x144
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x144
	cmp r4, r0
	bhs _08073CC8
	adds r1, r2, #0
_08073CC8:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08073CE6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08073CEA
	mov r0, r8
	bl func_080D3BC0
	b _08073CEA
_08073CE6:
	movs r0, #0
	mov r8, r0
_08073CEA:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	beq _08073D12
_08073CF8:
	cmp r3, #0
	beq _08073D08
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073D08:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x2e8]
	cmp r2, r0
	bne _08073CF8
_08073D12:
	adds r5, r3, #0
	add r0, sp, #0x148
	ldr r0, [r0]
	cmp r0, #1
	bne _08073D30
	cmp r5, #0
	beq _08073D2C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08073D2C:
	adds r5, #0x10
	b _08073D52
_08073D30:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08073D50
_08073D38:
	cmp r2, #0
	beq _08073D48
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073D48:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08073D38
_08073D50:
	adds r5, r2, #0
_08073D52:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08073D62
_08073D5C:
	adds r1, #0x10
	cmp r1, r2
	bne _08073D5C
_08073D62:
	cmp r0, #0
	beq _08073D6A
	bl free
_08073D6A:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08073D76:
	ldr r3, _08073DD0 @ =0x080FBFA0
	movs r1, #8
	movs r2, #2
	add r0, sp, #0x14c
	strh r1, [r0]
	ldr r1, [sp, #0x244]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x2bc]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r2, sb
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #2
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2bc]
	ldr r2, _08073DD4 @ =0x06000A80
	bl func_08008F0C
	add r3, sp, #8
	mov sl, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08073DD8
	cmp r1, #0
	beq _08073DC6
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073DC6:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08073EA6
	.align 2, 0
_08073DD0: .4byte 0x080FBFA0
_08073DD4: .4byte 0x06000A80
_08073DD8:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x154
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x2e8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x150
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x150
	cmp r4, r0
	bhs _08073DF8
	adds r1, r2, #0
_08073DF8:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08073E16
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08073E1A
	mov r0, r8
	bl func_080D3BC0
	b _08073E1A
_08073E16:
	movs r0, #0
	mov r8, r0
_08073E1A:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x2e8]
	cmp r2, r4
	beq _08073E42
_08073E28:
	cmp r3, #0
	beq _08073E38
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073E38:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	bne _08073E28
_08073E42:
	adds r5, r3, #0
	add r0, sp, #0x154
	ldr r0, [r0]
	cmp r0, #1
	bne _08073E60
	cmp r5, #0
	beq _08073E5C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073E5C:
	adds r5, #0x10
	b _08073E82
_08073E60:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08073E80
_08073E68:
	cmp r2, #0
	beq _08073E78
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073E78:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08073E68
_08073E80:
	adds r5, r2, #0
_08073E82:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08073E92
_08073E8C:
	adds r1, #0x10
	cmp r1, r2
	bne _08073E8C
_08073E92:
	cmp r0, #0
	beq _08073E9A
	bl free
_08073E9A:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r1, [sp, #0x2ec]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08073EA6:
	ldr r3, _08073F00 @ =0x080FBFAC
	movs r1, #4
	movs r2, #2
	add r0, sp, #0x158
	strh r1, [r0]
	ldr r4, [sp, #0x24c]
	strh r2, [r4, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x2d4]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r5, sb
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2d4]
	ldr r2, _08073F04 @ =0x06000C80
	bl func_08008F0C
	add r7, sp, #8
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08073F08
	cmp r1, #0
	beq _08073EF6
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08073EF6:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08073FD6
	.align 2, 0
_08073F00: .4byte 0x080FBFAC
_08073F04: .4byte 0x06000C80
_08073F08:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x160
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x2e8]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x15c
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x15c
	cmp r4, r0
	bhs _08073F28
	adds r1, r2, #0
_08073F28:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08073F46
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08073F4A
	mov r0, r8
	bl func_080D3BC0
	b _08073F4A
_08073F46:
	movs r0, #0
	mov r8, r0
_08073F4A:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	beq _08073F72
_08073F58:
	cmp r3, #0
	beq _08073F68
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073F68:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x2e8]
	cmp r2, r0
	bne _08073F58
_08073F72:
	adds r5, r3, #0
	add r0, sp, #0x160
	ldr r0, [r0]
	cmp r0, #1
	bne _08073F90
	cmp r5, #0
	beq _08073F8C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08073F8C:
	adds r5, #0x10
	b _08073FB2
_08073F90:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08073FB0
_08073F98:
	cmp r2, #0
	beq _08073FA8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08073FA8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08073F98
_08073FB0:
	adds r5, r2, #0
_08073FB2:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08073FC2
_08073FBC:
	adds r1, #0x10
	cmp r1, r2
	bne _08073FBC
_08073FC2:
	cmp r0, #0
	beq _08073FCA
	bl free
_08073FCA:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08073FD6:
	ldr r3, _08074030 @ =0x080FBFB4
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x164
	strh r1, [r0]
	ldr r1, [sp, #0x250]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x248]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r2, sb
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x248]
	ldr r2, _08074034 @ =0x06000D80
	bl func_08008F0C
	add r3, sp, #8
	mov sl, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08074038
	cmp r1, #0
	beq _08074026
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074026:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08074106
	.align 2, 0
_08074030: .4byte 0x080FBFB4
_08074034: .4byte 0x06000D80
_08074038:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x16c
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x2e8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x168
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x168
	cmp r4, r0
	bhs _08074058
	adds r1, r2, #0
_08074058:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08074076
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0807407A
	mov r0, r8
	bl func_080D3BC0
	b _0807407A
_08074076:
	movs r0, #0
	mov r8, r0
_0807407A:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x2e8]
	cmp r2, r4
	beq _080740A2
_08074088:
	cmp r3, #0
	beq _08074098
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074098:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	bne _08074088
_080740A2:
	adds r5, r3, #0
	add r0, sp, #0x16c
	ldr r0, [r0]
	cmp r0, #1
	bne _080740C0
	cmp r5, #0
	beq _080740BC
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080740BC:
	adds r5, #0x10
	b _080740E2
_080740C0:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080740E0
_080740C8:
	cmp r2, #0
	beq _080740D8
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080740D8:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080740C8
_080740E0:
	adds r5, r2, #0
_080740E2:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080740F2
_080740EC:
	adds r1, #0x10
	cmp r1, r2
	bne _080740EC
_080740F2:
	cmp r0, #0
	beq _080740FA
	bl free
_080740FA:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r1, [sp, #0x2ec]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08074106:
	ldr r3, _08074160 @ =0x080FBFBC
	movs r1, #6
	movs r2, #2
	add r0, sp, #0x170
	strh r1, [r0]
	ldr r4, [sp, #0x254]
	strh r2, [r4, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x288]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r5, sb
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #1
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x288]
	ldr r2, _08074164 @ =0x06000F00
	bl func_08008F0C
	add r7, sp, #8
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08074168
	cmp r1, #0
	beq _08074156
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074156:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08074236
	.align 2, 0
_08074160: .4byte 0x080FBFBC
_08074164: .4byte 0x06000F00
_08074168:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x178
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x2e8]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x174
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x174
	cmp r4, r0
	bhs _08074188
	adds r1, r2, #0
_08074188:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080741A6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080741AA
	mov r0, r8
	bl func_080D3BC0
	b _080741AA
_080741A6:
	movs r0, #0
	mov r8, r0
_080741AA:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	beq _080741D2
_080741B8:
	cmp r3, #0
	beq _080741C8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080741C8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x2e8]
	cmp r2, r0
	bne _080741B8
_080741D2:
	adds r5, r3, #0
	add r0, sp, #0x178
	ldr r0, [r0]
	cmp r0, #1
	bne _080741F0
	cmp r5, #0
	beq _080741EC
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080741EC:
	adds r5, #0x10
	b _08074212
_080741F0:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08074210
_080741F8:
	cmp r2, #0
	beq _08074208
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074208:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080741F8
_08074210:
	adds r5, r2, #0
_08074212:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08074222
_0807421C:
	adds r1, #0x10
	cmp r1, r2
	bne _0807421C
_08074222:
	cmp r0, #0
	beq _0807422A
	bl free
_0807422A:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08074236:
	ldr r2, _0807428C @ =0x080FBFC4
	movs r0, #2
	add r1, sp, #0x17c
	strh r0, [r1]
	ldr r3, [sp, #0x258]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x28c]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r4, sb
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x28c]
	ldr r2, _08074290 @ =0x06001080
	movs r3, #0x80
	bl func_08008F0C
	add r5, sp, #8
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08074294
	cmp r1, #0
	beq _08074282
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074282:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08074362
	.align 2, 0
_0807428C: .4byte 0x080FBFC4
_08074290: .4byte 0x06001080
_08074294:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x184
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0x2e8]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0x180
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x180
	cmp r4, r0
	bhs _080742B4
	adds r1, r2, #0
_080742B4:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080742D2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080742D6
	mov r0, r8
	bl func_080D3BC0
	b _080742D6
_080742D2:
	movs r0, #0
	mov r8, r0
_080742D6:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	beq _080742FE
_080742E4:
	cmp r3, #0
	beq _080742F4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080742F4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _080742E4
_080742FE:
	adds r5, r3, #0
	add r0, sp, #0x184
	ldr r0, [r0]
	cmp r0, #1
	bne _0807431C
	cmp r5, #0
	beq _08074318
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074318:
	adds r5, #0x10
	b _0807433E
_0807431C:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0807433C
_08074324:
	cmp r2, #0
	beq _08074334
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074334:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08074324
_0807433C:
	adds r5, r2, #0
_0807433E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0807434E
_08074348:
	adds r1, #0x10
	cmp r1, r2
	bne _08074348
_0807434E:
	cmp r0, #0
	beq _08074356
	bl free
_08074356:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08074362:
	ldr r2, _080743B8 @ =0x080FBFC8
	movs r0, #2
	add r1, sp, #0x188
	strh r0, [r1]
	ldr r3, [sp, #0x25c]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x294]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r4, sb
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x294]
	ldr r2, _080743BC @ =0x06001100
	movs r3, #0x80
	bl func_08008F0C
	add r5, sp, #8
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080743C0
	cmp r1, #0
	beq _080743AE
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080743AE:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0807448E
	.align 2, 0
_080743B8: .4byte 0x080FBFC8
_080743BC: .4byte 0x06001100
_080743C0:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x190
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0x2e8]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0x18c
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x18c
	cmp r4, r0
	bhs _080743E0
	adds r1, r2, #0
_080743E0:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080743FE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08074402
	mov r0, r8
	bl func_080D3BC0
	b _08074402
_080743FE:
	movs r0, #0
	mov r8, r0
_08074402:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	beq _0807442A
_08074410:
	cmp r3, #0
	beq _08074420
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074420:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _08074410
_0807442A:
	adds r5, r3, #0
	add r0, sp, #0x190
	ldr r0, [r0]
	cmp r0, #1
	bne _08074448
	cmp r5, #0
	beq _08074444
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074444:
	adds r5, #0x10
	b _0807446A
_08074448:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08074468
_08074450:
	cmp r2, #0
	beq _08074460
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074460:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08074450
_08074468:
	adds r5, r2, #0
_0807446A:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0807447A
_08074474:
	adds r1, #0x10
	cmp r1, r2
	bne _08074474
_0807447A:
	cmp r0, #0
	beq _08074482
	bl free
_08074482:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0807448E:
	ldr r4, _080745B4 @ =0x0000058C
	add r4, sb
	ldr r0, [r4]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetUnkAge__C4Coop
	cmp r0, #0
	bne _080744C2
	ldr r0, [r4]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetUnkCowAge__C4Barn
	cmp r0, #0
	bne _080744C2
	ldr r0, [r4]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	bl GetUnkSheepAge__C4Barn
	cmp r0, #0
	beq _080744E6
_080744C2:
	ldr r4, [sp, #0x208]
	ldr r0, [r4, #0x18]
	ldr r5, [sp, #0x20c]
	lsls r1, r5, #6
	adds r0, r0, r1
	adds r0, #4
	movs r1, #0xa3
	lsls r1, r1, #2
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0x1a
	movs r3, #2
	bl func_0804E9F4
	adds r5, #2
	str r5, [sp, #0x20c]
_080744E6:
	ldr r7, _080745B4 @ =0x0000058C
	add r7, sb
	ldr r0, [r7]
	movs r6, #0x82
	lsls r6, r6, #3
	adds r0, r0, r6
	bl GetUnkAge__C4Coop
	cmp r0, #0
	bne _080744FC
	b _080746DE
_080744FC:
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x20c]
	lsls r2, r2, #6
	mov r8, r2
	add r0, r8
	adds r0, #8
	movs r1, #0
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	movs r1, #0x54
	movs r2, #8
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x20c]
	lsls r2, r3, #3
	ldr r3, _080745B8 @ =0x0875268C
	ldr r0, _080745BC @ =0x0875270C
	str r0, [sp]
	mov r0, sb
	movs r1, #0x10
	bl func_08075334
	add r1, sp, #0x194
	movs r5, #0xc
	movs r6, #2
	adds r0, r1, #0
	strh r5, [r0]
	strh r6, [r1, #2]
	ldr r0, [r0]
	ldr r4, _080745C0 @ =0x00008564
	add r4, sb
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [r7]
	movs r7, #0x82
	lsls r7, r7, #3
	adds r0, r0, r7
	bl GetUnkName__C4Coop
	adds r2, r0, #0
	add r1, sp, #0x198
	adds r0, r1, #0
	strh r5, [r0]
	strh r6, [r1, #2]
	ldr r0, [r0]
	str r2, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r1, sb
	ldr r0, [r1]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r5, r0, #0
	add r0, sp, #8
	adds r1, r4, #0
	ldr r2, _080745C4 @ =0x06006480
	bl func_08008F0C
	add r2, sp, #8
	mov sl, r2
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	mov r3, r8
	str r3, [sp, #0x2dc]
	cmp r1, r0
	beq _080745C8
	cmp r1, #0
	beq _080745A4
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080745A4:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r0, [sp, #0x20c]
	adds r0, #2
	str r0, [sp, #0x2d8]
	b _0807469C
	.align 2, 0
_080745B4: .4byte 0x0000058C
_080745B8: .4byte 0x0875268C
_080745BC: .4byte 0x0875270C
_080745C0: .4byte 0x00008564
_080745C4: .4byte 0x06006480
_080745C8:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x1a0
	str r0, [r1]
	ldr r0, [r5]
	ldr r2, [sp, #0x2e8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x19c
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x19c
	cmp r4, r0
	bhs _080745E8
	adds r1, r2, #0
_080745E8:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08074606
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0807460A
	mov r0, r8
	bl func_080D3BC0
	b _0807460A
_08074606:
	movs r0, #0
	mov r8, r0
_0807460A:
	adds r6, r0, #0
	str r6, [sp, #0x2ec]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r4, [sp, #0x20c]
	adds r4, #2
	str r4, [sp, #0x2d8]
	ldr r6, [sp, #0x2e8]
	cmp r2, r6
	beq _08074638
_0807461E:
	cmp r3, #0
	beq _0807462E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807462E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _0807461E
_08074638:
	adds r6, r3, #0
	add r0, sp, #0x1a0
	ldr r0, [r0]
	cmp r0, #1
	bne _08074656
	cmp r6, #0
	beq _08074652
	adds r0, r6, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074652:
	adds r6, #0x10
	b _08074678
_08074656:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _08074676
_0807465E:
	cmp r2, #0
	beq _0807466E
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807466E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807465E
_08074676:
	adds r6, r2, #0
_08074678:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _08074688
_08074682:
	adds r1, #0x10
	cmp r1, r2
	bne _08074682
_08074688:
	cmp r0, #0
	beq _08074690
	bl free
_08074690:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_0807469C:
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x2dc]
	adds r0, r0, r2
	adds r0, #0x18
	movs r1, #0xc9
	lsls r1, r1, #2
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x2d8]
	str r3, [sp, #0x20c]
	ldr r0, _080747AC @ =0x0000058C
	add r0, sb
	ldr r0, [r0]
	movs r4, #0x82
	lsls r4, r4, #3
	adds r0, r0, r4
	bl GetUnkAge__C4Coop
	adds r1, r0, #0
	mov r0, sb
	ldr r2, [sp, #0x20c]
	bl func_08075220
	ldr r5, [sp, #0x20c]
	adds r5, #2
	str r5, [sp, #0x20c]
_080746DE:
	ldr r7, _080747AC @ =0x0000058C
	add r7, sb
	ldr r0, [r7]
	movs r6, #0xbe
	lsls r6, r6, #3
	adds r0, r0, r6
	bl GetUnkCowAge__C4Barn
	cmp r0, #0
	bne _080746F4
	b _080748D6
_080746F4:
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x20c]
	lsls r2, r2, #6
	mov r8, r2
	add r0, r8
	adds r0, #8
	movs r1, #0
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	movs r1, #0x64
	movs r2, #4
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x20c]
	lsls r2, r3, #3
	ldr r3, _080747B0 @ =0x08751B4C
	ldr r0, _080747B4 @ =0x08751BCC
	str r0, [sp]
	mov r0, sb
	movs r1, #0x10
	bl func_08075334
	add r1, sp, #0x1a4
	movs r5, #0xc
	movs r6, #2
	adds r0, r1, #0
	strh r5, [r0]
	strh r6, [r1, #2]
	ldr r0, [r0]
	ldr r4, _080747B8 @ =0x00008868
	add r4, sb
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [r7]
	movs r7, #0xbe
	lsls r7, r7, #3
	adds r0, r0, r7
	bl GetUnkCowName__C4Barn
	adds r2, r0, #0
	add r1, sp, #0x1a8
	adds r0, r1, #0
	strh r5, [r0]
	strh r6, [r1, #2]
	ldr r0, [r0]
	str r2, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r1, sb
	ldr r0, [r1]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r5, r0, #0
	add r0, sp, #8
	adds r1, r4, #0
	ldr r2, _080747BC @ =0x06006780
	bl func_08008F0C
	add r2, sp, #8
	mov sl, r2
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	mov r3, r8
	str r3, [sp, #0x2dc]
	cmp r1, r0
	beq _080747C0
	cmp r1, #0
	beq _0807479C
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807479C:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r0, [sp, #0x20c]
	adds r0, #2
	str r0, [sp, #0x2d8]
	b _08074894
	.align 2, 0
_080747AC: .4byte 0x0000058C
_080747B0: .4byte 0x08751B4C
_080747B4: .4byte 0x08751BCC
_080747B8: .4byte 0x00008868
_080747BC: .4byte 0x06006780
_080747C0:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x1b0
	str r0, [r1]
	ldr r0, [r5]
	ldr r2, [sp, #0x2e8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x1ac
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1ac
	cmp r4, r0
	bhs _080747E0
	adds r1, r2, #0
_080747E0:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080747FE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08074802
	mov r0, r8
	bl func_080D3BC0
	b _08074802
_080747FE:
	movs r0, #0
	mov r8, r0
_08074802:
	adds r6, r0, #0
	str r6, [sp, #0x2ec]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r4, [sp, #0x20c]
	adds r4, #2
	str r4, [sp, #0x2d8]
	ldr r6, [sp, #0x2e8]
	cmp r2, r6
	beq _08074830
_08074816:
	cmp r3, #0
	beq _08074826
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074826:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _08074816
_08074830:
	adds r6, r3, #0
	add r0, sp, #0x1b0
	ldr r0, [r0]
	cmp r0, #1
	bne _0807484E
	cmp r6, #0
	beq _0807484A
	adds r0, r6, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807484A:
	adds r6, #0x10
	b _08074870
_0807484E:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _0807486E
_08074856:
	cmp r2, #0
	beq _08074866
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074866:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08074856
_0807486E:
	adds r6, r2, #0
_08074870:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _08074880
_0807487A:
	adds r1, #0x10
	cmp r1, r2
	bne _0807487A
_08074880:
	cmp r0, #0
	beq _08074888
	bl free
_08074888:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_08074894:
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x2dc]
	adds r0, r0, r2
	adds r0, #0x10
	movs r1, #0xcf
	lsls r1, r1, #2
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x2d8]
	str r3, [sp, #0x20c]
	ldr r0, _080749A4 @ =0x0000058C
	add r0, sb
	ldr r0, [r0]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	bl GetUnkCowAge__C4Barn
	adds r1, r0, #0
	mov r0, sb
	ldr r2, [sp, #0x20c]
	bl func_08075220
	ldr r5, [sp, #0x20c]
	adds r5, #2
	str r5, [sp, #0x20c]
_080748D6:
	ldr r7, _080749A4 @ =0x0000058C
	add r7, sb
	ldr r0, [r7]
	movs r6, #0xbe
	lsls r6, r6, #3
	adds r0, r0, r6
	bl GetUnkSheepAge__C4Barn
	cmp r0, #0
	bne _080748EC
	b _08074ACE
_080748EC:
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x20c]
	lsls r2, r2, #6
	mov r8, r2
	add r0, r8
	adds r0, #8
	movs r1, #0
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	movs r1, #0x6c
	movs r2, #6
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x20c]
	lsls r2, r3, #3
	ldr r3, _080749A8 @ =0x0875320C
	ldr r0, _080749AC @ =0x0875328C
	str r0, [sp]
	mov r0, sb
	movs r1, #0x10
	bl func_08075334
	add r1, sp, #0x1b4
	movs r5, #0xc
	movs r6, #2
	adds r0, r1, #0
	strh r5, [r0]
	strh r6, [r1, #2]
	ldr r0, [r0]
	ldr r4, _080749B0 @ =0x00008B6C
	add r4, sb
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [r7]
	movs r7, #0xbe
	lsls r7, r7, #3
	adds r0, r0, r7
	bl GetUnkSheepName__C4Barn
	adds r2, r0, #0
	add r1, sp, #0x1b8
	adds r0, r1, #0
	strh r5, [r0]
	strh r6, [r1, #2]
	ldr r0, [r0]
	str r2, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r1, sb
	ldr r0, [r1]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r5, r0, #0
	add r0, sp, #8
	adds r1, r4, #0
	ldr r2, _080749B4 @ =0x06006A80
	bl func_08008F0C
	add r2, sp, #8
	mov sl, r2
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	mov r3, r8
	str r3, [sp, #0x2dc]
	cmp r1, r0
	beq _080749B8
	cmp r1, #0
	beq _08074994
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074994:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r0, [sp, #0x20c]
	adds r0, #2
	str r0, [sp, #0x2d8]
	b _08074A8C
	.align 2, 0
_080749A4: .4byte 0x0000058C
_080749A8: .4byte 0x0875320C
_080749AC: .4byte 0x0875328C
_080749B0: .4byte 0x00008B6C
_080749B4: .4byte 0x06006A80
_080749B8:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x1c0
	str r0, [r1]
	ldr r0, [r5]
	ldr r2, [sp, #0x2e8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x1bc
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1bc
	cmp r4, r0
	bhs _080749D8
	adds r1, r2, #0
_080749D8:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080749F6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080749FA
	mov r0, r8
	bl func_080D3BC0
	b _080749FA
_080749F6:
	movs r0, #0
	mov r8, r0
_080749FA:
	adds r6, r0, #0
	str r6, [sp, #0x2ec]
	ldr r2, [r5]
	adds r3, r6, #0
	ldr r4, [sp, #0x20c]
	adds r4, #2
	str r4, [sp, #0x2d8]
	ldr r6, [sp, #0x2e8]
	cmp r2, r6
	beq _08074A28
_08074A0E:
	cmp r3, #0
	beq _08074A1E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074A1E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _08074A0E
_08074A28:
	adds r6, r3, #0
	add r0, sp, #0x1c0
	ldr r0, [r0]
	cmp r0, #1
	bne _08074A46
	cmp r6, #0
	beq _08074A42
	adds r0, r6, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074A42:
	adds r6, #0x10
	b _08074A68
_08074A46:
	adds r3, r0, #0
	adds r2, r6, #0
	cmp r3, #0
	beq _08074A66
_08074A4E:
	cmp r2, #0
	beq _08074A5E
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074A5E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08074A4E
_08074A66:
	adds r6, r2, #0
_08074A68:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _08074A78
_08074A72:
	adds r1, #0x10
	cmp r1, r2
	bne _08074A72
_08074A78:
	cmp r0, #0
	beq _08074A80
	bl free
_08074A80:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r5]
	str r6, [r5, #4]
	str r0, [r5, #0xc]
_08074A8C:
	ldr r1, [sp, #0x208]
	ldr r0, [r1, #0x18]
	ldr r2, [sp, #0x2dc]
	adds r0, r0, r2
	adds r0, #0x14
	movs r1, #0xd5
	lsls r1, r1, #2
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	ldr r3, [sp, #0x2d8]
	str r3, [sp, #0x20c]
	ldr r0, _08074B28 @ =0x0000058C
	add r0, sb
	ldr r0, [r0]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	bl GetUnkSheepAge__C4Barn
	adds r1, r0, #0
	mov r0, sb
	ldr r2, [sp, #0x20c]
	bl func_08075220
	ldr r5, [sp, #0x20c]
	adds r5, #3
	str r5, [sp, #0x20c]
_08074ACE:
	ldr r3, _08074B2C @ =0x080FBFCC
	movs r1, #0x1a
	movs r2, #2
	add r0, sp, #0x1c4
	strh r1, [r0]
	ldr r6, [sp, #0x260]
	strh r2, [r6, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x298]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r7, sb
	ldr r0, [r7]
	bl func_08008910
	movs r3, #0xd0
	lsls r3, r3, #3
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x298]
	ldr r2, _08074B30 @ =0x06005800
	bl func_08008F0C
	add r0, sp, #8
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08074B34
	cmp r1, #0
	beq _08074B1E
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074B1E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08074C02
	.align 2, 0
_08074B28: .4byte 0x0000058C
_08074B2C: .4byte 0x080FBFCC
_08074B30: .4byte 0x06005800
_08074B34:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x1cc
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x2e8]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x1c8
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1c8
	cmp r4, r0
	bhs _08074B54
	adds r1, r2, #0
_08074B54:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08074B72
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08074B76
	mov r0, r8
	bl func_080D3BC0
	b _08074B76
_08074B72:
	movs r0, #0
	mov r8, r0
_08074B76:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	beq _08074B9E
_08074B84:
	cmp r3, #0
	beq _08074B94
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074B94:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x2e8]
	cmp r2, r0
	bne _08074B84
_08074B9E:
	adds r5, r3, #0
	add r0, sp, #0x1cc
	ldr r0, [r0]
	cmp r0, #1
	bne _08074BBC
	cmp r5, #0
	beq _08074BB8
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074BB8:
	adds r5, #0x10
	b _08074BDE
_08074BBC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08074BDC
_08074BC4:
	cmp r2, #0
	beq _08074BD4
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074BD4:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08074BC4
_08074BDC:
	adds r5, r2, #0
_08074BDE:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08074BEE
_08074BE8:
	adds r1, #0x10
	cmp r1, r2
	bne _08074BE8
_08074BEE:
	cmp r0, #0
	beq _08074BF6
	bl free
_08074BF6:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08074C02:
	ldr r3, _08074C5C @ =0x080FBFE8
	movs r1, #4
	movs r2, #2
	add r0, sp, #0x1d0
	strh r1, [r0]
	ldr r1, [sp, #0x264]
	strh r2, [r1, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x228]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r2, sb
	ldr r0, [r2]
	bl func_08008910
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x228]
	ldr r2, _08074C60 @ =0x06001180
	bl func_08008F0C
	add r3, sp, #8
	mov sl, r3
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08074C64
	cmp r1, #0
	beq _08074C52
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074C52:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08074D32
	.align 2, 0
_08074C5C: .4byte 0x080FBFE8
_08074C60: .4byte 0x06001180
_08074C64:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x1d8
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0x2e8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0x1d4
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1d4
	cmp r4, r0
	bhs _08074C84
	adds r1, r2, #0
_08074C84:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08074CA2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08074CA6
	mov r0, r8
	bl func_080D3BC0
	b _08074CA6
_08074CA2:
	movs r0, #0
	mov r8, r0
_08074CA6:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x2e8]
	cmp r2, r4
	beq _08074CCE
_08074CB4:
	cmp r3, #0
	beq _08074CC4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074CC4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	bne _08074CB4
_08074CCE:
	adds r5, r3, #0
	add r0, sp, #0x1d8
	ldr r0, [r0]
	cmp r0, #1
	bne _08074CEC
	cmp r5, #0
	beq _08074CE8
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074CE8:
	adds r5, #0x10
	b _08074D0E
_08074CEC:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08074D0C
_08074CF4:
	cmp r2, #0
	beq _08074D04
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074D04:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08074CF4
_08074D0C:
	adds r5, r2, #0
_08074D0E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08074D1E
_08074D18:
	adds r1, #0x10
	cmp r1, r2
	bne _08074D18
_08074D1E:
	cmp r0, #0
	beq _08074D26
	bl free
_08074D26:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r1, [sp, #0x2ec]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08074D32:
	ldr r3, _08074D8C @ =0x080FBFF0
	movs r1, #0x14
	movs r2, #2
	add r0, sp, #0x1dc
	strh r1, [r0]
	ldr r4, [sp, #0x268]
	strh r2, [r4, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x274]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r5, sb
	ldr r0, [r5]
	bl func_08008910
	movs r3, #0xa0
	lsls r3, r3, #3
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x274]
	ldr r2, _08074D90 @ =0x06001280
	bl func_08008F0C
	add r7, sp, #8
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08074D94
	cmp r1, #0
	beq _08074D82
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074D82:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08074E62
	.align 2, 0
_08074D8C: .4byte 0x080FBFF0
_08074D90: .4byte 0x06001280
_08074D94:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x1e4
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x2e8]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x1e0
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1e0
	cmp r4, r0
	bhs _08074DB4
	adds r1, r2, #0
_08074DB4:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08074DD2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08074DD6
	mov r0, r8
	bl func_080D3BC0
	b _08074DD6
_08074DD2:
	movs r0, #0
	mov r8, r0
_08074DD6:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	beq _08074DFE
_08074DE4:
	cmp r3, #0
	beq _08074DF4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074DF4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x2e8]
	cmp r2, r0
	bne _08074DE4
_08074DFE:
	adds r5, r3, #0
	add r0, sp, #0x1e4
	ldr r0, [r0]
	cmp r0, #1
	bne _08074E1C
	cmp r5, #0
	beq _08074E18
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074E18:
	adds r5, #0x10
	b _08074E3E
_08074E1C:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08074E3C
_08074E24:
	cmp r2, #0
	beq _08074E34
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074E34:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08074E24
_08074E3C:
	adds r5, r2, #0
_08074E3E:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08074E4E
_08074E48:
	adds r1, #0x10
	cmp r1, r2
	bne _08074E48
_08074E4E:
	cmp r0, #0
	beq _08074E56
	bl free
_08074E56:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08074E62:
	ldr r5, _08074F2C @ =0x0000058C
	add r5, sb
	ldr r0, [r5]
	ldr r1, _08074F30 @ =0x00001BD8
	adds r0, r0, r1
	bl func_0800E97C
	cmp r0, #0
	beq _08074ED4
	ldr r2, [sp, #0x208]
	ldr r0, [r2, #0x18]
	ldr r3, [sp, #0x20c]
	lsls r1, r3, #6
	adds r0, r0, r1
	adds r0, #4
	movs r1, #0xb0
	lsls r1, r1, #2
	movs r6, #0
	str r6, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r2, #0x1a
	movs r3, #2
	bl func_0804E9F4
	ldr r7, [sp, #0x20c]
	adds r7, #2
	ldr r0, [r5]
	ldr r1, _08074F30 @ =0x00001BD8
	adds r0, r0, r1
	bl func_0800E97C
	ldr r2, [sp, #0x208]
	ldr r1, [r2, #0x18]
	lsls r5, r7, #6
	adds r1, r1, r5
	adds r1, #8
	movs r2, #0x90
	lsls r2, r2, #1
	str r4, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0x208]
	ldr r0, [r3, #0x18]
	adds r0, r0, r5
	adds r0, #0xa
	str r6, [sp]
	str r4, [sp, #4]
	movs r1, #0x94
	movs r2, #0x14
	movs r3, #2
	bl func_0804E9F4
	adds r4, r7, #0
	adds r4, #3
	str r4, [sp, #0x20c]
_08074ED4:
	ldr r3, _08074F34 @ =0x080FC008
	movs r1, #0x18
	movs r2, #2
	add r0, sp, #0x1e8
	strh r1, [r0]
	ldr r5, [sp, #0x26c]
	strh r2, [r5, #2]
	ldr r0, [r0]
	str r3, [sp]
	ldr r1, [sp, #0x2a4]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r6, sb
	ldr r0, [r6]
	bl func_08008910
	movs r3, #0xc0
	lsls r3, r3, #3
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x2a4]
	ldr r2, _08074F38 @ =0x06005E80
	bl func_08008F0C
	add r7, sp, #8
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08074F3C
	cmp r1, #0
	beq _08074F24
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074F24:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0807500A
	.align 2, 0
_08074F2C: .4byte 0x0000058C
_08074F30: .4byte 0x00001BD8
_08074F34: .4byte 0x080FC008
_08074F38: .4byte 0x06005E80
_08074F3C:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x1f0
	str r0, [r1]
	ldr r0, [r6]
	ldr r5, [sp, #0x2e8]
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x1ec
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1ec
	cmp r4, r0
	bhs _08074F5C
	adds r1, r2, #0
_08074F5C:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _08074F7A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08074F7E
	mov r0, r8
	bl func_080D3BC0
	b _08074F7E
_08074F7A:
	movs r0, #0
	mov r8, r0
_08074F7E:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	beq _08074FA6
_08074F8C:
	cmp r3, #0
	beq _08074F9C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074F9C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x2e8]
	cmp r2, r0
	bne _08074F8C
_08074FA6:
	adds r5, r3, #0
	add r0, sp, #0x1f0
	ldr r0, [r0]
	cmp r0, #1
	bne _08074FC4
	cmp r5, #0
	beq _08074FC0
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08074FC0:
	adds r5, #0x10
	b _08074FE6
_08074FC4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08074FE4
_08074FCC:
	cmp r2, #0
	beq _08074FDC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08074FDC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08074FCC
_08074FE4:
	adds r5, r2, #0
_08074FE6:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08074FF6
_08074FF0:
	adds r1, #0x10
	cmp r1, r2
	bne _08074FF0
_08074FF6:
	cmp r0, #0
	beq _08074FFE
	bl free
_08074FFE:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0807500A:
	ldr r2, _08075060 @ =0x080FBE8C
	movs r0, #2
	add r1, sp, #0x1f4
	strh r0, [r1]
	ldr r3, [sp, #0x270]
	strh r0, [r3, #2]
	ldr r0, [r1]
	str r2, [sp]
	ldr r1, [sp, #0x278]
	movs r2, #0
	movs r3, #0
	bl func_0804E8F0
	mov r4, sb
	ldr r0, [r4]
	bl func_08008910
	adds r6, r0, #0
	add r0, sp, #8
	ldr r1, [sp, #0x278]
	ldr r2, _08075064 @ =0x06001780
	movs r3, #0x80
	bl func_08008F0C
	add r5, sp, #8
	mov sl, r5
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08075068
	cmp r1, #0
	beq _08075056
	adds r0, r1, #0
	add r1, sp, #8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08075056:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08075136
	.align 2, 0
_08075060: .4byte 0x080FBE8C
_08075064: .4byte 0x06001780
_08075068:
	str r1, [sp, #0x2e8]
	movs r0, #1
	add r1, sp, #0x1fc
	str r0, [r1]
	ldr r0, [r6]
	ldr r4, [sp, #0x2e8]
	subs r0, r4, r0
	asrs r4, r0, #4
	add r0, sp, #0x1f8
	str r4, [r0]
	adds r2, r1, #0
	ldr r0, [r1]
	add r1, sp, #0x1f8
	cmp r4, r0
	bhs _08075088
	adds r1, r2, #0
_08075088:
	ldr r0, [r1]
	adds r0, r4, r0
	cmp r0, #0
	beq _080750A6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080750AA
	mov r0, r8
	bl func_080D3BC0
	b _080750AA
_080750A6:
	movs r0, #0
	mov r8, r0
_080750AA:
	adds r5, r0, #0
	str r5, [sp, #0x2ec]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x2e8]
	cmp r2, r5
	beq _080750D2
_080750B8:
	cmp r3, #0
	beq _080750C8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080750C8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x2e8]
	cmp r2, r7
	bne _080750B8
_080750D2:
	adds r5, r3, #0
	add r0, sp, #0x1fc
	ldr r0, [r0]
	cmp r0, #1
	bne _080750F0
	cmp r5, #0
	beq _080750EC
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080750EC:
	adds r5, #0x10
	b _08075112
_080750F0:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08075110
_080750F8:
	cmp r2, #0
	beq _08075108
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08075108:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080750F8
_08075110:
	adds r5, r2, #0
_08075112:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08075122
_0807511C:
	adds r1, #0x10
	cmp r1, r2
	bne _0807511C
_08075122:
	cmp r0, #0
	beq _0807512A
	bl free
_0807512A:
	ldr r0, [sp, #0x2ec]
	add r0, r8
	ldr r7, [sp, #0x2ec]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08075136:
	ldr r7, _08075210 @ =0x0000058C
	add r7, sb
	ldr r0, [r7]
	ldr r1, _08075214 @ =0x00001BD8
	adds r0, r0, r1
	bl func_0800E988
	cmp r0, #0
	beq _080751E4
	ldr r2, [sp, #0x208]
	ldr r0, [r2, #0x18]
	ldr r3, [sp, #0x20c]
	lsls r1, r3, #6
	adds r0, r0, r1
	adds r0, #8
	movs r1, #0xbd
	lsls r1, r1, #2
	movs r6, #0
	str r6, [sp]
	movs r5, #0x20
	str r5, [sp, #4]
	movs r2, #0x18
	movs r3, #2
	bl func_0804E9F4
	ldr r4, [sp, #0x18]
	add r0, sp, #0x200
	ldr r3, [r4, #0xc]
	add r1, sp, #0x18
	ldr r2, _08075218 @ =0x0000086B
	bl _call_via_r3
	add r0, sp, #0x200
	ldr r0, [r0]
	ldrh r2, [r0]
	add r0, sp, #0x78
	ldr r3, [r4, #0x10]
	add r1, sp, #0x18
	bl _call_via_r3
	add r1, sp, #0x78
	adds r0, r1, #0
	movs r2, #0x20
	bl memcpy
	ldr r4, [sp, #0x20c]
	lsls r2, r4, #3
	ldr r3, [sp, #0x80]
	add r0, sp, #0x88
	ldr r0, [r0]
	str r0, [sp]
	mov r0, sb
	movs r1, #0x10
	bl func_08075334
	adds r4, #2
	str r4, [sp, #0x20c]
	ldr r0, [r7]
	ldr r7, _08075214 @ =0x00001BD8
	adds r0, r0, r7
	bl func_0800E988
	ldr r2, [sp, #0x208]
	ldr r1, [r2, #0x18]
	lsls r4, r4, #6
	adds r1, r1, r4
	adds r1, #0x32
	movs r2, #0x90
	lsls r2, r2, #1
	str r5, [sp]
	movs r3, #0
	bl func_0804EDB4
	ldr r3, [sp, #0x208]
	ldr r0, [r3, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	str r6, [sp]
	str r5, [sp, #4]
	movs r1, #0xbc
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r4, [sp, #0x20c]
	adds r4, #3
	str r4, [sp, #0x20c]
_080751E4:
	mov r5, sb
	ldr r0, [r5, #4]
	ldr r6, [sp, #0x20c]
	lsls r1, r6, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r0, _0807521C @ =vtable_unk_080E5A28
	str r0, [sp, #0x48]
	str r0, [sp, #0x18]
	mov r0, sb
	movs r3, #0xbc
	lsls r3, r3, #2
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08075210: .4byte 0x0000058C
_08075214: .4byte 0x00001BD8
_08075218: .4byte 0x0000086B
_0807521C: .4byte vtable_unk_080E5A28

	thumb_func_start func_08075220
func_08075220: @ 0x08075220
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sb, r1
	mov sl, r2
	movs r6, #0x1a
	ldr r0, [r0, #4]
	mov r8, r0
	cmp r1, #0
	beq _08075316
	mov r0, sb
	movs r1, #0x1e
	bl __umodsi3
	adds r7, r0, #0
	cmp r7, #0
	beq _0807527E
	mov r1, r8
	ldr r0, [r1, #0x18]
	mov r1, sl
	lsls r5, r1, #6
	adds r0, r0, r5
	adds r0, #0x34
	movs r1, #0
	str r1, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x88
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	mov r0, r8
	ldr r1, [r0, #0x18]
	adds r1, r1, r5
	adds r1, #0x32
	movs r2, #0x90
	lsls r2, r2, #1
	str r4, [sp]
	adds r0, r7, #0
	movs r3, #0
	bl func_0804EDB4
	movs r6, #0x16
_0807527E:
	mov r0, sb
	movs r1, #0x1e
	bl func_080D0EDA
	adds r7, r0, #0
	movs r0, #3
	ands r7, r0
	cmp r7, #0
	beq _080752CE
	subs r6, #4
	mov r1, r8
	ldr r0, [r1, #0x18]
	mov r1, sl
	lsls r5, r1, #6
	adds r0, r0, r5
	lsls r1, r6, #1
	adds r0, r0, r1
	movs r1, #0
	str r1, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x84
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	mov r0, r8
	ldr r1, [r0, #0x18]
	adds r1, r1, r5
	subs r0, r6, #1
	lsls r0, r0, #1
	adds r1, r1, r0
	movs r2, #0x90
	lsls r2, r2, #1
	str r4, [sp]
	adds r0, r7, #0
	movs r3, #0
	bl func_0804EDB4
	subs r6, #6
_080752CE:
	mov r0, sb
	movs r1, #0x78
	bl func_080D0EDA
	cmp r0, #0
	beq _08075316
	subs r6, #6
	mov r1, r8
	ldr r0, [r1, #0x18]
	mov r1, sl
	lsls r5, r1, #6
	adds r0, r0, r5
	lsls r1, r6, #1
	adds r0, r0, r1
	movs r1, #0
	str r1, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x78
	movs r2, #6
	movs r3, #2
	bl func_0804E9F4
	mov r0, r8
	ldr r1, [r0, #0x18]
	adds r1, r1, r5
	subs r0, r6, #1
	lsls r0, r0, #1
	adds r1, r1, r0
	movs r2, #0x90
	lsls r2, r2, #1
	str r4, [sp]
	adds r0, r7, #0
	movs r3, #0
	bl func_0804EDB4
_08075316:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08075328
func_08075328: @ 0x08075328
	push {lr}
	bl func_08070CA4
	movs r0, #1
	pop {r1}
	bx r1

	thumb_func_start func_08075334
func_08075334: @ 0x08075334
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	ldr r4, [sp, #0x3c]
	str r1, [sp, #4]
	mov r1, sp
	strh r2, [r1]
	str r3, [sp, #8]
	str r4, [sp, #0xc]
	ldr r1, _08075374 @ =0x00000594
	adds r5, r0, r1
	mov sb, sp
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08075378
	cmp r1, #0
	beq _0807536A
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807536A:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0807543E
	.align 2, 0
_08075374: .4byte 0x00000594
_08075378:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x14]
	ldr r1, [r5]
	mov r6, sl
	subs r0, r6, r1
	asrs r4, r0, #4
	str r4, [sp, #0x10]
	add r2, sp, #0x14
	add r0, sp, #0x10
	cmp r4, #1
	bhs _08075392
	adds r0, r2, #0
_08075392:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080753B2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080753AE
	mov r0, r8
	bl func_080D3BC0
_080753AE:
	ldr r1, [r5]
	b _080753B6
_080753B2:
	movs r0, #0
	mov r8, r0
_080753B6:
	adds r4, r0, #0
	str r4, [sp, #0x18]
	adds r2, r1, #0
	adds r3, r4, #0
	cmp r2, sl
	beq _080753DA
_080753C2:
	cmp r3, #0
	beq _080753D2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080753D2:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _080753C2
_080753DA:
	adds r4, r3, #0
	ldr r0, [sp, #0x14]
	cmp r0, #1
	bne _080753F6
	cmp r4, #0
	beq _080753F2
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080753F2:
	adds r4, #0x10
	b _08075418
_080753F6:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _08075416
_080753FE:
	cmp r2, #0
	beq _0807540E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807540E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080753FE
_08075416:
	adds r4, r2, #0
_08075418:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _08075428
_08075422:
	adds r0, #0x10
	cmp r0, r2
	bne _08075422
_08075428:
	cmp r1, #0
	beq _08075432
	adds r0, r1, #0
	bl free
_08075432:
	ldr r0, [sp, #0x18]
	add r0, r8
	ldr r1, [sp, #0x18]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0807543E:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08075450
func_08075450: @ 0x08075450
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r0
	adds r7, r1, #0
	movs r5, #0
	movs r6, #0
	movs r4, #0
_08075460:
	ldr r0, _08075494 @ =0x0000058C
	add r0, r8
	ldr r0, [r0]
	ldr r1, _08075498 @ =0x00001CD4
	adds r0, r0, r1
	adds r1, r4, #0
	bl func_080A031C
	cmp r0, #0
	beq _08075482
	adds r1, r7, #0
	bl GetMinigameExp__C13HarvestSpriteQ213HarvestSprite4Task
	cmp r5, r0
	bhs _08075482
	adds r6, r4, #0
	adds r5, r0, #0
_08075482:
	adds r4, #1
	cmp r4, #6
	ble _08075460
	adds r0, r6, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08075494: .4byte 0x0000058C
_08075498: .4byte 0x00001CD4

	thumb_func_start func_0807549C
func_0807549C: @ 0x0807549C
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r4, r0, #0
	movs r0, #0
	str r0, [sp]
	cmp r1, #1
	beq _080754D4
	cmp r1, #1
	bgt _080754B4
	cmp r1, #0
	beq _080754BA
	b _08075524
_080754B4:
	cmp r1, #2
	beq _080754F0
	b _08075524
_080754BA:
	ldr r0, _080754D0 @ =0x000042FC
	bl __builtin_new
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r4, r2
	ldr r2, [r1]
	adds r1, r4, #0
	bl func_08070DE4
	b _08075504
	.align 2, 0
_080754D0: .4byte 0x000042FC
_080754D4:
	ldr r0, _080754EC @ =0x00004B94
	bl __builtin_new
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r4, r2
	ldr r2, [r1]
	adds r1, r4, #0
	bl func_080713B8
	b _08075504
	.align 2, 0
_080754EC: .4byte 0x00004B94
_080754F0:
	ldr r0, _08075554 @ =0x00008E6C
	bl __builtin_new
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r4, r2
	ldr r2, [r1]
	adds r1, r4, #0
	bl func_080722DC
_08075504:
	mov r6, sp
	adds r5, r0, #0
	ldr r1, [sp]
	cmp r5, r1
	beq _08075522
	cmp r1, #0
	beq _08075522
	ldr r2, _08075558 @ =0x000005B4
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08075522:
	str r5, [r6]
_08075524:
	ldr r0, [sp]
	movs r1, #0
	str r1, [sp]
	str r0, [sp, #4]
	add r1, sp, #4
	adds r0, r4, #0
	bl func_08076B94
	ldr r1, [sp]
	cmp r1, #0
	beq _0807554A
	ldr r2, _08075558 @ =0x000005B4
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0807554A:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08075554: .4byte 0x00008E6C
_08075558: .4byte 0x000005B4

	thumb_func_start func_0807555C
func_0807555C: @ 0x0807555C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	adds r7, r1, #0
	movs r0, #0x92
	lsls r0, r0, #1
	adds r0, r0, r6
	mov r8, r0
	movs r1, #0xbc
	lsls r1, r1, #1
	adds r5, r6, r1
	ldr r4, [r5]
	lsls r4, r4, #3
	adds r4, #4
	add r4, r8
	adds r0, r6, #0
	bl func_08076BEC
	strh r0, [r4, #4]
	adds r0, r6, #0
	bl func_08076B64
	cmp r7, #0
	beq _08075594
	cmp r7, #1
	beq _080755A6
	b _080755B4
_08075594:
	ldr r0, [r5]
	adds r0, #1
	str r0, [r5]
	mov r2, r8
	ldr r1, [r2]
	cmp r0, r1
	bne _080755B4
	str r7, [r5]
	b _080755B4
_080755A6:
	ldr r0, [r5]
	cmp r0, #0
	bne _080755B0
	mov r1, r8
	ldr r0, [r1]
_080755B0:
	subs r0, #1
	str r0, [r5]
_080755B4:
	movs r2, #0x92
	lsls r2, r2, #1
	adds r4, r6, r2
	movs r0, #0xbc
	lsls r0, r0, #1
	adds r5, r6, r0
	ldr r0, [r5]
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r4, r0
	ldr r1, [r0]
	adds r0, r6, #0
	bl func_0807549C
	ldr r0, [r5]
	lsls r0, r0, #3
	adds r0, #4
	adds r4, r4, r0
	movs r2, #4
	ldrsh r1, [r4, r2]
	adds r0, r6, #0
	bl func_08076BE0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_080755EC
func_080755EC: @ 0x080755EC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _08075618 @ =vtable_unk_080E7B4C
	str r0, [r4]
	movs r0, #0xbe
	lsls r0, r0, #1
	bl __builtin_new
	adds r1, r5, #0
	bl func_08070B70
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08075618: .4byte vtable_unk_080E7B4C

	thumb_func_start func_0807561C
func_0807561C: @ 0x0807561C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08075658 @ =vtable_unk_080E7B4C
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08075638
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08075638:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0807564A
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0807564A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08075658: .4byte vtable_unk_080E7B4C

	thumb_func_start func_0807565C
func_0807565C: @ 0x0807565C
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_080769A0
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
_08075678:
	.byte 0x10, 0xB5, 0x81, 0xB0, 0x9C, 0x68, 0x1B, 0x69
	.byte 0x00, 0x93, 0x23, 0x1C, 0xFF, 0xF7, 0x56, 0xFE, 0x01, 0xB0, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47
	.byte 0x10, 0xB5, 0x81, 0xB0, 0xDC, 0x00, 0x05, 0x4B, 0xE4, 0x18, 0x23, 0x68, 0x64, 0x68, 0x00, 0x94
	.byte 0xFF, 0xF7, 0x48, 0xFE, 0x01, 0xB0, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x24, 0xC0, 0x0F, 0x08

	thumb_func_start func_080756B0
func_080756B0: @ 0x080756B0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080756CC @ =vtable_unk_080E7B5C
	str r0, [r4, #4]
	movs r0, #0x28
	bl __builtin_new
	bl func_080E2DC8
	str r0, [r4]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080756CC: .4byte vtable_unk_080E7B5C

	thumb_func_start func_080756D0
func_080756D0: @ 0x080756D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov r8, r0
	mov sl, r1
	ldr r0, _080756F8 @ =vtable_unk_080E7B5C
	mov r1, r8
	str r0, [r1, #4]
	ldr r0, [r1]
	cmp r0, #0
	beq _080757C8
	adds r5, r0, #0
	ldr r0, [r5, #8]
	ldr r1, [r0, #8]
	str r1, [sp]
	str r0, [sp, #4]
	b _08075710
	.align 2, 0
_080756F8: .4byte vtable_unk_080E7B5C
_080756FC:
	ldr r0, [sp]
	ldr r1, [r0, #0x14]
	adds r0, r5, #0
	bl func_08007C28
	ldr r0, [sp]
	bl func_080E2B28
	str r0, [sp]
	ldr r1, [sp, #4]
_08075710:
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080756FC
	adds r0, r5, #0
	adds r0, #0x18
	ldr r1, [r0, #4]
	ldr r2, [r1, #8]
	str r2, [sp, #8]
	str r1, [sp, #0xc]
	eors r2, r1
	rsbs r1, r2, #0
	orrs r1, r2
	adds r2, r5, #4
	mov sb, r2
	adds r7, r0, #0
	adds r6, r5, #0
	adds r6, #0x14
	cmp r1, #0
	bge _08075758
_0807573A:
	ldr r0, [sp, #8]
	ldr r1, [r0, #0x14]
	adds r0, r6, #0
	bl func_080073E0
	ldr r0, [sp, #8]
	bl func_080E2B28
	str r0, [sp, #8]
	ldr r2, [sp, #0xc]
	eors r2, r0
	rsbs r1, r2, #0
	orrs r1, r2
	cmp r1, #0
	blt _0807573A
_08075758:
	adds r4, r7, #0
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _0807577A
	ldr r0, [r4, #4]
	ldr r1, [r0, #4]
	adds r0, r4, #0
	bl func_080E2B88
	ldr r0, [r4, #4]
	str r0, [r0, #8]
	ldr r0, [r4, #4]
	movs r1, #0
	str r1, [r0, #4]
	ldr r0, [r4, #4]
	str r0, [r0, #0xc]
	str r1, [r4, #8]
_0807577A:
	ldr r0, [r7, #4]
	cmp r0, #0
	beq _08075784
	bl free
_08075784:
	adds r0, r6, #0
	movs r1, #2
	bl func_08007184
	mov r4, sb
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _080757AE
	ldr r0, [r4, #4]
	ldr r1, [r0, #4]
	adds r0, r4, #0
	bl func_080E2B5C
	ldr r0, [r4, #4]
	str r0, [r0, #8]
	ldr r0, [r4, #4]
	movs r1, #0
	str r1, [r0, #4]
	ldr r0, [r4, #4]
	str r0, [r0, #0xc]
	str r1, [r4, #8]
_080757AE:
	mov r1, sb
	ldr r0, [r1, #4]
	cmp r0, #0
	beq _080757BA
	bl free
_080757BA:
	adds r0, r5, #0
	movs r1, #2
	bl func_080079E8
	adds r0, r5, #0
	bl __builtin_delete
_080757C8:
	movs r0, #1
	mov r2, sl
	ands r0, r2
	cmp r0, #0
	beq _080757D8
	mov r0, r8
	bl __builtin_delete
_080757D8:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_080757E8
func_080757E8: @ 0x080757E8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	ldr r0, [r0]
	mov sb, r0
	ldr r0, [r1, #8]
	str r0, [sp, #0x24]
	ldr r2, [r1, #0x10]
	str r2, [sp, #0x28]
	ldr r7, [r1]
	movs r0, #0
	cmp r7, #0
	beq _0807580A
	ldrh r0, [r1, #4]
_0807580A:
	lsls r0, r0, #3
	adds r0, r7, r0
	str r0, [sp, #0x2c]
	cmp r7, r0
	bne _08075816
	b _080759FE
_08075816:
	ldr r1, _08075874 @ =0x53216420
	ldrb r0, [r7, #1]
	lsrs r0, r0, #6
	cmp r0, #0
	beq _08075822
	ldr r1, _08075878 @ =0x00005321
_08075822:
	ldrb r0, [r7, #3]
	lsrs r0, r0, #6
	lsls r0, r0, #2
	adds r6, r1, #0
	lsrs r6, r0
	movs r0, #0xf
	ands r6, r0
	ldrh r0, [r7, #4]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x11
	ldr r2, [sp, #0x24]
	adds r1, r2, r0
	str r1, [sp, #0x1c]
	mov r5, sp
	mov r0, sb
	adds r0, #4
	ldr r3, [r0, #4]
	ldr r2, [r3, #4]
	mov r8, r0
	movs r0, #0x18
	add r0, sb
	mov sl, r0
	mov r0, sp
	adds r0, #0x20
	str r0, [sp, #0x30]
	adds r0, r7, #0
	adds r0, #8
	str r0, [sp, #0x34]
	cmp r2, #0
	beq _08075882
	adds r4, r1, #0
_08075860:
	movs r1, #0
	ldr r0, [r2, #0x10]
	cmp r0, r4
	bhs _0807586A
	movs r1, #1
_0807586A:
	cmp r1, #0
	bne _0807587C
	adds r3, r2, #0
	ldr r2, [r3, #8]
	b _0807587E
	.align 2, 0
_08075874: .4byte 0x53216420
_08075878: .4byte 0x00005321
_0807587C:
	ldr r2, [r2, #0xc]
_0807587E:
	cmp r2, #0
	bne _08075860
_08075882:
	str r3, [r5]
	movs r3, #0
	mov r1, r8
	ldr r0, [r1, #4]
	str r0, [sp, #4]
	movs r2, #0
	ldr r1, [sp]
	cmp r1, r0
	bne _08075896
	movs r2, #1
_08075896:
	cmp r2, #0
	bne _080758A2
	ldr r1, [r1, #0x10]
	ldr r0, [sp, #0x1c]
	cmp r1, r0
	beq _080758A4
_080758A2:
	movs r3, #1
_080758A4:
	cmp r3, #0
	beq _080758E8
	mov r0, sb
	adds r1, r6, #0
	bl func_08007B54
	adds r5, r0, #0
	cmp r5, #0
	beq _08075956
	ldr r1, [sp]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x1c]
	str r0, [sp, #0x10]
	str r5, [sp, #0x14]
	str r1, [sp, #0x18]
	add r0, sp, #8
	mov r1, r8
	add r2, sp, #0x18
	add r3, sp, #0x10
	bl func_080E2444
	ldr r4, [sp, #0x1c]
	mov r0, sb
	adds r1, r5, #0
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r2, _080758E4 @ =0x06010000
	adds r1, r1, r2
	b _0807591E
	.align 2, 0
_080758E4: .4byte 0x06010000
_080758E8:
	ldr r0, [sp]
	ldr r1, [r0, #0x14]
	mov r0, sb
	bl func_08007DB8
	cmp r0, r6
	bhs _08075956
	ldr r0, [sp]
	ldr r1, [r0, #0x14]
	mov r0, sb
	bl func_08007C28
	mov r0, sb
	adds r1, r6, #0
	bl func_08007B54
	adds r1, r0, #0
	cmp r1, #0
	beq _08075930
	ldr r4, [sp, #0x1c]
	mov r0, sb
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r0, _0807592C @ =0x06010000
	adds r1, r1, r0
_0807591E:
	movs r2, #0x20
	lsls r2, r6
	adds r0, r4, #0
	bl func_08008E64
	b _08075956
	.align 2, 0
_0807592C: .4byte 0x06010000
_08075930:
	ldr r0, [sp]
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	mov r1, r8
	ldr r3, [r1, #4]
	adds r1, r3, #4
	adds r2, r3, #0
	adds r2, #8
	adds r3, #0xc
	bl func_080E25FC
	cmp r0, #0
	beq _0807594E
	bl free
_0807594E:
	mov r2, r8
	ldr r0, [r2, #8]
	subs r0, #1
	str r0, [r2, #8]
_08075956:
	ldrb r0, [r7, #5]
	lsrs r0, r0, #4
	lsls r0, r0, #5
	ldr r1, [sp, #0x28]
	adds r0, r1, r0
	str r0, [sp, #0x20]
	mov r5, sp
	mov r2, sl
	ldr r3, [r2, #4]
	ldr r1, [r3, #4]
	cmp r1, #0
	beq _0807598C
	ldr r0, [sp, #0x30]
	ldr r4, [r0]
_08075972:
	movs r2, #0
	ldr r0, [r1, #0x10]
	cmp r0, r4
	bhs _0807597C
	movs r2, #1
_0807597C:
	cmp r2, #0
	bne _08075986
	adds r3, r1, #0
	ldr r1, [r3, #8]
	b _08075988
_08075986:
	ldr r1, [r1, #0xc]
_08075988:
	cmp r1, #0
	bne _08075972
_0807598C:
	str r3, [r5]
	movs r3, #0
	mov r1, sl
	ldr r0, [r1, #4]
	str r0, [sp, #4]
	movs r2, #0
	ldr r1, [sp]
	cmp r1, r0
	bne _080759A0
	movs r2, #1
_080759A0:
	cmp r2, #0
	bne _080759AC
	ldr r1, [r1, #0x10]
	ldr r0, [sp, #0x20]
	cmp r1, r0
	beq _080759AE
_080759AC:
	movs r3, #1
_080759AE:
	cmp r3, #0
	beq _080759F4
	mov r6, sb
	adds r6, #0x14
	adds r0, r6, #0
	bl func_0800736C
	adds r5, r0, #0
	cmp r5, #0
	beq _080759F4
	ldr r1, [sp]
	str r1, [sp, #0xc]
	ldr r0, [sp, #0x20]
	str r0, [sp, #0x10]
	str r5, [sp, #0x14]
	str r1, [sp, #0x18]
	add r0, sp, #8
	mov r1, sl
	add r2, sp, #0x18
	add r3, sp, #0x10
	bl func_080E2970
	ldr r4, [sp, #0x20]
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080074C0
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r2, _08075A10 @ =0x05000200
	adds r1, r1, r2
	adds r0, r4, #0
	movs r2, #0x20
	bl func_08008E64
_080759F4:
	ldr r7, [sp, #0x34]
	ldr r0, [sp, #0x2c]
	cmp r7, r0
	beq _080759FE
	b _08075816
_080759FE:
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08075A10: .4byte 0x05000200
_08075A14:
	.byte 0xF0, 0xB5, 0x81, 0xB0, 0x05, 0x68, 0x00, 0x91, 0x2E, 0x1D, 0x6F, 0x46
	.byte 0x74, 0x68, 0x62, 0x68, 0x00, 0x2A, 0x0B, 0xD0, 0x00, 0x23, 0x10, 0x69, 0x88, 0x42, 0x00, 0xD2
	.byte 0x01, 0x23, 0x00, 0x2B, 0x02, 0xD1, 0x14, 0x1C, 0xA2, 0x68, 0xF3, 0xE7, 0xD2, 0x68, 0xF1, 0xE7
	.byte 0x73, 0x68, 0x9C, 0x42, 0x07, 0xD0, 0x00, 0x22, 0x39, 0x68, 0x20, 0x69, 0x81, 0x42, 0x00, 0xD2
	.byte 0x01, 0x22, 0x00, 0x2A, 0x00, 0xD0, 0x1C, 0x1C, 0xA9, 0x68, 0x61, 0x40, 0x48, 0x42, 0x08, 0x43
	.byte 0x00, 0x28, 0x04, 0xDA, 0x61, 0x69, 0x28, 0x1C, 0x92, 0xF7, 0x70, 0xF9, 0x01, 0xE0, 0x01, 0x20
	.byte 0x40, 0x42, 0x01, 0xB0, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00, 0xF0, 0xB5, 0x81, 0xB0
	.byte 0x05, 0x68, 0x00, 0x91, 0x2E, 0x1C, 0x18, 0x36, 0x6F, 0x46, 0x74, 0x68, 0x62, 0x68, 0x00, 0x2A
	.byte 0x0B, 0xD0, 0x00, 0x23, 0x10, 0x69, 0x88, 0x42, 0x00, 0xD2, 0x01, 0x23, 0x00, 0x2B, 0x02, 0xD1
	.byte 0x14, 0x1C, 0xA2, 0x68, 0xF3, 0xE7, 0xD2, 0x68, 0xF1, 0xE7, 0x73, 0x68, 0x9C, 0x42, 0x07, 0xD0
	.byte 0x00, 0x22, 0x39, 0x68, 0x20, 0x69, 0x81, 0x42, 0x00, 0xD2, 0x01, 0x22, 0x00, 0x2A, 0x00, 0xD0
	.byte 0x1C, 0x1C, 0xE9, 0x69, 0x61, 0x40, 0x48, 0x42, 0x08, 0x43, 0x00, 0x28, 0x05, 0xDA, 0x28, 0x1C
	.byte 0x14, 0x30, 0x61, 0x69, 0x91, 0xF7, 0xF4, 0xFC, 0x01, 0xE0, 0x01, 0x20, 0x40, 0x42, 0x01, 0xB0
	.byte 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00

	thumb_func_start func_08075AE8
func_08075AE8: @ 0x08075AE8
	push {r4, lr}
	sub sp, #4
	ldr r4, [sp, #0xc]
	ldr r0, [r0]
	str r4, [sp]
	bl func_080E2BB4
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08075B00
func_08075B00: @ 0x08075B00
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x44
	adds r6, r0, #0
	adds r5, r1, #0
	str r2, [r6]
	str r3, [r6, #0x14]
	adds r7, r6, #0
	adds r7, #0x18
	movs r0, #0
	str r0, [r6, #0x18]
	str r0, [r7, #4]
	adds r1, r6, #0
	adds r1, #0x20
	str r0, [r1, #4]
	cmp r5, #0
	beq _08075B3E
	lsls r4, r5, #6
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08075B42
	mov r0, r8
	bl func_080D3BC0
	b _08075B42
_08075B3E:
	movs r0, #0
	mov r8, r0
_08075B42:
	str r0, [r7]
	str r0, [r7, #4]
	add r0, r8
	str r0, [r7, #0xc]
	add r0, sp, #4
	movs r1, #0
	movs r2, #0x40
	bl memset
	ldr r4, [r7]
	movs r0, #0x28
	adds r0, r0, r6
	mov sb, r0
	lsls r1, r5, #3
	mov sl, r1
	cmp r5, #0
	beq _08075B7A
_08075B64:
	cmp r4, #0
	beq _08075B72
	adds r0, r4, #0
	add r1, sp, #4
	movs r2, #0x40
	bl memcpy
_08075B72:
	subs r5, #1
	adds r4, #0x40
	cmp r5, #0
	bne _08075B64
_08075B7A:
	str r4, [r7, #4]
	movs r4, #0
	str r4, [r6, #0x28]
	mov r0, sb
	str r4, [r0, #4]
	ldr r0, _08075BC0 @ =vtable_unk_080E7B68
	mov r1, sb
	str r0, [r1, #8]
	ldr r0, [r6, #0x18]
	movs r1, #0xff
	mov r2, r8
	bl memset
	mov r0, sl
	strh r0, [r6, #4]
	ldr r0, _08075BC4 @ =0x0000FFFF
	strh r0, [r6, #6]
	strh r4, [r6, #8]
	movs r0, #1
	rsbs r0, r0, #0
	strh r0, [r6, #0xa]
	strh r4, [r6, #0xc]
	movs r0, #0xa0
	strh r0, [r6, #0xe]
	ldr r0, [sp, #0x64]
	str r0, [r6, #0x10]
	adds r0, r6, #0
	add sp, #0x44
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08075BC0: .4byte vtable_unk_080E7B68
_08075BC4: .4byte 0x0000FFFF

	thumb_func_start func_08075BC8
func_08075BC8: @ 0x08075BC8
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	adds r6, r7, #0
	adds r6, #0x28
	ldr r1, [r7, #0x28]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08075C80
	cmp r5, #0
	bne _08075BE4
	cmp r2, #0
	beq _08075C80
_08075BE4:
	subs r0, r2, r5
	cmp r0, #0x20
	ble _08075BEE
	adds r5, r2, #0
	adds r5, #0x20
_08075BEE:
	movs r0, #0x1f
	mov ip, r0
	mov r1, ip
	ands r1, r2
	mov ip, r1
	subs r4, r2, r5
	cmp ip, r4
	bhs _08075C3A
	cmp r1, #0
	beq _08075C3A
	subs r2, r4, r1
	ldr r4, [r7, #0x18]
	lsls r3, r5, #6
	adds r3, r4, r3
	movs r1, #0x20
	subs r1, r1, r2
	adds r0, r5, r2
	lsls r0, r0, #6
	adds r4, r4, r0
	lsls r1, r1, #6
	ldr r0, [r7, #0x10]
	adds r1, r1, r0
	lsls r2, r2, #6
	mov r5, ip
	lsls r5, r5, #6
	str r3, [r6, #0xc]
	str r1, [r6, #0x10]
	str r2, [r6, #0x14]
	str r4, [r6, #0x18]
	str r0, [r6, #0x1c]
	str r5, [r6, #0x20]
	ldr r0, [r7]
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r6, #0
	bl _call_via_r2
	b _08075C68
_08075C3A:
	ldr r3, [r7, #0x18]
	lsls r0, r5, #6
	adds r3, r3, r0
	movs r0, #0x1f
	ands r0, r5
	adds r1, r7, #0
	adds r1, #0x28
	lsls r0, r0, #6
	ldr r2, [r7, #0x10]
	adds r0, r0, r2
	lsls r4, r4, #6
	movs r2, #0
	str r3, [r1, #0xc]
	str r0, [r1, #0x10]
	str r4, [r1, #0x14]
	str r2, [r1, #0x18]
	str r2, [r1, #0x1c]
	str r2, [r1, #0x20]
	ldr r0, [r7]
	ldr r2, [r0, #8]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_08075C68:
	movs r1, #0xc
	ldrsh r0, [r7, r1]
	adds r1, r0, #0
	cmp r0, #0
	bge _08075C74
	adds r1, r0, #7
_08075C74:
	asrs r1, r1, #3
	lsls r1, r1, #3
	subs r1, r0, r1
	ldrh r0, [r7, #0xc]
	subs r0, r0, r1
	strh r0, [r7, #0xa]
_08075C80:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08075C88
func_08075C88: @ 0x08075C88
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	asrs r2, r1, #0x10
	adds r1, r2, #0
	adds r1, #0xa0
	movs r5, #0xe
	ldrsh r0, [r4, r5]
	cmp r1, r0
	ble _08075CA6
	movs r0, #0x60
	strh r0, [r4, #8]
	b _08075DB0
_08075CA6:
	adds r0, r2, #0
	cmp r2, #0
	bge _08075CAE
	adds r0, #0xff
_08075CAE:
	asrs r0, r0, #8
	lsls r0, r0, #8
	subs r0, r2, r0
	strh r0, [r4, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #6
	ldrsh r1, [r4, r2]
	cmp r0, r1
	beq _08075CDA
	ldrh r1, [r4, #8]
	ldr r2, [r4, #0x14]
	cmp r2, #0
	beq _08075CD2
	mov r0, sp
	strh r1, [r0]
	strh r1, [r2, #0x16]
	b _08075CD6
_08075CD2:
	ldr r0, _08075CFC @ =0x04000016
	strh r1, [r0]
_08075CD6:
	ldrh r0, [r4, #8]
	strh r0, [r4, #6]
_08075CDA:
	lsls r0, r3, #0x10
	asrs r2, r0, #0x10
	adds r3, r2, #0
	subs r3, #0x30
	cmp r3, #0
	ble _08075CF4
	ldrh r5, [r4, #0xe]
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r1, r0
	bgt _08075D00
_08075CF4:
	movs r0, #0
	strh r0, [r4, #0xc]
	b _08075D1A
	.align 2, 0
_08075CFC: .4byte 0x04000016
_08075D00:
	adds r1, r2, #0
	adds r1, #0xd0
	movs r2, #0xe
	ldrsh r0, [r4, r2]
	cmp r1, r0
	blt _08075D18
	ldr r3, _08075D14 @ =0xFFFFFF00
	adds r0, r5, r3
	strh r0, [r4, #0xc]
	b _08075D1A
	.align 2, 0
_08075D14: .4byte 0xFFFFFF00
_08075D18:
	strh r3, [r4, #0xc]
_08075D1A:
	movs r5, #0xc
	ldrsh r3, [r4, r5]
	movs r1, #0xa
	ldrsh r0, [r4, r1]
	cmp r3, r0
	beq _08075DB0
	movs r1, #0
	movs r2, #0
	cmp r0, #0
	bge _08075D50
	adds r0, r3, #0
	adds r1, r0, #0
	cmp r0, #0
	bge _08075D38
	adds r1, r0, #7
_08075D38:
	asrs r1, r1, #3
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r0, r3
	cmp r2, #0
	bge _08075D7C
	ldr r5, _08075D4C @ =0x00000107
	adds r2, r0, r5
	b _08075D7C
	.align 2, 0
_08075D4C: .4byte 0x00000107
_08075D50:
	cmp r3, r0
	ble _08075D84
	movs r0, #0xc
	ldrsh r5, [r4, r0]
	movs r0, #0xa
	ldrsh r3, [r4, r0]
	subs r0, r5, r3
	cmp r0, #7
	ble _08075DAA
	movs r0, #0x80
	lsls r0, r0, #1
	adds r1, r3, r0
	cmp r1, #0
	bge _08075D70
	ldr r2, _08075D80 @ =0x00000107
	adds r1, r3, r2
_08075D70:
	asrs r1, r1, #3
	adds r2, r5, r0
	cmp r2, #0
	bge _08075D7C
	ldr r3, _08075D80 @ =0x00000107
	adds r2, r5, r3
_08075D7C:
	asrs r2, r2, #3
	b _08075DAA
	.align 2, 0
_08075D80: .4byte 0x00000107
_08075D84:
	cmp r0, r3
	ble _08075DAA
	movs r0, #0xa
	ldrsh r5, [r4, r0]
	movs r0, #0xc
	ldrsh r3, [r4, r0]
	subs r0, r5, r3
	cmp r0, #7
	ble _08075DAA
	adds r1, r3, #0
	cmp r1, #0
	bge _08075D9E
	adds r1, #7
_08075D9E:
	asrs r1, r1, #3
	adds r0, r5, #0
	cmp r0, #0
	bge _08075DA8
	adds r0, #7
_08075DA8:
	asrs r2, r0, #3
_08075DAA:
	adds r0, r4, #0
	bl func_08075BC8
_08075DB0:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start func_08075DB8
func_08075DB8: @ 0x08075DB8
	push {lr}
	ldr r2, _08075DD0 @ =0x0000FFFF
	strh r2, [r0, #6]
	movs r2, #1
	rsbs r2, r2, #0
	strh r2, [r0, #0xa]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl func_08075C88
	pop {r0}
	bx r0
	.align 2, 0
_08075DD0: .4byte 0x0000FFFF

	thumb_func_start func_08075DD4
func_08075DD4: @ 0x08075DD4
	push {lr}
	ldr r1, [r0, #0x18]
	ldr r2, [r0, #0x1c]
	subs r2, r2, r1
	asrs r2, r2, #6
	lsls r2, r2, #6
	adds r0, r1, #0
	movs r1, #0xff
	bl memset
	pop {r0}
	bx r0

	thumb_func_start func_08075DEC
func_08075DEC: @ 0x08075DEC
	push {lr}
	ldr r2, _08075DFC @ =vtable_unk_080E7B68
	str r2, [r0, #8]
	bl func_080098AC
	pop {r0}
	bx r0
	.align 2, 0
_08075DFC: .4byte vtable_unk_080E7B68
_08075E00:
	.byte 0x10, 0xB5, 0x04, 0x1C, 0xE0, 0x68, 0x21, 0x69, 0x62, 0x69, 0x93, 0xF7, 0x2B, 0xF8, 0xE1, 0x69
	.byte 0x00, 0x29, 0x03, 0xD0, 0xA0, 0x69, 0x22, 0x6A, 0x93, 0xF7, 0x24, 0xF8, 0x00, 0x20, 0x10, 0xBC
	.byte 0x02, 0xBC, 0x08, 0x47

	thumb_func_start func_08075E24
func_08075E24: @ 0x08075E24
	push {r4, r5, lr}
	adds r2, r0, #0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r3, [r2, #4]
	movs r5, #4
	ldrsh r0, [r2, r5]
	cmp r1, r0
	bgt _08075E3C
	strh r4, [r2, #0xe]
	b _08075E3E
_08075E3C:
	strh r3, [r2, #0xe]
_08075E3E:
	movs r1, #0xe
	ldrsh r0, [r2, r1]
	cmp r0, #0x9f
	bgt _08075E4A
	movs r0, #0xa0
	strh r0, [r2, #0xe]
_08075E4A:
	pop {r4, r5}
	pop {r0}
	bx r0
_08075E50:
	.byte 0x70, 0xB5, 0x04, 0x9C, 0x05, 0x9D, 0x06, 0x9E, 0xC1, 0x60, 0x02, 0x61, 0x43, 0x61, 0x84, 0x61
	.byte 0xC5, 0x61, 0x06, 0x62, 0x70, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x00, 0x21, 0x01, 0x60
	.byte 0x41, 0x60, 0x01, 0x49, 0x81, 0x60, 0x70, 0x47, 0x68, 0x7B, 0x0E, 0x08

	thumb_func_start func_08075E7C
func_08075E7C: @ 0x08075E7C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xa4
	adds r7, r0, #0
	lsls r1, r1, #0x18
	mov sl, r1
	mov r0, sl
	lsrs r0, r0, #0x18
	mov sl, r0
	adds r0, r7, #0
	bl func_08008444
	ldr r0, _0807615C @ =vtable_unk_080E7B78
	str r0, [r7, #4]
	movs r4, #0
	str r4, [r7, #8]
	movs r1, #0xc
	adds r1, r1, r7
	mov r8, r1
	ldr r1, _08076160 @ =0x08527094
	mov r0, r8
	bl func_0805E6CC
	movs r6, #0xe8
	movs r0, #0x18
	movs r5, #0
	strh r6, [r7, #0x3c]
	strh r0, [r7, #0x3e]
	adds r0, r7, #0
	adds r0, #0x40
	mov r1, r8
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0x54
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	adds r0, #0x1c
	strb r5, [r0]
	adds r0, #4
	movs r1, #0x98
	strh r6, [r0]
	strh r1, [r0, #2]
	adds r0, #4
	mov r1, r8
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0x8c
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	adds r0, #0x1c
	strb r5, [r0]
	adds r0, #4
	movs r2, #8
	mov sb, r2
	strh r6, [r0]
	mov r3, sb
	strh r3, [r0, #2]
	adds r0, #4
	mov r1, r8
	movs r2, #2
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0xc4
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	adds r0, #0x1c
	strb r5, [r0]
	adds r0, #4
	strh r4, [r0]
	mov r6, sb
	strh r6, [r0, #2]
	adds r0, #4
	mov r1, r8
	movs r2, #3
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0xfc
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r0, r7, r1
	strb r5, [r0]
	movs r2, #0x8e
	lsls r2, r2, #1
	adds r0, r7, r2
	mov r3, sl
	strb r3, [r0]
	adds r0, r7, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r5, _08076164 @ =0x00001E41
	adds r1, r5, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0xc
	movs r6, #0xea
	lsls r6, r6, #5
	adds r1, r6, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _08076168 @ =0x00003F42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r5, _0807616C @ =0x00001C48
	adds r1, r5, #0
	strh r1, [r2]
	strh r1, [r0, #8]
	movs r0, #1
	rsbs r0, r0, #0
	ldr r6, _08076170 @ =0x0600E000
	movs r2, #0x80
	lsls r2, r2, #6
	adds r1, r6, #0
	bl func_08008EB8
	ldr r1, _08076174 @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0xc
	movs r3, #0xfa
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	ldr r0, _08076178 @ =0x080F9F70
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r2, _0807617C @ =0x080F9F74
	ldr r2, [r2]
	bl func_08008E64
	ldr r0, _08076180 @ =0x00030003
	ldr r1, _08076184 @ =0x0600F800
	movs r5, #0x80
	lsls r5, r5, #4
	adds r2, r5, #0
	bl func_08008EB8
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	ldr r0, _08076188 @ =0x0600E800
	movs r1, #3
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r1, #0
	movs r2, #0x1d
	movs r3, #0x1e
	bl func_08051320
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0xc
	movs r3, #0xf4
	lsls r3, r3, #1
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0x1a]
	ldr r1, _0807618C @ =0x06008000
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	movs r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r0, _08076190 @ =0x0600E008
	str r4, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	movs r1, #1
	movs r2, #0x16
	movs r3, #2
	bl func_0804E9F4
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r4, _08076194 @ =0x0000FFFC
	adds r1, r4, #0
	strh r1, [r2]
	strh r1, [r0, #0x12]
	ldr r0, _08076198 @ =0x080F9F78
	ldr r4, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	adds r0, r4, #0
	movs r2, #0x20
	bl func_08008E64
	ldr r1, _0807619C @ =0x05000200
	adds r0, r4, #0
	movs r2, #0x20
	bl func_08008E64
	movs r6, #0
	add r5, sp, #0x84
	mov sb, r5
	add r0, sp, #0x14
	mov r8, r0
	mov r1, sp
	adds r1, #0x54
	str r1, [sp, #0x90]
	mov r2, sp
	adds r2, #0x64
	str r2, [sp, #0x94]
	mov r3, sp
	adds r3, #0x74
	str r3, [sp, #0x98]
	movs r4, #2
	mov sl, r4
	ldr r5, _080761A0 @ =0x06002400
	ldr r4, _080761A4 @ =0x080FC082
_080760C6:
	ldrh r1, [r4]
	add r0, sp, #0x84
	movs r2, #1
	strh r2, [r0]
	mov r0, sl
	mov r3, sb
	strh r0, [r3, #2]
	ldr r0, [sp, #0x84]
	str r1, [sp]
	add r1, sp, #0x14
	movs r2, #0
	movs r3, #0
	bl func_0804E4AC
	mov r0, r8
	adds r1, r5, #0
	movs r2, #0x40
	bl func_08008E64
	adds r5, #0x40
	adds r4, #2
	adds r6, #1
	cmp r6, #9
	ble _080760C6
	adds r0, r7, #0
	adds r0, #0xe8
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	adds r0, #4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	ldr r0, [sp, #0x90]
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r7, #0
	bl func_08008910
	adds r2, r0, #0
	ldr r0, [sp, #0x64]
	adds r1, r0, #0
	movs r3, #0
	cmp r1, #0
	beq _08076128
	ldr r4, [sp, #0x94]
	ldrh r3, [r4, #4]
_08076128:
	str r2, [sp, #0x9c]
	add r0, sp, #0x74
	ldr r2, _0807619C @ =0x05000200
	bl func_08008F0C
	ldr r5, [sp, #0x98]
	mov sb, r5
	ldr r6, [sp, #0x9c]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080761A8
	cmp r1, #0
	beq _08076150
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08076150:
	ldr r5, [sp, #0x9c]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0807627A
	.align 2, 0
_0807615C: .4byte vtable_unk_080E7B78
_08076160: .4byte 0x08527094
_08076164: .4byte 0x00001E41
_08076168: .4byte 0x00003F42
_0807616C: .4byte 0x00001C48
_08076170: .4byte 0x0600E000
_08076174: .4byte 0x06007FE0
_08076178: .4byte 0x080F9F70
_0807617C: .4byte 0x080F9F74
_08076180: .4byte 0x00030003
_08076184: .4byte 0x0600F800
_08076188: .4byte 0x0600E800
_0807618C: .4byte 0x06008000
_08076190: .4byte 0x0600E008
_08076194: .4byte 0x0000FFFC
_08076198: .4byte 0x080F9F78
_0807619C: .4byte 0x05000200
_080761A0: .4byte 0x06002400
_080761A4: .4byte 0x080FC082
_080761A8:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0x8c
	str r0, [r1]
	ldr r6, [sp, #0x9c]
	ldr r0, [r6]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x88]
	ldr r0, [r1]
	add r2, sp, #0x88
	cmp r4, r0
	bhs _080761C6
	adds r2, r1, #0
_080761C6:
	ldr r0, [r2]
	adds r0, r4, r0
	cmp r0, #0
	beq _080761E4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _080761E8
	mov r0, sl
	bl func_080D3BC0
	b _080761E8
_080761E4:
	movs r0, #0
	mov sl, r0
_080761E8:
	adds r5, r0, #0
	str r5, [sp, #0xa0]
	ldr r3, [sp, #0x9c]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _0807620E
_080761F6:
	cmp r3, #0
	beq _08076206
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08076206:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080761F6
_0807620E:
	adds r5, r3, #0
	ldr r1, [sp, #0x8c]
	cmp r1, #1
	bne _0807622A
	cmp r5, #0
	beq _08076226
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08076226:
	adds r5, #0x10
	b _08076252
_0807622A:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _08076250
_08076232:
	cmp r2, #0
	beq _08076242
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08076242:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _08076232
_08076250:
	adds r5, r2, #0
_08076252:
	ldr r6, [sp, #0x9c]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08076264
_0807625E:
	adds r1, #0x10
	cmp r1, r2
	bne _0807625E
_08076264:
	cmp r0, #0
	beq _0807626C
	bl free
_0807626C:
	ldr r0, [sp, #0xa0]
	add r0, sl
	ldr r1, [sp, #0xa0]
	ldr r2, [sp, #0x9c]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0807627A:
	adds r0, r7, #0
	add sp, #0xa4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0807628C
func_0807628C: @ 0x0807628C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xe4
	adds r7, r0, #0
	ldr r1, [r7, #8]
	ldr r0, [r1, #4]
	movs r2, #0xe
	ldrsh r0, [r0, r2]
	subs r0, #0xa0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0
	movs r3, #0xb2
	lsls r3, r3, #3
	adds r1, r1, r3
	movs r4, #0
	ldrsh r1, [r1, r4]
	cmp r1, r0
	bge _080762BA
	movs r2, #1
_080762BA:
	adds r0, r7, #0
	adds r0, #0xa8
	movs r6, #0
	strb r2, [r0]
	ldr r1, [r7, #8]
	movs r2, #0
	adds r1, r1, r3
	movs r5, #0
	ldrsh r1, [r1, r5]
	str r0, [sp, #0xcc]
	cmp r1, #0
	ble _080762D4
	movs r2, #1
_080762D4:
	adds r5, r7, #0
	adds r5, #0x70
	strb r2, [r5]
	mov r0, sp
	movs r1, #0
	strh r6, [r0]
	strh r6, [r0, #2]
	strh r6, [r0, #4]
	strh r6, [r0, #6]
	strh r6, [r0, #8]
	str r6, [sp, #0xc]
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	str r6, [sp, #0x14]
	strb r1, [r0, #0x18]
	adds r4, r7, #0
	adds r4, #0xe8
	adds r0, r4, #0
	bl func_0805E8F0
	add r0, sp, #0x1c
	mov r8, r0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	adds r0, r7, #0
	adds r0, #0xec
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	mov r0, r8
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r1, sp
	adds r0, r7, #0
	adds r0, #0xfc
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	adds r0, r7, #0
	adds r0, #0xe4
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r7, #0
	adds r0, #0xe6
	ldrh r0, [r0]
	strh r0, [r1, #2]
	mov r0, sp
	strh r6, [r0, #4]
	strh r6, [r0, #6]
	adds r0, r7, #0
	bl func_08008920
	ldr r1, [sp, #0x1c]
	movs r2, #0
	str r5, [sp, #0xc4]
	cmp r1, #0
	beq _08076358
	mov r5, r8
	ldrh r2, [r5, #4]
_08076358:
	mov r3, sp
	bl func_0805E99C
	adds r0, r7, #0
	bl func_08008910
	ldr r1, [sp, #0x24]
	add r2, sp, #0x24
	movs r3, #0
	cmp r1, #0
	beq _08076370
	ldrh r3, [r2, #4]
_08076370:
	str r0, [sp, #0xd8]
	add r0, sp, #0x3c
	ldr r2, _080763D8 @ =0x06010000
	bl func_08008F0C
	add r6, sp, #0x3c
	mov sl, r6
	ldr r0, [sp, #0xd8]
	ldr r1, [r0, #4]
	ldr r0, [r0, #0xc]
	cmp r1, r0
	beq _080763DC
	cmp r1, #0
	beq _08076398
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08076398:
	ldr r5, [sp, #0xd8]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	movs r6, #0xb0
	adds r6, r6, r7
	mov r8, r6
	mov r0, sp
	adds r0, #0x4c
	str r0, [sp, #0xb8]
	adds r1, r7, #0
	adds r1, #0xb4
	str r1, [sp, #0xac]
	adds r2, r7, #0
	adds r2, #0xc4
	str r2, [sp, #0xb0]
	adds r3, r7, #0
	adds r3, #0xac
	str r3, [sp, #0xd0]
	adds r4, r7, #0
	adds r4, #0xae
	str r4, [sp, #0xd4]
	mov r5, sp
	adds r5, #0x54
	str r5, [sp, #0xc0]
	adds r6, r7, #0
	adds r6, #0x40
	str r6, [sp, #0xbc]
	adds r0, r7, #0
	adds r0, #0x78
	str r0, [sp, #0xc8]
	b _080764E4
	.align 2, 0
_080763D8: .4byte 0x06010000
_080763DC:
	str r1, [sp, #0xdc]
	movs r0, #1
	add r1, sp, #0x90
	str r0, [r1]
	ldr r2, [sp, #0xd8]
	ldr r0, [r2]
	ldr r3, [sp, #0xdc]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x8c
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080763FA
	adds r0, r1, #0
_080763FA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08076418
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	str r4, [sp, #0xb4]
	cmp r0, #0
	bne _0807641E
	adds r0, r4, #0
	bl func_080D3BC0
	b _0807641E
_08076418:
	movs r0, #0
	movs r4, #0
	str r4, [sp, #0xb4]
_0807641E:
	adds r4, r0, #0
	mov sb, r4
	ldr r5, [sp, #0xd8]
	ldr r2, [r5]
	mov r3, sb
	movs r6, #0xb0
	adds r6, r6, r7
	mov r8, r6
	mov r0, sp
	adds r0, #0x4c
	str r0, [sp, #0xb8]
	adds r1, r7, #0
	adds r1, #0xb4
	str r1, [sp, #0xac]
	adds r4, r7, #0
	adds r4, #0xc4
	str r4, [sp, #0xb0]
	adds r5, r7, #0
	adds r5, #0xac
	str r5, [sp, #0xd0]
	adds r6, r7, #0
	adds r6, #0xae
	str r6, [sp, #0xd4]
	adds r0, #8
	str r0, [sp, #0xc0]
	subs r1, #0x74
	str r1, [sp, #0xbc]
	subs r4, #0x4c
	str r4, [sp, #0xc8]
	ldr r5, [sp, #0xdc]
	cmp r2, r5
	beq _08076478
_0807645E:
	cmp r3, #0
	beq _0807646E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0807646E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0xdc]
	cmp r2, r6
	bne _0807645E
_08076478:
	adds r4, r3, #0
	ldr r1, [sp, #0x90]
	cmp r1, #1
	bne _08076494
	cmp r4, #0
	beq _08076490
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_08076490:
	adds r4, #0x10
	b _080764BC
_08076494:
	mov ip, r1
	adds r2, r4, #0
	cmp r1, #0
	beq _080764BA
_0807649C:
	cmp r2, #0
	beq _080764AC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_080764AC:
	movs r5, #1
	rsbs r5, r5, #0
	add ip, r5
	adds r2, #0x10
	mov r6, ip
	cmp r6, #0
	bne _0807649C
_080764BA:
	adds r4, r2, #0
_080764BC:
	ldr r0, [sp, #0xd8]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080764CE
_080764C8:
	adds r1, #0x10
	cmp r1, r2
	bne _080764C8
_080764CE:
	cmp r0, #0
	beq _080764D6
	bl free
_080764D6:
	ldr r0, [sp, #0xb4]
	add r0, sb
	mov r1, sb
	ldr r2, [sp, #0xd8]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080764E4:
	mov r0, r8
	bl func_0805E8F0
	mov r3, r8
	ldr r1, [r3]
	ldr r3, [r1]
	mov r4, r8
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r5, [sp, #0xac]
	ldr r0, [r5]
	adds r0, r0, r2
	ldrh r2, [r0]
	ldr r0, [sp, #0xb8]
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r1, sp
	ldr r0, [sp, #0xb0]
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r4, r5, r6}
	stm r1!, {r4, r5, r6}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	ldr r2, [sp, #0xd0]
	ldrh r0, [r2]
	movs r2, #0
	strh r0, [r1]
	ldr r3, [sp, #0xd4]
	ldrh r0, [r3]
	strh r0, [r1, #2]
	mov r0, sp
	strh r2, [r0, #4]
	movs r4, #1
	strh r4, [r0, #6]
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x4c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08076544
	ldr r5, [sp, #0xb8]
	ldrh r2, [r5, #4]
_08076544:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
	adds r0, r7, #0
	bl func_08008910
	ldr r1, [sp, #0x54]
	movs r3, #0
	cmp r1, #0
	beq _0807655E
	ldr r6, [sp, #0xc0]
	ldrh r3, [r6, #4]
_0807655E:
	str r0, [sp, #0xdc]
	add r0, sp, #0x3c
	ldr r2, _08076590 @ =0x06010020
	bl func_08008F0C
	add r0, sp, #0x3c
	mov sl, r0
	ldr r2, [sp, #0xdc]
	ldr r1, [r2, #4]
	ldr r0, [r2, #0xc]
	cmp r1, r0
	beq _08076594
	cmp r1, #0
	beq _08076586
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08076586:
	ldr r6, [sp, #0xdc]
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08076668
	.align 2, 0
_08076590: .4byte 0x06010020
_08076594:
	str r1, [sp, #0xd8]
	add r1, sp, #0x98
	str r4, [r1]
	ldr r2, [sp, #0xdc]
	ldr r0, [r2]
	ldr r3, [sp, #0xd8]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0x94
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080765B0
	adds r0, r1, #0
_080765B0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080765CE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _080765D2
	mov r0, sb
	bl func_080D3BC0
	b _080765D2
_080765CE:
	movs r0, #0
	mov sb, r0
_080765D2:
	adds r4, r0, #0
	mov r8, r4
	ldr r4, [sp, #0xdc]
	ldr r2, [r4]
	mov r3, r8
	ldr r5, [sp, #0xd8]
	cmp r2, r5
	beq _080765FC
_080765E2:
	cmp r3, #0
	beq _080765F2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080765F2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0xd8]
	cmp r2, r6
	bne _080765E2
_080765FC:
	adds r4, r3, #0
	ldr r1, [sp, #0x98]
	cmp r1, #1
	bne _08076618
	cmp r4, #0
	beq _08076614
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_08076614:
	adds r4, #0x10
	b _08076640
_08076618:
	mov ip, r1
	adds r2, r4, #0
	cmp r1, #0
	beq _0807663E
_08076620:
	cmp r2, #0
	beq _08076630
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08076630:
	movs r5, #1
	rsbs r5, r5, #0
	add ip, r5
	adds r2, #0x10
	mov r6, ip
	cmp r6, #0
	bne _08076620
_0807663E:
	adds r4, r2, #0
_08076640:
	ldr r0, [sp, #0xdc]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _08076652
_0807664C:
	adds r1, #0x10
	cmp r1, r2
	bne _0807664C
_08076652:
	cmp r0, #0
	beq _0807665A
	bl free
_0807665A:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0xdc]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_08076668:
	ldr r0, [sp, #0xbc]
	bl func_0805E8F0
	ldr r3, [sp, #0xc4]
	ldrb r0, [r3]
	cmp r0, #0
	bne _08076678
	b _080767EE
_08076678:
	add r4, sp, #0x6c
	ldr r1, [r7, #0x40]
	ldr r3, [r1]
	ldr r5, [sp, #0xbc]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r0, [r7, #0x44]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r4, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r1, sp
	adds r0, r7, #0
	adds r0, #0x54
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	ldrh r0, [r7, #0x3c]
	movs r2, #0
	strh r0, [r1]
	ldrh r0, [r7, #0x3e]
	strh r0, [r1, #2]
	mov r0, sp
	strh r2, [r0, #4]
	movs r0, #2
	strh r0, [r1, #6]
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x6c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080766CC
	ldrh r2, [r4, #4]
_080766CC:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
	adds r0, r7, #0
	bl func_08008910
	ldr r1, [sp, #0x74]
	add r2, sp, #0x74
	movs r3, #0
	cmp r1, #0
	beq _080766E6
	ldrh r3, [r2, #4]
_080766E6:
	str r0, [sp, #0xd8]
	add r0, sp, #0x3c
	ldr r2, _08076718 @ =0x06010040
	bl func_08008F0C
	add r3, sp, #0x3c
	mov sl, r3
	ldr r4, [sp, #0xd8]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _0807671C
	cmp r1, #0
	beq _0807670E
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0807670E:
	ldr r3, [sp, #0xd8]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _080767EE
	.align 2, 0
_08076718: .4byte 0x06010040
_0807671C:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0xa0
	str r0, [r1]
	ldr r4, [sp, #0xd8]
	ldr r0, [r4]
	mov r5, r8
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0x9c
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _0807673A
	adds r0, r1, #0
_0807673A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08076758
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0807675C
	mov r0, sb
	bl func_080D3BC0
	b _0807675C
_08076758:
	movs r0, #0
	mov sb, r0
_0807675C:
	adds r5, r0, #0
	str r5, [sp, #0xe0]
	ldr r6, [sp, #0xd8]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, r8
	beq _08076782
_0807676A:
	cmp r3, #0
	beq _0807677A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0807677A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0807676A
_08076782:
	adds r5, r3, #0
	ldr r1, [sp, #0xa0]
	cmp r1, #1
	bne _0807679E
	cmp r5, #0
	beq _0807679A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807679A:
	adds r5, #0x10
	b _080767C6
_0807679E:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _080767C4
_080767A6:
	cmp r2, #0
	beq _080767B6
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_080767B6:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _080767A6
_080767C4:
	adds r5, r2, #0
_080767C6:
	ldr r6, [sp, #0xd8]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080767D8
_080767D2:
	adds r1, #0x10
	cmp r1, r2
	bne _080767D2
_080767D8:
	cmp r0, #0
	beq _080767E0
	bl free
_080767E0:
	ldr r0, [sp, #0xe0]
	add r0, sb
	ldr r1, [sp, #0xe0]
	ldr r2, [sp, #0xd8]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_080767EE:
	ldr r0, [sp, #0xc8]
	bl func_0805E8F0
	ldr r3, [sp, #0xcc]
	ldrb r0, [r3]
	cmp r0, #0
	bne _080767FE
	b _0807697E
_080767FE:
	add r4, sp, #0x6c
	ldr r1, [r7, #0x78]
	ldr r3, [r1]
	ldr r5, [sp, #0xc8]
	ldrh r2, [r5, #0xc]
	lsls r2, r2, #2
	ldr r0, [r7, #0x7c]
	adds r0, r0, r2
	ldrh r2, [r0]
	adds r0, r4, #0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r1, sp
	adds r0, r7, #0
	adds r0, #0x8c
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	adds r0, r7, #0
	adds r0, #0x74
	ldrh r0, [r0]
	movs r2, #0
	strh r0, [r1]
	adds r0, r7, #0
	adds r0, #0x76
	ldrh r0, [r0]
	strh r0, [r1, #2]
	mov r0, sp
	strh r2, [r0, #4]
	movs r0, #3
	strh r0, [r1, #6]
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x6c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0807685A
	ldrh r2, [r4, #4]
_0807685A:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
	adds r0, r7, #0
	bl func_08008910
	ldr r1, [sp, #0x74]
	add r2, sp, #0x74
	movs r3, #0
	cmp r1, #0
	beq _08076874
	ldrh r3, [r2, #4]
_08076874:
	str r0, [sp, #0xd8]
	add r0, sp, #0x3c
	ldr r2, _080768A8 @ =0x06010060
	bl func_08008F0C
	add r3, sp, #0x3c
	mov sb, r3
	ldr r4, [sp, #0xd8]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _080768AC
	cmp r1, #0
	beq _0807689C
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0807689C:
	ldr r3, [sp, #0xd8]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _0807697E
	.align 2, 0
_080768A8: .4byte 0x06010060
_080768AC:
	mov r8, r1
	movs r0, #1
	add r1, sp, #0xa8
	str r0, [r1]
	ldr r4, [sp, #0xd8]
	ldr r0, [r4]
	mov r5, r8
	subs r0, r5, r0
	asrs r4, r0, #4
	add r0, sp, #0xa4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080768CA
	adds r0, r1, #0
_080768CA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080768E8
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _080768EC
	mov r0, sl
	bl func_080D3BC0
	b _080768EC
_080768E8:
	movs r0, #0
	mov sl, r0
_080768EC:
	adds r5, r0, #0
	str r5, [sp, #0xe0]
	ldr r6, [sp, #0xd8]
	ldr r2, [r6]
	adds r3, r5, #0
	cmp r2, r8
	beq _08076912
_080768FA:
	cmp r3, #0
	beq _0807690A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0807690A:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _080768FA
_08076912:
	adds r5, r3, #0
	ldr r1, [sp, #0xa8]
	cmp r1, #1
	bne _0807692E
	cmp r5, #0
	beq _0807692A
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807692A:
	adds r5, #0x10
	b _08076956
_0807692E:
	mov r8, r1
	adds r2, r5, #0
	cmp r1, #0
	beq _08076954
_08076936:
	cmp r2, #0
	beq _08076946
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08076946:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _08076936
_08076954:
	adds r5, r2, #0
_08076956:
	ldr r6, [sp, #0xd8]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08076968
_08076962:
	adds r1, #0x10
	cmp r1, r2
	bne _08076962
_08076968:
	cmp r0, #0
	beq _08076970
	bl free
_08076970:
	ldr r0, [sp, #0xe0]
	add r0, sl
	ldr r1, [sp, #0xe0]
	ldr r2, [sp, #0xd8]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0807697E:
	ldr r0, [r7, #8]
	ldr r3, _0807699C @ =0x000005B4
	adds r1, r0, r3
	ldr r1, [r1]
	ldr r1, [r1, #0xc]
	bl _call_via_r1
	add sp, #0xe4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807699C: .4byte 0x000005B4

	thumb_func_start func_080769A0
func_080769A0: @ 0x080769A0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x18
	adds r6, r0, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	add r4, sp, #4
	movs r0, #0
	str r0, [sp, #4]
	str r0, [r4, #4]
	ldr r0, _08076A60 @ =vtable_unk_080E5B80
	str r0, [sp, #0xc]
	add r0, sp, #0x10
	bl func_08009300
	ldr r1, _08076A64 @ =0x00000889
	add r0, sp, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r4, #0
	bl _call_via_r2
	movs r0, #0
	mov r8, r0
	adds r0, r6, #0
	bl func_08076BEC
	lsls r5, r0, #4
	mov sb, r4
_080769FE:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	adds r0, r6, #0
	bl func_080088C4
	str r0, [sp, #0x14]
	adds r0, r6, #0
	bl func_080088CC
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_080088D4
	adds r7, r0, #0
	ldr r1, [sp, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08076A9C
	mov r1, r8
	cmp r1, #0
	beq _08076A34
	b _08076B4E
_08076A34:
	movs r0, #2
	ands r0, r4
	cmp r0, #0
	beq _08076A68
	movs r0, #1
	mov r8, r0
	add r0, sp, #0x10
	ldr r1, _08076A64 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	mov r1, sb
	bl _call_via_r2
	b _08076A9C
	.align 2, 0
_08076A60: .4byte vtable_unk_080E5B80
_08076A64: .4byte 0x00000889
_08076A68:
	movs r1, #0x8e
	lsls r1, r1, #1
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08076A9C
	movs r0, #4
	ands r0, r4
	cmp r0, #0
	beq _08076A9C
	movs r0, #1
	mov r8, r0
	add r0, sp, #0x10
	ldr r1, _08076ABC @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	mov r1, sb
	bl _call_via_r2
_08076A9C:
	add r3, sp, #0x14
	ldrb r1, [r3]
	movs r0, #0x40
	ands r0, r1
	adds r2, r3, #0
	cmp r0, #0
	beq _08076AD6
	cmp r5, #0
	ble _08076ACE
	ldrb r1, [r2, #1]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08076AC0
	subs r5, #0x80
	b _08076ACE
	.align 2, 0
_08076ABC: .4byte 0x00000889
_08076AC0:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08076ACC
	subs r5, #8
	b _08076ACE
_08076ACC:
	subs r5, #0x40
_08076ACE:
	cmp r5, #0
	bge _08076B16
	movs r5, #0
	b _08076B16
_08076AD6:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08076B20
	ldr r0, [r6, #8]
	ldr r0, [r0, #4]
	movs r1, #0xe
	ldrsh r0, [r0, r1]
	subs r0, #0xa0
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	asrs r0, r5, #4
	cmp r0, r2
	bge _08076B0E
	ldrb r1, [r3, #1]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08076B00
	adds r5, #0x80
	b _08076B0E
_08076B00:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08076B0C
	adds r5, #8
	b _08076B0E
_08076B0C:
	adds r5, #0x40
_08076B0E:
	asrs r0, r5, #4
	cmp r0, r2
	ble _08076B16
	lsls r5, r2, #4
_08076B16:
	asrs r1, r5, #4
	adds r0, r6, #0
	bl func_08076BE0
	b _08076B46
_08076B20:
	lsls r1, r7, #0x1b
	lsls r0, r7, #0x1a
	lsrs r1, r1, #0x1f
	lsrs r0, r0, #0x1f
	cmp r1, r0
	beq _08076B46
	ldr r2, [r6, #4]
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x1c
	movs r1, #1
	bics r1, r0
	ldr r2, [r2, #0xc]
	adds r0, r6, #0
	bl _call_via_r2
	adds r0, r6, #0
	bl func_08076BEC
	lsls r5, r0, #4
_08076B46:
	adds r0, r6, #0
	bl func_0807628C
	b _080769FE
_08076B4E:
	mov r0, sb
	movs r1, #2
	bl func_080094B8
	add sp, #0x18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_08076B64
func_08076B64: @ 0x08076B64
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r4, #8
	movs r5, #0
	ldr r1, [r0, #8]
	cmp r5, r1
	beq _08076B86
	cmp r1, #0
	beq _08076B86
	ldr r2, _08076B90 @ =0x000005B4
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08076B86:
	str r5, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08076B90: .4byte 0x000005B4

	thumb_func_start func_08076B94
func_08076B94: @ 0x08076B94
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	adds r6, r0, #0
	adds r6, #8
	ldr r2, [r4]
	movs r1, #0
	str r1, [r4]
	adds r5, r2, #0
	ldr r1, [r0, #8]
	cmp r5, r1
	beq _08076BBE
	cmp r1, #0
	beq _08076BBE
	ldr r2, _08076BDC @ =0x000005B4
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08076BBE:
	str r5, [r6]
	ldr r1, [r4]
	cmp r1, #0
	beq _08076BD6
	ldr r2, _08076BDC @ =0x000005B4
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08076BD6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08076BDC: .4byte 0x000005B4

	thumb_func_start func_08076BE0
func_08076BE0: @ 0x08076BE0
	ldr r0, [r0, #8]
	movs r2, #0xb2
	lsls r2, r2, #3
	adds r0, r0, r2
	strh r1, [r0]
	bx lr

	thumb_func_start func_08076BEC
func_08076BEC: @ 0x08076BEC
	ldr r0, [r0, #8]
	movs r1, #0xb2
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	bx lr
	.align 2, 0

	thumb_func_start func_08076BFC
func_08076BFC: @ 0x08076BFC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	mov sb, r0
	adds r7, r1, #0
	mov r8, r2
	adds r6, r3, #0
	ldr r1, _08076CB8 @ =0x000005B4
	add r1, sb
	ldr r0, _08076CBC @ =vtable_unk_080E7B88
	str r0, [r1]
	mov r0, sb
	str r7, [r0]
	movs r0, #0x4c
	bl __builtin_new
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r3, r0, #0
	ldr r0, _08076CC0 @ =0x0600F000
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl func_08075B00
	mov r1, sb
	str r0, [r1, #4]
	ldr r0, _08076CC4 @ =0x0000058C
	add r0, sb
	mov r2, r8
	str r2, [r0]
	movs r1, #0xb2
	lsls r1, r1, #3
	add r1, sb
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08076CC8 @ =0x00000594
	add r1, sb
	str r0, [r1]
	str r0, [r1, #4]
	ldr r1, _08076CCC @ =0x0000059C
	add r1, sb
	str r0, [r1, #4]
	ldr r1, _08076CD0 @ =0x000005A4
	add r1, sb
	str r0, [r1]
	str r0, [r1, #4]
	ldr r1, _08076CD4 @ =0x000005AC
	add r1, sb
	str r0, [r1, #4]
	add r0, sp, #0x1c
	movs r5, #0x16
	movs r6, #2
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x1c]
	mov r4, sb
	adds r4, #0xc
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [sp, #0x58]
	bl strlen
	adds r1, r0, #0
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08076CD8
	subs r2, r5, r1
	lsls r2, r2, #2
	add r0, sp, #0x20
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x20]
	ldr r3, [sp, #0x58]
	str r3, [sp]
	adds r1, r4, #0
	movs r3, #0
	bl func_0804E8F0
	b _08076CF2
	.align 2, 0
_08076CB8: .4byte 0x000005B4
_08076CBC: .4byte vtable_unk_080E7B88
_08076CC0: .4byte 0x0600F000
_08076CC4: .4byte 0x0000058C
_08076CC8: .4byte 0x00000594
_08076CCC: .4byte 0x0000059C
_08076CD0: .4byte 0x000005A4
_08076CD4: .4byte 0x000005AC
_08076CD8:
	movs r2, #0x15
	subs r2, r2, r1
	lsls r2, r2, #2
	add r0, sp, #0x24
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x24]
	ldr r5, [sp, #0x58]
	str r5, [sp]
	adds r1, r4, #0
	movs r3, #0
	bl func_0804E8F0
_08076CF2:
	adds r0, r7, #0
	bl func_08008910
	mov r1, sb
	adds r1, #0xc
	movs r3, #0xb0
	lsls r3, r3, #3
	adds r6, r0, #0
	add r0, sp, #0xc
	ldr r2, _08076D30 @ =0x06008020
	bl func_08008F0C
	add r7, sp, #0xc
	mov r8, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08076D34
	cmp r1, #0
	beq _08076D26
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08076D26:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08076DFA
	.align 2, 0
_08076D30: .4byte 0x06008020
_08076D34:
	str r1, [sp, #0x30]
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r0, [r6]
	adds r5, r1, #0
	subs r0, r5, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _08076D4E
	adds r0, r1, #0
_08076D4E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08076D6C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08076D70
	mov r0, sl
	bl func_080D3BC0
	b _08076D70
_08076D6C:
	movs r0, #0
	mov sl, r0
_08076D70:
	adds r5, r0, #0
	str r5, [sp, #0x34]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r7, [sp, #0x30]
	cmp r2, r7
	beq _08076D98
_08076D7E:
	cmp r3, #0
	beq _08076D8E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08076D8E:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x30]
	cmp r2, r0
	bne _08076D7E
_08076D98:
	adds r5, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _08076DB4
	cmp r5, #0
	beq _08076DB0
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08076DB0:
	adds r5, #0x10
	b _08076DD6
_08076DB4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08076DD4
_08076DBC:
	cmp r2, #0
	beq _08076DCC
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08076DCC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08076DBC
_08076DD4:
	adds r5, r2, #0
_08076DD6:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08076DE6
_08076DE0:
	adds r1, #0x10
	cmp r1, r2
	bne _08076DE0
_08076DE6:
	cmp r0, #0
	beq _08076DEE
	bl free
_08076DEE:
	ldr r0, [sp, #0x34]
	add r0, sl
	ldr r7, [sp, #0x34]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08076DFA:
	mov r0, sb
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_08076E0C
func_08076E0C: @ 0x08076E0C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r0, _08076E98 @ =0x000005B4
	adds r1, r5, r0
	ldr r0, _08076E9C @ =vtable_unk_080E7B88
	str r0, [r1]
	ldr r1, _08076EA0 @ =0x000005A4
	adds r0, r5, r1
	ldr r2, [r0, #4]
	ldr r1, [r0]
	cmp r1, r2
	beq _08076E2C
_08076E26:
	adds r1, #0x10
	cmp r1, r2
	bne _08076E26
_08076E2C:
	ldr r0, [r0]
	cmp r0, #0
	beq _08076E36
	bl free
_08076E36:
	ldr r1, _08076EA4 @ =0x00000594
	adds r0, r5, r1
	ldr r2, [r0, #4]
	ldr r1, [r0]
	cmp r1, r2
	beq _08076E48
_08076E42:
	adds r1, #0x10
	cmp r1, r2
	bne _08076E42
_08076E48:
	ldr r0, [r0]
	cmp r0, #0
	beq _08076E52
	bl free
_08076E52:
	ldr r0, [r5, #4]
	cmp r0, #0
	beq _08076E84
	adds r4, r0, #0
	adds r0, #0x28
	movs r1, #2
	bl func_08075DEC
	adds r0, r4, #0
	adds r0, #0x18
	ldr r2, [r0, #4]
	ldr r1, [r4, #0x18]
	cmp r1, r2
	beq _08076E74
_08076E6E:
	adds r1, #0x40
	cmp r1, r2
	bne _08076E6E
_08076E74:
	ldr r0, [r0]
	cmp r0, #0
	beq _08076E7E
	bl free
_08076E7E:
	adds r0, r4, #0
	bl __builtin_delete
_08076E84:
	movs r0, #1
	ands r0, r6
	cmp r0, #0
	beq _08076E92
	adds r0, r5, #0
	bl __builtin_delete
_08076E92:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08076E98: .4byte 0x000005B4
_08076E9C: .4byte vtable_unk_080E7B88
_08076EA0: .4byte 0x000005A4
_08076EA4: .4byte 0x00000594

	thumb_func_start func_08076EA8
func_08076EA8: @ 0x08076EA8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x74
	mov sl, r0
	movs r0, #0
	mov r8, r0
	ldr r1, _08076ED8 @ =0x00000594
	add r1, sl
	ldr r0, [r1, #4]
	ldr r2, [r1]
	subs r0, r0, r2
	asrs r4, r0, #4
	cmp r4, #0
	beq _08076EF4
	movs r1, #0
	ldrsh r0, [r2, r1]
	adds r0, #0x30
	movs r3, #0xb2
	lsls r3, r3, #3
	add r3, sl
	b _08076EEC
	.align 2, 0
_08076ED8: .4byte 0x00000594
_08076EDC:
	adds r2, #0x10
	movs r6, #1
	add r8, r6
	cmp r4, #0
	beq _08076EF4
	movs r7, #0
	ldrsh r0, [r2, r7]
	adds r0, #0x30
_08076EEC:
	movs r5, #0
	ldrsh r1, [r3, r5]
	cmp r0, r1
	blt _08076EDC
_08076EF4:
	movs r6, #0
	str r6, [sp, #0x40]
	ldr r0, _08076FA0 @ =0x00000594
	add r0, sl
	ldr r1, [r0, #4]
	ldr r0, [r0]
	subs r1, r1, r0
	asrs r1, r1, #4
	cmp r8, r1
	blo _08076F0A
	b _080771FE
_08076F0A:
	ldr r7, _08076FA0 @ =0x00000594
	add r7, sl
	str r7, [sp, #0x44]
_08076F10:
	ldr r1, [sp, #0x44]
	ldr r0, [r1]
	mov r2, r8
	lsls r1, r2, #4
	adds r0, r0, r1
	movs r3, #0
	ldrsh r2, [r0, r3]
	movs r0, #0xb2
	lsls r0, r0, #3
	add r0, sl
	movs r4, #0
	ldrsh r0, [r0, r4]
	adds r0, #0xa0
	mov r5, r8
	adds r5, #1
	str r5, [sp, #0x5c]
	str r1, [sp, #0x60]
	cmp r2, r0
	ble _08076F38
	b _080771EA
_08076F38:
	ldr r6, [sp, #0x40]
	lsls r0, r6, #2
	adds r0, #0x20
	str r0, [sp, #0x48]
	adds r6, #2
	str r6, [sp, #0x4c]
	mov r7, sl
	ldr r0, [r7]
	bl func_08008910
	ldr r2, [sp, #0x44]
	ldr r1, [r2]
	ldr r3, [sp, #0x60]
	adds r1, r1, r3
	adds r5, r0, #0
	ldr r1, [r1, #8]
	ldr r4, [sp, #0x48]
	lsls r2, r4, #5
	ldr r6, _08076FA4 @ =0x06010000
	adds r2, r2, r6
	add r0, sp, #0x10
	movs r3, #0x80
	bl func_08008F0C
	mov r7, sp
	adds r7, #0x10
	str r7, [sp, #0x50]
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08076FA8
	cmp r1, #0
	beq _08076F86
	adds r0, r1, #0
	add r1, sp, #0x10
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08076F86:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r5, [sp, #0x4c]
	lsls r5, r5, #5
	mov r8, r5
	mov r6, sp
	adds r6, #0x30
	str r6, [sp, #0x64]
	ldr r7, [sp, #0x40]
	adds r7, #1
	str r7, [sp, #0x68]
	b _08077084
	.align 2, 0
_08076FA0: .4byte 0x00000594
_08076FA4: .4byte 0x06010000
_08076FA8:
	str r1, [sp, #0x6c]
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r0, [r5]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r1, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _08076FC0
	adds r0, r1, #0
_08076FC0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08076FDE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08076FE2
	mov r0, sb
	bl func_080D3BC0
	b _08076FE2
_08076FDE:
	movs r0, #0
	mov sb, r0
_08076FE2:
	adds r4, r0, #0
	str r4, [sp, #0x70]
	ldr r2, [r5]
	adds r3, r4, #0
	mov r4, r8
	adds r4, #1
	str r4, [sp, #0x5c]
	ldr r6, [sp, #0x4c]
	lsls r6, r6, #5
	mov r8, r6
	mov r7, sp
	adds r7, #0x30
	str r7, [sp, #0x64]
	ldr r0, [sp, #0x40]
	adds r0, #1
	str r0, [sp, #0x68]
	ldr r1, [sp, #0x6c]
	cmp r2, r1
	beq _08077022
_08077008:
	cmp r3, #0
	beq _08077018
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08077018:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x6c]
	cmp r2, r0
	bne _08077008
_08077022:
	adds r4, r3, #0
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _0807703E
	cmp r4, #0
	beq _0807703A
	adds r0, r4, #0
	ldr r1, [sp, #0x50]
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0807703A:
	adds r4, #0x10
	b _08077060
_0807703E:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0807705E
_08077046:
	cmp r2, #0
	beq _08077056
	adds r0, r2, #0
	ldr r1, [sp, #0x50]
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08077056:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08077046
_0807705E:
	adds r4, r2, #0
_08077060:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _08077070
_0807706A:
	adds r1, #0x10
	cmp r1, r2
	bne _0807706A
_08077070:
	cmp r0, #0
	beq _08077078
	bl free
_08077078:
	ldr r0, [sp, #0x70]
	add r0, sb
	ldr r7, [sp, #0x70]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_08077084:
	mov r1, sl
	ldr r0, [r1]
	bl func_08008910
	ldr r2, [sp, #0x44]
	ldr r1, [r2]
	ldr r3, [sp, #0x60]
	adds r1, r1, r3
	adds r5, r0, #0
	ldr r1, [r1, #0xc]
	ldr r2, _080770C8 @ =0x05000200
	add r2, r8
	add r0, sp, #0x10
	movs r3, #0x20
	bl func_08008F0C
	add r4, sp, #0x10
	mov sb, r4
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080770CC
	cmp r1, #0
	beq _080770C0
	adds r0, r1, #0
	add r1, sp, #0x10
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080770C0:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08077192
	.align 2, 0
_080770C8: .4byte 0x05000200
_080770CC:
	str r1, [sp, #0x6c]
	movs r0, #1
	str r0, [sp, #0x2c]
	ldr r0, [r5]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x28]
	add r1, sp, #0x2c
	add r0, sp, #0x28
	cmp r4, #1
	bhs _080770E6
	adds r0, r1, #0
_080770E6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08077104
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08077108
	mov r0, r8
	bl func_080D3BC0
	b _08077108
_08077104:
	movs r0, #0
	mov r8, r0
_08077108:
	adds r4, r0, #0
	str r4, [sp, #0x70]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r4, [sp, #0x6c]
	cmp r2, r4
	beq _08077130
_08077116:
	cmp r3, #0
	beq _08077126
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08077126:
	adds r2, #0x10
	adds r3, #0x10
	ldr r6, [sp, #0x6c]
	cmp r2, r6
	bne _08077116
_08077130:
	adds r4, r3, #0
	ldr r0, [sp, #0x2c]
	cmp r0, #1
	bne _0807714C
	cmp r4, #0
	beq _08077148
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08077148:
	adds r4, #0x10
	b _0807716E
_0807714C:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0807716C
_08077154:
	cmp r2, #0
	beq _08077164
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08077164:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08077154
_0807716C:
	adds r4, r2, #0
_0807716E:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _0807717E
_08077178:
	adds r1, #0x10
	cmp r1, r2
	bne _08077178
_0807717E:
	cmp r0, #0
	beq _08077186
	bl free
_08077186:
	ldr r0, [sp, #0x70]
	add r0, r8
	ldr r1, [sp, #0x70]
	str r1, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_08077192:
	mov r2, sl
	ldr r0, [r2]
	bl func_08008920
	adds r4, r0, #0
	ldr r3, [sp, #0x44]
	ldr r1, [r3]
	ldr r5, [sp, #0x60]
	adds r1, r1, r5
	movs r6, #0
	ldrsh r2, [r1, r6]
	movs r0, #0xb2
	lsls r0, r0, #3
	add r0, sl
	movs r7, #0
	ldrsh r0, [r0, r7]
	subs r2, r2, r0
	ldr r1, [r1, #4]
	ldr r0, [sp, #0x4c]
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r0, [sp, #0x64]
	ldr r3, [sp, #0x48]
	bl func_0804EA94
	ldrb r2, [r4]
	cmp r2, #0x7f
	bhi _080771E6
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r4, r1
	ldr r0, [sp, #0x30]
	str r0, [r1]
	ldr r3, [sp, #0x64]
	ldrh r0, [r3, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r4]
_080771E6:
	ldr r4, [sp, #0x68]
	str r4, [sp, #0x40]
_080771EA:
	ldr r5, [sp, #0x5c]
	mov r8, r5
	ldr r6, [sp, #0x44]
	ldr r0, [r6, #4]
	ldr r1, [r6]
	subs r0, r0, r1
	asrs r0, r0, #4
	cmp r8, r0
	bhs _080771FE
	b _08076F10
_080771FE:
	movs r7, #0
	mov r8, r7
	ldr r1, _08077224 @ =0x000005A4
	add r1, sl
	ldr r0, [r1, #4]
	ldr r2, [r1]
	subs r0, r0, r2
	asrs r4, r0, #4
	cmp r8, r4
	blo _08077214
	b _080773A0
_08077214:
	movs r1, #0
	ldrsh r0, [r2, r1]
	adds r0, #0x30
	movs r3, #0xb2
	lsls r3, r3, #3
	add r3, sl
	b _08077238
	.align 2, 0
_08077224: .4byte 0x000005A4
_08077228:
	adds r2, #0x10
	movs r6, #1
	add r8, r6
	cmp r8, r4
	bhs _08077240
	movs r7, #0
	ldrsh r0, [r2, r7]
	adds r0, #0x30
_08077238:
	movs r5, #0
	ldrsh r1, [r3, r5]
	cmp r0, r1
	blt _08077228
_08077240:
	ldr r0, _080772C0 @ =0x000005A4
	add r0, sl
	ldr r1, [r0, #4]
	ldr r0, [r0]
	subs r1, r1, r0
	asrs r1, r1, #4
	cmp r8, r1
	blo _08077252
	b _080773A0
_08077252:
	ldr r6, _080772C0 @ =0x000005A4
	add r6, sl
	str r6, [sp, #0x54]
_08077258:
	ldr r7, [sp, #0x54]
	ldr r0, [r7]
	mov r1, r8
	lsls r4, r1, #4
	adds r0, r0, r4
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0xb2
	lsls r0, r0, #3
	add r0, sl
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r0, #0xa0
	mov r5, r8
	adds r5, #1
	str r5, [sp, #0x5c]
	cmp r1, r0
	ble _0807727E
	b _0807738C
_0807727E:
	mov r6, sl
	ldr r0, [r6]
	bl func_08008910
	ldr r3, [r7]
	adds r3, r3, r4
	adds r5, r0, #0
	ldr r1, [r3, #4]
	ldr r2, [r3, #8]
	ldr r3, [r3, #0xc]
	add r0, sp, #0x10
	bl func_08008F0C
	mov r7, sp
	adds r7, #0x10
	str r7, [sp, #0x58]
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _080772C4
	cmp r1, #0
	beq _080772B6
	adds r0, r1, #0
	add r1, sp, #0x10
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080772B6:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0807738C
	.align 2, 0
_080772C0: .4byte 0x000005A4
_080772C4:
	str r1, [sp, #0x6c]
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r1, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _080772DE
	adds r0, r1, #0
_080772DE:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080772FC
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08077300
	mov r0, sb
	bl func_080D3BC0
	b _08077300
_080772FC:
	movs r0, #0
	mov sb, r0
_08077300:
	adds r4, r0, #0
	str r4, [sp, #0x70]
	ldr r2, [r5]
	adds r3, r4, #0
	mov r7, r8
	adds r7, #1
	str r7, [sp, #0x5c]
	b _08077324
_08077310:
	cmp r3, #0
	beq _08077320
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08077320:
	adds r2, #0x10
	adds r3, #0x10
_08077324:
	ldr r0, [sp, #0x6c]
	cmp r2, r0
	bne _08077310
	adds r4, r3, #0
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _08077346
	cmp r4, #0
	beq _08077342
	adds r0, r4, #0
	ldr r1, [sp, #0x58]
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_08077342:
	adds r4, #0x10
	b _08077368
_08077346:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _08077366
_0807734E:
	cmp r2, #0
	beq _0807735E
	adds r0, r2, #0
	ldr r1, [sp, #0x58]
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807735E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807734E
_08077366:
	adds r4, r2, #0
_08077368:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _08077378
_08077372:
	adds r1, #0x10
	cmp r1, r2
	bne _08077372
_08077378:
	cmp r0, #0
	beq _08077380
	bl free
_08077380:
	ldr r0, [sp, #0x70]
	add r0, sb
	ldr r7, [sp, #0x70]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0807738C:
	ldr r0, [sp, #0x5c]
	mov r8, r0
	ldr r1, [sp, #0x54]
	ldr r0, [r1, #4]
	ldr r1, [r1]
	subs r0, r0, r1
	asrs r0, r0, #4
	cmp r8, r0
	bhs _080773A0
	b _08077258
_080773A0:
	mov r2, sl
	ldr r0, [r2, #4]
	movs r1, #0xb2
	lsls r1, r1, #3
	add r1, sl
	movs r3, #0
	ldrsh r1, [r1, r3]
	bl func_08075C88
	movs r0, #1
	add sp, #0x74
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
_080773C4:
	.byte 0xB2, 0x22, 0xD2, 0x00, 0x80, 0x18, 0x01, 0x80, 0x70, 0x47, 0x00, 0x00
	.byte 0x40, 0x68, 0x0E, 0x21, 0x40, 0x5E, 0xA0, 0x38, 0x00, 0x04, 0x00, 0x14, 0x70, 0x47, 0x00, 0x00
	.byte 0x40, 0x68, 0x70, 0x47, 0x00, 0x68, 0x70, 0x47

	thumb_func_start func_080773E8
func_080773E8: @ 0x080773E8
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r4, r0, #0
	mov r3, sp
	movs r1, #0x1e
	movs r2, #1
	movs r5, #0
	mov r0, sp
	strh r1, [r0]
	movs r6, #1
	strh r2, [r3, #2]
	adds r0, r4, #0
	mov r1, sp
	bl func_080084DC
	ldr r0, _0807747C @ =vtable_unk_080E7B98
	str r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #8
	movs r1, #0
	bl func_08008B54
	adds r0, r4, #0
	adds r0, #0xc
	movs r1, #1
	bl func_08008B54
	add r2, sp, #4
	movs r0, #0x1c
	movs r1, #2
	strh r0, [r2]
	strh r1, [r2, #2]
	ldr r0, [sp, #4]
	adds r1, r4, #0
	adds r1, #0x14
	movs r2, #0
	bl func_0804E7A0
	ldr r0, _08077480 @ =0x00000714
	adds r1, r4, r0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r1]
	ldr r1, _08077484 @ =0x00000716
	adds r0, r4, r1
	strh r5, [r0]
	adds r1, #2
	adds r0, r4, r1
	strh r5, [r0]
	adds r1, #4
	adds r0, r4, r1
	str r5, [r0]
	adds r1, #4
	adds r0, r4, r1
	str r5, [r0]
	adds r1, #4
	adds r0, r4, r1
	str r5, [r0]
	adds r1, #4
	adds r0, r4, r1
	strb r6, [r0]
	adds r1, #2
	adds r0, r4, r1
	strh r5, [r0]
	ldr r0, _08077488 @ =0x0000072C
	adds r1, r4, r0
	ldr r0, _0807748C @ =0x080FC4B4
	str r0, [r1]
	adds r0, r4, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807747C: .4byte vtable_unk_080E7B98
_08077480: .4byte 0x00000714
_08077484: .4byte 0x00000716
_08077488: .4byte 0x0000072C
_0807748C: .4byte 0x080FC4B4

	thumb_func_start func_08077490
func_08077490: @ 0x08077490
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sb, r0
	adds r5, r1, #0
	adds r0, r5, #0
	bl func_08008724
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r5, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0807753C @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl func_08009300
	str r4, [sp, #4]
	adds r0, r5, #0
	bl func_08077810
	adds r0, r5, #0
	bl func_080779B4
	adds r0, r5, #0
	adds r0, #8
	movs r1, #0x24
	bl func_08008B6C
	ldr r0, [sp, #4]
	ldr r1, _08077540 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #0
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #0
	add r0, sp, #8
	mov r8, r0
	add r1, sp, #0xc
	mov sl, r1
_08077518:
	adds r0, r5, #0
	bl func_080087C8
	adds r0, r5, #0
	bl func_080088B8
	ldr r2, _08077544 @ =0x0000072A
	adds r0, r5, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #8
	bls _08077532
	b _08077796
_08077532:
	lsls r0, r0, #2
	ldr r1, _08077548 @ =_0807754C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807753C: .4byte vtable_unk_080E5B80
_08077540: .4byte 0x00000889
_08077544: .4byte 0x0000072A
_08077548: .4byte _0807754C
_0807754C: @ jump table
	.4byte _08077570 @ case 0
	.4byte _080775A0 @ case 1
	.4byte _080775BC @ case 2
	.4byte _080776C4 @ case 3
	.4byte _08077738 @ case 4
	.4byte _08077758 @ case 5
	.4byte _08077788 @ case 6
	.4byte _08077650 @ case 7
	.4byte _080776A8 @ case 8
_08077570:
	ldr r4, _08077598 @ =0x00000716
	adds r2, r5, r4
	movs r1, #0
	strh r1, [r2]
	movs r6, #0xe3
	lsls r6, r6, #3
	adds r0, r5, r6
	strh r1, [r0]
	movs r0, #0xe4
	lsls r0, r0, #3
	adds r1, r5, r0
	ldrh r0, [r2]
	lsls r0, r0, #0x10
	str r0, [r1]
	ldr r2, _0807759C @ =0x0000072A
	adds r1, r5, r2
	movs r0, #1
	strh r0, [r1]
	b _08077796
	.align 2, 0
_08077598: .4byte 0x00000716
_0807759C: .4byte 0x0000072A
_080775A0:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080775AE
	b _08077796
_080775AE:
	ldr r3, _080775B8 @ =0x0000072A
	adds r1, r5, r3
	movs r0, #2
	strh r0, [r1]
	b _08077796
	.align 2, 0
_080775B8: .4byte 0x0000072A
_080775BC:
	ldr r4, _08077634 @ =0x00000716
	adds r3, r5, r4
	ldrh r1, [r3]
	ldr r4, _08077638 @ =0x0000FFF0
	adds r0, r4, #0
	ands r0, r1
	movs r6, #0xe3
	lsls r6, r6, #3
	adds r2, r5, r6
	strh r0, [r2]
	movs r0, #0xe4
	lsls r0, r0, #3
	adds r1, r5, r0
	ldr r0, [r1]
	movs r6, #0x80
	lsls r6, r6, #8
	adds r0, r0, r6
	str r0, [r1]
	asrs r0, r0, #0x10
	strh r0, [r3]
	ldrh r1, [r2]
	ands r0, r4
	cmp r1, r0
	beq _080775F2
	adds r0, r5, #0
	bl func_08077A1C
_080775F2:
	ldr r1, _0807763C @ =0x0000071C
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0x8a
	bgt _080775FE
	b _08077796
_080775FE:
	ldr r2, _08077640 @ =0x00000724
	adds r1, r5, r2
	ldr r3, _08077644 @ =0x00000714
	adds r0, r5, r3
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	str r0, [r1]
	ldr r0, [sp, #4]
	ldr r1, _08077648 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #0
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r4, _0807764C @ =0x0000072A
	adds r1, r5, r4
	movs r0, #7
	strh r0, [r1]
	b _08077796
	.align 2, 0
_08077634: .4byte 0x00000716
_08077638: .4byte 0x0000FFF0
_0807763C: .4byte 0x0000071C
_08077640: .4byte 0x00000724
_08077644: .4byte 0x00000714
_08077648: .4byte 0x00000889
_0807764C: .4byte 0x0000072A
_08077650:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0807765E
	b _08077796
_0807765E:
	ldr r6, _080776A0 @ =0x0000072A
	adds r1, r5, r6
	movs r0, #8
	strh r0, [r1]
	adds r0, r5, #0
	bl func_08077A1C
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	movs r3, #0xc8
	lsls r3, r3, #3
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	ldr r0, [sp, #4]
	ldr r1, _080776A4 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #0
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	b _08077796
	.align 2, 0
_080776A0: .4byte 0x0000072A
_080776A4: .4byte 0x00000889
_080776A8:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08077796
	ldr r4, _080776C0 @ =0x0000072A
	adds r1, r5, r4
	movs r0, #3
	strh r0, [r1]
	b _08077796
	.align 2, 0
_080776C0: .4byte 0x0000072A
_080776C4:
	ldr r6, _08077724 @ =0x00000716
	adds r2, r5, r6
	ldrh r1, [r2]
	ldr r3, _08077728 @ =0x0000FFF0
	adds r0, r3, #0
	ands r0, r1
	movs r4, #0xe3
	lsls r4, r4, #3
	adds r1, r5, r4
	strh r0, [r1]
	adds r6, #0xa
	adds r4, r5, r6
	ldr r0, [r4]
	movs r6, #0x80
	lsls r6, r6, #8
	adds r0, r0, r6
	str r0, [r4]
	asrs r0, r0, #0x10
	strh r0, [r2]
	ldrh r1, [r1]
	ands r0, r3
	cmp r1, r0
	beq _080776F8
	adds r0, r5, #0
	bl func_08077A1C
_080776F8:
	ldr r0, _0807772C @ =0x00000724
	adds r1, r5, r0
	ldr r0, [r1]
	adds r0, r0, r6
	str r0, [r1]
	asrs r0, r0, #0x10
	ldr r2, _08077730 @ =0x00000714
	adds r1, r5, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #0x12
	cmp r0, r1
	bne _08077796
	movs r0, #0x96
	lsls r0, r0, #1
	str r0, [r4]
	ldr r3, _08077734 @ =0x0000072A
	adds r1, r5, r3
	movs r0, #4
	strh r0, [r1]
	b _08077796
	.align 2, 0
_08077724: .4byte 0x00000716
_08077728: .4byte 0x0000FFF0
_0807772C: .4byte 0x00000724
_08077730: .4byte 0x00000714
_08077734: .4byte 0x0000072A
_08077738:
	movs r4, #0xe4
	lsls r4, r4, #3
	adds r1, r5, r4
	ldr r0, [r1]
	subs r0, #1
	str r0, [r1]
	cmp r0, #0
	bge _08077796
	ldr r6, _08077754 @ =0x0000072A
	adds r1, r5, r6
	movs r0, #5
	strh r0, [r1]
	b _08077796
	.align 2, 0
_08077754: .4byte 0x0000072A
_08077758:
	ldr r0, [sp, #4]
	ldr r1, _08077780 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #0
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r0, _08077784 @ =0x0000072A
	adds r1, r5, r0
	movs r0, #6
	strh r0, [r1]
	b _08077796
	.align 2, 0
_08077780: .4byte 0x00000889
_08077784: .4byte 0x0000072A
_08077788:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08077796
	movs r7, #1
_08077796:
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _08077808 @ =0x00000716
	adds r1, r5, r3
	ldrh r1, [r1]
	strh r1, [r2]
	strh r1, [r0, #0x16]
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	ldr r4, _0807780C @ =0x00000714
	adds r1, r5, r4
	ldrh r1, [r1]
	strh r1, [r2]
	strh r1, [r0, #0x1a]
	cmp r7, #1
	beq _080777C0
	b _08077518
_080777C0:
	movs r0, #0
	str r0, [sp, #8]
	mov r6, r8
	str r6, [sp, #0xc]
	mov r1, sl
	str r0, [r1, #4]
	str r0, [r6]
	mov r2, sb
	str r0, [r2]
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _080777E4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080777E4:
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _080777F6
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080777F6:
	mov r0, sb
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08077808: .4byte 0x00000716
_0807780C: .4byte 0x00000714

	thumb_func_start func_08077810
func_08077810: @ 0x08077810
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _08077974 @ =0xFFFFF7FC
	add sp, r4
	adds r5, r0, #0
	bl func_08008918
	mov r1, sp
	movs r4, #0
	strh r4, [r1]
	strh r4, [r0, #0x14]
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x16]
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x18]
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1a]
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1c]
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	ldr r1, _08077978 @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	ldr r1, _0807797C @ =0x0600FFE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	movs r6, #1
	rsbs r6, r6, #0
	ldr r0, _08077980 @ =0x0600C800
	mov sb, r0
	movs r1, #0x80
	lsls r1, r1, #4
	mov r8, r1
	adds r0, r6, #0
	mov r1, sb
	mov r2, r8
	bl func_08008EB8
	ldr r1, _08077984 @ =0x0600F000
	adds r0, r6, #0
	mov r2, r8
	bl func_08008EB8
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	movs r3, #0x90
	lsls r3, r3, #2
	adds r2, r3, #0
	strh r2, [r1]
	movs r7, #0
	mov sl, r7
	strh r2, [r0]
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	ldr r3, _08077988 @ =0x0000994A
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	ldr r7, _0807798C @ =0x00001E42
	adds r1, r7, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	ldr r0, _08077990 @ =0x0874E648
	ldr r1, _08077994 @ =0x06008000
	bl func_080D102C
	ldr r0, _08077998 @ =0x0874EB40
	movs r4, #0xa0
	lsls r4, r4, #0x13
	adds r1, r4, #0
	movs r2, #0x20
	bl func_08008E64
	ldr r0, _0807799C @ =0x0874ECCC
	mov r1, sb
	bl func_080D102C
	mov r0, sl
	strh r0, [r4]
	ldr r1, _080779A0 @ =0x05000042
	ldr r2, _080779A4 @ =0x00007BDE
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _080779A8 @ =0x00003DEF
	adds r0, r3, #0
	strh r0, [r1]
	add r4, sp, #4
	adds r0, r6, #0
	adds r1, r4, #0
	mov r2, r8
	bl func_08008EB8
	ldr r6, _080779AC @ =0x00002060
	movs r2, #0
	mov sb, r4
	movs r7, #6
	add r7, sp
	mov r8, r7
_0807791E:
	movs r5, #0
	lsls r1, r2, #7
	lsls r0, r2, #1
	adds r4, r6, #0
	adds r4, #0x38
	adds r2, #1
	mov sl, r2
	adds r0, #1
	lsls r0, r0, #6
	adds r3, r6, #0
	adds r3, #0x1c
	mov r7, r8
	adds r2, r0, r7
	add r1, r8
_0807793A:
	adds r0, r6, r5
	strh r0, [r1]
	strh r3, [r2]
	adds r3, #1
	adds r2, #2
	adds r1, #2
	adds r5, #1
	cmp r5, #0x1b
	ble _0807793A
	lsls r0, r4, #0x10
	lsrs r6, r0, #0x10
	mov r2, sl
	cmp r2, #0xf
	ble _0807791E
	ldr r1, _08077984 @ =0x0600F000
	movs r2, #0x80
	lsls r2, r2, #4
	mov r0, sb
	bl func_08008E64
	ldr r3, _080779B0 @ =0x00000804
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08077974: .4byte 0xFFFFF7FC
_08077978: .4byte 0x06007FE0
_0807797C: .4byte 0x0600FFE0
_08077980: .4byte 0x0600C800
_08077984: .4byte 0x0600F000
_08077988: .4byte 0x0000994A
_0807798C: .4byte 0x00001E42
_08077990: .4byte 0x0874E648
_08077994: .4byte 0x06008000
_08077998: .4byte 0x0874EB40
_0807799C: .4byte 0x0874ECCC
_080779A0: .4byte 0x05000042
_080779A4: .4byte 0x00007BDE
_080779A8: .4byte 0x00003DEF
_080779AC: .4byte 0x00002060
_080779B0: .4byte 0x00000804

	thumb_func_start func_080779B4
func_080779B4: @ 0x080779B4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r4, r0, #0
	ldr r1, _08077A14 @ =0x06000C00
	movs r2, #0xe0
	lsls r2, r2, #4
	movs r0, #0
	bl func_08008EB8
	mov r5, sp
	movs r0, #0x1c
	mov sb, r0
	movs r0, #2
	mov r8, r0
	adds r4, #0x14
	ldr r7, _08077A18 @ =0x06001A00
	movs r6, #8
_080779DC:
	mov r0, sb
	strh r0, [r5]
	mov r0, r8
	strh r0, [r5, #2]
	ldr r0, [sp]
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	adds r0, r4, #0
	adds r1, r7, #0
	movs r2, #0xe0
	lsls r2, r2, #3
	bl func_08008E64
	movs r0, #0xe0
	lsls r0, r0, #3
	adds r7, r7, r0
	subs r6, #1
	cmp r6, #0
	bge _080779DC
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08077A14: .4byte 0x06000C00
_08077A18: .4byte 0x06001A00

	thumb_func_start func_08077A1C
func_08077A1C: @ 0x08077A1C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x54
	adds r5, r0, #0
	ldr r0, _08077B0C @ =0x0000071C
	adds r4, r5, r0
	ldr r0, [r4]
	adds r0, #0xb
	mov r8, r0
	movs r0, #0xf
	mov r1, r8
	ands r1, r0
	mov r8, r1
	add r2, sp, #0x40
	movs r0, #0x1c
	movs r1, #2
	strh r0, [r2]
	strh r1, [r2, #2]
	ldr r0, [sp, #0x40]
	adds r1, r5, #0
	adds r1, #0x14
	movs r2, #0
	bl func_0804E7A0
	movs r3, #0xe5
	lsls r3, r3, #3
	adds r2, r5, r3
	ldrb r0, [r2]
	add r7, sp, #0x30
	cmp r0, #0
	beq _08077B18
	ldr r0, [r4]
	ldr r4, _08077B10 @ =0x0000072C
	adds r1, r5, r4
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08077B14
	add r2, sp, #0x2c
	add r6, sp, #0x44
	mov sb, r6
	movs r1, #0x20
	mov r0, sp
	adds r0, #0x2a
_08077A7E:
	strb r1, [r0]
	subs r0, #1
	add r3, sp, #0xc
	cmp r0, r3
	bge _08077A7E
	movs r0, #0
	strb r0, [r2]
	movs r3, #0
	ldr r4, _08077B0C @ =0x0000071C
	adds r0, r5, r4
	ldr r0, [r0]
	ldr r6, _08077B10 @ =0x0000072C
	adds r1, r5, r6
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldrb r0, [r1]
	cmp r0, #0
	beq _08077AB0
_08077AA6:
	adds r3, #1
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08077AA6
_08077AB0:
	cmp r3, #0
	ble _08077AE6
	movs r0, #0x1c
	subs r0, r0, r3
	asrs r6, r0, #1
	movs r2, #0
	cmp r2, r3
	bge _08077AE6
	ldr r1, _08077B0C @ =0x0000071C
	adds r0, r5, r1
	ldr r0, [r0]
	ldr r4, _08077B10 @ =0x0000072C
	adds r1, r5, r4
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r4, r0, r1
	adds r1, r6, #0
	add r1, sp
	adds r1, #0xc
_08077AD6:
	ldr r0, [r4]
	adds r0, r0, r2
	ldrb r0, [r0]
	strb r0, [r1]
	adds r1, #1
	adds r2, #1
	cmp r2, r3
	blt _08077AD6
_08077AE6:
	movs r3, #0
	movs r4, #1
	movs r1, #0x1c
	movs r2, #2
	add r0, sp, #0x44
	strh r1, [r0]
	mov r6, sb
	strh r2, [r6, #2]
	ldr r0, [sp, #0x44]
	adds r1, r5, #0
	adds r1, #0x14
	add r2, sp, #0xc
	str r2, [sp]
	str r3, [sp, #4]
	str r4, [sp, #8]
	movs r2, #0
	bl func_0804E958
	b _08077B18
	.align 2, 0
_08077B0C: .4byte 0x0000071C
_08077B10: .4byte 0x0000072C
_08077B14:
	movs r0, #0
	strb r0, [r2]
_08077B18:
	ldr r3, _08077B68 @ =0x0000071C
	adds r1, r5, r3
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	adds r0, r5, #0
	bl func_08008910
	adds r1, r5, #0
	adds r1, #0x14
	adds r5, r0, #0
	mov r4, r8
	lsls r2, r4, #3
	subs r2, r2, r4
	lsls r2, r2, #8
	ldr r6, _08077B6C @ =0x06000C00
	adds r2, r2, r6
	add r0, sp, #0x30
	movs r3, #0xe0
	lsls r3, r3, #3
	bl func_08008F0C
	mov r8, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08077B70
	cmp r1, #0
	beq _08077B5E
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08077B5E:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08077C30
	.align 2, 0
_08077B68: .4byte 0x0000071C
_08077B6C: .4byte 0x06000C00
_08077B70:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x4c]
	ldr r0, [r5]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x48]
	add r1, sp, #0x4c
	add r0, sp, #0x48
	cmp r4, #1
	bhs _08077B88
	adds r0, r1, #0
_08077B88:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08077BA6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08077BAA
	mov r0, sb
	bl func_080D3BC0
	b _08077BAA
_08077BA6:
	movs r0, #0
	mov sb, r0
_08077BAA:
	adds r4, r0, #0
	str r4, [sp, #0x50]
	ldr r2, [r5]
	adds r3, r4, #0
	cmp r2, sl
	beq _08077BCE
_08077BB6:
	cmp r3, #0
	beq _08077BC6
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08077BC6:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08077BB6
_08077BCE:
	adds r4, r3, #0
	ldr r0, [sp, #0x4c]
	cmp r0, #1
	bne _08077BEA
	cmp r4, #0
	beq _08077BE6
	adds r0, r4, #0
	mov r1, r8
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_08077BE6:
	adds r4, #0x10
	b _08077C0C
_08077BEA:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _08077C0A
_08077BF2:
	cmp r2, #0
	beq _08077C02
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08077C02:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08077BF2
_08077C0A:
	adds r4, r2, #0
_08077C0C:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _08077C1C
_08077C16:
	adds r1, #0x10
	cmp r1, r2
	bne _08077C16
_08077C1C:
	cmp r0, #0
	beq _08077C24
	bl free
_08077C24:
	ldr r0, [sp, #0x50]
	add r0, sb
	ldr r7, [sp, #0x50]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_08077C30:
	add sp, #0x54
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_08077C40
func_08077C40: @ 0x08077C40
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08077C68 @ =vtable_unk_080E7BA4
	str r0, [r4]
	movs r0, #0xe6
	lsls r0, r0, #3
	bl __builtin_new
	bl func_080773E8
	str r0, [r4, #4]
	ldr r1, [r5]
	movs r0, #0
	str r0, [r5]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08077C68: .4byte vtable_unk_080E7BA4
_08077C6C:
	.byte 0x30, 0xB5, 0x04, 0x1C
	.byte 0x0D, 0x1C, 0x0D, 0x48, 0x20, 0x60, 0xA1, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68
	.byte 0x08, 0x1C, 0x03, 0x21, 0x5B, 0xF0, 0x46, 0xFE, 0x61, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x48, 0x68
	.byte 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0x5B, 0xF0, 0x3D, 0xFE, 0x20, 0x1C, 0x29, 0x1C, 0x88, 0xF7
	.byte 0xA5, 0xFD, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xA4, 0x7B, 0x0E, 0x08, 0x30, 0xB5, 0x81, 0xB0
	.byte 0x05, 0x1C, 0x0C, 0x1C, 0x61, 0x68, 0x68, 0x46, 0xFF, 0xF7, 0xEA, 0xFB, 0x00, 0x99, 0x00, 0x29
	.byte 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0x5B, 0xF0, 0x23, 0xFE, 0xA1, 0x68
	.byte 0x00, 0x20, 0xA0, 0x60, 0x29, 0x60, 0x28, 0x1C, 0x01, 0xB0, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47

	thumb_func_start func_08077CE0
func_08077CE0: @ 0x08077CE0
	push {r4, r5, lr}
	sub sp, #0x14
	adds r5, r0, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	adds r0, r5, #0
	bl func_08008918
	adds r1, r0, #0
	add r4, sp, #4
	movs r0, #0
	str r0, [sp, #4]
	str r0, [r4, #4]
	ldr r0, _08077D2C @ =vtable_unk_080E5B80
	str r0, [sp, #0xc]
	add r0, sp, #0x10
	bl func_08009300
	ldr r1, _08077D30 @ =0x00000889
	add r0, sp, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r4, #0
	bl _call_via_r2
	b _08077D40
	.align 2, 0
_08077D2C: .4byte vtable_unk_080E5B80
_08077D30: .4byte 0x00000889
_08077D34:
	adds r0, r5, #0
	bl func_080785C8
	adds r0, r5, #0
	bl func_080087C8
_08077D40:
	ldr r1, [sp, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08077D34
	adds r0, r4, #0
	movs r1, #2
	bl func_080094B8
	add sp, #0x14
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08077D5C
func_08077D5C: @ 0x08077D5C
	push {r4, r5, lr}
	sub sp, #0x14
	adds r5, r0, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	adds r0, r5, #0
	bl func_08008918
	adds r1, r0, #0
	add r4, sp, #4
	movs r0, #0
	str r0, [sp, #4]
	str r0, [r4, #4]
	ldr r0, _08077DA8 @ =vtable_unk_080E5B80
	str r0, [sp, #0xc]
	add r0, sp, #0x10
	bl func_08009300
	ldr r1, _08077DAC @ =0x00000889
	add r0, sp, #0x10
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r1, [r0, #8]
	ldr r2, [r1, #0x10]
	adds r1, r4, #0
	bl _call_via_r2
	b _08077DBC
	.align 2, 0
_08077DA8: .4byte vtable_unk_080E5B80
_08077DAC: .4byte 0x00000889
_08077DB0:
	adds r0, r5, #0
	bl func_080785C8
	adds r0, r5, #0
	bl func_080087C8
_08077DBC:
	ldr r1, [sp, #4]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08077DB0
	adds r0, r4, #0
	movs r1, #2
	bl func_080094B8
	add sp, #0x14
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08077DD8
func_08077DD8: @ 0x08077DD8
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0x30
	adds r4, r0, #0
	movs r0, #0
	mov sb, r0
	add r0, sp, #0xc
	movs r1, #0
	bl func_080091E8
	adds r0, r4, #0
	bl func_08008920
	mov r8, r0
	adds r0, r4, #0
	bl func_08008918
	adds r6, r0, #0
	adds r0, r4, #0
	bl func_08008940
	adds r5, r0, #0
	adds r0, r4, #0
	bl func_0800894C
	adds r4, #0x18
	str r5, [sp]
	str r0, [sp, #4]
	mov r0, sb
	str r0, [sp, #8]
	adds r0, r4, #0
	add r1, sp, #0xc
	mov r2, r8
	adds r3, r6, #0
	bl func_08050D3C
	add sp, #0x30
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08077E34
func_08077E34: @ 0x08077E34
	push {r4, r5, r6, lr}
	movs r3, #0
	lsls r5, r1, #0xb
	movs r6, #0xc0
	lsls r6, r6, #0x13
_08077E3E:
	movs r1, #0
	lsls r0, r3, #6
	adds r4, r3, #1
	adds r0, r0, r6
	adds r3, r5, r0
_08077E48:
	ldrh r0, [r2]
	strh r0, [r3]
	adds r2, #2
	adds r3, #2
	adds r1, #1
	cmp r1, #0x1d
	bls _08077E48
	adds r3, r4, #0
	cmp r3, #0xc
	bls _08077E3E
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08077E64
func_08077E64: @ 0x08077E64
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r1, #0
	adds r6, r2, #0
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #0x20]
	ldr r2, [sp, #0x24]
	adds r5, r6, r0
	adds r1, r1, r3
	mov sb, r1
	cmp r3, sb
	bhs _08077EB2
	lsls r0, r6, #1
	mov r8, r0
	lsls r4, r4, #0xb
	mov ip, r4
_08077E88:
	adds r1, r6, #0
	adds r4, r3, #1
	cmp r1, r5
	bhs _08077EAC
	lsls r0, r3, #6
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r0, r0, r3
	add r0, ip
	mov r7, r8
	adds r3, r7, r0
_08077E9E:
	ldrh r0, [r2]
	strh r0, [r3]
	adds r2, #2
	adds r3, #2
	adds r1, #1
	cmp r1, r5
	blo _08077E9E
_08077EAC:
	adds r3, r4, #0
	cmp r3, sb
	blo _08077E88
_08077EB2:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08077EC0
func_08077EC0: @ 0x08077EC0
	push {r4, r5, r6, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r0, [r4, #8]
	adds r0, #0x10
	bl func_0800E324
	adds r6, r0, #0
	movs r0, #0
	cmp r6, #3
	bne _08077ED8
	movs r0, #1
_08077ED8:
	adds r5, r0, #0
	ldr r0, _08077F38 @ =0x08755848
	cmp r5, #0
	beq _08077EE2
	ldr r0, _08077F3C @ =0x0875822C
_08077EE2:
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl func_080D102C
	ldr r0, _08077F40 @ =0x08757AE0
	cmp r5, #0
	beq _08077EF2
	ldr r0, _08077F44 @ =0x0875A358
_08077EF2:
	ldr r1, _08077F48 @ =0x05000020
	movs r2, #0xc0
	bl func_08008E64
	ldr r2, _08077F4C @ =0x08755230
	cmp r5, #0
	beq _08077F02
	ldr r2, _08077F50 @ =0x08757C14
_08077F02:
	adds r0, r4, #0
	movs r1, #0x1e
	bl func_08077E34
	ldr r2, _08077F54 @ =0x0875553C
	cmp r5, #0
	beq _08077F12
	ldr r2, _08077F58 @ =0x08757F20
_08077F12:
	adds r0, r4, #0
	movs r1, #0x1d
	bl func_08077E34
	cmp r6, #0
	bne _08077F60
	movs r0, #5
	str r0, [sp]
	movs r0, #3
	str r0, [sp, #4]
	ldr r0, _08077F5C @ =0x08757BD8
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0x1e
	movs r2, #0xa
	movs r3, #0xa
	bl func_08077E64
	b _08077F7C
	.align 2, 0
_08077F38: .4byte 0x08755848
_08077F3C: .4byte 0x0875822C
_08077F40: .4byte 0x08757AE0
_08077F44: .4byte 0x0875A358
_08077F48: .4byte 0x05000020
_08077F4C: .4byte 0x08755230
_08077F50: .4byte 0x08757C14
_08077F54: .4byte 0x0875553C
_08077F58: .4byte 0x08757F20
_08077F5C: .4byte 0x08757BD8
_08077F60:
	cmp r6, #2
	bne _08077F7C
	movs r0, #5
	str r0, [sp]
	movs r0, #3
	str r0, [sp, #4]
	ldr r0, _08077FB4 @ =0x08757BAC
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0x1e
	movs r2, #0xa
	movs r3, #0xa
	bl func_08077E64
_08077F7C:
	cmp r6, #1
	bne _08077F98
	movs r0, #3
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	ldr r0, _08077FB8 @ =0x08757BCC
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0x1d
	movs r2, #0x18
	movs r3, #7
	bl func_08077E64
_08077F98:
	ldr r0, [r4, #8]
	bl func_08010E48
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08077FD0
	movs r0, #3
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	cmp r5, #0
	beq _08077FC0
	ldr r0, _08077FBC @ =0x0875A418
	b _08077FC2
	.align 2, 0
_08077FB4: .4byte 0x08757BAC
_08077FB8: .4byte 0x08757BCC
_08077FBC: .4byte 0x0875A418
_08077FC0:
	ldr r0, _08077FEC @ =0x08757BA0
_08077FC2:
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0x1d
	movs r2, #0
	movs r3, #5
	bl func_08077E64
_08077FD0:
	ldr r0, [r4, #8]
	bl func_08010E50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08078004
	movs r0, #2
	str r0, [sp]
	str r0, [sp, #4]
	cmp r5, #0
	beq _08077FF4
	ldr r0, _08077FF0 @ =0x0875A438
	b _08077FF6
	.align 2, 0
_08077FEC: .4byte 0x08757BA0
_08077FF0: .4byte 0x0875A438
_08077FF4:
	ldr r0, _08078020 @ =0x08757C0C
_08077FF6:
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0x1d
	movs r2, #0xe
	movs r3, #5
	bl func_08077E64
_08078004:
	ldr r0, [r4, #8]
	bl func_08010E58
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08078038
	movs r0, #3
	str r0, [sp]
	str r0, [sp, #4]
	cmp r5, #0
	beq _08078028
	ldr r0, _08078024 @ =0x0875A424
	b _0807802A
	.align 2, 0
_08078020: .4byte 0x08757C0C
_08078024: .4byte 0x0875A424
_08078028:
	ldr r0, _08078040 @ =0x08757BF8
_0807802A:
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0x1d
	movs r2, #0x1b
	movs r3, #6
	bl func_08077E64
_08078038:
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08078040: .4byte 0x08757BF8

	thumb_func_start func_08078044
func_08078044: @ 0x08078044
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	adds r7, r0, #0
	mov sl, r1
	str r2, [sp, #0x24]
	adds r0, #0x8c
	ldr r0, [r0]
	adds r3, r0, r1
	movs r0, #0xe8
	lsls r0, r0, #8
	cmp r3, r0
	ble _08078068
	adds r3, r0, #0
	b _08078072
_08078068:
	ldr r0, _08078088 @ =0x000007FF
	cmp r3, r0
	bgt _08078072
	movs r3, #0x80
	lsls r3, r3, #4
_08078072:
	adds r1, r7, #0
	adds r1, #0x90
	ldr r0, [r1]
	ldr r4, [sp, #0x24]
	adds r2, r0, r4
	movs r0, #0xc0
	lsls r0, r0, #7
	cmp r2, r0
	ble _0807808C
	adds r2, r0, #0
	b _08078096
	.align 2, 0
_08078088: .4byte 0x000007FF
_0807808C:
	ldr r0, _08078108 @ =0x000003FF
	cmp r2, r0
	bgt _08078096
	movs r2, #0x80
	lsls r2, r2, #3
_08078096:
	adds r0, r7, #0
	adds r0, #0x8c
	str r3, [r0]
	str r2, [r1]
	adds r0, r3, #0
	cmp r0, #0
	bge _080780A6
	adds r0, #0xff
_080780A6:
	asrs r0, r0, #8
	mov sb, r0
	adds r0, r2, #0
	cmp r0, #0
	bge _080780B2
	adds r0, #0xff
_080780B2:
	asrs r0, r0, #8
	mov r8, r0
	mov r0, sl
	cmp r0, #0
	bne _0807810C
	ldr r1, [sp, #0x24]
	cmp r1, #0
	bne _0807810C
	adds r4, r7, #0
	adds r4, #0x78
	adds r0, r4, #0
	bl func_0805E8F0
	adds r0, r7, #0
	bl func_08008920
	adds r5, r0, #0
	ldr r1, [r7, #0x78]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [r7, #0x7c]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #4
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	adds r0, r7, #0
	adds r0, #0x20
	mov r3, r8
	str r3, [sp]
	adds r1, r5, #0
	add r2, sp, #4
	mov r3, sb
	bl func_08075AE8
	b _08078126
	.align 2, 0
_08078108: .4byte 0x000003FF
_0807810C:
	adds r0, r7, #0
	bl func_08008920
	adds r1, r0, #0
	adds r0, r7, #0
	adds r0, #0x20
	adds r2, r7, #0
	adds r2, #0x58
	mov r4, r8
	str r4, [sp]
	mov r3, sb
	bl func_08075AE8
_08078126:
	adds r0, r7, #0
	adds r0, #0x94
	ldr r6, [r0]
	str r0, [sp, #0x28]
	mov r0, sl
	cmp r0, #0
	bne _0807813A
	ldr r1, [sp, #0x24]
	cmp r1, #0
	beq _080781F6
_0807813A:
	movs r6, #0x28
	ldr r0, [r7, #8]
	bl func_08010E48
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08078164
	ldr r3, _08078160 @ =0x080FD080
	adds r0, r7, #0
	mov r1, sb
	mov r2, r8
	bl func_080782C4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08078164
	movs r6, #0
	b _080781F2
	.align 2, 0
_08078160: .4byte 0x080FD080
_08078164:
	ldr r0, [r7, #8]
	bl func_08010E50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807818C
	ldr r3, _08078188 @ =0x080FD0A8
	adds r0, r7, #0
	mov r1, sb
	mov r2, r8
	bl func_080782C4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807818C
	movs r6, #2
	b _080781F2
	.align 2, 0
_08078188: .4byte 0x080FD0A8
_0807818C:
	ldr r0, [r7, #8]
	bl func_08010E58
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080781B4
	ldr r3, _080781B0 @ =0x080FD094
	adds r0, r7, #0
	mov r1, sb
	mov r2, r8
	bl func_080782C4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080781B4
	movs r6, #1
	b _080781F2
	.align 2, 0
_080781B0: .4byte 0x080FD094
_080781B4:
	ldr r0, [r7, #8]
	ldr r3, _080781D0 @ =0x00002210
	adds r0, r0, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	movs r1, #9
	cmp r0, #0
	bge _080781C6
	movs r1, #3
_080781C6:
	adds r4, r1, #0
	lsls r0, r4, #2
	adds r0, r0, r4
	lsls r5, r0, #2
	b _080781D8
	.align 2, 0
_080781D0: .4byte 0x00002210
_080781D4:
	adds r5, #0x14
	adds r4, #1
_080781D8:
	cmp r4, #0x27
	bgt _080781F2
	ldr r3, _08078204 @ =0x080FD080
	adds r3, r5, r3
	adds r0, r7, #0
	mov r1, sb
	mov r2, r8
	bl func_080782C4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080781D4
	adds r6, r4, #0
_080781F2:
	ldr r4, [sp, #0x28]
	str r6, [r4]
_080781F6:
	cmp r6, #0x1d
	beq _08078214
	cmp r6, #0x1d
	bgt _08078208
	cmp r6, #0xa
	beq _08078228
	b _08078264
	.align 2, 0
_08078204: .4byte 0x080FD080
_08078208:
	cmp r6, #0x28
	bne _08078264
	ldr r4, _08078210 @ =0x080FCE14
	b _08078288
	.align 2, 0
_08078210: .4byte 0x080FCE14
_08078214:
	ldrb r0, [r7, #0x14]
	cmp r0, #0
	beq _08078222
	movs r0, #0x8c
	lsls r0, r0, #1
	adds r4, r7, r0
	b _08078288
_08078222:
	adds r4, r7, #0
	adds r4, #0x98
	b _08078288
_08078228:
	ldrb r0, [r7, #0x14]
	cmp r0, #0
	beq _08078258
	ldr r0, [r7, #8]
	ldr r1, _08078240 @ =0x00001E28
	adds r0, r0, r1
	bl GetRivalEventCount__C12Bachelorette
	cmp r0, #4
	bls _08078248
	ldr r4, _08078244 @ =0x080FD550
	b _08078288
	.align 2, 0
_08078240: .4byte 0x00001E28
_08078244: .4byte 0x080FD550
_08078248:
	ldrb r0, [r7, #0x14]
	cmp r0, #0
	beq _08078258
	ldr r0, _08078254 @ =0x080FD080
	adds r0, #0xcc
	b _08078286
	.align 2, 0
_08078254: .4byte 0x080FD080
_08078258:
	ldr r0, _08078260 @ =0x080FD080
	adds r0, #0xc8
	b _08078286
	.align 2, 0
_08078260: .4byte 0x080FD080
_08078264:
	ldrb r0, [r7, #0x14]
	cmp r0, #0
	beq _0807827C
	ldr r1, _08078278 @ =0x080FD080
	lsls r0, r6, #2
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r1, #4
	b _08078284
	.align 2, 0
_08078278: .4byte 0x080FD080
_0807827C:
	ldr r1, _080782BC @ =0x080FD080
	lsls r0, r6, #2
	adds r0, r0, r6
	lsls r0, r0, #2
_08078284:
	adds r0, r0, r1
_08078286:
	ldr r4, [r0]
_08078288:
	cmp r4, #0
	bne _0807828E
	ldr r4, _080782C0 @ =0x080FCE14
_0807828E:
	movs r3, #0xcc
	lsls r3, r3, #1
	adds r5, r7, r3
	ldr r0, [r5]
	cmp r4, r0
	beq _080782AA
	adds r0, r7, #0
	adds r0, #0x18
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	str r4, [r5]
_080782AA:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080782BC: .4byte 0x080FD080
_080782C0: .4byte 0x080FCE14

	thumb_func_start func_080782C4
func_080782C4: @ 0x080782C4
	push {r4, lr}
	movs r4, #0
	ldrb r0, [r3, #0x10]
	cmp r0, r1
	bhi _080782E2
	ldrb r0, [r3, #0x12]
	cmp r1, r0
	bhi _080782E2
	ldrb r0, [r3, #0x11]
	cmp r0, r2
	bhi _080782E2
	ldrb r3, [r3, #0x13]
	cmp r2, r3
	bhi _080782E2
	movs r4, #1
_080782E2:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_080782EC
func_080782EC: @ 0x080782EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x4c
	mov sl, r0
	adds r3, r1, #0
	str r2, [sp, #0x40]
	movs r0, #0xce
	lsls r0, r0, #1
	add r0, sl
	ldrh r0, [r0, #0x20]
	cmp r2, r0
	blo _0807830C
	b _080785B6
_0807830C:
	movs r6, #0
	ldrh r0, [r3]
	lsls r0, r0, #0x16
	lsrs r1, r0, #0x16
	cmp r1, #0x33
	bhi _0807839A
	lsls r1, r1, #3
	ldr r0, _0807838C @ =0x080FD3A0
	adds r7, r1, r0
	ldr r5, [r7, #4]
	cmp r5, #0
	beq _08078382
	ldrb r1, [r3, #1]
	lsrs r1, r1, #2
	ldrh r0, [r3, #2]
	ldr r2, _08078390 @ =0x000003FF
	ands r0, r2
	lsls r0, r0, #6
	orrs r0, r1
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	ldrb r1, [r3, #3]
	lsrs r1, r1, #2
	ldrh r0, [r3, #4]
	ands r0, r2
	lsls r0, r0, #6
	orrs r0, r1
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	adds r2, r5, #0
	ldrh r0, [r2]
	ldrh r3, [r2, #4]
	cmp r0, r3
	bhs _08078382
	ldrh r0, [r2, #2]
	ldrh r5, [r2, #6]
	cmp r0, r5
	bhs _08078382
_08078358:
	ldrh r0, [r2]
	cmp r0, r4
	bgt _08078370
	ldrh r0, [r2, #4]
	cmp r4, r0
	bge _08078370
	ldrh r0, [r2, #2]
	cmp r0, r1
	bgt _08078370
	ldrh r3, [r2, #6]
	cmp r1, r3
	blt _08078394
_08078370:
	adds r2, #0xc
	ldrh r0, [r2]
	ldrh r5, [r2, #4]
	cmp r0, r5
	bhs _08078382
	ldrh r0, [r2, #2]
	ldrh r3, [r2, #6]
	cmp r0, r3
	blo _08078358
_08078382:
	cmp r6, #0
	bne _080783BC
	adds r6, r7, #0
	b _080783B6
	.align 2, 0
_0807838C: .4byte 0x080FD3A0
_08078390: .4byte 0x000003FF
_08078394:
	adds r6, r2, #0
	adds r6, #8
	b _08078382
_0807839A:
	adds r0, r1, #0
	subs r0, #0x34
	cmp r0, #0xff
	bhi _080783AC
	ldr r6, _080783A8 @ =0x080FD540
	b _080783B6
	.align 2, 0
_080783A8: .4byte 0x080FD540
_080783AC:
	ldr r4, _080783F8 @ =0xFFFFFECC
	adds r0, r1, r4
	cmp r0, #0xff
	bhi _080783B6
	ldr r6, _080783FC @ =0x080FD548
_080783B6:
	cmp r6, #0
	bne _080783BC
	b _080785B6
_080783BC:
	mov sb, sp
	movs r7, #0xee
	lsls r7, r7, #1
	add r7, sl
	add r5, sp, #0x1c
	mov r8, r5
	ldr r3, [r7, #4]
	ldr r1, [r3, #4]
	cmp r1, #0
	beq _08078406
	ldrb r4, [r6]
_080783D2:
	adds r2, r1, #0
	adds r2, #0x10
	movs r5, #0
	ldrb r0, [r1, #0x10]
	cmp r0, r4
	blo _080783EA
	cmp r4, r0
	blo _080783EC
	ldrb r0, [r2, #1]
	ldrb r2, [r6, #1]
	cmp r0, r2
	bhs _080783EC
_080783EA:
	movs r5, #1
_080783EC:
	cmp r5, #0
	bne _08078400
	adds r3, r1, #0
	ldr r1, [r3, #8]
	b _08078402
	.align 2, 0
_080783F8: .4byte 0xFFFFFECC
_080783FC: .4byte 0x080FD548
_08078400:
	ldr r1, [r1, #0xc]
_08078402:
	cmp r1, #0
	bne _080783D2
_08078406:
	mov r4, r8
	str r3, [r4]
	movs r5, #0
	ldr r0, [r7, #4]
	str r0, [sp, #0x20]
	movs r2, #0
	ldr r1, [sp, #0x1c]
	cmp r1, r0
	bne _0807841A
	movs r2, #1
_0807841A:
	cmp r2, #0
	bne _0807843E
	adds r3, r1, #0
	adds r3, #0x10
	movs r4, #0
	ldrb r2, [r6]
	ldrb r0, [r1, #0x10]
	cmp r2, r0
	blo _08078438
	cmp r0, r2
	blo _0807843A
	ldrb r0, [r6, #1]
	ldrb r3, [r3, #1]
	cmp r0, r3
	bhs _0807843A
_08078438:
	movs r4, #1
_0807843A:
	cmp r4, #0
	beq _08078440
_0807843E:
	movs r5, #1
_08078440:
	cmp r5, #0
	beq _08078464
	ldr r0, [sp, #0x1c]
	str r0, [sp, #0x28]
	movs r1, #0
	add r3, sp, #0x2c
	ldr r0, [r6]
	str r0, [sp, #0x2c]
	strb r1, [r3, #4]
	add r2, sp, #0x34
	ldr r0, [sp, #0x28]
	str r0, [sp, #0x34]
	add r0, sp, #0x24
	adds r1, r7, #0
	bl func_080E3054
	ldr r0, [sp, #0x24]
	str r0, [sp, #0x1c]
_08078464:
	ldr r1, [sp, #0x1c]
	ldrb r2, [r6]
	ldrb r4, [r1, #0x14]
	adds r0, r4, #1
	strb r0, [r1, #0x14]
	lsls r4, r4, #0x18
	ldrb r5, [r6, #1]
	lsrs r4, r4, #0x15
	adds r4, r4, r2
	movs r1, #0xce
	lsls r1, r1, #1
	add r1, sl
	movs r3, #0x80
	lsls r3, r3, #1
	add r0, sp, #0x1c
	ldr r2, [sp, #0x40]
	bl func_0805E824
	mov r7, sb
	str r4, [r7]
	str r5, [r7, #4]
	mov r1, sb
	adds r1, #8
	add r0, sp, #0x1c
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r5, r7}
	stm r1!, {r5, r7}
	movs r6, #0xe6
	lsls r6, r6, #1
	add r6, sl
	mov sb, sp
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080784C8
	cmp r1, #0
	beq _080784C0
	adds r0, r1, #0
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080784C0:
	ldr r0, [r6, #4]
	adds r0, #0x1c
	str r0, [r6, #4]
	b _080785B6
_080784C8:
	str r1, [sp, #0x44]
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r2, [r6]
	adds r3, r1, #0
	subs r1, r3, r2
	ldr r0, _08078510 @ =0xB6DB6DB7
	muls r0, r1, r0
	asrs r4, r0, #2
	str r4, [sp, #0x38]
	add r3, sp, #0x3c
	add r0, sp, #0x38
	adds r1, r2, #0
	cmp r4, #1
	bhs _080784E8
	adds r0, r3, #0
_080784E8:
	ldr r0, [r0]
	adds r4, r4, r0
	mov r8, r4
	cmp r4, #0
	beq _08078514
	lsls r4, r4, #3
	mov r5, r8
	subs r0, r4, r5
	lsls r5, r0, #2
	adds r0, r5, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _0807850C
	adds r0, r5, #0
	bl func_080D3BC0
_0807850C:
	ldr r1, [r6]
	b _08078518
	.align 2, 0
_08078510: .4byte 0xB6DB6DB7
_08078514:
	movs r0, #0
	mov sl, r0
_08078518:
	adds r5, r0, #0
	str r5, [sp, #0x48]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r7, [sp, #0x44]
	cmp r2, r7
	beq _08078544
_08078526:
	cmp r3, #0
	beq _0807853A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807853A:
	adds r2, #0x1c
	adds r3, #0x1c
	ldr r0, [sp, #0x44]
	cmp r2, r0
	bne _08078526
_08078544:
	adds r5, r3, #0
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _08078564
	cmp r5, #0
	beq _08078560
	adds r0, r5, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08078560:
	adds r5, #0x1c
	b _0807858A
_08078564:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08078588
_0807856C:
	cmp r2, #0
	beq _08078580
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08078580:
	subs r3, #1
	adds r2, #0x1c
	cmp r3, #0
	bne _0807856C
_08078588:
	adds r5, r2, #0
_0807858A:
	ldr r3, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r3
	beq _0807859A
_08078594:
	adds r0, #0x1c
	cmp r0, r3
	bne _08078594
_0807859A:
	cmp r1, #0
	beq _080785A4
	adds r0, r1, #0
	bl free
_080785A4:
	mov r1, sl
	mov r2, r8
	subs r0, r1, r2
	lsls r0, r0, #2
	ldr r3, [sp, #0x48]
	adds r0, r0, r3
	str r3, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080785B6:
	add sp, #0x4c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_080785C8
func_080785C8: @ 0x080785C8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x24
	adds r6, r0, #0
	bl func_08077DD8
	movs r1, #0xe6
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r5, [r0]
	ldr r7, [r0, #4]
	cmp r5, r7
	beq _08078620
_080785E0:
	adds r0, r6, #0
	bl func_08008920
	adds r4, r0, #0
	ldr r1, [r5, #8]
	ldr r3, [r1]
	ldrh r2, [r5, #0x14]
	lsls r2, r2, #2
	ldr r0, [r5, #0xc]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r0, sp, #4
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	ldr r3, [r5]
	ldr r0, [r5, #4]
	str r0, [sp]
	adds r0, r6, #0
	adds r0, #0x20
	adds r1, r4, #0
	add r2, sp, #4
	bl func_08075AE8
	adds r5, #0x1c
	cmp r5, r7
	bne _080785E0
_08078620:
	ldr r0, [r6, #8]
	ldr r1, _08078658 @ =0x00002210
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0807864E
	adds r0, r6, #0
	bl func_08008920
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008940
	adds r1, r6, #0
	adds r1, #0x1c
	str r0, [sp]
	adds r0, r1, #0
	movs r1, #0x98
	movs r2, #0x50
	adds r3, r4, #0
	bl func_0803C7C8
_0807864E:
	add sp, #0x24
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08078658: .4byte 0x00002210

	thumb_func_start func_0807865C
func_0807865C: @ 0x0807865C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x90
	str r0, [sp, #0x78]
	adds r4, r1, #0
	str r2, [sp, #0x7c]
	adds r6, r3, #0
	ldr r0, _080789F8 @ =vtable_unk_080E7BC0
	ldr r1, [sp, #0x78]
	str r0, [r1]
	movs r0, #0xf6
	lsls r0, r0, #1
	bl __builtin_new
	adds r1, r0, #0
	ldr r2, [sp, #0x7c]
	ldr r0, [r2]
	movs r3, #0
	mov r8, r3
	str r3, [r2]
	str r0, [sp, #0xc]
	add r5, sp, #0x10
	adds r7, r1, #0
	adds r0, r7, #0
	bl func_08008444
	ldr r0, _080789FC @ =vtable_unk_080E7BB4
	str r0, [r7, #4]
	str r4, [r7, #8]
	ldr r0, [sp, #0xc]
	mov r1, r8
	str r1, [sp, #0xc]
	str r0, [r7, #0xc]
	str r6, [r7, #0x10]
	strb r1, [r7, #0x14]
	adds r0, r5, #0
	bl func_0800835C
	add r0, sp, #0x14
	bl func_0800770C
	add r4, sp, #0x14
	adds r0, r7, #0
	adds r0, #0x18
	mov r2, r8
	str r2, [sp]
	str r5, [sp, #4]
	str r4, [sp, #8]
	movs r1, #0
	movs r2, #0x1f
	movs r3, #0xf
	bl func_08050CC0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007714
	adds r0, r5, #0
	movs r1, #2
	bl func_08008364
	adds r0, r7, #0
	adds r0, #0x1c
	bl func_0803C5B0
	adds r0, r7, #0
	adds r0, #0x20
	bl func_080756B0
	adds r5, r7, #0
	adds r5, #0x28
	ldr r1, _08078A00 @ =0x08728208
	adds r0, r5, #0
	bl func_0805E6CC
	adds r0, r7, #0
	adds r0, #0x58
	adds r1, r5, #0
	movs r2, #0
	bl func_0805E790
	adds r0, r7, #0
	adds r0, #0x78
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	adds r0, r7, #0
	adds r0, #0x8c
	mov r3, r8
	str r3, [r0]
	adds r0, #4
	str r3, [r0]
	adds r1, r7, #0
	adds r1, #0x94
	movs r0, #0x28
	str r0, [r1]
	movs r0, #0x98
	adds r0, r0, r7
	mov sl, r0
	strb r3, [r0]
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r1, r1, r7
	mov sb, r1
	mov r2, r8
	strb r2, [r1]
	movs r3, #0xcc
	lsls r3, r3, #1
	adds r0, r7, r3
	mov r1, r8
	str r1, [r0]
	movs r2, #0xce
	lsls r2, r2, #1
	adds r6, r7, r2
	ldr r1, _08078A04 @ =0x087537D0
	adds r0, r6, #0
	bl func_0805E6CC
	movs r3, #0xe6
	lsls r3, r3, #1
	adds r0, r7, r3
	mov r1, r8
	str r1, [r0]
	str r1, [r0, #4]
	movs r2, #0xea
	lsls r2, r2, #1
	adds r0, r7, r2
	str r1, [r0, #4]
	adds r3, #0x10
	adds r4, r7, r3
	str r1, [r4, #4]
	movs r0, #0x18
	bl malloc
	cmp r0, #0
	bne _0807877E
	movs r0, #0x18
	bl func_080D3BC0
_0807877E:
	str r0, [r4, #4]
	mov r1, r8
	str r1, [r4, #8]
	str r1, [r4, #0xc]
	strb r1, [r0]
	str r1, [r0, #4]
	ldr r0, [r4, #4]
	str r0, [r0, #8]
	ldr r0, [r4, #4]
	str r0, [r0, #0xc]
	movs r4, #0
	ldrh r5, [r5, #0x22]
	mov r2, sl
	str r2, [sp, #0x8c]
	mov r3, sb
	str r3, [sp, #0x84]
	mov sb, r6
	mov r0, sp
	adds r0, #0x24
	str r0, [sp, #0x80]
	mov r1, sp
	adds r1, #0x64
	str r1, [sp, #0x88]
	add r2, sp, #0x6c
	mov sl, r2
	cmp r4, r5
	bhs _080787D0
_080787B4:
	add r0, sp, #0x24
	adds r1, r7, #0
	adds r1, #0x28
	adds r2, r4, #0
	bl func_0805E790
	adds r0, r7, #0
	adds r0, #0x20
	add r1, sp, #0x24
	bl func_080757E8
	adds r4, #1
	cmp r4, r5
	blo _080787B4
_080787D0:
	ldr r1, _08078A08 @ =0x080FC6C2
	add r0, sp, #0x24
	movs r2, #8
	bl memcpy
	movs r6, #0
	mov r8, sl
_080787DE:
	lsls r0, r6, #1
	ldr r3, [sp, #0x80]
	adds r0, r3, r0
	ldrh r2, [r0]
	ldr r0, [sp, #0x88]
	mov r1, sb
	bl func_0805E760
	ldr r0, [sp, #0x64]
	ldr r1, [sp, #0x68]
	str r0, [sp, #0x6c]
	str r1, [sp, #0x70]
	movs r4, #0
	ldr r0, [sp, #0x6c]
	movs r1, #0
	cmp r0, #0
	beq _08078804
	mov r0, sl
	ldrh r1, [r0, #4]
_08078804:
	adds r5, r1, #0
	adds r6, #1
	cmp r4, r5
	bhs _0807882E
_0807880C:
	lsls r0, r4, #2
	mov r2, r8
	ldr r1, [r2]
	adds r1, r1, r0
	ldrh r2, [r1]
	add r0, sp, #0x44
	mov r1, sb
	bl func_0805E790
	adds r0, r7, #0
	adds r0, #0x20
	add r1, sp, #0x44
	bl func_080757E8
	adds r4, #1
	cmp r4, r5
	blo _0807880C
_0807882E:
	cmp r6, #3
	bls _080787DE
	ldr r0, [r7, #8]
	adds r0, #0x14
	bl func_08009AF4
	mov sb, r0
	ldr r6, [sp, #0x8c]
	mov r4, sb
	adds r0, r6, #0
	bl strlen
	adds r3, r6, r0
	mov r8, r3
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08078872
	adds r0, r4, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08078860
	adds r4, r5, #0
_08078860:
	mov r0, r8
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_08078872:
	ldr r1, _08078A0C @ =0x080FC6CC
	mov sb, r1
	adds r0, r6, #0
	bl strlen
	adds r2, r6, r0
	mov r8, r2
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080788A8
	mov r0, sb
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08078896
	adds r4, r5, #0
_08078896:
	mov r0, r8
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	mov r3, r8
	adds r1, r3, r4
	movs r0, #0
	strb r0, [r1]
_080788A8:
	ldr r0, _08078A10 @ =0x080FC6D4
	mov r8, r0
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080788DA
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080788CA
	adds r4, r5, #0
_080788CA:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080788DA:
	ldr r0, [r7, #8]
	adds r0, #0x14
	bl func_08009AF4
	mov sb, r0
	ldr r6, [sp, #0x84]
	mov r4, sb
	adds r0, r6, #0
	bl strlen
	adds r1, r6, r0
	mov r8, r1
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807891A
	adds r0, r4, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08078908
	adds r4, r5, #0
_08078908:
	mov r0, r8
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r4
	movs r0, #0
	strb r0, [r1]
_0807891A:
	ldr r3, _08078A14 @ =0x080FC6E8
	mov r8, r3
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807894C
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807893C
	adds r4, r5, #0
_0807893C:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807894C:
	ldr r4, [r7, #8]
	ldr r0, _08078A18 @ =0x00001BD8
	adds r5, r4, r0
	add r0, sp, #0x2c
	adds r1, r5, #0
	bl func_0800E924
	adds r0, r7, #0
	add r1, sp, #0x2c
	movs r2, #0
	bl func_080782EC
	ldr r1, [r7, #8]
	ldr r2, _08078A1C @ =0x0000219C
	adds r0, r1, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	cmp r0, #0
	blt _08078986
	ldr r3, _08078A20 @ =0x00001C70
	adds r1, r1, r3
	add r0, sp, #0x2c
	bl __5ActorRC5Actor
	adds r0, r7, #0
	add r1, sp, #0x2c
	movs r2, #1
	bl func_080782EC
_08078986:
	adds r0, r5, #0
	bl func_0800E934
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080789C4
	ldr r0, _08078A24 @ =0x00001C2C
	adds r4, r4, r0
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080789AC
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #4
	beq _080789C4
_080789AC:
	ldr r1, [r7, #8]
	movs r2, #0xe5
	lsls r2, r2, #5
	adds r1, r1, r2
	add r0, sp, #0x2c
	bl func_0800FFE0
	adds r0, r7, #0
	add r1, sp, #0x2c
	movs r2, #3
	bl func_080782EC
_080789C4:
	adds r0, r5, #0
	bl func_0800E940
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08078AA6
	adds r4, r5, #0
	adds r4, #0x54
	adds r0, r4, #0
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08078A32
	adds r0, r4, #0
	bl func_0800F204
	cmp r0, #1
	bne _08078A32
	adds r0, r4, #0
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x74
	b _08078A28
	.align 2, 0
_080789F8: .4byte vtable_unk_080E7BC0
_080789FC: .4byte vtable_unk_080E7BB4
_08078A00: .4byte 0x08728208
_08078A04: .4byte 0x087537D0
_08078A08: .4byte 0x080FC6C2
_08078A0C: .4byte 0x080FC6CC
_08078A10: .4byte 0x080FC6D4
_08078A14: .4byte 0x080FC6E8
_08078A18: .4byte 0x00001BD8
_08078A1C: .4byte 0x0000219C
_08078A20: .4byte 0x00001C70
_08078A24: .4byte 0x00001C2C
_08078A28:
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x35
	beq _08078AA6
_08078A32:
	adds r0, r5, #0
	adds r0, #0x60
	movs r1, #0x35
	bl func_0800F714
	cmp r0, #0
	bge _08078AA6
	ldr r0, [r7, #8]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl GetShelf__C9FarmHouse
	cmp r0, #0
	beq _08078A5A
	movs r1, #0x35
	bl GetFirstSlotWith__C5ShelfUi
	cmp r0, #0
	bge _08078A70
_08078A5A:
	ldr r1, [r7, #8]
	ldr r0, _08078A6C @ =0x00001CCC
	adds r1, r1, r0
	adds r0, r7, #0
	movs r2, #2
	bl func_080782EC
	b _08078AA6
	.align 2, 0
_08078A6C: .4byte 0x00001CCC
_08078A70:
	add r1, sp, #0x2c
	movs r4, #0x1d
	ldrh r2, [r1]
	ldr r3, _08078AE4 @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1]
	ldrb r4, [r1, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r4
	strb r0, [r1, #1]
	ldrh r4, [r1, #2]
	adds r0, r3, #0
	ands r0, r4
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	ands r2, r0
	strb r2, [r1, #3]
	ldrh r0, [r1, #4]
	ands r3, r0
	strh r3, [r1, #4]
	adds r0, r7, #0
	movs r2, #2
	bl func_080782EC
_08078AA6:
	ldr r1, [sp, #0xc]
	cmp r1, #0
	beq _08078AB8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08078AB8:
	ldr r1, [sp, #0x78]
	str r7, [r1, #4]
	ldr r2, [sp, #0x7c]
	ldr r1, [r2]
	cmp r1, #0
	beq _08078AD0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08078AD0:
	ldr r0, [sp, #0x78]
	add sp, #0x90
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08078AE4: .4byte 0xFFFFFC00
_08078AE8:
	.byte 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x09, 0x48
	.byte 0x20, 0x60, 0x61, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x48, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21
	.byte 0x5A, 0xF0, 0x08, 0xFF, 0x20, 0x1C, 0x29, 0x1C, 0x87, 0xF7, 0x70, 0xFE, 0x30, 0xBC, 0x01, 0xBC
	.byte 0x00, 0x47, 0x00, 0x00, 0xC0, 0x7B, 0x0E, 0x08, 0xF0, 0xB5, 0x57, 0x46, 0x4E, 0x46, 0x45, 0x46
	.byte 0xE0, 0xB4, 0x91, 0xB0, 0x0D, 0x90, 0x0E, 0x90, 0x4F, 0x68, 0x38, 0x1C, 0x8F, 0xF7, 0xF4, 0xFE
	.byte 0x02, 0x1C, 0x15, 0x1C, 0x04, 0xA9, 0xE2, 0x23, 0x5B, 0x01, 0x18, 0x1C, 0x08, 0x80, 0x10, 0x80
	.byte 0xB8, 0x68, 0x30, 0x4B, 0xC0, 0x18, 0x00, 0x78, 0x80, 0x07, 0x00, 0x28, 0x02, 0xDA, 0xF2, 0x20
	.byte 0x40, 0x01, 0x10, 0x80, 0xF2, 0x21, 0x49, 0x01, 0x08, 0x1C, 0x6A, 0x46, 0x10, 0x82, 0xE8, 0x81
	.byte 0xEA, 0x23, 0x5B, 0x01, 0x18, 0x1C, 0x10, 0x82, 0xA8, 0x81, 0x38, 0x1C, 0xFF, 0xF7, 0xA8, 0xF9
	.byte 0x25, 0x49, 0x08, 0x1C, 0x6A, 0x46, 0x10, 0x82, 0x68, 0x81, 0x24, 0x48, 0x00, 0x68, 0x24, 0x49
	.byte 0x0A, 0x68, 0x24, 0x49, 0x90, 0xF7, 0x6E, 0xF9, 0x00, 0x20, 0x23, 0x49, 0x20, 0x22, 0x90, 0xF7
	.byte 0x93, 0xF9, 0x01, 0x20, 0x40, 0x42, 0x21, 0x49, 0x80, 0x22, 0x12, 0x01, 0x90, 0xF7, 0x8C, 0xF9
	.byte 0x03, 0x20, 0x00, 0x90, 0x00, 0x20, 0x01, 0x90, 0x0F, 0x20, 0x02, 0x90, 0x1B, 0x48, 0x13, 0x21
	.byte 0x0A, 0x22, 0x0B, 0x23, 0xD8, 0xF7, 0xB4, 0xFB, 0x3C, 0x1C, 0x1C, 0x34, 0xB9, 0x68, 0x10, 0x31
	.byte 0x20, 0x1C, 0x01, 0x22, 0xC4, 0xF7, 0xC2, 0xF8, 0xB8, 0x68, 0x81, 0x68, 0x20, 0x1C, 0xC4, 0xF7
	.byte 0xE7, 0xFB, 0x38, 0x1C, 0x18, 0x30, 0xD8, 0xF7, 0xC7, 0xF8, 0x28, 0x89, 0x40, 0x21, 0x08, 0x43
	.byte 0x28, 0x81, 0x38, 0x1C, 0xF0, 0x21, 0xC9, 0x01, 0xC8, 0x22, 0x92, 0x01, 0xFF, 0xF7, 0x2A, 0xFA
	.byte 0x38, 0x1C, 0xFF, 0xF7, 0x75, 0xF8, 0x6B, 0x46, 0x24, 0x33, 0x0F, 0x93, 0x68, 0x46, 0x2C, 0x30
	.byte 0x10, 0x90, 0xE0, 0xE0, 0x10, 0x22, 0x00, 0x00, 0x48, 0x1C, 0x00, 0x00, 0x70, 0x9F, 0x0F, 0x08
	.byte 0x74, 0x9F, 0x0F, 0x08, 0x00, 0x80, 0x00, 0x06, 0xE0, 0xFF, 0x00, 0x06, 0x00, 0xE0, 0x00, 0x06
	.byte 0x01, 0x24, 0x01, 0x20, 0x08, 0x40, 0x00, 0x28, 0x7A, 0xD0, 0x3E, 0x69, 0x01, 0x2E, 0x71, 0xD1
	.byte 0x3D, 0x1C, 0x94, 0x35, 0x29, 0x68, 0x28, 0x29, 0x68, 0xD0, 0x30, 0x4A, 0x90, 0x46, 0x88, 0x00
	.byte 0x40, 0x18, 0x80, 0x00, 0x41, 0x46, 0x08, 0x31, 0x40, 0x18, 0x01, 0x68, 0x2C, 0x48, 0x81, 0x42
	.byte 0x5C, 0xDC, 0xB1, 0x20, 0x90, 0xF7, 0xA8, 0xF8, 0x07, 0xAC, 0x20, 0x1C, 0x00, 0x21, 0x8F, 0xF7
	.byte 0x79, 0xFF, 0x20, 0x1C, 0x02, 0x21, 0x8F, 0xF7, 0xC7, 0xFF, 0x28, 0x68, 0x82, 0x00, 0x12, 0x18
	.byte 0x92, 0x00, 0x42, 0x44, 0xF8, 0x68, 0x06, 0x71, 0xF8, 0x68, 0x06, 0x30, 0x0C, 0x23, 0xD6, 0x5E
	.byte 0x0E, 0x23, 0xD1, 0x5E, 0x89, 0x46, 0x05, 0xA9, 0x93, 0x68, 0x1E, 0x4A, 0x92, 0x46, 0x52, 0x46
	.byte 0x13, 0x40, 0x0C, 0x88, 0x1C, 0x4A, 0x90, 0x46, 0x22, 0x40, 0x1A, 0x43, 0x0A, 0x80, 0x36, 0x04
	.byte 0x33, 0x0C, 0x3F, 0x22, 0x94, 0x46, 0x13, 0x40, 0x9B, 0x00, 0x4D, 0x78, 0x03, 0x24, 0x22, 0x1C
	.byte 0x2A, 0x40, 0x1A, 0x43, 0x4A, 0x70, 0xB6, 0x0D, 0x53, 0x46, 0x1E, 0x40, 0x4B, 0x88, 0x42, 0x46
	.byte 0x1A, 0x40, 0x32, 0x43, 0x4A, 0x80, 0x4A, 0x46, 0x12, 0x04, 0x91, 0x46, 0x12, 0x0C, 0x63, 0x46
	.byte 0x1A, 0x40, 0x92, 0x00, 0xCB, 0x78, 0x1C, 0x40, 0x14, 0x43, 0xCC, 0x70, 0x4A, 0x46, 0x92, 0x0D
	.byte 0x53, 0x46, 0x1A, 0x40, 0x91, 0x46, 0x8A, 0x88, 0x43, 0x46, 0x13, 0x40, 0x4A, 0x46, 0x13, 0x43
	.byte 0x8B, 0x80, 0x06, 0x22, 0x5A, 0xF0, 0x4E, 0xFE, 0x71, 0xE0, 0x00, 0x00, 0x80, 0xD0, 0x0F, 0x08
	.byte 0x33, 0x02, 0x00, 0x00, 0xFF, 0x03, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xC7, 0x20, 0x90, 0xF7
	.byte 0x4B, 0xF8, 0x05, 0xE0, 0xCA, 0x20, 0x90, 0xF7, 0x47, 0xF8, 0x38, 0x7D, 0x60, 0x40, 0x38, 0x75
	.byte 0x38, 0x1C, 0x8F, 0xF7, 0xCF, 0xFD, 0x03, 0x1C, 0x08, 0x93, 0x00, 0x25, 0x00, 0x22, 0x00, 0x24
	.byte 0x19, 0x06, 0x58, 0x06, 0xC9, 0x0F, 0xC0, 0x0F, 0x81, 0x42, 0x04, 0xD0, 0x99, 0x06, 0xD8, 0x06
	.byte 0xCC, 0x0F, 0xC0, 0x0F, 0x44, 0x40, 0x80, 0x23, 0x9B, 0x00, 0x00, 0x2C, 0x00, 0xD0, 0x96, 0x3B
	.byte 0x08, 0xAC, 0x61, 0x78, 0x01, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x5B, 0x00, 0x02, 0x20
	.byte 0x08, 0x40, 0x00, 0x28, 0x02, 0xD0, 0xD8, 0x0F, 0x18, 0x18, 0x43, 0x10, 0x21, 0x78, 0x80, 0x20
	.byte 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x1A, 0x1C, 0x40, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0
	.byte 0xD2, 0x1A, 0x20, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD0, 0x5D, 0x42, 0x10, 0x20, 0x08, 0x40
	.byte 0x00, 0x28, 0x00, 0xD0, 0xED, 0x18, 0x38, 0x1C, 0x29, 0x1C, 0xFF, 0xF7, 0x53, 0xF9, 0xE6, 0x23
	.byte 0x5B, 0x00, 0xF8, 0x18, 0x04, 0x68, 0x45, 0x68, 0xAC, 0x42, 0x06, 0xD0, 0x20, 0x1C, 0x08, 0x30
	.byte 0xE5, 0xF7, 0x9E, 0xFD, 0x1C, 0x34, 0xAC, 0x42, 0xF8, 0xD1, 0x38, 0x1C, 0xFF, 0xF7, 0x04, 0xFC
	.byte 0x38, 0x1C, 0x8F, 0xF7, 0x01, 0xFD, 0x38, 0x1C, 0x8F, 0xF7, 0x76, 0xFD, 0x38, 0x1C, 0x8F, 0xF7
	.byte 0x7D, 0xFD, 0x01, 0x1C, 0x02, 0x20, 0x08, 0x40, 0x00, 0x28, 0x00, 0xD1, 0x20, 0xE7, 0x38, 0x1C
	.byte 0xFE, 0xF7, 0xBC, 0xFF, 0xF8, 0x68, 0x00, 0x24, 0xFC, 0x60, 0x04, 0x90, 0x04, 0xA9, 0x09, 0x91
	.byte 0x0F, 0x9A, 0x50, 0x60, 0x04, 0x94, 0x03, 0x90, 0x21, 0x1C, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68
	.byte 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0x5A, 0xF0, 0x85, 0xFD, 0x03, 0x99, 0x03, 0xAB, 0x0B, 0x93
	.byte 0x10, 0x98, 0x41, 0x60, 0x0B, 0x98, 0x04, 0x60, 0x0E, 0x9A, 0x11, 0x60, 0x03, 0x99, 0x00, 0x29
	.byte 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0x5A, 0xF0, 0x73, 0xFD, 0x0D, 0x98
	.byte 0x11, 0xB0, 0x38, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xAA, 0x46, 0xF0, 0xBC, 0x02, 0xBC, 0x08, 0x47

	thumb_func_start func_08078E40
func_08078E40: @ 0x08078E40
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	adds r4, r1, #0
	mov sb, r2
	add r1, sp, #4
	movs r0, #0x1e
	movs r2, #1
	movs r3, #0
	mov r8, r3
	movs r7, #0
	strh r0, [r1]
	movs r0, #1
	mov sl, r0
	strh r2, [r1, #2]
	adds r0, r6, #0
	bl func_080084DC
	ldr r0, _0807900C @ =vtable_unk_080E7BD0
	str r0, [r6, #4]
	str r4, [r6, #8]
	adds r0, r6, #0
	adds r0, #0xc
	movs r1, #1
	bl func_08008B54
	add r2, sp, #8
	movs r0, #0x1c
	movs r1, #2
	strh r0, [r2]
	strh r1, [r2, #2]
	ldr r0, [sp, #8]
	adds r1, r6, #0
	adds r1, #0x14
	movs r2, #0
	bl func_0804E7A0
	ldr r1, _08079010 @ =0x00000714
	adds r4, r6, r1
	ldr r1, _08079014 @ =0x08527094
	adds r0, r4, #0
	bl func_0805E6CC
	ldr r3, _08079018 @ =0x00000744
	adds r5, r6, r3
	ldr r1, _0807901C @ =0x08728208
	adds r0, r5, #0
	bl func_0805E6CC
	ldr r1, _08079020 @ =0x00000774
	adds r0, r6, r1
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r3, #0xf1
	lsls r3, r3, #3
	adds r0, r6, r3
	strh r7, [r0]
	strh r7, [r0, #2]
	strh r7, [r0, #4]
	strh r7, [r0, #6]
	strh r7, [r0, #8]
	str r7, [r0, #0xc]
	mov r1, r8
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	str r7, [r0, #0x14]
	strb r1, [r0, #0x18]
	adds r3, #0x1c
	adds r0, r6, r3
	strb r1, [r0]
	movs r1, #0xf5
	lsls r1, r1, #3
	adds r0, r6, r1
	adds r1, r4, #0
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	ldr r3, _08079024 @ =0x000007BC
	adds r0, r6, r3
	strh r7, [r0]
	strh r7, [r0, #2]
	strh r7, [r0, #4]
	strh r7, [r0, #6]
	strh r7, [r0, #8]
	str r7, [r0, #0xc]
	mov r1, r8
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	str r7, [r0, #0x14]
	strb r1, [r0, #0x18]
	adds r3, #0x1c
	adds r0, r6, r3
	strb r1, [r0]
	ldr r1, _08079028 @ =0x000007DC
	adds r0, r6, r1
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r3, #0xfe
	lsls r3, r3, #3
	adds r0, r6, r3
	strh r7, [r0]
	strh r7, [r0, #2]
	strh r7, [r0, #4]
	strh r7, [r0, #6]
	strh r7, [r0, #8]
	str r7, [r0, #0xc]
	mov r1, r8
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	str r7, [r0, #0x14]
	strb r1, [r0, #0x18]
	adds r3, #0x1c
	adds r0, r6, r3
	strb r1, [r0]
	movs r0, #0x81
	lsls r0, r0, #4
	adds r4, r6, r0
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r4, #4]
	ldr r1, _0807902C @ =0x00000818
	adds r4, r6, r1
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r3, #0x82
	lsls r3, r3, #4
	adds r4, r6, r3
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #6
	bl func_08007B54
	str r0, [r4, #4]
	ldr r0, _08079030 @ =0x00000828
	adds r4, r6, r0
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r1, #0x83
	lsls r1, r1, #4
	adds r4, r6, r1
	adds r0, r4, #0
	bl func_08007874
	adds r0, r4, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r4, #4]
	ldr r3, _08079034 @ =0x00000838
	adds r4, r6, r3
	adds r0, r4, #0
	bl func_08007128
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r1, #0xa6
	lsls r1, r1, #4
	adds r0, r6, r1
	str r7, [r0]
	str r7, [r0, #4]
	ldr r3, _08079038 @ =0x00000A68
	adds r0, r6, r3
	str r7, [r0, #4]
	movs r1, #0x84
	lsls r1, r1, #4
	adds r0, r6, r1
	strh r7, [r0]
	ldr r3, _0807903C @ =0x00000842
	adds r0, r6, r3
	strh r7, [r0]
	adds r1, #0x16
	adds r0, r6, r1
	strh r7, [r0]
	adds r3, #2
	adds r0, r6, r3
	str r7, [r0]
	subs r1, #0xa
	adds r0, r6, r1
	strh r7, [r0]
	adds r3, #0xa
	adds r0, r6, r3
	strh r7, [r0]
	movs r0, #0x80
	lsls r0, r0, #5
	cmp sb, r0
	bne _08079048
	ldr r1, _08079040 @ =0x00000A56
	adds r0, r6, r1
	mov r3, r8
	strb r3, [r0]
	adds r1, #1
	adds r0, r6, r1
	strb r3, [r0]
	ldr r3, _08079044 @ =0x00000A58
	adds r0, r6, r3
	str r7, [r0]
	b _080790C6
	.align 2, 0
_0807900C: .4byte vtable_unk_080E7BD0
_08079010: .4byte 0x00000714
_08079014: .4byte 0x08527094
_08079018: .4byte 0x00000744
_0807901C: .4byte 0x08728208
_08079020: .4byte 0x00000774
_08079024: .4byte 0x000007BC
_08079028: .4byte 0x000007DC
_0807902C: .4byte 0x00000818
_08079030: .4byte 0x00000828
_08079034: .4byte 0x00000838
_08079038: .4byte 0x00000A68
_0807903C: .4byte 0x00000842
_08079040: .4byte 0x00000A56
_08079044: .4byte 0x00000A58
_08079048:
	ldr r0, _08079064 @ =0x00001001
	cmp sb, r0
	bne _0807906C
	ldr r1, _08079068 @ =0x00000A56
	adds r0, r6, r1
	mov r3, r8
	strb r3, [r0]
	adds r1, #1
	adds r0, r6, r1
	mov r3, sl
	strb r3, [r0]
	adds r1, #1
	b _08079082
	.align 2, 0
_08079064: .4byte 0x00001001
_08079068: .4byte 0x00000A56
_0807906C:
	ldr r0, _08079088 @ =0x00001002
	cmp sb, r0
	bne _08079094
	ldr r3, _0807908C @ =0x00000A56
	adds r0, r6, r3
	mov r1, r8
	strb r1, [r0]
	adds r3, #1
	adds r0, r6, r3
	strb r1, [r0]
	ldr r1, _08079090 @ =0x00000A58
_08079082:
	adds r0, r6, r1
	str r7, [r0]
	b _080790C6
	.align 2, 0
_08079088: .4byte 0x00001002
_0807908C: .4byte 0x00000A56
_08079090: .4byte 0x00000A58
_08079094:
	movs r3, #0xa7
	lsls r3, r3, #4
	adds r0, r6, r3
	mov r1, sb
	strh r1, [r0]
	subs r3, #0x14
	adds r2, r6, r3
	ldr r1, _080790D8 @ =0x0810828C
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r2]
	ldr r1, _080790DC @ =0x00000A56
	adds r0, r6, r1
	mov r3, sl
	strb r3, [r0]
	adds r1, #1
	adds r0, r6, r1
	strb r3, [r0]
	ldr r3, _080790E0 @ =0x00000A58
	adds r1, r6, r3
	movs r0, #7
	str r0, [r1]
_080790C6:
	adds r0, r6, #0
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080790D8: .4byte 0x0810828C
_080790DC: .4byte 0x00000A56
_080790E0: .4byte 0x00000A58

	thumb_func_start func_080790E4
func_080790E4: @ 0x080790E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	mov sl, r0
	adds r5, r1, #0
	adds r0, r5, #0
	bl func_08008724
	adds r0, r5, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r5, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _080791C0 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl func_08009300
	str r4, [sp, #4]
	adds r0, r5, #0
	bl func_08079860
	adds r0, r5, #0
	bl func_0807A878
	movs r0, #0
	mov r8, r0
	add r1, sp, #8
	mov sb, r1
	mov r2, sp
	adds r2, #0x14
	str r2, [sp, #0x1c]
_08079148:
	ldr r3, _080791C4 @ =0x00000A58
	adds r0, r5, r3
	ldr r0, [r0]
	cmp r0, #6
	ble _08079154
	b _08079504
_08079154:
	adds r0, r5, #0
	bl func_08008724
	ldr r4, _080791C8 @ =0x00000856
	adds r0, r5, r4
	ldrh r1, [r0]
	movs r6, #0x84
	lsls r6, r6, #4
	adds r2, r5, r6
	strh r1, [r2]
	ldr r3, _080791CC @ =0x00000842
	adds r0, r5, r3
	strh r1, [r0]
	subs r4, #0x12
	adds r1, r5, r4
	ldrh r0, [r2]
	lsls r0, r0, #0x10
	str r0, [r1]
	adds r0, r5, #0
	bl func_08079A64
	ldr r0, [sp, #4]
	ldr r1, _080791D0 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r4, #0
_0807919E:
	adds r0, r5, #0
	bl func_080087C8
	adds r0, r5, #0
	bl func_080088B8
	ldr r6, _080791C4 @ =0x00000A58
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r0, #6
	bhi _080791F4
	lsls r0, r0, #2
	ldr r1, _080791D4 @ =_080791D8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080791C0: .4byte vtable_unk_080E5B80
_080791C4: .4byte 0x00000A58
_080791C8: .4byte 0x00000856
_080791CC: .4byte 0x00000842
_080791D0: .4byte 0x00000889
_080791D4: .4byte _080791D8
_080791D8: @ jump table
	.4byte _080791F4 @ case 0
	.4byte _0807920C @ case 1
	.4byte _0807921C @ case 2
	.4byte _080793D0 @ case 3
	.4byte _08079410 @ case 4
	.4byte _0807945C @ case 5
	.4byte _0807948C @ case 6
_080791F4:
	ldr r1, _08079204 @ =0x0000080C
	adds r0, r5, r1
	movs r1, #1
	strb r1, [r0]
	ldr r2, _08079208 @ =0x00000A58
	adds r0, r5, r2
	str r1, [r0]
	b _080794B6
	.align 2, 0
_08079204: .4byte 0x0000080C
_08079208: .4byte 0x00000A58
_0807920C:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0807921A
	b _080794B6
_0807921A:
	b _08079444
_0807921C:
	adds r0, r5, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080792A0
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0xcb
	bl func_08008B6C
	ldr r6, _0807924C @ =0x0000084C
	adds r1, r5, r6
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	ble _08079250
	subs r0, r2, #1
	strh r0, [r1]
	adds r1, r0, #0
	b _08079252
	.align 2, 0
_0807924C: .4byte 0x0000084C
_08079250:
	movs r1, #0
_08079252:
	ldr r6, _0807928C @ =0x0000084C
	adds r0, r5, r6
	strh r1, [r0]
	ldr r0, _08079290 @ =0x0000084E
	adds r2, r5, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r3, [r2]
	movs r6, #0
	ldrsh r0, [r2, r6]
	cmp r1, r0
	blt _0807926C
	b _080794B6
_0807926C:
	subs r0, r3, #1
	strh r0, [r2]
	movs r1, #0x84
	lsls r1, r1, #4
	adds r0, r5, r1
	ldrh r1, [r0]
	ldr r0, _08079294 @ =0x0000FFF0
	ands r0, r1
	ldr r2, _08079298 @ =0x00000842
	adds r1, r5, r2
	strh r0, [r1]
	ldr r3, _0807929C @ =0x00000A58
	adds r1, r5, r3
	movs r0, #3
	str r0, [r1]
	b _080794B6
	.align 2, 0
_0807928C: .4byte 0x0000084C
_08079290: .4byte 0x0000084E
_08079294: .4byte 0x0000FFF0
_08079298: .4byte 0x00000842
_0807929C: .4byte 0x00000A58
_080792A0:
	adds r0, r5, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08079330
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0xcb
	bl func_08008B6C
	ldr r6, _080792D8 @ =0x0000084C
	adds r3, r5, r6
	movs r0, #0
	ldrsh r1, [r3, r0]
	adds r6, #4
	adds r2, r5, r6
	movs r6, #0
	ldrsh r0, [r2, r6]
	subs r0, #1
	cmp r1, r0
	bge _080792DC
	ldrh r0, [r3]
	adds r0, #1
	strh r0, [r3]
	adds r1, r0, #0
	b _080792E0
	.align 2, 0
_080792D8: .4byte 0x0000084C
_080792DC:
	ldrh r0, [r2]
	subs r1, r0, #1
_080792E0:
	ldr r2, _0807931C @ =0x0000084C
	adds r0, r5, r2
	strh r1, [r0]
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r6, _08079320 @ =0x0000084E
	adds r2, r5, r6
	movs r3, #0
	ldrsh r0, [r2, r3]
	subs r1, r1, r0
	cmp r1, #7
	bgt _080792FA
	b _080794B6
_080792FA:
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	subs r6, #0xe
	adds r0, r5, r6
	ldrh r1, [r0]
	ldr r0, _08079324 @ =0x0000FFF0
	ands r0, r1
	ldr r2, _08079328 @ =0x00000842
	adds r1, r5, r2
	strh r0, [r1]
	ldr r3, _0807932C @ =0x00000A58
	adds r1, r5, r3
	movs r0, #4
	str r0, [r1]
	b _080794B6
	.align 2, 0
_0807931C: .4byte 0x0000084C
_08079320: .4byte 0x0000084E
_08079324: .4byte 0x0000FFF0
_08079328: .4byte 0x00000842
_0807932C: .4byte 0x00000A58
_08079330:
	adds r0, r5, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08079398
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	movs r6, #0x84
	lsls r6, r6, #4
	adds r0, r5, r6
	ldrh r1, [r0]
	ldr r2, _08079388 @ =0x00000856
	adds r0, r5, r2
	strh r1, [r0]
	ldr r3, _0807938C @ =0x0000084C
	adds r0, r5, r3
	movs r6, #0
	ldrsh r1, [r0, r6]
	lsls r1, r1, #1
	adds r2, #2
	adds r0, r5, r2
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r3, #0xa7
	lsls r3, r3, #4
	adds r0, r5, r3
	strh r1, [r0]
	ldr r6, _08079390 @ =0x00000A5C
	adds r2, r5, r6
	ldr r1, _08079394 @ =0x0810828C
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r2]
	subs r6, #4
	adds r1, r5, r6
	b _080793C0
	.align 2, 0
_08079388: .4byte 0x00000856
_0807938C: .4byte 0x0000084C
_08079390: .4byte 0x00000A5C
_08079394: .4byte 0x0810828C
_08079398:
	adds r0, r5, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _080793A8
	b _080794B6
_080793A8:
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0xc6
	bl func_08008B6C
	movs r0, #0xa7
	lsls r0, r0, #4
	adds r1, r5, r0
	ldr r0, _080793C8 @ =0x0000FFFF
	strh r0, [r1]
	ldr r2, _080793CC @ =0x00000A58
	adds r1, r5, r2
_080793C0:
	movs r0, #5
	str r0, [r1]
	b _080794B6
	.align 2, 0
_080793C8: .4byte 0x0000FFFF
_080793CC: .4byte 0x00000A58
_080793D0:
	ldr r3, _08079404 @ =0x00000844
	adds r1, r5, r3
	ldr r0, [r1]
	ldr r6, _08079408 @ =0xFFFC0000
	adds r0, r0, r6
	str r0, [r1]
	cmp r0, #0
	bge _080793E4
	movs r0, #0
	str r0, [r1]
_080793E4:
	movs r2, #2
	ldrsh r0, [r1, r2]
	movs r3, #0x84
	lsls r3, r3, #4
	adds r1, r5, r3
	strh r0, [r1]
	movs r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _080794B6
	adds r0, r5, #0
	bl func_08079DC0
	ldr r6, _0807940C @ =0x00000A58
	adds r1, r5, r6
	b _08079448
	.align 2, 0
_08079404: .4byte 0x00000844
_08079408: .4byte 0xFFFC0000
_0807940C: .4byte 0x00000A58
_08079410:
	ldr r0, _08079450 @ =0x00000844
	adds r2, r5, r0
	ldr r1, [r2]
	movs r3, #0x80
	lsls r3, r3, #0xb
	adds r1, r1, r3
	str r1, [r2]
	ldr r6, _08079454 @ =0x00000848
	adds r0, r5, r6
	ldr r0, [r0]
	cmp r1, r0
	ble _0807942A
	str r0, [r2]
_0807942A:
	movs r1, #2
	ldrsh r0, [r2, r1]
	movs r2, #0x84
	lsls r2, r2, #4
	adds r1, r5, r2
	strh r0, [r1]
	movs r1, #0xf
	ands r0, r1
	cmp r0, #0
	bne _080794B6
	adds r0, r5, #0
	bl func_08079DC0
_08079444:
	ldr r3, _08079458 @ =0x00000A58
	adds r1, r5, r3
_08079448:
	movs r0, #2
	str r0, [r1]
	b _080794B6
	.align 2, 0
_08079450: .4byte 0x00000844
_08079454: .4byte 0x00000848
_08079458: .4byte 0x00000A58
_0807945C:
	ldr r0, [sp, #4]
	ldr r1, _08079484 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r6, _08079488 @ =0x00000A58
	adds r1, r5, r6
	movs r0, #6
	str r0, [r1]
	b _080794B6
	.align 2, 0
_08079484: .4byte 0x00000889
_08079488: .4byte 0x00000A58
_0807948C:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _080794B6
	movs r1, #0xa7
	lsls r1, r1, #4
	adds r0, r5, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0
	bge _080794AC
	movs r3, #1
	mov r8, r3
	b _080794B4
_080794AC:
	ldr r4, _08079554 @ =0x00000A58
	adds r1, r5, r4
	movs r0, #7
	str r0, [r1]
_080794B4:
	movs r4, #1
_080794B6:
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	movs r6, #0x84
	lsls r6, r6, #4
	adds r1, r5, r6
	ldrh r1, [r1]
	strh r1, [r2]
	strh r1, [r0, #0x16]
	ldr r0, _08079558 @ =0x00000852
	adds r1, r5, r0
	movs r0, #0xc
	strh r0, [r1]
	ldr r1, _0807955C @ =0x0000084C
	adds r0, r5, r1
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r1, r1, #4
	ldr r3, _08079560 @ =0x0000084E
	adds r0, r5, r3
	movs r6, #0
	ldrsh r0, [r0, r6]
	lsls r0, r0, #4
	subs r0, #0x28
	subs r1, r1, r0
	ldr r2, _08079564 @ =0x00000854
	adds r0, r5, r2
	strh r1, [r0]
	adds r0, r5, #0
	bl func_0807A98C
	cmp r4, #1
	beq _080794FC
	b _0807919E
_080794FC:
	mov r3, r8
	cmp r3, #0
	beq _08079504
	b _0807980C
_08079504:
	adds r0, r5, #0
	bl func_08008724
	adds r0, r5, #0
	bl func_08079F8C
	ldr r0, [sp, #4]
	ldr r1, _08079568 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #0
_08079530:
	adds r0, r5, #0
	bl func_080087C8
	adds r0, r5, #0
	bl func_080088B8
	ldr r4, _08079554 @ =0x00000A58
	adds r0, r5, r4
	ldr r0, [r0]
	subs r0, #7
	cmp r0, #7
	bhi _08079590
	lsls r0, r0, #2
	ldr r1, _0807956C @ =_08079570
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08079554: .4byte 0x00000A58
_08079558: .4byte 0x00000852
_0807955C: .4byte 0x0000084C
_08079560: .4byte 0x0000084E
_08079564: .4byte 0x00000854
_08079568: .4byte 0x00000889
_0807956C: .4byte _08079570
_08079570: @ jump table
	.4byte _08079590 @ case 0
	.4byte _080795C8 @ case 1
	.4byte _080795D8 @ case 2
	.4byte _080796DE @ case 3
	.4byte _08079718 @ case 4
	.4byte _08079764 @ case 5
	.4byte _08079790 @ case 6
	.4byte _080797C0 @ case 7
_08079590:
	movs r6, #0x84
	lsls r6, r6, #4
	adds r2, r5, r6
	movs r3, #0
	movs r1, #0
	strh r1, [r2]
	ldr r4, _080795BC @ =0x00000842
	adds r0, r5, r4
	strh r1, [r0]
	adds r6, #4
	adds r1, r5, r6
	ldrh r0, [r2]
	lsls r0, r0, #0x10
	str r0, [r1]
	ldr r1, _080795C0 @ =0x0000080C
	adds r0, r5, r1
	strb r3, [r0]
	ldr r2, _080795C4 @ =0x00000A58
	adds r1, r5, r2
	movs r0, #8
	str r0, [r1]
	b _080797EC
	.align 2, 0
_080795BC: .4byte 0x00000842
_080795C0: .4byte 0x0000080C
_080795C4: .4byte 0x00000A58
_080795C8:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080795D6
	b _080797EC
_080795D6:
	b _08079782
_080795D8:
	adds r0, r5, #0
	bl func_080088C4
	str r0, [sp, #0xc]
	adds r0, r5, #0
	bl func_080088CC
	adds r3, r0, #0
	movs r0, #3
	ands r0, r3
	cmp r0, #0
	beq _08079608
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0xc6
	bl func_08008B6C
	ldr r4, _08079604 @ =0x00000A58
	adds r1, r5, r4
	movs r0, #0xd
	str r0, [r1]
	b _080797EC
	.align 2, 0
_08079604: .4byte 0x00000A58
_08079608:
	ldr r0, [sp, #0xc]
	lsls r1, r0, #0x19
	lsls r0, r0, #0x18
	lsrs r1, r1, #0x1f
	lsrs r0, r0, #0x1f
	cmp r1, r0
	bne _08079618
	b _080797EC
_08079618:
	add r0, sp, #0xc
	ldrb r2, [r0, #1]
	movs r1, #2
	ands r1, r2
	adds r6, r0, #0
	cmp r1, #0
	beq _080796A4
	movs r1, #0xa6
	lsls r1, r1, #4
	adds r0, r5, r1
	movs r1, #0
	ldr r4, [r0]
	ldr r2, [r0, #4]
	cmp r4, r2
	bne _08079638
	movs r1, #1
_08079638:
	cmp r1, #0
	bne _080796A4
	movs r0, #0xb0
	lsls r0, r0, #2
	ands r0, r3
	cmp r0, #0
	bne _08079648
	b _080797EC
_08079648:
	movs r3, #0x84
	lsls r3, r3, #4
	adds r0, r5, r3
	ldrh r0, [r0]
	lsrs r3, r0, #4
	ldrb r1, [r6]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0807968C
	adds r2, r3, #0
	ldr r6, _08079680 @ =0x00000844
	adds r0, r5, r6
	ldr r0, [r0]
	ldr r1, _08079684 @ =0x000FFFFF
	ands r0, r1
	cmp r0, #0
	beq _0807966E
	adds r2, r3, #1
_0807966E:
	ldr r0, [r4]
	cmp r2, r0
	bhi _08079676
	b _080797EC
_08079676:
	ldr r0, _08079688 @ =0x00000A58
	adds r1, r5, r0
	movs r0, #0xa
	str r0, [r1]
	b _080797EC
	.align 2, 0
_08079680: .4byte 0x00000844
_08079684: .4byte 0x000FFFFF
_08079688: .4byte 0x00000A58
_0807968C:
	subs r0, r2, #4
	ldr r0, [r0]
	cmp r3, r0
	blo _08079696
	b _080797EC
_08079696:
	ldr r2, _080796A0 @ =0x00000A58
	adds r1, r5, r2
	movs r0, #0xb
	str r0, [r1]
	b _080797EC
	.align 2, 0
_080796A0: .4byte 0x00000A58
_080796A4:
	ldrb r1, [r6, #1]
	movs r0, #1
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #0xb
	cmp r0, #0
	beq _080796B6
	movs r2, #0x80
	lsls r2, r2, #0xc
_080796B6:
	ldrb r1, [r6]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080796CA
	rsbs r1, r2, #0
	adds r0, r5, #0
	bl func_0807AF78
	b _080797EC
_080796CA:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _080796D4
	b _080797EC
_080796D4:
	adds r0, r5, #0
	adds r1, r2, #0
	bl func_0807AF78
	b _080797EC
_080796DE:
	ldr r3, _0807970C @ =0x00000844
	adds r4, r5, r3
	ldr r2, [r4]
	subs r1, r2, #1
	ldr r0, _08079710 @ =0xFFF00000
	ands r1, r0
	subs r1, r1, r2
	adds r0, r5, #0
	bl func_0807AF78
	ldr r0, [r4]
	cmp r0, #0
	beq _08079704
	adds r0, r5, #0
	bl func_0807AFF4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080797EC
_08079704:
	ldr r4, _08079714 @ =0x00000A58
	adds r1, r5, r4
	b _0807974C
	.align 2, 0
_0807970C: .4byte 0x00000844
_08079710: .4byte 0xFFF00000
_08079714: .4byte 0x00000A58
_08079718:
	ldr r6, _08079754 @ =0x00000844
	adds r4, r5, r6
	ldr r2, [r4]
	movs r0, #0x80
	lsls r0, r0, #0xd
	adds r1, r2, r0
	ldr r0, _08079758 @ =0xFFF00000
	ands r1, r0
	subs r1, r1, r2
	adds r0, r5, #0
	bl func_0807AF78
	ldr r1, _0807975C @ =0x00000848
	adds r0, r5, r1
	ldr r1, [r4]
	ldr r0, [r0]
	cmp r1, r0
	beq _08079748
	adds r0, r5, #0
	bl func_0807AFF4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080797EC
_08079748:
	ldr r2, _08079760 @ =0x00000A58
	adds r1, r5, r2
_0807974C:
	movs r0, #0xc
	str r0, [r1]
	b _080797EC
	.align 2, 0
_08079754: .4byte 0x00000844
_08079758: .4byte 0xFFF00000
_0807975C: .4byte 0x00000848
_08079760: .4byte 0x00000A58
_08079764:
	adds r0, r5, #0
	bl func_080088C4
	str r0, [sp, #0x10]
	add r2, sp, #0x10
	ldrb r1, [r2]
	movs r0, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08079782
	ldrb r1, [r2, #1]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080797EC
_08079782:
	ldr r3, _0807978C @ =0x00000A58
	adds r1, r5, r3
	movs r0, #9
	str r0, [r1]
	b _080797EC
	.align 2, 0
_0807978C: .4byte 0x00000A58
_08079790:
	ldr r0, [sp, #4]
	ldr r1, _080797B8 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r5, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r4, _080797BC @ =0x00000A58
	adds r1, r5, r4
	movs r0, #0xe
	str r0, [r1]
	b _080797EC
	.align 2, 0
_080797B8: .4byte 0x00000889
_080797BC: .4byte 0x00000A58
_080797C0:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r1, r0, #0x1f
	cmp r1, #0
	bne _080797EC
	ldr r6, _080797E0 @ =0x00000A56
	adds r0, r5, r6
	ldrb r0, [r0]
	cmp r0, #1
	bne _080797E4
	movs r0, #1
	mov r8, r0
	b _080797EA
	.align 2, 0
_080797E0: .4byte 0x00000A56
_080797E4:
	ldr r2, _0807985C @ =0x00000A58
	adds r0, r5, r2
	str r1, [r0]
_080797EA:
	movs r7, #1
_080797EC:
	adds r0, r5, #0
	bl func_08008918
	mov r2, sp
	movs r3, #0x84
	lsls r3, r3, #4
	adds r1, r5, r3
	ldrh r1, [r1]
	strh r1, [r2]
	strh r1, [r0, #0x16]
	adds r0, r5, #0
	bl func_0807A98C
	cmp r7, #1
	beq _0807980C
	b _08079530
_0807980C:
	mov r4, r8
	cmp r4, #1
	beq _08079814
	b _08079148
_08079814:
	movs r0, #0
	str r0, [sp, #8]
	mov r6, sb
	str r6, [sp, #0x14]
	ldr r1, [sp, #0x1c]
	str r0, [r1, #4]
	str r0, [r6]
	mov r2, sl
	str r0, [r2]
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _08079838
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08079838:
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _0807984A
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0807984A:
	mov r0, sl
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807985C: .4byte 0x00000A58

	thumb_func_start func_08079860
func_08079860: @ 0x08079860
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, _08079A18 @ =0xFFFFF7F0
	add sp, r4
	adds r5, r0, #0
	bl func_08008918
	add r1, sp, #0xc
	movs r4, #0
	strh r4, [r1]
	strh r4, [r0, #0x14]
	adds r0, r5, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x16]
	adds r0, r5, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x18]
	adds r0, r5, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1a]
	adds r0, r5, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1c]
	adds r0, r5, #0
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	ldr r1, _08079A1C @ =0x06007FE0
	movs r0, #0
	movs r2, #0x20
	bl func_08008EB8
	movs r0, #1
	rsbs r0, r0, #0
	mov sl, r0
	ldr r4, _08079A20 @ =0x0600E000
	movs r1, #0x80
	lsls r1, r1, #4
	mov r8, r1
	adds r1, r4, #0
	mov r2, r8
	bl func_08008EB8
	ldr r6, _08079A24 @ =0x0600E800
	mov r0, sl
	adds r1, r6, #0
	mov r2, r8
	bl func_08008EB8
	ldr r1, _08079A28 @ =0x0600F000
	mov r0, sl
	mov r2, r8
	bl func_08008EB8
	adds r0, r5, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _08079A2C @ =0x00001C43
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	adds r0, r5, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r7, _08079A30 @ =0x00001D41
	adds r1, r7, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	adds r0, r5, #0
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _08079A34 @ =0x00001E42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	ldr r0, _08079A38 @ =0x080F9F70
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r2, _08079A3C @ =0x080F9F74
	ldr r2, [r2]
	bl func_08008E64
	ldr r0, _08079A40 @ =0x00030003
	adds r1, r4, #0
	mov r2, r8
	bl func_08008EB8
	movs r0, #3
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl func_08051320
	ldr r0, _08079A44 @ =0x080F9F78
	ldr r0, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x20
	bl func_08008E64
	ldr r0, _08079A48 @ =0x05000040
	movs r7, #0xf8
	lsls r7, r7, #2
	adds r6, r7, #0
	strh r6, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	ldr r1, _08079A4C @ =0x00004218
	mov sb, r1
	strh r1, [r0]
	ldr r3, _08079A50 @ =0x00000828
	adds r5, r5, r3
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r7, _08079A54 @ =0x05000200
	adds r0, r0, r7
	strh r6, [r0]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r1, _08079A58 @ =0x05000202
	adds r0, r0, r1
	strh r4, [r0]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r3, _08079A5C @ =0x05000204
	adds r0, r0, r3
	mov r7, sb
	strh r7, [r0]
	add r4, sp, #0x10
	mov r0, sl
	adds r1, r4, #0
	mov r2, r8
	bl func_08008EB8
	ldr r6, _08079A60 @ =0x00002060
	movs r2, #0
	mov sb, r4
	movs r0, #0x12
	add r0, sp
	mov r8, r0
_080799C0:
	movs r5, #0
	lsls r1, r2, #7
	lsls r0, r2, #1
	adds r4, r6, #0
	adds r4, #0x38
	adds r2, #1
	mov sl, r2
	adds r0, #1
	lsls r0, r0, #6
	adds r3, r6, #0
	adds r3, #0x1c
	mov r7, r8
	adds r2, r0, r7
	add r1, r8
_080799DC:
	adds r0, r6, r5
	strh r0, [r1]
	strh r3, [r2]
	adds r3, #1
	adds r2, #2
	adds r1, #2
	adds r5, #1
	cmp r5, #0x1b
	ble _080799DC
	lsls r0, r4, #0x10
	lsrs r6, r0, #0x10
	mov r2, sl
	cmp r2, #0xf
	ble _080799C0
	ldr r1, _08079A28 @ =0x0600F000
	movs r2, #0x80
	lsls r2, r2, #4
	mov r0, sb
	bl func_08008E64
	movs r3, #0x81
	lsls r3, r3, #4
	add sp, r3
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08079A18: .4byte 0xFFFFF7F0
_08079A1C: .4byte 0x06007FE0
_08079A20: .4byte 0x0600E000
_08079A24: .4byte 0x0600E800
_08079A28: .4byte 0x0600F000
_08079A2C: .4byte 0x00001C43
_08079A30: .4byte 0x00001D41
_08079A34: .4byte 0x00001E42
_08079A38: .4byte 0x080F9F70
_08079A3C: .4byte 0x080F9F74
_08079A40: .4byte 0x00030003
_08079A44: .4byte 0x080F9F78
_08079A48: .4byte 0x05000040
_08079A4C: .4byte 0x00004218
_08079A50: .4byte 0x00000828
_08079A54: .4byte 0x05000200
_08079A58: .4byte 0x05000202
_08079A5C: .4byte 0x05000204
_08079A60: .4byte 0x00002060

	thumb_func_start func_08079A64
func_08079A64: @ 0x08079A64
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x88
	adds r5, r0, #0
	movs r0, #0x85
	lsls r0, r0, #4
	adds r1, r5, r0
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08079BB4 @ =0x00000A57
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _08079A88
	b _08079BC0
_08079A88:
	movs r3, #0
	mov r0, sp
	adds r0, #0x70
	str r0, [sp, #0x84]
	movs r2, #0x14
	adds r2, r2, r5
	mov sl, r2
	adds r2, r1, #0
	ldr r0, _08079BB8 @ =0x00000858
	adds r4, r5, r0
	ldr r6, _08079BBC @ =0x080FD920
_08079A9E:
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #1
	adds r0, r4, r0
	ldm r6!, {r1}
	strh r1, [r0]
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	adds r3, #1
	cmp r3, #7
	bls _08079A9E
	ldr r0, [r5, #8]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl HasVase__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08079AE4
	movs r3, #0x85
	lsls r3, r3, #4
	adds r2, r5, r3
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #1
	adds r3, #8
	adds r1, r5, r3
	adds r1, r1, r0
	movs r0, #0x4a
	strh r0, [r1]
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
_08079AE4:
	ldr r0, [r5, #8]
	adds r0, r0, r4
	bl GetFridge__9FarmHouse
	cmp r0, #0
	beq _08079B0C
	movs r0, #0x85
	lsls r0, r0, #4
	adds r2, r5, r0
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #1
	ldr r3, _08079BB8 @ =0x00000858
	adds r1, r5, r3
	adds r1, r1, r0
	movs r0, #0x4b
	strh r0, [r1]
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
_08079B0C:
	ldr r0, [r5, #8]
	adds r0, r0, r4
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _08079B34
	movs r0, #0x85
	lsls r0, r0, #4
	adds r2, r5, r0
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #1
	ldr r3, _08079BB8 @ =0x00000858
	adds r1, r5, r3
	adds r1, r1, r0
	movs r0, #0x4c
	strh r0, [r1]
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
_08079B34:
	ldr r0, [r5, #8]
	adds r0, r0, r4
	bl HasKitchen__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08079B5E
	movs r0, #0x85
	lsls r0, r0, #4
	adds r2, r5, r0
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #1
	ldr r3, _08079BB8 @ =0x00000858
	adds r1, r5, r3
	adds r1, r1, r0
	movs r0, #0xc
	strh r0, [r1]
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
_08079B5E:
	ldr r0, [r5, #8]
	adds r0, r0, r4
	bl HasBathroom__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08079B88
	movs r0, #0x85
	lsls r0, r0, #4
	adds r2, r5, r0
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #1
	ldr r3, _08079BB8 @ =0x00000858
	adds r1, r5, r3
	adds r1, r1, r0
	movs r0, #0x49
	strh r0, [r1]
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
_08079B88:
	ldr r0, [r5, #8]
	adds r0, r0, r4
	bl GetRecordPlayer__9FarmHouse
	cmp r0, #0
	beq _08079C02
	movs r0, #0x85
	lsls r0, r0, #4
	adds r2, r5, r0
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #1
	ldr r3, _08079BB8 @ =0x00000858
	adds r1, r5, r3
	adds r1, r1, r0
	movs r0, #0x48
	strh r0, [r1]
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	b _08079C02
	.align 2, 0
_08079BB4: .4byte 0x00000A57
_08079BB8: .4byte 0x00000858
_08079BBC: .4byte 0x080FD920
_08079BC0:
	movs r6, #0x4d
	mov r0, sp
	adds r0, #0x70
	str r0, [sp, #0x84]
	movs r1, #0x14
	adds r1, r1, r5
	mov sl, r1
	movs r2, #0x85
	lsls r2, r2, #4
	adds r4, r5, r2
_08079BD4:
	ldr r0, [r5, #8]
	movs r3, #0x80
	lsls r3, r3, #3
	adds r0, r0, r3
	adds r1, r6, #0
	bl func_0800BD40
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08079BFC
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #1
	ldr r2, _08079C1C @ =0x00000858
	adds r1, r5, r2
	adds r1, r1, r0
	strh r6, [r1]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_08079BFC:
	adds r6, #1
	cmp r6, #0x88
	ble _08079BD4
_08079C02:
	movs r3, #0x85
	lsls r3, r3, #4
	adds r0, r5, r3
	movs r1, #0
	ldrsh r2, [r0, r1]
	adds r0, r2, #2
	cmp r0, #0xa
	ble _08079C20
	subs r3, #8
	adds r1, r5, r3
	subs r0, #0xa
	lsls r0, r0, #0x14
	b _08079C26
	.align 2, 0
_08079C1C: .4byte 0x00000858
_08079C20:
	ldr r0, _08079DA0 @ =0x00000848
	adds r1, r5, r0
	movs r0, #0
_08079C26:
	str r0, [r1]
	movs r4, #0
	movs r1, #0x1c
	mov r8, r1
	movs r7, #2
	mov r6, sl
	ldr r2, _08079DA4 @ =0x00000A5C
	adds r2, r2, r5
	mov sb, r2
_08079C38:
	add r0, sp, #0x70
	mov r3, r8
	strh r3, [r0]
	ldr r0, [sp, #0x84]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x70]
	adds r1, r6, #0
	movs r2, #0
	bl func_0804E7A0
	ldr r1, _08079DA8 @ =0x0000084E
	adds r0, r5, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r1, r0, r4
	cmp r1, #1
	ble _08079CB0
	movs r3, #0x85
	lsls r3, r3, #4
	adds r0, r5, r3
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #2
	cmp r1, r0
	bge _08079CB0
	subs r1, #2
	lsls r1, r1, #1
	adds r3, #8
	adds r0, r5, r3
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #2
	ldr r2, _08079DAC @ =0x0810828C
	adds r0, r0, r2
	ldr r0, [r0]
	mov r3, sb
	str r0, [r3]
	ldr r1, [r0]
	cmp r1, #0
	beq _08079CB0
	adds r0, r5, #0
	add r2, sp, #0xc
	bl func_0807A708
	add r0, sp, #0x74
	mov r1, r8
	strh r1, [r0]
	strh r7, [r0, #2]
	ldr r0, [sp, #0x74]
	add r2, sp, #0xc
	str r2, [sp]
	movs r3, #0
	str r3, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	adds r1, r6, #0
	movs r2, #0
	bl func_0804E958
_08079CB0:
	movs r2, #0x84
	lsls r2, r2, #4
	adds r0, r5, r2
	ldrh r0, [r0]
	lsrs r0, r0, #4
	adds r0, r0, r4
	movs r1, #0xf
	ands r0, r1
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #8
	ldr r3, _08079DB0 @ =0x06000C00
	adds r1, r1, r3
	mov r0, sl
	movs r2, #0xe0
	lsls r2, r2, #3
	bl func_08008E64
	adds r4, #1
	cmp r4, #0xa
	ble _08079C38
	movs r1, #0x82
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r2, _08079DB4 @ =0x06010000
	adds r1, r1, r2
	movs r2, #0xe0
	lsls r2, r2, #3
	movs r0, #0
	bl func_08008EB8
	movs r6, #0
	movs r7, #1
	add r3, sp, #0x78
	mov sb, r3
	movs r0, #2
	mov sl, r0
	add r1, sp, #0x7c
	mov r8, r1
	mov r2, sp
	adds r2, #0x30
	str r2, [sp, #0x80]
_08079D0E:
	ldr r3, _08079DB8 @ =0x00000A57
	adds r0, r5, r3
	ldrb r0, [r0]
	adds r1, r7, #0
	ands r1, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r6, r0
	ldr r1, _08079DBC @ =0x080FD940
	adds r0, r0, r1
	ldrb r4, [r0]
	cmp r4, #0
	beq _08079D7C
	mov r2, sb
	strh r7, [r2]
	mov r3, sl
	strh r3, [r2, #2]
	ldr r0, [sp, #0x78]
	add r1, sp, #0x30
	movs r2, #0
	bl func_0804E7A0
	mov r0, r8
	strh r7, [r0]
	mov r1, sl
	strh r1, [r0, #2]
	ldr r0, [sp, #0x7c]
	str r4, [sp]
	movs r2, #0
	str r2, [sp, #4]
	str r7, [sp, #8]
	add r1, sp, #0x30
	movs r3, #0
	bl func_0804E5AC
	movs r3, #0x82
	lsls r3, r3, #4
	adds r0, r5, r3
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r0, r6, #1
	adds r1, r1, r0
	lsls r1, r1, #5
	ldr r0, _08079DB4 @ =0x06010000
	adds r1, r1, r0
	ldr r0, [sp, #0x80]
	movs r2, #0x40
	bl func_08008E64
	adds r6, #1
	cmp r6, #0xb
	ble _08079D0E
_08079D7C:
	adds r0, r5, #0
	bl func_08008918
	add r2, sp, #0xc
	movs r3, #0xf2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	add sp, #0x88
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08079DA0: .4byte 0x00000848
_08079DA4: .4byte 0x00000A5C
_08079DA8: .4byte 0x0000084E
_08079DAC: .4byte 0x0810828C
_08079DB0: .4byte 0x06000C00
_08079DB4: .4byte 0x06010000
_08079DB8: .4byte 0x00000A57
_08079DBC: .4byte 0x080FD940

	thumb_func_start func_08079DC0
func_08079DC0: @ 0x08079DC0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	adds r6, r0, #0
	movs r1, #0x84
	lsls r1, r1, #4
	adds r0, r6, r1
	ldr r2, _08079DF0 @ =0x00000842
	adds r1, r6, r2
	ldrh r0, [r0]
	lsls r2, r0, #0x10
	ldrh r1, [r1]
	cmp r0, r1
	bls _08079DF4
	lsrs r0, r2, #0x14
	adds r7, r0, #0
	adds r7, #8
	adds r5, r0, #0
	adds r5, #0xa
	movs r0, #0xf
	b _08079DFA
	.align 2, 0
_08079DF0: .4byte 0x00000842
_08079DF4:
	lsrs r0, r2, #0x14
	subs r7, r0, #2
	movs r5, #0xf
_08079DFA:
	ands r5, r0
	add r0, sp, #0x2c
	movs r3, #0x1c
	mov r8, r3
	movs r4, #2
	mov sb, r4
	mov r1, r8
	strh r1, [r0]
	mov r2, sb
	strh r2, [r0, #2]
	ldr r0, [sp, #0x2c]
	adds r4, r6, #0
	adds r4, #0x14
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	cmp r7, #0
	blt _08079E6A
	ldr r0, _08079EAC @ =0x00000A5C
	adds r3, r6, r0
	ldr r2, _08079EB0 @ =0x0810828C
	lsls r1, r7, #1
	ldr r7, _08079EB4 @ =0x00000858
	adds r0, r6, r7
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r3]
	ldr r1, [r0]
	cmp r1, #0
	beq _08079E6A
	adds r0, r6, #0
	add r2, sp, #0xc
	bl func_0807A708
	movs r2, #1
	add r0, sp, #0x30
	mov r3, r8
	strh r3, [r0]
	mov r7, sb
	strh r7, [r0, #2]
	ldr r0, [sp, #0x30]
	add r1, sp, #0xc
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r2, [sp, #8]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E958
_08079E6A:
	adds r0, r6, #0
	bl func_08008910
	adds r6, r0, #0
	lsls r2, r5, #3
	subs r2, r2, r5
	lsls r2, r2, #8
	ldr r3, _08079EB8 @ =0x06000C00
	adds r2, r2, r3
	add r0, sp, #0xc
	adds r1, r4, #0
	movs r3, #0xe0
	lsls r3, r3, #3
	bl func_08008F0C
	add r4, sp, #0xc
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08079EBC
	cmp r1, #0
	beq _08079EA4
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08079EA4:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _08079F7C
	.align 2, 0
_08079EAC: .4byte 0x00000A5C
_08079EB0: .4byte 0x0810828C
_08079EB4: .4byte 0x00000858
_08079EB8: .4byte 0x06000C00
_08079EBC:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x38]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x34]
	add r1, sp, #0x38
	add r0, sp, #0x34
	cmp r4, #1
	bhs _08079ED4
	adds r0, r1, #0
_08079ED4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08079EF2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08079EF6
	mov r0, r8
	bl func_080D3BC0
	b _08079EF6
_08079EF2:
	movs r0, #0
	mov r8, r0
_08079EF6:
	adds r4, r0, #0
	str r4, [sp, #0x3c]
	ldr r2, [r6]
	adds r3, r4, #0
	cmp r2, sl
	beq _08079F1A
_08079F02:
	cmp r3, #0
	beq _08079F12
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08079F12:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _08079F02
_08079F1A:
	adds r4, r3, #0
	ldr r0, [sp, #0x38]
	cmp r0, #1
	bne _08079F36
	cmp r4, #0
	beq _08079F32
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_08079F32:
	adds r4, #0x10
	b _08079F58
_08079F36:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _08079F56
_08079F3E:
	cmp r2, #0
	beq _08079F4E
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08079F4E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08079F3E
_08079F56:
	adds r4, r2, #0
_08079F58:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08079F68
_08079F62:
	adds r1, #0x10
	cmp r1, r2
	bne _08079F62
_08079F68:
	cmp r0, #0
	beq _08079F70
	bl free
_08079F70:
	ldr r0, [sp, #0x3c]
	add r0, r8
	ldr r7, [sp, #0x3c]
	str r7, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_08079F7C:
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_08079F8C
func_08079F8C: @ 0x08079F8C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xa4
	mov sb, r0
	movs r5, #0
	ldr r2, _0807A03C @ =0x00000A5C
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r0, [r0]
	mov r1, sp
	adds r1, #0x80
	str r1, [sp, #0x9c]
	cmp r0, #0
	beq _0807A022
	add r4, sp, #0xc
_08079FB0:
	lsls r1, r5, #0x10
	mov r3, sb
	adds r0, r3, r2
	ldr r0, [r0]
	asrs r1, r1, #0xe
	adds r1, r1, r0
	ldr r1, [r1]
	ldrb r0, [r1]
	cmp r0, #0x3c
	bne _0807A006
	adds r3, r1, #0
	ldrb r0, [r3, #1]
	subs r0, #0x30
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bhi _0807A006
	movs r2, #0
_08079FD4:
	mov r1, sp
	adds r1, r1, r2
	adds r1, #0xc
	adds r0, r2, r3
	ldrb r0, [r0, #1]
	subs r0, #0x30
	strb r0, [r1]
	adds r2, #1
	cmp r2, #2
	ble _08079FD4
	ldrb r1, [r4]
	movs r0, #0x64
	muls r1, r0, r1
	ldrb r2, [r4, #1]
	lsls r0, r2, #2
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r1, r1, r0
	ldrb r0, [r4, #2]
	adds r1, r1, r0
	mov r0, sb
	bl func_0807A2AC
	cmp r0, #1
	beq _0807A022
_0807A006:
	lsls r0, r5, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r5, r0, #0x10
	ldr r2, _0807A03C @ =0x00000A5C
	mov r3, sb
	adds r1, r3, r2
	ldr r1, [r1]
	asrs r0, r0, #0xe
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08079FB0
_0807A022:
	lsls r0, r5, #0x10
	ldr r1, _0807A040 @ =0xFFFF0000
	adds r0, r0, r1
	lsrs r5, r0, #0x10
	asrs r2, r0, #0x10
	adds r0, r2, #2
	cmp r0, #0xa
	ble _0807A048
	ldr r1, _0807A044 @ =0x00000848
	add r1, sb
	subs r0, #0xa
	lsls r0, r0, #0x14
	b _0807A04E
	.align 2, 0
_0807A03C: .4byte 0x00000A5C
_0807A040: .4byte 0xFFFF0000
_0807A044: .4byte 0x00000848
_0807A048:
	ldr r1, _0807A0AC @ =0x00000848
	add r1, sb
	movs r0, #0
_0807A04E:
	str r0, [r1]
	movs r0, #0xa6
	lsls r0, r0, #4
	add r0, sb
	ldr r1, [r0]
	str r1, [r0, #4]
	lsls r0, r5, #0x10
	movs r3, #0
	str r0, [sp, #0x98]
	mov r0, sb
	adds r0, #0x14
	str r0, [sp, #0x94]
	ldr r1, [sp, #0x98]
	cmp r1, #0
	ble _0807A148
_0807A06C:
	ldr r0, _0807A0B0 @ =0x00000A5C
	add r0, sb
	ldr r1, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r0, [r0, #4]
	ldrb r1, [r0]
	lsls r1, r1, #8
	ldrb r0, [r0, #1]
	orrs r1, r0
	ldr r0, _0807A0B4 @ =0x0000819A
	adds r7, r3, #1
	cmp r1, r0
	bne _0807A13E
	str r3, [sp, #0x74]
	movs r5, #0xa6
	lsls r5, r5, #4
	add r5, sb
	add r0, sp, #0x74
	mov sl, r0
	ldr r4, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r4, r0
	beq _0807A0B8
	cmp r4, #0
	beq _0807A0A2
	str r3, [r4]
_0807A0A2:
	ldr r0, [r5, #4]
	adds r0, #4
	str r0, [r5, #4]
	b _0807A13E
	.align 2, 0
_0807A0AC: .4byte 0x00000848
_0807A0B0: .4byte 0x00000A5C
_0807A0B4: .4byte 0x0000819A
_0807A0B8:
	adds r7, r4, #0
	movs r0, #1
	str r0, [sp, #0x7c]
	ldr r0, [r5]
	subs r0, r7, r0
	asrs r4, r0, #2
	str r4, [sp, #0x78]
	add r1, sp, #0x7c
	add r0, sp, #0x78
	cmp r4, #1
	bhs _0807A0D0
	adds r0, r1, #0
_0807A0D0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807A0F4
	lsls r4, r0, #2
	adds r0, r4, #0
	str r3, [sp, #0xa0]
	bl malloc
	mov r8, r4
	ldr r3, [sp, #0xa0]
	cmp r0, #0
	bne _0807A0F8
	mov r0, r8
	bl func_080D3BC0
	ldr r3, [sp, #0xa0]
	b _0807A0F8
_0807A0F4:
	movs r0, #0
	mov r8, r0
_0807A0F8:
	adds r6, r0, #0
	ldr r1, [r5]
	cmp r7, r1
	beq _0807A110
	subs r4, r7, r1
	adds r2, r4, #0
	str r3, [sp, #0xa0]
	bl memmove
	adds r0, r0, r4
	ldr r3, [sp, #0xa0]
	b _0807A112
_0807A110:
	adds r0, r6, #0
_0807A112:
	adds r4, r0, #0
	ldr r1, [sp, #0x7c]
	ldr r2, [r5]
	adds r7, r3, #1
	cmp r1, #0
	beq _0807A12A
_0807A11E:
	mov r3, sl
	ldr r0, [r3]
	stm r4!, {r0}
	subs r1, #1
	cmp r1, #0
	bne _0807A11E
_0807A12A:
	cmp r2, #0
	beq _0807A134
	adds r0, r2, #0
	bl free
_0807A134:
	mov r1, r8
	adds r0, r1, r6
	str r6, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0807A13E:
	adds r3, r7, #0
	ldr r1, [sp, #0x98]
	asrs r0, r1, #0x10
	cmp r3, r0
	blt _0807A06C
_0807A148:
	ldr r1, _0807A29C @ =0x06000C00
	movs r2, #0xe0
	lsls r2, r2, #4
	movs r0, #0
	bl func_08008EB8
	movs r4, #0
	movs r3, #2
	mov sl, r3
	ldr r7, [sp, #0x94]
	ldr r0, _0807A2A0 @ =0x06001A00
	mov r8, r0
	add r6, sp, #0x10
	add r5, sp, #0x84
_0807A164:
	add r0, sp, #0x80
	movs r1, #0x1c
	strh r1, [r0]
	mov r0, sl
	ldr r3, [sp, #0x9c]
	strh r0, [r3, #2]
	ldr r0, [sp, #0x80]
	adds r1, r7, #0
	movs r2, #0
	bl func_0804E7A0
	ldr r1, [sp, #0x98]
	asrs r0, r1, #0x10
	cmp r4, r0
	bge _0807A1B8
	ldr r0, _0807A2A4 @ =0x00000A5C
	add r0, sb
	ldr r1, [r0]
	lsls r0, r4, #2
	adds r0, r0, r1
	ldr r1, [r0, #4]
	cmp r1, #0
	beq _0807A1B8
	mov r0, sb
	adds r2, r6, #0
	bl func_0807A708
	movs r3, #0x1c
	strh r3, [r5]
	mov r0, sl
	strh r0, [r5, #2]
	ldr r0, [sp, #0x84]
	str r6, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r3, #1
	str r3, [sp, #8]
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E958
_0807A1B8:
	ldr r0, [sp, #0x94]
	mov r1, r8
	movs r2, #0xe0
	lsls r2, r2, #3
	bl func_08008E64
	movs r0, #0xe0
	lsls r0, r0, #3
	add r8, r0
	adds r4, #1
	cmp r4, #8
	ble _0807A164
	movs r0, #0x82
	lsls r0, r0, #4
	add r0, sb
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r3, _0807A2A8 @ =0x06010000
	adds r1, r1, r3
	movs r2, #0xe0
	lsls r2, r2, #3
	movs r0, #0
	bl func_08008EB8
	ldr r0, _0807A2A4 @ =0x00000A5C
	add r0, sb
	ldr r0, [r0]
	ldr r1, [r0]
	cmp r1, #0
	beq _0807A278
	mov r0, sb
	add r2, sp, #0xc
	bl func_0807A708
	movs r5, #0
	add r7, sp, #0x88
	movs r0, #1
	mov r8, r0
	movs r1, #2
	mov sl, r1
	add r6, sp, #0x8c
	mov r3, sp
	adds r3, #0x34
	str r3, [sp, #0x90]
_0807A216:
	mov r0, sp
	adds r0, r0, r5
	adds r0, #0xc
	ldrb r4, [r0]
	cmp r4, #0
	beq _0807A278
	mov r0, r8
	strh r0, [r7]
	mov r1, sl
	strh r1, [r7, #2]
	ldr r0, [sp, #0x88]
	add r1, sp, #0x34
	movs r2, #0
	bl func_0804E7A0
	mov r3, r8
	strh r3, [r6]
	mov r0, sl
	strh r0, [r6, #2]
	ldr r0, [r6]
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	mov r3, r8
	str r3, [sp, #8]
	add r1, sp, #0x34
	movs r2, #0
	movs r3, #0
	bl func_0804E5AC
	movs r0, #0x82
	lsls r0, r0, #4
	add r0, sb
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r0, r5, #1
	adds r1, r1, r0
	lsls r1, r1, #5
	ldr r0, _0807A2A8 @ =0x06010000
	adds r1, r1, r0
	ldr r0, [sp, #0x90]
	movs r2, #0x40
	bl func_08008E64
	adds r5, #1
	cmp r5, #0x1b
	ble _0807A216
_0807A278:
	mov r0, sb
	bl func_08008918
	add r2, sp, #0xc
	movs r3, #0xf2
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	add sp, #0xa4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807A29C: .4byte 0x06000C00
_0807A2A0: .4byte 0x06001A00
_0807A2A4: .4byte 0x00000A5C
_0807A2A8: .4byte 0x06010000

	thumb_func_start func_0807A2AC
func_0807A2AC: @ 0x0807A2AC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r6, #0
	adds r0, r5, #0
	movs r1, #0xa
	bl func_080D0EDA
	cmp r0, #0x24
	bls _0807A2C2
	b _0807A53C
_0807A2C2:
	lsls r0, r0, #2
	ldr r1, _0807A2CC @ =_0807A2D0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807A2CC: .4byte _0807A2D0
_0807A2D0: @ jump table
	.4byte _0807A364 @ case 0
	.4byte _0807A370 @ case 1
	.4byte _0807A37C @ case 2
	.4byte _0807A388 @ case 3
	.4byte _0807A394 @ case 4
	.4byte _0807A3A0 @ case 5
	.4byte _0807A3AC @ case 6
	.4byte _0807A3B8 @ case 7
	.4byte _0807A3C4 @ case 8
	.4byte _0807A3D0 @ case 9
	.4byte _0807A3DC @ case 10
	.4byte _0807A3E8 @ case 11
	.4byte _0807A3F4 @ case 12
	.4byte _0807A400 @ case 13
	.4byte _0807A40C @ case 14
	.4byte _0807A418 @ case 15
	.4byte _0807A424 @ case 16
	.4byte _0807A430 @ case 17
	.4byte _0807A43C @ case 18
	.4byte _0807A448 @ case 19
	.4byte _0807A454 @ case 20
	.4byte _0807A460 @ case 21
	.4byte _0807A46C @ case 22
	.4byte _0807A478 @ case 23
	.4byte _0807A484 @ case 24
	.4byte _0807A490 @ case 25
	.4byte _0807A49C @ case 26
	.4byte _0807A4A8 @ case 27
	.4byte _0807A4B4 @ case 28
	.4byte _0807A4C0 @ case 29
	.4byte _0807A4CC @ case 30
	.4byte _0807A4D8 @ case 31
	.4byte _0807A4E4 @ case 32
	.4byte _0807A4F4 @ case 33
	.4byte _0807A508 @ case 34
	.4byte _0807A51C @ case 35
	.4byte _0807A528 @ case 36
_0807A364:
	ldr r0, [r4, #8]
	ldr r1, _0807A36C @ =0x000021AC
	b _0807A4F8
	.align 2, 0
_0807A36C: .4byte 0x000021AC
_0807A370:
	ldr r0, [r4, #8]
	ldr r1, _0807A378 @ =0x000021AC
	b _0807A50C
	.align 2, 0
_0807A378: .4byte 0x000021AC
_0807A37C:
	ldr r0, [r4, #8]
	ldr r1, _0807A384 @ =0x000021AC
	b _0807A52C
	.align 2, 0
_0807A384: .4byte 0x000021AC
_0807A388:
	ldr r0, [r4, #8]
	ldr r1, _0807A390 @ =0x000021AC
	b _0807A4E8
	.align 2, 0
_0807A390: .4byte 0x000021AC
_0807A394:
	ldr r0, [r4, #8]
	ldr r1, _0807A39C @ =0x000021AD
	b _0807A4F8
	.align 2, 0
_0807A39C: .4byte 0x000021AD
_0807A3A0:
	ldr r0, [r4, #8]
	ldr r1, _0807A3A8 @ =0x000021AD
	b _0807A50C
	.align 2, 0
_0807A3A8: .4byte 0x000021AD
_0807A3AC:
	ldr r0, [r4, #8]
	ldr r1, _0807A3B4 @ =0x000021AD
	b _0807A52C
	.align 2, 0
_0807A3B4: .4byte 0x000021AD
_0807A3B8:
	ldr r0, [r4, #8]
	ldr r1, _0807A3C0 @ =0x000021AD
	b _0807A4E8
	.align 2, 0
_0807A3C0: .4byte 0x000021AD
_0807A3C4:
	ldr r0, [r4, #8]
	ldr r1, _0807A3CC @ =0x000021AE
	b _0807A4F8
	.align 2, 0
_0807A3CC: .4byte 0x000021AE
_0807A3D0:
	ldr r0, [r4, #8]
	ldr r1, _0807A3D8 @ =0x000021AE
	b _0807A50C
	.align 2, 0
_0807A3D8: .4byte 0x000021AE
_0807A3DC:
	ldr r0, [r4, #8]
	ldr r1, _0807A3E4 @ =0x000021AE
	b _0807A52C
	.align 2, 0
_0807A3E4: .4byte 0x000021AE
_0807A3E8:
	ldr r0, [r4, #8]
	ldr r1, _0807A3F0 @ =0x000021AE
	b _0807A4E8
	.align 2, 0
_0807A3F0: .4byte 0x000021AE
_0807A3F4:
	ldr r0, [r4, #8]
	ldr r1, _0807A3FC @ =0x000021AF
	b _0807A4F8
	.align 2, 0
_0807A3FC: .4byte 0x000021AF
_0807A400:
	ldr r0, [r4, #8]
	ldr r1, _0807A408 @ =0x000021AF
	b _0807A50C
	.align 2, 0
_0807A408: .4byte 0x000021AF
_0807A40C:
	ldr r0, [r4, #8]
	ldr r1, _0807A414 @ =0x000021AF
	b _0807A52C
	.align 2, 0
_0807A414: .4byte 0x000021AF
_0807A418:
	ldr r0, [r4, #8]
	ldr r1, _0807A420 @ =0x000021AF
	b _0807A4E8
	.align 2, 0
_0807A420: .4byte 0x000021AF
_0807A424:
	ldr r0, [r4, #8]
	ldr r1, _0807A42C @ =0x000021B0
	b _0807A4F8
	.align 2, 0
_0807A42C: .4byte 0x000021B0
_0807A430:
	ldr r0, [r4, #8]
	ldr r1, _0807A438 @ =0x000021B0
	b _0807A50C
	.align 2, 0
_0807A438: .4byte 0x000021B0
_0807A43C:
	ldr r0, [r4, #8]
	ldr r1, _0807A444 @ =0x000021B0
	b _0807A52C
	.align 2, 0
_0807A444: .4byte 0x000021B0
_0807A448:
	ldr r0, [r4, #8]
	ldr r1, _0807A450 @ =0x000021B0
	b _0807A4E8
	.align 2, 0
_0807A450: .4byte 0x000021B0
_0807A454:
	ldr r0, [r4, #8]
	ldr r1, _0807A45C @ =0x000021B1
	b _0807A4F8
	.align 2, 0
_0807A45C: .4byte 0x000021B1
_0807A460:
	ldr r0, [r4, #8]
	ldr r1, _0807A468 @ =0x000021B1
	b _0807A50C
	.align 2, 0
_0807A468: .4byte 0x000021B1
_0807A46C:
	ldr r0, [r4, #8]
	ldr r1, _0807A474 @ =0x000021B1
	b _0807A52C
	.align 2, 0
_0807A474: .4byte 0x000021B1
_0807A478:
	ldr r0, [r4, #8]
	ldr r1, _0807A480 @ =0x000021B1
	b _0807A4E8
	.align 2, 0
_0807A480: .4byte 0x000021B1
_0807A484:
	ldr r0, [r4, #8]
	ldr r1, _0807A48C @ =0x000021B2
	b _0807A4F8
	.align 2, 0
_0807A48C: .4byte 0x000021B2
_0807A490:
	ldr r0, [r4, #8]
	ldr r1, _0807A498 @ =0x000021B2
	b _0807A50C
	.align 2, 0
_0807A498: .4byte 0x000021B2
_0807A49C:
	ldr r0, [r4, #8]
	ldr r1, _0807A4A4 @ =0x000021B2
	b _0807A52C
	.align 2, 0
_0807A4A4: .4byte 0x000021B2
_0807A4A8:
	ldr r0, [r4, #8]
	ldr r1, _0807A4B0 @ =0x000021B2
	b _0807A4E8
	.align 2, 0
_0807A4B0: .4byte 0x000021B2
_0807A4B4:
	ldr r0, [r4, #8]
	ldr r1, _0807A4BC @ =0x000021B3
	b _0807A4F8
	.align 2, 0
_0807A4BC: .4byte 0x000021B3
_0807A4C0:
	ldr r0, [r4, #8]
	ldr r1, _0807A4C8 @ =0x000021B3
	b _0807A50C
	.align 2, 0
_0807A4C8: .4byte 0x000021B3
_0807A4CC:
	ldr r0, [r4, #8]
	ldr r1, _0807A4D4 @ =0x000021B3
	b _0807A52C
	.align 2, 0
_0807A4D4: .4byte 0x000021B3
_0807A4D8:
	ldr r0, [r4, #8]
	ldr r1, _0807A4E0 @ =0x000021B3
	b _0807A4E8
	.align 2, 0
_0807A4E0: .4byte 0x000021B3
_0807A4E4:
	ldr r0, [r4, #8]
	ldr r1, _0807A4F0 @ =0x000021AB
_0807A4E8:
	adds r0, r0, r1
	ldrb r0, [r0]
	lsrs r4, r0, #6
	b _0807A53E
	.align 2, 0
_0807A4F0: .4byte 0x000021AB
_0807A4F4:
	ldr r0, [r4, #8]
	ldr r1, _0807A504 @ =0x000021B4
_0807A4F8:
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1e
	lsrs r4, r0, #0x1e
	b _0807A53E
	.align 2, 0
_0807A504: .4byte 0x000021B4
_0807A508:
	ldr r0, [r4, #8]
	ldr r1, _0807A518 @ =0x000021B4
_0807A50C:
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r4, r0, #0x1e
	b _0807A53E
	.align 2, 0
_0807A518: .4byte 0x000021B4
_0807A51C:
	ldr r0, [r4, #8]
	ldr r1, _0807A524 @ =0x000021B4
	b _0807A52C
	.align 2, 0
_0807A524: .4byte 0x000021B4
_0807A528:
	ldr r0, [r4, #8]
	ldr r1, _0807A538 @ =0x000021AB
_0807A52C:
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r4, r0, #0x1e
	b _0807A53E
	.align 2, 0
_0807A538: .4byte 0x000021AB
_0807A53C:
	movs r4, #0
_0807A53E:
	adds r0, r5, #0
	movs r1, #0xa
	bl __umodsi3
	cmp r4, r0
	bhi _0807A54C
	movs r6, #1
_0807A54C:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start func_0807A554
func_0807A554: @ 0x0807A554
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	adds r7, r0, #0
	movs r1, #0x84
	lsls r1, r1, #4
	adds r0, r7, r1
	ldr r2, _0807A584 @ =0x00000842
	adds r1, r7, r2
	ldrh r0, [r0]
	lsls r2, r0, #0x10
	ldrh r1, [r1]
	cmp r0, r1
	bls _0807A588
	lsrs r0, r2, #0x14
	adds r6, r0, #0
	adds r6, #8
	adds r5, r0, #0
	adds r5, #0xa
	movs r0, #0xf
	b _0807A58E
	.align 2, 0
_0807A584: .4byte 0x00000842
_0807A588:
	lsrs r0, r2, #0x14
	subs r6, r0, #2
	movs r5, #0xf
_0807A58E:
	ands r5, r0
	add r0, sp, #0x2c
	movs r3, #0x1c
	mov r8, r3
	movs r4, #2
	mov sb, r4
	mov r1, r8
	strh r1, [r0]
	mov r2, sb
	strh r2, [r0, #2]
	ldr r0, [sp, #0x2c]
	adds r4, r7, #0
	adds r4, #0x14
	adds r1, r4, #0
	movs r2, #0
	bl func_0804E7A0
	cmp r6, #0
	blt _0807A5EE
	ldr r3, _0807A630 @ =0x00000A5C
	adds r0, r7, r3
	ldr r1, [r0]
	lsls r0, r6, #2
	adds r0, r0, r1
	ldr r1, [r0, #4]
	cmp r1, #0
	beq _0807A5EE
	adds r0, r7, #0
	add r2, sp, #0xc
	bl func_0807A708
	movs r2, #1
	add r0, sp, #0x30
	mov r1, r8
	strh r1, [r0]
	mov r3, sb
	strh r3, [r0, #2]
	ldr r0, [sp, #0x30]
	add r1, sp, #0xc
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r2, [sp, #8]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_0804E958
_0807A5EE:
	adds r0, r7, #0
	bl func_08008910
	adds r6, r0, #0
	lsls r2, r5, #3
	subs r2, r2, r5
	lsls r2, r2, #8
	ldr r3, _0807A634 @ =0x06000C00
	adds r2, r2, r3
	add r0, sp, #0xc
	adds r1, r4, #0
	movs r3, #0xe0
	lsls r3, r3, #3
	bl func_08008F0C
	add r4, sp, #0xc
	mov sb, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0807A638
	cmp r1, #0
	beq _0807A628
	adds r0, r1, #0
	add r1, sp, #0xc
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807A628:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0807A6F8
	.align 2, 0
_0807A630: .4byte 0x00000A5C
_0807A634: .4byte 0x06000C00
_0807A638:
	mov sl, r1
	movs r0, #1
	str r0, [sp, #0x38]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x34]
	add r1, sp, #0x38
	add r0, sp, #0x34
	cmp r4, #1
	bhs _0807A650
	adds r0, r1, #0
_0807A650:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807A66E
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0807A672
	mov r0, r8
	bl func_080D3BC0
	b _0807A672
_0807A66E:
	movs r0, #0
	mov r8, r0
_0807A672:
	adds r4, r0, #0
	str r4, [sp, #0x3c]
	ldr r2, [r6]
	adds r3, r4, #0
	cmp r2, sl
	beq _0807A696
_0807A67E:
	cmp r3, #0
	beq _0807A68E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807A68E:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, sl
	bne _0807A67E
_0807A696:
	adds r4, r3, #0
	ldr r0, [sp, #0x38]
	cmp r0, #1
	bne _0807A6B2
	cmp r4, #0
	beq _0807A6AE
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_0807A6AE:
	adds r4, #0x10
	b _0807A6D4
_0807A6B2:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0807A6D2
_0807A6BA:
	cmp r2, #0
	beq _0807A6CA
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807A6CA:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807A6BA
_0807A6D2:
	adds r4, r2, #0
_0807A6D4:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0807A6E4
_0807A6DE:
	adds r1, #0x10
	cmp r1, r2
	bne _0807A6DE
_0807A6E4:
	cmp r0, #0
	beq _0807A6EC
	bl free
_0807A6EC:
	ldr r0, [sp, #0x3c]
	add r0, r8
	ldr r7, [sp, #0x3c]
	str r7, [r6]
	str r4, [r6, #4]
	str r0, [r6, #0xc]
_0807A6F8:
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0807A708
func_0807A708: @ 0x0807A708
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	mov r8, r0
	adds r3, r1, #0
	adds r5, r2, #0
	movs r0, #0
	mov ip, r0
	mov r1, sp
	ldrb r0, [r3]
	strb r0, [r1]
	ldrb r0, [r3, #1]
	strb r0, [r1, #1]
	mov r0, sp
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807A730
	b _0807A866
_0807A730:
	mov sb, sp
_0807A732:
	mov r1, sb
	ldrb r0, [r1]
	cmp r0, #0x3c
	beq _0807A73C
	b _0807A83C
_0807A73C:
	ldrb r1, [r1, #1]
	adds r0, r1, #0
	subs r0, #0x30
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bhi _0807A74E
	adds r3, #5
	b _0807A848
_0807A74E:
	adds r0, r1, #0
	cmp r0, #0x70
	bne _0807A794
	movs r4, #0
	adds r7, r3, #3
	mov r6, ip
	adds r6, #1
	b _0807A774
_0807A75E:
	mov r2, r8
	ldr r0, [r2, #8]
	ldr r1, _0807A790 @ =0x00001BD8
	adds r0, r0, r1
	bl func_0800E4E0
	adds r0, r0, r4
	ldrb r0, [r0]
	strb r0, [r5]
	adds r5, #1
	adds r4, #1
_0807A774:
	cmp r4, #0xc
	bgt _0807A7CC
	mov r2, r8
	ldr r0, [r2, #8]
	ldr r1, _0807A790 @ =0x00001BD8
	adds r0, r0, r1
	bl func_0800E4E0
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807A75E
	b _0807A7CC
	.align 2, 0
_0807A790: .4byte 0x00001BD8
_0807A794:
	cmp r0, #0x66
	bne _0807A7D0
	movs r4, #0
	adds r7, r3, #3
	mov r6, ip
	adds r6, #1
	b _0807A7B6
_0807A7A2:
	mov r2, r8
	ldr r0, [r2, #8]
	adds r0, #0x14
	bl func_08009AF4
	adds r0, r0, r4
	ldrb r0, [r0]
	strb r0, [r5]
	adds r5, #1
	adds r4, #1
_0807A7B6:
	cmp r4, #0xc
	bgt _0807A7CC
	mov r1, r8
	ldr r0, [r1, #8]
	adds r0, #0x14
	bl func_08009AF4
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807A7A2
_0807A7CC:
	adds r3, r7, #0
	b _0807A84C
_0807A7D0:
	mov r6, ip
	adds r6, #1
	cmp r0, #0x63
	bne _0807A84C
	ldrb r0, [r3, #2]
	mov r2, sb
	strb r0, [r2, #2]
	movs r2, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x70
	bne _0807A7F4
	mov r1, r8
	ldr r0, [r1, #8]
	ldr r1, _0807A7F0 @ =0x000021F0
	b _0807A810
	.align 2, 0
_0807A7F0: .4byte 0x000021F0
_0807A7F4:
	cmp r0, #0x66
	bne _0807A804
	mov r2, r8
	ldr r0, [r2, #8]
	ldr r1, _0807A800 @ =0x000021E0
	b _0807A810
	.align 2, 0
_0807A800: .4byte 0x000021E0
_0807A804:
	cmp r0, #0x73
	bne _0807A812
	mov r2, r8
	ldr r0, [r2, #8]
	movs r1, #0x88
	lsls r1, r1, #6
_0807A810:
	adds r2, r0, r1
_0807A812:
	adds r1, r3, #4
	mov r6, ip
	adds r6, #1
	cmp r2, #0
	beq _0807A838
	ldrb r0, [r2]
	cmp r0, #0
	beq _0807A838
	adds r3, r2, #0
	adds r3, #0x10
_0807A826:
	ldrb r0, [r2]
	strb r0, [r5]
	adds r5, #1
	adds r2, #1
	cmp r2, r3
	bgt _0807A838
	ldrb r0, [r2]
	cmp r0, #0
	bne _0807A826
_0807A838:
	adds r3, r1, #0
	b _0807A84C
_0807A83C:
	strb r0, [r5]
	mov r2, sb
	ldrb r0, [r2, #1]
	strb r0, [r5, #1]
	adds r5, #2
	adds r3, #2
_0807A848:
	mov r6, ip
	adds r6, #1
_0807A84C:
	mov ip, r6
	cmp r6, #0xd
	bgt _0807A866
	ldrb r1, [r3]
	mov r0, sb
	strb r1, [r0]
	ldrb r0, [r3, #1]
	mov r2, sb
	strb r0, [r2, #1]
	lsls r1, r1, #0x18
	cmp r1, #0
	beq _0807A866
	b _0807A732
_0807A866:
	movs r0, #0
	strb r0, [r5]
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0807A878
func_0807A878: @ 0x0807A878
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x40
	adds r5, r0, #0
	mov r1, sp
	movs r0, #0
	str r0, [sp]
	strh r0, [r1, #4]
	add r1, sp, #8
	mov sb, r1
	str r0, [sp, #8]
	strh r0, [r1, #4]
	add r7, sp, #0x10
	str r0, [sp, #0x10]
	strh r0, [r7, #4]
	add r1, sp, #0x18
	str r0, [sp, #0x18]
	strh r0, [r1, #4]
	ldr r2, _0807A974 @ =0x00000774
	adds r0, r5, r2
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	movs r4, #0xef
	lsls r4, r4, #3
	adds r0, r5, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x20
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x20
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r1, sp
	adds r0, r4, #0
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	ldr r6, [sp, #0x10]
	ldr r3, _0807A978 @ =0x00000818
	adds r0, r5, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r1, _0807A97C @ =0x05000200
	mov r8, r1
	adds r1, r0, r1
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0807A8FA
	ldrh r2, [r7, #4]
_0807A8FA:
	adds r0, r6, #0
	bl func_08008E64
	ldr r2, _0807A980 @ =0x00000744
	adds r1, r5, r2
	adds r0, r4, #0
	movs r2, #0
	bl func_0805E790
	mov r1, sp
	adds r0, r4, #0
	ldm r0!, {r3, r4, r6}
	stm r1!, {r3, r4, r6}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r6}
	stm r1!, {r2, r6}
	ldr r4, [sp, #0x10]
	ldr r3, _0807A984 @ =0x00000838
	adds r0, r5, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	mov r6, r8
	adds r1, r0, r6
	ldr r0, [sp, #0x10]
	movs r2, #0
	cmp r0, #0
	beq _0807A938
	ldrh r2, [r7, #4]
_0807A938:
	adds r0, r4, #0
	bl func_08008E64
	ldr r4, [sp, #8]
	movs r1, #0x83
	lsls r1, r1, #4
	adds r0, r5, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r2, _0807A988 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #8]
	movs r2, #0
	cmp r0, #0
	beq _0807A95E
	mov r3, sb
	ldrh r2, [r3, #4]
_0807A95E:
	adds r0, r4, #0
	bl func_08008E64
	add sp, #0x40
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807A974: .4byte 0x00000774
_0807A978: .4byte 0x00000818
_0807A97C: .4byte 0x05000200
_0807A980: .4byte 0x00000744
_0807A984: .4byte 0x00000838
_0807A988: .4byte 0x06010000

	thumb_func_start func_0807A98C
func_0807A98C: @ 0x0807A98C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x80
	mov r8, r0
	mov r1, sp
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0xc]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x18]
	add r6, sp, #0x1c
	str r0, [sp, #0x1c]
	strh r0, [r6, #4]
	add r5, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r5, #4]
	add r1, sp, #0x2c
	str r0, [sp, #0x2c]
	strh r0, [r1, #4]
	add r1, sp, #0x34
	str r0, [sp, #0x34]
	strh r0, [r1, #4]
	ldr r1, _0807AB84 @ =0xFFFFFCFF
	ldr r0, [sp, #0x5c]
	ands r0, r1
	ldr r4, _0807AB88 @ =0xFFFFF3FF
	ands r0, r4
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	ldr r1, _0807AB8C @ =0xFFFFDFFF
	ands r0, r1
	ldr r1, _0807AB90 @ =0xFFFF3FFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	ldr r1, _0807AB94 @ =0xF1FFFFFF
	ands r0, r1
	ldr r1, _0807AB98 @ =0xEFFFFFFF
	ands r0, r1
	ldr r1, _0807AB9C @ =0xDFFFFFFF
	ands r0, r1
	ldr r1, _0807ABA0 @ =0x3FFFFFFF
	ands r0, r1
	str r0, [sp, #0x5c]
	ldr r0, _0807ABA4 @ =0x00000828
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _0807ABA8 @ =0xFFFF0FFF
	add r3, sp, #0x5c
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	ldr r0, _0807ABAC @ =0x0000FFFF
	ands r1, r0
	ands r1, r4
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r1, r0
	str r1, [r3, #4]
	ldr r1, _0807ABB0 @ =0xFFFFFF00
	ldr r0, [sp, #0x5c]
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	str r0, [sp, #0x5c]
	movs r4, #0
	mov sb, r3
	movs r5, #0x82
	lsls r5, r5, #4
	add r5, r8
	movs r7, #8
	mov sl, sb
_0807AA42:
	ldr r1, _0807ABB4 @ =0x000001FF
	ands r1, r7
	lsls r1, r1, #0x10
	ldr r2, _0807ABB8 @ =0xFE00FFFF
	ldr r0, [sp, #0x5c]
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x5c]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	lsls r1, r4, #1
	adds r0, r0, r1
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _0807ABBC @ =0xFFFFFC00
	mov r3, sl
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r3, #4]
	mov r0, r8
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _0807AA90
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp, #0x5c]
	str r0, [r1]
	mov r6, sb
	ldrh r0, [r6, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_0807AA90:
	adds r7, #8
	adds r4, #1
	cmp r4, #0x1b
	ble _0807AA42
	ldr r0, _0807ABC0 @ =0x00000844
	add r0, r8
	ldr r0, [r0]
	cmp r0, #0
	bgt _0807AAA4
	b _0807ACB0
_0807AAA4:
	ldr r4, _0807ABC4 @ =0x00000774
	add r4, r8
	adds r0, r4, #0
	bl func_0805E8F0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	movs r0, #0xef
	lsls r0, r0, #3
	add r0, r8
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r7, sp, #0x3c
	adds r0, r7, #0
	adds r1, r7, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	adds r0, r7, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	mov r1, sp
	movs r0, #0xf1
	lsls r0, r0, #3
	add r0, r8
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0xe8
	strh r0, [r1]
	movs r0, #0x1a
	strh r0, [r1, #2]
	movs r4, #0x81
	lsls r4, r4, #4
	add r4, r8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	ldr r0, _0807ABC8 @ =0x00000818
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r0, #2
	strh r0, [r1, #8]
	mov r0, sp
	movs r6, #1
	mov sb, r6
	mov r1, sb
	strb r1, [r0, #0x18]
	mov r0, r8
	bl func_08008910
	adds r5, r0, #0
	ldr r6, [sp, #0x24]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _0807AB52
	mov r4, sp
	ldrh r3, [r4, #0x28]
_0807AB52:
	lsls r2, r2, #5
	ldr r0, _0807ABCC @ =0x06010000
	adds r2, r2, r0
	adds r0, r7, #0
	adds r1, r6, #0
	bl func_08008F0C
	mov sl, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0807ABD0
	cmp r1, #0
	beq _0807AB7A
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807AB7A:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0807AC92
	.align 2, 0
_0807AB84: .4byte 0xFFFFFCFF
_0807AB88: .4byte 0xFFFFF3FF
_0807AB8C: .4byte 0xFFFFDFFF
_0807AB90: .4byte 0xFFFF3FFF
_0807AB94: .4byte 0xF1FFFFFF
_0807AB98: .4byte 0xEFFFFFFF
_0807AB9C: .4byte 0xDFFFFFFF
_0807ABA0: .4byte 0x3FFFFFFF
_0807ABA4: .4byte 0x00000828
_0807ABA8: .4byte 0xFFFF0FFF
_0807ABAC: .4byte 0x0000FFFF
_0807ABB0: .4byte 0xFFFFFF00
_0807ABB4: .4byte 0x000001FF
_0807ABB8: .4byte 0xFE00FFFF
_0807ABBC: .4byte 0xFFFFFC00
_0807ABC0: .4byte 0x00000844
_0807ABC4: .4byte 0x00000774
_0807ABC8: .4byte 0x00000818
_0807ABCC: .4byte 0x06010000
_0807ABD0:
	str r1, [sp, #0x74]
	mov r6, sb
	str r6, [sp, #0x68]
	ldr r0, [r5]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r1, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _0807ABEA
	adds r0, r1, #0
_0807ABEA:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807AC08
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0807AC0C
	mov r0, sb
	bl func_080D3BC0
	b _0807AC0C
_0807AC08:
	movs r0, #0
	mov sb, r0
_0807AC0C:
	adds r4, r0, #0
	str r4, [sp, #0x78]
	ldr r2, [r5]
	adds r3, r4, #0
	b _0807AC2A
_0807AC16:
	cmp r3, #0
	beq _0807AC26
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807AC26:
	adds r2, #0x10
	adds r3, #0x10
_0807AC2A:
	ldr r0, [sp, #0x74]
	cmp r2, r0
	bne _0807AC16
	adds r4, r3, #0
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _0807AC4C
	cmp r4, #0
	beq _0807AC48
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_0807AC48:
	adds r4, #0x10
	b _0807AC6E
_0807AC4C:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _0807AC6C
_0807AC54:
	cmp r2, #0
	beq _0807AC64
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807AC64:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807AC54
_0807AC6C:
	adds r4, r2, #0
_0807AC6E:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _0807AC7E
_0807AC78:
	adds r1, #0x10
	cmp r1, r2
	bne _0807AC78
_0807AC7E:
	cmp r0, #0
	beq _0807AC86
	bl free
_0807AC86:
	ldr r0, [sp, #0x78]
	add r0, sb
	ldr r7, [sp, #0x78]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0807AC92:
	mov r0, r8
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0807ACA8
	mov r0, sp
	ldrh r2, [r0, #0x20]
_0807ACA8:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_0807ACB0:
	ldr r0, _0807ADA0 @ =0x00000844
	add r0, r8
	ldr r1, _0807ADA4 @ =0x00000848
	add r1, r8
	ldr r2, [r0]
	ldr r0, [r1]
	cmp r2, r0
	blt _0807ACC2
	b _0807AE9C
_0807ACC2:
	movs r4, #0xf5
	lsls r4, r4, #3
	add r4, r8
	adds r0, r4, #0
	bl func_0805E8F0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	ldr r0, _0807ADA8 @ =0x000007AC
	add r0, r8
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r7, sp, #0x3c
	adds r0, r7, #0
	adds r1, r7, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	adds r0, r7, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	mov r1, sp
	ldr r0, _0807ADAC @ =0x000007BC
	add r0, r8
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0xe8
	strh r0, [r1]
	movs r0, #0x98
	strh r0, [r1, #2]
	movs r4, #0x81
	lsls r4, r4, #4
	add r4, r8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	adds r0, #4
	strh r0, [r1, #6]
	ldr r0, _0807ADB0 @ =0x00000818
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r0, #2
	strh r0, [r1, #8]
	mov r0, sp
	movs r6, #1
	strb r6, [r0, #0x18]
	mov r0, r8
	bl func_08008910
	adds r5, r0, #0
	ldr r0, [sp, #0x24]
	mov sb, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _0807AD6E
	mov r1, sp
	ldrh r3, [r1, #0x28]
_0807AD6E:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r4, _0807ADB4 @ =0x06010080
	adds r2, r2, r4
	adds r0, r7, #0
	mov r1, sb
	bl func_08008F0C
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0807ADB8
	cmp r1, #0
	beq _0807AD98
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807AD98:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0807AE7E
	.align 2, 0
_0807ADA0: .4byte 0x00000844
_0807ADA4: .4byte 0x00000848
_0807ADA8: .4byte 0x000007AC
_0807ADAC: .4byte 0x000007BC
_0807ADB0: .4byte 0x00000818
_0807ADB4: .4byte 0x06010080
_0807ADB8:
	str r1, [sp, #0x78]
	movs r3, #1
	str r3, [sp, #0x70]
	ldr r0, [r6]
	adds r4, r1, #0
	subs r0, r4, r0
	asrs r4, r0, #4
	str r4, [sp, #0x6c]
	add r1, sp, #0x70
	add r0, sp, #0x6c
	cmp r4, #1
	bhs _0807ADD2
	adds r0, r1, #0
_0807ADD2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807ADF0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0807ADF4
	mov r0, sb
	bl func_080D3BC0
	b _0807ADF4
_0807ADF0:
	movs r0, #0
	mov sb, r0
_0807ADF4:
	adds r5, r0, #0
	str r5, [sp, #0x7c]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x78]
	cmp r2, r5
	beq _0807AE1C
_0807AE02:
	cmp r3, #0
	beq _0807AE12
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807AE12:
	adds r2, #0x10
	adds r3, #0x10
	ldr r7, [sp, #0x78]
	cmp r2, r7
	bne _0807AE02
_0807AE1C:
	adds r5, r3, #0
	ldr r0, [sp, #0x70]
	cmp r0, #1
	bne _0807AE38
	cmp r5, #0
	beq _0807AE34
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807AE34:
	adds r5, #0x10
	b _0807AE5A
_0807AE38:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0807AE58
_0807AE40:
	cmp r2, #0
	beq _0807AE50
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807AE50:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807AE40
_0807AE58:
	adds r5, r2, #0
_0807AE5A:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0807AE6A
_0807AE64:
	adds r1, #0x10
	cmp r1, r2
	bne _0807AE64
_0807AE6A:
	cmp r0, #0
	beq _0807AE72
	bl free
_0807AE72:
	ldr r0, [sp, #0x7c]
	add r0, sb
	ldr r7, [sp, #0x7c]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0807AE7E:
	mov r0, r8
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0807AE94
	mov r0, sp
	ldrh r2, [r0, #0x20]
_0807AE94:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_0807AE9C:
	ldr r0, _0807AF64 @ =0x0000080C
	add r0, r8
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807AF52
	ldr r4, _0807AF68 @ =0x000007DC
	add r4, r8
	adds r0, r4, #0
	bl func_0805E8F0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	movs r0, #0xfc
	lsls r0, r0, #3
	add r0, r8
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x3c
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x1c
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r5, r6, r7}
	stm r0!, {r5, r6, r7}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	mov r1, sp
	movs r0, #0xfe
	lsls r0, r0, #3
	add r0, r8
	ldm r0!, {r3, r4, r5}
	stm r1!, {r3, r4, r5}
	ldm r0!, {r2, r6, r7}
	stm r1!, {r2, r6, r7}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	ldr r0, _0807AF6C @ =0x00000852
	add r0, r8
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r0, _0807AF70 @ =0x00000854
	add r0, r8
	ldrh r0, [r0]
	strh r0, [r1, #2]
	movs r0, #0x83
	lsls r0, r0, #4
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	ldr r0, _0807AF74 @ =0x00000838
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r2, #1
	movs r0, #1
	strh r0, [r1, #8]
	mov r0, sp
	strb r2, [r0, #0x18]
	mov r0, r8
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0807AF4A
	mov r4, sp
	ldrh r2, [r4, #0x20]
_0807AF4A:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_0807AF52:
	add sp, #0x80
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807AF64: .4byte 0x0000080C
_0807AF68: .4byte 0x000007DC
_0807AF6C: .4byte 0x00000852
_0807AF70: .4byte 0x00000854
_0807AF74: .4byte 0x00000838

	thumb_func_start func_0807AF78
func_0807AF78: @ 0x0807AF78
	push {r4, lr}
	adds r3, r0, #0
	movs r2, #0x84
	lsls r2, r2, #4
	adds r0, r3, r2
	ldrh r2, [r0]
	ldr r0, _0807AFA0 @ =0x0000FFF0
	ands r0, r2
	ldr r4, _0807AFA4 @ =0x00000842
	adds r2, r3, r4
	strh r0, [r2]
	ldr r0, _0807AFA8 @ =0x00000844
	adds r2, r3, r0
	ldr r0, [r2]
	adds r1, r0, r1
	str r1, [r2]
	cmp r1, #0
	bge _0807AFAC
	movs r0, #0
	b _0807AFB6
	.align 2, 0
_0807AFA0: .4byte 0x0000FFF0
_0807AFA4: .4byte 0x00000842
_0807AFA8: .4byte 0x00000844
_0807AFAC:
	ldr r4, _0807AFE4 @ =0x00000848
	adds r0, r3, r4
	ldr r0, [r0]
	cmp r1, r0
	ble _0807AFB8
_0807AFB6:
	str r0, [r2]
_0807AFB8:
	ldr r1, _0807AFE8 @ =0x00000844
	adds r0, r3, r1
	movs r2, #2
	ldrsh r1, [r0, r2]
	movs r4, #0x84
	lsls r4, r4, #4
	adds r0, r3, r4
	strh r1, [r0]
	ldr r2, _0807AFEC @ =0x00000842
	adds r0, r3, r2
	ldr r2, _0807AFF0 @ =0x0000FFF0
	ldrh r0, [r0]
	ands r1, r2
	cmp r0, r1
	beq _0807AFDC
	adds r0, r3, #0
	bl func_0807A554
_0807AFDC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807AFE4: .4byte 0x00000848
_0807AFE8: .4byte 0x00000844
_0807AFEC: .4byte 0x00000842
_0807AFF0: .4byte 0x0000FFF0

	thumb_func_start func_0807AFF4
func_0807AFF4: @ 0x0807AFF4
	push {r4, lr}
	sub sp, #8
	movs r2, #0xa6
	lsls r2, r2, #4
	adds r1, r0, r2
	ldr r2, [r1]
	ldr r4, [r1, #4]
	movs r1, #0x84
	lsls r1, r1, #4
	adds r0, r0, r1
	ldrh r0, [r0]
	lsrs r0, r0, #4
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp]
	adds r0, r2, #0
	adds r1, r4, #0
	add r2, sp, #4
	movs r3, #0
	bl func_080E3398
	movs r2, #0
	cmp r0, r4
	beq _0807B02E
	ldr r1, [sp, #4]
	ldr r0, [r0]
	cmp r1, r0
	blo _0807B02E
	movs r2, #1
_0807B02E:
	adds r0, r2, #0
	add sp, #8
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start func_0807B038
func_0807B038: @ 0x0807B038
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r4, r0, #0
	mov r8, r1
	adds r5, r2, #0
	adds r6, r3, #0
	ldr r0, _0807B074 @ =vtable_unk_080E7BDC
	str r0, [r4]
	ldr r0, _0807B078 @ =0x00000A74
	bl __builtin_new
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_08078E40
	str r0, [r4, #4]
	mov r0, r8
	ldr r1, [r0]
	movs r0, #0
	mov r2, r8
	str r0, [r2]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807B074: .4byte vtable_unk_080E7BDC
_0807B078: .4byte 0x00000A74
_0807B07C:
	.byte 0x30, 0xB5, 0x04, 0x1C
	.byte 0x0D, 0x1C, 0x0D, 0x48, 0x20, 0x60, 0xA1, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68
	.byte 0x08, 0x1C, 0x03, 0x21, 0x58, 0xF0, 0x3E, 0xFC, 0x61, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x48, 0x68
	.byte 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0x58, 0xF0, 0x35, 0xFC, 0x20, 0x1C, 0x29, 0x1C, 0x85, 0xF7
	.byte 0x9D, 0xFB, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xDC, 0x7B, 0x0E, 0x08, 0x30, 0xB5, 0x81, 0xB0
	.byte 0x05, 0x1C, 0x0C, 0x1C, 0x61, 0x68, 0x68, 0x46, 0xFE, 0xF7, 0x0C, 0xF8, 0x00, 0x99, 0x00, 0x29
	.byte 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0x58, 0xF0, 0x1B, 0xFC, 0xA1, 0x68
	.byte 0x00, 0x20, 0xA0, 0x60, 0x29, 0x60, 0x28, 0x1C, 0x01, 0xB0, 0x30, 0xBC, 0x02, 0xBC, 0x08, 0x47

	thumb_func_start func_0807B0F0
func_0807B0F0: @ 0x0807B0F0
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	bl func_080C7F58
	ldr r0, _0807B10C @ =vtable_unk_080E7BEC
	str r0, [r5, #4]
	ldr r0, _0807B110 @ =0x000006A4
	adds r1, r5, r0
	cmp r4, #0
	beq _0807B114
	movs r0, #4
	str r0, [r1]
	b _0807B116
	.align 2, 0
_0807B10C: .4byte vtable_unk_080E7BEC
_0807B110: .4byte 0x000006A4
_0807B114:
	str r4, [r1]
_0807B116:
	movs r1, #0xd5
	lsls r1, r1, #3
	adds r0, r5, r1
	movs r1, #0
	strb r1, [r0]
	ldr r2, _0807B164 @ =0x000006EC
	adds r0, r5, r2
	str r1, [r0]
	movs r0, #8
	ldr r7, _0807B168 @ =0x080FD9EC
	subs r1, #1
_0807B12C:
	subs r0, #1
	cmp r0, r1
	bne _0807B12C
	ldr r0, _0807B16C @ =0x00002234
	adds r6, r5, r0
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x7f
	bls _0807B144
	movs r4, #0x7f
_0807B144:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	ldr r2, _0807B170 @ =0x000022B4
	adds r1, r5, r2
	movs r0, #0
	strb r0, [r1]
	adds r0, r5, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807B164: .4byte 0x000006EC
_0807B168: .4byte 0x080FD9EC
_0807B16C: .4byte 0x00002234
_0807B170: .4byte 0x000022B4
_0807B174:
	.byte 0x00, 0xB5, 0x03, 0x4A, 0x42, 0x60, 0x4D, 0xF0, 0xF1, 0xF8, 0x01, 0xBC
	.byte 0x00, 0x47, 0x00, 0x00, 0xEC, 0x7B, 0x0E, 0x08

	thumb_func_start func_0807B188
func_0807B188: @ 0x0807B188
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xec
	adds r6, r0, #0
	movs r0, #4
	str r0, [sp, #0xd8]
	adds r3, r6, #0
	adds r3, #0x20
	adds r5, r6, #0
	adds r5, #0x24
	ldr r0, [r6, #0x20]
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r3, r0
	adds r2, r0, #0
	adds r1, r5, #0
	ldr r4, [r3]
	cmp r1, r2
	beq _0807B1BA
_0807B1B4:
	adds r1, #0x10
	cmp r1, r2
	bne _0807B1B4
_0807B1BA:
	subs r0, r0, r5
	asrs r0, r0, #4
	subs r0, r4, r0
	str r0, [r3]
	movs r1, #0
	str r1, [sp, #0xdc]
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r0, r6, r2
	ldr r0, [r0]
	cmp r1, r0
	blo _0807B1D4
	b _0807B398
_0807B1D4:
	mov r3, sp
	adds r3, #0x1c
	str r3, [sp, #0xe4]
	movs r5, #0
	movs r4, #4
	str r4, [sp, #0xe8]
_0807B1E0:
	movs r7, #0xa9
	lsls r7, r7, #2
	adds r0, r6, r7
	ldr r1, [sp, #0xe8]
	adds r0, r0, r1
	ldr r3, [r0]
	lsls r1, r3, #2
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r2, _0807B290 @ =0x080FD988
	add r0, sp, #8
	adds r1, r1, r2
	ldm r1!, {r2, r4, r7}
	stm r0!, {r2, r4, r7}
	ldm r1!, {r2, r4}
	stm r0!, {r2, r4}
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #3
	adds r0, #0xd0
	str r0, [sp, #0xe0]
	ldr r0, [sp, #0x18]
	cmp r0, #1
	bls _0807B212
	b _0807B31A
_0807B212:
	movs r0, #0x10
	ldr r7, [sp, #0xe4]
	str r0, [r7, #4]
	add r4, sp, #0x2c
	adds r0, r4, #0
	ldr r1, _0807B294 @ =0x086678A0
	bl func_0805E6CC
	add r0, sp, #0x5c
	strh r5, [r0]
	strh r5, [r0, #2]
	add r0, sp, #0x60
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x74
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	movs r1, #0
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r1, [r0, #0x18]
	add r0, sp, #0x90
	strb r1, [r0]
	add r3, sp, #0x94
	str r5, [r3]
	strh r5, [r3, #4]
	add r2, sp, #0x9c
	str r5, [r2]
	strh r5, [r2, #4]
	add r1, sp, #0xa4
	str r5, [r1]
	strh r5, [r1, #4]
	add r0, sp, #0xac
	str r5, [r0]
	strh r5, [r0, #4]
	ldr r4, [sp, #0xd8]
	lsls r0, r4, #3
	strh r0, [r7]
	ldr r0, [sp, #0x18]
	add r7, sp, #0x1c
	mov r8, r3
	mov sb, r2
	mov sl, r1
	cmp r0, #0
	bne _0807B298
	add r4, sp, #0xd4
	ldr r1, [sp, #8]
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetIconId__C7Article
	b _0807B2AA
	.align 2, 0
_0807B290: .4byte 0x080FD988
_0807B294: .4byte 0x086678A0
_0807B298:
	mov r4, sp
	adds r4, #0xd5
	ldr r1, [sp, #8]
	adds r0, r4, #0
	bl __4ToolUi
	adds r0, r4, #0
	bl GetIconId__C4Tool
_0807B2AA:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	add r4, sp, #0x60
	adds r0, r4, #0
	bl func_0805E860
	ldr r1, [sp, #0x60]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x64]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xb4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0xb4
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r0, r8
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	mov r3, sb
	ldr r0, [r3]
	str r0, [r7, #8]
	mov r4, sl
	ldr r0, [r4]
	str r0, [r7, #0xc]
	adds r1, r6, #0
	adds r1, #0x20
	ldr r0, [r6, #0x20]
	cmp r0, #0x27
	bhi _0807B316
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0807B310
	adds r1, r7, #0
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x28]
	str r1, [r0]
_0807B310:
	ldr r0, [r6, #0x20]
	adds r0, #1
	str r0, [r6, #0x20]
_0807B316:
	ldr r0, _0807B3AC @ =vtable_unk_080E5A28
	str r0, [sp, #0x2c]
_0807B31A:
	ldr r0, [r6, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r7, [sp, #0xd8]
	lsls r4, r7, #6
	adds r0, r0, r4
	adds r0, #4
	ldr r2, [sp, #0xe0]
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	movs r3, #0
	mov sb, r3
	str r3, [sp]
	movs r7, #0x20
	str r7, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r0, r0, r6
	mov r8, r0
	ldr r0, [sp, #0xe8]
	add r0, r8
	ldr r0, [r0]
	cmp r0, #2
	bhi _0807B37C
	ldr r0, [r6, #0x1c]
	ldr r1, [r0, #0x18]
	adds r1, r1, r4
	adds r1, #0x32
	ldr r0, [sp, #0x10]
	str r7, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r6, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	mov r1, sb
	str r1, [sp]
	str r7, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
_0807B37C:
	ldr r2, [sp, #0xd8]
	adds r2, #2
	str r2, [sp, #0xd8]
	ldr r3, [sp, #0xe8]
	adds r3, #4
	str r3, [sp, #0xe8]
	ldr r4, [sp, #0xdc]
	adds r4, #1
	str r4, [sp, #0xdc]
	mov r7, r8
	ldr r0, [r7]
	cmp r4, r0
	bhs _0807B398
	b _0807B1E0
_0807B398:
	ldr r0, [sp, #0xd8]
	add sp, #0xec
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807B3AC: .4byte vtable_unk_080E5A28

	thumb_func_start func_0807B3B0
func_0807B3B0: @ 0x0807B3B0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x70
	mov r8, r0
	movs r0, #4
	str r0, [sp, #0x4c]
	mov r4, r8
	adds r4, #0x20
	mov r6, r8
	adds r6, #0x24
	mov r1, r8
	ldr r0, [r1, #0x20]
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	adds r2, r0, #0
	adds r1, r6, #0
	ldr r5, [r4]
	mov r7, r8
	ldr r3, [r7, #8]
	cmp r1, r2
	beq _0807B3E8
_0807B3E2:
	adds r1, #0x10
	cmp r1, r2
	bne _0807B3E2
_0807B3E8:
	subs r0, r0, r6
	asrs r0, r0, #4
	subs r0, r5, r0
	str r0, [r4]
	movs r0, #0
	str r0, [sp, #0x54]
	b _0807B8B8
_0807B3F6:
	mov r2, r8
	ldr r0, [r2, #8]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl GetChicken__4CoopUi
	str r0, [sp, #0x50]
	movs r0, #0x10
	str r0, [sp, #0x10]
	add r1, sp, #0xc
	ldr r4, [sp, #0x4c]
	lsls r0, r4, #3
	strh r0, [r1]
	ldr r0, _0807B544 @ =0x0875268C
	str r0, [sp, #0x14]
	ldr r0, _0807B548 @ =0x0875270C
	str r0, [sp, #0x18]
	mov r1, r8
	adds r1, #0x20
	mov r5, r8
	ldr r0, [r5, #0x20]
	adds r4, r1, #0
	cmp r0, #0x27
	bhi _0807B444
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0807B43C
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807B43C:
	mov r5, r8
	ldr r0, [r5, #0x20]
	adds r0, #1
	str r0, [r5, #0x20]
_0807B444:
	ldr r0, [sp, #0x50]
	bl IsFestivalWinner__C6Animal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807B480
	movs r0, #0x20
	str r0, [sp, #0x10]
	ldr r0, _0807B54C @ =0x0875196C
	str r0, [sp, #0x14]
	ldr r0, _0807B550 @ =0x087519EC
	str r0, [sp, #0x18]
	mov r7, r8
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _0807B480
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _0807B478
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807B478:
	mov r5, r8
	ldr r0, [r5, #0x20]
	adds r0, #1
	str r0, [r5, #0x20]
_0807B480:
	ldr r7, [sp, #0x54]
	lsls r4, r7, #1
	adds r4, r4, r7
	lsls r4, r4, #6
	adds r4, r4, r7
	lsls r4, r4, #2
	mov r0, r8
	adds r1, r4, r0
	movs r2, #0xe2
	lsls r2, r2, #3
	adds r1, r1, r2
	add r0, sp, #0x2c
	movs r5, #0xc
	movs r6, #2
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x2c]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [sp, #0x50]
	bl GetName__C6Animal
	adds r2, r0, #0
	mov r3, r8
	adds r1, r4, r3
	movs r7, #0xe2
	lsls r7, r7, #3
	adds r1, r1, r7
	add r0, sp, #0x30
	strh r5, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x30]
	adds r1, #4
	str r2, [sp]
	movs r2, #0
	str r2, [sp, #4]
	movs r3, #1
	str r3, [sp, #8]
	movs r3, #0
	bl func_0804E958
	ldr r1, [sp, #0x54]
	adds r1, #4
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, #0xd0
	mov sb, r0
	mov r0, r8
	bl func_08008910
	add r4, r8
	adds r4, r4, r7
	adds r4, #4
	adds r6, r0, #0
	mov r5, sb
	lsls r2, r5, #5
	movs r7, #0xc0
	lsls r7, r7, #0x13
	adds r2, r2, r7
	add r0, sp, #0x1c
	adds r1, r4, #0
	movs r3, #0xc0
	lsls r3, r3, #2
	bl func_08008F0C
	add r0, sp, #0x1c
	mov sl, r0
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0807B554
	cmp r1, #0
	beq _0807B524
	adds r0, r1, #0
	add r1, sp, #0x1c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807B524:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	ldr r5, [sp, #0x4c]
	lsls r5, r5, #6
	str r5, [sp, #0x60]
	mov r7, sb
	lsls r7, r7, #0x10
	mov sb, r7
	ldr r0, [sp, #0x4c]
	adds r0, #2
	str r0, [sp, #0x5c]
	ldr r1, [sp, #0x54]
	adds r1, #1
	str r1, [sp, #0x58]
	b _0807B634
	.align 2, 0
_0807B544: .4byte 0x0875268C
_0807B548: .4byte 0x0875270C
_0807B54C: .4byte 0x0875196C
_0807B550: .4byte 0x087519EC
_0807B554:
	str r1, [sp, #0x68]
	movs r2, #1
	str r2, [sp, #0x38]
	ldr r0, [r6]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x34]
	add r1, sp, #0x38
	add r0, sp, #0x34
	cmp r4, #1
	bhs _0807B56E
	adds r0, r1, #0
_0807B56E:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807B58C
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	str r4, [sp, #0x64]
	cmp r0, #0
	bne _0807B592
	adds r0, r4, #0
	bl func_080D3BC0
	b _0807B592
_0807B58C:
	movs r0, #0
	movs r4, #0
	str r4, [sp, #0x64]
_0807B592:
	adds r5, r0, #0
	str r5, [sp, #0x6c]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r5, [sp, #0x4c]
	lsls r5, r5, #6
	str r5, [sp, #0x60]
	mov r7, sb
	lsls r7, r7, #0x10
	mov sb, r7
	ldr r0, [sp, #0x4c]
	adds r0, #2
	str r0, [sp, #0x5c]
	ldr r1, [sp, #0x54]
	adds r1, #1
	str r1, [sp, #0x58]
	ldr r4, [sp, #0x68]
	cmp r2, r4
	beq _0807B5D2
_0807B5B8:
	cmp r3, #0
	beq _0807B5C8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807B5C8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x68]
	cmp r2, r5
	bne _0807B5B8
_0807B5D2:
	adds r5, r3, #0
	ldr r0, [sp, #0x38]
	cmp r0, #1
	bne _0807B5EE
	cmp r5, #0
	beq _0807B5EA
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807B5EA:
	adds r5, #0x10
	b _0807B610
_0807B5EE:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0807B60E
_0807B5F6:
	cmp r2, #0
	beq _0807B606
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807B606:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807B5F6
_0807B60E:
	adds r5, r2, #0
_0807B610:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0807B620
_0807B61A:
	adds r1, #0x10
	cmp r1, r2
	bne _0807B61A
_0807B620:
	cmp r0, #0
	beq _0807B628
	bl free
_0807B628:
	ldr r1, [sp, #0x64]
	ldr r2, [sp, #0x6c]
	adds r0, r1, r2
	str r2, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0807B634:
	mov r3, r8
	ldr r0, [r3, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r4, [sp, #0x60]
	adds r0, r0, r4
	adds r0, #0xc
	mov r5, sb
	lsrs r1, r5, #0x10
	movs r7, #0
	str r7, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	mov r0, r8
	bl func_08008910
	adds r6, r0, #0
	movs r0, #0xf8
	lsls r0, r0, #1
	lsls r2, r0, #5
	add r0, sp, #0x1c
	ldr r1, _0807B698 @ =0x0875254C
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r2, r2, r3
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #0x1c
	mov sl, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0807B69C
	cmp r1, #0
	beq _0807B68E
	adds r0, r1, #0
	add r1, sp, #0x1c
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807B68E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0807B766
	.align 2, 0
_0807B698: .4byte 0x0875254C
_0807B69C:
	str r1, [sp, #0x68]
	movs r0, #1
	str r0, [sp, #0x40]
	ldr r1, [r6]
	ldr r3, [sp, #0x68]
	subs r0, r3, r1
	asrs r4, r0, #4
	str r4, [sp, #0x3c]
	add r2, sp, #0x40
	add r0, sp, #0x3c
	cmp r4, #1
	bhs _0807B6B6
	adds r0, r2, #0
_0807B6B6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807B6D6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0807B6D2
	mov r0, sb
	bl func_080D3BC0
_0807B6D2:
	ldr r1, [r6]
	b _0807B6DA
_0807B6D6:
	movs r0, #0
	mov sb, r0
_0807B6DA:
	adds r5, r0, #0
	str r5, [sp, #0x6c]
	adds r2, r1, #0
	adds r3, r5, #0
	ldr r4, [sp, #0x68]
	cmp r2, r4
	beq _0807B702
_0807B6E8:
	cmp r3, #0
	beq _0807B6F8
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807B6F8:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x68]
	cmp r2, r5
	bne _0807B6E8
_0807B702:
	adds r5, r3, #0
	ldr r0, [sp, #0x40]
	cmp r0, #1
	bne _0807B71E
	cmp r5, #0
	beq _0807B71A
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807B71A:
	adds r5, #0x10
	b _0807B740
_0807B71E:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0807B73E
_0807B726:
	cmp r2, #0
	beq _0807B736
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807B736:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807B726
_0807B73E:
	adds r5, r2, #0
_0807B740:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _0807B750
_0807B74A:
	adds r0, #0x10
	cmp r0, r2
	bne _0807B74A
_0807B750:
	cmp r1, #0
	beq _0807B75A
	adds r0, r1, #0
	bl free
_0807B75A:
	ldr r0, [sp, #0x6c]
	add r0, sb
	ldr r1, [sp, #0x6c]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0807B766:
	mov r0, r8
	bl func_08008910
	adds r6, r0, #0
	add r0, sp, #0x1c
	ldr r1, _0807B7A0 @ =0x087525CC
	ldr r2, _0807B7A4 @ =0x05000020
	movs r3, #0x20
	bl func_08008F0C
	add r2, sp, #0x1c
	mov sl, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0807B7A8
	cmp r1, #0
	beq _0807B796
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0807B796:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0807B86E
	.align 2, 0
_0807B7A0: .4byte 0x087525CC
_0807B7A4: .4byte 0x05000020
_0807B7A8:
	str r1, [sp, #0x68]
	movs r0, #1
	str r0, [sp, #0x48]
	ldr r1, [r6]
	ldr r7, [sp, #0x68]
	subs r0, r7, r1
	asrs r4, r0, #4
	str r4, [sp, #0x44]
	add r2, sp, #0x48
	add r0, sp, #0x44
	cmp r4, #1
	bhs _0807B7C2
	adds r0, r2, #0
_0807B7C2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807B7E2
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0807B7DE
	mov r0, sb
	bl func_080D3BC0
_0807B7DE:
	ldr r1, [r6]
	b _0807B7E6
_0807B7E2:
	movs r0, #0
	mov sb, r0
_0807B7E6:
	adds r5, r0, #0
	str r5, [sp, #0x6c]
	adds r2, r1, #0
	adds r3, r5, #0
	b _0807B804
_0807B7F0:
	cmp r3, #0
	beq _0807B800
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807B800:
	adds r2, #0x10
	adds r3, #0x10
_0807B804:
	ldr r0, [sp, #0x68]
	cmp r2, r0
	bne _0807B7F0
	adds r5, r3, #0
	ldr r0, [sp, #0x48]
	cmp r0, #1
	bne _0807B826
	cmp r5, #0
	beq _0807B822
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807B822:
	adds r5, #0x10
	b _0807B848
_0807B826:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0807B846
_0807B82E:
	cmp r2, #0
	beq _0807B83E
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0807B83E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0807B82E
_0807B846:
	adds r5, r2, #0
_0807B848:
	ldr r2, [r6, #4]
	ldr r1, [r6]
	adds r0, r1, #0
	cmp r1, r2
	beq _0807B858
_0807B852:
	adds r0, #0x10
	cmp r0, r2
	bne _0807B852
_0807B858:
	cmp r1, #0
	beq _0807B862
	adds r0, r1, #0
	bl free
_0807B862:
	ldr r0, [sp, #0x6c]
	add r0, sb
	ldr r7, [sp, #0x6c]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0807B86E:
	movs r5, #0
	ldr r0, [sp, #0x4c]
	adds r0, #1
	lsls r7, r0, #6
	movs r4, #0x26
	movs r0, #0xf8
	lsls r0, r0, #1
	lsls r6, r0, #0x10
	b _0807B8A0
_0807B880:
	mov r1, r8
	ldr r0, [r1, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r7
	adds r0, r0, r4
	movs r1, #1
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r6, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r4, #2
	adds r5, #1
_0807B8A0:
	mov r0, r8
	ldr r1, [sp, #0x50]
	bl func_0807B8F4
	cmp r5, r0
	blo _0807B880
	ldr r2, [sp, #0x5c]
	str r2, [sp, #0x4c]
	ldr r3, [sp, #0x58]
	str r3, [sp, #0x54]
	mov r4, r8
	ldr r3, [r4, #8]
_0807B8B8:
	movs r5, #0x82
	lsls r5, r5, #3
	adds r0, r3, r5
	bl GetCapacity__C4Coop
	ldr r7, [sp, #0x54]
	cmp r7, r0
	bhs _0807B8DC
	lsls r0, r7, #3
	ldr r1, _0807B8F0 @ =0x000006AC
	add r1, r8
	adds r1, r1, r0
	ldr r1, [r1]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _0807B8DC
	b _0807B3F6
_0807B8DC:
	ldr r0, [sp, #0x4c]
	add sp, #0x70
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807B8F0: .4byte 0x000006AC

	thumb_func_start func_0807B8F4
func_0807B8F4: @ 0x0807B8F4
	push {lr}
	sub sp, #8
	adds r0, r1, #0
	movs r1, #0xa
	str r1, [sp]
	bl GetAffection__C6Animal
	movs r1, #0x19
	bl func_080D0EDA
	str r0, [sp, #4]
	add r2, sp, #4
	ldr r1, [sp]
	mov r3, sp
	cmp r1, r0
	bls _0807B916
	adds r3, r2, #0
_0807B916:
	ldr r0, [r3]
	add sp, #8
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0807B920
func_0807B920: @ 0x0807B920
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	mov r8, r0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r2, _0807B978 @ =0x080FD988
	mov r1, sp
	adds r0, r0, r2
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r5, _0807B97C @ =0x00002234
	add r5, r8
	ldr r6, _0807B980 @ =0x080FD964
	adds r0, r6, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x7f
	bls _0807B956
	movs r4, #0x7f
_0807B956:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r5, r4
	movs r0, #0
	strb r0, [r1]
	ldr r0, [sp, #0x10]
	cmp r0, #4
	bls _0807B96E
	b _0807BE4C
_0807B96E:
	lsls r0, r0, #2
	ldr r1, _0807B984 @ =_0807B988
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B978: .4byte 0x080FD988
_0807B97C: .4byte 0x00002234
_0807B980: .4byte 0x080FD964
_0807B984: .4byte _0807B988
_0807B988: @ jump table
	.4byte _0807B99C @ case 0
	.4byte _0807B9B0 @ case 1
	.4byte _0807B9C6 @ case 2
	.4byte _0807B9C6 @ case 3
	.4byte _0807B9D0 @ case 4
_0807B99C:
	add r4, sp, #0x28
	ldr r1, [sp]
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetDesc__C7Article
	adds r1, r0, #0
	b _0807B9C8
_0807B9B0:
	mov r4, sp
	adds r4, #0x29
	ldr r1, [sp]
	adds r0, r4, #0
	bl __4ToolUi
	adds r0, r4, #0
	bl GetDesc__C4Tool
	adds r1, r0, #0
	b _0807B9C8
_0807B9C6:
	ldr r1, [sp, #0xc]
_0807B9C8:
	mov r0, r8
	bl func_080CABEC
	b _0807BE4C
_0807B9D0:
	mov r4, r8
	ldr r0, [r4, #8]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r2, [r4, #0x10]
	lsls r2, r2, #3
	ldr r1, _0807BA30 @ =0x000006AC
	add r1, r8
	adds r1, r1, r2
	ldr r1, [r1]
	bl GetChicken__4CoopUi
	mov sl, r0
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #0
	beq _0807BA3C
	ldr r4, _0807BA34 @ =0x00002234
	add r4, r8
	ldr r7, _0807BA38 @ =0x080FD9F0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BABC
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BA1E
	adds r4, r5, #0
_0807BA1E:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	b _0807BABC
	.align 2, 0
_0807BA30: .4byte 0x000006AC
_0807BA34: .4byte 0x00002234
_0807BA38: .4byte 0x080FD9F0
_0807BA3C:
	mov r0, sl
	bl IsUnhappy__C9Livestock
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0
	beq _0807BA88
	ldr r4, _0807BA80 @ =0x00002234
	add r4, r8
	ldr r7, _0807BA84 @ =0x080FD9FC
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BABC
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BA6E
	adds r4, r5, #0
_0807BA6E:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	mov r2, sb
	strb r2, [r0]
	b _0807BABC
	.align 2, 0
_0807BA80: .4byte 0x00002234
_0807BA84: .4byte 0x080FD9FC
_0807BA88:
	ldr r4, _0807BB94 @ =0x00002234
	add r4, r8
	ldr r3, _0807BB98 @ =0x080FDA10
	mov sb, r3
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BABC
	mov r0, sb
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BAAE
	adds r4, r5, #0
_0807BAAE:
	adds r0, r6, #0
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	strb r7, [r0]
_0807BABC:
	mov r0, sl
	bl GetAge__C6Animal
	movs r1, #0x78
	bl func_080D0EDA
	adds r6, r0, #0
	cmp r6, #9
	bgt _0807BB04
	ldr r4, _0807BB94 @ =0x00002234
	add r4, r8
	ldr r0, _0807BB9C @ =0x080FDA20
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r7, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BB04
	mov r0, sb
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BAF4
	adds r4, r5, #0
_0807BAF4:
	adds r0, r7, #0
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_0807BB04:
	add r4, sp, #0x14
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #0
	bl func_0804EC84
	ldr r6, _0807BB94 @ =0x00002234
	add r6, r8
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BB42
	add r0, sp, #0x14
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BB32
	adds r4, r5, #0
_0807BB32:
	adds r0, r7, #0
	add r1, sp, #0x14
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_0807BB42:
	ldr r7, _0807BBA0 @ =0x080FDA24
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BB72
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BB62
	adds r4, r5, #0
_0807BB62:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807BB72:
	mov r0, sl
	bl GetAge__C6Animal
	adds r4, r0, #0
	mov r1, r8
	ldr r0, [r1, #8]
	ldrb r1, [r0, #0x11]
	mov r0, sp
	adds r0, #0x2a
	strb r1, [r0]
	adds r6, r0, #0
	cmp r4, #0x1d
	bhi _0807BBA4
	adds r5, r4, #0
	movs r4, #0
	b _0807BBB8
	.align 2, 0
_0807BB94: .4byte 0x00002234
_0807BB98: .4byte 0x080FDA10
_0807BB9C: .4byte 0x080FDA20
_0807BBA0: .4byte 0x080FDA24
_0807BBA4:
	adds r0, r4, #0
	movs r1, #0x1e
	bl __umodsi3
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1e
	bl func_080D0EDA
	adds r4, r0, #0
_0807BBB8:
	ldrb r0, [r6]
	lsls r1, r0, #0x19
	lsrs r1, r1, #0x1b
	adds r2, r5, #0
	subs r2, #0x1e
	subs r3, r1, r2
	cmp r3, #0x1d
	bhi _0807BBCC
	adds r4, #1
	b _0807BBCE
_0807BBCC:
	subs r3, #0x1e
_0807BBCE:
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	movs r1, #4
	rsbs r1, r1, #0
	subs r0, r0, r4
	movs r2, #3
	ands r0, r2
	ldrb r2, [r6]
	ands r1, r2
	orrs r1, r0
	movs r0, #0x1f
	ands r3, r0
	lsls r2, r3, #2
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r1, r0
	orrs r1, r2
	strb r1, [r6]
	mov sl, r1
	lsls r1, r1, #0x1e
	lsrs r6, r1, #0x1e
	cmp r6, #1
	beq _0807BC50
	cmp r6, #1
	bgt _0807BC06
	cmp r6, #0
	beq _0807BC10
	b _0807BCA4
_0807BC06:
	cmp r6, #2
	beq _0807BC60
	cmp r6, #3
	beq _0807BC70
	b _0807BCA4
_0807BC10:
	ldr r4, _0807BC48 @ =0x00002234
	add r4, r8
	ldr r2, _0807BC4C @ =0x080FDA40
	mov sb, r2
	adds r0, r4, #0
	bl strlen
	adds r7, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BCA4
	mov r0, sb
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BC36
	adds r4, r5, #0
_0807BC36:
	adds r0, r7, #0
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	adds r0, r7, r4
	strb r6, [r0]
	b _0807BCA4
	.align 2, 0
_0807BC48: .4byte 0x00002234
_0807BC4C: .4byte 0x080FDA40
_0807BC50:
	ldr r4, _0807BC58 @ =0x00002234
	add r4, r8
	ldr r7, _0807BC5C @ =0x080FDA48
	b _0807BC76
	.align 2, 0
_0807BC58: .4byte 0x00002234
_0807BC5C: .4byte 0x080FDA48
_0807BC60:
	ldr r4, _0807BC68 @ =0x00002234
	add r4, r8
	ldr r7, _0807BC6C @ =0x080FDA50
	b _0807BC76
	.align 2, 0
_0807BC68: .4byte 0x00002234
_0807BC6C: .4byte 0x080FDA50
_0807BC70:
	ldr r4, _0807BE5C @ =0x00002234
	add r4, r8
	ldr r7, _0807BE60 @ =0x080FDA58
_0807BC76:
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BCA4
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BC94
	adds r4, r5, #0
_0807BC94:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807BCA4:
	mov r3, sl
	lsls r0, r3, #0x19
	lsrs r0, r0, #0x1b
	adds r6, r0, #1
	cmp r6, #9
	bgt _0807BCE4
	ldr r4, _0807BE5C @ =0x00002234
	add r4, r8
	ldr r7, _0807BE64 @ =0x080FDA20
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BCE4
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BCD4
	adds r4, r5, #0
_0807BCD4:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807BCE4:
	mov r4, sl
	lsls r0, r4, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	add r1, sp, #0x14
	movs r2, #0
	bl func_0804EC84
	ldr r6, _0807BE5C @ =0x00002234
	add r6, r8
	ldr r0, _0807BE64 @ =0x080FDA20
	mov sb, r0
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BD2A
	mov r0, sb
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BD1A
	adds r4, r5, #0
_0807BD1A:
	adds r0, r7, #0
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_0807BD2A:
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BD58
	add r0, sp, #0x14
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BD48
	adds r4, r5, #0
_0807BD48:
	adds r0, r7, #0
	add r1, sp, #0x14
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_0807BD58:
	ldr r7, _0807BE68 @ =0x080FDA60
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BD88
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BD78
	adds r4, r5, #0
_0807BD78:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807BD88:
	mov r1, r8
	ldr r0, [r1, #0x10]
	lsls r0, r0, #3
	movs r1, #0xd6
	lsls r1, r1, #3
	add r1, r8
	adds r1, r1, r0
	ldr r6, [r1]
	ldr r0, _0807BE6C @ =0x000003E7
	cmp r6, r0
	bgt _0807BDD4
	ldr r4, _0807BE5C @ =0x00002234
	add r4, r8
	ldr r2, _0807BE64 @ =0x080FDA20
	mov sb, r2
	adds r0, r4, #0
	bl strlen
	adds r7, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BDD4
	mov r0, sb
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BDC4
	adds r4, r5, #0
_0807BDC4:
	adds r0, r7, #0
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_0807BDD4:
	add r4, sp, #0x14
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #0
	bl func_0804EC84
	ldr r6, _0807BE5C @ =0x00002234
	add r6, r8
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BE12
	adds r0, r4, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BE02
	adds r4, r5, #0
_0807BE02:
	adds r0, r7, #0
	add r1, sp, #0x14
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_0807BE12:
	ldr r7, _0807BE70 @ =0x080FDA78
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807BE42
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807BE32
	adds r4, r5, #0
_0807BE32:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807BE42:
	ldr r1, _0807BE5C @ =0x00002234
	add r1, r8
	mov r0, r8
	bl func_080CABEC
_0807BE4C:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807BE5C: .4byte 0x00002234
_0807BE60: .4byte 0x080FDA58
_0807BE64: .4byte 0x080FDA20
_0807BE68: .4byte 0x080FDA60
_0807BE6C: .4byte 0x000003E7
_0807BE70: .4byte 0x080FDA78

	thumb_func_start func_0807BE74
func_0807BE74: @ 0x0807BE74
	push {r4, lr}
	ldr r0, [r0, #8]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetChicken__4CoopUi
	movs r4, #0xfa
	lsls r4, r4, #1
	bl GetProductRank__C9Livestock
	cmp r0, #4
	bhi _0807BEC0
	lsls r0, r0, #2
	ldr r1, _0807BE98 @ =_0807BE9C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807BE98: .4byte _0807BE9C
_0807BE9C: @ jump table
	.4byte _0807BEB0 @ case 0
	.4byte _0807BEB0 @ case 1
	.4byte _0807BEB0 @ case 2
	.4byte _0807BEB6 @ case 3
	.4byte _0807BEBC @ case 4
_0807BEB0:
	movs r4, #0xfa
	lsls r4, r4, #1
	b _0807BEC0
_0807BEB6:
	movs r4, #0xfa
	lsls r4, r4, #2
	b _0807BEC0
_0807BEBC:
	movs r4, #0xfa
	lsls r4, r4, #3
_0807BEC0:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start func_0807BEC8
func_0807BEC8: @ 0x0807BEC8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xa4
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080C85A0
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807BF00
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807BEFA
	movs r0, #0
	str r0, [r2]
_0807BEFA:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807BF00:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807BF20
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807BF1A
	movs r0, #1
	str r0, [r2]
_0807BF1A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807BF20:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807BF40
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807BF3A
	movs r0, #2
	str r0, [r2]
_0807BF3A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807BF40:
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807BF60
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807BF5A
	movs r0, #3
	str r0, [r2]
_0807BF5A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807BF60:
	movs r5, #0
	mov sb, r5
	mov r6, sp
	adds r6, #0x6c
	str r6, [sp, #0x9c]
	mov r0, sp
	adds r0, #0x20
	str r0, [sp, #0x98]
_0807BF70:
	mov r2, sb
	lsls r1, r2, #2
	add r1, sb
	lsls r1, r1, #2
	ldr r2, _0807C02C @ =0x080FD988
	add r0, sp, #0xc
	adds r1, r1, r2
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldm r1!, {r2, r6}
	stm r0!, {r2, r6}
	mov r3, sb
	lsls r0, r3, #1
	adds r4, r0, r3
	lsls r0, r4, #6
	add r0, sb
	lsls r5, r0, #2
	adds r1, r5, r7
	movs r6, #0xe2
	lsls r6, r6, #3
	adds r1, r1, r6
	add r0, sp, #0x6c
	movs r2, #0xc
	strh r2, [r0]
	movs r6, #2
	ldr r3, [sp, #0x9c]
	strh r6, [r3, #2]
	ldr r0, [sp, #0x6c]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	mov r0, sb
	cmp r0, #1
	bls _0807BFD8
	adds r1, r5, r7
	ldr r2, [sp, #0x10]
	add r0, sp, #0x70
	movs r3, #0xc
	strh r3, [r0]
	strh r6, [r0, #2]
	ldr r0, [sp, #0x70]
	ldr r6, _0807C030 @ =0x00000714
	adds r1, r1, r6
	str r2, [sp]
	movs r2, #0
	str r2, [sp, #4]
	movs r3, #1
	str r3, [sp, #8]
	movs r3, #0
	bl func_0804E958
_0807BFD8:
	lsls r4, r4, #3
	adds r4, #0xd0
	adds r0, r7, #0
	bl func_08008910
	adds r1, r5, r7
	movs r5, #0xe2
	lsls r5, r5, #3
	adds r1, r1, r5
	adds r1, #4
	adds r6, r0, #0
	lsls r4, r4, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r4, r4, r0
	add r0, sp, #0x20
	adds r2, r4, #0
	movs r3, #0xc0
	lsls r3, r3, #2
	bl func_08008F0C
	ldr r1, [sp, #0x98]
	str r1, [sp, #0x8c]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0807C034
	cmp r1, #0
	beq _0807C01E
	adds r0, r1, #0
	ldr r1, [sp, #0x8c]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807C01E:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r5, #1
	add sb, r5
	b _0807C102
	.align 2, 0
_0807C02C: .4byte 0x080FD988
_0807C030: .4byte 0x00000714
_0807C034:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x78]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r1, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _0807C04C
	adds r0, r1, #0
_0807C04C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807C06A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _0807C06E
	mov r0, sl
	bl func_080D3BC0
	b _0807C06E
_0807C06A:
	movs r0, #0
	mov sl, r0
_0807C06E:
	adds r5, r0, #0
	str r5, [sp, #0xa0]
	ldr r2, [r6]
	mov ip, r5
	movs r1, #1
	add sb, r1
	cmp r2, r8
	beq _0807C09A
_0807C07E:
	mov r3, ip
	cmp r3, #0
	beq _0807C090
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0807C090:
	adds r2, #0x10
	movs r4, #0x10
	add ip, r4
	cmp r2, r8
	bne _0807C07E
_0807C09A:
	mov r5, ip
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _0807C0B6
	cmp r5, #0
	beq _0807C0B2
	adds r0, r5, #0
	ldr r1, [sp, #0x8c]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807C0B2:
	adds r5, #0x10
	b _0807C0DE
_0807C0B6:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0807C0DC
_0807C0BE:
	cmp r2, #0
	beq _0807C0CE
	adds r0, r2, #0
	ldr r1, [sp, #0x8c]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_0807C0CE:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _0807C0BE
_0807C0DC:
	adds r5, r2, #0
_0807C0DE:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0807C0EE
_0807C0E8:
	adds r1, #0x10
	cmp r1, r2
	bne _0807C0E8
_0807C0EE:
	cmp r0, #0
	beq _0807C0F6
	bl free
_0807C0F6:
	ldr r0, [sp, #0xa0]
	add r0, sl
	ldr r1, [sp, #0xa0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0807C102:
	mov r2, sb
	cmp r2, #4
	bhi _0807C10A
	b _0807BF70
_0807C10A:
	adds r0, r7, #0
	bl func_0807B188
	adds r5, r0, #0
	ldr r0, [r7, #0x1c]
	movs r3, #0xc
	ldrsh r1, [r7, r3]
	bl func_08075C88
	ldr r0, [r7, #0x1c]
	adds r1, r5, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r4, #0xaa
	lsls r4, r4, #2
	adds r0, r0, r4
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_0807B920
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #0xc
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0807C1CC @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0xc]
	ldr r1, _0807C1D0 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r5, #0
	str r5, [sp, #0x90]

	thumb_func_start sub_0807C194
sub_0807C194: @ 0x0807C194
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	ldr r3, [sp, #0xc]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0807C1B0
	bl _0807D054
_0807C1B0:
	ldr r6, [sp, #0x90]
	cmp r6, #0
	beq _0807C1D4
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	movs r0, #1
	rsbs r0, r0, #0
	bl _0807D05E
	.align 2, 0
_0807C1CC: .4byte vtable_unk_080E5B80
_0807C1D0: .4byte 0x00000889
_0807C1D4:
	ldr r1, _0807C1EC @ =0x000006A4
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0xa
	bls _0807C1E2
	bl _0807D054
_0807C1E2:
	lsls r0, r0, #2
	ldr r1, _0807C1F0 @ =_0807C1F4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807C1EC: .4byte 0x000006A4
_0807C1F0: .4byte _0807C1F4
_0807C1F4: @ jump table
	.4byte _0807C220 @ case 0
	.4byte _0807C9D0 @ case 1
	.4byte _0807CB60 @ case 2
	.4byte _0807CD50 @ case 3
	.4byte _0807CE48 @ case 4
	.4byte _0807CE78 @ case 5
	.4byte _0807CEA8 @ case 6
	.4byte _0807CED4 @ case 7
	.4byte _0807CF44 @ case 8
	.4byte _0807CFEC @ case 9
	.4byte _0807D02C @ case 10
_0807C220:
	ldr r0, [r7, #0x14]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	beq _0807C23A
	lsls r0, r1, #2
	adds r0, r0, r7
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_0807B920
_0807C23A:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r4, r7, r3
	ldr r1, [r4]
	adds r0, r7, #0
	bl func_080C9020
	ldr r5, _0807C294 @ =0x000006A1
	adds r0, r7, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807C258
	b _0807C970
_0807C258:
	add r5, sp, #0x10
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r4, r0
	ldr r3, [r0]
	lsls r1, r3, #2
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r2, _0807C298 @ =0x080FD988
	adds r0, r5, #0
	adds r1, r1, r2
	ldm r1!, {r2, r4, r6}
	stm r0!, {r2, r4, r6}
	ldm r1!, {r2, r6}
	stm r0!, {r2, r6}
	cmp r3, #1
	bne _0807C27E
	b _0807C484
_0807C27E:
	cmp r3, #1
	blo _0807C29C
	cmp r3, #2
	bne _0807C288
	b _0807C73C
_0807C288:
	cmp r3, #3
	bne _0807C28E
	b _0807C800
_0807C28E:
	bl _0807D054
	.align 2, 0
_0807C294: .4byte 0x000006A1
_0807C298: .4byte 0x080FD988
_0807C29C:
	ldr r3, [r7, #8]
	ldr r4, _0807C2D0 @ =0x00001AA8
	adds r0, r3, r4
	ldr r1, [r0]
	movs r2, #0
	ldr r0, [r5, #8]
	cmp r1, r0
	bhs _0807C2AE
	movs r2, #1
_0807C2AE:
	mov sl, r2
	cmp r2, #0
	beq _0807C2DC
	ldr r1, _0807C2D4 @ =0x080FDA7C
	adds r0, r7, #0
	bl func_080CABA0
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r7, r5
	movs r1, #0xe
	bl func_08050E50
	ldr r6, _0807C2D8 @ =0x000006A4
	adds r1, r7, r6
	bl _0807CF36
	.align 2, 0
_0807C2D0: .4byte 0x00001AA8
_0807C2D4: .4byte 0x080FDA7C
_0807C2D8: .4byte 0x000006A4
_0807C2DC:
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r3, r1
	bl GetStoredBushelCount__C4Coop
	ldr r1, _0807C2FC @ =0x000003E6
	cmp r0, r1
	bls _0807C308
	ldr r1, _0807C300 @ =0x080FDAA8
	adds r0, r7, #0
	bl func_080CABA0
	ldr r2, _0807C304 @ =0x000006A4
	adds r1, r7, r2
	bl _0807CF36
	.align 2, 0
_0807C2FC: .4byte 0x000003E6
_0807C300: .4byte 0x080FDAA8
_0807C304: .4byte 0x000006A4
_0807C308:
	ldr r0, [r7, #8]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl GetStoredBushelCount__C4Coop
	ldr r1, _0807C46C @ =0x000003E7
	subs r1, r1, r0
	str r1, [sp, #0x94]
	ldr r4, _0807C470 @ =0x00000684
	adds r0, r7, r4
	ldr r1, [r5, #8]
	ldr r2, [sp, #0x94]
	movs r3, #5
	bl func_080CA8B4
	ldr r0, [r7, #8]
	movs r5, #0x82
	lsls r5, r5, #3
	adds r0, r0, r5
	bl GetStoredBushelCount__C4Coop
	add r1, sp, #0x30
	movs r2, #7
	bl func_0804EC84
	add r5, sp, #0x7c
	ldr r1, [sp, #0x10]
	adds r0, r5, #0
	bl __7ArticleUi
	ldr r6, _0807C474 @ =0x000022B4
	adds r4, r7, r6
	mov r0, sl
	strb r0, [r4]
	adds r0, r5, #0
	bl GetName__C7Article
	mov sb, r0
	mov r5, sb
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807C38A
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807C378
	adds r5, r6, #0
_0807C378:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r0, r2, r5
	mov r3, sl
	strb r3, [r0]
_0807C38A:
	ldr r5, _0807C478 @ =0x080FDAD4
	mov sb, r5
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	mov r8, r6
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807C3C0
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807C3AE
	adds r5, r6, #0
_0807C3AE:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_0807C3C0:
	ldr r0, _0807C47C @ =0x08117828
	ldr r0, [r0]
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807C3F8
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807C3E6
	adds r5, r6, #0
_0807C3E6:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0807C3F8:
	adds r0, r4, #0
	bl strlen
	adds r3, r4, r0
	mov r8, r3
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807C42A
	add r0, sp, #0x30
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807C418
	adds r5, r6, #0
_0807C418:
	mov r0, r8
	add r1, sp, #0x30
	adds r2, r5, #0
	bl memcpy
	mov r6, r8
	adds r1, r6, r5
	movs r0, #0
	strb r0, [r1]
_0807C42A:
	ldr r0, _0807C480 @ =0x08117814
	ldr r0, [r0]
	mov r8, r0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _0807C45E
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807C44E
	adds r4, r5, #0
_0807C44E:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807C45E:
	ldr r0, _0807C474 @ =0x000022B4
	adds r1, r7, r0
	adds r0, r7, #0
	bl func_080CABEC
	b _0807C710
	.align 2, 0
_0807C46C: .4byte 0x000003E7
_0807C470: .4byte 0x00000684
_0807C474: .4byte 0x000022B4
_0807C478: .4byte 0x080FDAD4
_0807C47C: .4byte 0x08117828
_0807C480: .4byte 0x08117814
_0807C484:
	ldr r3, [r7, #8]
	ldr r4, _0807C4B8 @ =0x00001AA8
	adds r0, r3, r4
	ldr r1, [r0]
	movs r2, #0
	ldr r0, [r5, #8]
	cmp r1, r0
	bhs _0807C496
	movs r2, #1
_0807C496:
	cmp r2, #0
	beq _0807C4C4
	ldr r1, _0807C4BC @ =0x080FDA7C
	adds r0, r7, #0
	bl func_080CABA0
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r7, r5
	movs r1, #0xe
	bl func_08050E50
	ldr r6, _0807C4C0 @ =0x000006A4
	adds r1, r7, r6
	bl _0807CF36
	.align 2, 0
_0807C4B8: .4byte 0x00001AA8
_0807C4BC: .4byte 0x080FDA7C
_0807C4C0: .4byte 0x000006A4
_0807C4C4:
	movs r5, #0
	ldr r1, _0807C4E8 @ =0x00001C38
	adds r0, r3, r1
	movs r1, #0x4a
	bl func_0800F990
	adds r6, r0, #0
	ldr r0, [r7, #8]
	ldr r4, _0807C4EC @ =0x00001C34
	adds r0, r0, r4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807C4F0
	movs r5, #0x63
	b _0807C522
	.align 2, 0
_0807C4E8: .4byte 0x00001C38
_0807C4EC: .4byte 0x00001C34
_0807C4F0:
	ldr r0, [r7, #8]
	ldr r2, _0807C558 @ =0x00001C34
	adds r0, r0, r2
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x7d
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x4a
	bne _0807C522
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl GetAmount__C9ToolStack
	cmp r0, #0x63
	beq _0807C522
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r5, r1, r0
_0807C522:
	ldr r0, [r7, #8]
	movs r3, #0xe0
	lsls r3, r3, #2
	adds r0, r0, r3
	movs r1, #0x4a
	bl GetAvailableSpaceFor__C9ToolChestUi
	adds r1, r6, r5
	adds r1, r1, r0
	str r1, [sp, #0x94]
	cmp r1, #0
	bne _0807C564
	ldr r1, _0807C55C @ =0x080FDADC
	adds r0, r7, #0
	bl func_080CABA0
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0xe
	bl func_08050E50
	ldr r5, _0807C560 @ =0x000006A4
	adds r1, r7, r5
	bl _0807CF36
	.align 2, 0
_0807C558: .4byte 0x00001C34
_0807C55C: .4byte 0x080FDADC
_0807C560: .4byte 0x000006A4
_0807C564:
	ldr r0, [r7, #8]
	ldr r6, _0807C71C @ =0x00001C38
	adds r0, r0, r6
	ldr r1, [sp, #0x10]
	bl func_0800F9FC
	adds r6, r0, #0
	movs r0, #0
	mov r8, r0
	ldr r0, [r7, #8]
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r1, [sp, #0x10]
	bl GetAmountOf__C9ToolChestUi
	adds r4, r0, #0
	ldr r0, [r7, #8]
	ldr r5, _0807C720 @ =0x00001C34
	adds r0, r0, r5
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807C5C2
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x7e
	strb r1, [r0]
	bl GetId__C4Tool
	movs r2, #0
	ldr r1, [sp, #0x10]
	cmp r0, r1
	bne _0807C5B4
	movs r2, #1
_0807C5B4:
	cmp r2, #0
	beq _0807C5C2
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl GetAmount__C9ToolStack
	mov r8, r0
_0807C5C2:
	mov r2, r8
	adds r0, r6, r2
	adds r0, r0, r4
	add r1, sp, #0x24
	movs r2, #7
	bl func_0804EC84
	mov r5, sp
	adds r5, #0x7f
	ldr r1, [sp, #0x10]
	adds r0, r5, #0
	bl __4ToolUi
	ldr r3, _0807C724 @ =0x000022B4
	adds r4, r7, r3
	movs r6, #0
	mov sl, r6
	mov r0, sl
	strb r0, [r4]
	adds r0, r5, #0
	bl GetName__C4Tool
	mov sb, r0
	mov r5, sb
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807C624
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807C612
	adds r5, r6, #0
_0807C612:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r0, r2, r5
	mov r3, sl
	strb r3, [r0]
_0807C624:
	ldr r5, _0807C728 @ =0x080FDAD4
	mov sb, r5
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	mov r8, r6
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807C65A
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807C648
	adds r5, r6, #0
_0807C648:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_0807C65A:
	ldr r0, _0807C72C @ =0x08117828
	ldr r0, [r0]
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807C692
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807C680
	adds r5, r6, #0
_0807C680:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0807C692:
	adds r0, r4, #0
	bl strlen
	adds r3, r4, r0
	mov r8, r3
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807C6C4
	add r0, sp, #0x24
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807C6B2
	adds r5, r6, #0
_0807C6B2:
	mov r0, r8
	add r1, sp, #0x24
	adds r2, r5, #0
	bl memcpy
	mov r6, r8
	adds r1, r6, r5
	movs r0, #0
	strb r0, [r1]
_0807C6C4:
	ldr r0, _0807C730 @ =0x08117814
	ldr r0, [r0]
	mov r8, r0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _0807C6F8
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807C6E8
	adds r4, r5, #0
_0807C6E8:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807C6F8:
	ldr r0, _0807C724 @ =0x000022B4
	adds r1, r7, r0
	adds r0, r7, #0
	bl func_080CABEC
	ldr r1, _0807C734 @ =0x00000684
	adds r0, r7, r1
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0x94]
	movs r3, #5
	bl func_080CA8B4
_0807C710:
	ldr r2, _0807C738 @ =0x000006A4
	adds r1, r7, r2
	movs r0, #2
	str r0, [r1]
	bl _0807D054
	.align 2, 0
_0807C71C: .4byte 0x00001C38
_0807C720: .4byte 0x00001C34
_0807C724: .4byte 0x000022B4
_0807C728: .4byte 0x080FDAD4
_0807C72C: .4byte 0x08117828
_0807C730: .4byte 0x08117814
_0807C734: .4byte 0x00000684
_0807C738: .4byte 0x000006A4
_0807C73C:
	ldr r3, [r7, #8]
	ldr r4, _0807C770 @ =0x00001AA8
	adds r0, r3, r4
	ldr r1, [r0]
	movs r2, #0
	ldr r0, [r5, #8]
	cmp r1, r0
	bhs _0807C74E
	movs r2, #1
_0807C74E:
	cmp r2, #0
	beq _0807C77C
	ldr r1, _0807C774 @ =0x080FDA7C
	adds r0, r7, #0
	bl func_080CABA0
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r7, r5
	movs r1, #0xe
	bl func_08050E50
	ldr r6, _0807C778 @ =0x000006A4
	adds r1, r7, r6
	bl _0807CF36
	.align 2, 0
_0807C770: .4byte 0x00001AA8
_0807C774: .4byte 0x080FDA7C
_0807C778: .4byte 0x000006A4
_0807C77C:
	movs r4, #0x82
	lsls r4, r4, #3
	adds r0, r3, r4
	bl GetCapacity__C4Coop
	mov r8, r0
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl CountChickens__C4Coop
	adds r6, r0, #0
	movs r5, #0
	movs r4, #0
	b _0807C7B0
_0807C798:
	ldr r0, [r7, #8]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r4, #0
	bl IsIncubatorOccupied__C4CoopUi
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807C7AE
	adds r5, #1
_0807C7AE:
	adds r4, #1
_0807C7B0:
	ldr r0, [r7, #8]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetIncubatorCapacity__C4Coop
	cmp r4, r0
	blo _0807C798
	mov r3, r8
	subs r0, r3, r6
	cmp r0, r5
	bne _0807C7D8
	ldr r1, _0807C7D4 @ =0x080FDB0C
	adds r0, r7, #0
	bl func_080CABA0
	b _0807CF32
	.align 2, 0
_0807C7D4: .4byte 0x080FDB0C
_0807C7D8:
	ldr r1, _0807C7F8 @ =0x080FDB38
	adds r0, r7, #0
	bl func_080CABA0
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r7, r5
	movs r1, #0xf
	bl func_08050E50
	ldr r6, _0807C7FC @ =0x000006A4
	adds r1, r7, r6
	movs r0, #3
	str r0, [r1]
	bl _0807D054
	.align 2, 0
_0807C7F8: .4byte 0x080FDB38
_0807C7FC: .4byte 0x000006A4
_0807C800:
	ldr r0, [r7, #8]
	movs r1, #0x82
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetUnkEnt__C4Coop
	adds r6, r0, #0
	movs r2, #1
	rsbs r2, r2, #0
	movs r1, #7
	ldr r3, _0807C82C @ =0x000006E4
	adds r0, r7, r3
_0807C818:
	str r2, [r0]
	subs r0, #8
	subs r1, #1
	cmp r1, #0
	bge _0807C818
	movs r5, #0
	movs r4, #0x82
	lsls r4, r4, #3
	b _0807C832
	.align 2, 0
_0807C82C: .4byte 0x000006E4
_0807C830:
	adds r5, #1
_0807C832:
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl GetCapacity__C4Coop
	cmp r5, r0
	bhs _0807C860
	movs r0, #1
	rsbs r0, r0, #0
	cmp r6, r0
	beq _0807C84A
	cmp r5, r6
	beq _0807C830
_0807C84A:
	ldr r0, [r7, #8]
	adds r0, r0, r4
	adds r1, r5, #0
	bl GetChicken__4CoopUi
	cmp r0, #0
	beq _0807C830
	bl GetGrowthStage__C7Chicken
	cmp r0, #1
	bne _0807C830
_0807C860:
	ldr r0, [r7, #8]
	movs r4, #0x82
	lsls r4, r4, #3
	adds r0, r0, r4
	bl GetCapacity__C4Coop
	cmp r5, r0
	bne _0807C880
	ldr r1, _0807C87C @ =0x080FDB6C
	adds r0, r7, #0
	bl func_080CABA0
	b _0807CF32
	.align 2, 0
_0807C87C: .4byte 0x080FDB6C
_0807C880:
	ldr r5, _0807C8A8 @ =0x000006EC
	adds r2, r7, r5
	movs r0, #0xde
	lsls r0, r0, #3
	adds r1, r7, r0
	ldr r0, [r2]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r2, r0
	subs r0, r0, r1
	asrs r0, r0, #2
	ldr r1, [r2]
	subs r1, r1, r0
	str r1, [r2]
	movs r1, #0
	mov r8, r1
	movs r5, #0
	mov sb, r4
	b _0807C910
	.align 2, 0
_0807C8A8: .4byte 0x000006EC
_0807C8AC:
	movs r0, #1
	rsbs r0, r0, #0
	cmp r6, r0
	beq _0807C8B8
	cmp r5, r6
	beq _0807C90E
_0807C8B8:
	ldr r0, [r7, #8]
	add r0, sb
	adds r1, r5, #0
	bl GetChicken__4CoopUi
	cmp r0, #0
	beq _0807C90E
	bl GetGrowthStage__C7Chicken
	cmp r0, #1
	bne _0807C90E
	movs r2, #4
	ldr r3, _0807C964 @ =0x000006EC
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #7
	bhi _0807C8EC
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0807C8E6
	str r2, [r0]
_0807C8E6:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807C8EC:
	mov r0, r8
	lsls r4, r0, #3
	ldr r1, _0807C968 @ =0x000006AC
	adds r0, r7, r1
	adds r0, r0, r4
	str r5, [r0]
	adds r0, r7, #0
	adds r1, r5, #0
	bl func_0807BE74
	movs r2, #0xd6
	lsls r2, r2, #3
	adds r1, r7, r2
	adds r1, r1, r4
	str r0, [r1]
	movs r3, #1
	add r8, r3
_0807C90E:
	adds r5, #1
_0807C910:
	ldr r0, [r7, #8]
	add r0, sb
	bl GetCapacity__C4Coop
	cmp r5, r0
	blo _0807C8AC
	ldr r0, [r7, #0x1c]
	bl func_08075DD4
	adds r0, r7, #0
	bl func_0807B3B0
	adds r5, r0, #0
	movs r4, #0
	strh r4, [r7, #0xc]
	movs r6, #0xc9
	lsls r6, r6, #3
	adds r1, r7, r6
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075DB8
	ldr r0, [r7, #0x1c]
	adds r1, r5, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	str r4, [r7, #0x10]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	ldr r3, _0807C96C @ =0x000006A4
	adds r1, r7, r3
	movs r0, #1
	str r0, [r1]
	b _0807D054
	.align 2, 0
_0807C964: .4byte 0x000006EC
_0807C968: .4byte 0x000006AC
_0807C96C: .4byte 0x000006A4
_0807C970:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0807C980
	b _0807D054
_0807C980:
	movs r4, #0xd5
	lsls r4, r4, #3
	adds r0, r7, r4
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807C9A8
	ldr r1, _0807C9A4 @ =0x080FDB9C
	adds r0, r7, #0
	bl func_080CABA0
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r7, r5
	movs r1, #0xe
	bl func_08050E50
	b _0807C9BC
	.align 2, 0
_0807C9A4: .4byte 0x080FDB9C
_0807C9A8:
	ldr r1, _0807C9C8 @ =0x080FDBC4
	adds r0, r7, #0
	bl func_080CABA0
	movs r6, #0xd2
	lsls r6, r6, #2
	adds r0, r7, r6
	movs r1, #0x11
	bl func_08050E50
_0807C9BC:
	ldr r0, _0807C9CC @ =0x000006A4
	adds r1, r7, r0
	movs r0, #9
	str r0, [r1]
	b _0807D054
	.align 2, 0
_0807C9C8: .4byte 0x080FDBC4
_0807C9CC: .4byte 0x000006A4
_0807C9D0:
	ldr r0, [r7, #0x14]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	beq _0807C9EA
	lsls r0, r1, #2
	adds r0, r0, r7
	movs r1, #0xde
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_0807B920
_0807C9EA:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	ldr r2, _0807CAF0 @ =0x000006EC
	adds r0, r7, r2
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_080C9020
	ldr r3, _0807CAF4 @ =0x000006A1
	adds r0, r7, r3
	ldrb r4, [r0]
	cmp r4, #0
	bne _0807CA06
	b _0807CB10
_0807CA06:
	ldr r5, _0807CAF8 @ =0x00002234
	adds r4, r7, r5
	movs r6, #0
	mov sl, r6
	mov r0, sl
	strb r0, [r4]
	ldr r1, [r7, #0x10]
	lsls r1, r1, #3
	movs r2, #0xd6
	lsls r2, r2, #3
	adds r0, r7, r2
	adds r0, r0, r1
	ldr r0, [r0]
	add r1, sp, #0x24
	movs r2, #0
	bl func_0804EC84
	ldr r3, _0807CAFC @ =0x080FDBE8
	mov sb, r3
	adds r0, r4, #0
	bl strlen
	adds r5, r4, r0
	mov r8, r5
	movs r1, #0x7f
	subs r6, r1, r0
	cmp r6, #0
	beq _0807CA5E
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807CA4C
	adds r5, r6, #0
_0807CA4C:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r6, r8
	adds r0, r6, r5
	mov r1, sl
	strb r1, [r0]
_0807CA5E:
	adds r0, r4, #0
	bl strlen
	adds r2, r4, r0
	mov r8, r2
	movs r1, #0x7f
	subs r6, r1, r0
	cmp r6, #0
	beq _0807CA90
	add r0, sp, #0x24
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807CA7E
	adds r5, r6, #0
_0807CA7E:
	mov r0, r8
	add r1, sp, #0x24
	adds r2, r5, #0
	bl memcpy
	mov r3, r8
	adds r1, r3, r5
	movs r0, #0
	strb r0, [r1]
_0807CA90:
	ldr r5, _0807CB00 @ =0x080FDA78
	mov r8, r5
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0807CAC2
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807CAB2
	adds r4, r5, #0
_0807CAB2:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807CAC2:
	ldr r6, _0807CAF8 @ =0x00002234
	adds r1, r7, r6
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r2, _0807CB04 @ =0x080FDBF8
	ldr r3, _0807CB08 @ =0x080FDBFC
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r0, r4, #0
	bl func_08050E30
	adds r0, r4, #0
	movs r1, #0xf
	bl func_08050E50
	ldr r2, _0807CB0C @ =0x000006A4
	adds r1, r7, r2
	movs r0, #8
	str r0, [r1]
	b _0807D054
	.align 2, 0
_0807CAF0: .4byte 0x000006EC
_0807CAF4: .4byte 0x000006A1
_0807CAF8: .4byte 0x00002234
_0807CAFC: .4byte 0x080FDBE8
_0807CB00: .4byte 0x080FDA78
_0807CB04: .4byte 0x080FDBF8
_0807CB08: .4byte 0x080FDBFC
_0807CB0C: .4byte 0x000006A4
_0807CB10:
	ldr r3, _0807CB58 @ =0x000006A3
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807CB1C
	b _0807D054
_0807CB1C:
	ldr r0, [r7, #0x1c]
	bl func_08075DD4
	adds r0, r7, #0
	bl func_0807B188
	adds r5, r0, #0
	strh r4, [r7, #0xc]
	movs r6, #0xc9
	lsls r6, r6, #3
	adds r1, r7, r6
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075DB8
	ldr r0, [r7, #0x1c]
	adds r1, r5, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r3, _0807CB5C @ =0x000006A4
	adds r0, r7, r3
	str r4, [r0]
	str r4, [r7, #0x10]
	b _0807CFDE
	.align 2, 0
_0807CB58: .4byte 0x000006A3
_0807CB5C: .4byte 0x000006A4
_0807CB60:
	adds r0, r7, #0
	bl func_080088CC
	adds r4, r0, #0
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	bne _0807CB72
	b _0807CD10
_0807CB72:
	ldr r4, _0807CBD0 @ =0x00000684
	adds r0, r7, r4
	ldr r5, [r0, #0x14]
	mov r8, r5
	bl func_080CAAF4
	add r3, sp, #0x10
	movs r6, #0xa9
	lsls r6, r6, #2
	adds r4, r7, r6
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r4, r0
	ldr r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _0807CBD4 @ =0x080FD988
	adds r0, r3, #0
	adds r1, r1, r2
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldm r1!, {r2, r5}
	stm r0!, {r2, r5}
	ldr r0, [r7, #8]
	ldr r6, _0807CBD8 @ =0x00001AA8
	adds r0, r0, r6
	ldr r1, [r3, #8]
	mov r2, r8
	muls r2, r1, r2
	adds r1, r2, #0
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r4, r4, r0
	ldr r4, [r4]
	cmp r4, #0
	beq _0807CBDC
	cmp r4, #1
	beq _0807CC04
	b _0807CCF8
	.align 2, 0
_0807CBD0: .4byte 0x00000684
_0807CBD4: .4byte 0x080FD988
_0807CBD8: .4byte 0x00001AA8
_0807CBDC:
	ldr r0, [r7, #8]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	mov r1, r8
	bl AddStoredBushels__4CoopUi
	ldr r1, _0807CC00 @ =0x080FDC00
	adds r0, r7, #0
	bl func_080CABA0
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0xe
	bl func_08050E50
	b _0807CCF8
	.align 2, 0
_0807CC00: .4byte 0x080FDC00
_0807CC04:
	movs r4, #0
	ldr r0, [r7, #8]
	ldr r5, _0807CC44 @ =0x00001C34
	adds r0, r0, r5
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807CC48
	ldr r5, [r7, #8]
	ldr r6, _0807CC44 @ =0x00001C34
	adds r5, r5, r6
	add r6, sp, #0x24
	add r4, sp, #0x80
	adds r0, r4, #0
	movs r1, #0x4a
	bl __4ToolUi
	ldrb r1, [r4]
	adds r0, r6, #0
	mov r2, r8
	bl __9ToolStackG4ToolUi
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #2
	bl memcpy
	movs r0, #0
	mov r8, r0
	b _0807CC90
	.align 2, 0
_0807CC44: .4byte 0x00001C34
_0807CC48:
	ldr r0, [r7, #8]
	ldr r1, _0807CCC8 @ =0x00001C34
	adds r0, r0, r1
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x81
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x4a
	bne _0807CC92
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl GetAmount__C9ToolStack
	cmp r0, #0x63
	beq _0807CC92
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r4, r1, r0
	cmp r8, r4
	bhs _0807CC80
	mov r4, r8
_0807CC80:
	ldr r0, [r7, #8]
	adds r0, r0, r5
	adds r1, r4, #0
	bl AddAmount__9ToolStackUi
	mov r2, r8
	subs r2, r2, r4
	mov r8, r2
_0807CC90:
	movs r4, #1
_0807CC92:
	mov r3, r8
	cmp r3, #0
	beq _0807CCE4
	ldr r0, [r7, #8]
	ldr r5, _0807CCCC @ =0x00001C38
	adds r0, r0, r5
	movs r1, #0x4a
	mov r2, r8
	bl func_0800FEC8
	adds r2, r0, #0
	cmp r8, r2
	beq _0807CCAE
	movs r4, #1
_0807CCAE:
	cmp r2, #0
	beq _0807CCE4
	ldr r0, [r7, #8]
	movs r6, #0xe0
	lsls r6, r6, #2
	adds r0, r0, r6
	movs r1, #0x4a
	bl AddAmountOf__9ToolChestUiUi
	cmp r4, #0
	beq _0807CCD4
	ldr r1, _0807CCD0 @ =0x080FDC58
	b _0807CCD6
	.align 2, 0
_0807CCC8: .4byte 0x00001C34
_0807CCCC: .4byte 0x00001C38
_0807CCD0: .4byte 0x080FDC58
_0807CCD4:
	ldr r1, _0807CCE0 @ =0x080FDCBC
_0807CCD6:
	adds r0, r7, #0
	bl func_080CABA0
	b _0807CCEC
	.align 2, 0
_0807CCE0: .4byte 0x080FDCBC
_0807CCE4:
	ldr r1, _0807CD08 @ =0x080FDD04
	adds r0, r7, #0
	bl func_080CABA0
_0807CCEC:
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0xf
	bl func_08050E50
_0807CCF8:
	movs r2, #0xd5
	lsls r2, r2, #3
	adds r1, r7, r2
	movs r0, #1
	strb r0, [r1]
	ldr r3, _0807CD0C @ =0x000006A4
	adds r1, r7, r3
	b _0807CF36
	.align 2, 0
_0807CD08: .4byte 0x080FDD04
_0807CD0C: .4byte 0x000006A4
_0807CD10:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0807CD38
	ldr r5, _0807CD30 @ =0x00000684
	adds r0, r7, r5
	bl func_080CAAF4
	ldr r6, _0807CD34 @ =0x000006A4
	adds r0, r7, r6
	str r4, [r0]
	b _0807CFDE
	.align 2, 0
_0807CD30: .4byte 0x00000684
_0807CD34: .4byte 0x000006A4
_0807CD38:
	ldr r0, _0807CD4C @ =0x00000684
	adds r1, r7, r0
	ldrb r0, [r1, #8]
	cmp r0, #0
	bne _0807CD44
	b _0807D054
_0807CD44:
	adds r0, r1, #0
	bl func_080CA98C
	b _0807D054
	.align 2, 0
_0807CD4C: .4byte 0x00000684
_0807CD50:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r6, [r0]
	cmp r6, #3
	beq _0807CD5E
	b _0807D054
_0807CD5E:
	add r3, sp, #0x10
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _0807CE2C @ =0x080FD988
	adds r0, r3, #0
	adds r1, r1, r2
	ldm r1!, {r2, r4, r5}
	stm r0!, {r2, r4, r5}
	ldm r1!, {r4, r5}
	stm r0!, {r4, r5}
	ldr r0, [r7, #8]
	ldr r1, _0807CE30 @ =0x00001AA8
	adds r0, r0, r1
	ldr r1, [r3, #8]
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	add r1, sp, #0x2c
	movs r4, #0x11
	ldrh r2, [r1]
	ldr r3, _0807CE34 @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1]
	movs r5, #0x90
	ldrb r2, [r1, #1]
	adds r0, r6, #0
	ands r0, r2
	orrs r0, r5
	strb r0, [r1, #1]
	movs r4, #1
	ldrh r2, [r1, #2]
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	ands r6, r0
	orrs r6, r5
	strb r6, [r1, #3]
	ldrh r0, [r1, #4]
	ands r3, r0
	orrs r3, r4
	strh r3, [r1, #4]
	add r4, sp, #0x24
	movs r5, #0
	adds r0, r4, #0
	movs r2, #6
	bl memcpy
	strb r5, [r4, #6]
	add r5, sp, #0x40
	ldr r1, _0807CE38 @ =0x080FD964
	movs r0, #7
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #7
	bl __7ChickenPCcRC13ActorLocationUiUi
	ldr r0, [r7, #8]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	adds r1, r5, #0
	bl InsertChicken__4CoopRC7Chicken
	adds r4, r0, #0
	ldr r0, [sp, #0xc]
	ldr r1, _0807CE3C @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r3, _0807CE40 @ =0x000006A4
	adds r1, r7, r3
	movs r0, #0xa
	str r0, [r1]
	ldr r5, _0807CE44 @ =0x00002318
	adds r0, r7, r5
	str r4, [r0]
	b _0807D054
	.align 2, 0
_0807CE2C: .4byte 0x080FD988
_0807CE30: .4byte 0x00001AA8
_0807CE34: .4byte 0xFFFFFC00
_0807CE38: .4byte 0x080FD964
_0807CE3C: .4byte 0x00000889
_0807CE40: .4byte 0x000006A4
_0807CE44: .4byte 0x00002318
_0807CE48:
	ldr r1, _0807CE70 @ =0x080FDD1C
	adds r0, r7, #0
	bl func_080CABA0
	movs r6, #0xd2
	lsls r6, r6, #2
	adds r0, r7, r6
	movs r1, #0xf
	bl func_08050E50
	movs r0, #0xd5
	lsls r0, r0, #3
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	ldr r2, _0807CE74 @ =0x000006A4
	adds r1, r7, r2
	movs r0, #5
	str r0, [r1]
	b _0807D054
	.align 2, 0
_0807CE70: .4byte 0x080FDD1C
_0807CE74: .4byte 0x000006A4
_0807CE78:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #3
	beq _0807CE86
	b _0807D054
_0807CE86:
	ldr r1, _0807CEA0 @ =0x080FDD68
	adds r0, r7, #0
	bl func_080CABA0
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0xe
	bl func_08050E50
	ldr r5, _0807CEA4 @ =0x000006A4
	adds r1, r7, r5
	b _0807CF36
	.align 2, 0
_0807CEA0: .4byte 0x080FDD68
_0807CEA4: .4byte 0x000006A4
_0807CEA8:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r7, r6
	ldr r0, [r0]
	cmp r0, #3
	beq _0807CEB6
	b _0807D054
_0807CEB6:
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	bl func_08050E5C
	ldr r2, _0807CED0 @ =0x000006A4
	adds r1, r7, r2
	movs r0, #0
	str r0, [r1]
	b _0807D054
	.align 2, 0
_0807CED0: .4byte 0x000006A4
_0807CED4:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #3
	beq _0807CEE2
	b _0807D054
_0807CEE2:
	ldr r0, [r7, #0x1c]
	bl func_08075DD4
	adds r0, r7, #0
	bl func_0807B188
	adds r5, r0, #0
	movs r4, #0
	strh r4, [r7, #0xc]
	movs r6, #0xc9
	lsls r6, r6, #3
	adds r1, r7, r6
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075DB8
	ldr r0, [r7, #0x1c]
	adds r1, r5, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	str r4, [r7, #0x10]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	ldr r1, _0807CF3C @ =0x080FDD68
	adds r0, r7, #0
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0xe
	bl func_08050E50
_0807CF32:
	ldr r4, _0807CF40 @ =0x000006A4
	adds r1, r7, r4
_0807CF36:
	movs r0, #6
	str r0, [r1]
	b _0807D054
	.align 2, 0
_0807CF3C: .4byte 0x080FDD68
_0807CF40: .4byte 0x000006A4
_0807CF44:
	movs r5, #0xd4
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r0, [r0]
	cmp r0, #3
	beq _0807CF52
	b _0807D054
_0807CF52:
	movs r6, #0xd2
	lsls r6, r6, #2
	adds r4, r7, r6
	adds r0, r4, #0
	bl func_08050DF0
	adds r5, r0, #0
	cmp r5, #1
	beq _0807CF6A
	cmp r5, #2
	beq _0807CFD0
	b _0807D054
_0807CF6A:
	ldr r0, [r7, #0x10]
	lsls r0, r0, #3
	adds r0, r0, r7
	ldr r1, _0807CFC0 @ =0x000006AC
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [sp, #0x84]
	str r1, [sp, #0x88]
	ldr r0, [r7, #8]
	ldr r2, _0807CFC4 @ =0x00001AA8
	adds r0, r0, r2
	ldr r1, [sp, #0x88]
	bl func_0809ABD8
	adds r0, r7, #0
	bl func_080C8550
	ldr r0, [r7, #8]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	ldr r1, [sp, #0x84]
	bl Remove__4CoopUi
	ldr r1, _0807CFC8 @ =0x080FDD84
	adds r0, r7, #0
	bl func_080CABA0
	adds r0, r4, #0
	movs r1, #0xf
	bl func_08050E50
	ldr r4, _0807CFCC @ =0x000006A4
	adds r1, r7, r4
	movs r0, #7
	str r0, [r1]
	movs r6, #0xd5
	lsls r6, r6, #3
	adds r0, r7, r6
	strb r5, [r0]
	b _0807D054
	.align 2, 0
_0807CFC0: .4byte 0x000006AC
_0807CFC4: .4byte 0x00001AA8
_0807CFC8: .4byte 0x080FDD84
_0807CFCC: .4byte 0x000006A4
_0807CFD0:
	adds r0, r4, #0
	bl func_08050E5C
	ldr r1, _0807CFE8 @ =0x000006A4
	adds r0, r7, r1
	movs r1, #1
	str r1, [r0]
_0807CFDE:
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	b _0807D054
	.align 2, 0
_0807CFE8: .4byte 0x000006A4
_0807CFEC:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #3
	bne _0807D054
	ldr r2, [sp, #0xc]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0807D054
	movs r3, #1
	str r3, [sp, #0x90]
	ldr r1, _0807D028 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	b _0807D054
	.align 2, 0
_0807D028: .4byte 0x00000889
_0807D02C:
	ldr r3, [sp, #0xc]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0807D054
	ldr r4, _0807D050 @ =0x00002318
	adds r0, r7, r4
	ldr r4, [r0]
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	adds r0, r4, #0
	b _0807D05E
	.align 2, 0
_0807D050: .4byte 0x00002318
_0807D054:
	adds r0, r7, #0
	bl func_080C96C4
	bl sub_0807C194
_0807D05E:
	add sp, #0xa4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0807D070
func_0807D070: @ 0x0807D070
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r4, r0, #0
	adds r5, r1, #0
	mov r8, r2
	adds r6, r3, #0
	ldr r0, _0807D0AC @ =vtable_unk_080E7BF8
	str r0, [r4]
	ldr r0, _0807D0B0 @ =0x0000231C
	bl __builtin_new
	mov r1, r8
	adds r2, r6, #0
	bl func_0807B0F0
	str r0, [r4, #4]
	ldr r1, [r5]
	movs r0, #0
	str r0, [r5]
	str r1, [r4, #8]
	str r6, [r4, #0xc]
	mov r0, r8
	str r0, [r4, #0x10]
	adds r0, r4, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807D0AC: .4byte vtable_unk_080E7BF8
_0807D0B0: .4byte 0x0000231C
_0807D0B4:
	.byte 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x0D, 0x48, 0x20, 0x60, 0xA1, 0x68
	.byte 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0x56, 0xF0, 0x22, 0xFC
	.byte 0x61, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x48, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0x56, 0xF0
	.byte 0x19, 0xFC, 0x20, 0x1C, 0x29, 0x1C, 0x83, 0xF7, 0x81, 0xFB, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47
	.byte 0xF8, 0x7B, 0x0E, 0x08, 0xF0, 0xB5, 0x4F, 0x46, 0x46, 0x46, 0xC0, 0xB4, 0x85, 0xB0, 0x80, 0x46
	.byte 0x0F, 0x1C, 0x78, 0x68, 0xFE, 0xF7, 0xE0, 0xFE, 0x06, 0x1C, 0x01, 0x20, 0x40, 0x42, 0x86, 0x42
	.byte 0x32, 0xD0, 0x10, 0x20, 0x83, 0xF7, 0x5E, 0xFA, 0xBD, 0x68, 0x00, 0x24, 0xBC, 0x60, 0x01, 0xA9
	.byte 0x89, 0x46, 0x3A, 0x69, 0x01, 0x23, 0x12, 0x49, 0x01, 0x60, 0x01, 0x94, 0x45, 0x60, 0x82, 0x60
	.byte 0xC3, 0x60, 0x00, 0x90, 0x14, 0x20, 0x83, 0xF7, 0x4D, 0xFA, 0x00, 0x9D, 0x00, 0x94, 0x3A, 0x69
	.byte 0x03, 0x23, 0x0C, 0x49, 0x01, 0x60, 0x02, 0x94, 0x45, 0x60, 0x82, 0x60, 0xC3, 0x60, 0x06, 0x74
	.byte 0x49, 0x46, 0x03, 0x91, 0x04, 0x90, 0x01, 0x94, 0x41, 0x46, 0x08, 0x60, 0x00, 0x99, 0x00, 0x29
	.byte 0x0F, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21, 0x56, 0xF0, 0xD3, 0xFB, 0x08, 0xE0
	.byte 0xA4, 0x5D, 0x0E, 0x08, 0x64, 0x5C, 0x0E, 0x08, 0xB9, 0x68, 0x00, 0x20, 0xB8, 0x60, 0x40, 0x46
	.byte 0x01, 0x60, 0x40, 0x46, 0x05, 0xB0, 0x18, 0xBC, 0x98, 0x46, 0xA1, 0x46, 0xF0, 0xBC, 0x02, 0xBC
	.byte 0x08, 0x47, 0x00, 0x00

	thumb_func_start func_0807D194
func_0807D194: @ 0x0807D194
	push {r4, lr}
	adds r4, r0, #0
	bl func_080C7F58
	ldr r0, _0807D1C0 @ =vtable_unk_080E7C14
	str r0, [r4, #4]
	ldr r1, _0807D1C4 @ =0x000006A4
	adds r0, r4, r1
	movs r1, #0
	strb r1, [r0]
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r4, r2
	str r1, [r0]
	adds r2, #4
	adds r0, r4, r2
	strb r1, [r0]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0807D1C0: .4byte vtable_unk_080E7C14
_0807D1C4: .4byte 0x000006A4
_0807D1C8:
	.byte 0x00, 0xB5, 0x03, 0x4A, 0x42, 0x60, 0x4B, 0xF0
	.byte 0xC7, 0xF8, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x14, 0x7C, 0x0E, 0x08

	thumb_func_start func_0807D1DC
func_0807D1DC: @ 0x0807D1DC
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r2, _0807D214 @ =0x080FDDD8
	lsls r1, r1, #2
	adds r1, r1, r4
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r0, [r1]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, [r0]
	mov r0, sp
	bl __4ToolUi
	mov r0, sp
	bl GetDesc__C4Tool
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CABEC
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807D214: .4byte 0x080FDDD8

	thumb_func_start func_0807D218
func_0807D218: @ 0x0807D218
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xe8
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080C85A0
	ldr r0, [r7, #8]
	adds r4, r0, #0
	adds r4, #0x54
	ldrb r0, [r0, #0x11]
	lsls r0, r0, #0x1e
	lsrs r2, r0, #0x1e
	cmp r2, #1
	beq _0807D32A
	cmp r2, #1
	bgt _0807D24A
	cmp r2, #0
	beq _0807D252
	b _0807D506
_0807D24A:
	cmp r2, #2
	bne _0807D250
	b _0807D40C
_0807D250:
	b _0807D506
_0807D252:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D270
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0807D26A
	str r2, [r0]
_0807D26A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D270:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D290
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D28A
	movs r0, #1
	str r0, [r2]
_0807D28A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D290:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D2B0
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D2AA
	movs r0, #2
	str r0, [r2]
_0807D2AA:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D2B0:
	movs r5, #0
	adds r0, r4, #0
	movs r1, #0
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807D2CE
	adds r0, r4, #0
	movs r1, #0
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x63
	bls _0807D2CE
	movs r5, #1
_0807D2CE:
	adds r0, r4, #0
	movs r1, #1
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807D2EA
	adds r0, r4, #0
	movs r1, #1
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x63
	bls _0807D2EA
	adds r5, #1
_0807D2EA:
	adds r0, r4, #0
	movs r1, #2
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807D306
	adds r0, r4, #0
	movs r1, #2
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x63
	bls _0807D306
	adds r5, #1
_0807D306:
	cmp r5, #3
	beq _0807D30C
	b _0807D4E6
_0807D30C:
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bls _0807D31A
	b _0807D4E6
_0807D31A:
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	bne _0807D326
	b _0807D4E0
_0807D326:
	str r5, [r0]
	b _0807D4E0
_0807D32A:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D34A
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D344
	movs r0, #4
	str r0, [r2]
_0807D344:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D34A:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D36A
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D364
	movs r0, #5
	str r0, [r2]
_0807D364:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D36A:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D38A
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D384
	movs r0, #6
	str r0, [r2]
_0807D384:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D38A:
	movs r5, #0
	adds r0, r4, #0
	movs r1, #5
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807D3A8
	adds r0, r4, #0
	movs r1, #5
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x63
	bls _0807D3A8
	movs r5, #1
_0807D3A8:
	adds r0, r4, #0
	movs r1, #6
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807D3C4
	adds r0, r4, #0
	movs r1, #6
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x63
	bls _0807D3C4
	adds r5, #1
_0807D3C4:
	adds r0, r4, #0
	movs r1, #7
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807D3E0
	adds r0, r4, #0
	movs r1, #7
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x63
	bls _0807D3E0
	adds r5, #1
_0807D3E0:
	cmp r5, #3
	bne _0807D404
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D404
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D3FE
	movs r0, #7
	str r0, [r2]
_0807D3FE:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D404:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	b _0807D4EC
_0807D40C:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D42C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D426
	movs r0, #8
	str r0, [r2]
_0807D426:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D42C:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D44C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D446
	movs r0, #9
	str r0, [r2]
_0807D446:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D44C:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D46C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D466
	movs r0, #0xa
	str r0, [r2]
_0807D466:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D46C:
	movs r5, #0
	adds r0, r4, #0
	movs r1, #0xa
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807D48A
	adds r0, r4, #0
	movs r1, #0xa
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x63
	bls _0807D48A
	movs r5, #1
_0807D48A:
	adds r0, r4, #0
	movs r1, #0xb
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807D4A6
	adds r0, r4, #0
	movs r1, #0xb
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x63
	bls _0807D4A6
	adds r5, #1
_0807D4A6:
	adds r0, r4, #0
	movs r1, #0xc
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807D4C2
	adds r0, r4, #0
	movs r1, #0xc
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x63
	bls _0807D4C2
	adds r5, #1
_0807D4C2:
	cmp r5, #3
	bne _0807D4E6
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D4E6
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D4E0
	movs r0, #0xb
	str r0, [r2]
_0807D4E0:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D4E6:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
_0807D4EC:
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807D506
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807D500
	movs r0, #0xc
	str r0, [r2]
_0807D500:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807D506:
	movs r0, #0x10
	str r0, [sp, #0xc]
	movs r1, #4
	mov sl, r1
	add r6, sp, #0x18
	ldr r1, _0807D71C @ =0x086678A0
	adds r0, r6, #0
	bl func_0805E6CC
	add r0, sp, #0x48
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x4c
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x60
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	add r0, sp, #0x7c
	strb r5, [r0]
	add r3, sp, #0x80
	str r4, [sp, #0x80]
	strh r4, [r3, #4]
	add r2, sp, #0x88
	str r4, [r2]
	strh r4, [r2, #4]
	add r1, sp, #0x90
	str r4, [r1]
	strh r4, [r1, #4]
	add r0, sp, #0x98
	str r4, [r0]
	strh r4, [r0, #4]
	movs r6, #0
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r0, [r0]
	adds r1, #0x10
	str r1, [sp, #0xe4]
	cmp r6, r0
	bhs _0807D666
	adds r2, r4, #0
	adds r2, r7, r2
	str r2, [sp, #0xd4]
	adds r3, r7, #0
	adds r3, #0x20
	str r3, [sp, #0xd8]
	add r4, sp, #0xc4
	mov sb, r4
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r5, r7, r0
	add r1, sp, #0x4c
	mov r8, r1
_0807D58E:
	add r1, sp, #8
	mov r2, sl
	lsls r0, r2, #3
	strh r0, [r1]
	ldr r0, [r5]
	lsls r0, r0, #3
	ldr r1, _0807D720 @ =0x080FDDD8
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r2, sp, #0xc4
	str r0, [r2]
	str r1, [r2, #4]
	add r4, sp, #0xc0
	ldr r1, [r2]
	adds r0, r4, #0
	bl __4ToolUi
	adds r0, r4, #0
	bl GetIconId__C4Tool
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r0, r8
	bl func_0805E860
	ldr r1, [sp, #0x4c]
	ldr r3, [r1]
	mov r4, r8
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x50]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xa0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r0, [sp, #0xe4]
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x80
	ldr r0, [sp, #0xe4]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r0, [sp, #0x88]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x90]
	str r0, [sp, #0x14]
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _0807D620
	lsls r0, r0, #4
	adds r0, #4
	ldr r4, [sp, #0xd8]
	adds r0, r4, r0
	cmp r0, #0
	beq _0807D61A
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807D61A:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_0807D620:
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	mov r0, sl
	lsls r4, r0, #6
	adds r1, r1, r4
	adds r1, #0x32
	mov r2, sb
	ldr r0, [r2, #4]
	movs r3, #0x20
	str r3, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	movs r1, #0
	str r1, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	movs r0, #2
	add sl, r0
	adds r5, #4
	adds r6, #1
	ldr r1, [sp, #0xd4]
	ldr r0, [r1]
	cmp r6, r0
	blo _0807D58E
_0807D666:
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075C88
	ldr r0, [r7, #0x1c]
	mov r1, sl
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r1, [r7, #0x10]
	adds r0, r7, #0
	bl func_0807D1DC
	adds r0, r7, #0
	bl func_08008918
	movs r1, #0x3f
	ldr r3, [sp, #0xe4]
	strh r1, [r3]
	adds r0, #0x50
	strh r1, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0807D724 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	ldr r0, [sp, #0xe4]
	str r4, [r0]
	ldr r1, _0807D728 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r3, [sp, #0xe4]
	ldr r1, [r3]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r4, #0
	str r4, [sp, #0xdc]
_0807D6E0:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	ldr r0, [sp, #0xe4]
	ldr r3, [r0]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0807D6FC
	b _0807DD08
_0807D6FC:
	ldr r1, [sp, #0xdc]
	cmp r1, #0
	beq _0807D704
	b _0807DD14
_0807D704:
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #4
	bls _0807D712
	b _0807DD08
_0807D712:
	lsls r0, r0, #2
	ldr r1, _0807D72C @ =_0807D730
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807D71C: .4byte 0x086678A0
_0807D720: .4byte 0x080FDDD8
_0807D724: .4byte vtable_unk_080E5B80
_0807D728: .4byte 0x00000889
_0807D72C: .4byte _0807D730
_0807D730: @ jump table
	.4byte _0807D744 @ case 0
	.4byte _0807DAA0 @ case 1
	.4byte _0807DAD4 @ case 2
	.4byte _0807DAFC @ case 3
	.4byte _0807DCCC @ case 4
_0807D744:
	ldr r0, [r7, #0x14]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	beq _0807D752
	adds r0, r7, #0
	bl func_0807D1DC
_0807D752:
	ldr r3, _0807D7B4 @ =0x000006A1
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807D75E
	b _0807DA30
_0807D75E:
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r4, #0xaa
	lsls r4, r4, #2
	adds r0, r0, r4
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _0807D7B8 @ =0x080FDDD8
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r4, sp, #0xc4
	str r0, [r4]
	str r1, [r4, #4]
	ldr r0, [r4, #4]
	str r0, [sp, #0xe0]
	ldr r0, [r7, #8]
	ldr r1, _0807D7BC @ =0x00001C38
	adds r0, r0, r1
	ldr r1, [r4]
	bl func_0800F990
	adds r5, r0, #0
	ldr r0, [r7, #8]
	movs r2, #0xe0
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r1, [r4]
	bl GetAvailableSpaceFor__C9ToolChestUi
	adds r5, r5, r0
	ldr r0, [r7, #8]
	ldr r6, _0807D7C0 @ =0x00001C34
	adds r0, r0, r6
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	mov sb, r4
	cmp r0, #0
	beq _0807D7C4
	adds r5, #0x63
	b _0807D7F6
	.align 2, 0
_0807D7B4: .4byte 0x000006A1
_0807D7B8: .4byte 0x080FDDD8
_0807D7BC: .4byte 0x00001C38
_0807D7C0: .4byte 0x00001C34
_0807D7C4:
	ldr r0, [r7, #8]
	ldr r3, _0807D898 @ =0x00001C34
	adds r0, r0, r3
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0xcc
	strb r1, [r0]
	bl GetId__C4Tool
	movs r2, #0
	mov r4, sb
	ldr r1, [r4]
	cmp r0, r1
	bne _0807D7E4
	movs r2, #1
_0807D7E4:
	cmp r2, #0
	beq _0807D7F6
	ldr r0, [r7, #8]
	adds r0, r0, r6
	bl GetAmount__C9ToolStack
	adds r1, r5, #0
	adds r1, #0x63
	subs r5, r1, r0
_0807D7F6:
	ldr r0, [r7, #8]
	ldr r1, _0807D89C @ =0x00001C38
	adds r0, r0, r1
	mov r2, sb
	ldr r1, [r2]
	bl func_0800F9FC
	mov r8, r0
	movs r3, #0
	mov sl, r3
	ldr r0, [r7, #8]
	movs r4, #0xe0
	lsls r4, r4, #2
	adds r0, r0, r4
	add r1, sp, #0xc4
	ldr r1, [r1]
	bl GetAmountOf__C9ToolChestUi
	adds r4, r0, #0
	ldr r0, [r7, #8]
	ldr r6, _0807D898 @ =0x00001C34
	adds r0, r0, r6
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807D85A
	ldr r0, [r7, #8]
	adds r0, r0, r6
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xcd
	strb r1, [r0]
	bl GetId__C4Tool
	movs r2, #0
	mov r3, sb
	ldr r1, [r3]
	cmp r0, r1
	bne _0807D84C
	movs r2, #1
_0807D84C:
	cmp r2, #0
	beq _0807D85A
	ldr r0, [r7, #8]
	adds r0, r0, r6
	bl GetAmount__C9ToolStack
	mov sl, r0
_0807D85A:
	mov r0, r8
	add r0, sl
	adds r0, r0, r4
	add r1, sp, #0xa4
	movs r2, #7
	bl func_0804EC84
	ldr r0, [r7, #8]
	ldr r4, _0807D8A0 @ =0x00001AA8
	adds r0, r0, r4
	ldr r1, [r0]
	movs r2, #0
	mov r3, sb
	ldr r0, [r3, #4]
	cmp r1, r0
	blo _0807D87C
	movs r2, #1
_0807D87C:
	cmp r2, #0
	bne _0807D882
	b _0807DA0C
_0807D882:
	cmp r5, #0
	bne _0807D8A8
	ldr r1, _0807D8A4 @ =0x080FDE40
	adds r0, r7, #0
	bl func_080CABA0
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r1, r7, r4
	movs r0, #2
	b _0807DA84
	.align 2, 0
_0807D898: .4byte 0x00001C34
_0807D89C: .4byte 0x00001C38
_0807D8A0: .4byte 0x00001AA8
_0807D8A4: .4byte 0x080FDE40
_0807D8A8:
	ldr r1, _0807D9F8 @ =0x00000684
	adds r0, r7, r1
	ldr r1, [sp, #0xe0]
	adds r2, r5, #0
	movs r3, #5
	bl func_080CA8B4
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r7, r2
	movs r0, #3
	str r0, [r1]
	mov r5, sp
	adds r5, #0xce
	mov r3, sb
	ldr r1, [r3]
	adds r0, r5, #0
	bl __4ToolUi
	ldr r0, _0807D9FC @ =0x000006A4
	adds r4, r7, r0
	movs r1, #0
	mov sl, r1
	mov r2, sl
	strb r2, [r4]
	adds r0, r5, #0
	bl GetName__C4Tool
	mov sb, r0
	mov r5, sb
	adds r0, r4, #0
	bl strlen
	adds r3, r4, r0
	mov r8, r3
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807D916
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807D904
	adds r5, r6, #0
_0807D904:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r1, r8
	adds r0, r1, r5
	mov r2, sl
	strb r2, [r0]
_0807D916:
	ldr r3, _0807DA00 @ =0x080FDE70
	mov sb, r3
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807D94C
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807D93A
	adds r5, r6, #0
_0807D93A:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0807D94C:
	ldr r0, _0807DA04 @ =0x08117828
	ldr r0, [r0]
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r3, r4, r0
	mov r8, r3
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807D984
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807D972
	adds r5, r6, #0
_0807D972:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_0807D984:
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807D9B6
	add r0, sp, #0xa4
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807D9A4
	adds r5, r6, #0
_0807D9A4:
	mov r0, r8
	add r1, sp, #0xa4
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0807D9B6:
	ldr r0, _0807DA08 @ =0x08117814
	ldr r0, [r0]
	mov r8, r0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _0807D9EA
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807D9DA
	adds r4, r5, #0
_0807D9DA:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807D9EA:
	ldr r3, _0807D9FC @ =0x000006A4
	adds r1, r7, r3
	adds r0, r7, #0
	bl func_080CABEC
	b _0807DA86
	.align 2, 0
_0807D9F8: .4byte 0x00000684
_0807D9FC: .4byte 0x000006A4
_0807DA00: .4byte 0x080FDE70
_0807DA04: .4byte 0x08117828
_0807DA08: .4byte 0x08117814
_0807DA0C:
	ldr r1, _0807DA2C @ =0x080FDE78
	adds r0, r7, #0
	bl func_080CABA0
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0x46
	bl func_08050E50
	movs r0, #0xe1
	lsls r0, r0, #3
	adds r1, r7, r0
	movs r0, #2
	b _0807DA84
	.align 2, 0
_0807DA2C: .4byte 0x080FDE78
_0807DA30:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0807DA86
	ldr r1, _0807DA60 @ =0x0000070C
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807DA68
	ldr r1, _0807DA64 @ =0x080FDEAC
	adds r0, r7, #0
	bl func_080CABA0
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r7, r2
	movs r1, #0x43
	bl func_08050E50
	b _0807DA7C
	.align 2, 0
_0807DA60: .4byte 0x0000070C
_0807DA64: .4byte 0x080FDEAC
_0807DA68:
	ldr r1, _0807DA9C @ =0x080FDEC4
	adds r0, r7, #0
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0x46
	bl func_08050E50
_0807DA7C:
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r1, r7, r4
	movs r0, #4
_0807DA84:
	str r0, [r1]
_0807DA86:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	movs r1, #0xa9
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_080C9020
	b _0807DD08
	.align 2, 0
_0807DA9C: .4byte 0x080FDEC4
_0807DAA0:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #3
	beq _0807DAAE
	b _0807DD08
_0807DAAE:
	ldr r1, _0807DAD0 @ =0x080FDEDC
	adds r0, r7, #0
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0x43
	bl func_08050E50
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r1, r7, r4
	movs r0, #2
	str r0, [r1]
	b _0807DD08
	.align 2, 0
_0807DAD0: .4byte 0x080FDEDC
_0807DAD4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #3
	beq _0807DAE2
	b _0807DD08
_0807DAE2:
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r7, r2
	bl func_08050E5C
	movs r3, #0xe1
	lsls r3, r3, #3
	adds r1, r7, r3
	movs r0, #0
	str r0, [r1]
	subs r0, #1
	str r0, [r7, #0x14]
	b _0807DD08
_0807DAFC:
	adds r0, r7, #0
	bl func_080088CC
	adds r4, r0, #0
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	bne _0807DB0E
	b _0807DC88
_0807DB0E:
	ldr r4, _0807DB98 @ =0x00000684
	adds r0, r7, r4
	ldr r1, [r0, #0x14]
	mov r8, r1
	movs r6, #1
	bl func_080CAAF4
	ldr r1, [r7, #0x10]
	adds r0, r7, #0
	bl func_0807D1DC
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _0807DB9C @ =0x080FDDD8
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r4, sp, #0xc4
	str r0, [r4]
	str r1, [r4, #4]
	ldr r0, [r7, #8]
	ldr r3, _0807DBA0 @ =0x00001AA8
	adds r0, r0, r3
	ldr r1, [r4, #4]
	mov r2, r8
	muls r2, r1, r2
	adds r1, r2, #0
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	ldr r0, [r7, #8]
	ldr r5, _0807DBA4 @ =0x00001C34
	adds r0, r0, r5
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	mov sb, r4
	cmp r0, #0
	beq _0807DBA8
	ldr r5, [r7, #8]
	ldr r3, _0807DBA4 @ =0x00001C34
	adds r5, r5, r3
	add r6, sp, #0xa4
	mov r4, sp
	adds r4, #0xcf
	mov r0, sb
	ldr r1, [r0]
	adds r0, r4, #0
	bl __4ToolUi
	ldrb r1, [r4]
	adds r0, r6, #0
	mov r2, r8
	bl __9ToolStackG4ToolUi
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #2
	bl memcpy
	b _0807DC58
	.align 2, 0
_0807DB98: .4byte 0x00000684
_0807DB9C: .4byte 0x080FDDD8
_0807DBA0: .4byte 0x00001AA8
_0807DBA4: .4byte 0x00001C34
_0807DBA8:
	ldr r0, [r7, #8]
	ldr r1, _0807DBF4 @ =0x00001C34
	adds r0, r0, r1
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0xd0
	strb r1, [r0]
	bl GetId__C4Tool
	movs r2, #0
	mov r3, sb
	ldr r1, [r3]
	cmp r0, r1
	bne _0807DBC8
	movs r2, #1
_0807DBC8:
	cmp r2, #0
	beq _0807DC06
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r4, r1, r0
	cmp r8, r4
	bls _0807DBF8
	ldr r0, [r7, #8]
	adds r0, r0, r5
	adds r1, r4, #0
	bl AddAmount__9ToolStackUi
	mov r0, r8
	subs r0, r0, r4
	mov r8, r0
	cmp r4, #0
	beq _0807DC06
	movs r6, #0
	b _0807DC06
	.align 2, 0
_0807DBF4: .4byte 0x00001C34
_0807DBF8:
	ldr r0, [r7, #8]
	adds r0, r0, r5
	mov r1, r8
	bl AddAmount__9ToolStackUi
	movs r1, #0
	mov r8, r1
_0807DC06:
	mov r2, r8
	cmp r2, #0
	beq _0807DC58
	ldr r0, [r7, #8]
	ldr r3, _0807DC40 @ =0x00001C38
	adds r0, r0, r3
	mov r4, sb
	ldr r1, [r4]
	bl func_0800FEC8
	adds r2, r0, #0
	cmp r8, r2
	bls _0807DC22
	movs r6, #0
_0807DC22:
	cmp r2, #0
	beq _0807DC58
	ldr r0, [r7, #8]
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r0, r1
	mov r3, sb
	ldr r1, [r3]
	bl AddAmountOf__9ToolChestUiUi
	cmp r6, #0
	beq _0807DC48
	ldr r1, _0807DC44 @ =0x080FDEF8
	b _0807DC4A
	.align 2, 0
_0807DC40: .4byte 0x00001C38
_0807DC44: .4byte 0x080FDEF8
_0807DC48:
	ldr r1, _0807DC54 @ =0x080FDF50
_0807DC4A:
	adds r0, r7, #0
	bl func_080CABA0
	b _0807DC60
	.align 2, 0
_0807DC54: .4byte 0x080FDF50
_0807DC58:
	ldr r1, _0807DC80 @ =0x080FDEAC
	adds r0, r7, #0
	bl func_080CABA0
_0807DC60:
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0x44
	bl func_08050E50
	movs r1, #0xe1
	lsls r1, r1, #3
	adds r0, r7, r1
	movs r1, #1
	str r1, [r0]
	ldr r2, _0807DC84 @ =0x0000070C
	adds r0, r7, r2
	strb r1, [r0]
	b _0807DD08
	.align 2, 0
_0807DC80: .4byte 0x080FDEAC
_0807DC84: .4byte 0x0000070C
_0807DC88:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0807DCB4
	ldr r3, _0807DCB0 @ =0x00000684
	adds r0, r7, r3
	bl func_080CAAF4
	movs r1, #0xe1
	lsls r1, r1, #3
	adds r0, r7, r1
	str r4, [r0]
	ldr r1, [r7, #0x10]
	adds r0, r7, #0
	bl func_0807D1DC
	b _0807DD08
	.align 2, 0
_0807DCB0: .4byte 0x00000684
_0807DCB4:
	ldr r2, _0807DCC8 @ =0x00000684
	adds r1, r7, r2
	ldrb r0, [r1, #8]
	cmp r0, #0
	beq _0807DD08
	adds r0, r1, #0
	bl func_080CA98C
	b _0807DD08
	.align 2, 0
_0807DCC8: .4byte 0x00000684
_0807DCCC:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _0807DD08
	ldr r4, [sp, #0xe4]
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0807DD08
	movs r0, #1
	str r0, [sp, #0xdc]
	ldr r1, _0807DD10 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_0807DD08:
	adds r0, r7, #0
	bl func_080C96C4
	b _0807D6E0
	.align 2, 0
_0807DD10: .4byte 0x00000889
_0807DD14:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	ldr r0, _0807DD34 @ =vtable_unk_080E5A28
	str r0, [sp, #0x18]
	add sp, #0xe8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807DD34: .4byte vtable_unk_080E5A28

	thumb_func_start func_0807DD38
func_0807DD38: @ 0x0807DD38
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _0807DD64 @ =vtable_unk_080E7C30
	str r0, [r4]
	movs r0, #0xe2
	lsls r0, r0, #3
	bl __builtin_new
	adds r1, r5, #0
	bl func_0807D194
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807DD64: .4byte vtable_unk_080E7C30

	thumb_func_start func_0807DD68
func_0807DD68: @ 0x0807DD68
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0807DDA4 @ =vtable_unk_080E7C30
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0807DD84
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0807DD84:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0807DD96
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0807DD96:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807DDA4: .4byte vtable_unk_080E7C30

	thumb_func_start func_0807DDA8
func_0807DDA8: @ 0x0807DDA8
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_0807D218
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0807DDC4
func_0807DDC4: @ 0x0807DDC4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r2, #0
	bl func_080C7F58
	ldr r0, _0807DDF0 @ =vtable_unk_080E7C08
	str r0, [r4, #4]
	ldr r1, _0807DDF4 @ =0x000006A4
	adds r0, r4, r1
	str r5, [r0]
	movs r2, #0xd5
	lsls r2, r2, #3
	adds r0, r4, r2
	movs r1, #0
	strb r1, [r0]
	adds r2, #0x64
	adds r0, r4, r2
	str r1, [r0]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0807DDF0: .4byte vtable_unk_080E7C08
_0807DDF4: .4byte 0x000006A4
_0807DDF8:
	.byte 0x00, 0xB5, 0x03, 0x4A, 0x42, 0x60, 0x4A, 0xF0
	.byte 0xAF, 0xFA, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x08, 0x7C, 0x0E, 0x08, 0x10, 0xB5, 0x81, 0xB0
	.byte 0x04, 0x1C, 0x09, 0x48, 0xC9, 0x00, 0x09, 0x18, 0x09, 0x68, 0x68, 0x46, 0x8F, 0xF7, 0x44, 0xFF
	.byte 0x68, 0x46, 0x8F, 0xF7, 0xD7, 0xFF, 0x01, 0x1C, 0x20, 0x1C, 0x4C, 0xF0, 0xDF, 0xFE, 0x01, 0xB0
	.byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0xA4, 0xDF, 0x0F, 0x08

	thumb_func_start func_0807DE3C
func_0807DE3C: @ 0x0807DE3C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xd8
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080C85A0
	movs r0, #0x10
	str r0, [sp, #0xc]
	add r6, sp, #0x18
	ldr r1, _0807E1F0 @ =0x086678A0
	adds r0, r6, #0
	bl func_0805E6CC
	add r0, sp, #0x48
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x4c
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x60
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	add r0, sp, #0x7c
	strb r5, [r0]
	add r5, sp, #0x80
	str r4, [sp, #0x80]
	strh r4, [r5, #4]
	add r0, sp, #0x88
	mov sl, r0
	str r4, [r0]
	strh r4, [r0, #4]
	add r1, sp, #0x90
	mov sb, r1
	str r4, [r1]
	strh r4, [r1, #4]
	add r0, sp, #0x98
	str r4, [r0]
	strh r4, [r0, #4]
	add r1, sp, #8
	movs r0, #0x20
	strh r0, [r1]
	ldr r2, _0807E1F4 @ =0x000006A4
	adds r0, r7, r2
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _0807E1F8 @ =0x080FDFA4
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r3, sp, #0xc4
	mov r8, r3
	mov r4, r8
	str r0, [r4]
	str r1, [r4, #4]
	add r6, sp, #0xa0
	ldr r1, [r4]
	adds r0, r6, #0
	bl __4FoodUi
	adds r0, r6, #0
	bl GetIconId__C4Food
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	add r4, sp, #0x4c
	adds r0, r4, #0
	bl func_0805E860
	ldr r1, [sp, #0x4c]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x50]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xa4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0xa4
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	adds r0, r4, #0
	ldm r0!, {r1, r2, r3}
	stm r5!, {r1, r2, r3}
	ldm r0!, {r1, r2, r3}
	stm r5!, {r1, r2, r3}
	ldm r0!, {r1, r2}
	stm r5!, {r1, r2}
	mov r3, sl
	ldr r0, [r3]
	str r0, [sp, #0x10]
	mov r1, sb
	ldr r0, [r1]
	str r0, [sp, #0x14]
	adds r1, r7, #0
	adds r1, #0x20
	ldr r0, [r7, #0x20]
	mov sl, r8
	cmp r0, #0x27
	bhi _0807DF50
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0807DF4A
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807DF4A:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_0807DF50:
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	movs r4, #4
	lsls r4, r4, #6
	adds r1, r1, r4
	adds r1, #0x32
	mov r2, sl
	ldr r0, [r2, #4]
	movs r6, #0x20
	str r6, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	movs r5, #0
	str r5, [sp]
	str r6, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	adds r0, r7, #0
	bl func_08008918
	movs r1, #0x3f
	add r3, sp, #0xa0
	strh r1, [r3]
	adds r0, #0x50
	strh r1, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	str r5, [r4]
	str r5, [r4, #4]
	ldr r0, _0807E1FC @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0xa0]
	ldr r1, _0807E200 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xa0]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r4, #0
	str r4, [sp, #0xcc]
	ldr r1, _0807E1F4 @ =0x000006A4
	adds r0, r7, r1
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _0807E1F8 @ =0x080FDFA4
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r2, sp, #0xc4
	str r0, [r2]
	str r1, [r2, #4]
	mov r2, sl
	ldr r2, [r2, #4]
	mov sb, r2
	movs r3, #0
	str r3, [sp, #0xd0]
	mov r8, r3
	ldr r0, [r7, #8]
	ldr r4, _0807E204 @ =0x00001C38
	adds r0, r0, r4
	bl func_0800F77C
	adds r6, r0, #0
	ldr r0, [r7, #8]
	movs r5, #0xfa
	lsls r5, r5, #1
	adds r0, r0, r5
	bl GetFridge__9FarmHouse
	cmp r0, #0
	beq _0807E028
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl GetFridge__9FarmHouse
	mov r2, sl
	ldr r1, [r2]
	bl GetAvailableSpaceFor__C6FridgeUi
	mov r8, r0
_0807E028:
	ldr r0, [r7, #8]
	ldr r4, _0807E208 @ =0x00001C2C
	adds r0, r0, r4
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807E03C
	movs r3, #1
	str r3, [sp, #0xd0]
_0807E03C:
	ldr r0, [sp, #0xd0]
	adds r2, r6, r0
	add r2, r8
	ldr r1, _0807E20C @ =0x00000684
	adds r0, r7, r1
	mov r1, sb
	movs r3, #5
	bl func_080CA8B4
	movs r2, #0
	mov sb, r2
	mov r8, r2
	ldr r0, [r7, #8]
	ldr r3, _0807E204 @ =0x00001C38
	adds r0, r0, r3
	mov r2, sl
	ldr r1, [r2]
	bl func_0800F7AC
	adds r6, r0, #0
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl GetFridge__9FarmHouse
	cmp r0, #0
	beq _0807E082
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl GetFridge__9FarmHouse
	mov r3, sl
	ldr r1, [r3]
	bl GetAmountOf__C6FridgeUi
	mov r8, r0
_0807E082:
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807E0C0
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800F204
	cmp r0, #0
	bne _0807E0C0
	ldr r1, [r7, #8]
	adds r1, r1, r4
	add r0, sp, #0xa4
	bl func_0800F20C
	add r0, sp, #0xa4
	bl GetId__C4Food
	movs r2, #0
	mov r4, sl
	ldr r1, [r4]
	cmp r0, r1
	bne _0807E0B8
	movs r2, #1
_0807E0B8:
	cmp r2, #0
	beq _0807E0C0
	movs r0, #1
	mov sb, r0
_0807E0C0:
	mov r1, sb
	adds r0, r6, r1
	add r0, r8
	add r1, sp, #0xa4
	movs r2, #7
	bl func_0804EC84
	add r5, sp, #0xb4
	mov r2, sl
	ldr r1, [r2]
	adds r0, r5, #0
	bl __4FoodUi
	movs r3, #0xd5
	lsls r3, r3, #3
	adds r4, r7, r3
	movs r0, #0
	strb r0, [r4]
	adds r0, r5, #0
	bl GetName__C4Food
	mov sb, r0
	mov r5, sb
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807E120
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807E10E
	adds r5, r6, #0
_0807E10E:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r0, r2, r5
	movs r3, #0
	strb r3, [r0]
_0807E120:
	ldr r0, _0807E210 @ =0x080FDE70
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807E156
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807E144
	adds r5, r6, #0
_0807E144:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0807E156:
	ldr r0, _0807E214 @ =0x08117828
	ldr r0, [r0]
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r3, r4, r0
	mov r8, r3
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807E18E
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807E17C
	adds r5, r6, #0
_0807E17C:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_0807E18E:
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807E1C0
	add r0, sp, #0xa4
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807E1AE
	adds r5, r6, #0
_0807E1AE:
	mov r0, r8
	add r1, sp, #0xa4
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0807E1C0:
	ldr r0, _0807E218 @ =0x08117814
	ldr r0, [r0]
	mov r8, r0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _0807E222
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807E1E4
	adds r4, r5, #0
_0807E1E4:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	b _0807E21C
	.align 2, 0
_0807E1F0: .4byte 0x086678A0
_0807E1F4: .4byte 0x000006A4
_0807E1F8: .4byte 0x080FDFA4
_0807E1FC: .4byte vtable_unk_080E5B80
_0807E200: .4byte 0x00000889
_0807E204: .4byte 0x00001C38
_0807E208: .4byte 0x00001C2C
_0807E20C: .4byte 0x00000684
_0807E210: .4byte 0x080FDE70
_0807E214: .4byte 0x08117828
_0807E218: .4byte 0x08117814
_0807E21C:
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807E222:
	movs r3, #0xd5
	lsls r3, r3, #3
	adds r1, r7, r3
	adds r0, r7, #0
	bl func_080CABEC
	mov r4, sp
	adds r4, #0xa0
	str r4, [sp, #0xd4]
	movs r0, #1
	mov sb, r0
_0807E238:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	ldr r1, [sp, #0xd4]
	ldr r3, [r1]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0807E254
	b _0807E406
_0807E254:
	ldr r2, [sp, #0xcc]
	cmp r2, #0
	beq _0807E25C
	b _0807E414
_0807E25C:
	ldr r4, _0807E31C @ =0x0000070C
	adds r4, r4, r7
	mov r8, r4
	ldr r0, [r4]
	cmp r0, #1
	bne _0807E26A
	b _0807E3D0
_0807E26A:
	cmp r0, #1
	ble _0807E270
	b _0807E406
_0807E270:
	cmp r0, #0
	beq _0807E276
	b _0807E406
_0807E276:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0807E286
	b _0807E388
_0807E286:
	ldr r1, _0807E320 @ =0x00000684
	adds r0, r7, r1
	ldr r6, [r0, #0x14]
	movs r5, #1
	ldr r0, [r7, #8]
	ldr r2, _0807E324 @ =0x00001CD4
	adds r0, r0, r2
	adds r1, r6, #0
	bl func_080A0A54
	ldr r0, [r7, #8]
	ldr r3, _0807E328 @ =0x00001AA8
	adds r0, r0, r3
	mov r4, sl
	ldr r1, [r4, #4]
	muls r1, r6, r1
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	ldr r0, [sp, #0xd0]
	cmp r0, #0
	beq _0807E2E0
	subs r6, r6, r0
	ldr r5, [r7, #8]
	ldr r1, _0807E32C @ =0x00001C2C
	adds r5, r5, r1
	add r4, sp, #0xb8
	mov r2, sl
	ldr r1, [r2]
	adds r0, r4, #0
	bl __4FoodUi
	ldrb r1, [r4]
	ldrb r0, [r4, #1]
	lsls r0, r0, #8
	orrs r0, r1
	ldrb r1, [r4, #2]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	bl func_0800F3B0
	movs r5, #0
_0807E2E0:
	cmp r6, #0
	beq _0807E300
	ldr r0, [r7, #8]
	ldr r1, _0807E330 @ =0x00001C38
	adds r0, r0, r1
	mov r2, sl
	ldr r1, [r2]
	adds r2, r6, #0
	bl func_0800FD50
	adds r4, r0, #0
	cmp r6, r4
	bls _0807E2FC
	movs r5, #0
_0807E2FC:
	cmp r4, #0
	bne _0807E338
_0807E300:
	adds r0, r7, #0
	ldr r1, _0807E334 @ =0x080FDEAC
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0x44
	bl func_08050E50
	mov r4, sb
	mov r0, r8
	str r4, [r0]
	b _0807E406
	.align 2, 0
_0807E31C: .4byte 0x0000070C
_0807E320: .4byte 0x00000684
_0807E324: .4byte 0x00001CD4
_0807E328: .4byte 0x00001AA8
_0807E32C: .4byte 0x00001C2C
_0807E330: .4byte 0x00001C38
_0807E334: .4byte 0x080FDEAC
_0807E338:
	ldr r0, [r7, #8]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetFridge__9FarmHouse
	mov r2, sl
	ldr r1, [r2]
	adds r2, r4, #0
	bl AddAmountOf__6FridgeUiUi
	cmp r5, #0
	beq _0807E360
	adds r0, r7, #0
	ldr r1, _0807E35C @ =0x080FDF50
	bl func_080CABA0
	b _0807E368
	.align 2, 0
_0807E35C: .4byte 0x080FDF50
_0807E360:
	adds r0, r7, #0
	ldr r1, _0807E380 @ =0x080FDFE4
	bl func_080CABA0
_0807E368:
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0x44
	bl func_08050E50
	ldr r4, _0807E384 @ =0x0000070C
	adds r0, r7, r4
	mov r1, sb
	str r1, [r0]
	b _0807E406
	.align 2, 0
_0807E380: .4byte 0x080FDFE4
_0807E384: .4byte 0x0000070C
_0807E388:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0807E3B8
	adds r0, r7, #0
	ldr r1, _0807E3B4 @ =0x080FE034
	bl func_080CABA0
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r7, r2
	movs r1, #0x46
	bl func_08050E50
	mov r3, sb
	mov r4, r8
	str r3, [r4]
	b _0807E406
	.align 2, 0
_0807E3B4: .4byte 0x080FE034
_0807E3B8:
	ldr r0, _0807E3CC @ =0x00000684
	adds r1, r7, r0
	ldrb r0, [r1, #8]
	cmp r0, #0
	beq _0807E406
	adds r0, r1, #0
	bl func_080CA98C
	b _0807E406
	.align 2, 0
_0807E3CC: .4byte 0x00000684
_0807E3D0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #3
	bne _0807E406
	movs r0, #2
	mov r2, r8
	str r0, [r2]
	movs r4, #1
	str r4, [sp, #0xcc]
	adds r0, r3, #0
	adds r0, #0xc
	ldr r1, _0807E410 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r3, [sp, #0xd4]
	ldr r1, [r3]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_0807E406:
	adds r0, r7, #0
	bl func_080C96C4
	b _0807E238
	.align 2, 0
_0807E410: .4byte 0x00000889
_0807E414:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	ldr r0, _0807E434 @ =vtable_unk_080E5A28
	str r0, [sp, #0x18]
	add sp, #0xd8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807E434: .4byte vtable_unk_080E5A28

	thumb_func_start func_0807E438
func_0807E438: @ 0x0807E438
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r4, r0, #0
	mov r8, r1
	adds r5, r2, #0
	adds r6, r3, #0
	ldr r0, _0807E474 @ =vtable_unk_080E7C20
	str r0, [r4]
	movs r0, #0xe2
	lsls r0, r0, #3
	bl __builtin_new
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_0807DDC4
	str r0, [r4, #4]
	mov r0, r8
	ldr r1, [r0]
	movs r0, #0
	mov r2, r8
	str r0, [r2]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807E474: .4byte vtable_unk_080E7C20
_0807E478:
	.byte 0x30, 0xB5, 0x04, 0x1C, 0x0D, 0x1C, 0x0D, 0x48
	.byte 0x20, 0x60, 0xA1, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x08, 0x68, 0x82, 0x68, 0x08, 0x1C, 0x03, 0x21
	.byte 0x55, 0xF0, 0x40, 0xFA, 0x61, 0x68, 0x00, 0x29, 0x05, 0xD0, 0x48, 0x68, 0x82, 0x68, 0x08, 0x1C
	.byte 0x03, 0x21, 0x55, 0xF0, 0x37, 0xFA, 0x20, 0x1C, 0x29, 0x1C, 0x82, 0xF7, 0x9F, 0xF9, 0x30, 0xBC
	.byte 0x01, 0xBC, 0x00, 0x47, 0x20, 0x7C, 0x0E, 0x08

	thumb_func_start func_0807E4B8
func_0807E4B8: @ 0x0807E4B8
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_0807DE3C
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0807E4D4
func_0807E4D4: @ 0x0807E4D4
	push {r4, lr}
	adds r4, r0, #0
	bl func_080C7F58
	ldr r0, _0807E500 @ =vtable_unk_080E7C40
	str r0, [r4, #4]
	ldr r1, _0807E504 @ =0x000006A4
	adds r0, r4, r1
	movs r1, #0
	strb r1, [r0]
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r4, r2
	str r1, [r0]
	adds r2, #4
	adds r0, r4, r2
	strb r1, [r0]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0807E500: .4byte vtable_unk_080E7C40
_0807E504: .4byte 0x000006A4

	thumb_func_start func_0807E508
func_0807E508: @ 0x0807E508
	push {lr}
	ldr r2, _0807E518 @ =vtable_unk_080E7C40
	str r2, [r0, #4]
	bl func_080C8360
	pop {r0}
	bx r0
	.align 2, 0
_0807E518: .4byte vtable_unk_080E7C40

	thumb_func_start func_0807E51C
func_0807E51C: @ 0x0807E51C
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r2, _0807E554 @ =0x080FE050
	lsls r1, r1, #2
	adds r1, r1, r4
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r0, [r1]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, [r0]
	mov r0, sp
	bl __4FoodUi
	mov r0, sp
	bl GetDesc__C4Food
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CABEC
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807E554: .4byte 0x080FE050

	thumb_func_start func_0807E558
func_0807E558: @ 0x0807E558
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xec
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080C85A0
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807E590
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807E58A
	movs r0, #0
	str r0, [r2]
_0807E58A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807E590:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807E5B0
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807E5AA
	movs r0, #2
	str r0, [r2]
_0807E5AA:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807E5B0:
	ldr r0, [r7, #8]
	adds r0, #0x54
	movs r1, #0x32
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807E5EE
	ldr r0, [r7, #8]
	adds r0, #0x54
	movs r1, #0x32
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x31
	bls _0807E5EE
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807E5EE
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807E5E8
	movs r0, #1
	str r0, [r2]
_0807E5E8:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807E5EE:
	ldr r0, [r7, #8]
	adds r0, #0x54
	movs r1, #0x33
	bl IsDisplayEnabled__C11ShippingBini
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807E62C
	ldr r0, [r7, #8]
	adds r0, #0x54
	movs r1, #0x33
	bl GetAmountShipped__C11ShippingBini
	cmp r0, #0x31
	bls _0807E62C
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807E62C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807E626
	movs r0, #3
	str r0, [r2]
_0807E626:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807E62C:
	movs r0, #0x10
	str r0, [sp, #0xc]
	movs r0, #4
	mov sl, r0
	add r6, sp, #0x18
	ldr r1, _0807E840 @ =0x086678A0
	adds r0, r6, #0
	bl func_0805E6CC
	add r0, sp, #0x48
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x4c
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x60
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	add r0, sp, #0x7c
	strb r5, [r0]
	add r3, sp, #0x80
	str r4, [sp, #0x80]
	strh r4, [r3, #4]
	add r2, sp, #0x88
	str r4, [r2]
	strh r4, [r2, #4]
	add r1, sp, #0x90
	str r4, [r1]
	strh r4, [r1, #4]
	add r0, sp, #0x98
	str r4, [r0]
	strh r4, [r0, #4]
	movs r6, #0
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r0, [r0]
	adds r1, #0x10
	str r1, [sp, #0xe8]
	cmp r6, r0
	bhs _0807E78A
	adds r2, r4, #0
	adds r2, r7, r2
	str r2, [sp, #0xcc]
	adds r3, r7, #0
	adds r3, #0x20
	str r3, [sp, #0xd0]
	add r4, sp, #0xc4
	mov r8, r4
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r5, r7, r0
	add r1, sp, #0x4c
	mov sb, r1
_0807E6B4:
	add r1, sp, #8
	mov r2, sl
	lsls r0, r2, #3
	strh r0, [r1]
	ldr r0, [r5]
	lsls r0, r0, #3
	ldr r1, _0807E844 @ =0x080FE050
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r2, sp, #0xc4
	str r0, [r2]
	str r1, [r2, #4]
	ldr r1, [r2]
	ldr r0, [sp, #0xe8]
	bl __4FoodUi
	ldr r0, [sp, #0xe8]
	bl GetIconId__C4Food
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r0, sb
	bl func_0805E860
	ldr r1, [sp, #0x4c]
	ldr r3, [r1]
	mov r4, sb
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x50]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xa4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0xa4
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x80
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	ldr r0, [sp, #0x88]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x90]
	str r0, [sp, #0x14]
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _0807E744
	lsls r0, r0, #4
	adds r0, #4
	ldr r3, [sp, #0xd0]
	adds r0, r3, r0
	cmp r0, #0
	beq _0807E73E
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807E73E:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_0807E744:
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	mov r0, sl
	lsls r4, r0, #6
	adds r1, r1, r4
	adds r1, #0x32
	mov r2, r8
	ldr r0, [r2, #4]
	movs r3, #0x20
	str r3, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	movs r1, #0
	str r1, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	movs r0, #2
	add sl, r0
	adds r5, #4
	adds r6, #1
	ldr r1, [sp, #0xcc]
	ldr r0, [r1]
	cmp r6, r0
	blo _0807E6B4
_0807E78A:
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075C88
	ldr r0, [r7, #0x1c]
	mov r1, sl
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r1, [r7, #0x10]
	adds r0, r7, #0
	bl func_0807E51C
	adds r0, r7, #0
	bl func_08008918
	movs r1, #0x3f
	ldr r3, [sp, #0xe8]
	strh r1, [r3]
	adds r0, #0x50
	strh r1, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0807E848 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	ldr r0, [sp, #0xe8]
	str r4, [r0]
	ldr r1, _0807E84C @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r3, [sp, #0xe8]
	ldr r1, [r3]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r4, #0
	str r4, [sp, #0xd4]
_0807E804:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	ldr r0, [sp, #0xe8]
	ldr r3, [r0]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0807E820
	b _0807EDE4
_0807E820:
	ldr r1, [sp, #0xd4]
	cmp r1, #0
	beq _0807E828
	b _0807EDF0
_0807E828:
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #4
	bls _0807E836
	b _0807EDE4
_0807E836:
	lsls r0, r0, #2
	ldr r1, _0807E850 @ =_0807E854
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807E840: .4byte 0x086678A0
_0807E844: .4byte 0x080FE050
_0807E848: .4byte vtable_unk_080E5B80
_0807E84C: .4byte 0x00000889
_0807E850: .4byte _0807E854
_0807E854: @ jump table
	.4byte _0807E868 @ case 0
	.4byte _0807EBC0 @ case 1
	.4byte _0807EBF4 @ case 2
	.4byte _0807EC1C @ case 3
	.4byte _0807ED9C @ case 4
_0807E868:
	ldr r0, [r7, #0x14]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	beq _0807E876
	adds r0, r7, #0
	bl func_0807E51C
_0807E876:
	ldr r3, _0807E9C0 @ =0x000006A1
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807E882
	b _0807EB5C
_0807E882:
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r4, #0xaa
	lsls r4, r4, #2
	adds r0, r0, r4
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _0807E9C4 @ =0x080FE050
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r4, sp, #0xc4
	str r0, [r4]
	str r1, [r4, #4]
	ldr r0, [r4, #4]
	str r0, [sp, #0xd8]
	movs r1, #0
	str r1, [sp, #0xdc]
	mov sl, r1
	ldr r0, [r7, #8]
	ldr r2, _0807E9C8 @ =0x00001C38
	adds r0, r0, r2
	bl func_0800F77C
	adds r6, r0, #0
	ldr r0, [r7, #8]
	movs r3, #0xfa
	lsls r3, r3, #1
	mov sb, r3
	add r0, sb
	bl GetFridge__9FarmHouse
	mov r8, r4
	cmp r0, #0
	beq _0807E8E0
	ldr r0, [r7, #8]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl GetFridge__9FarmHouse
	mov r2, r8
	ldr r1, [r2]
	bl GetAvailableSpaceFor__C6FridgeUi
	mov sl, r0
_0807E8E0:
	ldr r0, [r7, #8]
	ldr r5, _0807E9CC @ =0x00001C2C
	adds r0, r0, r5
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807E8F4
	movs r3, #1
	str r3, [sp, #0xdc]
_0807E8F4:
	ldr r4, [sp, #0xdc]
	adds r0, r6, r4
	add sl, r0
	movs r0, #0
	str r0, [sp, #0xe0]
	movs r1, #0
	str r1, [sp, #0xe4]
	ldr r0, [r7, #8]
	ldr r2, _0807E9C8 @ =0x00001C38
	adds r0, r0, r2
	mov r3, r8
	ldr r1, [r3]
	bl func_0800F7AC
	adds r6, r0, #0
	ldr r0, [r7, #8]
	add r0, sb
	bl GetFridge__9FarmHouse
	cmp r0, #0
	beq _0807E930
	ldr r0, [r7, #8]
	add r0, sb
	bl GetFridge__9FarmHouse
	mov r4, r8
	ldr r1, [r4]
	bl GetAmountOf__C6FridgeUi
	str r0, [sp, #0xe4]
_0807E930:
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl func_0800F190
	lsls r0, r0, #0x18
	add r4, sp, #0xa4
	cmp r0, #0
	bne _0807E970
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl func_0800F204
	cmp r0, #0
	bne _0807E970
	ldr r1, [r7, #8]
	adds r1, r1, r5
	adds r0, r4, #0
	bl func_0800F20C
	adds r0, r4, #0
	bl GetId__C4Food
	movs r2, #0
	mov r3, r8
	ldr r1, [r3]
	cmp r0, r1
	bne _0807E968
	movs r2, #1
_0807E968:
	cmp r2, #0
	beq _0807E970
	movs r0, #1
	str r0, [sp, #0xe0]
_0807E970:
	ldr r1, [sp, #0xe0]
	adds r0, r6, r1
	ldr r2, [sp, #0xe4]
	adds r0, r0, r2
	adds r1, r4, #0
	movs r2, #7
	bl func_0804EC84
	ldr r0, [r7, #8]
	ldr r3, _0807E9D0 @ =0x00001AA8
	adds r0, r0, r3
	ldr r1, [r0]
	movs r2, #0
	mov r4, r8
	ldr r0, [r4, #4]
	cmp r1, r0
	blo _0807E994
	movs r2, #1
_0807E994:
	cmp r2, #0
	bne _0807E99A
	b _0807EB38
_0807E99A:
	mov r0, sl
	cmp r0, #0
	bne _0807E9D8
	ldr r1, _0807E9D4 @ =0x080FE070
	adds r0, r7, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0x79
	bl func_08050E50
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r7, r2
	movs r0, #1
	b _0807EBA4
	.align 2, 0
_0807E9C0: .4byte 0x000006A1
_0807E9C4: .4byte 0x080FE050
_0807E9C8: .4byte 0x00001C38
_0807E9CC: .4byte 0x00001C2C
_0807E9D0: .4byte 0x00001AA8
_0807E9D4: .4byte 0x080FE070
_0807E9D8:
	ldr r3, _0807EB24 @ =0x00000684
	adds r0, r7, r3
	ldr r1, [sp, #0xd8]
	mov r2, sl
	movs r3, #5
	bl func_080CA8B4
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r1, r7, r4
	movs r0, #3
	str r0, [r1]
	add r5, sp, #0xb4
	mov r0, r8
	ldr r1, [r0]
	adds r0, r5, #0
	bl __4FoodUi
	ldr r1, _0807EB28 @ =0x000006A4
	adds r4, r7, r1
	movs r2, #0
	mov sl, r2
	mov r3, sl
	strb r3, [r4]
	adds r0, r5, #0
	bl GetName__C4Food
	mov sb, r0
	mov r5, sb
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807EA44
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807EA32
	adds r5, r6, #0
_0807EA32:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r0, r2, r5
	mov r3, sl
	strb r3, [r0]
_0807EA44:
	ldr r0, _0807EB2C @ =0x080FE0BC
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807EA7A
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807EA68
	adds r5, r6, #0
_0807EA68:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0807EA7A:
	ldr r0, _0807EB30 @ =0x08117828
	ldr r0, [r0]
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r3, r4, r0
	mov r8, r3
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807EAB2
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807EAA0
	adds r5, r6, #0
_0807EAA0:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_0807EAB2:
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0807EAE4
	add r0, sp, #0xa4
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0807EAD2
	adds r5, r6, #0
_0807EAD2:
	mov r0, r8
	add r1, sp, #0xa4
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0807EAE4:
	ldr r0, _0807EB34 @ =0x08117814
	ldr r0, [r0]
	mov r8, r0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _0807EB18
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807EB08
	adds r4, r5, #0
_0807EB08:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0807EB18:
	ldr r3, _0807EB28 @ =0x000006A4
	adds r1, r7, r3
	adds r0, r7, #0
	bl func_080CABEC
	b _0807EBA6
	.align 2, 0
_0807EB24: .4byte 0x00000684
_0807EB28: .4byte 0x000006A4
_0807EB2C: .4byte 0x080FE0BC
_0807EB30: .4byte 0x08117828
_0807EB34: .4byte 0x08117814
_0807EB38:
	ldr r1, _0807EB58 @ =0x080FE0C4
	adds r0, r7, #0
	bl func_080CABA0
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0x7d
	bl func_08050E50
	movs r0, #0xe1
	lsls r0, r0, #3
	adds r1, r7, r0
	movs r0, #1
	b _0807EBA4
	.align 2, 0
_0807EB58: .4byte 0x080FE0C4
_0807EB5C:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0807EBA6
	ldr r1, _0807EB80 @ =0x0000070C
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807EB88
	ldr r1, _0807EB84 @ =0x080FE10C
	adds r0, r7, #0
	bl func_080CABA0
	b _0807EB90
	.align 2, 0
_0807EB80: .4byte 0x0000070C
_0807EB84: .4byte 0x080FE10C
_0807EB88:
	ldr r1, _0807EBBC @ =0x080FE134
	adds r0, r7, #0
	bl func_080CABA0
_0807EB90:
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r7, r2
	movs r1, #0x79
	bl func_08050E50
	movs r3, #0xe1
	lsls r3, r3, #3
	adds r1, r7, r3
	movs r0, #4
_0807EBA4:
	str r0, [r1]
_0807EBA6:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_080C9020
	b _0807EDE4
	.align 2, 0
_0807EBBC: .4byte 0x080FE134
_0807EBC0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #3
	beq _0807EBCE
	b _0807EDE4
_0807EBCE:
	ldr r1, _0807EBF0 @ =0x080FE180
	adds r0, r7, #0
	bl func_080CABA0
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r7, r2
	movs r1, #0x79
	bl func_08050E50
	movs r3, #0xe1
	lsls r3, r3, #3
	adds r1, r7, r3
	movs r0, #2
	str r0, [r1]
	b _0807EDE4
	.align 2, 0
_0807EBF0: .4byte 0x080FE180
_0807EBF4:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #3
	beq _0807EC02
	b _0807EDE4
_0807EC02:
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	bl func_08050E5C
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r7, r2
	movs r0, #0
	str r0, [r1]
	subs r0, #1
	str r0, [r7, #0x14]
	b _0807EDE4
_0807EC1C:
	adds r0, r7, #0
	bl func_080088CC
	adds r4, r0, #0
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	bne _0807EC2E
	b _0807ED58
_0807EC2E:
	ldr r3, _0807ECF4 @ =0x00000684
	adds r0, r7, r3
	ldr r6, [r0, #0x14]
	movs r5, #1
	bl func_080CAAF4
	ldr r1, [r7, #0x10]
	adds r0, r7, #0
	bl func_0807E51C
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r4, #0xaa
	lsls r4, r4, #2
	adds r0, r0, r4
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _0807ECF8 @ =0x080FE050
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r4, sp, #0xc4
	str r0, [r4]
	str r1, [r4, #4]
	ldr r0, [r7, #8]
	ldr r1, _0807ECFC @ =0x00001AA8
	adds r0, r0, r1
	ldr r1, [r4, #4]
	muls r1, r6, r1
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	ldr r0, [r7, #8]
	ldr r2, _0807ED00 @ =0x00001C2C
	adds r0, r0, r2
	bl func_0800F190
	lsls r0, r0, #0x18
	mov r8, r4
	cmp r0, #0
	beq _0807ECB0
	subs r6, #1
	ldr r5, [r7, #8]
	ldr r3, _0807ED00 @ =0x00001C2C
	adds r5, r5, r3
	add r4, sp, #0xa4
	mov r0, r8
	ldr r1, [r0]
	adds r0, r4, #0
	bl __4FoodUi
	ldrb r1, [r4]
	ldrb r0, [r4, #1]
	lsls r0, r0, #8
	orrs r0, r1
	ldrb r1, [r4, #2]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	bl func_0800F3B0
	movs r5, #0
_0807ECB0:
	cmp r6, #0
	beq _0807ED28
	ldr r0, [r7, #8]
	ldr r1, _0807ED04 @ =0x00001C38
	adds r0, r0, r1
	mov r2, r8
	ldr r1, [r2]
	adds r2, r6, #0
	bl func_0800FD50
	adds r4, r0, #0
	cmp r6, r4
	bls _0807ECCC
	movs r5, #0
_0807ECCC:
	cmp r4, #0
	beq _0807ED28
	ldr r0, [r7, #8]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl GetFridge__9FarmHouse
	mov r2, r8
	ldr r1, [r2]
	adds r2, r4, #0
	bl AddAmountOf__6FridgeUiUi
	cmp r5, #0
	beq _0807ED0C
	ldr r1, _0807ED08 @ =0x080FE19C
	adds r0, r7, #0
	bl func_080CABA0
	b _0807ED14
	.align 2, 0
_0807ECF4: .4byte 0x00000684
_0807ECF8: .4byte 0x080FE050
_0807ECFC: .4byte 0x00001AA8
_0807ED00: .4byte 0x00001C2C
_0807ED04: .4byte 0x00001C38
_0807ED08: .4byte 0x080FE19C
_0807ED0C:
	ldr r1, _0807ED24 @ =0x080FE1E8
	adds r0, r7, #0
	bl func_080CABA0
_0807ED14:
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0x79
	bl func_08050E50
	b _0807ED3C
	.align 2, 0
_0807ED24: .4byte 0x080FE1E8
_0807ED28:
	ldr r1, _0807ED50 @ =0x080FE238
	adds r0, r7, #0
	bl func_080CABA0
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0x7a
	bl func_08050E50
_0807ED3C:
	movs r1, #0xe1
	lsls r1, r1, #3
	adds r0, r7, r1
	movs r1, #1
	str r1, [r0]
	ldr r2, _0807ED54 @ =0x0000070C
	adds r0, r7, r2
	strb r1, [r0]
	b _0807EDE4
	.align 2, 0
_0807ED50: .4byte 0x080FE238
_0807ED54: .4byte 0x0000070C
_0807ED58:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0807ED84
	ldr r3, _0807ED80 @ =0x00000684
	adds r0, r7, r3
	bl func_080CAAF4
	ldr r1, [r7, #0x10]
	adds r0, r7, #0
	bl func_0807E51C
	movs r1, #0xe1
	lsls r1, r1, #3
	adds r0, r7, r1
	str r4, [r0]
	b _0807EDE4
	.align 2, 0
_0807ED80: .4byte 0x00000684
_0807ED84:
	ldr r2, _0807ED98 @ =0x00000684
	adds r1, r7, r2
	ldrb r0, [r1, #8]
	cmp r0, #0
	beq _0807EDE4
	adds r0, r1, #0
	bl func_080CA98C
	b _0807EDE4
	.align 2, 0
_0807ED98: .4byte 0x00000684
_0807ED9C:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _0807EDE4
	ldr r4, [sp, #0xe8]
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r1, r0, #0x1f
	cmp r1, #0
	bne _0807EDE4
	movs r3, #0xe1
	lsls r3, r3, #3
	adds r0, r7, r3
	str r1, [r0]
	movs r4, #1
	str r4, [sp, #0xd4]
	ldr r1, _0807EDEC @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r3, [sp, #0xe8]
	ldr r1, [r3]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_0807EDE4:
	adds r0, r7, #0
	bl func_080C96C4
	b _0807E804
	.align 2, 0
_0807EDEC: .4byte 0x00000889
_0807EDF0:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	ldr r0, _0807EE10 @ =vtable_unk_080E5A28
	str r0, [sp, #0x18]
	add sp, #0xec
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807EE10: .4byte vtable_unk_080E5A28

	thumb_func_start func_0807EE14
func_0807EE14: @ 0x0807EE14
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _0807EE40 @ =vtable_unk_080E7C4C
	str r0, [r4]
	movs r0, #0xe2
	lsls r0, r0, #3
	bl __builtin_new
	adds r1, r5, #0
	bl func_0807E4D4
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807EE40: .4byte vtable_unk_080E7C4C

	thumb_func_start func_0807EE44
func_0807EE44: @ 0x0807EE44
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0807EE80 @ =vtable_unk_080E7C4C
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0807EE60
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0807EE60:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0807EE72
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0807EE72:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807EE80: .4byte vtable_unk_080E7C4C

	thumb_func_start func_0807EE84
func_0807EE84: @ 0x0807EE84
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_0807E558
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0807EEA0
func_0807EEA0: @ 0x0807EEA0
	push {r4, lr}
	adds r4, r0, #0
	bl func_080C7F58
	ldr r0, _0807EECC @ =vtable_unk_080E7C5C
	str r0, [r4, #4]
	ldr r1, _0807EED0 @ =0x000006A4
	adds r0, r4, r1
	movs r1, #0
	str r1, [r0]
	movs r2, #0xd5
	lsls r2, r2, #3
	adds r0, r4, r2
	strb r1, [r0]
	adds r2, #4
	adds r0, r4, r2
	str r1, [r0]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0807EECC: .4byte vtable_unk_080E7C5C
_0807EED0: .4byte 0x000006A4

	thumb_func_start func_0807EED4
func_0807EED4: @ 0x0807EED4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0807EEF8 @ =vtable_unk_080E7C5C
	str r0, [r4, #4]
	ldr r1, _0807EEFC @ =0x000006AC
	adds r0, r4, r1
	ldr r0, [r0]
	bl __builtin_delete
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080C8360
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807EEF8: .4byte vtable_unk_080E7C5C
_0807EEFC: .4byte 0x000006AC

	thumb_func_start func_0807EF00
func_0807EF00: @ 0x0807EF00
	ldr r2, _0807EF10 @ =0x000006AC
	adds r1, r1, r2
	ldr r3, [r1]
	movs r2, #0
	str r2, [r1]
	str r3, [r0]
	bx lr
	.align 2, 0
_0807EF10: .4byte 0x000006AC

	thumb_func_start func_0807EF14
func_0807EF14: @ 0x0807EF14
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r3, r1, #0
	ldr r5, _0807EF68 @ =0x080FE2D8
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r2, r4, r0
	ldr r0, [r4, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r2, r0
	ldr r1, [r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r1, r5, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _0807EF6C
	lsls r0, r3, #2
	adds r0, #4
	adds r0, r2, r0
	ldr r1, [r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r1, [r0]
	mov r0, sp
	bl __4FoodUi
	mov r0, sp
	bl GetDesc__C4Food
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CABEC
	b _0807EF88
	.align 2, 0
_0807EF68: .4byte 0x080FE2D8
_0807EF6C:
	lsls r0, r3, #2
	adds r0, #4
	adds r0, r2, r0
	ldr r1, [r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r1, r5, #0
	adds r1, #8
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl func_080CABEC
_0807EF88:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start func_0807EF90
func_0807EF90: @ 0x0807EF90
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xf4
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080C85A0
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807EFC8
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807EFC2
	movs r0, #0
	str r0, [r2]
_0807EFC2:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807EFC8:
	ldr r0, [r7, #8]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	cmp r0, #0x11
	bhi _0807F06E
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807EFF4
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807EFEE
	movs r0, #1
	str r0, [r2]
_0807EFEE:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807EFF4:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807F014
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807F00E
	movs r0, #2
	str r0, [r2]
_0807F00E:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807F014:
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807F034
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807F02E
	movs r0, #3
	str r0, [r2]
_0807F02E:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807F034:
	movs r5, #0xa9
	lsls r5, r5, #2
	adds r1, r7, r5
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807F054
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807F04E
	movs r0, #4
	str r0, [r2]
_0807F04E:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807F054:
	movs r6, #0xa9
	lsls r6, r6, #2
	adds r1, r7, r6
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807F0CE
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807F0C8
	movs r0, #5
	b _0807F0C6
_0807F06E:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807F08E
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807F088
	movs r0, #6
	str r0, [r2]
_0807F088:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807F08E:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807F0AE
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807F0A8
	movs r0, #7
	str r0, [r2]
_0807F0A8:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807F0AE:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807F0CE
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807F0C8
	movs r0, #8
_0807F0C6:
	str r0, [r2]
_0807F0C8:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807F0CE:
	movs r0, #0x10
	str r0, [sp, #0xc]
	movs r4, #4
	str r4, [sp, #0xe0]
	add r6, sp, #0x34
	ldr r1, _0807F194 @ =0x086678A0
	adds r0, r6, #0
	bl func_0805E6CC
	add r0, sp, #0x64
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x68
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x7c
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	add r0, sp, #0x98
	strb r5, [r0]
	add r3, sp, #0x9c
	str r4, [r3]
	strh r4, [r3, #4]
	add r2, sp, #0xa4
	str r4, [r2]
	strh r4, [r2, #4]
	add r1, sp, #0xac
	str r4, [r1]
	strh r4, [r1, #4]
	add r0, sp, #0xb4
	str r4, [r0]
	strh r4, [r0, #4]
	movs r5, #0
	mov sb, r5
	movs r6, #0xa9
	lsls r6, r6, #2
	adds r0, r7, r6
	ldr r0, [r0]
	add r6, sp, #0xbc
	cmp sb, r0
	blo _0807F13E
	b _0807F24C
_0807F13E:
	add r0, sp, #0x18
	mov r8, r0
	movs r1, #0xa9
	lsls r1, r1, #2
	adds r1, r7, r1
	str r1, [sp, #0xe4]
	mov sl, r8
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r5, r7, r2
	subs r3, #0x34
	str r3, [sp, #0xe8]
_0807F156:
	add r1, sp, #8
	ldr r4, [sp, #0xe0]
	lsls r0, r4, #3
	strh r0, [r1]
	ldr r1, [r5]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r2, _0807F198 @ =0x080FE2D8
	mov r1, r8
	adds r0, r0, r2
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, r8
	ldr r0, [r1, #0xc]
	cmp r0, #0
	bne _0807F19C
	ldr r1, [sp, #0x18]
	adds r0, r6, #0
	bl __4FoodUi
	adds r0, r6, #0
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	b _0807F19E
	.align 2, 0
_0807F194: .4byte 0x086678A0
_0807F198: .4byte 0x080FE2D8
_0807F19C:
	ldr r1, [sp, #0x18]
_0807F19E:
	ldr r0, [sp, #0xe8]
	bl func_0805E860
	ldr r1, [sp, #0x68]
	ldr r3, [r1]
	ldr r4, [sp, #0xe8]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x6c]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xc0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0xc0
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x9c
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	ldr r0, [sp, #0xa4]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0xac]
	str r0, [sp, #0x14]
	adds r1, r7, #0
	adds r1, #0x20
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _0807F202
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0807F1FC
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807F1FC:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_0807F202:
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	ldr r3, [sp, #0xe0]
	lsls r4, r3, #6
	adds r1, r1, r4
	adds r1, #0x32
	mov r2, sl
	ldr r0, [r2, #4]
	movs r3, #0x20
	str r3, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	movs r1, #0
	str r1, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [sp, #0xe0]
	adds r0, #2
	str r0, [sp, #0xe0]
	adds r5, #4
	movs r1, #1
	add sb, r1
	ldr r2, [sp, #0xe4]
	ldr r0, [r2]
	cmp sb, r0
	blo _0807F156
_0807F24C:
	ldr r0, [r7, #0x1c]
	movs r3, #0xc
	ldrsh r1, [r7, r3]
	bl func_08075C88
	ldr r0, [r7, #0x1c]
	ldr r1, [sp, #0xe0]
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r1, [r7, #0x10]
	adds r0, r7, #0
	bl func_0807EF14
	adds r0, r7, #0
	bl func_08008918
	movs r1, #0x3f
	strh r1, [r6]
	adds r0, #0x50
	strh r1, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0807F30C @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [r6]
	ldr r1, _0807F310 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [r6]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r4, #0
	str r4, [sp, #0xec]
	mov sb, r6
	movs r5, #0xa9
	lsls r5, r5, #2
	adds r5, r7, r5
	str r5, [sp, #0xf0]
	ldr r6, _0807F314 @ =0x000006AC
	adds r6, r6, r7
	mov r8, r6
_0807F2D0:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	mov r0, sb
	ldr r3, [r0]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0807F2EC
	b _0807F54E
_0807F2EC:
	ldr r1, [sp, #0xec]
	cmp r1, #0
	beq _0807F2F4
	b _0807F55C
_0807F2F4:
	ldr r2, _0807F318 @ =0x000006A4
	adds r4, r7, r2
	ldr r0, [r4]
	cmp r0, #1
	bne _0807F300
	b _0807F46C
_0807F300:
	cmp r0, #1
	bgt _0807F31C
	cmp r0, #0
	beq _0807F32A
	b _0807F54E
	.align 2, 0
_0807F30C: .4byte vtable_unk_080E5B80
_0807F310: .4byte 0x00000889
_0807F314: .4byte 0x000006AC
_0807F318: .4byte 0x000006A4
_0807F31C:
	cmp r0, #2
	bne _0807F322
	b _0807F49E
_0807F322:
	cmp r0, #3
	bne _0807F328
	b _0807F520
_0807F328:
	b _0807F54E
_0807F32A:
	ldr r0, [r7, #0x14]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	beq _0807F338
	adds r0, r7, #0
	bl func_0807EF14
_0807F338:
	ldr r3, _0807F3BC @ =0x000006A1
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807F430
	add r3, sp, #0x18
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	ldr r5, [sp, #0xf0]
	adds r0, r5, r0
	ldr r1, [r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r2, _0807F3C0 @ =0x080FE2D8
	adds r1, r3, #0
	adds r0, r0, r2
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, [r7, #8]
	ldr r6, _0807F3C4 @ =0x00001AA8
	adds r0, r0, r6
	ldr r1, [r0]
	movs r2, #0
	ldr r0, [r3, #4]
	mov sl, r3
	cmp r1, r0
	blo _0807F37C
	movs r2, #1
_0807F37C:
	cmp r2, #0
	beq _0807F410
	movs r0, #2
	str r0, [r4]
	movs r0, #0x10
	bl __builtin_new
	adds r5, r0, #0
	ldr r0, _0807F3C8 @ =0x000006AC
	adds r4, r7, r0
	ldr r0, [r4]
	cmp r5, r0
	beq _0807F39A
	bl __builtin_delete
_0807F39A:
	str r5, [r4]
	mov r1, sl
	ldr r0, [r1, #0xc]
	cmp r0, #0
	bne _0807F3CC
	add r4, sp, #0xc0
	ldr r1, [sp, #0x18]
	adds r0, r4, #0
	bl __4FoodUi
	adds r0, r4, #0
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	b _0807F3CE
	.align 2, 0
_0807F3BC: .4byte 0x000006A1
_0807F3C0: .4byte 0x080FE2D8
_0807F3C4: .4byte 0x00001AA8
_0807F3C8: .4byte 0x000006AC
_0807F3CC:
	ldr r0, [sp, #0x18]
_0807F3CE:
	str r0, [r5]
	mov r2, r8
	ldr r1, [r2]
	mov r3, sl
	ldr r0, [r3, #0x18]
	str r0, [r1, #4]
	ldr r0, [r7, #8]
	ldr r4, _0807F40C @ =0x00001C2C
	adds r0, r0, r4
	ldrh r1, [r1]
	bl func_0800F510
	ldr r0, [r7, #8]
	subs r4, #0x54
	adds r0, r0, r4
	mov r5, sl
	ldr r1, [r5, #0x10]
	bl func_0800E9E4
	ldr r0, [r7, #8]
	adds r0, r0, r4
	ldr r1, [r5, #0x14]
	bl func_0800EA68
	mov r6, r8
	ldr r1, [r6]
	ldr r0, [r5, #0x10]
	str r0, [r1, #8]
	ldr r0, [r5, #0x14]
	str r0, [r1, #0xc]
	b _0807F456
	.align 2, 0
_0807F40C: .4byte 0x00001C2C
_0807F410:
	adds r0, r7, #0
	ldr r1, _0807F42C @ =0x080FE3D4
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0x55
	bl func_08050E50
	movs r2, #1
	str r2, [r4]
	b _0807F456
	.align 2, 0
_0807F42C: .4byte 0x080FE3D4
_0807F430:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0807F456
	adds r0, r7, #0
	ldr r1, _0807F468 @ =0x080FE404
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0x53
	bl func_08050E50
	movs r0, #3
	str r0, [r4]
_0807F456:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	ldr r4, [sp, #0xf0]
	ldr r1, [r4]
	adds r0, r7, #0
	bl func_080C9020
	b _0807F54E
	.align 2, 0
_0807F468: .4byte 0x080FE404
_0807F46C:
	movs r5, #0xd4
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r1, [r0]
	cmp r1, #3
	bne _0807F54E
	movs r6, #0xd5
	lsls r6, r6, #3
	adds r0, r7, r6
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807F488
	str r1, [r4]
	b _0807F54E
_0807F488:
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	bl func_08050E5C
	ldr r2, [sp, #0xec]
	str r2, [r4]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	b _0807F54E
_0807F49E:
	add r3, sp, #0x18
	mov sl, r3
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	ldr r5, [sp, #0xf0]
	adds r0, r5, r0
	ldr r3, [r0]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #2
	ldr r2, _0807F510 @ =0x080FE2D8
	mov r1, sl
	adds r0, r0, r2
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldr r0, [r0]
	str r0, [r1]
	cmp r3, #0
	beq _0807F4D6
	ldr r0, [r7, #8]
	ldr r6, _0807F514 @ =0x00001CD4
	adds r0, r0, r6
	movs r1, #1
	bl func_080A0A1C
_0807F4D6:
	ldr r0, [r7, #8]
	ldr r1, _0807F518 @ =0x00001AA8
	adds r0, r0, r1
	mov r2, sl
	ldr r1, [r2, #4]
	bl func_0809ACC0
	movs r3, #0xd5
	lsls r3, r3, #3
	adds r0, r7, r3
	movs r5, #1
	strb r5, [r0]
	adds r0, r7, #0
	bl func_080C8550
	adds r0, r7, #0
	ldr r1, _0807F51C @ =0x080FE448
	bl func_080CABA0
	movs r6, #0xd2
	lsls r6, r6, #2
	adds r0, r7, r6
	movs r1, #0x54
	bl func_08050E50
	movs r0, #1
	str r0, [r4]
	b _0807F54E
	.align 2, 0
_0807F510: .4byte 0x080FE2D8
_0807F514: .4byte 0x00001CD4
_0807F518: .4byte 0x00001AA8
_0807F51C: .4byte 0x080FE448
_0807F520:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #3
	bne _0807F54E
	movs r2, #1
	str r2, [sp, #0xec]
	adds r0, r3, #0
	adds r0, #0xc
	ldr r1, _0807F558 @ =0x00000889
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	mov r3, sb
	ldr r1, [r3]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_0807F54E:
	adds r0, r7, #0
	bl func_080C96C4
	b _0807F2D0
	.align 2, 0
_0807F558: .4byte 0x00000889
_0807F55C:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	ldr r0, _0807F57C @ =vtable_unk_080E5A28
	str r0, [sp, #0x34]
	add sp, #0xf4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807F57C: .4byte vtable_unk_080E5A28

	thumb_func_start func_0807F580
func_0807F580: @ 0x0807F580
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _0807F5AC @ =vtable_unk_080E7C68
	str r0, [r4]
	movs r0, #0xd6
	lsls r0, r0, #3
	bl __builtin_new
	adds r1, r5, #0
	bl func_0807EEA0
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807F5AC: .4byte vtable_unk_080E7C68

	thumb_func_start func_0807F5B0
func_0807F5B0: @ 0x0807F5B0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0807F5EC @ =vtable_unk_080E7C68
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0807F5CC
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0807F5CC:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0807F5DE
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0807F5DE:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807F5EC: .4byte vtable_unk_080E7C68

	thumb_func_start func_0807F5F0
func_0807F5F0: @ 0x0807F5F0
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_0807EF90
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
_0807F60C:
	.byte 0x10, 0xB5, 0x83, 0xB0
	.byte 0x04, 0x1C, 0x49, 0x68, 0x68, 0x46, 0xFF, 0xF7, 0x73, 0xFC, 0x00, 0x9A, 0x68, 0x46, 0x01, 0x90
	.byte 0x02, 0x92, 0x01, 0x1C, 0x00, 0x20, 0x08, 0x60, 0x22, 0x60, 0x00, 0x98, 0x80, 0xF7, 0xEC, 0xFF
	.byte 0x20, 0x1C, 0x03, 0xB0, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00

	thumb_func_start func_0807F63C
func_0807F63C: @ 0x0807F63C
	push {r4, lr}
	adds r4, r0, #0
	bl func_080C7F58
	ldr r0, _0807F668 @ =vtable_unk_080E7C78
	str r0, [r4, #4]
	ldr r1, _0807F66C @ =0x000006A4
	adds r0, r4, r1
	movs r1, #0
	strb r1, [r0]
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r4, r2
	str r1, [r0]
	adds r2, #4
	adds r0, r4, r2
	strb r1, [r0]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0807F668: .4byte vtable_unk_080E7C78
_0807F66C: .4byte 0x000006A4

	thumb_func_start func_0807F670
func_0807F670: @ 0x0807F670
	push {lr}
	ldr r2, _0807F680 @ =vtable_unk_080E7C78
	str r2, [r0, #4]
	bl func_080C8360
	pop {r0}
	bx r0
	.align 2, 0
_0807F680: .4byte vtable_unk_080E7C78

	thumb_func_start func_0807F684
func_0807F684: @ 0x0807F684
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #2
	adds r1, r1, r5
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r2, [r1]
	movs r0, #0
	cmp r2, #2
	bgt _0807F69E
	movs r0, #1
_0807F69E:
	cmp r0, #0
	bne _0807F6BC
	ldr r0, _0807F6B8 @ =0x080FE484
	lsls r1, r2, #3
	adds r1, r1, r0
	ldr r1, [r1]
	mov r0, sp
	bl __4ToolUi
	mov r0, sp
	bl GetDesc__C4Tool
	b _0807F6D4
	.align 2, 0
_0807F6B8: .4byte 0x080FE484
_0807F6BC:
	mov r4, sp
	adds r4, #1
	ldr r1, _0807F6E4 @ =0x080FE484
	lsls r0, r2, #3
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetDesc__C7Article
_0807F6D4:
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_080CABEC
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807F6E4: .4byte 0x080FE484

	thumb_func_start func_0807F6E8
func_0807F6E8: @ 0x0807F6E8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xd0
	adds r7, r0, #0
	movs r0, #0x10
	str r0, [sp, #0xc]
	movs r0, #4
	mov sl, r0
	add r6, sp, #0x18
	ldr r1, _0807F7E4 @ =0x086678A0
	adds r0, r6, #0
	bl func_0805E6CC
	add r0, sp, #0x48
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x4c
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x60
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	add r0, sp, #0x7c
	strb r5, [r0]
	add r3, sp, #0x80
	str r4, [sp, #0x80]
	strh r4, [r3, #4]
	add r2, sp, #0x88
	str r4, [r2]
	strh r4, [r2, #4]
	add r1, sp, #0x90
	str r4, [r1]
	strh r4, [r1, #4]
	add r0, sp, #0x98
	str r4, [r0]
	strh r4, [r0, #4]
	adds r6, r7, #0
	adds r6, #0x20
	movs r4, #0x24
	adds r4, r4, r7
	mov ip, r4
	ldr r0, [r7, #0x20]
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r6, r0
	adds r4, r0, #0
	mov r5, ip
	adds r1, r5, #0
	ldr r2, [r6]
	ldr r3, [r7, #0x1c]
	cmp r1, r4
	beq _0807F778
_0807F772:
	adds r1, #0x10
	cmp r1, r4
	bne _0807F772
_0807F778:
	mov r1, ip
	subs r0, r0, r1
	asrs r0, r0, #4
	subs r0, r2, r0
	str r0, [r6]
	adds r0, r3, #0
	bl func_08075DD4
	movs r2, #0
	mov r8, r2
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r8, r0
	blo _0807F79A
	b _0807F8AE
_0807F79A:
	adds r4, r3, #0
	adds r4, r7, r4
	str r4, [sp, #0xcc]
	add r5, sp, #0xc4
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r6, r7, r0
	add r1, sp, #0x4c
	mov sb, r1
_0807F7AC:
	add r1, sp, #8
	mov r2, sl
	lsls r0, r2, #3
	strh r0, [r1]
	ldr r2, [r6]
	lsls r0, r2, #3
	ldr r1, _0807F7E8 @ =0x080FE484
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [r5]
	str r1, [r5, #4]
	movs r0, #0
	cmp r2, #2
	bgt _0807F7CC
	movs r0, #1
_0807F7CC:
	cmp r0, #0
	bne _0807F7EC
	add r4, sp, #0xc0
	ldr r1, [r5]
	adds r0, r4, #0
	bl __4ToolUi
	adds r0, r4, #0
	bl GetIconId__C4Tool
	b _0807F7FE
	.align 2, 0
_0807F7E4: .4byte 0x086678A0
_0807F7E8: .4byte 0x080FE484
_0807F7EC:
	mov r4, sp
	adds r4, #0xc1
	ldr r1, [r5]
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetIconId__C7Article
_0807F7FE:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	mov r0, sb
	bl func_0805E860
	ldr r1, [sp, #0x4c]
	ldr r3, [r1]
	mov r4, sb
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x50]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xa0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0xa0
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x80
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	ldr r0, [sp, #0x88]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x90]
	str r0, [sp, #0x14]
	adds r1, r7, #0
	adds r1, #0x20
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _0807F866
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0807F860
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0807F860:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_0807F866:
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	mov r3, sl
	lsls r4, r3, #6
	adds r1, r1, r4
	adds r1, #0x32
	ldr r0, [r5, #4]
	movs r2, #0x20
	str r2, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	movs r1, #0
	str r1, [sp]
	movs r3, #0x20
	str r3, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	movs r4, #2
	add sl, r4
	adds r6, #4
	movs r0, #1
	add r8, r0
	ldr r1, [sp, #0xcc]
	ldr r0, [r1]
	cmp r8, r0
	bhs _0807F8AE
	b _0807F7AC
_0807F8AE:
	ldr r0, _0807F8C4 @ =vtable_unk_080E5A28
	str r0, [sp, #0x18]
	mov r0, sl
	add sp, #0xd0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807F8C4: .4byte vtable_unk_080E5A28

	thumb_func_start func_0807F8C8
func_0807F8C8: @ 0x0807F8C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x44
	adds r6, r0, #0
	bl func_08008724
	adds r0, r6, #0
	bl func_080C85A0
	movs r5, #1
	ldr r4, [r6, #8]
	movs r3, #0xc8
	str r3, [sp, #0x18]
	ldrb r0, [r4, #0x10]
	lsrs r2, r0, #3
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	adds r1, r1, r0
	str r1, [sp, #0x1c]
	add r2, sp, #0x1c
	add r0, sp, #0x18
	cmp r3, r1
	bls _0807F902
	adds r0, r2, #0
_0807F902:
	ldr r0, [r0]
	cmp r0, #1
	bne _0807F914
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bgt _0807F914
	movs r5, #0
_0807F914:
	ldr r0, [r6, #8]
	ldr r1, _0807FBFC @ =0x00001BD8
	adds r0, r0, r1
	bl func_0800E940
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807F926
	movs r5, #0
_0807F926:
	cmp r5, #0
	beq _0807F94A
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r6, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807F94A
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807F944
	movs r0, #0
	str r0, [r2]
_0807F944:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807F94A:
	movs r5, #1
	ldr r4, [r6, #8]
	movs r3, #0xc8
	str r3, [sp, #0x20]
	ldrb r0, [r4, #0x10]
	lsrs r2, r0, #3
	lsls r1, r2, #3
	subs r1, r1, r2
	lsls r0, r0, #0x1d
	lsrs r0, r0, #0x1d
	adds r1, r1, r0
	str r1, [sp, #0x24]
	add r2, sp, #0x24
	add r0, sp, #0x20
	cmp r3, r1
	bls _0807F96C
	adds r0, r2, #0
_0807F96C:
	ldr r0, [r0]
	cmp r0, #1
	bne _0807F97E
	ldrb r0, [r4, #0x11]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bgt _0807F97E
	movs r5, #0
_0807F97E:
	ldr r0, [r6, #8]
	ldr r4, _0807FC00 @ =0x00001C2C
	adds r0, r0, r4
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807F9B2
	ldr r0, [r6, #8]
	adds r0, r0, r4
	bl func_0800F204
	cmp r0, #1
	bne _0807F9B2
	ldr r0, [r6, #8]
	adds r0, r0, r4
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x28
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x5e
	bne _0807F9B2
	movs r5, #0
_0807F9B2:
	ldr r0, [r6, #8]
	ldr r3, _0807FC04 @ =0x00001C38
	adds r0, r0, r3
	movs r1, #0x5e
	bl func_0800F714
	movs r4, #1
	rsbs r4, r4, #0
	cmp r0, r4
	beq _0807F9C8
	movs r5, #0
_0807F9C8:
	ldr r0, [r6, #8]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _0807F9F0
	ldr r0, [r6, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetShelf__9FarmHouse
	movs r1, #0x5e
	bl GetFirstSlotWith__C5ShelfUi
	cmp r0, r4
	beq _0807F9F0
	movs r5, #0
_0807F9F0:
	cmp r5, #0
	beq _0807FA14
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r6, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807FA14
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807FA0E
	movs r0, #1
	str r0, [r2]
_0807FA0E:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807FA14:
	ldr r0, [r6, #8]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl GetShelf__9FarmHouse
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r2, r1, #0x1f
	ldr r0, [r6, #8]
	ldr r5, _0807FC08 @ =0x000021C7
	adds r0, r0, r5
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0807FA38
	movs r2, #0
_0807FA38:
	cmp r2, #0
	beq _0807FA5C
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r6, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807FA5C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807FA56
	movs r0, #2
	str r0, [r2]
_0807FA56:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807FA5C:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r6, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807FA7C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807FA76
	movs r0, #3
	str r0, [r2]
_0807FA76:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807FA7C:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r6, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807FA9C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807FA96
	movs r0, #4
	str r0, [r2]
_0807FA96:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807FA9C:
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r6, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807FABC
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807FAB6
	movs r0, #5
	str r0, [r2]
_0807FAB6:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807FABC:
	movs r5, #0xa9
	lsls r5, r5, #2
	adds r1, r6, r5
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807FADC
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807FAD6
	movs r0, #6
	str r0, [r2]
_0807FAD6:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807FADC:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r6, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807FAFC
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807FAF6
	movs r0, #7
	str r0, [r2]
_0807FAF6:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807FAFC:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r6, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807FB1C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807FB16
	movs r0, #8
	str r0, [r2]
_0807FB16:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807FB1C:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r6, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0807FB3C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0807FB36
	movs r0, #9
	str r0, [r2]
_0807FB36:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0807FB3C:
	adds r0, r6, #0
	bl func_0807F6E8
	adds r4, r0, #0
	ldr r0, [r6, #0x1c]
	movs r5, #0xc
	ldrsh r1, [r6, r5]
	bl func_08075C88
	ldr r0, [r6, #0x1c]
	adds r1, r4, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r1, [r6, #0x10]
	adds r0, r6, #0
	bl func_0807F684
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0807FC0C @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #4]
	ldr r1, _0807FC10 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r0, #0
	str r0, [sp, #0x3c]
_0807FBBA:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	ldr r3, [sp, #4]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0807FBD6
	bl _08080430
_0807FBD6:
	ldr r1, [sp, #0x3c]
	cmp r1, #0
	beq _0807FBE0
	bl sub_08080440
_0807FBE0:
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r6, r2
	ldr r0, [r0]
	cmp r0, #4
	bls _0807FBF0
	bl _08080430
_0807FBF0:
	lsls r0, r0, #2
	ldr r1, _0807FC14 @ =_0807FC18
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807FBFC: .4byte 0x00001BD8
_0807FC00: .4byte 0x00001C2C
_0807FC04: .4byte 0x00001C38
_0807FC08: .4byte 0x000021C7
_0807FC0C: .4byte vtable_unk_080E5B80
_0807FC10: .4byte 0x00000889
_0807FC14: .4byte _0807FC18
_0807FC18: @ jump table
	.4byte _0807FC2C @ case 0
	.4byte _080801D0 @ case 1
	.4byte _08080204 @ case 2
	.4byte _0808022C @ case 3
	.4byte _080803EC @ case 4
_0807FC2C:
	ldr r0, [r6, #0x14]
	ldr r1, [r6, #0x10]
	cmp r0, r1
	beq _0807FC3A
	adds r0, r6, #0
	bl func_0807F684
_0807FC3A:
	ldr r3, _0807FCB4 @ =0x000006A1
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807FC46
	b _08080160
_0807FC46:
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r4, #0xaa
	lsls r4, r4, #2
	adds r0, r0, r4
	ldr r2, [r0]
	lsls r0, r2, #3
	ldr r1, _0807FCB8 @ =0x080FE484
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [sp, #0x2c]
	str r1, [sp, #0x30]
	add r1, sp, #0x2c
	ldr r5, [r1, #4]
	str r5, [sp, #0x40]
	movs r7, #0
	movs r0, #0
	mov r8, r0
	movs r5, #0
	mov sb, r5
	ldr r0, [r6, #8]
	ldr r3, _0807FCBC @ =0x00001C38
	adds r0, r0, r3
	movs r3, #0
	mov sl, r1
	cmp r2, #2
	bgt _0807FC82
	movs r3, #1
_0807FC82:
	cmp r3, #0
	beq _0807FC88
	b _0807FD94
_0807FC88:
	ldr r1, [sp, #0x2c]
	bl func_0800F990
	mov r8, r0
	ldr r0, [r6, #8]
	movs r4, #0xe0
	lsls r4, r4, #2
	adds r0, r0, r4
	ldr r1, [sp, #0x2c]
	bl GetAvailableSpaceFor__C9ToolChestUi
	adds r4, r0, #0
	ldr r0, [r6, #8]
	ldr r5, _0807FCC0 @ =0x00001C34
	adds r0, r0, r5
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807FCC4
	movs r7, #0x63
	b _0807FCF2
	.align 2, 0
_0807FCB4: .4byte 0x000006A1
_0807FCB8: .4byte 0x080FE484
_0807FCBC: .4byte 0x00001C38
_0807FCC0: .4byte 0x00001C34
_0807FCC4:
	ldr r0, [r6, #8]
	ldr r1, _0807FD88 @ =0x00001C34
	adds r0, r0, r1
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x34
	strb r1, [r0]
	bl GetId__C4Tool
	movs r2, #0
	ldr r1, [sp, #0x2c]
	cmp r0, r1
	bne _0807FCE2
	movs r2, #1
_0807FCE2:
	cmp r2, #0
	beq _0807FCF2
	ldr r0, [r6, #8]
	adds r0, r0, r5
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r7, r1, r0
_0807FCF2:
	mov r2, r8
	adds r0, r2, r4
	adds r4, r0, r7
	cmp r4, #0
	bne _0807FD1A
	ldr r1, _0807FD8C @ =0x080FE4D4
	adds r0, r6, #0
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r6, r3
	movs r1, #0x74
	bl func_08050E50
	movs r5, #0xe1
	lsls r5, r5, #3
	adds r1, r6, r5
	movs r0, #2
	str r0, [r1]
_0807FD1A:
	ldr r0, [r6, #8]
	ldr r1, _0807FD90 @ =0x00001C38
	adds r0, r0, r1
	ldr r1, [sp, #0x2c]
	bl func_0800F9FC
	mov r8, r0
	ldr r0, [r6, #8]
	movs r2, #0xe0
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r1, [sp, #0x2c]
	bl GetAmountOf__C9ToolChestUi
	adds r5, r0, #0
	ldr r0, [r6, #8]
	ldr r7, _0807FD88 @ =0x00001C34
	adds r0, r0, r7
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807FD76
	ldr r0, [r6, #8]
	adds r3, r7, #0
	adds r0, r0, r3
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x35
	strb r1, [r0]
	bl GetId__C4Tool
	movs r2, #0
	ldr r1, [sp, #0x2c]
	cmp r0, r1
	bne _0807FD68
	movs r2, #1
_0807FD68:
	cmp r2, #0
	beq _0807FD76
	ldr r0, [r6, #8]
	adds r0, r0, r7
	bl GetAmount__C9ToolStack
	mov sb, r0
_0807FD76:
	mov r0, r8
	add r0, sb
	adds r0, r0, r5
	add r1, sp, #8
	movs r2, #7
	bl func_0804EC84
	b _0807FDFA
	.align 2, 0
_0807FD88: .4byte 0x00001C34
_0807FD8C: .4byte 0x080FE4D4
_0807FD90: .4byte 0x00001C38
_0807FD94:
	bl func_0800F77C
	adds r4, r0, #0
	ldr r0, [r6, #8]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _0807FDBE
	ldr r0, [r6, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetShelf__9FarmHouse
	ldr r1, [sp, #0x2c]
	bl GetAvailableSpaceFor__C5ShelfUi
	adds r5, r0, #0
_0807FDBE:
	ldr r0, [r6, #8]
	ldr r3, _0807FF88 @ =0x00001C2C
	adds r0, r0, r3
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807FDD2
	movs r0, #1
	mov r8, r0
_0807FDD2:
	adds r0, r4, r5
	mov r1, r8
	adds r4, r0, r1
	cmp r4, #0
	bne _0807FDFA
	ldr r1, _0807FF8C @ =0x080FE50C
	adds r0, r6, #0
	bl func_080CABA0
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r6, r2
	movs r1, #0x74
	bl func_08050E50
	movs r3, #0xe1
	lsls r3, r3, #3
	adds r1, r6, r3
	movs r0, #2
	str r0, [r1]
_0807FDFA:
	ldr r0, [r6, #8]
	ldr r5, _0807FF90 @ =0x00001AA8
	adds r3, r0, r5
	ldr r0, [r3]
	movs r2, #0
	mov r5, sl
	ldr r1, [r5, #4]
	cmp r0, r1
	blo _0807FE0E
	movs r2, #1
_0807FE0E:
	cmp r2, #0
	bne _0807FE14
	b _0808013C
_0807FE14:
	cmp r4, #0
	bne _0807FE1A
	b _080801B6
_0807FE1A:
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r0, [r0]
	movs r5, #0
	mov sl, r5
	cmp r0, #2
	bgt _0807FE34
	movs r0, #1
	mov sl, r0
_0807FE34:
	mov r2, sl
	cmp r2, #0
	beq _0807FE3C
	b _0807FFA8
_0807FE3C:
	ldr r3, _0807FF94 @ =0x00000684
	adds r0, r6, r3
	ldr r1, [sp, #0x40]
	adds r2, r4, #0
	movs r3, #5
	bl func_080CA8B4
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r1, r6, r4
	movs r0, #3
	str r0, [r1]
	mov r5, sp
	adds r5, #0x36
	ldr r1, [sp, #0x2c]
	adds r0, r5, #0
	bl __4ToolUi
	ldr r0, _0807FF98 @ =0x000006A4
	adds r4, r6, r0
	mov r1, sl
	strb r1, [r4]
	adds r0, r5, #0
	bl GetName__C4Tool
	mov sb, r0
	adds r7, r4, #0
	mov r5, sb
	adds r0, r7, #0
	bl strlen
	adds r2, r7, r0
	mov r8, r2
	movs r1, #0x63
	subs r4, r1, r0
	cmp r4, #0
	beq _0807FEA6
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r4
	bls _0807FE94
	adds r5, r4, #0
_0807FE94:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r3, r8
	adds r0, r3, r5
	mov r4, sl
	strb r4, [r0]
_0807FEA6:
	ldr r5, _0807FF9C @ =0x080FE540
	mov sb, r5
	adds r0, r7, #0
	bl strlen
	adds r1, r7, r0
	mov r8, r1
	movs r1, #0x63
	subs r4, r1, r0
	cmp r4, #0
	beq _0807FEDC
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r4
	bls _0807FECA
	adds r5, r4, #0
_0807FECA:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0807FEDC:
	ldr r0, _0807FFA0 @ =0x08117828
	ldr r0, [r0]
	mov sb, r0
	adds r0, r7, #0
	bl strlen
	adds r3, r7, r0
	mov r8, r3
	movs r1, #0x63
	subs r4, r1, r0
	cmp r4, #0
	beq _0807FF14
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r4
	bls _0807FF02
	adds r5, r4, #0
_0807FF02:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r4, r8
	adds r1, r4, r5
	movs r0, #0
	strb r0, [r1]
_0807FF14:
	adds r0, r7, #0
	bl strlen
	adds r5, r7, r0
	mov r8, r5
	movs r1, #0x63
	subs r4, r1, r0
	cmp r4, #0
	beq _0807FF46
	add r0, sp, #8
	bl strlen
	adds r5, r0, #0
	cmp r5, r4
	bls _0807FF34
	adds r5, r4, #0
_0807FF34:
	mov r0, r8
	add r1, sp, #8
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_0807FF46:
	ldr r0, _0807FFA4 @ =0x08117814
	ldr r0, [r0]
	mov r8, r0
	adds r0, r7, #0
	bl strlen
	adds r7, r7, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _0807FF7A
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0807FF6A
	adds r4, r5, #0
_0807FF6A:
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_0807FF7A:
	ldr r2, _0807FF98 @ =0x000006A4
	adds r1, r6, r2
	adds r0, r6, #0
	bl func_080CABEC
	b _080801B6
	.align 2, 0
_0807FF88: .4byte 0x00001C2C
_0807FF8C: .4byte 0x080FE50C
_0807FF90: .4byte 0x00001AA8
_0807FF94: .4byte 0x00000684
_0807FF98: .4byte 0x000006A4
_0807FF9C: .4byte 0x080FE540
_0807FFA0: .4byte 0x08117828
_0807FFA4: .4byte 0x08117814
_0807FFA8:
	movs r7, #1
	movs r5, #1
	adds r0, r3, #0
	bl func_0809ACC0
	adds r0, r6, #0
	bl func_080C8550
	ldr r0, [sp, #0x2c]
	cmp r0, #0x35
	bne _0807FFC8
	ldr r0, [r6, #8]
	ldr r3, _08080030 @ =0x00001BD8
	adds r0, r0, r3
	bl func_0800ED20
_0807FFC8:
	ldr r0, [r6, #8]
	ldr r4, _08080034 @ =0x00001C2C
	adds r0, r0, r4
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807FFF6
	movs r7, #0
	ldr r4, [r6, #8]
	ldr r5, _08080034 @ =0x00001C2C
	adds r4, r4, r5
	mov r5, sp
	adds r5, #0x37
	ldr r1, [sp, #0x2c]
	adds r0, r5, #0
	bl __7ArticleUi
	ldrb r1, [r5]
	adds r0, r4, #0
	bl func_0800F3E8
	movs r5, #0
_0807FFF6:
	cmp r7, #0
	beq _08080050
	ldr r0, [r6, #8]
	ldr r1, _08080038 @ =0x00001C38
	adds r0, r0, r1
	ldr r1, [sp, #0x2c]
	adds r2, r7, #0
	bl func_0800FDC4
	adds r4, r0, #0
	cmp r7, r4
	bls _08080010
	movs r5, #0
_08080010:
	cmp r4, #0
	beq _08080050
	ldr r0, [r6, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetShelf__9FarmHouse
	ldr r1, [sp, #0x2c]
	adds r2, r4, #0
	bl AddAmountOf__5ShelfUiUi
	cmp r5, #0
	beq _08080040
	ldr r1, _0808003C @ =0x080FE548
	b _08080042
	.align 2, 0
_08080030: .4byte 0x00001BD8
_08080034: .4byte 0x00001C2C
_08080038: .4byte 0x00001C38
_0808003C: .4byte 0x080FE548
_08080040:
	ldr r1, _0808004C @ =0x080FE5C8
_08080042:
	adds r0, r6, #0
	bl func_080CABA0
	b _08080058
	.align 2, 0
_0808004C: .4byte 0x080FE5C8
_08080050:
	ldr r1, _08080124 @ =0x080FE63C
	adds r0, r6, #0
	bl func_080CABA0
_08080058:
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r6, r3
	movs r1, #0x73
	bl func_08050E50
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r1, r6, r4
	movs r0, #1
	str r0, [r1]
	movs r5, #0xa9
	lsls r5, r5, #2
	adds r4, r6, r5
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r4, r0
	ldr r0, [r0]
	cmp r0, #2
	bne _080800AC
	ldr r2, [r6, #8]
	ldr r0, _08080128 @ =0x0000218C
	adds r2, r2, r0
	ldr r3, [r2]
	lsls r1, r3, #0xf
	lsrs r1, r1, #0x1c
	adds r1, #1
	movs r0, #0xf
	ands r1, r0
	lsls r1, r1, #0xd
	ldr r0, _0808012C @ =0xFFFE1FFF
	ands r0, r3
	orrs r0, r1
	str r0, [r2]
	ldr r2, [r6, #8]
	ldr r1, _08080130 @ =0x000021C7
	adds r2, r2, r1
	ldrb r0, [r2]
	movs r1, #8
	orrs r0, r1
	strb r0, [r2]
_080800AC:
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r3, r4, r0
	ldr r0, [r3]
	cmp r0, #2
	bhi _08080118
	ldr r0, [r4]
	cmp r0, #0
	beq _080800DE
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r4, r0
	adds r1, r3, #4
	cmp r1, r0
	beq _080800D8
	cmp r0, r1
	beq _080800D8
	subs r2, r0, r1
	adds r0, r3, #0
	bl memmove
_080800D8:
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
_080800DE:
	adds r0, r6, #0
	bl func_0807F6E8
	adds r4, r0, #0
	ldr r0, [r6, #0x1c]
	adds r1, r4, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r0, [r6, #0x1c]
	movs r2, #0xc
	ldrsh r3, [r0, r2]
	adds r1, r3, #0
	cmp r3, #0
	bge _08080102
	adds r1, r3, #7
_08080102:
	asrs r1, r1, #3
	movs r4, #0x80
	lsls r4, r4, #1
	adds r2, r3, r4
	cmp r2, #0
	bge _08080112
	ldr r5, _08080134 @ =0x00000107
	adds r2, r3, r5
_08080112:
	asrs r2, r2, #3
	bl func_08075BC8
_08080118:
	ldr r0, _08080138 @ =0x0000070C
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	b _080801B6
	.align 2, 0
_08080124: .4byte 0x080FE63C
_08080128: .4byte 0x0000218C
_0808012C: .4byte 0xFFFE1FFF
_08080130: .4byte 0x000021C7
_08080134: .4byte 0x00000107
_08080138: .4byte 0x0000070C
_0808013C:
	ldr r1, _0808015C @ =0x080FE66C
	adds r0, r6, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #0x74
	bl func_08050E50
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r6, r2
	movs r0, #2
	b _080801B4
	.align 2, 0
_0808015C: .4byte 0x080FE66C
_08080160:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080801B6
	ldr r3, _08080190 @ =0x0000070C
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _08080198
	ldr r1, _08080194 @ =0x080FE6B0
	adds r0, r6, #0
	bl func_080CABA0
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r6, r4
	movs r1, #0x73
	bl func_08050E50
	b _080801AC
	.align 2, 0
_08080190: .4byte 0x0000070C
_08080194: .4byte 0x080FE6B0
_08080198:
	ldr r1, _080801CC @ =0x080FE6E4
	adds r0, r6, #0
	bl func_080CABA0
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r6, r5
	movs r1, #0x74
	bl func_08050E50
_080801AC:
	movs r0, #0xe1
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #4
_080801B4:
	str r0, [r1]
_080801B6:
	ldr r0, [r6, #0x10]
	str r0, [r6, #0x14]
	movs r1, #0xa9
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r1, [r0]
	adds r0, r6, #0
	bl func_080C9020
	b _08080430
	.align 2, 0
_080801CC: .4byte 0x080FE6E4
_080801D0:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r6, r2
	ldr r0, [r0]
	cmp r0, #3
	beq _080801DE
	b _08080430
_080801DE:
	ldr r1, _08080200 @ =0x080FE708
	adds r0, r6, #0
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r6, r3
	movs r1, #0x72
	bl func_08050E50
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r1, r6, r4
	movs r0, #2
	str r0, [r1]
	b _08080430
	.align 2, 0
_08080200: .4byte 0x080FE708
_08080204:
	movs r5, #0xd4
	lsls r5, r5, #2
	adds r0, r6, r5
	ldr r0, [r0]
	cmp r0, #3
	beq _08080212
	b _08080430
_08080212:
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r6, r1
	bl func_08050E5C
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r6, r2
	movs r0, #0
	str r0, [r1]
	subs r0, #1
	str r0, [r6, #0x14]
	b _08080430
_0808022C:
	adds r0, r6, #0
	bl func_080088CC
	adds r4, r0, #0
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	bne _0808023E
	b _080803A8
_0808023E:
	ldr r3, _080802BC @ =0x00000684
	adds r0, r6, r3
	ldr r7, [r0, #0x14]
	movs r4, #1
	mov r8, r4
	bl func_080CAAF4
	ldr r1, [r6, #0x10]
	adds r0, r6, #0
	bl func_0807F684
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r5, #0xaa
	lsls r5, r5, #2
	adds r0, r0, r5
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _080802C0 @ =0x080FE484
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [sp, #0x2c]
	str r1, [sp, #0x30]
	ldr r0, [r6, #8]
	ldr r1, _080802C4 @ =0x00001AA8
	adds r0, r0, r1
	ldr r1, [sp, #0x30]
	muls r1, r7, r1
	bl func_0809ACC0
	adds r0, r6, #0
	bl func_080C8550
	ldr r0, [r6, #8]
	ldr r5, _080802C8 @ =0x00001C34
	adds r0, r0, r5
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080802CC
	ldr r5, [r6, #8]
	ldr r2, _080802C8 @ =0x00001C34
	adds r5, r5, r2
	add r4, sp, #0x38
	ldr r1, [sp, #0x2c]
	adds r0, r4, #0
	bl __4ToolUi
	ldrb r1, [r4]
	mov r0, sp
	adds r2, r7, #0
	bl __9ToolStackG4ToolUi
	adds r0, r5, #0
	mov r1, sp
	movs r2, #2
	bl memcpy
	b _08080378
	.align 2, 0
_080802BC: .4byte 0x00000684
_080802C0: .4byte 0x080FE484
_080802C4: .4byte 0x00001AA8
_080802C8: .4byte 0x00001C34
_080802CC:
	ldr r0, [r6, #8]
	ldr r3, _08080318 @ =0x00001C34
	adds r0, r0, r3
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x39
	strb r1, [r0]
	bl GetId__C4Tool
	movs r2, #0
	ldr r1, [sp, #0x2c]
	cmp r0, r1
	bne _080802EC
	movs r2, #1
_080802EC:
	cmp r2, #0
	beq _08080328
	ldr r0, [r6, #8]
	adds r0, r0, r5
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r4, r1, r0
	cmp r7, r4
	bls _0808031C
	ldr r0, [r6, #8]
	adds r0, r0, r5
	adds r1, r4, #0
	bl AddAmount__9ToolStackUi
	subs r7, r7, r4
	cmp r4, #0
	beq _08080328
	movs r4, #0
	mov r8, r4
	b _08080328
	.align 2, 0
_08080318: .4byte 0x00001C34
_0808031C:
	ldr r0, [r6, #8]
	adds r0, r0, r5
	adds r1, r7, #0
	bl AddAmount__9ToolStackUi
	movs r7, #0
_08080328:
	cmp r7, #0
	beq _08080378
	ldr r0, [r6, #8]
	ldr r5, _08080360 @ =0x00001C38
	adds r0, r0, r5
	ldr r1, [sp, #0x2c]
	adds r2, r7, #0
	bl func_0800FEC8
	adds r2, r0, #0
	cmp r7, r2
	bls _08080344
	movs r0, #0
	mov r8, r0
_08080344:
	cmp r2, #0
	beq _08080378
	ldr r0, [r6, #8]
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r1, [sp, #0x2c]
	bl AddAmountOf__9ToolChestUiUi
	mov r2, r8
	cmp r2, #0
	beq _08080368
	ldr r1, _08080364 @ =0x080FE548
	b _0808036A
	.align 2, 0
_08080360: .4byte 0x00001C38
_08080364: .4byte 0x080FE548
_08080368:
	ldr r1, _08080374 @ =0x080FE5C8
_0808036A:
	adds r0, r6, #0
	bl func_080CABA0
	b _08080380
	.align 2, 0
_08080374: .4byte 0x080FE5C8
_08080378:
	ldr r1, _080803A0 @ =0x080FE63C
	adds r0, r6, #0
	bl func_080CABA0
_08080380:
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r6, r3
	movs r1, #0x73
	bl func_08050E50
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r0, r6, r4
	movs r1, #1
	str r1, [r0]
	ldr r5, _080803A4 @ =0x0000070C
	adds r0, r6, r5
	strb r1, [r0]
	b _08080430
	.align 2, 0
_080803A0: .4byte 0x080FE63C
_080803A4: .4byte 0x0000070C
_080803A8:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080803D4
	ldr r1, _080803D0 @ =0x00000684
	adds r0, r6, r1
	bl func_080CAAF4
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	ldr r1, [r6, #0x10]
	adds r0, r6, #0
	bl func_0807F684
	b _08080430
	.align 2, 0
_080803D0: .4byte 0x00000684
_080803D4:
	ldr r3, _080803E8 @ =0x00000684
	adds r1, r6, r3
	ldrb r0, [r1, #8]
	cmp r0, #0
	beq _08080430
	adds r0, r1, #0
	bl func_080CA98C
	b _08080430
	.align 2, 0
_080803E8: .4byte 0x00000684
_080803EC:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r6, r4
	ldr r0, [r0]
	cmp r0, #3
	bne _08080430
	ldr r2, [sp, #4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r1, r0, #0x1f
	cmp r1, #0
	bne _08080430
	movs r5, #0xe1
	lsls r5, r5, #3
	adds r0, r6, r5
	str r1, [r0]
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r1, _0808043C @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_08080430:
	adds r0, r6, #0
	bl func_080C96C4
	bl _0807FBBA
	.align 2, 0
_0808043C: .4byte 0x00000889

	thumb_func_start sub_08080440
sub_08080440: @ 0x08080440
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	add sp, #0x44
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0808045C
func_0808045C: @ 0x0808045C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _08080488 @ =vtable_unk_080E7C84
	str r0, [r4]
	movs r0, #0xe2
	lsls r0, r0, #3
	bl __builtin_new
	adds r1, r5, #0
	bl func_0807F63C
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08080488: .4byte vtable_unk_080E7C84

	thumb_func_start func_0808048C
func_0808048C: @ 0x0808048C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080804C8 @ =vtable_unk_080E7C84
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080804A8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080804A8:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080804BA
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080804BA:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080804C8: .4byte vtable_unk_080E7C84

	thumb_func_start func_080804CC
func_080804CC: @ 0x080804CC
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_0807F8C8
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
_080804E8:
	.byte 0x00, 0xB5, 0x00, 0x20, 0x02, 0x29, 0x00, 0xDC
	.byte 0x01, 0x20, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00

	thumb_func_start func_080804F8
func_080804F8: @ 0x080804F8
	push {r4, lr}
	adds r4, r0, #0
	bl func_080C7F58
	ldr r0, _08080524 @ =vtable_unk_080E7C94
	str r0, [r4, #4]
	ldr r1, _08080528 @ =0x000006A4
	adds r0, r4, r1
	movs r1, #0
	str r1, [r0]
	movs r2, #0xd5
	lsls r2, r2, #3
	adds r0, r4, r2
	strb r1, [r0]
	adds r2, #4
	adds r0, r4, r2
	strb r1, [r0]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08080524: .4byte vtable_unk_080E7C94
_08080528: .4byte 0x000006A4

	thumb_func_start func_0808052C
func_0808052C: @ 0x0808052C
	push {lr}
	ldr r2, _0808053C @ =vtable_unk_080E7C94
	str r2, [r0, #4]
	bl func_080C8360
	pop {r0}
	bx r0
	.align 2, 0
_0808053C: .4byte vtable_unk_080E7C94

	thumb_func_start func_08080540
func_08080540: @ 0x08080540
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xec
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080C85A0
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08080578
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08080572
	movs r0, #0
	str r0, [r2]
_08080572:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08080578:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08080598
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08080592
	movs r0, #1
	str r0, [r2]
_08080592:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08080598:
	movs r0, #0x10
	str r0, [sp, #0xc]
	movs r3, #4
	mov sl, r3
	add r6, sp, #0x18
	ldr r1, _080807CC @ =0x086678A0
	adds r0, r6, #0
	bl func_0805E6CC
	add r0, sp, #0x48
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x4c
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x60
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	add r0, sp, #0x7c
	strb r5, [r0]
	add r3, sp, #0x80
	str r4, [sp, #0x80]
	strh r4, [r3, #4]
	add r2, sp, #0x88
	str r4, [r2]
	strh r4, [r2, #4]
	add r1, sp, #0x90
	str r4, [r1]
	strh r4, [r1, #4]
	add r0, sp, #0x98
	str r4, [r0]
	strh r4, [r0, #4]
	movs r6, #0
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r0, [r0]
	adds r1, #0x10
	str r1, [sp, #0xe8]
	cmp r6, r0
	bhs _080806F6
	adds r2, r4, #0
	adds r2, r7, r2
	str r2, [sp, #0xcc]
	adds r3, r7, #0
	adds r3, #0x20
	str r3, [sp, #0xd0]
	add r4, sp, #0xc4
	mov r8, r4
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r5, r7, r0
	add r1, sp, #0x4c
	mov sb, r1
_08080620:
	add r1, sp, #8
	mov r2, sl
	lsls r0, r2, #3
	strh r0, [r1]
	ldr r0, [r5]
	lsls r0, r0, #3
	ldr r1, _080807D0 @ =0x080FE740
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r2, sp, #0xc4
	str r0, [r2]
	str r1, [r2, #4]
	ldr r1, [r2]
	ldr r0, [sp, #0xe8]
	bl __4FoodUi
	ldr r0, [sp, #0xe8]
	bl GetIconId__C4Food
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r0, sb
	bl func_0805E860
	ldr r1, [sp, #0x4c]
	ldr r3, [r1]
	mov r4, sb
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x50]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xa4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0xa4
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x80
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	ldr r0, [sp, #0x88]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x90]
	str r0, [sp, #0x14]
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _080806B0
	lsls r0, r0, #4
	adds r0, #4
	ldr r3, [sp, #0xd0]
	adds r0, r3, r0
	cmp r0, #0
	beq _080806AA
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080806AA:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_080806B0:
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	mov r0, sl
	lsls r4, r0, #6
	adds r1, r1, r4
	adds r1, #0x32
	mov r2, r8
	ldr r0, [r2, #4]
	movs r3, #0x20
	str r3, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	movs r1, #0
	str r1, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	movs r0, #2
	add sl, r0
	adds r5, #4
	adds r6, #1
	ldr r1, [sp, #0xcc]
	ldr r0, [r1]
	cmp r6, r0
	blo _08080620
_080806F6:
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075C88
	ldr r0, [r7, #0x1c]
	mov r1, sl
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r1, _080807D0 @ =0x080FE740
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r3, #0xaa
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r0, [r0]
	lsls r0, r0, #3
	adds r0, r0, r1
	ldr r1, [r0]
	ldr r0, [sp, #0xe8]
	bl __4FoodUi
	ldr r0, [sp, #0xe8]
	bl GetDesc__C4Food
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080CABEC
	adds r0, r7, #0
	bl func_08008918
	movs r1, #0x3f
	ldr r4, [sp, #0xe8]
	strh r1, [r4]
	adds r0, #0x50
	strh r1, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _080807D4 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	ldr r0, [sp, #0xe8]
	str r4, [r0]
	ldr r1, _080807D8 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r3, [sp, #0xe8]
	ldr r1, [r3]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r4, #0
	str r4, [sp, #0xd4]
_08080792:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	ldr r0, [sp, #0xe8]
	ldr r3, [r0]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080807AE
	b _08080D64
_080807AE:
	ldr r1, [sp, #0xd4]
	cmp r1, #0
	beq _080807B6
	b _08080D70
_080807B6:
	ldr r2, _080807DC @ =0x000006A4
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #4
	bls _080807C2
	b _08080D64
_080807C2:
	lsls r0, r0, #2
	ldr r1, _080807E0 @ =_080807E4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080807CC: .4byte 0x086678A0
_080807D0: .4byte 0x080FE740
_080807D4: .4byte vtable_unk_080E5B80
_080807D8: .4byte 0x00000889
_080807DC: .4byte 0x000006A4
_080807E0: .4byte _080807E4
_080807E4: @ jump table
	.4byte _080807F8 @ case 0
	.4byte _08080B70 @ case 1
	.4byte _08080CF4 @ case 2
	.4byte _08080B9C @ case 3
	.4byte _08080D28 @ case 4
_080807F8:
	ldr r0, [r7, #0x14]
	ldr r2, [r7, #0x10]
	cmp r0, r2
	beq _0808082A
	add r4, sp, #0xa4
	ldr r1, _080808EC @ =0x080FE740
	lsls r0, r2, #2
	adds r0, r0, r7
	movs r3, #0xaa
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r0, [r0]
	lsls r0, r0, #3
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl __4FoodUi
	adds r0, r4, #0
	bl GetDesc__C4Food
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080CABEC
_0808082A:
	ldr r4, _080808F0 @ =0x000006A1
	adds r0, r7, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _08080836
	b _08080B10
_08080836:
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _080808EC @ =0x080FE740
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r4, sp, #0xc4
	str r0, [r4]
	str r1, [r4, #4]
	ldr r2, [r4, #4]
	str r2, [sp, #0xd8]
	movs r3, #0
	str r3, [sp, #0xe0]
	mov sb, r3
	ldr r0, [r7, #8]
	ldr r1, _080808F4 @ =0x00001C38
	adds r0, r0, r1
	bl func_0800F77C
	adds r5, r0, #0
	ldr r0, [r7, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	mov sl, r2
	add r0, sl
	bl GetFridge__9FarmHouse
	mov r8, r4
	cmp r0, #0
	beq _08080892
	ldr r0, [r7, #8]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl GetFridge__9FarmHouse
	ldr r1, [r4]
	bl GetAvailableSpaceFor__C6FridgeUi
	mov sb, r0
_08080892:
	ldr r0, [r7, #8]
	ldr r6, _080808F8 @ =0x00001C2C
	adds r0, r0, r6
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080808A6
	movs r4, #1
	str r4, [sp, #0xe0]
_080808A6:
	ldr r1, [sp, #0xe0]
	adds r0, r5, r1
	add r0, sb
	str r0, [sp, #0xdc]
	ldr r3, [r7, #8]
	ldr r2, _080808FC @ =0x00001AA8
	adds r0, r3, r2
	ldr r1, [r0]
	movs r2, #0
	mov r4, r8
	ldr r0, [r4, #4]
	cmp r1, r0
	blo _080808C2
	movs r2, #1
_080808C2:
	cmp r2, #0
	bne _080808C8
	b _08080AEC
_080808C8:
	ldr r0, [sp, #0xdc]
	cmp r0, #0
	bne _08080908
	ldr r1, _08080900 @ =0x080FE750
	adds r0, r7, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0x8c
	bl func_08050E50
	ldr r2, _08080904 @ =0x000006A4
	adds r1, r7, r2
	movs r0, #1
	b _08080B52
	.align 2, 0
_080808EC: .4byte 0x080FE740
_080808F0: .4byte 0x000006A1
_080808F4: .4byte 0x00001C38
_080808F8: .4byte 0x00001C2C
_080808FC: .4byte 0x00001AA8
_08080900: .4byte 0x080FE750
_08080904: .4byte 0x000006A4
_08080908:
	movs r4, #0
	str r4, [sp, #0xe4]
	mov sb, r4
	ldr r1, _08080AD0 @ =0x00001C38
	adds r0, r3, r1
	mov r2, r8
	ldr r1, [r2]
	bl func_0800F7AC
	adds r5, r0, #0
	ldr r0, [r7, #8]
	add r0, sl
	bl GetFridge__9FarmHouse
	cmp r0, #0
	beq _0808093A
	ldr r0, [r7, #8]
	add r0, sl
	bl GetFridge__9FarmHouse
	mov r3, r8
	ldr r1, [r3]
	bl GetAmountOf__C6FridgeUi
	mov sb, r0
_0808093A:
	ldr r0, [r7, #8]
	adds r0, r0, r6
	bl func_0800F190
	lsls r0, r0, #0x18
	add r4, sp, #0xa4
	cmp r0, #0
	bne _0808097A
	ldr r0, [r7, #8]
	adds r0, r0, r6
	bl func_0800F204
	cmp r0, #0
	bne _0808097A
	ldr r1, [r7, #8]
	adds r1, r1, r6
	adds r0, r4, #0
	bl func_0800F20C
	adds r0, r4, #0
	bl GetId__C4Food
	movs r2, #0
	mov r3, r8
	ldr r1, [r3]
	cmp r0, r1
	bne _08080972
	movs r2, #1
_08080972:
	cmp r2, #0
	beq _0808097A
	movs r0, #1
	str r0, [sp, #0xe4]
_0808097A:
	ldr r1, [sp, #0xe4]
	adds r0, r5, r1
	add r0, sb
	adds r1, r4, #0
	movs r2, #7
	bl func_0804EC84
	add r5, sp, #0xb4
	mov r2, r8
	ldr r1, [r2]
	adds r0, r5, #0
	bl __4FoodUi
	ldr r3, _08080AD4 @ =0x000006AC
	adds r4, r7, r3
	movs r0, #0
	mov sl, r0
	mov r1, sl
	strb r1, [r4]
	adds r0, r5, #0
	bl GetName__C4Food
	mov sb, r0
	mov r5, sb
	adds r0, r4, #0
	bl strlen
	adds r2, r4, r0
	mov r8, r2
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _080809DC
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _080809CA
	adds r5, r6, #0
_080809CA:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r3, r8
	adds r0, r3, r5
	mov r1, sl
	strb r1, [r0]
_080809DC:
	ldr r2, _08080AD8 @ =0x080FE7A0
	mov sb, r2
	adds r0, r4, #0
	bl strlen
	adds r3, r4, r0
	mov r8, r3
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _08080A12
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _08080A00
	adds r5, r6, #0
_08080A00:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_08080A12:
	ldr r0, _08080ADC @ =0x08117828
	ldr r0, [r0]
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _08080A4A
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _08080A38
	adds r5, r6, #0
_08080A38:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_08080A4A:
	adds r0, r4, #0
	bl strlen
	adds r3, r4, r0
	mov r8, r3
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _08080A7C
	add r0, sp, #0xa4
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _08080A6A
	adds r5, r6, #0
_08080A6A:
	mov r0, r8
	add r1, sp, #0xa4
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_08080A7C:
	ldr r0, _08080AE0 @ =0x08117814
	ldr r0, [r0]
	mov r8, r0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _08080AB0
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08080AA0
	adds r4, r5, #0
_08080AA0:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_08080AB0:
	ldr r2, _08080AD4 @ =0x000006AC
	adds r1, r7, r2
	adds r0, r7, #0
	bl func_080CABEC
	ldr r3, _08080AE4 @ =0x00000684
	adds r0, r7, r3
	ldr r1, [sp, #0xd8]
	ldr r2, [sp, #0xdc]
	movs r3, #5
	bl func_080CA8B4
	ldr r4, _08080AE8 @ =0x000006A4
	adds r1, r7, r4
	movs r0, #3
	b _08080B52
	.align 2, 0
_08080AD0: .4byte 0x00001C38
_08080AD4: .4byte 0x000006AC
_08080AD8: .4byte 0x080FE7A0
_08080ADC: .4byte 0x08117828
_08080AE0: .4byte 0x08117814
_08080AE4: .4byte 0x00000684
_08080AE8: .4byte 0x000006A4
_08080AEC:
	ldr r1, _08080B08 @ =0x080FE7A8
	adds r0, r7, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0x8a
	bl func_08050E50
	ldr r2, _08080B0C @ =0x000006A4
	adds r1, r7, r2
	movs r0, #1
	b _08080B52
	.align 2, 0
_08080B08: .4byte 0x080FE7A8
_08080B0C: .4byte 0x000006A4
_08080B10:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08080B54
	movs r3, #0xd5
	lsls r3, r3, #3
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _08080B38
	ldr r1, _08080B34 @ =0x080FE7E0
	adds r0, r7, #0
	bl func_080CABA0
	b _08080B40
	.align 2, 0
_08080B34: .4byte 0x080FE7E0
_08080B38:
	ldr r1, _08080B68 @ =0x080FE800
	adds r0, r7, #0
	bl func_080CABA0
_08080B40:
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0x8a
	bl func_08050E50
	ldr r0, _08080B6C @ =0x000006A4
	adds r1, r7, r0
	movs r0, #4
_08080B52:
	str r0, [r1]
_08080B54:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	movs r1, #0xa9
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_080C9020
	b _08080D64
	.align 2, 0
_08080B68: .4byte 0x080FE800
_08080B6C: .4byte 0x000006A4
_08080B70:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #3
	beq _08080B7E
	b _08080D64
_08080B7E:
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	bl func_08050E5C
	ldr r4, _08080B98 @ =0x000006A4
	adds r1, r7, r4
	movs r0, #0
	str r0, [r1]
	subs r0, #1
	str r0, [r7, #0x14]
	b _08080D64
	.align 2, 0
_08080B98: .4byte 0x000006A4
_08080B9C:
	adds r0, r7, #0
	bl func_080088CC
	adds r4, r0, #0
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	bne _08080BAE
	b _08080CB0
_08080BAE:
	ldr r1, _08080C68 @ =0x00000684
	adds r0, r7, r1
	ldr r6, [r0, #0x14]
	bl func_080CAAF4
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _08080C6C @ =0x080FE740
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r4, sp, #0xc4
	str r0, [r4]
	str r1, [r4, #4]
	ldr r0, [r7, #8]
	ldr r3, _08080C70 @ =0x00001AA8
	adds r0, r0, r3
	ldr r1, [r4, #4]
	muls r1, r6, r1
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	movs r5, #0
	ldr r0, [r7, #8]
	ldr r1, _08080C74 @ =0x00001C2C
	adds r0, r0, r1
	bl func_0800F190
	lsls r0, r0, #0x18
	mov r8, r4
	cmp r0, #0
	beq _08080C28
	subs r6, #1
	ldr r5, [r7, #8]
	ldr r2, _08080C74 @ =0x00001C2C
	adds r5, r5, r2
	add r4, sp, #0xa4
	mov r3, r8
	ldr r1, [r3]
	adds r0, r4, #0
	bl __4FoodUi
	ldrb r1, [r4]
	ldrb r0, [r4, #1]
	lsls r0, r0, #8
	orrs r0, r1
	ldrb r1, [r4, #2]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	bl func_0800F3B0
	movs r5, #1
_08080C28:
	cmp r6, #0
	beq _08080C80
	ldr r0, [r7, #8]
	ldr r4, _08080C78 @ =0x00001C38
	adds r0, r0, r4
	mov r2, r8
	ldr r1, [r2]
	adds r2, r6, #0
	bl func_0800FD50
	adds r4, r0, #0
	cmp r6, r4
	beq _08080C44
	movs r5, #1
_08080C44:
	cmp r4, #0
	beq _08080C80
	ldr r0, [r7, #8]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl GetFridge__9FarmHouse
	mov r2, r8
	ldr r1, [r2]
	adds r2, r4, #0
	bl AddAmountOf__6FridgeUiUi
	ldr r1, _08080C7C @ =0x080FE82C
	adds r0, r7, #0
	bl func_080CABA0
	b _08080C88
	.align 2, 0
_08080C68: .4byte 0x00000684
_08080C6C: .4byte 0x080FE740
_08080C70: .4byte 0x00001AA8
_08080C74: .4byte 0x00001C2C
_08080C78: .4byte 0x00001C38
_08080C7C: .4byte 0x080FE82C
_08080C80:
	ldr r1, _08080CA8 @ =0x080FE8AC
	adds r0, r7, #0
	bl func_080CABA0
_08080C88:
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0x8a
	bl func_08050E50
	ldr r4, _08080CAC @ =0x000006A4
	adds r1, r7, r4
	movs r0, #2
	str r0, [r1]
	movs r0, #0xd5
	lsls r0, r0, #3
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	b _08080D64
	.align 2, 0
_08080CA8: .4byte 0x080FE8AC
_08080CAC: .4byte 0x000006A4
_08080CB0:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08080CDC
	ldr r1, _08080CD4 @ =0x00000684
	adds r0, r7, r1
	bl func_080CAAF4
	ldr r2, _08080CD8 @ =0x000006A4
	adds r0, r7, r2
	str r4, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	b _08080D64
	.align 2, 0
_08080CD4: .4byte 0x00000684
_08080CD8: .4byte 0x000006A4
_08080CDC:
	ldr r3, _08080CF0 @ =0x00000684
	adds r1, r7, r3
	ldrb r0, [r1, #8]
	cmp r0, #0
	beq _08080D64
	adds r0, r1, #0
	bl func_080CA98C
	b _08080D64
	.align 2, 0
_08080CF0: .4byte 0x00000684
_08080CF4:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #3
	bne _08080D64
	ldr r1, _08080D20 @ =0x080FE8C0
	adds r0, r7, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0x8a
	bl func_08050E50
	ldr r2, _08080D24 @ =0x000006A4
	adds r1, r7, r2
	movs r0, #1
	str r0, [r1]
	b _08080D64
	.align 2, 0
_08080D20: .4byte 0x080FE8C0
_08080D24: .4byte 0x000006A4
_08080D28:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _08080D64
	ldr r4, [sp, #0xe8]
	ldr r2, [r4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08080D64
	movs r0, #1
	str r0, [sp, #0xd4]
	ldr r1, _08080D6C @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [r4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_08080D64:
	adds r0, r7, #0
	bl func_080C96C4
	b _08080792
	.align 2, 0
_08080D6C: .4byte 0x00000889
_08080D70:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	ldr r0, _08080D90 @ =vtable_unk_080E5A28
	str r0, [sp, #0x18]
	add sp, #0xec
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08080D90: .4byte vtable_unk_080E5A28

	thumb_func_start func_08080D94
func_08080D94: @ 0x08080D94
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _08080DC0 @ =vtable_unk_080E7CA0
	str r0, [r4]
	movs r0, #0xe2
	lsls r0, r0, #3
	bl __builtin_new
	adds r1, r5, #0
	bl func_080804F8
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08080DC0: .4byte vtable_unk_080E7CA0

	thumb_func_start func_08080DC4
func_08080DC4: @ 0x08080DC4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08080E00 @ =vtable_unk_080E7CA0
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08080DE0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08080DE0:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _08080DF2
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08080DF2:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08080E00: .4byte vtable_unk_080E7CA0

	thumb_func_start func_08080E04
func_08080E04: @ 0x08080E04
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_08080540
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_08080E20
func_08080E20: @ 0x08080E20
	push {r4, lr}
	adds r4, r0, #0
	bl func_080C7F58
	ldr r0, _08080E4C @ =vtable_unk_080E7CB0
	str r0, [r4, #4]
	ldr r1, _08080E50 @ =0x000006A4
	adds r0, r4, r1
	movs r1, #0
	str r1, [r0]
	movs r2, #0xd5
	lsls r2, r2, #3
	adds r0, r4, r2
	strb r1, [r0]
	adds r2, #4
	adds r0, r4, r2
	strb r1, [r0]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08080E4C: .4byte vtable_unk_080E7CB0
_08080E50: .4byte 0x000006A4

	thumb_func_start func_08080E54
func_08080E54: @ 0x08080E54
	push {lr}
	ldr r2, _08080E64 @ =vtable_unk_080E7CB0
	str r2, [r0, #4]
	bl func_080C8360
	pop {r0}
	bx r0
	.align 2, 0
_08080E64: .4byte vtable_unk_080E7CB0

	thumb_func_start func_08080E68
func_08080E68: @ 0x08080E68
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x140
	adds r7, r0, #0
	movs r0, #0x10
	str r0, [sp, #0xc]
	movs r0, #4
	str r0, [sp, #0x134]
	add r6, sp, #0x18
	ldr r1, _08080FC8 @ =0x086678A0
	adds r0, r6, #0
	bl func_0805E6CC
	add r0, sp, #0x48
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x4c
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x60
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	add r0, sp, #0x7c
	strb r5, [r0]
	add r1, sp, #0x80
	str r4, [sp, #0x80]
	strh r4, [r1, #4]
	add r6, sp, #0x88
	str r4, [r6]
	strh r4, [r6, #4]
	add r5, sp, #0x90
	str r4, [r5]
	strh r4, [r5, #4]
	add r0, sp, #0x98
	str r4, [r0]
	strh r4, [r0, #4]
	ldr r0, [r7, #0x1c]
	bl func_08075DD4
	adds r3, r7, #0
	adds r3, #0x20
	movs r2, #0x24
	adds r2, r2, r7
	mov ip, r2
	ldr r0, [r7, #0x20]
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r3, r0
	adds r2, r0, #0
	mov r1, ip
	ldr r4, [r3]
	cmp r1, r2
	beq _08080EFA
_08080EF4:
	adds r1, #0x10
	cmp r1, r2
	bne _08080EF4
_08080EFA:
	mov r1, ip
	subs r0, r0, r1
	asrs r0, r0, #4
	subs r0, r4, r0
	str r0, [r3]
	movs r2, #0
	mov sl, r2
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp sl, r0
	blo _08080F16
	b _080810C4
_08080F16:
	movs r4, #0
	mov sb, r4
	movs r5, #0
	adds r0, r3, #0
	adds r0, r7, r0
	str r0, [sp, #0x138]
	add r6, sp, #0xa0
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r1, r1, r7
	mov r8, r1
_08080F2C:
	add r1, sp, #8
	ldr r2, [sp, #0x134]
	lsls r0, r2, #3
	strh r0, [r1]
	mov r3, r8
	ldr r0, [r3]
	lsls r0, r0, #3
	ldr r1, _08080FCC @ =0x080FE8FC
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r2, sp, #0x12c
	str r0, [r2]
	str r1, [r2, #4]
	ldr r1, [r2]
	cmp r1, #0xa
	beq _08080FD0
	add r4, sp, #0x128
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetIconId__C7Article
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	add r4, sp, #0x4c
	adds r0, r4, #0
	bl func_0805E860
	ldr r1, [sp, #0x4c]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x50]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xa0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r6, #0
	adds r1, r6, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x80
	adds r0, r6, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r4}
	stm r1!, {r2, r4}
	ldr r0, [sp, #0x88]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x90]
	str r0, [sp, #0x14]
	adds r1, r7, #0
	adds r1, #0x20
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _08081078
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _08080FC0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08080FC0:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
	b _08081078
	.align 2, 0
_08080FC8: .4byte 0x086678A0
_08080FCC: .4byte 0x080FE8FC
_08080FD0:
	mov r3, sp
	adds r3, #0xc0
	str r3, [sp, #0x13c]
	adds r0, r3, #0
	ldr r1, _08081100 @ =0x08753608
	bl func_0805E6CC
	add r0, sp, #0xf0
	strh r5, [r0]
	strh r5, [r0, #2]
	add r0, sp, #0xf4
	ldr r1, [sp, #0x13c]
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x108
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	mov r4, sb
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r4, [r0, #0x18]
	add r0, sp, #0x124
	strb r4, [r0]
	add r0, sp, #0xf4
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	add r0, sp, #0xf8
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xa0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	adds r0, r6, #0
	adds r1, r6, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x80
	adds r0, r6, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r0, [sp, #0x88]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x90]
	str r0, [sp, #0x14]
	adds r1, r7, #0
	adds r1, #0x20
	ldr r0, [r7, #0x20]
	ldr r4, [sp, #0x13c]
	mov ip, r4
	cmp r0, #0x27
	bhi _08081072
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0808106C
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0808106C:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_08081072:
	ldr r0, _08081104 @ =vtable_unk_080E5A28
	mov r1, ip
	str r0, [r1]
_08081078:
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	ldr r2, [sp, #0x134]
	lsls r4, r2, #6
	adds r1, r1, r4
	adds r1, #0x32
	add r0, sp, #0x12c
	ldr r0, [r0, #4]
	movs r3, #0x20
	str r3, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	str r5, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [sp, #0x134]
	adds r0, #2
	str r0, [sp, #0x134]
	movs r1, #4
	add r8, r1
	movs r2, #1
	add sl, r2
	ldr r3, [sp, #0x138]
	ldr r0, [r3]
	cmp sl, r0
	bhs _080810C4
	b _08080F2C
_080810C4:
	movs r0, #0
	strh r0, [r7, #0xc]
	movs r4, #0xc9
	lsls r4, r4, #3
	adds r1, r7, r4
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075DB8
	ldr r0, [r7, #0x1c]
	ldr r1, [sp, #0x134]
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r0, _08081104 @ =vtable_unk_080E5A28
	str r0, [sp, #0x18]
	add sp, #0x140
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08081100: .4byte 0x08753608
_08081104: .4byte vtable_unk_080E5A28

	thumb_func_start func_08081108
func_08081108: @ 0x08081108
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, r1, #0
	cmp r0, #0xa
	beq _08081138
	ldr r1, _08081134 @ =0x080FE8FC
	lsls r0, r0, #3
	adds r0, r0, r1
	ldr r1, [r0]
	mov r0, sp
	bl __7ArticleUi
	mov r0, sp
	bl GetDesc__C7Article
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CABEC
	b _08081140
	.align 2, 0
_08081134: .4byte 0x080FE8FC
_08081138:
	ldr r1, _08081148 @ =0x080FE974
	adds r0, r4, #0
	bl func_080CABEC
_08081140:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08081148: .4byte 0x080FE974

	thumb_func_start func_0808114C
func_0808114C: @ 0x0808114C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	adds r6, r0, #0
	bl func_08008724
	adds r0, r6, #0
	bl func_080C85A0
	movs r4, #0
	movs r1, #0
_08081168:
	ldr r0, [r6, #8]
	ldr r2, _080812F8 @ =0x00001FE4
	adds r0, r0, r2
	bl func_0809EEA4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08081196
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r6, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08081196
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _08081190
	str r4, [r0]
_08081190:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08081196:
	adds r4, #1
	adds r1, r4, #0
	cmp r1, #9
	bls _08081168
	ldr r0, [r6, #8]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetRecordPlayer__9FarmHouse
	cmp r0, #0
	bne _080811CE
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r6, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _080811CE
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _080811C8
	movs r0, #0xa
	str r0, [r2]
_080811C8:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_080811CE:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r6, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _080811EE
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _080811E8
	movs r0, #0xb
	str r0, [r2]
_080811E8:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_080811EE:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r6, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0808120E
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08081208
	movs r0, #0xc
	str r0, [r2]
_08081208:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0808120E:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r6, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0808122E
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08081228
	movs r0, #0xd
	str r0, [r2]
_08081228:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0808122E:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r6, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _0808124E
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08081248
	movs r0, #0xe
	str r0, [r2]
_08081248:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0808124E:
	adds r0, r6, #0
	bl func_08080E68
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r6, #0
	bl func_08081108
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _080812FC @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #4]
	ldr r1, _08081300 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r2, #0
	str r2, [sp, #0x24]
_080812BE:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	ldr r3, [sp, #4]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080812D8
	b _08081A16
_080812D8:
	ldr r0, [sp, #0x24]
	cmp r0, #0
	beq _080812E0
	b _08081A24
_080812E0:
	ldr r1, _08081304 @ =0x000006A4
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #5
	bls _080812EC
	b _08081A16
_080812EC:
	lsls r0, r0, #2
	ldr r1, _08081308 @ =_0808130C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080812F8: .4byte 0x00001FE4
_080812FC: .4byte vtable_unk_080E5B80
_08081300: .4byte 0x00000889
_08081304: .4byte 0x000006A4
_08081308: .4byte _0808130C
_0808130C: @ jump table
	.4byte _08081324 @ case 0
	.4byte _0808170C @ case 1
	.4byte _08081850 @ case 2
	.4byte _08081878 @ case 3
	.4byte _080818A4 @ case 4
	.4byte _080819DC @ case 5
_08081324:
	ldr r0, [r6, #0x14]
	ldr r1, [r6, #0x10]
	cmp r0, r1
	beq _0808133E
	lsls r0, r1, #2
	adds r0, r0, r6
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r6, #0
	bl func_08081108
_0808133E:
	ldr r1, _0808139C @ =0x000006A1
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808134A
	b _080816AC
_0808134A:
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r3, [r0]
	lsls r0, r3, #3
	ldr r1, _080813A0 @ =0x080FE8FC
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [sp, #0x18]
	str r1, [sp, #0x1c]
	ldr r5, [r6, #8]
	ldr r1, _080813A4 @ =0x00001AA8
	adds r0, r5, r1
	ldr r2, [r0]
	movs r4, #0
	add r0, sp, #0x18
	ldr r1, [r0, #4]
	cmp r1, r2
	bls _0808137A
	movs r4, #1
_0808137A:
	cmp r4, #0
	beq _080813B0
	ldr r1, _080813A8 @ =0x080FE988
	adds r0, r6, #0
	bl func_080CABA0
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r6, r2
	movs r1, #0x90
	bl func_08050E50
	ldr r0, _080813AC @ =0x000006A4
	adds r1, r6, r0
	movs r0, #3
	b _080816EE
	.align 2, 0
_0808139C: .4byte 0x000006A1
_080813A0: .4byte 0x080FE8FC
_080813A4: .4byte 0x00001AA8
_080813A8: .4byte 0x080FE988
_080813AC: .4byte 0x000006A4
_080813B0:
	cmp r3, #0xa
	bne _080813C0
	ldr r2, _080813BC @ =0x000006A4
	adds r1, r6, r2
	movs r0, #1
	b _080816EE
	.align 2, 0
_080813BC: .4byte 0x000006A4
_080813C0:
	cmp r3, #0xa
	bhs _080813C6
	b _08081628
_080813C6:
	cmp r3, #0xe
	bls _080813CC
	b _08081628
_080813CC:
	movs r0, #0
	mov sb, r0
	mov r8, r0
	ldr r1, _0808143C @ =0x00001C38
	mov sl, r1
	adds r0, r5, r1
	bl func_0800F77C
	adds r5, r0, #0
	ldr r0, [r6, #8]
	movs r7, #0xfa
	lsls r7, r7, #1
	adds r0, r0, r7
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _08081400
	ldr r0, [r6, #8]
	adds r2, r7, #0
	adds r0, r0, r2
	bl GetShelf__9FarmHouse
	ldr r1, [sp, #0x18]
	bl GetAvailableSpaceFor__C5ShelfUi
	mov r8, r0
_08081400:
	ldr r0, [r6, #8]
	ldr r4, _08081440 @ =0x00001C2C
	adds r0, r0, r4
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08081414
	movs r0, #1
	mov sb, r0
_08081414:
	mov r1, sb
	adds r0, r5, r1
	add r0, r8
	str r0, [sp, #0x28]
	cmp r0, #0
	bne _0808144C
	ldr r1, _08081444 @ =0x080FE9A8
	adds r0, r6, #0
	bl func_080CABA0
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r6, r2
	movs r1, #0x90
	bl func_08050E50
	ldr r0, _08081448 @ =0x000006A4
	adds r1, r6, r0
	movs r0, #3
	b _080816EE
	.align 2, 0
_0808143C: .4byte 0x00001C38
_08081440: .4byte 0x00001C2C
_08081444: .4byte 0x080FE9A8
_08081448: .4byte 0x000006A4
_0808144C:
	ldr r0, [r6, #8]
	add r0, sl
	ldr r1, [sp, #0x18]
	bl func_0800F804
	adds r5, r0, #0
	movs r1, #0
	mov sb, r1
	mov r8, r1
	ldr r0, [r6, #8]
	adds r0, r0, r7
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _0808147A
	ldr r0, [r6, #8]
	adds r0, r0, r7
	bl GetShelf__9FarmHouse
	ldr r1, [sp, #0x18]
	bl GetAmountOf__C5ShelfUi
	mov r8, r0
_0808147A:
	ldr r0, [r6, #8]
	adds r0, r0, r4
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080814B8
	ldr r0, [r6, #8]
	adds r0, r0, r4
	bl func_0800F204
	cmp r0, #1
	bne _080814B8
	ldr r0, [r6, #8]
	adds r0, r0, r4
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x20
	strb r1, [r0]
	bl GetId__C7Article
	movs r2, #0
	ldr r1, [sp, #0x18]
	cmp r0, r1
	bne _080814B0
	movs r2, #1
_080814B0:
	cmp r2, #0
	beq _080814B8
	movs r2, #1
	mov sb, r2
_080814B8:
	mov r1, sb
	adds r0, r5, r1
	add r0, r8
	add r1, sp, #8
	movs r2, #7
	bl func_0804EC84
	mov r5, sp
	adds r5, #0x21
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	bl __7ArticleUi
	ldr r2, _08081610 @ =0x000006AC
	adds r4, r6, r2
	movs r0, #0
	mov sl, r0
	mov r1, sl
	strb r1, [r4]
	adds r0, r5, #0
	bl GetName__C7Article
	mov sb, r0
	adds r7, r4, #0
	mov r5, sb
	adds r0, r7, #0
	bl strlen
	adds r2, r7, r0
	mov r8, r2
	movs r1, #0x63
	subs r4, r1, r0
	cmp r4, #0
	beq _0808151C
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r4
	bls _0808150A
	adds r5, r4, #0
_0808150A:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r1, r8
	adds r0, r1, r5
	mov r2, sl
	strb r2, [r0]
_0808151C:
	ldr r0, _08081614 @ =0x080FE9CC
	mov sb, r0
	adds r0, r7, #0
	bl strlen
	adds r1, r7, r0
	mov r8, r1
	movs r1, #0x63
	subs r4, r1, r0
	cmp r4, #0
	beq _08081552
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r4
	bls _08081540
	adds r5, r4, #0
_08081540:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_08081552:
	ldr r0, _08081618 @ =0x08117828
	ldr r0, [r0]
	mov sb, r0
	adds r0, r7, #0
	bl strlen
	adds r1, r7, r0
	mov r8, r1
	movs r1, #0x63
	subs r4, r1, r0
	cmp r4, #0
	beq _0808158A
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r4
	bls _08081578
	adds r5, r4, #0
_08081578:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0808158A:
	adds r0, r7, #0
	bl strlen
	adds r1, r7, r0
	mov r8, r1
	movs r1, #0x63
	subs r4, r1, r0
	cmp r4, #0
	beq _080815BC
	add r0, sp, #8
	bl strlen
	adds r5, r0, #0
	cmp r5, r4
	bls _080815AA
	adds r5, r4, #0
_080815AA:
	mov r0, r8
	add r1, sp, #8
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_080815BC:
	ldr r0, _0808161C @ =0x08117814
	ldr r0, [r0]
	mov r8, r0
	adds r0, r7, #0
	bl strlen
	adds r7, r7, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _080815F0
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080815E0
	adds r4, r5, #0
_080815E0:
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_080815F0:
	ldr r0, _08081610 @ =0x000006AC
	adds r1, r6, r0
	adds r0, r6, #0
	bl func_080CABEC
	ldr r1, _08081620 @ =0x00000684
	adds r0, r6, r1
	ldr r1, [sp, #0x1c]
	ldr r2, [sp, #0x28]
	movs r3, #5
	bl func_080CA8B4
	ldr r2, _08081624 @ =0x000006A4
	adds r1, r6, r2
	movs r0, #4
	b _080816EE
	.align 2, 0
_08081610: .4byte 0x000006AC
_08081614: .4byte 0x080FE9CC
_08081618: .4byte 0x08117828
_0808161C: .4byte 0x08117814
_08081620: .4byte 0x00000684
_08081624: .4byte 0x000006A4
_08081628:
	movs r7, #0
	movs r5, #0
	ldr r0, [r6, #8]
	ldr r1, _08081690 @ =0x00001C38
	adds r0, r0, r1
	bl func_0800F77C
	adds r4, r0, #0
	ldr r0, [r6, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _0808165C
	ldr r0, [r6, #8]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetShelf__9FarmHouse
	ldr r1, [sp, #0x18]
	bl GetAvailableSpaceFor__C5ShelfUi
	adds r5, r0, #0
_0808165C:
	ldr r0, [r6, #8]
	ldr r2, _08081694 @ =0x00001C2C
	adds r0, r0, r2
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808166E
	movs r7, #1
_0808166E:
	adds r0, r4, r7
	cmn r0, r5
	bne _080816A0
	ldr r1, _08081698 @ =0x080FE9A8
	adds r0, r6, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #0x90
	bl func_08050E50
	ldr r2, _0808169C @ =0x000006A4
	adds r1, r6, r2
	movs r0, #3
	b _080816EE
	.align 2, 0
_08081690: .4byte 0x00001C38
_08081694: .4byte 0x00001C2C
_08081698: .4byte 0x080FE9A8
_0808169C: .4byte 0x000006A4
_080816A0:
	ldr r0, _080816A8 @ =0x000006A4
	adds r1, r6, r0
	movs r0, #1
	b _080816EE
	.align 2, 0
_080816A8: .4byte 0x000006A4
_080816AC:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080816F0
	movs r1, #0xd5
	lsls r1, r1, #3
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080816D4
	ldr r1, _080816D0 @ =0x080FE9D4
	adds r0, r6, #0
	bl func_080CABA0
	b _080816DC
	.align 2, 0
_080816D0: .4byte 0x080FE9D4
_080816D4:
	ldr r1, _08081704 @ =0x080FE9D4
	adds r0, r6, #0
	bl func_080CABA0
_080816DC:
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r6, r2
	movs r1, #0x8d
	bl func_08050E50
	ldr r0, _08081708 @ =0x000006A4
	adds r1, r6, r0
	movs r0, #5
_080816EE:
	str r0, [r1]
_080816F0:
	ldr r0, [r6, #0x10]
	str r0, [r6, #0x14]
	movs r1, #0xa9
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r1, [r0]
	adds r0, r6, #0
	bl func_080C9020
	b _08081A16
	.align 2, 0
_08081704: .4byte 0x080FE9D4
_08081708: .4byte 0x000006A4
_0808170C:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r4, r6, r2
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r4, r0
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _08081794 @ =0x080FE8FC
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [sp, #0x18]
	str r1, [sp, #0x1c]
	ldr r0, [r6, #8]
	ldr r1, _08081798 @ =0x00001AA8
	adds r0, r0, r1
	ldr r1, [sp, #0x1c]
	bl func_0809ACC0
	adds r0, r6, #0
	bl func_080C8550
	ldr r0, [sp, #0x18]
	cmp r0, #0xa
	bne _080817A0
	ldr r0, [r6, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl AddRecordPlayer__9FarmHouse
	ldr r1, _0808179C @ =0x080FEA00
	adds r0, r6, #0
	bl func_080CABA0
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r3, r4, r0
	ldr r0, [r4]
	cmp r0, #0
	beq _08081782
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r4, r0
	adds r1, r3, #4
	cmp r1, r0
	beq _0808177C
	cmp r0, r1
	beq _0808177C
	subs r2, r0, r1
	adds r0, r3, #0
	bl memmove
_0808177C:
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
_08081782:
	adds r0, r6, #0
	bl func_08080E68
	movs r0, #0
	str r0, [r6, #0x10]
	subs r0, #1
	str r0, [r6, #0x14]
	b _08081830
	.align 2, 0
_08081794: .4byte 0x080FE8FC
_08081798: .4byte 0x00001AA8
_0808179C: .4byte 0x080FEA00
_080817A0:
	ldr r0, [r6, #8]
	ldr r1, _080817CC @ =0x00001C2C
	adds r0, r0, r1
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080817D0
	ldr r4, [r6, #8]
	ldr r2, _080817CC @ =0x00001C2C
	adds r4, r4, r2
	mov r5, sp
	adds r5, #0x22
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	bl __7ArticleUi
	ldrb r1, [r5]
	adds r0, r4, #0
	bl func_0800F3E8
	b _080817F0
	.align 2, 0
_080817CC: .4byte 0x00001C2C
_080817D0:
	ldr r0, [r6, #8]
	ldr r1, _080817FC @ =0x00001C38
	adds r0, r0, r1
	bl func_0800F77C
	cmp r0, #0
	beq _08081804
	ldr r0, [r6, #8]
	ldr r2, _080817FC @ =0x00001C38
	adds r0, r0, r2
	ldr r1, [sp, #0x18]
	movs r2, #1
	bl func_0800FDC4
	cmp r0, #0
	bne _08081830
_080817F0:
	ldr r1, _08081800 @ =0x080FEA4C
	adds r0, r6, #0
	bl func_080CABA0
	b _08081830
	.align 2, 0
_080817FC: .4byte 0x00001C38
_08081800: .4byte 0x080FEA4C
_08081804:
	ldr r0, [r6, #8]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetShelf__9FarmHouse
	cmp r0, #0
	beq _08081830
	ldr r0, [r6, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetShelf__9FarmHouse
	ldr r1, [sp, #0x18]
	movs r2, #1
	bl AddAmountOf__5ShelfUiUi
	ldr r1, _08081848 @ =0x080FEA5C
	adds r0, r6, #0
	bl func_080CABA0
_08081830:
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #0x8e
	bl func_08050E50
	ldr r2, _0808184C @ =0x000006A4
	adds r1, r6, r2
	movs r0, #2
	str r0, [r1]
	b _08081A16
	.align 2, 0
_08081848: .4byte 0x080FEA5C
_0808184C: .4byte 0x000006A4
_08081850:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r4, [r0]
	cmp r4, #3
	beq _0808185E
	b _08081A16
_0808185E:
	ldr r1, _08081870 @ =0x080FEAC0
	adds r0, r6, #0
	bl func_080CABA0
	ldr r2, _08081874 @ =0x000006A4
	adds r0, r6, r2
	str r4, [r0]
	b _08081A16
	.align 2, 0
_08081870: .4byte 0x080FEAC0
_08081874: .4byte 0x000006A4
_08081878:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #3
	beq _08081886
	b _08081A16
_08081886:
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r6, r2
	bl func_08050E5C
	ldr r0, _080818A0 @ =0x000006A4
	adds r1, r6, r0
	movs r0, #0
	str r0, [r1]
	subs r0, #1
	str r0, [r6, #0x14]
	b _08081A16
	.align 2, 0
_080818A0: .4byte 0x000006A4
_080818A4:
	adds r0, r6, #0
	bl func_080088CC
	adds r4, r0, #0
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	beq _08081998
	ldr r1, _08081950 @ =0x00000684
	adds r0, r6, r1
	ldr r7, [r0, #0x14]
	bl func_080CAAF4
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r0, [r0]
	lsls r0, r0, #3
	ldr r1, _08081954 @ =0x080FE8FC
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	str r0, [sp, #0x18]
	str r1, [sp, #0x1c]
	ldr r0, [r6, #8]
	ldr r1, _08081958 @ =0x00001AA8
	adds r0, r0, r1
	ldr r1, [sp, #0x1c]
	muls r1, r7, r1
	bl func_0809ACC0
	adds r0, r6, #0
	bl func_080C8550
	ldr r0, [r6, #8]
	ldr r2, _0808195C @ =0x00001C2C
	adds r0, r0, r2
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808191A
	subs r7, #1
	ldr r4, [r6, #8]
	ldr r0, _0808195C @ =0x00001C2C
	adds r4, r4, r0
	mov r5, sp
	adds r5, #0x23
	ldr r1, [sp, #0x18]
	adds r0, r5, #0
	bl __7ArticleUi
	ldrb r1, [r5]
	adds r0, r4, #0
	bl func_0800F3E8
_0808191A:
	cmp r7, #0
	beq _08081968
	ldr r0, [r6, #8]
	ldr r1, _08081960 @ =0x00001C38
	adds r0, r0, r1
	ldr r1, [sp, #0x18]
	adds r2, r7, #0
	bl func_0800FDC4
	adds r7, r0, #0
	cmp r7, #0
	beq _08081968
	ldr r0, [r6, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetShelf__9FarmHouse
	ldr r1, [sp, #0x18]
	adds r2, r7, #0
	bl AddAmountOf__5ShelfUiUi
	ldr r1, _08081964 @ =0x080FEA5C
	adds r0, r6, #0
	bl func_080CABA0
	b _08081970
	.align 2, 0
_08081950: .4byte 0x00000684
_08081954: .4byte 0x080FE8FC
_08081958: .4byte 0x00001AA8
_0808195C: .4byte 0x00001C2C
_08081960: .4byte 0x00001C38
_08081964: .4byte 0x080FEA5C
_08081968:
	ldr r1, _08081990 @ =0x080FEA4C
	adds r0, r6, #0
	bl func_080CABA0
_08081970:
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #0x8e
	bl func_08050E50
	ldr r2, _08081994 @ =0x000006A4
	adds r1, r6, r2
	movs r0, #2
	str r0, [r1]
	movs r0, #0xd5
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	b _08081A16
	.align 2, 0
_08081990: .4byte 0x080FEA4C
_08081994: .4byte 0x000006A4
_08081998:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080819C4
	ldr r1, _080819BC @ =0x00000684
	adds r0, r6, r1
	bl func_080CAAF4
	ldr r2, _080819C0 @ =0x000006A4
	adds r0, r6, r2
	str r4, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x14]
	b _08081A16
	.align 2, 0
_080819BC: .4byte 0x00000684
_080819C0: .4byte 0x000006A4
_080819C4:
	ldr r0, _080819D8 @ =0x00000684
	adds r1, r6, r0
	ldrb r0, [r1, #8]
	cmp r0, #0
	beq _08081A16
	adds r0, r1, #0
	bl func_080CA98C
	b _08081A16
	.align 2, 0
_080819D8: .4byte 0x00000684
_080819DC:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #3
	bne _08081A16
	ldr r2, [sp, #4]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08081A16
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r1, _08081A20 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_08081A16:
	adds r0, r6, #0
	bl func_080C96C4
	b _080812BE
	.align 2, 0
_08081A20: .4byte 0x00000889
_08081A24:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_08081A40
func_08081A40: @ 0x08081A40
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _08081A6C @ =vtable_unk_080E7CBC
	str r0, [r4]
	movs r0, #0xe2
	lsls r0, r0, #3
	bl __builtin_new
	adds r1, r5, #0
	bl func_08080E20
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08081A6C: .4byte vtable_unk_080E7CBC

	thumb_func_start func_08081A70
func_08081A70: @ 0x08081A70
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08081AAC @ =vtable_unk_080E7CBC
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08081A8C
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08081A8C:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _08081A9E
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08081A9E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08081AAC: .4byte vtable_unk_080E7CBC

	thumb_func_start func_08081AB0
func_08081AB0: @ 0x08081AB0
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_0808114C
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_08081ACC
func_08081ACC: @ 0x08081ACC
	push {r4, lr}
	adds r4, r0, #0
	bl func_080C7F58
	ldr r0, _08081AF8 @ =vtable_unk_080E7CCC
	str r0, [r4, #4]
	ldr r1, _08081AFC @ =0x000006A4
	adds r0, r4, r1
	movs r1, #0
	str r1, [r0]
	movs r2, #0xd5
	lsls r2, r2, #3
	adds r0, r4, r2
	strb r1, [r0]
	adds r2, #4
	adds r0, r4, r2
	str r1, [r0]
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08081AF8: .4byte vtable_unk_080E7CCC
_08081AFC: .4byte 0x000006A4

	thumb_func_start func_08081B00
func_08081B00: @ 0x08081B00
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08081B24 @ =vtable_unk_080E7CCC
	str r0, [r4, #4]
	ldr r1, _08081B28 @ =0x000006AC
	adds r0, r4, r1
	ldr r0, [r0]
	bl __builtin_delete
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080C8360
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08081B24: .4byte vtable_unk_080E7CCC
_08081B28: .4byte 0x000006AC

	thumb_func_start func_08081B2C
func_08081B2C: @ 0x08081B2C
	ldr r2, _08081B3C @ =0x000006AC
	adds r1, r1, r2
	ldr r3, [r1]
	movs r2, #0
	str r2, [r1]
	str r3, [r0]
	bx lr
	.align 2, 0
_08081B3C: .4byte 0x000006AC

	thumb_func_start func_08081B40
func_08081B40: @ 0x08081B40
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r3, r1, #0
	ldr r5, _08081B94 @ =0x080FEB60
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r2, r4, r0
	ldr r0, [r4, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r2, r0
	ldr r1, [r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r1, r5, #0
	adds r1, #0xc
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #0
	bne _08081B98
	lsls r0, r3, #2
	adds r0, #4
	adds r0, r2, r0
	ldr r1, [r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r1, [r0]
	mov r0, sp
	bl __4FoodUi
	mov r0, sp
	bl GetDesc__C4Food
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CABEC
	b _08081BB4
	.align 2, 0
_08081B94: .4byte 0x080FEB60
_08081B98:
	lsls r0, r3, #2
	adds r0, #4
	adds r0, r2, r0
	ldr r1, [r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r1, r5, #0
	adds r1, #8
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r4, #0
	bl func_080CABEC
_08081BB4:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start func_08081BBC
func_08081BBC: @ 0x08081BBC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xf8
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080C85A0
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08081BF4
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08081BEE
	movs r0, #0
	str r0, [r2]
_08081BEE:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08081BF4:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08081C14
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08081C0E
	movs r0, #1
	str r0, [r2]
_08081C0E:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08081C14:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08081C34
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08081C2E
	movs r0, #2
	str r0, [r2]
_08081C2E:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08081C34:
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08081C54
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08081C4E
	movs r0, #3
	str r0, [r2]
_08081C4E:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08081C54:
	movs r5, #0xa9
	lsls r5, r5, #2
	adds r1, r7, r5
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08081C74
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08081C6E
	movs r0, #4
	str r0, [r2]
_08081C6E:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08081C74:
	movs r0, #0x10
	str r0, [sp, #0xc]
	movs r6, #4
	str r6, [sp, #0xe0]
	add r6, sp, #0x34
	ldr r1, _08081D38 @ =0x086678A0
	adds r0, r6, #0
	bl func_0805E6CC
	add r0, sp, #0x64
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x68
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x7c
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	add r0, sp, #0x98
	strb r5, [r0]
	add r3, sp, #0x9c
	str r4, [r3]
	strh r4, [r3, #4]
	add r2, sp, #0xa4
	str r4, [r2]
	strh r4, [r2, #4]
	add r1, sp, #0xac
	str r4, [r1]
	strh r4, [r1, #4]
	add r0, sp, #0xb4
	str r4, [r0]
	strh r4, [r0, #4]
	movs r0, #0
	mov sb, r0
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r0, [r0]
	add r6, sp, #0xbc
	cmp sb, r0
	blo _08081CE4
	b _08081DF0
_08081CE4:
	add r5, sp, #0x18
	mov r8, r5
	adds r0, r4, #0
	adds r0, r7, r0
	str r0, [sp, #0xe4]
	mov sl, r8
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r5, r7, r1
	subs r2, #0x3c
	str r2, [sp, #0xe8]
_08081CFA:
	add r1, sp, #8
	ldr r3, [sp, #0xe0]
	lsls r0, r3, #3
	strh r0, [r1]
	ldr r1, [r5]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r2, _08081D3C @ =0x080FEB60
	mov r1, r8
	adds r0, r0, r2
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	mov r4, r8
	ldr r0, [r4, #0xc]
	cmp r0, #0
	bne _08081D40
	ldr r1, [sp, #0x18]
	adds r0, r6, #0
	bl __4FoodUi
	adds r0, r6, #0
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	b _08081D42
	.align 2, 0
_08081D38: .4byte 0x086678A0
_08081D3C: .4byte 0x080FEB60
_08081D40:
	ldr r1, [sp, #0x18]
_08081D42:
	ldr r0, [sp, #0xe8]
	bl func_0805E860
	ldr r1, [sp, #0x68]
	ldr r3, [r1]
	ldr r0, [sp, #0xe8]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x6c]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xc0
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0xc0
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x9c
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	ldr r0, [sp, #0xa4]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0xac]
	str r0, [sp, #0x14]
	adds r1, r7, #0
	adds r1, #0x20
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _08081DA6
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _08081DA0
	add r1, sp, #8
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08081DA0:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_08081DA6:
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	ldr r3, [sp, #0xe0]
	lsls r4, r3, #6
	adds r1, r1, r4
	adds r1, #0x32
	mov r2, sl
	ldr r0, [r2, #4]
	movs r3, #0x20
	str r3, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	movs r1, #0
	str r1, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [sp, #0xe0]
	adds r0, #2
	str r0, [sp, #0xe0]
	adds r5, #4
	movs r1, #1
	add sb, r1
	ldr r2, [sp, #0xe4]
	ldr r0, [r2]
	cmp sb, r0
	blo _08081CFA
_08081DF0:
	ldr r0, [r7, #0x1c]
	movs r3, #0xc
	ldrsh r1, [r7, r3]
	bl func_08075C88
	ldr r0, [r7, #0x1c]
	ldr r1, [sp, #0xe0]
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r1, [r7, #0x10]
	adds r0, r7, #0
	bl func_08081B40
	adds r0, r7, #0
	bl func_08008918
	movs r1, #0x3f
	strh r1, [r6]
	adds r0, #0x50
	strh r1, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _08081EB4 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [r6]
	ldr r1, _08081EB8 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [r6]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r4, #0
	str r4, [sp, #0xec]
	str r6, [sp, #0xf0]
	movs r5, #0xa9
	lsls r5, r5, #2
	adds r5, r7, r5
	str r5, [sp, #0xf4]
	ldr r6, _08081EBC @ =0x000006AC
	adds r6, r6, r7
	mov sb, r6
	add r0, sp, #0x18
	mov r8, r0
_08081E78:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	ldr r1, [sp, #0xf0]
	ldr r3, [r1]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _08081E94
	b _080820E2
_08081E94:
	ldr r2, [sp, #0xec]
	cmp r2, #0
	beq _08081E9C
	b _080820F0
_08081E9C:
	ldr r5, _08081EC0 @ =0x000006A4
	adds r4, r7, r5
	ldr r0, [r4]
	cmp r0, #1
	bne _08081EA8
	b _08082018
_08081EA8:
	cmp r0, #1
	bgt _08081EC4
	cmp r0, #0
	beq _08081ED2
	b _080820E2
	.align 2, 0
_08081EB4: .4byte vtable_unk_080E5B80
_08081EB8: .4byte 0x00000889
_08081EBC: .4byte 0x000006AC
_08081EC0: .4byte 0x000006A4
_08081EC4:
	cmp r0, #2
	bne _08081ECA
	b _0808204A
_08081ECA:
	cmp r0, #3
	bne _08081ED0
	b _080820B4
_08081ED0:
	b _080820E2
_08081ED2:
	ldr r0, [r7, #0x14]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	beq _08081EE0
	adds r0, r7, #0
	bl func_08081B40
_08081EE0:
	ldr r6, _08081F64 @ =0x000006A1
	adds r0, r7, r6
	ldrb r0, [r0]
	cmp r0, #0
	beq _08081FDC
	add r3, sp, #0x18
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	ldr r1, [sp, #0xf4]
	adds r0, r1, r0
	ldr r1, [r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r2, _08081F68 @ =0x080FEB60
	adds r1, r3, #0
	adds r0, r0, r2
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, [r7, #8]
	ldr r1, _08081F6C @ =0x00001AA8
	adds r0, r0, r1
	ldr r1, [r0]
	movs r2, #0
	ldr r0, [r3, #4]
	mov sl, r3
	cmp r1, r0
	blo _08081F24
	movs r2, #1
_08081F24:
	cmp r2, #0
	beq _08081FBC
	movs r0, #2
	str r0, [r4]
	movs r0, #0x10
	bl __builtin_new
	adds r5, r0, #0
	ldr r2, _08081F70 @ =0x000006AC
	adds r4, r7, r2
	ldr r0, [r4]
	cmp r5, r0
	beq _08081F42
	bl __builtin_delete
_08081F42:
	str r5, [r4]
	mov r3, sl
	ldr r0, [r3, #0xc]
	cmp r0, #0
	bne _08081F74
	add r4, sp, #0xc0
	ldr r1, [sp, #0x18]
	adds r0, r4, #0
	bl __4FoodUi
	adds r0, r4, #0
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	b _08081F76
	.align 2, 0
_08081F64: .4byte 0x000006A1
_08081F68: .4byte 0x080FEB60
_08081F6C: .4byte 0x00001AA8
_08081F70: .4byte 0x000006AC
_08081F74:
	ldr r0, [sp, #0x18]
_08081F76:
	str r0, [r5]
	mov r4, sb
	ldr r1, [r4]
	mov r5, sl
	ldr r0, [r5, #0x18]
	str r0, [r1, #4]
	ldr r0, [r7, #8]
	ldr r6, _08081FB4 @ =0x00001C2C
	adds r0, r0, r6
	ldrh r1, [r1]
	bl func_0800F510
	ldr r0, [r7, #8]
	ldr r4, _08081FB8 @ =0x00001BD8
	adds r0, r0, r4
	ldr r1, [r5, #0x10]
	bl func_0800E9E4
	ldr r0, [r7, #8]
	adds r0, r0, r4
	ldr r1, [r5, #0x14]
	bl func_0800EA68
	mov r0, sb
	ldr r1, [r0]
	ldr r0, [r5, #0x10]
	str r0, [r1, #8]
	ldr r0, [r5, #0x14]
	str r0, [r1, #0xc]
	b _08082002
	.align 2, 0
_08081FB4: .4byte 0x00001C2C
_08081FB8: .4byte 0x00001BD8
_08081FBC:
	adds r0, r7, #0
	ldr r1, _08081FD8 @ =0x080FEBEC
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0x9d
	bl func_08050E50
	movs r2, #1
	str r2, [r4]
	b _08082002
	.align 2, 0
_08081FD8: .4byte 0x080FEBEC
_08081FDC:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08082002
	adds r0, r7, #0
	ldr r1, _08082014 @ =0x080FEC14
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0x99
	bl func_08050E50
	movs r0, #3
	str r0, [r4]
_08082002:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	ldr r4, [sp, #0xf4]
	ldr r1, [r4]
	adds r0, r7, #0
	bl func_080C9020
	b _080820E2
	.align 2, 0
_08082014: .4byte 0x080FEC14
_08082018:
	movs r5, #0xd4
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r1, [r0]
	cmp r1, #3
	bne _080820E2
	movs r6, #0xd5
	lsls r6, r6, #3
	adds r0, r7, r6
	ldrb r0, [r0]
	cmp r0, #0
	beq _08082034
	str r1, [r4]
	b _080820E2
_08082034:
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	bl func_08050E5C
	ldr r2, [sp, #0xec]
	str r2, [r4]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	b _080820E2
_0808204A:
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	ldr r3, [sp, #0xf4]
	adds r0, r3, r0
	ldr r1, [r0]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r2, _080820A8 @ =0x080FEB60
	mov r1, r8
	adds r0, r0, r2
	ldm r0!, {r2, r5, r6}
	stm r1!, {r2, r5, r6}
	ldm r0!, {r3, r5, r6}
	stm r1!, {r3, r5, r6}
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, [r7, #8]
	ldr r1, _080820AC @ =0x00001AA8
	adds r0, r0, r1
	mov r2, r8
	ldr r1, [r2, #4]
	bl func_0809ACC0
	movs r3, #0xd5
	lsls r3, r3, #3
	adds r0, r7, r3
	movs r5, #1
	strb r5, [r0]
	adds r0, r7, #0
	bl func_080C8550
	adds r0, r7, #0
	ldr r1, _080820B0 @ =0x080FEC44
	bl func_080CABA0
	movs r6, #0xd2
	lsls r6, r6, #2
	adds r0, r7, r6
	movs r1, #0x9a
	bl func_08050E50
	movs r0, #1
	str r0, [r4]
	b _080820E2
	.align 2, 0
_080820A8: .4byte 0x080FEB60
_080820AC: .4byte 0x00001AA8
_080820B0: .4byte 0x080FEC44
_080820B4:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #3
	bne _080820E2
	movs r2, #1
	str r2, [sp, #0xec]
	adds r0, r3, #0
	adds r0, #0xc
	ldr r1, _080820EC @ =0x00000889
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r3, [sp, #0xf0]
	ldr r1, [r3]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_080820E2:
	adds r0, r7, #0
	bl func_080C96C4
	b _08081E78
	.align 2, 0
_080820EC: .4byte 0x00000889
_080820F0:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	ldr r0, _08082110 @ =vtable_unk_080E5A28
	str r0, [sp, #0x34]
	add sp, #0xf8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08082110: .4byte vtable_unk_080E5A28

	thumb_func_start func_08082114
func_08082114: @ 0x08082114
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _08082140 @ =vtable_unk_080E7CD8
	str r0, [r4]
	movs r0, #0xd6
	lsls r0, r0, #3
	bl __builtin_new
	adds r1, r5, #0
	bl func_08081ACC
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08082140: .4byte vtable_unk_080E7CD8

	thumb_func_start func_08082144
func_08082144: @ 0x08082144
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08082180 @ =vtable_unk_080E7CD8
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08082160
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08082160:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _08082172
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08082172:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08082180: .4byte vtable_unk_080E7CD8

	thumb_func_start func_08082184
func_08082184: @ 0x08082184
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_08081BBC
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
_080821A0:
	.byte 0x10, 0xB5, 0x83, 0xB0, 0x04, 0x1C, 0x49, 0x68, 0x68, 0x46, 0xFF, 0xF7, 0xBF, 0xFC, 0x00, 0x9A
	.byte 0x68, 0x46, 0x01, 0x90, 0x02, 0x92, 0x01, 0x1C, 0x00, 0x20, 0x08, 0x60, 0x22, 0x60, 0x00, 0x98
	.byte 0x7E, 0xF7, 0x22, 0xFA, 0x20, 0x1C, 0x03, 0xB0, 0x10, 0xBC, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00

	thumb_func_start func_080821D0
func_080821D0: @ 0x080821D0
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r3, #0
	ldr r5, [sp, #0x18]
	lsls r2, r2, #0x18
	lsrs r6, r2, #0x18
	bl func_080C7F58
	ldr r0, _080821F4 @ =vtable_unk_080E7CE8
	str r0, [r4, #4]
	ldr r0, _080821F8 @ =0x000006A4
	adds r1, r4, r0
	cmp r5, #0
	beq _080821FC
	movs r0, #9
	str r0, [r1]
	b _080821FE
	.align 2, 0
_080821F4: .4byte vtable_unk_080E7CE8
_080821F8: .4byte 0x000006A4
_080821FC:
	str r5, [r1]
_080821FE:
	movs r1, #1
	cmp r6, #0
	bne _0808220A
	rsbs r0, r5, #0
	orrs r0, r5
	lsrs r1, r0, #0x1f
_0808220A:
	movs r2, #0xd5
	lsls r2, r2, #3
	adds r0, r4, r2
	strb r1, [r0]
	movs r0, #0xa
	movs r1, #1
	rsbs r1, r1, #0
_08082218:
	subs r0, #1
	cmp r0, r1
	bne _08082218
	ldr r1, _08082244 @ =0x000048D8
	adds r0, r4, r1
	str r7, [r0]
	ldr r2, _08082248 @ =0x000048DC
	adds r1, r4, r2
	ldr r0, [sp, #0x14]
	str r0, [r1]
	ldr r1, _0808224C @ =0x000048E0
	adds r0, r4, r1
	str r5, [r0]
	adds r2, #8
	adds r1, r4, r2
	ldr r0, [sp, #0x1c]
	str r0, [r1]
	adds r0, r4, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08082244: .4byte 0x000048D8
_08082248: .4byte 0x000048DC
_0808224C: .4byte 0x000048E0

	thumb_func_start func_08082250
func_08082250: @ 0x08082250
	push {lr}
	ldr r2, _08082260 @ =vtable_unk_080E7CE8
	str r2, [r0, #4]
	bl func_080C8360
	pop {r0}
	bx r0
	.align 2, 0
_08082260: .4byte vtable_unk_080E7CE8

	thumb_func_start func_08082264
func_08082264: @ 0x08082264
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xb8
	adds r7, r0, #0
	mov sb, r1
	ldr r1, [sp, #0xd4]
	str r2, [sp, #4]
	mov r0, sp
	movs r6, #0
	movs r4, #0
	strh r3, [r0]
	add r5, sp, #0x10
	adds r0, r5, #0
	bl func_0805E6CC
	add r0, sp, #0x40
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x44
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x58
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r6, [r0, #0x10]
	strb r6, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r6, [r0, #0x18]
	add r0, sp, #0x74
	strb r6, [r0]
	add r5, sp, #0x78
	str r4, [sp, #0x78]
	strh r4, [r5, #4]
	add r0, sp, #0x80
	mov r8, r0
	str r4, [r0]
	strh r4, [r0, #4]
	add r6, sp, #0x88
	str r4, [r6]
	strh r4, [r6, #4]
	add r0, sp, #0x90
	str r4, [r0]
	strh r4, [r0, #4]
	add r4, sp, #0x44
	adds r0, r4, #0
	mov r1, sb
	bl func_0805E860
	ldr r1, [sp, #0x44]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x48]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x98
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x98
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	ldm r4!, {r1, r2, r3}
	stm r5!, {r1, r2, r3}
	ldm r4!, {r0, r1, r2}
	stm r5!, {r0, r1, r2}
	ldm r4!, {r0, r3}
	stm r5!, {r0, r3}
	mov r1, r8
	ldr r0, [r1]
	str r0, [sp, #8]
	ldr r0, [r6]
	str r0, [sp, #0xc]
	adds r1, r7, #0
	adds r1, #0x20
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _08082334
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _0808232E
	mov r1, sp
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0808232E:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_08082334:
	ldr r0, _08082348 @ =vtable_unk_080E5A28
	str r0, [sp, #0x10]
	add sp, #0xb8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08082348: .4byte vtable_unk_080E5A28

	thumb_func_start func_0808234C
func_0808234C: @ 0x0808234C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xe0
	str r0, [sp, #0xc4]
	mov r8, r1
	mov sl, r2
	str r3, [sp, #0xc8]
	ldr r1, _0808245C @ =0x086678A0
	add r0, sp, #8
	bl func_0805E6CC
	add r0, sp, #0x38
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x3c
	add r1, sp, #8
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x50
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	add r0, sp, #0x6c
	strb r5, [r0]
	add r5, sp, #0x70
	str r4, [sp, #0x70]
	strh r4, [r5, #4]
	add r0, sp, #0x78
	str r4, [sp, #0x78]
	strh r4, [r0, #4]
	add r0, sp, #0x80
	str r4, [sp, #0x80]
	strh r4, [r0, #4]
	add r0, sp, #0x88
	str r4, [r0]
	strh r4, [r0, #4]
	add r6, sp, #0x3c
	add r4, sp, #0xb0
	adds r0, r4, #0
	mov r1, r8
	bl __4ToolUi
	adds r0, r4, #0
	bl GetIconId__C4Tool
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	bl func_0805E860
	ldr r1, [sp, #0x3c]
	ldr r3, [r1]
	ldrh r2, [r6, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x40]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x90
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x90
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	adds r0, r4, #0
	ldm r0!, {r1, r2, r3}
	stm r5!, {r1, r2, r3}
	ldm r0!, {r1, r2, r7}
	stm r5!, {r1, r2, r7}
	ldm r0!, {r3, r7}
	stm r5!, {r3, r7}
	mov r0, sl
	lsls r5, r0, #1
	movs r1, #0xc3
	lsls r1, r1, #2
	adds r1, r1, r5
	mov sb, r1
	ldr r0, [sp, #0xc4]
	bl func_08008910
	ldr r1, [sp, #0x78]
	adds r6, r0, #0
	mov r3, sb
	lsls r2, r3, #5
	movs r7, #0xc0
	lsls r7, r7, #0x13
	adds r2, r2, r7
	adds r0, r4, #0
	movs r3, #0x80
	bl func_08008F0C
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08082460
	cmp r1, #0
	beq _08082440
	adds r0, r1, #0
	add r1, sp, #0x90
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08082440:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	str r5, [sp, #0xd0]
	mov r5, sl
	lsrs r5, r5, #1
	mov sl, r5
	ldr r7, [sp, #0xc8]
	lsls r7, r7, #6
	str r7, [sp, #0xd4]
	mov r0, sb
	lsls r0, r0, #0x10
	str r0, [sp, #0xcc]
	b _08082540
	.align 2, 0
_0808245C: .4byte 0x086678A0
_08082460:
	str r1, [sp, #0xd8]
	movs r0, #1
	add r1, sp, #0xb8
	str r0, [r1]
	ldr r0, [r6]
	ldr r2, [sp, #0xd8]
	subs r0, r2, r0
	asrs r4, r0, #4
	add r0, sp, #0xb4
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _0808247C
	adds r0, r1, #0
_0808247C:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0808249A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _0808249E
	mov r0, r8
	bl func_080D3BC0
	b _0808249E
_0808249A:
	movs r0, #0
	mov r8, r0
_0808249E:
	adds r5, r0, #0
	str r5, [sp, #0xdc]
	ldr r2, [r6]
	adds r3, r5, #0
	mov r4, sl
	lsls r4, r4, #1
	str r4, [sp, #0xd0]
	mov r5, sl
	lsrs r5, r5, #1
	mov sl, r5
	ldr r7, [sp, #0xc8]
	lsls r7, r7, #6
	str r7, [sp, #0xd4]
	mov r0, sb
	lsls r0, r0, #0x10
	str r0, [sp, #0xcc]
	ldr r1, [sp, #0xd8]
	cmp r2, r1
	beq _080824DE
_080824C4:
	cmp r3, #0
	beq _080824D4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080824D4:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0xd8]
	cmp r2, r0
	bne _080824C4
_080824DE:
	adds r5, r3, #0
	ldr r1, [sp, #0xb8]
	cmp r1, #1
	bne _080824FA
	cmp r5, #0
	beq _080824F6
	adds r0, r5, #0
	add r1, sp, #0x90
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080824F6:
	adds r5, #0x10
	b _0808251C
_080824FA:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _0808251A
_08082502:
	cmp r2, #0
	beq _08082512
	adds r0, r2, #0
	add r1, sp, #0x90
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08082512:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08082502
_0808251A:
	adds r5, r2, #0
_0808251C:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0808252C
_08082526:
	adds r1, #0x10
	cmp r1, r2
	bne _08082526
_0808252C:
	cmp r0, #0
	beq _08082534
	bl free
_08082534:
	ldr r0, [sp, #0xdc]
	add r0, r8
	ldr r7, [sp, #0xdc]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08082540:
	ldr r0, [sp, #0xc4]
	bl func_08008910
	ldr r1, [sp, #0x80]
	adds r6, r0, #0
	mov r0, sl
	lsls r2, r0, #5
	ldr r3, _08082580 @ =0x05000020
	adds r2, r2, r3
	add r0, sp, #0x90
	movs r3, #0x20
	bl func_08008F0C
	add r4, sp, #0x90
	mov r8, r4
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08082584
	cmp r1, #0
	beq _08082576
	adds r0, r1, #0
	mov r1, r8
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08082576:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0808264C
	.align 2, 0
_08082580: .4byte 0x05000020
_08082584:
	str r1, [sp, #0xd8]
	movs r0, #1
	add r1, sp, #0xc0
	str r0, [r1]
	ldr r0, [r6]
	ldr r3, [sp, #0xd8]
	subs r0, r3, r0
	asrs r4, r0, #4
	add r0, sp, #0xbc
	str r4, [r0]
	ldr r2, [r1]
	cmp r4, r2
	bhs _080825A0
	adds r0, r1, #0
_080825A0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080825BE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _080825C2
	mov r0, sb
	bl func_080D3BC0
	b _080825C2
_080825BE:
	movs r0, #0
	mov sb, r0
_080825C2:
	adds r5, r0, #0
	str r5, [sp, #0xdc]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0xd8]
	cmp r2, r4
	beq _080825EA
_080825D0:
	cmp r3, #0
	beq _080825E0
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080825E0:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0xd8]
	cmp r2, r5
	bne _080825D0
_080825EA:
	adds r5, r3, #0
	ldr r1, [sp, #0xc0]
	cmp r1, #1
	bne _08082606
	cmp r5, #0
	beq _08082602
	adds r0, r5, #0
	mov r1, r8
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08082602:
	adds r5, #0x10
	b _08082628
_08082606:
	adds r3, r1, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08082626
_0808260E:
	cmp r2, #0
	beq _0808261E
	adds r0, r2, #0
	mov r1, r8
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0808261E:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0808260E
_08082626:
	adds r5, r2, #0
_08082628:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08082638
_08082632:
	adds r1, #0x10
	cmp r1, r2
	bne _08082632
_08082638:
	cmp r0, #0
	beq _08082640
	bl free
_08082640:
	ldr r0, [sp, #0xdc]
	add r0, sb
	ldr r1, [sp, #0xdc]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0808264C:
	ldr r2, [sp, #0xc4]
	ldr r0, [r2, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r3, [sp, #0xd4]
	adds r0, r0, r3
	ldr r4, [sp, #0xd0]
	adds r0, r0, r4
	ldr r5, [sp, #0xcc]
	lsrs r1, r5, #0x10
	mov r2, sl
	adds r2, #1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r0, _08082688 @ =vtable_unk_080E5A28
	str r0, [sp, #8]
	add sp, #0xe0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08082688: .4byte vtable_unk_080E5A28

	thumb_func_start func_0808268C
func_0808268C: @ 0x0808268C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x64
	adds r6, r0, #0
	movs r0, #4
	str r0, [sp, #0x44]
	ldr r0, [r6, #0x1c]
	bl func_08075DD4
	adds r3, r6, #0
	adds r3, #0x20
	adds r5, r6, #0
	adds r5, #0x24
	ldr r0, [r6, #0x20]
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r3, r0
	adds r2, r0, #0
	adds r1, r5, #0
	ldr r4, [r3]
	cmp r1, r2
	beq _080826C4
_080826BE:
	adds r1, #0x10
	cmp r1, r2
	bne _080826BE
_080826C4:
	subs r0, r0, r5
	asrs r0, r0, #4
	subs r0, r4, r0
	str r0, [r3]
	movs r1, #0
	str r1, [sp, #0x48]
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r0, r6, r2
	ldr r0, [r0]
	cmp r1, r0
	blo _080826DE
	b _08082A66
_080826DE:
	ldr r3, [sp, #0x48]
	lsls r0, r3, #2
	adds r0, r0, r6
	movs r5, #0xaa
	lsls r5, r5, #2
	adds r4, r0, r5
	ldr r3, [r4]
	lsls r1, r3, #2
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r2, _08082750 @ =0x080FED8C
	add r0, sp, #0xc
	adds r1, r1, r2
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldm r1!, {r2, r7}
	stm r0!, {r2, r7}
	lsls r0, r3, #1
	adds r1, r0, r3
	lsls r0, r1, #4
	adds r0, #0xd0
	str r0, [sp, #0x4c]
	ldr r0, [sp, #0x18]
	cmp r0, #1
	bne _08082754
	ldr r0, [r6, #0x1c]
	ldr r1, [r0, #0x18]
	ldr r3, [sp, #0x44]
	lsls r4, r3, #6
	adds r1, r1, r4
	adds r1, #0x32
	ldr r0, [sp, #0x14]
	movs r5, #0x20
	str r5, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r6, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	movs r7, #0
	str r7, [sp]
	str r5, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r0, [sp, #0x44]
	adds r0, #2
	str r0, [sp, #0x58]
	ldr r1, [sp, #0x48]
	adds r1, #1
	str r1, [sp, #0x50]
	b _08082946
	.align 2, 0
_08082750: .4byte 0x080FED8C
_08082754:
	lsls r1, r1, #7
	adds r1, r1, r3
	lsls r1, r1, #2
	adds r1, r1, r6
	ldr r2, _08082818 @ =0x000006AC
	adds r1, r1, r2
	add r0, sp, #0x30
	movs r3, #0x18
	strh r3, [r0]
	movs r5, #2
	strh r5, [r0, #2]
	ldr r0, [sp, #0x30]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [r4]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #7
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r6
	ldr r7, _08082818 @ =0x000006AC
	adds r1, r1, r7
	ldr r2, [sp, #0x10]
	movs r0, #1
	mov r8, r0
	add r0, sp, #0x34
	movs r3, #0x18
	strh r3, [r0]
	strh r5, [r0, #2]
	ldr r0, [sp, #0x34]
	adds r1, #4
	str r2, [sp]
	movs r5, #0
	str r5, [sp, #4]
	mov r7, r8
	str r7, [sp, #8]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	adds r0, r6, #0
	bl func_08008910
	ldr r2, [r4]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #7
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	ldr r2, _08082818 @ =0x000006AC
	adds r1, r1, r2
	adds r1, #4
	adds r5, r0, #0
	ldr r3, [sp, #0x4c]
	lsls r2, r3, #5
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r2, r2, r4
	add r0, sp, #0x20
	movs r3, #0xc0
	lsls r3, r3, #3
	bl func_08008F0C
	add r7, sp, #0x20
	mov sb, r7
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0808281C
	cmp r1, #0
	beq _080827F6
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080827F6:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r5, [sp, #0x44]
	lsls r5, r5, #6
	str r5, [sp, #0x5c]
	ldr r7, [sp, #0x4c]
	lsls r7, r7, #0x10
	str r7, [sp, #0x54]
	ldr r0, [sp, #0x44]
	adds r0, #2
	str r0, [sp, #0x58]
	ldr r1, [sp, #0x48]
	adds r1, #1
	str r1, [sp, #0x50]
	b _08082904
	.align 2, 0
_08082818: .4byte 0x000006AC
_0808281C:
	str r1, [sp, #0x60]
	mov r2, r8
	str r2, [sp, #0x3c]
	ldr r0, [r5]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r1, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _08082836
	adds r0, r1, #0
_08082836:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08082854
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08082858
	mov r0, sl
	bl func_080D3BC0
	b _08082858
_08082854:
	movs r0, #0
	mov sl, r0
_08082858:
	adds r4, r0, #0
	mov r8, r4
	ldr r2, [r5]
	mov ip, r8
	ldr r4, [sp, #0x44]
	lsls r4, r4, #6
	str r4, [sp, #0x5c]
	ldr r7, [sp, #0x4c]
	lsls r7, r7, #0x10
	str r7, [sp, #0x54]
	ldr r0, [sp, #0x44]
	adds r0, #2
	str r0, [sp, #0x58]
	ldr r1, [sp, #0x48]
	adds r1, #1
	str r1, [sp, #0x50]
	ldr r3, [sp, #0x60]
	cmp r2, r3
	beq _0808289C
_0808287E:
	mov r4, ip
	cmp r4, #0
	beq _08082890
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_08082890:
	adds r2, #0x10
	movs r7, #0x10
	add ip, r7
	ldr r0, [sp, #0x60]
	cmp r2, r0
	bne _0808287E
_0808289C:
	mov r4, ip
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _080828B8
	cmp r4, #0
	beq _080828B4
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_080828B4:
	adds r4, #0x10
	b _080828E0
_080828B8:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080828DE
_080828C0:
	cmp r2, #0
	beq _080828D0
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080828D0:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _080828C0
_080828DE:
	adds r4, r2, #0
_080828E0:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _080828F0
_080828EA:
	adds r1, #0x10
	cmp r1, r2
	bne _080828EA
_080828F0:
	cmp r0, #0
	beq _080828F8
	bl free
_080828F8:
	mov r0, sl
	add r0, r8
	mov r2, r8
	str r2, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_08082904:
	ldr r2, [sp, #0x18]
	cmp r2, #0
	bne _08082928
	ldr r0, [r6, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r3, [sp, #0x5c]
	adds r0, r0, r3
	adds r0, #4
	ldr r4, [sp, #0x54]
	lsrs r1, r4, #0x10
	str r2, [sp]
	movs r5, #0x20
	str r5, [sp, #4]
	movs r2, #0x18
	movs r3, #2
	bl func_0804E9F4
	b _08082946
_08082928:
	ldr r0, [r6, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r7, [sp, #0x5c]
	adds r0, r0, r7
	adds r0, #8
	ldr r2, [sp, #0x54]
	lsrs r1, r2, #0x10
	movs r3, #0
	str r3, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r2, #0x18
	movs r3, #2
	bl func_0804E9F4
_08082946:
	ldr r0, [sp, #0x18]
	cmp r0, #1
	beq _08082960
	cmp r0, #1
	bgt _08082956
	cmp r0, #0
	beq _08082A08
	b _08082A50
_08082956:
	cmp r0, #2
	beq _08082988
	cmp r0, #3
	beq _080829B0
	b _08082A50
_08082960:
	add r4, sp, #0x40
	ldr r1, [sp, #0xc]
	adds r0, r4, #0
	bl __4ToolUi
	adds r0, r4, #0
	bl GetIconId__C4Tool
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r5, [sp, #0x44]
	lsls r3, r5, #3
	ldr r0, _08082984 @ =0x086678A0
	str r0, [sp]
	adds r0, r6, #0
	b _080829F2
	.align 2, 0
_08082984: .4byte 0x086678A0
_08082988:
	mov r4, sp
	adds r4, #0x41
	ldr r1, [sp, #0xc]
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetIconId__C7Article
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r7, [sp, #0x44]
	lsls r3, r7, #3
	ldr r0, _080829AC @ =0x086678A0
	str r0, [sp]
	adds r0, r6, #0
	b _080829F2
	.align 2, 0
_080829AC: .4byte 0x086678A0
_080829B0:
	ldr r0, [sp, #0xc]
	cmp r0, #4
	bne _080829C8
	ldr r0, [sp, #0x44]
	lsls r3, r0, #3
	ldr r0, _080829FC @ =0x0875352C
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0x10
	bl func_08082264
_080829C8:
	ldr r0, [sp, #0xc]
	cmp r0, #5
	bne _080829E0
	ldr r1, [sp, #0x44]
	lsls r3, r1, #3
	ldr r0, _08082A00 @ =0x0874EE38
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0x10
	bl func_08082264
_080829E0:
	ldr r0, [sp, #0xc]
	cmp r0, #6
	bne _08082A50
	ldr r2, [sp, #0x44]
	lsls r3, r2, #3
	ldr r0, _08082A04 @ =0x08755154
	str r0, [sp]
	adds r0, r6, #0
	movs r1, #0
_080829F2:
	movs r2, #0x10
	bl func_08082264
	b _08082A50
	.align 2, 0
_080829FC: .4byte 0x0875352C
_08082A00: .4byte 0x0874EE38
_08082A04: .4byte 0x08755154
_08082A08:
	adds r0, r6, #0
	movs r1, #0
	movs r2, #2
	ldr r3, [sp, #0x44]
	bl func_0808234C
	adds r0, r6, #0
	movs r1, #8
	movs r2, #4
	ldr r3, [sp, #0x44]
	bl func_0808234C
	adds r0, r6, #0
	movs r1, #0x10
	movs r2, #6
	ldr r3, [sp, #0x44]
	bl func_0808234C
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #8
	ldr r3, [sp, #0x44]
	bl func_0808234C
	adds r0, r6, #0
	movs r1, #0x20
	movs r2, #0xa
	ldr r3, [sp, #0x44]
	bl func_0808234C
	adds r0, r6, #0
	movs r1, #0x28
	movs r2, #0xc
	ldr r3, [sp, #0x44]
	bl func_0808234C
_08082A50:
	ldr r3, [sp, #0x58]
	str r3, [sp, #0x44]
	ldr r4, [sp, #0x50]
	str r4, [sp, #0x48]
	movs r5, #0xa9
	lsls r5, r5, #2
	adds r0, r6, r5
	ldr r0, [r0]
	cmp r4, r0
	bhs _08082A66
	b _080826DE
_08082A66:
	movs r0, #0
	strh r0, [r6, #0xc]
	movs r7, #0xc9
	lsls r7, r7, #3
	adds r1, r6, r7
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r6, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r6, r2]
	bl func_08075DB8
	ldr r0, [r6, #0x1c]
	ldr r1, [sp, #0x44]
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	add sp, #0x64
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_08082A9C
func_08082A9C: @ 0x08082A9C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	movs r0, #0
	mov r8, r0
	ldr r0, [r4, #8]
	ldr r1, _08082B2C @ =0x00001C38
	adds r0, r0, r1
	adds r1, r5, #0
	bl func_0800F714
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _08082B08
	ldr r0, [r4, #8]
	ldr r7, _08082B30 @ =0x00001C2C
	adds r0, r0, r7
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08082B02
	ldr r0, [r4, #8]
	adds r1, r7, #0
	adds r0, r0, r1
	bl func_0800F204
	cmp r0, #1
	bne _08082B02
	ldr r0, [r4, #8]
	adds r0, r0, r7
	bl func_0800F258
	mov r1, sp
	strb r0, [r1]
	mov r0, sp
	bl GetId__C7Article
	movs r1, #0
	cmp r0, r5
	bne _08082AFA
	movs r1, #1
_08082AFA:
	cmp r1, #0
	beq _08082B02
	movs r0, #1
	mov r8, r0
_08082B02:
	mov r1, r8
	cmp r1, #0
	beq _08082BD0
_08082B08:
	ldr r0, [r4, #8]
	ldr r1, _08082B34 @ =0x00001AA8
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0
	cmp r6, r0
	bls _08082B18
	movs r1, #1
_08082B18:
	cmp r1, #0
	beq _08082B60
	cmp r5, #0x17
	bne _08082B3C
	ldr r1, _08082B38 @ =0x080FEE68
	adds r0, r4, #0
	bl func_080CABA0
	b _08082B44
	.align 2, 0
_08082B2C: .4byte 0x00001C38
_08082B30: .4byte 0x00001C2C
_08082B34: .4byte 0x00001AA8
_08082B38: .4byte 0x080FEE68
_08082B3C:
	ldr r1, _08082B58 @ =0x080FEED8
	adds r0, r4, #0
	bl func_080CABA0
_08082B44:
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #0xa8
	bl func_08050E50
	ldr r0, _08082B5C @ =0x000006A4
	adds r1, r4, r0
	movs r0, #3
	b _08082BFE
	.align 2, 0
_08082B58: .4byte 0x080FEED8
_08082B5C: .4byte 0x000006A4
_08082B60:
	ldr r1, _08082B84 @ =0x000048DC
	adds r0, r4, r1
	str r5, [r0]
	cmp r5, #0x17
	bne _08082B94
	ldr r0, _08082B88 @ =0x000048E4
	adds r1, r4, r0
	movs r0, #5
	str r0, [r1]
	ldr r1, _08082B8C @ =0x000048E0
	adds r0, r4, r1
	str r6, [r0]
	ldr r1, _08082B90 @ =0x080FEF44
	adds r0, r4, #0
	bl func_080CABA0
	b _08082BAA
	.align 2, 0
_08082B84: .4byte 0x000048DC
_08082B88: .4byte 0x000048E4
_08082B8C: .4byte 0x000048E0
_08082B90: .4byte 0x080FEF44
_08082B94:
	ldr r0, _08082BC0 @ =0x000048E4
	adds r1, r4, r0
	movs r0, #1
	str r0, [r1]
	ldr r1, _08082BC4 @ =0x000048E0
	adds r0, r4, r1
	str r6, [r0]
	ldr r1, _08082BC8 @ =0x080FEF78
	adds r0, r4, #0
	bl func_080CABA0
_08082BAA:
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #0xa9
	bl func_08050E50
	ldr r0, _08082BCC @ =0x000006A4
	adds r1, r4, r0
	movs r0, #5
	b _08082BFE
	.align 2, 0
_08082BC0: .4byte 0x000048E4
_08082BC4: .4byte 0x000048E0
_08082BC8: .4byte 0x080FEF78
_08082BCC: .4byte 0x000006A4
_08082BD0:
	cmp r5, #0x17
	bne _08082BE4
	ldr r1, _08082BE0 @ =0x080FEFAC
	adds r0, r4, #0
	bl func_080CABA0
	b _08082BEC
	.align 2, 0
_08082BE0: .4byte 0x080FEFAC
_08082BE4:
	ldr r1, _08082C0C @ =0x080FF040
	adds r0, r4, #0
	bl func_080CABA0
_08082BEC:
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r4, r1
	movs r1, #0xa8
	bl func_08050E50
	ldr r0, _08082C10 @ =0x000006A4
	adds r1, r4, r0
	movs r0, #2
_08082BFE:
	str r0, [r1]
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08082C0C: .4byte 0x080FF040
_08082C10: .4byte 0x000006A4

	thumb_func_start func_08082C14
func_08082C14: @ 0x08082C14
	push {r4, r5, r6, lr}
	sub sp, #0x18
	adds r5, r0, #0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _08082C40 @ =0x080FED8C
	adds r2, r0, r1
	mov r1, sp
	adds r0, r2, #0
	ldm r0!, {r3, r4, r6}
	stm r1!, {r3, r4, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r0, [sp, #0xc]
	cmp r0, #1
	beq _08082C4A
	cmp r0, #1
	bgt _08082C44
	cmp r0, #0
	beq _08082C64
	b _08082C6C
	.align 2, 0
_08082C40: .4byte 0x080FED8C
_08082C44:
	cmp r0, #3
	bgt _08082C6C
	b _08082C64
_08082C4A:
	add r4, sp, #0x14
	ldr r1, [r2]
	adds r0, r4, #0
	bl __4ToolUi
	adds r0, r4, #0
	bl GetDesc__C4Tool
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_080CABEC
	b _08082C6C
_08082C64:
	ldr r1, [sp, #0x10]
	adds r0, r5, #0
	bl func_080CABEC
_08082C6C:
	add sp, #0x18
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start func_08082C74
func_08082C74: @ 0x08082C74
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r6, r1, #0
	movs r7, #1
	ldr r0, [r4, #8]
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r1, r6, #0
	bl GetFirstSlotWith__C9ToolChestUi
	adds r5, r0, #0
	movs r0, #1
	rsbs r0, r0, #0
	cmp r5, r0
	bne _08082CA6
	ldr r0, [r4, #8]
	ldr r1, _08082CE4 @ =0x00001C38
	adds r0, r0, r1
	adds r1, r6, #0
	bl func_0800F92C
	cmp r0, r5
	beq _08082CA8
_08082CA6:
	movs r7, #0
_08082CA8:
	ldr r0, [r4, #8]
	ldr r1, _08082CE8 @ =0x00001C34
	adds r0, r0, r1
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08082CDA
	ldr r0, [r4, #8]
	ldr r1, _08082CE8 @ =0x00001C34
	adds r0, r0, r1
	bl GetTool__C9ToolStack
	mov r1, sp
	strb r0, [r1]
	mov r0, sp
	bl GetId__C4Tool
	movs r1, #0
	cmp r0, r6
	bne _08082CD4
	movs r1, #1
_08082CD4:
	cmp r1, #0
	beq _08082CDA
	movs r7, #0
_08082CDA:
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08082CE4: .4byte 0x00001C38
_08082CE8: .4byte 0x00001C34

	thumb_func_start func_08082CEC
func_08082CEC: @ 0x08082CEC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x50
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080C85A0
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082D22
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082D1C
	movs r0, #0
	str r0, [r2]
_08082D1C:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082D22:
	adds r0, r7, #0
	movs r1, #0x46
	bl func_08082C74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08082D50
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082D50
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082D4A
	movs r0, #1
	str r0, [r2]
_08082D4A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082D50:
	adds r0, r7, #0
	movs r1, #0x47
	bl func_08082C74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08082D7E
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082D7E
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082D78
	movs r0, #2
	str r0, [r2]
_08082D78:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082D7E:
	adds r0, r7, #0
	movs r1, #0x48
	bl func_08082C74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08082DAC
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082DAC
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082DA6
	movs r0, #3
	str r0, [r2]
_08082DA6:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082DAC:
	ldr r0, [r7, #8]
	movs r5, #0x82
	lsls r5, r5, #3
	adds r0, r0, r5
	bl GetUpgradeLevel__C4Coop
	cmp r0, #0
	beq _08082DEA
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl method_0800C5C4__C4Coop
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08082DEA
	movs r6, #0xa9
	lsls r6, r6, #2
	adds r1, r7, r6
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082DEA
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082DE4
	movs r0, #4
	str r0, [r2]
_08082DE4:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082DEA:
	ldr r0, [r7, #8]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetUpgradeLevel__C4Barn
	cmp r0, #0
	beq _08082E5E
	ldr r0, [r7, #8]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl method_0800CF00__C4Barn
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08082E2C
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082E2C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082E26
	movs r0, #5
	str r0, [r2]
_08082E26:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082E2C:
	ldr r0, [r7, #8]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	bl method_0800CF08__C4Barn
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08082E5E
	movs r5, #0xa9
	lsls r5, r5, #2
	adds r1, r7, r5
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082E5E
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082E58
	movs r0, #6
	str r0, [r2]
_08082E58:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082E5E:
	movs r6, #0xa9
	lsls r6, r6, #2
	adds r1, r7, r6
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082E7E
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082E78
	movs r0, #7
	str r0, [r2]
_08082E78:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082E7E:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082E9E
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082E98
	movs r0, #8
	str r0, [r2]
_08082E98:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082E9E:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082EBE
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082EB8
	movs r0, #9
	str r0, [r2]
_08082EB8:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082EBE:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08082EDE
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08082ED8
	movs r0, #0xa
	str r0, [r2]
_08082ED8:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08082EDE:
	adds r0, r7, #0
	bl func_0808268C
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r4, #0xaa
	lsls r4, r4, #2
	adds r0, r0, r4
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_08082C14
	adds r0, r7, #0
	bl func_08008918
	add r6, sp, #0x24
	movs r1, #0x3f
	strh r1, [r6]
	adds r0, #0x50
	strh r1, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _08082F84 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0x28]
	ldr r1, _08082F88 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x28]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r5, #0
	mov r8, r5
	mov sb, r6

	thumb_func_start sub_08082F50
sub_08082F50: @ 0x08082F50
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	ldr r3, [sp, #0x28]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _08082F6C
	bl _08083A64
_08082F6C:
	mov r6, r8
	cmp r6, #0
	beq _08082F8C
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	movs r0, #0
	bl _08083A6E
	.align 2, 0
_08082F84: .4byte vtable_unk_080E5B80
_08082F88: .4byte 0x00000889
_08082F8C:
	ldr r1, _08082FA4 @ =0x000006A4
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0xc
	bls _08082F9A
	bl _08083A64
_08082F9A:
	lsls r0, r0, #2
	ldr r1, _08082FA8 @ =_08082FAC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08082FA4: .4byte 0x000006A4
_08082FA8: .4byte _08082FAC
_08082FAC: @ jump table
	.4byte _08082FE0 @ case 0
	.4byte _080831BC @ case 1
	.4byte _080832E8 @ case 2
	.4byte _08083318 @ case 3
	.4byte _0808333C @ case 4
	.4byte _08083368 @ case 5
	.4byte _080833B0 @ case 6
	.4byte _08083A64 @ case 7
	.4byte _08083528 @ case 8
	.4byte _080837A8 @ case 9
	.4byte _080838B8 @ case 10
	.4byte _080839EC @ case 11
	.4byte _08083A2C @ case 12
_08082FE0:
	ldr r0, [r7, #0x14]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	beq _08082FFA
	lsls r0, r1, #2
	adds r0, r0, r7
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_08082C14
_08082FFA:
	ldr r3, _08083038 @ =0x000006A1
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _08083006
	b _08083158
_08083006:
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r4, #0xaa
	lsls r4, r4, #2
	adds r0, r0, r4
	ldr r3, [r0]
	lsls r4, r3, #2
	adds r1, r4, r3
	lsls r1, r1, #2
	ldr r2, _0808303C @ =0x080FED8C
	add r0, sp, #0x10
	adds r1, r1, r2
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldm r1!, {r5, r6}
	stm r0!, {r5, r6}
	cmp r3, #0xa
	bls _0808302E
	b _0808319C
_0808302E:
	ldr r0, _08083040 @ =0x08083044
	adds r0, r4, r0
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08083038: .4byte 0x000006A1
_0808303C: .4byte 0x080FED8C
_08083040: .4byte 0x08083044
_08083044:
	.byte 0x70, 0x30, 0x08, 0x08, 0x94, 0x30, 0x08, 0x08, 0x94, 0x30, 0x08, 0x08
	.byte 0x94, 0x30, 0x08, 0x08, 0x40, 0x31, 0x08, 0x08, 0x40, 0x31, 0x08, 0x08, 0x40, 0x31, 0x08, 0x08
	.byte 0x4C, 0x31, 0x08, 0x08, 0x4C, 0x31, 0x08, 0x08, 0x4C, 0x31, 0x08, 0x08, 0x4C, 0x31, 0x08, 0x08
	.byte 0x06, 0x49, 0x38, 0x1C, 0x47, 0xF0, 0x94, 0xFD, 0xD2, 0x21, 0x89, 0x00, 0x78, 0x18, 0xA8, 0x21
	.byte 0xCD, 0xF7, 0xE6, 0xFE, 0x02, 0x4A, 0xB9, 0x18, 0x08, 0x20, 0x86, 0xE0, 0xD0, 0xF0, 0x0F, 0x08
	.byte 0xA4, 0x06, 0x00, 0x00, 0xBB, 0x68, 0x0C, 0x4C, 0x18, 0x19, 0x01, 0x68, 0x00, 0x22, 0x06, 0x98
	.byte 0x88, 0x42, 0x00, 0xD9, 0x01, 0x22, 0x00, 0x2A, 0x14, 0xD0, 0x08, 0x49, 0x38, 0x1C, 0x47, 0xF0
	.byte 0x77, 0xFD, 0xD2, 0x25, 0xAD, 0x00, 0x78, 0x19, 0xA8, 0x21, 0xCD, 0xF7, 0xC9, 0xFE, 0x04, 0x4E
	.byte 0xB9, 0x19, 0x04, 0x20, 0x69, 0xE0, 0x00, 0x00, 0xA8, 0x1A, 0x00, 0x00, 0x0C, 0xF1, 0x0F, 0x08
	.byte 0xA4, 0x06, 0x00, 0x00, 0x13, 0x49, 0x58, 0x18, 0x04, 0x99, 0x8C, 0xF7, 0x59, 0xFC, 0x05, 0x1C
	.byte 0xB8, 0x68, 0x11, 0x4A, 0x80, 0x18, 0x8A, 0xF7, 0xA5, 0xFD, 0x00, 0x06, 0x00, 0x0E, 0x44, 0x42
	.byte 0x04, 0x43, 0xE4, 0x0F, 0xB8, 0x68, 0xE0, 0x23, 0x9B, 0x00, 0xC0, 0x18, 0x04, 0x99, 0x88, 0xF7
	.byte 0x87, 0xF9, 0x2D, 0x19, 0xC5, 0x42, 0x15, 0xD1, 0xD2, 0x24, 0xA4, 0x00, 0x38, 0x19, 0xA8, 0x21
	.byte 0xCD, 0xF7, 0x9E, 0xFE, 0x05, 0x49, 0x38, 0x1C, 0x47, 0xF0, 0x42, 0xFD, 0x04, 0x4D, 0x79, 0x19
	.byte 0x04, 0x20, 0x3A, 0xE0, 0x38, 0x1C, 0x00, 0x00, 0x34, 0x1C, 0x00, 0x00, 0x38, 0xF1, 0x0F, 0x08
	.byte 0xA4, 0x06, 0x00, 0x00, 0x01, 0x4E, 0xB9, 0x19, 0x01, 0x20, 0x2E, 0xE0, 0xA4, 0x06, 0x00, 0x00
	.byte 0x06, 0x9A, 0x38, 0x1C, 0x17, 0x21, 0xFF, 0xF7, 0xA9, 0xFC, 0x27, 0xE0, 0x06, 0x9A, 0x38, 0x1C
	.byte 0x16, 0x21, 0xFF, 0xF7, 0xA3, 0xFC, 0x21, 0xE0
_08083158:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0808319C
	movs r1, #0xd5
	lsls r1, r1, #3
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08083180
	ldr r1, _0808317C @ =0x080FF15C
	adds r0, r7, #0
	bl func_080CABA0
	b _08083188
	.align 2, 0
_0808317C: .4byte 0x080FF15C
_08083180:
	ldr r1, _080831B4 @ =0x080FF178
	adds r0, r7, #0
	bl func_080CABA0
_08083188:
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r7, r2
	movs r1, #0xa8
	bl func_08050E50
	ldr r3, _080831B8 @ =0x000006A4
	adds r1, r7, r3
	movs r0, #0xb
	str r0, [r1]
_0808319C:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_080C9020
	bl _08083A64
	.align 2, 0
_080831B4: .4byte 0x080FF178
_080831B8: .4byte 0x000006A4
_080831BC:
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r5, #0xaa
	lsls r5, r5, #2
	adds r0, r0, r5
	ldr r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _08083228 @ =0x080FED8C
	add r0, sp, #0x10
	adds r1, r1, r2
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r1!, {r4, r5}
	stm r0!, {r4, r5}
	ldr r0, [r7, #8]
	ldr r6, _0808322C @ =0x00001AA8
	adds r0, r0, r6
	ldr r1, [sp, #0x18]
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	ldr r0, [r7, #8]
	ldr r1, _08083230 @ =0x00001C34
	adds r0, r0, r1
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08083234
	ldr r5, [r7, #8]
	ldr r2, _08083230 @ =0x00001C34
	adds r5, r5, r2
	add r4, sp, #0x40
	ldr r1, [sp, #0x10]
	adds r0, r4, #0
	bl __4ToolUi
	ldrb r1, [r4]
	mov r0, sb
	movs r2, #1
	bl __9ToolStackG4ToolUi
	adds r0, r5, #0
	mov r1, sb
	movs r2, #2
	bl memcpy
	b _08083252
	.align 2, 0
_08083228: .4byte 0x080FED8C
_0808322C: .4byte 0x00001AA8
_08083230: .4byte 0x00001C34
_08083234:
	ldr r0, [r7, #8]
	ldr r3, _0808325C @ =0x00001C38
	adds r0, r0, r3
	ldr r1, [sp, #0x10]
	bl func_0800F990
	cmp r0, #0
	beq _08083264
	ldr r0, [r7, #8]
	ldr r4, _0808325C @ =0x00001C38
	adds r0, r0, r4
	ldr r1, [sp, #0x10]
	movs r2, #1
	bl func_0800FEC8
_08083252:
	ldr r1, _08083260 @ =0x080FF1A0
	adds r0, r7, #0
	bl func_080CABA0
	b _0808327C
	.align 2, 0
_0808325C: .4byte 0x00001C38
_08083260: .4byte 0x080FF1A0
_08083264:
	ldr r0, [r7, #8]
	movs r5, #0xe0
	lsls r5, r5, #2
	adds r0, r0, r5
	ldr r1, [sp, #0x10]
	movs r2, #1
	bl AddAmountOf__9ToolChestUiUi
	ldr r1, _080832E0 @ =0x080FF1B0
	adds r0, r7, #0
	bl func_080CABA0
_0808327C:
	movs r6, #0xd2
	lsls r6, r6, #2
	adds r0, r7, r6
	movs r1, #0xa9
	bl func_08050E50
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r3, r1, r0
	adds r4, r1, #0
	ldr r0, [r4]
	cmp r0, #0
	beq _080832BC
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r4, r0
	adds r1, r3, #4
	cmp r1, r0
	beq _080832B6
	cmp r0, r1
	beq _080832B6
	subs r2, r0, r1
	adds r0, r3, #0
	bl memmove
_080832B6:
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
_080832BC:
	adds r0, r7, #0
	bl func_0808268C
	movs r2, #0xd5
	lsls r2, r2, #3
	adds r1, r7, r2
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	str r2, [r7, #0x10]
	subs r0, #2
	str r0, [r7, #0x14]
	ldr r3, _080832E4 @ =0x000006A4
	adds r1, r7, r3
	movs r0, #2
	str r0, [r1]
	b _08083A64
	.align 2, 0
_080832E0: .4byte 0x080FF1B0
_080832E4: .4byte 0x000006A4
_080832E8:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #3
	beq _080832F6
	b _08083A64
_080832F6:
	ldr r1, _08083310 @ =0x080FF200
	adds r0, r7, #0
	bl func_080CABA0
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r7, r5
	movs r1, #0xa8
	bl func_08050E50
	ldr r6, _08083314 @ =0x000006A4
	adds r1, r7, r6
	b _08083764
	.align 2, 0
_08083310: .4byte 0x080FF200
_08083314: .4byte 0x000006A4
_08083318:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #3
	beq _08083326
	b _08083A64
_08083326:
	ldr r1, _08083334 @ =0x080FF200
	adds r0, r7, #0
	bl func_080CABA0
	ldr r2, _08083338 @ =0x000006A4
	adds r1, r7, r2
	b _08083764
	.align 2, 0
_08083334: .4byte 0x080FF200
_08083338: .4byte 0x000006A4
_0808333C:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #3
	beq _0808334A
	b _08083A64
_0808334A:
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	bl func_08050E5C
	ldr r5, _08083364 @ =0x000006A4
	adds r1, r7, r5
	movs r0, #0
	str r0, [r1]
	subs r0, #1
	str r0, [r7, #0x14]
	b _08083A64
	.align 2, 0
_08083364: .4byte 0x000006A4
_08083368:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r7, r6
	ldr r0, [r0]
	cmp r0, #3
	beq _08083376
	b _08083A64
_08083376:
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r1, _080833A4 @ =0x080FF228
	ldr r2, _080833A8 @ =0x080FF230
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r3, #0
	bl func_08050E0C
	adds r0, r4, #0
	bl func_08050E5C
	ldr r2, _080833AC @ =0x000006A4
	adds r1, r7, r2
	movs r0, #6
	str r0, [r1]
	b _08083A64
	.align 2, 0
_080833A4: .4byte 0x080FF228
_080833A8: .4byte 0x080FF230
_080833AC: .4byte 0x000006A4
_080833B0:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r5, [r0]
	cmp r5, #3
	beq _080833BE
	b _08083A64
_080833BE:
	movs r6, #0xd2
	lsls r6, r6, #2
	adds r4, r7, r6
	adds r0, r4, #0
	bl func_08050DF0
	cmp r0, #1
	beq _080833D6
	cmp r0, #2
	bne _080833D4
	b _08083508
_080833D4:
	b _08083A64
_080833D6:
	ldr r1, _08083408 @ =0x080FF240
	adds r0, r7, #0
	bl func_080CABA0
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r0, [r0]
	subs r0, #4
	cmp r0, #6
	bls _080833FC
	b _080834E6
_080833FC:
	lsls r0, r0, #2
	ldr r1, _0808340C @ =_08083410
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08083408: .4byte 0x080FF240
_0808340C: .4byte _08083410
_08083410: @ jump table
	.4byte _0808342C @ case 0
	.4byte _08083448 @ case 1
	.4byte _08083464 @ case 2
	.4byte _08083480 @ case 3
	.4byte _0808349C @ case 4
	.4byte _080834B8 @ case 5
	.4byte _080834D4 @ case 6
_0808342C:
	ldr r0, [r7, #8]
	ldr r2, _08083440 @ =0x00001DAC
	adds r0, r0, r2
	ldr r3, _08083444 @ =0x000048E4
	adds r1, r7, r3
	ldr r2, [r1]
	movs r1, #0x23
	bl func_0809EE20
	b _080834E6
	.align 2, 0
_08083440: .4byte 0x00001DAC
_08083444: .4byte 0x000048E4
_08083448:
	ldr r0, [r7, #8]
	ldr r4, _0808345C @ =0x00001DAC
	adds r0, r0, r4
	ldr r5, _08083460 @ =0x000048E4
	adds r1, r7, r5
	ldr r2, [r1]
	movs r1, #0x24
	bl func_0809EE20
	b _080834E6
	.align 2, 0
_0808345C: .4byte 0x00001DAC
_08083460: .4byte 0x000048E4
_08083464:
	ldr r0, [r7, #8]
	ldr r6, _08083478 @ =0x00001DAC
	adds r0, r0, r6
	ldr r2, _0808347C @ =0x000048E4
	adds r1, r7, r2
	ldr r2, [r1]
	movs r1, #0x25
	bl func_0809EE20
	b _080834E6
	.align 2, 0
_08083478: .4byte 0x00001DAC
_0808347C: .4byte 0x000048E4
_08083480:
	ldr r0, [r7, #8]
	ldr r3, _08083494 @ =0x00001DAC
	adds r0, r0, r3
	ldr r4, _08083498 @ =0x000048E4
	adds r1, r7, r4
	ldr r2, [r1]
	movs r1, #0x20
	bl func_0809EE20
	b _080834E6
	.align 2, 0
_08083494: .4byte 0x00001DAC
_08083498: .4byte 0x000048E4
_0808349C:
	ldr r0, [r7, #8]
	ldr r5, _080834B0 @ =0x00001DAC
	adds r0, r0, r5
	ldr r6, _080834B4 @ =0x000048E4
	adds r1, r7, r6
	ldr r2, [r1]
	movs r1, #0x21
	bl func_0809EE20
	b _080834E6
	.align 2, 0
_080834B0: .4byte 0x00001DAC
_080834B4: .4byte 0x000048E4
_080834B8:
	ldr r0, [r7, #8]
	ldr r1, _080834CC @ =0x00001DAC
	adds r0, r0, r1
	ldr r2, _080834D0 @ =0x000048E4
	adds r1, r7, r2
	ldr r2, [r1]
	movs r1, #0x1f
	bl func_0809EE20
	b _080834E6
	.align 2, 0
_080834CC: .4byte 0x00001DAC
_080834D0: .4byte 0x000048E4
_080834D4:
	ldr r0, [r7, #8]
	ldr r3, _080834FC @ =0x00001DAC
	adds r0, r0, r3
	ldr r4, _08083500 @ =0x000048E4
	adds r1, r7, r4
	ldr r2, [r1]
	movs r1, #0x22
	bl func_0809EE20
_080834E6:
	ldr r5, _08083504 @ =0x000006A4
	adds r1, r7, r5
	movs r0, #0xa
	str r0, [r1]
	movs r6, #0xd5
	lsls r6, r6, #3
	adds r1, r7, r6
	movs r0, #1
	strb r0, [r1]
	b _08083A64
	.align 2, 0
_080834FC: .4byte 0x00001DAC
_08083500: .4byte 0x000048E4
_08083504: .4byte 0x000006A4
_08083508:
	ldr r1, _08083520 @ =0x080FF270
	adds r0, r7, #0
	bl func_080CABA0
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	ldr r1, _08083524 @ =0x000006A4
	adds r0, r7, r1
	str r5, [r0]
	b _08083A64
	.align 2, 0
_08083520: .4byte 0x080FF270
_08083524: .4byte 0x000006A4
_08083528:
	movs r2, #0xd4
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #3
	beq _08083536
	b _08083A64
_08083536:
	ldr r0, [r7, #8]
	ldr r3, _08083568 @ =0x00001C34
	adds r0, r0, r3
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08083560
	ldr r0, [r7, #8]
	ldr r4, _08083568 @ =0x00001C34
	adds r0, r0, r4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x41
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x2f
	ble _080835E8
_08083560:
	movs r4, #0
	ldr r5, _0808356C @ =0x00001C38
	b _080835A6
	.align 2, 0
_08083568: .4byte 0x00001C34
_0808356C: .4byte 0x00001C38
_08083570:
	ldr r0, [r7, #8]
	ldr r6, _080835DC @ =0x00001C38
	adds r0, r0, r6
	adds r1, r4, #0
	bl func_0800FE18
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080835A4
	ldr r0, [r7, #8]
	adds r0, r0, r5
	adds r1, r4, #0
	bl func_0800FE18
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x42
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x2f
	ble _080835B2
_080835A4:
	adds r4, #1
_080835A6:
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl func_0800F5F8
	cmp r4, r0
	blo _08083570
_080835B2:
	ldr r0, [r7, #8]
	ldr r1, _080835DC @ =0x00001C38
	adds r0, r0, r1
	bl func_0800F5F8
	cmp r4, r0
	bne _080835E8
	ldr r1, _080835E0 @ =0x080FF29C
	adds r0, r7, #0
	bl func_080CABA0
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r7, r2
	movs r1, #0xa8
	bl func_08050E50
	ldr r3, _080835E4 @ =0x000006A4
	adds r1, r7, r3
	b _08083764
	.align 2, 0
_080835DC: .4byte 0x00001C38
_080835E0: .4byte 0x080FF29C
_080835E4: .4byte 0x000006A4
_080835E8:
	ldr r0, [r7, #8]
	ldr r4, _0808368C @ =0x00001C2C
	adds r0, r0, r4
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08083686
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800F204
	cmp r0, #1
	bne _08083686
	movs r5, #0
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x43
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x12
	beq _08083682
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x44
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x13
	beq _08083682
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x45
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x14
	beq _08083682
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x46
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x15
	beq _08083682
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x47
	strb r1, [r0]
	bl GetId__C7Article
	movs r1, #0x1c
	eors r0, r1
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r5, r1, #0x1f
_08083682:
	cmp r5, #0
	beq _08083778
_08083686:
	movs r4, #0
	ldr r5, _08083690 @ =0x00001C38
	b _08083732
	.align 2, 0
_0808368C: .4byte 0x00001C2C
_08083690: .4byte 0x00001C38
_08083694:
	movs r6, #0
	ldr r0, [r7, #8]
	ldr r1, _0808376C @ =0x00001C38
	adds r0, r0, r1
	adds r1, r4, #0
	bl func_0800FCDC
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0x48
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x12
	beq _0808372A
	ldr r0, [r7, #8]
	adds r0, r0, r5
	adds r1, r4, #0
	bl func_0800FCDC
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x49
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x13
	beq _0808372A
	ldr r0, [r7, #8]
	adds r0, r0, r5
	adds r1, r4, #0
	bl func_0800FCDC
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x4a
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x14
	beq _0808372A
	ldr r0, [r7, #8]
	adds r0, r0, r5
	adds r1, r4, #0
	bl func_0800FCDC
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x4b
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x15
	beq _0808372A
	ldr r0, [r7, #8]
	adds r0, r0, r5
	adds r1, r4, #0
	bl func_0800FCDC
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0x4c
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x1c
	bne _0808372C
_0808372A:
	movs r6, #1
_0808372C:
	cmp r6, #0
	bne _0808373E
	adds r4, #1
_08083732:
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl func_0800F5F8
	cmp r4, r0
	blo _08083694
_0808373E:
	ldr r0, [r7, #8]
	ldr r2, _0808376C @ =0x00001C38
	adds r0, r0, r2
	bl func_0800F5F8
	cmp r4, r0
	bne _08083778
	ldr r1, _08083770 @ =0x080FF2EC
	adds r0, r7, #0
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0xa8
	bl func_08050E50
	ldr r4, _08083774 @ =0x000006A4
	adds r1, r7, r4
_08083764:
	movs r0, #4
	str r0, [r1]
	b _08083A64
	.align 2, 0
_0808376C: .4byte 0x00001C38
_08083770: .4byte 0x080FF2EC
_08083774: .4byte 0x000006A4
_08083778:
	ldr r0, [sp, #0x28]
	ldr r1, _080837A0 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x28]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r5, _080837A4 @ =0x000006A4
	adds r1, r7, r5
	movs r0, #0xc
	str r0, [r1]
	b _08083A64
	.align 2, 0
_080837A0: .4byte 0x00000889
_080837A4: .4byte 0x000006A4
_080837A8:
	ldr r6, _080837C8 @ =0x000048D8
	adds r0, r7, r6
	ldr r0, [r0]
	lsrs r2, r0, #3
	ldr r1, _080837CC @ =0x000048DC
	adds r0, r7, r1
	ldr r0, [r0]
	subs r0, #0x12
	cmp r0, #0xa
	bhi _08083810
	lsls r0, r0, #2
	ldr r1, _080837D0 @ =_080837D4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080837C8: .4byte 0x000048D8
_080837CC: .4byte 0x000048DC
_080837D0: .4byte _080837D4
_080837D4: @ jump table
	.4byte _08083810 @ case 0
	.4byte _08083800 @ case 1
	.4byte _08083804 @ case 2
	.4byte _08083808 @ case 3
	.4byte _08083810 @ case 4
	.4byte _08083810 @ case 5
	.4byte _08083810 @ case 6
	.4byte _08083810 @ case 7
	.4byte _08083810 @ case 8
	.4byte _08083810 @ case 9
	.4byte _0808380C @ case 10
_08083800:
	movs r4, #1
	b _08083812
_08083804:
	movs r4, #2
	b _08083812
_08083808:
	movs r4, #3
	b _08083812
_0808380C:
	movs r4, #4
	b _08083812
_08083810:
	movs r4, #0
_08083812:
	lsls r1, r2, #2
	adds r1, r1, r2
	adds r1, r1, r4
	adds r1, #1
	ldr r0, [r7, #8]
	ldr r2, _08083844 @ =0x00001DAC
	adds r0, r0, r2
	ldr r3, _08083848 @ =0x000048E4
	adds r2, r7, r3
	ldr r2, [r2]
	bl func_0809EE20
	movs r2, #1
	ldr r5, _0808384C @ =0x000048D8
	adds r0, r7, r5
	ldr r0, [r0]
	lsrs r0, r0, #3
	cmp r0, #5
	bhi _08083882
	lsls r0, r0, #2
	ldr r1, _08083850 @ =_08083854
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08083844: .4byte 0x00001DAC
_08083848: .4byte 0x000048E4
_0808384C: .4byte 0x000048D8
_08083850: .4byte _08083854
_08083854: @ jump table
	.4byte _0808386C @ case 0
	.4byte _08083870 @ case 1
	.4byte _08083874 @ case 2
	.4byte _08083878 @ case 3
	.4byte _0808387C @ case 4
	.4byte _08083880 @ case 5
_0808386C:
	movs r2, #1
	b _08083882
_08083870:
	movs r2, #0
	b _08083882
_08083874:
	movs r2, #2
	b _08083882
_08083878:
	movs r2, #3
	b _08083882
_0808387C:
	movs r2, #4
	b _08083882
_08083880:
	movs r2, #5
_08083882:
	ldr r6, _080838AC @ =0x000048D8
	adds r0, r7, r6
	ldr r0, [r0]
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _080838A2
	ldr r0, [r7, #8]
	ldr r1, _080838B0 @ =0x00001BD8
	adds r0, r0, r1
	adds r1, r2, #0
	bl func_0800EB2C
	adds r1, r4, #1
	bl func_0800EFB4
_080838A2:
	ldr r2, _080838B4 @ =0x000006A4
	adds r1, r7, r2
	movs r0, #0xa
	str r0, [r1]
	b _08083A64
	.align 2, 0
_080838AC: .4byte 0x000048D8
_080838B0: .4byte 0x00001BD8
_080838B4: .4byte 0x000006A4
_080838B8:
	movs r5, #0
	ldr r0, [r7, #8]
	ldr r4, _08083910 @ =0x00001C2C
	adds r0, r0, r4
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080838FE
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800F204
	cmp r0, #1
	bne _080838FE
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x4d
	strb r1, [r0]
	bl GetId__C7Article
	movs r2, #0
	ldr r3, _08083914 @ =0x000048DC
	adds r1, r7, r3
	ldr r1, [r1]
	cmp r0, r1
	bne _080838F8
	movs r2, #1
_080838F8:
	cmp r2, #0
	beq _080838FE
	movs r5, #1
_080838FE:
	cmp r5, #0
	beq _08083918
	ldr r0, [r7, #8]
	ldr r4, _08083910 @ =0x00001C2C
	adds r0, r0, r4
	bl func_0800F390
	b _0808393E
	.align 2, 0
_08083910: .4byte 0x00001C2C
_08083914: .4byte 0x000048DC
_08083918:
	ldr r0, [r7, #8]
	ldr r4, _080839CC @ =0x00001C38
	adds r0, r0, r4
	ldr r5, _080839D0 @ =0x000048DC
	adds r1, r7, r5
	ldr r1, [r1]
	bl func_0800F714
	adds r1, r0, #0
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0x2c
	bl __12RucksackItem
	ldr r0, [sp, #0x2c]
	str r0, [r4]
_0808393E:
	ldr r0, [r7, #8]
	ldr r6, _080839D4 @ =0x00001AA8
	adds r0, r0, r6
	ldr r2, _080839D8 @ =0x000048E0
	adds r1, r7, r2
	ldr r1, [r1]
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	ldr r6, [r7, #8]
	ldr r3, _080839DC @ =0x00001BD8
	adds r6, r6, r3
	add r1, sp, #0x38
	movs r3, #7
	ldrh r2, [r1]
	ldr r4, _080839E0 @ =0xFFFFFC00
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r3
	strh r0, [r1]
	movs r5, #0xa0
	ldrb r3, [r1, #1]
	movs r2, #3
	adds r0, r2, #0
	ands r0, r3
	orrs r0, r5
	strb r0, [r1, #1]
	movs r5, #4
	ldrh r3, [r1, #2]
	adds r0, r4, #0
	ands r0, r3
	orrs r0, r5
	strh r0, [r1, #2]
	movs r3, #0xe0
	ldrb r0, [r1, #3]
	ands r2, r0
	orrs r2, r3
	strb r2, [r1, #3]
	movs r2, #1
	ldrh r0, [r1, #4]
	ands r4, r0
	orrs r4, r2
	strh r4, [r1, #4]
	add r4, sp, #0x30
	movs r5, #0
	adds r0, r4, #0
	movs r2, #6
	bl memcpy
	strb r5, [r4, #6]
	adds r0, r6, #0
	adds r1, r4, #0
	bl func_0800EB34
	ldr r1, _080839E4 @ =0x080FF240
	adds r0, r7, #0
	bl func_080CABA0
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0xa8
	bl func_08050E50
	ldr r5, _080839E8 @ =0x000006A4
	adds r1, r7, r5
	movs r0, #0xb
	str r0, [r1]
	b _08083A64
	.align 2, 0
_080839CC: .4byte 0x00001C38
_080839D0: .4byte 0x000048DC
_080839D4: .4byte 0x00001AA8
_080839D8: .4byte 0x000048E0
_080839DC: .4byte 0x00001BD8
_080839E0: .4byte 0xFFFFFC00
_080839E4: .4byte 0x080FF240
_080839E8: .4byte 0x000006A4
_080839EC:
	movs r6, #0xd4
	lsls r6, r6, #2
	adds r0, r7, r6
	ldr r0, [r0]
	cmp r0, #3
	bne _08083A64
	ldr r2, [sp, #0x28]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08083A64
	movs r0, #1
	mov r8, r0
	ldr r1, _08083A28 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x28]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	b _08083A64
	.align 2, 0
_08083A28: .4byte 0x00000889
_08083A2C:
	ldr r3, [sp, #0x28]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08083A64
	movs r1, #0xd5
	lsls r1, r1, #3
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08083A54
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	movs r0, #2
	b _08083A6E
_08083A54:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	movs r0, #1
	b _08083A6E
_08083A64:
	adds r0, r7, #0
	bl func_080C96C4
	bl sub_08082F50
_08083A6E:
	add sp, #0x50
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_08083A7C
func_08083A7C: @ 0x08083A7C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r4, r0, #0
	mov r8, r1
	mov sb, r2
	adds r5, r3, #0
	ldr r6, [sp, #0x28]
	ldr r7, [sp, #0x2c]
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r0, _08083AE4 @ =vtable_unk_080E7D04
	str r0, [r4]
	ldr r0, _08083AE8 @ =0x000048E8
	bl __builtin_new
	str r7, [sp]
	ldr r1, [sp, #0x30]
	str r1, [sp, #4]
	ldr r2, [sp, #0x34]
	str r2, [sp, #8]
	mov r1, sb
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080821D0
	str r0, [r4, #4]
	mov r0, r8
	ldr r1, [r0]
	movs r0, #0
	mov r2, r8
	str r0, [r2]
	str r1, [r4, #8]
	str r6, [r4, #0xc]
	str r7, [r4, #0x10]
	ldr r0, [sp, #0x30]
	str r0, [r4, #0x14]
	ldr r1, [sp, #0x34]
	str r1, [r4, #0x18]
	mov r2, sb
	str r2, [r4, #0x1c]
	adds r0, r4, #0
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08083AE4: .4byte vtable_unk_080E7D04
_08083AE8: .4byte 0x000048E8

	thumb_func_start func_08083AEC
func_08083AEC: @ 0x08083AEC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08083B28 @ =vtable_unk_080E7D04
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08083B08
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08083B08:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _08083B1A
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08083B1A:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08083B28: .4byte vtable_unk_080E7D04

	thumb_func_start func_08083B2C
func_08083B2C: @ 0x08083B2C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x18
	adds r7, r0, #0
	adds r6, r1, #0
	ldr r0, [r6, #4]
	bl func_08082CEC
	adds r1, r0, #0
	cmp r1, #0
	bne _08083B48
	ldr r0, [r6, #8]
	str r1, [r6, #8]
	str r0, [r7]
	b _08083BC6
_08083B48:
	cmp r1, #1
	bne _08083B8C
	movs r0, #0x10
	bl __builtin_new
	ldr r4, [r6, #8]
	movs r2, #0
	str r2, [r6, #8]
	ldr r3, [r6, #0x1c]
	ldr r1, _08083B88 @ =vtable_unk_080E7CF4
	str r1, [r0]
	str r2, [sp, #4]
	str r4, [r0, #4]
	str r3, [r0, #8]
	strb r2, [r0, #0xc]
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #8]
	str r0, [sp, #0xc]
	str r2, [r1]
	str r0, [r7]
	ldr r1, [sp]
	cmp r1, #0
	beq _08083BC6
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
	b _08083BC6
	.align 2, 0
_08083B88: .4byte vtable_unk_080E7CF4
_08083B8C:
	movs r0, #0x10
	bl __builtin_new
	ldr r5, [r6, #8]
	movs r2, #0
	str r2, [r6, #8]
	ldr r3, [r6, #0x1c]
	movs r4, #1
	ldr r1, _08083BD0 @ =vtable_unk_080E7CF4
	str r1, [r0]
	str r2, [sp, #4]
	str r5, [r0, #4]
	str r3, [r0, #8]
	strb r4, [r0, #0xc]
	str r0, [sp]
	mov r1, sp
	str r1, [sp, #0x10]
	str r0, [sp, #0x14]
	str r2, [r1]
	str r0, [r7]
	ldr r1, [sp]
	cmp r1, #0
	beq _08083BC6
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08083BC6:
	adds r0, r7, #0
	add sp, #0x18
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08083BD0: .4byte vtable_unk_080E7CF4

	thumb_func_start func_08083BD4
func_08083BD4: @ 0x08083BD4
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	bl func_080C7F58
	ldr r0, _08083C3C @ =vtable_unk_080E7D14
	str r0, [r5, #4]
	ldr r1, _08083C40 @ =0x000006A4
	adds r0, r5, r1
	movs r1, #0
	strb r1, [r0]
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r5, r2
	str r1, [r0]
	adds r2, #4
	adds r0, r5, r2
	strb r1, [r0]
	adds r2, #4
	adds r0, r5, r2
	str r1, [r0]
	movs r0, #0x13
	subs r1, #1
_08083C00:
	subs r0, #1
	cmp r0, r1
	bne _08083C00
	ldr r0, _08083C44 @ =0x00006170
	adds r6, r5, r0
	ldr r7, _08083C48 @ =0x080FF838
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x7f
	bls _08083C1A
	movs r4, #0x7f
_08083C1A:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	ldr r2, _08083C4C @ =0x000061F0
	adds r1, r5, r2
	movs r0, #0
	strb r0, [r1]
	adds r0, r5, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08083C3C: .4byte vtable_unk_080E7D14
_08083C40: .4byte 0x000006A4
_08083C44: .4byte 0x00006170
_08083C48: .4byte 0x080FF838
_08083C4C: .4byte 0x000061F0

	thumb_func_start func_08083C50
func_08083C50: @ 0x08083C50
	push {lr}
	ldr r2, _08083C60 @ =vtable_unk_080E7D14
	str r2, [r0, #4]
	bl func_080C8360
	pop {r0}
	bx r0
	.align 2, 0
_08083C60: .4byte vtable_unk_080E7D14

	thumb_func_start func_08083C64
func_08083C64: @ 0x08083C64
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xe4
	adds r7, r0, #0
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r2, r7, r0
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r2]
	lsls r1, r1, #2
	adds r1, #4
	adds r1, r2, r1
	subs r1, r1, r0
	asrs r1, r1, #2
	ldr r0, [r2]
	subs r0, r0, r1
	str r0, [r2]
	adds r1, r2, #0
	cmp r0, #0x27
	bhi _08083CAA
	lsls r0, r0, #2
	adds r0, #4
	adds r1, r1, r0
	cmp r1, #0
	beq _08083CA4
	movs r0, #0
	str r0, [r1]
_08083CA4:
	ldr r0, [r2]
	adds r0, #1
	str r0, [r2]
_08083CAA:
	ldr r0, [r7, #8]
	adds r0, #0x14
	bl func_08009AF8
	ldr r1, _08083D04 @ =0x000003E7
	cmp r0, r1
	bne _08083CD8
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08083CD8
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08083CD2
	movs r0, #1
	str r0, [r2]
_08083CD2:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08083CD8:
	ldr r0, [r7, #8]
	movs r4, #0xfa
	lsls r4, r4, #1
	adds r0, r0, r4
	bl GetUpgradeLevel__C9FarmHouse
	cmp r0, #0
	bne _08083D08
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08083D60
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08083D5A
	movs r0, #2
	b _08083D58
	.align 2, 0
_08083D04: .4byte 0x000003E7
_08083D08:
	ldr r0, [r7, #8]
	movs r6, #0xfa
	lsls r6, r6, #1
	adds r0, r0, r6
	bl GetUpgradeLevel__C9FarmHouse
	cmp r0, #1
	bne _08083D32
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08083D60
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08083D5A
	movs r0, #3
	b _08083D58
_08083D32:
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl HasBathroom__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08083D60
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08083D60
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08083D5A
	movs r0, #4
_08083D58:
	str r0, [r2]
_08083D5A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08083D60:
	ldr r0, [r7, #8]
	movs r3, #0x82
	lsls r3, r3, #3
	adds r0, r0, r3
	bl GetUpgradeLevel__C4Coop
	cmp r0, #0
	bne _08083D90
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08083D90
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08083D8A
	movs r0, #5
	str r0, [r2]
_08083D8A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08083D90:
	ldr r0, [r7, #8]
	movs r6, #0xbe
	lsls r6, r6, #3
	adds r0, r0, r6
	bl GetUpgradeLevel__C4Barn
	cmp r0, #0
	bne _08083DC0
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08083DC0
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08083DBA
	movs r0, #6
	str r0, [r2]
_08083DBA:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08083DC0:
	ldr r0, [r7, #8]
	bl func_08010E50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08083DEC
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08083DEC
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08083DE6
	movs r0, #7
	str r0, [r2]
_08083DE6:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08083DEC:
	ldr r0, [r7, #8]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl GetUpgradeLevel__C9FarmHouse
	cmp r0, #2
	bne _08083E5C
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08083E1C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08083E16
	movs r0, #8
	str r0, [r2]
_08083E16:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08083E1C:
	movs r6, #0xa9
	lsls r6, r6, #2
	adds r1, r7, r6
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08083E3C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08083E36
	movs r0, #9
	str r0, [r2]
_08083E36:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08083E3C:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08083E5C
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08083E56
	movs r0, #0xa
	str r0, [r2]
_08083E56:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08083E5C:
	movs r0, #0x10
	str r0, [sp, #0xc]
	add r6, sp, #0x18
	ldr r1, _08083F6C @ =0x086678A0
	adds r0, r6, #0
	bl func_0805E6CC
	add r0, sp, #0x48
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	add r0, sp, #0x4c
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x60
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	add r0, sp, #0x7c
	strb r5, [r0]
	add r3, sp, #0x80
	str r4, [sp, #0x80]
	strh r4, [r3, #4]
	add r2, sp, #0x88
	str r4, [r2]
	strh r4, [r2, #4]
	add r1, sp, #0x90
	str r4, [r1]
	strh r4, [r1, #4]
	add r0, sp, #0x98
	str r4, [r0]
	strh r4, [r0, #4]
	movs r4, #4
	mov sb, r4
	adds r5, r7, #0
	adds r5, #0x20
	movs r6, #0x24
	adds r6, r6, r7
	mov ip, r6
	ldr r0, [r7, #0x20]
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r5, r0
	adds r4, r0, #0
	str r5, [sp, #0xdc]
	adds r1, r6, #0
	ldr r2, [r5]
	cmp r1, r4
	beq _08083EDC
_08083ED6:
	adds r1, #0x10
	cmp r1, r4
	bne _08083ED6
_08083EDC:
	mov r1, ip
	subs r0, r0, r1
	asrs r0, r0, #4
	subs r0, r2, r0
	str r0, [r5]
	movs r2, #0
	mov r8, r2
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r8, r0
	blo _08083EF8
	b _08084034
_08083EF8:
	add r4, sp, #0xa0
	mov sl, r4
	adds r6, r3, #0
	adds r6, r7, r6
	str r6, [sp, #0xd8]
	movs r0, #0xaa
	lsls r0, r0, #2
	adds r0, r7, r0
	str r0, [sp, #0xe0]
	mov r1, sb
	lsls r5, r1, #6
_08083F0E:
	ldr r2, [sp, #0xe0]
	ldr r3, [r2]
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #2
	ldr r2, _08083F70 @ =0x080FF6A8
	mov r1, sl
	adds r0, r0, r2
	ldm r0!, {r2, r4, r6}
	stm r1!, {r2, r4, r6}
	ldm r0!, {r4, r6}
	stm r1!, {r4, r6}
	cmp r3, #1
	bhi _08083FF4
	ldr r0, [r7, #0x1c]
	ldr r1, [r0, #0x18]
	adds r1, r1, r5
	adds r1, #0x32
	mov r2, sl
	ldr r0, [r2, #4]
	movs r3, #0x20
	str r3, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r5
	adds r0, #0x34
	movs r1, #0
	str r1, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
	ldr r6, [sp, #0xe0]
	ldr r0, [r6]
	cmp r0, #0
	bne _08083F74
	add r4, sp, #0xd4
	adds r0, r4, #0
	movs r1, #0x59
	b _08083F7C
	.align 2, 0
_08083F6C: .4byte 0x086678A0
_08083F70: .4byte 0x080FF6A8
_08083F74:
	mov r4, sp
	adds r4, #0xd5
	adds r0, r4, #0
	movs r1, #0x5a
_08083F7C:
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetIconId__C7Article
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	add r4, sp, #0x4c
	adds r0, r4, #0
	bl func_0805E860
	ldr r1, [sp, #0x4c]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x50]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xb4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0xb4
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x80
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r6}
	stm r0!, {r1, r2, r6}
	ldm r4!, {r3, r6}
	stm r0!, {r3, r6}
	add r1, sp, #8
	mov r2, sb
	lsls r0, r2, #3
	strh r0, [r1]
	ldr r0, [sp, #0x88]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x90]
	str r0, [sp, #0x14]
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _0808401A
	lsls r0, r0, #4
	adds r0, #4
	ldr r3, [sp, #0xdc]
	adds r0, r3, r0
	cmp r0, #0
	beq _08083FEC
	ldm r1!, {r2, r4, r6}
	stm r0!, {r2, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08083FEC:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
	b _0808401A
_08083FF4:
	lsls r1, r3, #3
	adds r1, r1, r3
	lsls r1, r1, #0x12
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r5
	adds r0, #4
	movs r3, #0xd0
	lsls r3, r3, #0x10
	adds r1, r1, r3
	lsrs r1, r1, #0x10
	movs r2, #0
	str r2, [sp]
	movs r4, #0x20
	str r4, [sp, #4]
	movs r2, #0x12
	movs r3, #2
	bl func_0804E9F4
_0808401A:
	adds r5, #0x80
	movs r6, #2
	add sb, r6
	ldr r0, [sp, #0xe0]
	adds r0, #4
	str r0, [sp, #0xe0]
	movs r1, #1
	add r8, r1
	ldr r2, [sp, #0xd8]
	ldr r0, [r2]
	cmp r8, r0
	bhs _08084034
	b _08083F0E
_08084034:
	ldr r0, _0808404C @ =vtable_unk_080E5A28
	str r0, [sp, #0x18]
	mov r0, sb
	add sp, #0xe4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808404C: .4byte vtable_unk_080E5A28

	thumb_func_start func_08084050
func_08084050: @ 0x08084050
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	mov r8, r0
	movs r0, #0xb
	mov ip, r0
	movs r7, #4
	mov r4, r8
	adds r4, #0x20
	mov r6, r8
	adds r6, #0x24
	mov r2, r8
	ldr r0, [r2, #0x20]
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	adds r3, r0, #0
	adds r2, r6, #0
	ldr r5, [r4]
	cmp r2, r3
	beq _08084082
_0808407C:
	adds r2, #0x10
	cmp r2, r3
	bne _0808407C
_08084082:
	subs r0, r0, r6
	asrs r0, r0, #4
	subs r0, r5, r0
	str r0, [r4]
	cmp r1, #9
	beq _080840A4
	cmp r1, #9
	bgt _08084098
	cmp r1, #8
	beq _0808409E
	b _080840AE
_08084098:
	cmp r1, #0xa
	beq _080840AA
	b _080840AE
_0808409E:
	movs r0, #0xb
	mov ip, r0
	b _080840AE
_080840A4:
	movs r1, #0xe
	mov ip, r1
	b _080840AE
_080840AA:
	movs r2, #0x11
	mov ip, r2
_080840AE:
	mov r1, ip
	lsls r0, r1, #3
	add r0, ip
	lsls r0, r0, #2
	adds r4, r0, #0
	adds r4, #0xd0
	movs r5, #2
_080840BC:
	mov r2, r8
	ldr r0, [r2, #0x1c]
	ldr r0, [r0, #0x18]
	lsls r1, r7, #6
	adds r0, r0, r1
	adds r0, #4
	lsls r1, r4, #0x10
	lsrs r1, r1, #0x10
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0x12
	movs r3, #2
	bl func_0804E9F4
	adds r7, #2
	adds r4, #0x24
	subs r5, #1
	cmp r5, #0
	bge _080840BC
	adds r0, r7, #0
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_080840F4
func_080840F4: @ 0x080840F4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	adds r5, r1, #0
	ldr r0, _0808414C @ =0x00006170
	adds r6, r7, r0
	ldr r2, _08084150 @ =0x080FF83C
	mov r8, r2
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x7f
	bls _08084118
	movs r4, #0x7f
_08084118:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	lsls r3, r5, #2
	adds r1, r3, r5
	lsls r1, r1, #2
	ldr r2, _08084154 @ =0x080FF6A8
	mov r0, sp
	adds r1, r1, r2
	ldm r1!, {r2, r4, r6}
	stm r0!, {r2, r4, r6}
	ldm r1!, {r4, r6}
	stm r0!, {r4, r6}
	ldr r6, [sp, #0x10]
	cmp r5, #0x13
	bhi _08084214
	ldr r0, _08084158 @ =0x0808415C
	adds r0, r3, r0
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808414C: .4byte 0x00006170
_08084150: .4byte 0x080FF83C
_08084154: .4byte 0x080FF6A8
_08084158: .4byte 0x0808415C
_0808415C:
	.byte 0xAC, 0x41, 0x08, 0x08
	.byte 0xB4, 0x41, 0x08, 0x08, 0xC8, 0x41, 0x08, 0x08, 0xC8, 0x41, 0x08, 0x08, 0xC8, 0x41, 0x08, 0x08
	.byte 0xC8, 0x41, 0x08, 0x08, 0xC8, 0x41, 0x08, 0x08, 0xC8, 0x41, 0x08, 0x08, 0xC8, 0x41, 0x08, 0x08
	.byte 0xC8, 0x41, 0x08, 0x08, 0xC8, 0x41, 0x08, 0x08, 0xD2, 0x41, 0x08, 0x08, 0xD2, 0x41, 0x08, 0x08
	.byte 0xD2, 0x41, 0x08, 0x08, 0xD2, 0x41, 0x08, 0x08, 0xD2, 0x41, 0x08, 0x08, 0xD2, 0x41, 0x08, 0x08
	.byte 0xD2, 0x41, 0x08, 0x08, 0xD2, 0x41, 0x08, 0x08, 0xD2, 0x41, 0x08, 0x08, 0x05, 0xAC, 0x20, 0x1C
	.byte 0x59, 0x21, 0x03, 0xE0, 0x6C, 0x46, 0x15, 0x34, 0x20, 0x1C, 0x5A, 0x21, 0x89, 0xF7, 0xC8, 0xFE
	.byte 0x20, 0x1C, 0x89, 0xF7, 0x07, 0xFF, 0x06, 0x1C, 0x38, 0x1C, 0x31, 0x1C, 0x46, 0xF0, 0x0E, 0xFD
	.byte 0x20, 0xE0, 0x14, 0x48, 0x3C, 0x18, 0xB1, 0x46, 0x20, 0x1C, 0x4F, 0xF0, 0xCD, 0xFC, 0x24, 0x18
	.byte 0xA0, 0x46, 0x7F, 0x21, 0x0D, 0x1A, 0x00, 0x2D, 0x0F, 0xD0, 0x48, 0x46, 0x4F, 0xF0, 0xC4, 0xFC
	.byte 0x04, 0x1C, 0xAC, 0x42, 0x00, 0xD9, 0x2C, 0x1C, 0x40, 0x46, 0x31, 0x1C, 0x22, 0x1C, 0x4F, 0xF0
	.byte 0xC9, 0xFB, 0x42, 0x46, 0x11, 0x19, 0x00, 0x20, 0x08, 0x70, 0x06, 0x4C, 0x39, 0x19, 0x38, 0x1C
	.byte 0x46, 0xF0, 0xEC, 0xFC
_08084214:
	add sp, #0x18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084224:
	.byte 0x70, 0x61, 0x00, 0x00

	thumb_func_start func_08084228
func_08084228: @ 0x08084228
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x70
	adds r6, r0, #0
	bl func_08008724
	adds r0, r6, #0
	bl func_080C85A0
	movs r0, #0
	mov sl, r0
	mov r1, sp
	adds r1, #0x44
	str r1, [sp, #0x60]
	mov r2, sp
	adds r2, #0x48
	str r2, [sp, #0x64]
	mov r3, sp
	adds r3, #0x24
	str r3, [sp, #0x58]
_08084256:
	mov r4, sl
	lsls r1, r4, #2
	add r1, sl
	lsls r1, r1, #2
	ldr r2, _08084314 @ =0x080FF6A8
	add r0, sp, #0x10
	adds r1, r1, r2
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldm r1!, {r3, r4}
	stm r0!, {r3, r4}
	mov r7, sl
	lsls r5, r7, #3
	add r5, sl
	lsls r4, r5, #5
	add r4, sl
	lsls r4, r4, #2
	adds r1, r4, r6
	movs r0, #0xe4
	lsls r0, r0, #3
	adds r1, r1, r0
	add r0, sp, #0x44
	movs r2, #0x12
	strh r2, [r0]
	movs r7, #2
	ldr r3, [sp, #0x60]
	strh r7, [r3, #2]
	ldr r0, [sp, #0x44]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	adds r1, r4, r6
	movs r0, #0xe4
	lsls r0, r0, #3
	adds r1, r1, r0
	ldr r2, [sp, #0x10]
	add r0, sp, #0x48
	movs r3, #0x12
	strh r3, [r0]
	movs r0, #2
	ldr r7, [sp, #0x64]
	strh r0, [r7, #2]
	ldr r0, [sp, #0x48]
	adds r1, #4
	str r2, [sp]
	movs r2, #0
	str r2, [sp, #4]
	movs r3, #1
	str r3, [sp, #8]
	movs r3, #0
	bl func_0804E958
	lsls r5, r5, #2
	adds r5, #0xd0
	adds r0, r6, #0
	bl func_08008910
	adds r4, r4, r6
	movs r7, #0xe4
	lsls r7, r7, #3
	adds r4, r4, r7
	adds r4, #4
	str r0, [sp, #0x68]
	lsls r5, r5, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r5, r5, r0
	add r0, sp, #0x24
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0x90
	lsls r3, r3, #3
	bl func_08008F0C
	ldr r2, [sp, #0x68]
	ldr r1, [r2, #4]
	ldr r0, [r2, #0xc]
	cmp r1, r0
	beq _08084318
	cmp r1, #0
	beq _08084306
	adds r0, r1, #0
	ldr r1, [sp, #0x58]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08084306:
	ldr r7, [sp, #0x68]
	ldr r0, [r7, #4]
	adds r0, #0x10
	str r0, [r7, #4]
	movs r0, #1
	add sl, r0
	b _080843F0
	.align 2, 0
_08084314: .4byte 0x080FF6A8
_08084318:
	str r1, [sp, #0x6c]
	movs r1, #1
	str r1, [sp, #0x50]
	ldr r2, [sp, #0x68]
	ldr r0, [r2]
	ldr r3, [sp, #0x6c]
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x4c]
	add r1, sp, #0x50
	add r0, sp, #0x4c
	cmp r4, #1
	bhs _08084334
	adds r0, r1, #0
_08084334:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08084352
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08084356
	mov r0, sb
	bl func_080D3BC0
	b _08084356
_08084352:
	movs r0, #0
	mov sb, r0
_08084356:
	adds r4, r0, #0
	mov r8, r4
	ldr r4, [sp, #0x68]
	ldr r2, [r4]
	mov r3, r8
	movs r5, #1
	add sl, r5
	ldr r7, [sp, #0x6c]
	cmp r2, r7
	beq _08084384
_0808436A:
	cmp r3, #0
	beq _0808437A
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0808437A:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x6c]
	cmp r2, r0
	bne _0808436A
_08084384:
	adds r4, r3, #0
	ldr r0, [sp, #0x50]
	cmp r0, #1
	bne _080843A0
	cmp r4, #0
	beq _0808439C
	adds r0, r4, #0
	ldr r1, [sp, #0x58]
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldr r1, [r1]
	str r1, [r0]
_0808439C:
	adds r4, #0x10
	b _080843C8
_080843A0:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _080843C6
_080843A8:
	cmp r2, #0
	beq _080843B8
	adds r0, r2, #0
	ldr r1, [sp, #0x58]
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_080843B8:
	movs r5, #1
	rsbs r5, r5, #0
	add ip, r5
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _080843A8
_080843C6:
	adds r4, r2, #0
_080843C8:
	ldr r0, [sp, #0x68]
	ldr r2, [r0, #4]
	ldr r0, [r0]
	adds r1, r0, #0
	cmp r0, r2
	beq _080843DA
_080843D4:
	adds r1, #0x10
	cmp r1, r2
	bne _080843D4
_080843DA:
	cmp r0, #0
	beq _080843E2
	bl free
_080843E2:
	mov r0, sb
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x68]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_080843F0:
	mov r3, sl
	cmp r3, #0x13
	bhi _080843F8
	b _08084256
_080843F8:
	adds r0, r6, #0
	bl func_08083C64
	adds r7, r0, #0
	ldr r0, [r6, #0x1c]
	movs r4, #0xc
	ldrsh r1, [r6, r4]
	bl func_08075C88
	ldr r0, [r6, #0x1c]
	adds r1, r7, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r5, #0xaa
	lsls r5, r5, #2
	adds r0, r0, r5
	ldr r1, [r0]
	adds r0, r6, #0
	bl func_080840F4
	adds r0, r6, #0
	bl func_08008918
	add r1, sp, #0x10
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _080844D8 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0x10]
	ldr r1, _080844DC @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x10]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #0
	str r7, [sp, #0x5c]
	ldr r0, [r6, #8]
	adds r0, #0x14
	bl func_08009AF8
	ldr r1, _080844E0 @ =0x000003E7
	cmp r0, r1
	bne _08084498
	ldr r0, _080844E4 @ =0x000061F0
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
_08084498:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	ldr r3, [sp, #0x10]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080844B4
	bl _080854C8
_080844B4:
	ldr r1, [sp, #0x5c]
	cmp r1, #0
	beq _080844BE
	bl sub_080854D8
_080844BE:
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r6, r2
	ldr r0, [r0]
	cmp r0, #0xb
	bls _080844CE
	bl _080854C8
_080844CE:
	lsls r0, r0, #2
	ldr r1, _080844E8 @ =_080844EC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080844D8: .4byte vtable_unk_080E5B80
_080844DC: .4byte 0x00000889
_080844E0: .4byte 0x000003E7
_080844E4: .4byte 0x000061F0
_080844E8: .4byte _080844EC
_080844EC: @ jump table
	.4byte _0808451C @ case 0
	.4byte _08084CE4 @ case 1
	.4byte _08084F24 @ case 2
	.4byte _08085110 @ case 3
	.4byte _080850E8 @ case 4
	.4byte _08085138 @ case 5
	.4byte _08085196 @ case 6
	.4byte _08085210 @ case 7
	.4byte _08085330 @ case 8
	.4byte _08085374 @ case 9
	.4byte _08085454 @ case 10
	.4byte _08085484 @ case 11
_0808451C:
	ldr r0, [r6, #0x14]
	ldr r1, [r6, #0x10]
	cmp r0, r1
	beq _08084536
	lsls r0, r1, #2
	adds r0, r0, r6
	movs r3, #0xaa
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r1, [r0]
	adds r0, r6, #0
	bl func_080840F4
_08084536:
	ldr r0, [r6, #0x10]
	str r0, [r6, #0x14]
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r5, r6, r4
	ldr r1, [r5]
	adds r0, r6, #0
	bl func_080C9020
	ldr r7, _08084588 @ =0x000006A1
	adds r0, r6, r7
	ldrb r0, [r0]
	cmp r0, #0
	bne _08084554
	b _08084C8C
_08084554:
	add r4, sp, #0x14
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r5, r0
	ldr r3, [r0]
	lsls r0, r3, #2
	mov r8, r0
	adds r1, r0, r3
	lsls r1, r1, #2
	ldr r2, _0808458C @ =0x080FF6A8
	adds r0, r4, #0
	adds r1, r1, r2
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldm r1!, {r2, r5}
	stm r0!, {r2, r5}
	mov sl, r4
	cmp r3, #0xa
	bls _08084580
	bl _080854C8
_08084580:
	ldr r0, _08084590 @ =0x08084594
	add r0, r8
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08084588: .4byte 0x000006A1
_0808458C: .4byte 0x080FF6A8
_08084590: .4byte 0x08084594
_08084594:
	.byte 0xC0, 0x45, 0x08, 0x08, 0xA8, 0x46, 0x08, 0x08, 0xDC, 0x48, 0x08, 0x08
	.byte 0xDC, 0x48, 0x08, 0x08, 0xDC, 0x48, 0x08, 0x08, 0xDC, 0x48, 0x08, 0x08, 0xDC, 0x48, 0x08, 0x08
	.byte 0xDC, 0x48, 0x08, 0x08, 0xA4, 0x49, 0x08, 0x08, 0x98, 0x4A, 0x08, 0x08, 0x8C, 0x4B, 0x08, 0x08
	.byte 0xB1, 0x68, 0x0D, 0x4F, 0xC8, 0x19, 0x02, 0x68, 0x00, 0x23, 0x54, 0x46, 0x60, 0x68, 0x82, 0x42
	.byte 0x00, 0xD2, 0x01, 0x23, 0x99, 0x46, 0x00, 0x2B, 0x12, 0xD0, 0x08, 0x49, 0x30, 0x1C, 0x46, 0xF0
	.byte 0xDF, 0xFA, 0xD2, 0x25, 0xAD, 0x00, 0x70, 0x19, 0xAC, 0x21, 0xCC, 0xF7, 0x31, 0xFC, 0xE1, 0x27
	.byte 0xFF, 0x00, 0xF1, 0x19, 0xDF, 0xE2, 0x00, 0x00, 0xA8, 0x1A, 0x00, 0x00, 0x58, 0xF8, 0x0F, 0x08
	.byte 0x08, 0x1C, 0x14, 0x30, 0x85, 0xF7, 0x78, 0xFA, 0x03, 0x49, 0x88, 0x42, 0x08, 0xD9, 0x03, 0x49
	.byte 0x30, 0x1C, 0x46, 0xF0, 0xC5, 0xFA, 0xCB, 0xE2, 0xE6, 0x03, 0x00, 0x00, 0x78, 0xF8, 0x0F, 0x08
	.byte 0xB0, 0x68, 0x14, 0x30, 0x85, 0xF7, 0x68, 0xFA, 0x1B, 0x49, 0x0A, 0x1A, 0x1B, 0x49, 0x70, 0x18
	.byte 0x53, 0x46, 0x59, 0x68, 0x05, 0x23, 0x46, 0xF0, 0x3D, 0xF9, 0xE1, 0x24, 0xE4, 0x00, 0x31, 0x19
	.byte 0x02, 0x20, 0x08, 0x60, 0xB0, 0x68, 0x14, 0x30, 0x85, 0xF7, 0x56, 0xFA, 0x0D, 0xA9, 0x07, 0x22
	.byte 0xCA, 0xF7, 0x18, 0xFB, 0x12, 0x4D, 0x70, 0x19, 0x4F, 0x46, 0x07, 0x70, 0x07, 0x1C, 0x11, 0x48
	.byte 0x82, 0x46, 0x38, 0x1C, 0x4F, 0xF0, 0x88, 0xFA, 0x39, 0x18, 0x88, 0x46, 0x63, 0x21, 0x0D, 0x1A
	.byte 0x00, 0x2D, 0x00, 0xD1, 0xD1, 0xE0, 0x50, 0x46, 0x4F, 0xF0, 0x7E, 0xFA, 0x04, 0x1C, 0xAC, 0x42
	.byte 0x00, 0xD9, 0x2C, 0x1C, 0x40, 0x46, 0x51, 0x46, 0x22, 0x1C, 0x4F, 0xF0, 0x83, 0xF9, 0x42, 0x46
	.byte 0x10, 0x19, 0x4B, 0x46, 0xC0, 0xE0, 0x00, 0x00, 0xE7, 0x03, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00
	.byte 0xA4, 0x06, 0x00, 0x00, 0xA4, 0xF8, 0x0F, 0x08, 0xB1, 0x68, 0x06, 0x4C, 0x08, 0x19, 0x02, 0x68
	.byte 0x00, 0x23, 0x55, 0x46, 0x68, 0x68, 0x82, 0x42, 0x00, 0xD2, 0x01, 0x23, 0x00, 0x2B, 0x05, 0xD0
	.byte 0x01, 0x49, 0x6C, 0xE2, 0xA8, 0x1A, 0x00, 0x00, 0x58, 0xF8, 0x0F, 0x08, 0x00, 0x22, 0x90, 0x46
	.byte 0x1A, 0x4B, 0x99, 0x46, 0xC8, 0x18, 0x8B, 0xF7, 0x51, 0xF8, 0x07, 0x1C, 0xB0, 0x68, 0x18, 0x4C
	.byte 0x00, 0x19, 0x8A, 0xF7, 0x55, 0xFD, 0x00, 0x06, 0x00, 0x0E, 0x41, 0x42, 0x01, 0x43, 0xCD, 0x0F
	.byte 0xB0, 0x68, 0xFA, 0x21, 0x49, 0x00, 0x40, 0x18, 0x87, 0xF7, 0xB2, 0xFC, 0x00, 0x28, 0x09, 0xD0
	.byte 0xB0, 0x68, 0xFA, 0x22, 0x52, 0x00, 0x80, 0x18, 0x87, 0xF7, 0xAA, 0xFC, 0x5A, 0x21, 0x87, 0xF7
	.byte 0xFF, 0xF8, 0x80, 0x46, 0x78, 0x19, 0x43, 0x46, 0xC2, 0x18, 0x00, 0x2A, 0x14, 0xD1, 0x09, 0x49
	.byte 0x30, 0x1C, 0x46, 0xF0, 0x3D, 0xFA, 0xD2, 0x24, 0xA4, 0x00, 0x30, 0x19, 0xAC, 0x21, 0xCC, 0xF7
	.byte 0x8F, 0xFB, 0xE1, 0x25, 0xED, 0x00, 0x71, 0x19, 0x3D, 0xE2, 0x00, 0x00, 0x38, 0x1C, 0x00, 0x00
	.byte 0x2C, 0x1C, 0x00, 0x00, 0xB0, 0xF8, 0x0F, 0x08, 0x5F, 0x4F, 0xF0, 0x19, 0x53, 0x46, 0x59, 0x68
	.byte 0x05, 0x23, 0x46, 0xF0, 0xAF, 0xF8, 0xE1, 0x25, 0xED, 0x00, 0x71, 0x19, 0x02, 0x20, 0x08, 0x60
	.byte 0x00, 0x27, 0xB8, 0x46, 0xB0, 0x68, 0x48, 0x44, 0x5A, 0x21, 0x8B, 0xF7, 0x4B, 0xF8, 0x05, 0x1C
	.byte 0xB0, 0x68, 0x00, 0x19, 0x8A, 0xF7, 0x0C, 0xFD, 0x00, 0x06, 0x00, 0x28, 0x12, 0xD1, 0xB0, 0x68
	.byte 0x00, 0x19, 0x8A, 0xF7, 0x3F, 0xFD, 0x01, 0x28, 0x0C, 0xD1, 0xB0, 0x68, 0x00, 0x19, 0x8A, 0xF7
	.byte 0x63, 0xFD, 0x01, 0x1C, 0x15, 0xA8, 0x01, 0x70, 0x89, 0xF7, 0xDC, 0xFB, 0x5A, 0x28, 0x01, 0xD1
	.byte 0x01, 0x20, 0x80, 0x46, 0xB0, 0x68, 0xFA, 0x21, 0x49, 0x00, 0x40, 0x18, 0x87, 0xF7, 0x58, 0xFC
	.byte 0x00, 0x28, 0x09, 0xD0, 0xB0, 0x68, 0xFA, 0x22, 0x52, 0x00, 0x80, 0x18, 0x87, 0xF7, 0x50, 0xFC
	.byte 0x5A, 0x21, 0x87, 0xF7, 0xD7, 0xF8, 0x07, 0x1C, 0x43, 0x46, 0xE8, 0x18, 0xC0, 0x19, 0x0D, 0xA9
	.byte 0x07, 0x22, 0xCA, 0xF7, 0x57, 0xFA, 0x3D, 0x4C, 0x30, 0x19, 0x00, 0x25, 0xAA, 0x46, 0x57, 0x46
	.byte 0x07, 0x70, 0x07, 0x1C, 0x3A, 0x48, 0x81, 0x46, 0x38, 0x1C, 0x4F, 0xF0, 0xC5, 0xF9, 0x39, 0x18
	.byte 0x88, 0x46, 0x63, 0x21, 0x0D, 0x1A, 0x00, 0x2D, 0x0F, 0xD0, 0x48, 0x46, 0x4F, 0xF0, 0xBC, 0xF9
	.byte 0x04, 0x1C, 0xAC, 0x42, 0x00, 0xD9, 0x2C, 0x1C, 0x40, 0x46, 0x49, 0x46, 0x22, 0x1C, 0x4F, 0xF0
	.byte 0xC1, 0xF8, 0x42, 0x46, 0x10, 0x19, 0x53, 0x46, 0x03, 0x70, 0x2E, 0x48, 0x00, 0x68, 0x81, 0x46
	.byte 0x38, 0x1C, 0x4F, 0xF0, 0xA9, 0xF9, 0x3C, 0x18, 0xA0, 0x46, 0x63, 0x21, 0x0D, 0x1A, 0x00, 0x2D
	.byte 0x0F, 0xD0, 0x48, 0x46, 0x4F, 0xF0, 0xA0, 0xF9, 0x04, 0x1C, 0xAC, 0x42, 0x00, 0xD9, 0x2C, 0x1C
	.byte 0x40, 0x46, 0x49, 0x46, 0x22, 0x1C, 0x4F, 0xF0, 0xA5, 0xF8, 0x45, 0x46, 0x29, 0x19, 0x00, 0x20
	.byte 0x08, 0x70, 0x38, 0x1C, 0x4F, 0xF0, 0x90, 0xF9, 0x39, 0x18, 0x88, 0x46, 0x63, 0x21, 0x0D, 0x1A
	.byte 0x00, 0x2D, 0x0F, 0xD0, 0x0D, 0xA8, 0x4F, 0xF0, 0x87, 0xF9, 0x04, 0x1C, 0xAC, 0x42, 0x00, 0xD9
	.byte 0x2C, 0x1C, 0x40, 0x46, 0x0D, 0xA9, 0x22, 0x1C, 0x4F, 0xF0, 0x8C, 0xF8, 0x42, 0x46, 0x11, 0x19
	.byte 0x00, 0x20, 0x08, 0x70, 0x14, 0x48, 0x00, 0x68, 0x80, 0x46, 0x38, 0x1C, 0x4F, 0xF0, 0x74, 0xF9
	.byte 0x3F, 0x18, 0x63, 0x21, 0x0D, 0x1A, 0x00, 0x2D, 0x0E, 0xD0, 0x40, 0x46, 0x4F, 0xF0, 0x6C, 0xF9
	.byte 0x04, 0x1C, 0xAC, 0x42, 0x00, 0xD9, 0x2C, 0x1C, 0x38, 0x1C, 0x41, 0x46, 0x22, 0x1C, 0x4F, 0xF0
	.byte 0x71, 0xF8, 0x39, 0x19, 0x00, 0x20, 0x08, 0x70, 0x04, 0x4B, 0xF1, 0x18, 0x30, 0x1C, 0x46, 0xF0
	.byte 0x95, 0xF9, 0x00, 0xF0, 0x01, 0xFE, 0x00, 0x00, 0x84, 0x06, 0x00, 0x00, 0xA4, 0x06, 0x00, 0x00
	.byte 0xDC, 0xF8, 0x0F, 0x08, 0x28, 0x78, 0x11, 0x08, 0x14, 0x78, 0x11, 0x08, 0xB0, 0x68, 0x0A, 0x4C
	.byte 0x00, 0x19, 0x1A, 0xF0, 0x41, 0xF9, 0x00, 0x28, 0x12, 0xD0, 0x08, 0x49, 0x30, 0x1C, 0x46, 0xF0
	.byte 0x57, 0xF9, 0xD2, 0x25, 0xAD, 0x00, 0x70, 0x19, 0xAC, 0x21, 0xCC, 0xF7, 0xA9, 0xFA, 0xE1, 0x27
	.byte 0xFF, 0x00, 0xF1, 0x19, 0x57, 0xE1, 0x00, 0x00, 0x64, 0x1F, 0x00, 0x00, 0xF0, 0xF8, 0x0F, 0x08
	.byte 0xB1, 0x68, 0x0C, 0x4A, 0x88, 0x18, 0x02, 0x68, 0x00, 0x23, 0x54, 0x46, 0x60, 0x68, 0x82, 0x42
	.byte 0x00, 0xD2, 0x01, 0x23, 0x00, 0x2B, 0x11, 0xD0, 0x07, 0x49, 0x30, 0x1C, 0x46, 0xF0, 0x38, 0xF9
	.byte 0xD2, 0x25, 0xAD, 0x00, 0x70, 0x19, 0xAC, 0x21, 0xCC, 0xF7, 0x8A, 0xFA, 0xE1, 0x27, 0xFF, 0x00
	.byte 0xF1, 0x19, 0x38, 0xE1, 0xA8, 0x1A, 0x00, 0x00, 0x58, 0xF8, 0x0F, 0x08, 0x08, 0x1C, 0x14, 0x30
	.byte 0x85, 0xF7, 0xD2, 0xF8, 0x52, 0x46, 0x91, 0x68, 0x88, 0x42, 0x0F, 0xD2, 0x06, 0x49, 0x30, 0x1C
	.byte 0x46, 0xF0, 0x1E, 0xF9, 0xD2, 0x23, 0x9B, 0x00, 0xF0, 0x18, 0xAC, 0x21, 0xCC, 0xF7, 0x70, 0xFA
	.byte 0xE1, 0x24, 0xE4, 0x00, 0x31, 0x19, 0x1E, 0xE1, 0x44, 0xF9, 0x0F, 0x08, 0x08, 0x49, 0x30, 0x1C
	.byte 0x46, 0xF0, 0x0E, 0xF9, 0xD2, 0x25, 0xAD, 0x00, 0x70, 0x19, 0xAC, 0x21, 0xCC, 0xF7, 0x60, 0xFA
	.byte 0xE1, 0x27, 0xFF, 0x00, 0xF1, 0x19, 0x06, 0x20, 0x08, 0x60, 0x00, 0xF0, 0x95, 0xFD, 0x00, 0x00
	.byte 0x68, 0xF9, 0x0F, 0x08, 0xB0, 0x68, 0x0A, 0x49, 0x40, 0x18, 0x1A, 0xF0, 0xDD, 0xF8, 0x04, 0x1C
	.byte 0x00, 0x2C, 0x11, 0xD0, 0x07, 0x49, 0x30, 0x1C, 0x46, 0xF0, 0xF2, 0xF8, 0xD2, 0x22, 0x92, 0x00
	.byte 0xB0, 0x18, 0xAC, 0x21, 0xCC, 0xF7, 0x44, 0xFA, 0xE1, 0x23, 0xDB, 0x00, 0xF1, 0x18, 0xF2, 0xE0
	.byte 0x64, 0x1F, 0x00, 0x00, 0xF0, 0xF8, 0x0F, 0x08, 0xF0, 0x69, 0xF1, 0xF7, 0xFB, 0xF9, 0x30, 0x1C
	.byte 0x08, 0x21, 0xFF, 0xF7, 0x35, 0xFB, 0x07, 0x1C, 0xB4, 0x81, 0xC9, 0x24, 0xE4, 0x00, 0x31, 0x19
	.byte 0x28, 0x20, 0x08, 0x60, 0xF0, 0x69, 0x0C, 0x25, 0x71, 0x5F, 0xF1, 0xF7, 0xDD, 0xF9, 0xF0, 0x69
	.byte 0x39, 0x1C, 0x08, 0x31, 0xC9, 0x04, 0x09, 0x14, 0xF1, 0xF7, 0x0C, 0xFA, 0xE2, 0x27, 0xFF, 0x00
	.byte 0xF2, 0x19, 0x20, 0x48, 0x31, 0x18, 0x10, 0x68, 0x80, 0x00, 0x04, 0x30, 0x10, 0x18, 0x40, 0x1A
	.byte 0x80, 0x10, 0x11, 0x68, 0x08, 0x1A, 0x10, 0x60, 0x0B, 0x23, 0x11, 0x1C, 0x02, 0x28, 0x08, 0xD8
	.byte 0x80, 0x00, 0x04, 0x30, 0x08, 0x18, 0x00, 0x28, 0x00, 0xD0, 0x03, 0x60, 0x10, 0x68, 0x01, 0x30
	.byte 0x10, 0x60, 0x0C, 0x22, 0xE2, 0x23, 0xDB, 0x00, 0xF1, 0x18, 0x08, 0x68, 0x02, 0x28, 0x08, 0xD8
	.byte 0x80, 0x00, 0x04, 0x30, 0x08, 0x18, 0x00, 0x28, 0x00, 0xD0, 0x02, 0x60, 0x08, 0x68, 0x01, 0x30
	.byte 0x08, 0x60, 0x0D, 0x22, 0xE2, 0x24, 0xE4, 0x00, 0x31, 0x19, 0x08, 0x68, 0x02, 0x28, 0x08, 0xD8
	.byte 0x80, 0x00, 0x04, 0x30, 0x08, 0x18, 0x00, 0x28, 0x00, 0xD0, 0x02, 0x60, 0x08, 0x68, 0x01, 0x30
	.byte 0x08, 0x60, 0x00, 0x20, 0x30, 0x61, 0x01, 0x38, 0x70, 0x61, 0xE1, 0x25, 0xED, 0x00, 0x71, 0x19
	.byte 0xF6, 0xE0, 0x00, 0x00, 0x14, 0x07, 0x00, 0x00, 0xB0, 0x68, 0x0A, 0x4F, 0xC0, 0x19, 0x1A, 0xF0
	.byte 0x63, 0xF8, 0x04, 0x1C, 0x00, 0x2C, 0x11, 0xD0, 0x07, 0x49, 0x30, 0x1C, 0x46, 0xF0, 0x78, 0xF8
	.byte 0xD2, 0x21, 0x89, 0x00, 0x70, 0x18, 0xAC, 0x21, 0xCC, 0xF7, 0xCA, 0xF9, 0xE1, 0x22, 0xD2, 0x00
	.byte 0xB1, 0x18, 0x78, 0xE0, 0x64, 0x1F, 0x00, 0x00, 0xF0, 0xF8, 0x0F, 0x08, 0xF0, 0x69, 0xF1, 0xF7
	.byte 0x81, 0xF9, 0x30, 0x1C, 0x09, 0x21, 0xFF, 0xF7, 0xBB, 0xFA, 0x07, 0x1C, 0xB4, 0x81, 0xC9, 0x23
	.byte 0xDB, 0x00, 0xF1, 0x18, 0x28, 0x20, 0x08, 0x60, 0xF0, 0x69, 0x0C, 0x24, 0x31, 0x5F, 0xF1, 0xF7
	.byte 0x63, 0xF9, 0xF0, 0x69, 0x39, 0x1C, 0x08, 0x31, 0xC9, 0x04, 0x09, 0x14, 0xF1, 0xF7, 0x92, 0xF9
	.byte 0xE2, 0x25, 0xED, 0x00, 0x72, 0x19, 0x20, 0x4F, 0xF1, 0x19, 0x10, 0x68, 0x80, 0x00, 0x04, 0x30
	.byte 0x10, 0x18, 0x40, 0x1A, 0x80, 0x10, 0x11, 0x68, 0x08, 0x1A, 0x10, 0x60, 0x0E, 0x23, 0x11, 0x1C
	.byte 0x02, 0x28, 0x08, 0xD8, 0x80, 0x00, 0x04, 0x30, 0x08, 0x18, 0x00, 0x28, 0x00, 0xD0, 0x03, 0x60
	.byte 0x10, 0x68, 0x01, 0x30, 0x10, 0x60, 0x0F, 0x22, 0xE2, 0x20, 0xC0, 0x00, 0x31, 0x18, 0x08, 0x68
	.byte 0x02, 0x28, 0x08, 0xD8, 0x80, 0x00, 0x04, 0x30, 0x08, 0x18, 0x00, 0x28, 0x00, 0xD0, 0x02, 0x60
	.byte 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x10, 0x22, 0xE2, 0x23, 0xDB, 0x00, 0xF1, 0x18, 0x08, 0x68
	.byte 0x02, 0x28, 0x08, 0xD8, 0x80, 0x00, 0x04, 0x30, 0x08, 0x18, 0x00, 0x28, 0x00, 0xD0, 0x02, 0x60
	.byte 0x08, 0x68, 0x01, 0x30, 0x08, 0x60, 0x00, 0x20, 0x30, 0x61, 0x01, 0x38, 0x70, 0x61, 0xE1, 0x24
	.byte 0xE4, 0x00, 0x31, 0x19, 0x7C, 0xE0, 0x00, 0x00, 0x14, 0x07, 0x00, 0x00, 0xB0, 0x68, 0x0C, 0x4D
	.byte 0x40, 0x19, 0x19, 0xF0, 0xE9, 0xFF, 0x04, 0x1C, 0x00, 0x2C, 0x15, 0xD0, 0x09, 0x49, 0x30, 0x1C
	.byte 0x45, 0xF0, 0xFE, 0xFF, 0xD2, 0x27, 0xBF, 0x00, 0xF0, 0x19, 0xAC, 0x21, 0xCC, 0xF7, 0x50, 0xF9
	.byte 0xE1, 0x20, 0xC0, 0x00, 0x31, 0x18, 0x03, 0x20, 0x08, 0x60, 0x00, 0xF0, 0x85, 0xFC, 0x00, 0x00
	.byte 0x64, 0x1F, 0x00, 0x00, 0xF0, 0xF8, 0x0F, 0x08, 0xF0, 0x69, 0xF1, 0xF7, 0x03, 0xF9, 0x30, 0x1C
	.byte 0x0A, 0x21, 0xFF, 0xF7, 0x3D, 0xFA, 0x07, 0x1C, 0xB4, 0x81, 0xC9, 0x22, 0xD2, 0x00, 0xB1, 0x18
	.byte 0x28, 0x20, 0x08, 0x60, 0xF0, 0x69, 0x0C, 0x23, 0xF1, 0x5E, 0xF1, 0xF7, 0xE5, 0xF8, 0xF0, 0x69
	.byte 0x39, 0x1C, 0x08, 0x31, 0xC9, 0x04, 0x09, 0x14, 0xF1, 0xF7, 0x14, 0xF9, 0xE2, 0x24, 0xE4, 0x00
	.byte 0x32, 0x19, 0x21, 0x4D, 0x71, 0x19, 0x10, 0x68, 0x80, 0x00, 0x04, 0x30, 0x10, 0x18, 0x40, 0x1A
	.byte 0x80, 0x10, 0x11, 0x68, 0x08, 0x1A, 0x10, 0x60, 0x11, 0x23, 0x11, 0x1C, 0x02, 0x28, 0x08, 0xD8
	.byte 0x80, 0x00, 0x04, 0x30, 0x08, 0x18, 0x00, 0x28, 0x00, 0xD0, 0x03, 0x60, 0x10, 0x68, 0x01, 0x30
	.byte 0x10, 0x60, 0x12, 0x22, 0xE2, 0x27, 0xFF, 0x00, 0xF1, 0x19, 0x08, 0x68, 0x02, 0x28, 0x08, 0xD8
	.byte 0x80, 0x00, 0x04, 0x30, 0x08, 0x18, 0x00, 0x28, 0x00, 0xD0, 0x02, 0x60, 0x08, 0x68, 0x01, 0x30
	.byte 0x08, 0x60, 0x13, 0x22, 0xE2, 0x20, 0xC0, 0x00, 0x31, 0x18, 0x08, 0x68, 0x02, 0x28, 0x08, 0xD8
	.byte 0x80, 0x00, 0x04, 0x30, 0x08, 0x18, 0x00, 0x28, 0x00, 0xD0, 0x02, 0x60, 0x08, 0x68, 0x01, 0x30
	.byte 0x08, 0x60, 0x00, 0x20, 0x30, 0x61, 0x01, 0x38, 0x70, 0x61, 0xE1, 0x22, 0xD2, 0x00, 0xB1, 0x18
	.byte 0x01, 0x20, 0x08, 0x60, 0x00, 0xF0, 0x20, 0xFC, 0x14, 0x07, 0x00, 0x00
_08084C8C:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08084C9E
	bl _080854C8
_08084C9E:
	ldr r3, _08084CB4 @ =0x0000070C
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _08084CBC
	ldr r1, _08084CB8 @ =0x080FF998
	adds r0, r6, #0
	bl func_080CABA0
	b _08084CC4
	.align 2, 0
_08084CB4: .4byte 0x0000070C
_08084CB8: .4byte 0x080FF998
_08084CBC:
	ldr r1, _08084CE0 @ =0x080FF9B8
	adds r0, r6, #0
	bl func_080CABA0
_08084CC4:
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r6, r4
	movs r1, #0xac
	bl func_08050E50
	movs r5, #0xe1
	lsls r5, r5, #3
	adds r1, r6, r5
	movs r0, #0xb
	str r0, [r1]
	bl _080854C8
	.align 2, 0
_08084CE0: .4byte 0x080FF9B8
_08084CE4:
	ldr r0, [r6, #0x14]
	ldr r1, [r6, #0x10]
	cmp r0, r1
	beq _08084CFC
	lsls r0, r1, #2
	adds r0, r0, r6
	ldr r7, _08084D38 @ =0x00000714
	adds r0, r0, r7
	ldr r1, [r0]
	adds r0, r6, #0
	bl func_080840F4
_08084CFC:
	ldr r0, [r6, #0x10]
	str r0, [r6, #0x14]
	movs r0, #0xe2
	lsls r0, r0, #3
	adds r5, r6, r0
	ldr r1, [r5]
	adds r0, r6, #0
	bl func_080C9020
	ldr r1, _08084D3C @ =0x000006A1
	adds r0, r6, r1
	ldrb r4, [r0]
	cmp r4, #0
	bne _08084D1A
	b _08084ED8
_08084D1A:
	movs r4, #0
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r5, r0
	ldr r0, [r0]
	subs r0, #0xb
	cmp r0, #8
	bhi _08084DF6
	lsls r0, r0, #2
	ldr r1, _08084D40 @ =_08084D44
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08084D38: .4byte 0x00000714
_08084D3C: .4byte 0x000006A1
_08084D40: .4byte _08084D44
_08084D44: @ jump table
	.4byte _08084D68 @ case 0
	.4byte _08084D76 @ case 1
	.4byte _08084D84 @ case 2
	.4byte _08084D92 @ case 3
	.4byte _08084DA0 @ case 4
	.4byte _08084DAE @ case 5
	.4byte _08084DC0 @ case 6
	.4byte _08084DD2 @ case 7
	.4byte _08084DE4 @ case 8
_08084D68:
	ldr r0, [r6, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetWindowStyle__C9FarmHouse
	b _08084DCC
_08084D76:
	ldr r0, [r6, #8]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl GetWindowStyle__C9FarmHouse
	b _08084DDE
_08084D84:
	ldr r0, [r6, #8]
	movs r5, #0xfa
	lsls r5, r5, #1
	adds r0, r0, r5
	bl GetWindowStyle__C9FarmHouse
	b _08084DBA
_08084D92:
	ldr r0, [r6, #8]
	movs r7, #0xfa
	lsls r7, r7, #1
	adds r0, r0, r7
	bl GetDoghouseStyle__C9FarmHouse
	b _08084DCC
_08084DA0:
	ldr r0, [r6, #8]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetDoghouseStyle__C9FarmHouse
	b _08084DDE
_08084DAE:
	ldr r0, [r6, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetDoghouseStyle__C9FarmHouse
_08084DBA:
	cmp r0, #2
	bne _08084DF6
	b _08084DFA
_08084DC0:
	ldr r0, [r6, #8]
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl GetMailboxStyle__C9FarmHouse
_08084DCC:
	cmp r0, #0
	bne _08084DF6
	b _08084DFA
_08084DD2:
	ldr r0, [r6, #8]
	movs r5, #0xfa
	lsls r5, r5, #1
	adds r0, r0, r5
	bl GetMailboxStyle__C9FarmHouse
_08084DDE:
	cmp r0, #1
	bne _08084DF6
	b _08084DFA
_08084DE4:
	ldr r0, [r6, #8]
	movs r7, #0xfa
	lsls r7, r7, #1
	adds r0, r0, r7
	bl GetMailboxStyle__C9FarmHouse
	cmp r0, #2
	bne _08084DF6
	movs r4, #1
_08084DF6:
	cmp r4, #0
	beq _08084E1C
_08084DFA:
	ldr r1, _08084E18 @ =0x080FF9CC
	adds r0, r6, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #0xac
	bl func_08050E50
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r6, r2
	b _08084EA8
	.align 2, 0
_08084E18: .4byte 0x080FF9CC
_08084E1C:
	add r4, sp, #0x14
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	ldr r3, _08084E70 @ =0x00000714
	adds r0, r0, r3
	ldr r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _08084E74 @ =0x080FF6A8
	adds r0, r4, #0
	adds r1, r1, r2
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldm r1!, {r3, r5}
	stm r0!, {r3, r5}
	ldr r1, [r6, #8]
	ldr r7, _08084E78 @ =0x00001AA8
	adds r0, r1, r7
	ldr r2, [r0]
	movs r3, #0
	ldr r0, [r4, #4]
	cmp r2, r0
	bhs _08084E50
	movs r3, #1
_08084E50:
	cmp r3, #0
	beq _08084E80
	ldr r1, _08084E7C @ =0x080FF858
	adds r0, r6, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r6, r1
	movs r1, #0xac
	bl func_08050E50
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r1, r6, r2
	b _08084EA8
	.align 2, 0
_08084E70: .4byte 0x00000714
_08084E74: .4byte 0x080FF6A8
_08084E78: .4byte 0x00001AA8
_08084E7C: .4byte 0x080FF858
_08084E80:
	adds r0, r1, #0
	adds r0, #0x14
	bl func_08009AF8
	ldr r1, [r4, #8]
	cmp r0, r1
	bhs _08084EB4
	ldr r1, _08084EB0 @ =0x080FF944
	adds r0, r6, #0
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r6, r3
	movs r1, #0xac
	bl func_08050E50
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r1, r6, r4
_08084EA8:
	movs r0, #4
	str r0, [r1]
	b _080854C8
	.align 2, 0
_08084EB0: .4byte 0x080FF944
_08084EB4:
	ldr r1, _08084ED4 @ =0x080FF968
	adds r0, r6, #0
	bl func_080CABA0
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r6, r5
	movs r1, #0xac
	bl func_08050E50
	movs r7, #0xe1
	lsls r7, r7, #3
	adds r1, r6, r7
	movs r0, #8
	str r0, [r1]
	b _080854C8
	.align 2, 0
_08084ED4: .4byte 0x080FF968
_08084ED8:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08084EE8
	b _080854C8
_08084EE8:
	ldr r0, [r6, #0x1c]
	bl func_08075DD4
	adds r0, r6, #0
	bl func_08083C64
	adds r7, r0, #0
	strh r4, [r6, #0xc]
	movs r0, #0xc9
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r6, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r6, r2]
	bl func_08075DB8
	ldr r0, [r6, #0x1c]
	adds r1, r7, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	movs r3, #0xe1
	lsls r3, r3, #3
	adds r0, r6, r3
	str r4, [r0]
	b _0808518C
_08084F24:
	adds r0, r6, #0
	bl func_080088CC
	adds r4, r0, #0
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	bne _08084F36
	b _08085098
_08084F36:
	ldr r4, _08084F98 @ =0x00000684
	adds r0, r6, r4
	ldr r7, [r0, #0x14]
	movs r5, #1
	bl func_080CAAF4
	add r0, sp, #0x14
	mov r8, r0
	movs r1, #0xa9
	lsls r1, r1, #2
	adds r1, r1, r6
	mov sb, r1
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	add r0, sb
	ldr r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _08084F9C @ =0x080FF6A8
	mov r0, r8
	adds r1, r1, r2
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r2, r3}
	stm r0!, {r2, r3}
	ldr r0, [r6, #8]
	ldr r4, _08084FA0 @ =0x00001AA8
	adds r0, r0, r4
	mov r2, r8
	ldr r1, [r2, #4]
	muls r1, r7, r1
	bl func_0809ACC0
	adds r0, r6, #0
	bl func_080C8550
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	mov r3, sb
	adds r4, r3, r0
	ldr r4, [r4]
	cmp r4, #0
	beq _08084FA4
	cmp r4, #1
	beq _08084FB8
	b _08085044
	.align 2, 0
_08084F98: .4byte 0x00000684
_08084F9C: .4byte 0x080FF6A8
_08084FA0: .4byte 0x00001AA8
_08084FA4:
	ldr r0, [r6, #8]
	adds r0, #0x14
	adds r1, r7, #0
	bl func_08009B68
	ldr r1, _08084FB4 @ =0x080FF9F4
	b _0808502E
	.align 2, 0
_08084FB4: .4byte 0x080FF9F4
_08084FB8:
	ldr r0, [r6, #8]
	ldr r4, _08085020 @ =0x00001C2C
	adds r0, r0, r4
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084FE6
	ldr r4, [r6, #8]
	ldr r5, _08085020 @ =0x00001C2C
	adds r4, r4, r5
	mov r5, sp
	adds r5, #0x55
	adds r0, r5, #0
	movs r1, #0x5a
	bl __7ArticleUi
	ldrb r1, [r5]
	adds r0, r4, #0
	bl func_0800F3E8
	subs r7, #1
	movs r5, #0
_08084FE6:
	cmp r7, #0
	beq _0808503C
	ldr r0, [r6, #8]
	ldr r1, _08085024 @ =0x00001C38
	adds r0, r0, r1
	movs r1, #0x5a
	adds r2, r7, #0
	bl func_0800FDC4
	adds r4, r0, #0
	cmp r7, r4
	bls _08085000
	movs r5, #0
_08085000:
	cmp r4, #0
	beq _0808503C
	ldr r0, [r6, #8]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	bl GetShelf__9FarmHouse
	movs r1, #0x5a
	adds r2, r4, #0
	bl AddAmountOf__5ShelfUiUi
	cmp r5, #0
	beq _0808502C
	ldr r1, _08085028 @ =0x080FFA24
	b _0808502E
	.align 2, 0
_08085020: .4byte 0x00001C2C
_08085024: .4byte 0x00001C38
_08085028: .4byte 0x080FFA24
_0808502C:
	ldr r1, _08085038 @ =0x080FFA70
_0808502E:
	adds r0, r6, #0
	bl func_080CABA0
	b _08085044
	.align 2, 0
_08085038: .4byte 0x080FFA70
_0808503C:
	ldr r1, _08085088 @ =0x080FFABC
	adds r0, r6, #0
	bl func_080CABA0
_08085044:
	ldr r3, _0808508C @ =0x0000070C
	adds r0, r6, r3
	movs r5, #1
	strb r5, [r0]
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r6, r4
	movs r1, #0xac
	bl func_08050E50
	movs r7, #0xe1
	lsls r7, r7, #3
	adds r4, r6, r7
	movs r0, #0xa
	str r0, [r4]
	ldr r0, [r6, #8]
	adds r0, #0x14
	bl func_08009AF8
	ldr r1, _08085090 @ =0x000003E7
	cmp r0, r1
	beq _08085072
	b _080854C8
_08085072:
	ldr r0, _08085094 @ =0x000061F0
	adds r1, r6, r0
	ldrb r0, [r1]
	cmp r0, #0
	beq _0808507E
	b _080854C8
_0808507E:
	strb r5, [r1]
	movs r0, #5
	str r0, [r4]
	b _080854C8
	.align 2, 0
_08085088: .4byte 0x080FFABC
_0808508C: .4byte 0x0000070C
_08085090: .4byte 0x000003E7
_08085094: .4byte 0x000061F0
_08085098:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080850D0
	ldr r1, _080850CC @ =0x00000684
	adds r0, r6, r1
	bl func_080CAAF4
	movs r2, #0xe1
	lsls r2, r2, #3
	adds r0, r6, r2
	str r4, [r0]
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r3, #0xaa
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r1, [r0]
	adds r0, r6, #0
	bl func_080840F4
	b _080854C8
	.align 2, 0
_080850CC: .4byte 0x00000684
_080850D0:
	ldr r4, _080850E4 @ =0x00000684
	adds r1, r6, r4
	ldrb r0, [r1, #8]
	cmp r0, #0
	bne _080850DC
	b _080854C8
_080850DC:
	adds r0, r1, #0
	bl func_080CA98C
	b _080854C8
	.align 2, 0
_080850E4: .4byte 0x00000684
_080850E8:
	movs r5, #0xd4
	lsls r5, r5, #2
	adds r0, r6, r5
	ldr r0, [r0]
	cmp r0, #3
	beq _080850F6
	b _080854C8
_080850F6:
	movs r7, #0xd2
	lsls r7, r7, #2
	adds r0, r6, r7
	bl func_08050E5C
	movs r0, #0xe1
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #1
	str r0, [r1]
	subs r0, #2
	str r0, [r6, #0x14]
	b _080854C8
_08085110:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #3
	beq _0808511E
	b _080854C8
_0808511E:
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r6, r2
	bl func_08050E5C
	movs r3, #0xe1
	lsls r3, r3, #3
	adds r1, r6, r3
	movs r0, #0
	str r0, [r1]
	subs r0, #1
	str r0, [r6, #0x14]
	b _080854C8
_08085138:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r6, r4
	ldr r0, [r0]
	cmp r0, #3
	beq _08085146
	b _080854C8
_08085146:
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r6, r5
	bl func_08050E5C
	movs r7, #0xe1
	lsls r7, r7, #3
	adds r0, r6, r7
	movs r4, #0
	str r4, [r0]
	ldr r0, [r6, #0x1c]
	bl func_08075DD4
	adds r0, r6, #0
	bl func_08083C64
	adds r7, r0, #0
	strh r4, [r6, #0xc]
	movs r0, #0xc9
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r6, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r6, r2]
	bl func_08075DB8
	ldr r0, [r6, #0x1c]
	adds r1, r7, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
_0808518C:
	str r4, [r6, #0x10]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x14]
	b _080854C8
_08085196:
	movs r3, #0xd4
	lsls r3, r3, #2
	adds r0, r6, r3
	ldr r0, [r0]
	cmp r0, #3
	beq _080851A4
	b _080854C8
_080851A4:
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r4, r6, r5
	adds r0, r4, #0
	bl func_08050E5C
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r7, #0xaa
	lsls r7, r7, #2
	adds r0, r0, r7
	ldr r0, [r0]
	cmp r0, #7
	bne _080851E4
	ldr r1, _080851DC @ =0x080FFACC
	ldr r2, _080851E0 @ =0x080FFAD4
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r3, #0
	bl func_08050E0C
	b _080851FA
	.align 2, 0
_080851DC: .4byte 0x080FFACC
_080851E0: .4byte 0x080FFAD4
_080851E4:
	ldr r1, _08085208 @ =0x080FFAE0
	ldr r2, _0808520C @ =0x080FFAE8
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r3, #0
	bl func_08050E0C
_080851FA:
	movs r0, #0xe1
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #7
	str r0, [r1]
	b _080854C8
	.align 2, 0
_08085208: .4byte 0x080FFAE0
_0808520C: .4byte 0x080FFAE8
_08085210:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #3
	beq _0808521E
	b _080854C8
_0808521E:
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r2, r2, r6
	mov sb, r2
	mov r0, sb
	bl func_08050DF0
	mov sl, r0
	cmp r0, #1
	beq _08085238
	cmp r0, #2
	beq _08085310
	b _080854C8
_08085238:
	add r4, sp, #0x14
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	movs r3, #0xaa
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _080852F8 @ =0x080FF6A8
	adds r0, r4, #0
	adds r1, r1, r2
	ldm r1!, {r2, r5, r7}
	stm r0!, {r2, r5, r7}
	ldm r1!, {r3, r5}
	stm r0!, {r3, r5}
	ldr r0, [r6, #8]
	ldr r7, _080852FC @ =0x00001F64
	adds r0, r0, r7
	ldr r1, [r4, #0xc]
	bl func_0809EBA8
	ldr r0, [r6, #8]
	ldr r1, _08085300 @ =0x00001AA8
	adds r0, r0, r1
	ldr r1, [r4, #4]
	bl func_0809ACC0
	adds r0, r6, #0
	bl func_080C8550
	ldr r0, [r6, #8]
	adds r0, #0x14
	ldr r1, [r4, #8]
	bl func_08009BAC
	ldr r2, _08085304 @ =0x000061F0
	adds r2, r2, r6
	mov r8, r2
	ldrb r0, [r2]
	cmp r0, #0
	beq _080852D2
	ldr r0, [r6, #0x1c]
	bl func_08075DD4
	adds r0, r6, #0
	bl func_08083C64
	adds r7, r0, #0
	movs r5, #0
	movs r4, #0
	strh r4, [r6, #0xc]
	movs r3, #0xc9
	lsls r3, r3, #3
	adds r1, r6, r3
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r6, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r6, r2]
	bl func_08075DB8
	ldr r0, [r6, #0x1c]
	adds r1, r7, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	str r4, [r6, #0x10]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r6, #0x14]
	mov r3, r8
	strb r5, [r3]
_080852D2:
	ldr r1, _08085308 @ =0x080FFAF8
	adds r0, r6, #0
	bl func_080CABA0
	mov r0, sb
	movs r1, #0xad
	bl func_08050E50
	movs r4, #0xe1
	lsls r4, r4, #3
	adds r1, r6, r4
	movs r0, #0xa
	str r0, [r1]
	ldr r5, _0808530C @ =0x0000070C
	adds r0, r6, r5
	mov r7, sl
	strb r7, [r0]
	b _080854C8
	.align 2, 0
_080852F8: .4byte 0x080FF6A8
_080852FC: .4byte 0x00001F64
_08085300: .4byte 0x00001AA8
_08085304: .4byte 0x000061F0
_08085308: .4byte 0x080FFAF8
_0808530C: .4byte 0x0000070C
_08085310:
	ldr r1, _0808532C @ =0x080FFB2C
	adds r0, r6, #0
	bl func_080CABA0
	mov r0, sb
	movs r1, #0xac
	bl func_08050E50
	movs r0, #0xe1
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #0xa
	str r0, [r1]
	b _080854C8
	.align 2, 0
_0808532C: .4byte 0x080FFB2C
_08085330:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r0, [r0]
	cmp r0, #3
	beq _0808533E
	b _080854C8
_0808533E:
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r4, r6, r2
	adds r0, r4, #0
	bl func_08050E5C
	ldr r1, _0808536C @ =0x080FFAE0
	ldr r2, _08085370 @ =0x080FFAE8
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r3, #0
	bl func_08050E0C
	movs r3, #0xe1
	lsls r3, r3, #3
	adds r1, r6, r3
	movs r0, #9
	str r0, [r1]
	b _080854C8
	.align 2, 0
_0808536C: .4byte 0x080FFAE0
_08085370: .4byte 0x080FFAE8
_08085374:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r6, r4
	ldr r0, [r0]
	cmp r0, #3
	beq _08085382
	b _080854C8
_08085382:
	movs r7, #0xd2
	lsls r7, r7, #2
	adds r5, r6, r7
	adds r0, r5, #0
	bl func_08050DF0
	mov r8, r0
	cmp r0, #1
	beq _0808539A
	cmp r0, #2
	beq _08085434
	b _080854C8
_0808539A:
	add r4, sp, #0x14
	ldr r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r6
	ldr r1, _08085418 @ =0x00000714
	adds r0, r0, r1
	ldr r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _0808541C @ =0x080FF6A8
	adds r0, r4, #0
	adds r1, r1, r2
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldm r1!, {r2, r3}
	stm r0!, {r2, r3}
	ldr r0, [r6, #8]
	ldr r7, _08085420 @ =0x00001F64
	adds r0, r0, r7
	ldr r1, [r4, #0xc]
	bl func_0809EBA8
	ldr r0, [r6, #8]
	ldr r1, _08085424 @ =0x00001AA8
	adds r0, r0, r1
	ldr r1, [r4, #4]
	bl func_0809ACC0
	adds r0, r6, #0
	bl func_080C8550
	ldr r0, [r6, #8]
	adds r0, #0x14
	ldr r1, [r4, #8]
	bl func_08009BAC
	ldr r2, _08085428 @ =0x000061F0
	adds r1, r6, r2
	ldrb r0, [r1]
	cmp r0, #0
	beq _080853F2
	movs r0, #0
	strb r0, [r1]
_080853F2:
	ldr r1, _0808542C @ =0x080FFAF8
	adds r0, r6, #0
	bl func_080CABA0
	adds r0, r5, #0
	movs r1, #0xad
	bl func_08050E50
	movs r3, #0xe1
	lsls r3, r3, #3
	adds r1, r6, r3
	movs r0, #5
	str r0, [r1]
	ldr r4, _08085430 @ =0x0000070C
	adds r0, r6, r4
	mov r5, r8
	strb r5, [r0]
	b _080854C8
	.align 2, 0
_08085418: .4byte 0x00000714
_0808541C: .4byte 0x080FF6A8
_08085420: .4byte 0x00001F64
_08085424: .4byte 0x00001AA8
_08085428: .4byte 0x000061F0
_0808542C: .4byte 0x080FFAF8
_08085430: .4byte 0x0000070C
_08085434:
	ldr r1, _08085450 @ =0x080FFB2C
	adds r0, r6, #0
	bl func_080CABA0
	adds r0, r5, #0
	movs r1, #0xac
	bl func_08050E50
	movs r7, #0xe1
	lsls r7, r7, #3
	adds r1, r6, r7
	movs r0, #5
	str r0, [r1]
	b _080854C8
	.align 2, 0
_08085450: .4byte 0x080FFB2C
_08085454:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r4, [r0]
	cmp r4, #3
	bne _080854C8
	ldr r1, _08085480 @ =0x080FFB3C
	adds r0, r6, #0
	bl func_080CABA0
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r6, r2
	movs r1, #0xac
	bl func_08050E50
	movs r3, #0xe1
	lsls r3, r3, #3
	adds r0, r6, r3
	str r4, [r0]
	b _080854C8
	.align 2, 0
_08085480: .4byte 0x080FFB3C
_08085484:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r6, r4
	ldr r0, [r0]
	cmp r0, #3
	bne _080854C8
	ldr r2, [sp, #0x10]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r1, r0, #0x1f
	cmp r1, #0
	bne _080854C8
	movs r5, #0xe1
	lsls r5, r5, #3
	adds r0, r6, r5
	str r1, [r0]
	movs r7, #1
	str r7, [sp, #0x5c]
	ldr r1, _080854D4 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x10]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_080854C8:
	adds r0, r6, #0
	bl func_080C96C4
	bl _08084498
	.align 2, 0
_080854D4: .4byte 0x00000889

	thumb_func_start sub_080854D8
sub_080854D8: @ 0x080854D8
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	add sp, #0x70
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_080854F4
func_080854F4: @ 0x080854F4
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _08085520 @ =vtable_unk_080E7D20
	str r0, [r4]
	ldr r0, _08085524 @ =0x000061F4
	bl __builtin_new
	adds r1, r5, #0
	bl func_08083BD4
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08085520: .4byte vtable_unk_080E7D20
_08085524: .4byte 0x000061F4

	thumb_func_start func_08085528
func_08085528: @ 0x08085528
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08085564 @ =vtable_unk_080E7D20
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08085544
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08085544:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _08085556
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08085556:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08085564: .4byte vtable_unk_080E7D20

	thumb_func_start func_08085568
func_08085568: @ 0x08085568
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_08084228
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_08085584
func_08085584: @ 0x08085584
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r2, #0
	bl func_080C7F58
	ldr r0, _080855A4 @ =vtable_unk_080E7D30
	str r0, [r5, #4]
	ldr r0, _080855A8 @ =0x000006A4
	adds r1, r5, r0
	cmp r4, #0
	beq _080855B2
	cmp r4, #1
	beq _080855AC
	movs r0, #6
	str r0, [r1]
	b _080855B4
	.align 2, 0
_080855A4: .4byte vtable_unk_080E7D30
_080855A8: .4byte 0x000006A4
_080855AC:
	movs r0, #5
	str r0, [r1]
	b _080855B4
_080855B2:
	str r4, [r1]
_080855B4:
	movs r1, #0xd5
	lsls r1, r1, #3
	adds r0, r5, r1
	movs r1, #0
	strb r1, [r0]
	ldr r2, _08085618 @ =0x0000072C
	adds r0, r5, r2
	str r1, [r0]
	movs r0, #0x10
	ldr r7, _0808561C @ =0x080FFC6C
	subs r1, #1
_080855CA:
	subs r0, #1
	cmp r0, r1
	bne _080855CA
	ldr r0, _08085620 @ =0x00003AB4
	adds r6, r5, r0
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x7f
	bls _080855E2
	movs r4, #0x7f
_080855E2:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
	ldr r2, _08085624 @ =0x00003B34
	adds r1, r5, r2
	movs r0, #0
	strb r0, [r1]
	ldr r1, _08085628 @ =0x00003B98
	adds r0, r5, r1
	movs r1, #0xf
	movs r3, #0
	movs r2, #1
	rsbs r2, r2, #0
_08085606:
	strb r3, [r0, #4]
	adds r0, #0x84
	subs r1, #1
	cmp r1, r2
	bne _08085606
	adds r0, r5, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08085618: .4byte 0x0000072C
_0808561C: .4byte 0x080FFC6C
_08085620: .4byte 0x00003AB4
_08085624: .4byte 0x00003B34
_08085628: .4byte 0x00003B98

	thumb_func_start func_0808562C
func_0808562C: @ 0x0808562C
	push {lr}
	ldr r2, _0808563C @ =vtable_unk_080E7D30
	str r2, [r0, #4]
	bl func_080C8360
	pop {r0}
	bx r0
	.align 2, 0
_0808563C: .4byte vtable_unk_080E7D30

	thumb_func_start func_08085640
func_08085640: @ 0x08085640
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xec
	adds r6, r0, #0
	movs r0, #4
	str r0, [sp, #0xd8]
	adds r3, r6, #0
	adds r3, #0x20
	adds r5, r6, #0
	adds r5, #0x24
	ldr r0, [r6, #0x20]
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r3, r0
	adds r2, r0, #0
	adds r1, r5, #0
	ldr r4, [r3]
	cmp r1, r2
	beq _08085672
_0808566C:
	adds r1, #0x10
	cmp r1, r2
	bne _0808566C
_08085672:
	subs r0, r0, r5
	asrs r0, r0, #4
	subs r0, r4, r0
	str r0, [r3]
	movs r1, #0
	str r1, [sp, #0xdc]
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r0, r6, r2
	ldr r0, [r0]
	cmp r1, r0
	blo _0808568C
	b _08085854
_0808568C:
	mov r3, sp
	adds r3, #0x1c
	str r3, [sp, #0xe4]
	movs r5, #0
	movs r4, #4
	str r4, [sp, #0xe8]
_08085698:
	movs r7, #0xa9
	lsls r7, r7, #2
	adds r0, r6, r7
	ldr r1, [sp, #0xe8]
	adds r0, r0, r1
	ldr r3, [r0]
	lsls r1, r3, #2
	adds r1, r1, r3
	lsls r1, r1, #2
	ldr r2, _0808574C @ =0x080FFB90
	add r0, sp, #8
	adds r1, r1, r2
	ldm r1!, {r2, r4, r7}
	stm r0!, {r2, r4, r7}
	ldm r1!, {r2, r4}
	stm r0!, {r2, r4}
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #3
	adds r0, #0xd0
	str r0, [sp, #0xe0]
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _080856CE
	cmp r0, #2
	beq _080856CE
	b _080857D6
_080856CE:
	movs r0, #0x10
	ldr r7, [sp, #0xe4]
	str r0, [r7, #4]
	add r4, sp, #0x2c
	adds r0, r4, #0
	ldr r1, _08085750 @ =0x086678A0
	bl func_0805E6CC
	add r0, sp, #0x5c
	strh r5, [r0]
	strh r5, [r0, #2]
	add r0, sp, #0x60
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	add r0, sp, #0x74
	strh r5, [r0]
	strh r5, [r0, #2]
	strh r5, [r0, #4]
	strh r5, [r0, #6]
	strh r5, [r0, #8]
	str r5, [r0, #0xc]
	movs r1, #0
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	str r5, [r0, #0x14]
	strb r1, [r0, #0x18]
	add r0, sp, #0x90
	strb r1, [r0]
	add r3, sp, #0x94
	str r5, [r3]
	strh r5, [r3, #4]
	add r2, sp, #0x9c
	str r5, [r2]
	strh r5, [r2, #4]
	add r1, sp, #0xa4
	str r5, [r1]
	strh r5, [r1, #4]
	add r0, sp, #0xac
	str r5, [r0]
	strh r5, [r0, #4]
	ldr r4, [sp, #0xd8]
	lsls r0, r4, #3
	strh r0, [r7]
	ldr r0, [sp, #0x18]
	add r7, sp, #0x1c
	mov r8, r3
	mov sb, r2
	mov sl, r1
	cmp r0, #0
	bne _08085754
	add r4, sp, #0xd4
	ldr r1, [sp, #8]
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetIconId__C7Article
	b _08085766
	.align 2, 0
_0808574C: .4byte 0x080FFB90
_08085750: .4byte 0x086678A0
_08085754:
	mov r4, sp
	adds r4, #0xd5
	ldr r1, [sp, #8]
	adds r0, r4, #0
	bl __4ToolUi
	adds r0, r4, #0
	bl GetIconId__C4Tool
_08085766:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	add r4, sp, #0x60
	adds r0, r4, #0
	bl func_0805E860
	ldr r1, [sp, #0x60]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r0, [sp, #0x64]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0xb4
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0xb4
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	mov r0, r8
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	mov r3, sb
	ldr r0, [r3]
	str r0, [r7, #8]
	mov r4, sl
	ldr r0, [r4]
	str r0, [r7, #0xc]
	adds r1, r6, #0
	adds r1, #0x20
	ldr r0, [r6, #0x20]
	cmp r0, #0x27
	bhi _080857D2
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _080857CC
	adds r1, r7, #0
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [sp, #0x28]
	str r1, [r0]
_080857CC:
	ldr r0, [r6, #0x20]
	adds r0, #1
	str r0, [r6, #0x20]
_080857D2:
	ldr r0, _08085868 @ =vtable_unk_080E5A28
	str r0, [sp, #0x2c]
_080857D6:
	ldr r0, [r6, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r7, [sp, #0xd8]
	lsls r4, r7, #6
	adds r0, r0, r4
	adds r0, #4
	ldr r2, [sp, #0xe0]
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	movs r3, #0
	mov sb, r3
	str r3, [sp]
	movs r7, #0x20
	str r7, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r0, r0, r6
	mov r8, r0
	ldr r0, [sp, #0xe8]
	add r0, r8
	ldr r0, [r0]
	cmp r0, #6
	bhi _08085838
	ldr r0, [r6, #0x1c]
	ldr r1, [r0, #0x18]
	adds r1, r1, r4
	adds r1, #0x32
	ldr r0, [sp, #0x10]
	str r7, [sp]
	movs r2, #0xa0
	movs r3, #0
	bl func_0804EDB4
	ldr r0, [r6, #0x1c]
	ldr r0, [r0, #0x18]
	adds r0, r0, r4
	adds r0, #0x34
	mov r1, sb
	str r1, [sp]
	str r7, [sp, #4]
	movs r1, #0x20
	movs r2, #2
	movs r3, #2
	bl func_0804E9F4
_08085838:
	ldr r2, [sp, #0xd8]
	adds r2, #2
	str r2, [sp, #0xd8]
	ldr r3, [sp, #0xe8]
	adds r3, #4
	str r3, [sp, #0xe8]
	ldr r4, [sp, #0xdc]
	adds r4, #1
	str r4, [sp, #0xdc]
	mov r7, r8
	ldr r0, [r7]
	cmp r4, r0
	bhs _08085854
	b _08085698
_08085854:
	ldr r0, [sp, #0xd8]
	add sp, #0xec
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08085868: .4byte vtable_unk_080E5A28

	thumb_func_start func_0808586C
func_0808586C: @ 0x0808586C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x78
	adds r7, r0, #0
	str r1, [sp, #0x50]
	movs r0, #4
	str r0, [sp, #0x54]
	adds r4, r7, #0
	adds r4, #0x20
	adds r6, r7, #0
	adds r6, #0x24
	ldr r0, [r7, #0x20]
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	adds r2, r0, #0
	adds r1, r6, #0
	ldr r5, [r4]
	ldr r3, [r7, #8]
	cmp r1, r2
	beq _080858A2
_0808589C:
	adds r1, #0x10
	cmp r1, r2
	bne _0808589C
_080858A2:
	subs r0, r0, r6
	asrs r0, r0, #4
	subs r0, r5, r0
	str r0, [r4]
	movs r1, #0
	str r1, [sp, #0x58]
	b _08085E8A
_080858B0:
	movs r2, #0
	str r2, [sp, #0x5c]
	movs r3, #0
	str r3, [sp, #0x60]
	ldr r4, [sp, #0x50]
	cmp r4, #0x1e
	bne _080858CE
	ldr r0, [r7, #8]
	movs r5, #0xbe
	lsls r5, r5, #3
	adds r0, r0, r5
	bl GetCow__4BarnUi
	str r0, [sp, #0x5c]
	b _080858DC
_080858CE:
	ldr r0, [r7, #8]
	movs r6, #0xbe
	lsls r6, r6, #3
	adds r0, r0, r6
	bl GetSheep__4BarnUi
	str r0, [sp, #0x60]
_080858DC:
	movs r0, #0x10
	str r0, [sp, #0x10]
	add r1, sp, #0xc
	ldr r2, [sp, #0x54]
	lsls r0, r2, #3
	strh r0, [r1]
	ldr r3, [sp, #0x50]
	cmp r3, #0x1e
	bne _08085900
	ldr r0, _080858F8 @ =0x08751B4C
	str r0, [sp, #0x14]
	ldr r0, _080858FC @ =0x08751BCC
	b _08085906
	.align 2, 0
_080858F8: .4byte 0x08751B4C
_080858FC: .4byte 0x08751BCC
_08085900:
	ldr r0, _08085964 @ =0x0875320C
	str r0, [sp, #0x14]
	ldr r0, _08085968 @ =0x0875328C
_08085906:
	str r0, [sp, #0x18]
	ldr r0, [r7, #0x20]
	adds r4, r7, #0
	adds r4, #0x20
	cmp r0, #0x27
	bhi _0808592C
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _08085926
	add r1, sp, #0xc
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085926:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_0808592C:
	ldr r3, [sp, #0x50]
	cmp r3, #0x1e
	bne _08085974
	ldr r0, [sp, #0x5c]
	bl IsFestivalWinner__C6Animal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080859AC
	movs r0, #0x20
	str r0, [sp, #0x10]
	ldr r0, _0808596C @ =0x0875196C
	str r0, [sp, #0x14]
	ldr r0, _08085970 @ =0x087519EC
	str r0, [sp, #0x18]
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _080859AC
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _080859A6
	add r1, sp, #0xc
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	b _080859A2
	.align 2, 0
_08085964: .4byte 0x0875320C
_08085968: .4byte 0x0875328C
_0808596C: .4byte 0x0875196C
_08085970: .4byte 0x087519EC
_08085974:
	ldr r0, [sp, #0x60]
	bl IsFestivalWinner__C6Animal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080859AC
	movs r0, #0x20
	str r0, [sp, #0x10]
	ldr r0, _08085A0C @ =0x0875196C
	str r0, [sp, #0x14]
	ldr r0, _08085A10 @ =0x087519EC
	str r0, [sp, #0x18]
	ldr r0, [r7, #0x20]
	cmp r0, #0x27
	bhi _080859AC
	lsls r0, r0, #4
	adds r0, #4
	adds r0, r4, r0
	cmp r0, #0
	beq _080859A6
	add r1, sp, #0xc
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
_080859A2:
	ldr r1, [r1]
	str r1, [r0]
_080859A6:
	ldr r0, [r7, #0x20]
	adds r0, #1
	str r0, [r7, #0x20]
_080859AC:
	ldr r5, [sp, #0x58]
	lsls r4, r5, #1
	adds r0, r4, r5
	lsls r0, r0, #6
	adds r0, r0, r5
	lsls r5, r0, #2
	adds r1, r5, r7
	add r0, sp, #0x2c
	movs r6, #0xc
	movs r2, #2
	mov r8, r2
	movs r3, #0
	mov sb, r3
	strh r6, [r0]
	mov r2, r8
	strh r2, [r0, #2]
	ldr r0, [sp, #0x2c]
	ldr r3, _08085A14 @ =0x00000774
	adds r1, r1, r3
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [sp, #0x50]
	cmp r0, #0x1e
	bne _08085A18
	ldr r0, [sp, #0x5c]
	bl GetName__C6Animal
	adds r2, r0, #0
	adds r1, r5, r7
	add r0, sp, #0x30
	strh r6, [r0]
	mov r3, r8
	strh r3, [r0, #2]
	ldr r0, [sp, #0x30]
	ldr r5, _08085A14 @ =0x00000774
	adds r1, r1, r5
	str r2, [sp]
	mov r6, sb
	str r6, [sp, #4]
	movs r2, #1
	str r2, [sp, #8]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
	b _08085A42
	.align 2, 0
_08085A0C: .4byte 0x0875196C
_08085A10: .4byte 0x087519EC
_08085A14: .4byte 0x00000774
_08085A18:
	ldr r0, [sp, #0x60]
	bl GetName__C6Animal
	adds r2, r0, #0
	adds r1, r5, r7
	add r0, sp, #0x34
	strh r6, [r0]
	mov r3, r8
	strh r3, [r0, #2]
	ldr r0, [sp, #0x34]
	ldr r5, _08085AB8 @ =0x00000774
	adds r1, r1, r5
	str r2, [sp]
	mov r6, sb
	str r6, [sp, #4]
	movs r2, #1
	str r2, [sp, #8]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
_08085A42:
	ldr r1, [sp, #0x58]
	adds r1, #9
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, #0xd0
	mov sl, r0
	adds r0, r7, #0
	bl func_08008910
	ldr r3, [sp, #0x58]
	adds r1, r4, r3
	lsls r1, r1, #6
	adds r1, r1, r3
	lsls r1, r1, #2
	adds r1, r1, r7
	ldr r4, _08085AB8 @ =0x00000774
	adds r1, r1, r4
	adds r5, r0, #0
	mov r6, sl
	lsls r2, r6, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r2, r2, r0
	add r0, sp, #0x1c
	movs r3, #0xc0
	lsls r3, r3, #2
	bl func_08008F0C
	add r1, sp, #0x1c
	mov sb, r1
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08085ABC
	cmp r1, #0
	beq _08085A98
	adds r0, r1, #0
	add r1, sp, #0x1c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08085A98:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	ldr r5, [sp, #0x54]
	lsls r5, r5, #6
	str r5, [sp, #0x6c]
	mov r6, sl
	lsls r6, r6, #0x10
	mov sl, r6
	ldr r0, [sp, #0x54]
	adds r0, #2
	str r0, [sp, #0x68]
	ldr r1, [sp, #0x58]
	adds r1, #1
	str r1, [sp, #0x64]
	b _08085BA6
	.align 2, 0
_08085AB8: .4byte 0x00000774
_08085ABC:
	str r1, [sp, #0x74]
	movs r2, #1
	str r2, [sp, #0x3c]
	ldr r0, [r5]
	adds r3, r1, #0
	subs r0, r3, r0
	asrs r4, r0, #4
	str r4, [sp, #0x38]
	add r1, sp, #0x3c
	add r0, sp, #0x38
	cmp r4, #1
	bhs _08085AD6
	adds r0, r1, #0
_08085AD6:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08085AF4
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	str r4, [sp, #0x70]
	cmp r0, #0
	bne _08085AFA
	adds r0, r4, #0
	bl func_080D3BC0
	b _08085AFA
_08085AF4:
	movs r0, #0
	movs r4, #0
	str r4, [sp, #0x70]
_08085AFA:
	adds r4, r0, #0
	mov r8, r4
	ldr r2, [r5]
	mov ip, r8
	ldr r6, [sp, #0x54]
	lsls r6, r6, #6
	str r6, [sp, #0x6c]
	mov r0, sl
	lsls r0, r0, #0x10
	mov sl, r0
	ldr r1, [sp, #0x54]
	adds r1, #2
	str r1, [sp, #0x68]
	ldr r3, [sp, #0x58]
	adds r3, #1
	str r3, [sp, #0x64]
	ldr r4, [sp, #0x74]
	cmp r2, r4
	beq _08085B3E
_08085B20:
	mov r6, ip
	cmp r6, #0
	beq _08085B32
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085B32:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	ldr r1, [sp, #0x74]
	cmp r2, r1
	bne _08085B20
_08085B3E:
	mov r4, ip
	ldr r0, [sp, #0x3c]
	cmp r0, #1
	bne _08085B5A
	cmp r4, #0
	beq _08085B56
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085B56:
	adds r4, #0x10
	b _08085B82
_08085B5A:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _08085B80
_08085B62:
	cmp r2, #0
	beq _08085B72
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085B72:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _08085B62
_08085B80:
	adds r4, r2, #0
_08085B82:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _08085B92
_08085B8C:
	adds r1, #0x10
	cmp r1, r2
	bne _08085B8C
_08085B92:
	cmp r0, #0
	beq _08085B9A
	bl free
_08085B9A:
	ldr r0, [sp, #0x70]
	add r0, r8
	mov r2, r8
	str r2, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_08085BA6:
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	ldr r3, [sp, #0x6c]
	adds r0, r0, r3
	adds r0, #0xc
	mov r4, sl
	lsrs r1, r4, #0x10
	movs r2, #0
	str r2, [sp]
	movs r2, #0x20
	str r2, [sp, #4]
	movs r2, #0xc
	movs r3, #2
	bl func_0804E9F4
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	movs r6, #0xca
	lsls r6, r6, #2
	lsls r2, r6, #5
	add r0, sp, #0x1c
	ldr r1, _08085C08 @ =0x0875254C
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r2, r2, r3
	movs r3, #0x80
	bl func_08008F0C
	add r4, sp, #0x1c
	mov sl, r4
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08085C0C
	cmp r1, #0
	beq _08085BFE
	adds r0, r1, #0
	add r1, sp, #0x1c
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085BFE:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08085CE0
	.align 2, 0
_08085C08: .4byte 0x0875254C
_08085C0C:
	str r1, [sp, #0x74]
	movs r4, #1
	str r4, [sp, #0x44]
	ldr r1, [r5]
	ldr r6, [sp, #0x74]
	subs r0, r6, r1
	asrs r4, r0, #4
	str r4, [sp, #0x40]
	add r2, sp, #0x44
	add r0, sp, #0x40
	cmp r4, #1
	bhs _08085C26
	adds r0, r2, #0
_08085C26:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08085C46
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08085C42
	mov r0, sb
	bl func_080D3BC0
_08085C42:
	ldr r1, [r5]
	b _08085C4A
_08085C46:
	movs r0, #0
	mov sb, r0
_08085C4A:
	adds r4, r0, #0
	mov r8, r4
	adds r2, r1, #0
	mov ip, r8
	ldr r0, [sp, #0x74]
	cmp r2, r0
	beq _08085C76
_08085C58:
	mov r1, ip
	cmp r1, #0
	beq _08085C6A
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085C6A:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	ldr r1, [sp, #0x74]
	cmp r2, r1
	bne _08085C58
_08085C76:
	mov r4, ip
	ldr r0, [sp, #0x44]
	cmp r0, #1
	bne _08085C92
	cmp r4, #0
	beq _08085C8E
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085C8E:
	adds r4, #0x10
	b _08085CBA
_08085C92:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _08085CB8
_08085C9A:
	cmp r2, #0
	beq _08085CAA
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085CAA:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _08085C9A
_08085CB8:
	adds r4, r2, #0
_08085CBA:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _08085CCA
_08085CC4:
	adds r0, #0x10
	cmp r0, r2
	bne _08085CC4
_08085CCA:
	cmp r1, #0
	beq _08085CD4
	adds r0, r1, #0
	bl free
_08085CD4:
	mov r0, sb
	add r0, r8
	mov r2, r8
	str r2, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_08085CE0:
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	add r0, sp, #0x1c
	ldr r1, _08085D18 @ =0x087525CC
	ldr r2, _08085D1C @ =0x05000020
	movs r3, #0x20
	bl func_08008F0C
	add r3, sp, #0x1c
	mov sl, r3
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08085D20
	cmp r1, #0
	beq _08085D10
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r4, r6}
	stm r0!, {r2, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085D10:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08085DF2
	.align 2, 0
_08085D18: .4byte 0x087525CC
_08085D1C: .4byte 0x05000020
_08085D20:
	str r1, [sp, #0x74]
	movs r3, #1
	str r3, [sp, #0x4c]
	ldr r1, [r5]
	ldr r4, [sp, #0x74]
	subs r0, r4, r1
	asrs r4, r0, #4
	str r4, [sp, #0x48]
	add r2, sp, #0x4c
	add r0, sp, #0x48
	cmp r4, #1
	bhs _08085D3A
	adds r0, r2, #0
_08085D3A:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08085D5A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08085D56
	mov r0, sb
	bl func_080D3BC0
_08085D56:
	ldr r1, [r5]
	b _08085D5E
_08085D5A:
	movs r0, #0
	mov sb, r0
_08085D5E:
	adds r4, r0, #0
	mov r8, r4
	adds r2, r1, #0
	mov ip, r8
	ldr r6, [sp, #0x74]
	cmp r2, r6
	beq _08085D88
_08085D6C:
	mov r0, ip
	cmp r0, #0
	beq _08085D7C
	adds r1, r2, #0
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085D7C:
	adds r2, #0x10
	movs r0, #0x10
	add ip, r0
	ldr r1, [sp, #0x74]
	cmp r2, r1
	bne _08085D6C
_08085D88:
	mov r4, ip
	ldr r0, [sp, #0x4c]
	cmp r0, #1
	bne _08085DA4
	cmp r4, #0
	beq _08085DA0
	adds r0, r4, #0
	mov r1, sl
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085DA0:
	adds r4, #0x10
	b _08085DCC
_08085DA4:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _08085DCA
_08085DAC:
	cmp r2, #0
	beq _08085DBC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r4, r6}
	stm r0!, {r3, r4, r6}
	ldr r1, [r1]
	str r1, [r0]
_08085DBC:
	movs r0, #1
	rsbs r0, r0, #0
	add ip, r0
	adds r2, #0x10
	mov r1, ip
	cmp r1, #0
	bne _08085DAC
_08085DCA:
	adds r4, r2, #0
_08085DCC:
	ldr r2, [r5, #4]
	ldr r1, [r5]
	adds r0, r1, #0
	cmp r1, r2
	beq _08085DDC
_08085DD6:
	adds r0, #0x10
	cmp r0, r2
	bne _08085DD6
_08085DDC:
	cmp r1, #0
	beq _08085DE6
	adds r0, r1, #0
	bl free
_08085DE6:
	mov r0, sb
	add r0, r8
	mov r2, r8
	str r2, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_08085DF2:
	ldr r3, [sp, #0x50]
	cmp r3, #0x1e
	bne _08085E3E
	movs r5, #0
	ldr r0, [sp, #0x54]
	adds r0, #1
	lsls r0, r0, #6
	mov r8, r0
	movs r4, #0x26
	movs r0, #0xca
	lsls r0, r0, #2
	lsls r6, r0, #0x10
	b _08085E2A
_08085E0C:
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, r8
	adds r0, r0, r4
	movs r1, #1
	str r1, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r6, #0x10
	movs r2, #1
	movs r3, #1
	bl func_0804E9F4
	adds r4, #2
	adds r5, #1
_08085E2A:
	ldr r0, [sp, #0x5c]
	bl GetAffection__C6Animal
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_08085EC4
	cmp r5, r0
	blo _08085E0C
	b _08085E80
_08085E3E:
	movs r5, #0
	ldr r0, [sp, #0x54]
	adds r0, #1
	lsls r0, r0, #6
	mov r8, r0
	movs r4, #0x26
	movs r2, #0xca
	lsls r2, r2, #2
	lsls r6, r2, #0x10
	b _08085E6E
_08085E52:
	ldr r0, [r7, #0x1c]
	ldr r0, [r0, #0x18]
	add r0, r8
	adds r0, r0, r4
	movs r3, #1
	str r3, [sp]
	movs r1, #0x20
	str r1, [sp, #4]
	lsrs r1, r6, #0x10
	movs r2, #1
	bl func_0804E9F4
	adds r4, #2
	adds r5, #1
_08085E6E:
	ldr r0, [sp, #0x60]
	bl GetAffection__C6Animal
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_08085EC4
	cmp r5, r0
	blo _08085E52
_08085E80:
	ldr r4, [sp, #0x68]
	str r4, [sp, #0x54]
	ldr r5, [sp, #0x64]
	str r5, [sp, #0x58]
	ldr r3, [r7, #8]
_08085E8A:
	movs r6, #0xbe
	lsls r6, r6, #3
	adds r0, r3, r6
	bl GetCapacity__C4Barn
	ldr r1, [sp, #0x58]
	cmp r1, r0
	bhs _08085EAE
	lsls r0, r1, #3
	ldr r2, _08085EC0 @ =0x000006AC
	adds r1, r7, r2
	adds r1, r1, r0
	ldr r1, [r1]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _08085EAE
	b _080858B0
_08085EAE:
	ldr r0, [sp, #0x54]
	add sp, #0x78
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08085EC0: .4byte 0x000006AC

	thumb_func_start func_08085EC4
func_08085EC4: @ 0x08085EC4
	push {r4, lr}
	sub sp, #8
	adds r0, r1, #0
	movs r4, #0xa
	str r4, [sp]
	movs r1, #0x19
	bl func_080D0EDA
	str r0, [sp, #4]
	add r1, sp, #4
	mov r2, sp
	cmp r4, r0
	bls _08085EE0
	adds r2, r1, #0
_08085EE0:
	ldr r0, [r2]
	add sp, #8
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08085EEC
func_08085EEC: @ 0x08085EEC
	push {lr}
	ldr r1, _08085F00 @ =0x000043D8
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, #1
	bls _08085EFA
	ldr r0, _08085F04 @ =0x000003E7
_08085EFA:
	pop {r1}
	bx r1
	.align 2, 0
_08085F00: .4byte 0x000043D8
_08085F04: .4byte 0x000003E7

	thumb_func_start func_08085F08
func_08085F08: @ 0x08085F08
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	mov r8, r0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r2, _08085F40 @ =0x080FFB90
	mov r1, sp
	adds r0, r0, r2
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r0, [sp, #0x10]
	cmp r0, #4
	bls _08085F34
	bl sub_080868BC
_08085F34:
	lsls r0, r0, #2
	ldr r1, _08085F44 @ =_08085F48
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08085F40: .4byte 0x080FFB90
_08085F44: .4byte _08085F48
_08085F48: @ jump table
	.4byte _08085F5C @ case 0
	.4byte _08085F86 @ case 1
	.4byte _08085F70 @ case 2
	.4byte _08085F86 @ case 3
	.4byte _08085F92 @ case 4
_08085F5C:
	add r4, sp, #0x28
	ldr r1, [sp]
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetDesc__C7Article
	adds r1, r0, #0
	b _08085F88
_08085F70:
	mov r4, sp
	adds r4, #0x29
	ldr r1, [sp]
	adds r0, r4, #0
	bl __4ToolUi
	adds r0, r4, #0
	bl GetDesc__C4Tool
	adds r1, r0, #0
	b _08085F88
_08085F86:
	ldr r1, [sp, #0xc]
_08085F88:
	mov r0, r8
	bl func_080CABEC
	bl sub_080868BC
_08085F92:
	mov r4, r8
	ldr r0, [r4, #0x10]
	lsls r0, r0, #3
	ldr r7, _0808604C @ =0x000006AC
	add r7, r8
	adds r0, r7, r0
	ldr r0, [r0]
	mov sl, r0
	lsls r0, r0, #5
	add r0, sl
	lsls r0, r0, #2
	adds r1, r4, r0
	ldr r2, _08086050 @ =0x00003B98
	adds r0, r1, r2
	ldrb r0, [r0]
	str r0, [sp, #0x2c]
	cmp r0, #0
	beq _08085FBA
	bl sub_080868A8
_08085FBA:
	ldr r3, _08086054 @ =0x00003B9C
	adds r5, r1, r3
	ldr r6, _08086058 @ =0x080FFB60
	adds r0, r6, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x7f
	bls _08085FCE
	movs r4, #0x7f
_08085FCE:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r5, r4
	add r4, sp, #0x2c
	ldrb r4, [r4]
	strb r4, [r0]
	mov r0, r8
	ldr r1, [r0, #0x10]
	lsls r0, r1, #2
	add r0, r8
	movs r2, #0xe6
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r0, [r0]
	cmp r0, #9
	beq _08085FF6
	b _08086430
_08085FF6:
	mov r3, r8
	ldr r0, [r3, #8]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	lsls r1, r1, #3
	adds r1, r7, r1
	ldr r1, [r1]
	bl GetCow__4BarnUi
	str r0, [sp, #0x30]
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08086060
	ldr r7, _0808605C @ =0x080FFC70
	adds r0, r5, #0
	bl strlen
	adds r6, r5, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080860D6
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086036
	adds r4, r5, #0
_08086036:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	add r1, sp, #0x2c
	ldrb r1, [r1]
	strb r1, [r0]
	b _080860D6
	.align 2, 0
_0808604C: .4byte 0x000006AC
_08086050: .4byte 0x00003B98
_08086054: .4byte 0x00003B9C
_08086058: .4byte 0x080FFB60
_0808605C: .4byte 0x080FFC70
_08086060:
	ldr r0, [sp, #0x30]
	bl IsUnhappy__C9Livestock
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080860A4
	ldr r7, _080860A0 @ =0x080FFC80
	adds r0, r5, #0
	bl strlen
	adds r6, r5, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080860D6
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0808608C
	adds r4, r5, #0
_0808608C:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	add r2, sp, #0x2c
	ldrb r2, [r2]
	strb r2, [r0]
	b _080860D6
	.align 2, 0
_080860A0: .4byte 0x080FFC80
_080860A4:
	ldr r7, _080861C0 @ =0x080FFC90
	adds r0, r5, #0
	bl strlen
	adds r6, r5, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080860D6
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080860C4
	adds r4, r5, #0
_080860C4:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	add r3, sp, #0x2c
	ldrb r3, [r3]
	strb r3, [r0]
_080860D6:
	ldr r0, [sp, #0x30]
	bl GetAge__C6Animal
	movs r1, #0x78
	bl func_080D0EDA
	adds r6, r0, #0
	mov r4, sl
	lsls r4, r4, #5
	mov sb, r4
	cmp r6, #9
	bgt _08086126
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r0, _080861C4 @ =0x00003B9C
	adds r4, r4, r0
	adds r0, r4, #0
	bl strlen
	adds r7, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086126
	ldr r0, _080861C8 @ =0x080FFCA0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086116
	adds r4, r5, #0
_08086116:
	adds r0, r7, #0
	ldr r1, _080861C8 @ =0x080FFCA0
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_08086126:
	add r4, sp, #0x14
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #0
	bl func_0804EC84
	mov r0, sb
	add r0, sl
	lsls r0, r0, #2
	mov r1, r8
	adds r6, r0, r1
	ldr r2, _080861C4 @ =0x00003B9C
	adds r6, r6, r2
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0808616E
	add r0, sp, #0x14
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0808615E
	adds r4, r5, #0
_0808615E:
	adds r0, r7, #0
	add r1, sp, #0x14
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_0808616E:
	ldr r7, _080861CC @ =0x080FFCA4
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0808619E
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0808618E
	adds r4, r5, #0
_0808618E:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0808619E:
	ldr r0, [sp, #0x30]
	bl GetAge__C6Animal
	adds r4, r0, #0
	mov r3, r8
	ldr r0, [r3, #8]
	ldrb r1, [r0, #0x11]
	mov r0, sp
	adds r0, #0x2a
	strb r1, [r0]
	adds r6, r0, #0
	cmp r4, #0x1d
	bhi _080861D0
	adds r5, r4, #0
	movs r4, #0
	b _080861E4
	.align 2, 0
_080861C0: .4byte 0x080FFC90
_080861C4: .4byte 0x00003B9C
_080861C8: .4byte 0x080FFCA0
_080861CC: .4byte 0x080FFCA4
_080861D0:
	adds r0, r4, #0
	movs r1, #0x1e
	bl __umodsi3
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1e
	bl func_080D0EDA
	adds r4, r0, #0
_080861E4:
	ldrb r0, [r6]
	lsls r1, r0, #0x19
	lsrs r1, r1, #0x1b
	adds r2, r5, #0
	subs r2, #0x1e
	subs r3, r1, r2
	cmp r3, #0x1d
	bhi _080861F8
	adds r4, #1
	b _080861FA
_080861F8:
	subs r3, #0x1e
_080861FA:
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	movs r1, #4
	rsbs r1, r1, #0
	subs r0, r0, r4
	movs r2, #3
	ands r0, r2
	ldrb r2, [r6]
	ands r1, r2
	orrs r1, r0
	movs r0, #0x1f
	ands r3, r0
	lsls r2, r3, #2
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r1, r0
	orrs r1, r2
	strb r1, [r6]
	add r4, sp, #0x34
	strb r1, [r4]
	lsls r1, r1, #0x1e
	lsrs r6, r1, #0x1e
	cmp r6, #1
	beq _08086280
	cmp r6, #1
	bgt _08086234
	cmp r6, #0
	beq _0808623E
	b _080862EC
_08086234:
	cmp r6, #2
	beq _08086298
	cmp r6, #3
	beq _080862B0
	b _080862EC
_0808623E:
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r0, _08086278 @ =0x00003B9C
	adds r4, r4, r0
	adds r0, r4, #0
	bl strlen
	adds r7, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080862EC
	ldr r0, _0808627C @ =0x080FFCC0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086268
	adds r4, r5, #0
_08086268:
	adds r0, r7, #0
	ldr r1, _0808627C @ =0x080FFCC0
	adds r2, r4, #0
	bl memcpy
	adds r0, r7, r4
	strb r6, [r0]
	b _080862EC
	.align 2, 0
_08086278: .4byte 0x00003B9C
_0808627C: .4byte 0x080FFCC0
_08086280:
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r1, _08086290 @ =0x00003B9C
	adds r4, r4, r1
	ldr r7, _08086294 @ =0x080FFCC8
	b _080862BE
	.align 2, 0
_08086290: .4byte 0x00003B9C
_08086294: .4byte 0x080FFCC8
_08086298:
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r2, _080862A8 @ =0x00003B9C
	adds r4, r4, r2
	ldr r7, _080862AC @ =0x080FFCD0
	b _080862BE
	.align 2, 0
_080862A8: .4byte 0x00003B9C
_080862AC: .4byte 0x080FFCD0
_080862B0:
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r3, _08086420 @ =0x00003B9C
	adds r4, r4, r3
	ldr r7, _08086424 @ =0x080FFCD8
_080862BE:
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080862EC
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080862DC
	adds r4, r5, #0
_080862DC:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080862EC:
	add r4, sp, #0x34
	ldrb r4, [r4]
	lsls r0, r4, #0x19
	lsrs r0, r0, #0x1b
	adds r6, r0, #1
	cmp r6, #9
	bgt _08086336
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r0, _08086420 @ =0x00003B9C
	adds r4, r4, r0
	ldr r7, _08086428 @ =0x080FFCA0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086336
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086326
	adds r4, r5, #0
_08086326:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_08086336:
	add r1, sp, #0x34
	ldrb r1, [r1]
	lsls r0, r1, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	add r1, sp, #0x14
	movs r2, #0
	bl func_0804EC84
	mov r0, sb
	add r0, sl
	lsls r0, r0, #2
	mov r2, r8
	adds r6, r0, r2
	ldr r3, _08086420 @ =0x00003B9C
	adds r6, r6, r3
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086384
	ldr r0, _08086428 @ =0x080FFCA0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086374
	adds r4, r5, #0
_08086374:
	adds r0, r7, #0
	ldr r1, _08086428 @ =0x080FFCA0
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_08086384:
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080863B2
	add r0, sp, #0x14
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080863A2
	adds r4, r5, #0
_080863A2:
	adds r0, r7, #0
	add r1, sp, #0x14
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_080863B2:
	ldr r7, _0808642C @ =0x080FFCE0
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080863E2
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080863D2
	adds r4, r5, #0
_080863D2:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080863E2:
	mov r4, r8
	ldr r1, [r4, #0x10]
	lsls r1, r1, #3
	movs r0, #0xd6
	lsls r0, r0, #3
	add r0, r8
	adds r0, r0, r1
	ldr r6, [r0]
	adds r0, r6, #0
	add r1, sp, #0x14
	movs r2, #0
	bl func_0804EC84
	mov r0, sb
	add r0, sl
	lsls r0, r0, #2
	adds r6, r0, r4
	ldr r0, _08086420 @ =0x00003B9C
	adds r6, r6, r0
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	bne _0808641A
	b _08086866
_0808641A:
	add r0, sp, #0x14
	b _0808684A
	.align 2, 0
_08086420: .4byte 0x00003B9C
_08086424: .4byte 0x080FFCD8
_08086428: .4byte 0x080FFCA0
_0808642C: .4byte 0x080FFCE0
_08086430:
	mov r2, r8
	ldr r0, [r2, #8]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	lsls r1, r1, #3
	adds r1, r7, r1
	ldr r1, [r1]
	bl GetSheep__4BarnUi
	str r0, [sp, #0x3c]
	bl IsSick__C9Livestock
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r0, #0
	beq _0808648C
	ldr r7, _08086488 @ =0x080FFCF8
	adds r0, r5, #0
	bl strlen
	adds r6, r5, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086500
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086474
	adds r4, r5, #0
_08086474:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	add r4, sp, #0x2c
	ldrb r4, [r4]
	strb r4, [r0]
	b _08086500
	.align 2, 0
_08086488: .4byte 0x080FFCF8
_0808648C:
	ldr r0, [sp, #0x3c]
	bl IsUnhappy__C9Livestock
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0
	beq _080864D0
	ldr r7, _080864CC @ =0x080FFC80
	adds r0, r5, #0
	bl strlen
	adds r6, r5, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086500
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080864BA
	adds r4, r5, #0
_080864BA:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	mov r1, sb
	strb r1, [r0]
	b _08086500
	.align 2, 0
_080864CC: .4byte 0x080FFC80
_080864D0:
	ldr r2, _080865EC @ =0x080FFC90
	mov sb, r2
	adds r0, r5, #0
	bl strlen
	adds r6, r5, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086500
	mov r0, sb
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080864F2
	adds r4, r5, #0
_080864F2:
	adds r0, r6, #0
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	strb r7, [r0]
_08086500:
	ldr r0, [sp, #0x3c]
	bl GetAge__C6Animal
	movs r1, #0x78
	bl func_080D0EDA
	adds r6, r0, #0
	mov r3, sl
	lsls r3, r3, #5
	mov sb, r3
	cmp r6, #9
	bgt _08086552
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r0, _080865F0 @ =0x00003B9C
	adds r4, r4, r0
	adds r0, r4, #0
	bl strlen
	adds r7, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086552
	ldr r0, _080865F4 @ =0x080FFCA0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086542
	adds r4, r5, #0
_08086542:
	adds r0, r7, #0
	ldr r1, _080865F4 @ =0x080FFCA0
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_08086552:
	add r4, sp, #0x14
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #0
	bl func_0804EC84
	mov r0, sb
	add r0, sl
	lsls r0, r0, #2
	mov r1, r8
	adds r6, r0, r1
	ldr r2, _080865F0 @ =0x00003B9C
	adds r6, r6, r2
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0808659A
	add r0, sp, #0x14
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0808658A
	adds r4, r5, #0
_0808658A:
	adds r0, r7, #0
	add r1, sp, #0x14
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_0808659A:
	ldr r7, _080865F8 @ =0x080FFD08
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080865CA
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080865BA
	adds r4, r5, #0
_080865BA:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080865CA:
	ldr r0, [sp, #0x3c]
	bl GetAge__C6Animal
	adds r4, r0, #0
	mov r3, r8
	ldr r0, [r3, #8]
	ldrb r1, [r0, #0x11]
	mov r0, sp
	adds r0, #0x2b
	strb r1, [r0]
	adds r6, r0, #0
	cmp r4, #0x1d
	bhi _080865FC
	adds r5, r4, #0
	movs r4, #0
	b _08086610
	.align 2, 0
_080865EC: .4byte 0x080FFC90
_080865F0: .4byte 0x00003B9C
_080865F4: .4byte 0x080FFCA0
_080865F8: .4byte 0x080FFD08
_080865FC:
	adds r0, r4, #0
	movs r1, #0x1e
	bl __umodsi3
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1e
	bl func_080D0EDA
	adds r4, r0, #0
_08086610:
	ldrb r0, [r6]
	lsls r1, r0, #0x19
	lsrs r1, r1, #0x1b
	adds r2, r5, #0
	subs r2, #0x1e
	subs r3, r1, r2
	cmp r3, #0x1d
	bhi _08086624
	adds r4, #1
	b _08086626
_08086624:
	subs r3, #0x1e
_08086626:
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	movs r1, #4
	rsbs r1, r1, #0
	subs r0, r0, r4
	movs r2, #3
	ands r0, r2
	ldrb r2, [r6]
	ands r1, r2
	orrs r1, r0
	movs r0, #0x1f
	ands r3, r0
	lsls r2, r3, #2
	movs r0, #0x7d
	rsbs r0, r0, #0
	ands r1, r0
	orrs r1, r2
	strb r1, [r6]
	add r4, sp, #0x40
	strb r1, [r4]
	lsls r1, r1, #0x1e
	lsrs r6, r1, #0x1e
	cmp r6, #1
	beq _080866AC
	cmp r6, #1
	bgt _08086660
	cmp r6, #0
	beq _0808666A
	b _08086718
_08086660:
	cmp r6, #2
	beq _080866C4
	cmp r6, #3
	beq _080866DC
	b _08086718
_0808666A:
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r0, _080866A4 @ =0x00003B9C
	adds r4, r4, r0
	adds r0, r4, #0
	bl strlen
	adds r7, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086718
	ldr r0, _080866A8 @ =0x080FFCC0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086694
	adds r4, r5, #0
_08086694:
	adds r0, r7, #0
	ldr r1, _080866A8 @ =0x080FFCC0
	adds r2, r4, #0
	bl memcpy
	adds r0, r7, r4
	strb r6, [r0]
	b _08086718
	.align 2, 0
_080866A4: .4byte 0x00003B9C
_080866A8: .4byte 0x080FFCC0
_080866AC:
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r1, _080866BC @ =0x00003B9C
	adds r4, r4, r1
	ldr r7, _080866C0 @ =0x080FFCC8
	b _080866EA
	.align 2, 0
_080866BC: .4byte 0x00003B9C
_080866C0: .4byte 0x080FFCC8
_080866C4:
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r2, _080866D4 @ =0x00003B9C
	adds r4, r4, r2
	ldr r7, _080866D8 @ =0x080FFCD0
	b _080866EA
	.align 2, 0
_080866D4: .4byte 0x00003B9C
_080866D8: .4byte 0x080FFCD0
_080866DC:
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r3, _080868CC @ =0x00003B9C
	adds r4, r4, r3
	ldr r7, _080868D0 @ =0x080FFCD8
_080866EA:
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086718
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086708
	adds r4, r5, #0
_08086708:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_08086718:
	add r4, sp, #0x40
	ldrb r4, [r4]
	lsls r0, r4, #0x19
	lsrs r0, r0, #0x1b
	adds r6, r0, #1
	cmp r6, #9
	bgt _08086762
	mov r4, sb
	add r4, sl
	lsls r4, r4, #2
	add r4, r8
	ldr r0, _080868CC @ =0x00003B9C
	adds r4, r4, r0
	ldr r7, _080868D4 @ =0x080FFCA0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086762
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086752
	adds r4, r5, #0
_08086752:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_08086762:
	add r1, sp, #0x40
	ldrb r1, [r1]
	lsls r0, r1, #0x19
	lsrs r0, r0, #0x1b
	adds r0, #1
	add r1, sp, #0x14
	movs r2, #0
	bl func_0804EC84
	mov r0, sb
	add r0, sl
	lsls r0, r0, #2
	mov r2, r8
	adds r6, r0, r2
	ldr r3, _080868CC @ =0x00003B9C
	adds r6, r6, r3
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080867B0
	ldr r0, _080868D4 @ =0x080FFCA0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080867A0
	adds r4, r5, #0
_080867A0:
	adds r0, r7, #0
	ldr r1, _080868D4 @ =0x080FFCA0
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_080867B0:
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _080867DE
	add r0, sp, #0x14
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080867CE
	adds r4, r5, #0
_080867CE:
	adds r0, r7, #0
	add r1, sp, #0x14
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_080867DE:
	ldr r7, _080868D8 @ =0x080FFD24
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0808680E
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080867FE
	adds r4, r5, #0
_080867FE:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0808680E:
	mov r4, r8
	ldr r1, [r4, #0x10]
	lsls r1, r1, #3
	movs r0, #0xd6
	lsls r0, r0, #3
	add r0, r8
	adds r0, r0, r1
	ldr r6, [r0]
	add r4, sp, #0x14
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #0
	bl func_0804EC84
	mov r0, sb
	add r0, sl
	lsls r0, r0, #2
	mov r1, r8
	adds r6, r0, r1
	ldr r2, _080868CC @ =0x00003B9C
	adds r6, r6, r2
	adds r0, r6, #0
	bl strlen
	adds r7, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086866
	adds r0, r4, #0
_0808684A:
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086856
	adds r4, r5, #0
_08086856:
	adds r0, r7, #0
	add r1, sp, #0x14
	adds r2, r4, #0
	bl memcpy
	adds r1, r7, r4
	movs r0, #0
	strb r0, [r1]
_08086866:
	ldr r7, _080868DC @ =0x080FFCF4
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08086896
	adds r0, r7, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08086886
	adds r4, r5, #0
_08086886:
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_08086896:
	mov r3, sl
	lsls r0, r3, #5
	add r0, sl
	lsls r0, r0, #2
	add r0, r8
	ldr r4, _080868E0 @ =0x00003B98
	adds r0, r0, r4
	movs r1, #1
	strb r1, [r0]

	thumb_func_start sub_080868A8
sub_080868A8: @ 0x080868A8
	mov r0, sl
	lsls r1, r0, #5
	add r1, sl
	lsls r1, r1, #2
	add r1, r8
	ldr r2, _080868CC @ =0x00003B9C
	adds r1, r1, r2
	mov r0, r8
	bl func_080CABEC

	thumb_func_start sub_080868BC
sub_080868BC: @ 0x080868BC
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080868CC: .4byte 0x00003B9C
_080868D0: .4byte 0x080FFCD8
_080868D4: .4byte 0x080FFCA0
_080868D8: .4byte 0x080FFD24
_080868DC: .4byte 0x080FFCF4
_080868E0: .4byte 0x00003B98

	thumb_func_start func_080868E4
func_080868E4: @ 0x080868E4
	push {r4, lr}
	ldr r4, _0808690C @ =0x00000BB8
	cmp r2, #0
	bne _08086938
	ldr r0, [r0, #8]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetCow__4BarnUi
	bl GetProductRank__C9Livestock
	cmp r0, #4
	bhi _08086994
	lsls r0, r0, #2
	ldr r1, _08086910 @ =_08086914
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808690C: .4byte 0x00000BB8
_08086910: .4byte _08086914
_08086914: @ jump table
	.4byte _08086984 @ case 0
	.4byte _0808698C @ case 1
	.4byte _08086992 @ case 2
	.4byte _08086928 @ case 3
	.4byte _08086930 @ case 4
_08086928:
	ldr r4, _0808692C @ =0x00001770
	b _08086994
	.align 2, 0
_0808692C: .4byte 0x00001770
_08086930:
	ldr r4, _08086934 @ =0x00001B58
	b _08086994
	.align 2, 0
_08086934: .4byte 0x00001B58
_08086938:
	cmp r2, #1
	bne _08086994
	ldr r0, [r0, #8]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetSheep__4BarnUi
	bl GetProductRank__C9Livestock
	cmp r0, #4
	bhi _08086994
	lsls r0, r0, #2
	ldr r1, _0808695C @ =_08086960
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808695C: .4byte _08086960
_08086960: @ jump table
	.4byte _08086974 @ case 0
	.4byte _0808697A @ case 1
	.4byte _08086984 @ case 2
	.4byte _0808698C @ case 3
	.4byte _08086992 @ case 4
_08086974:
	movs r4, #0xfa
	lsls r4, r4, #3
	b _08086994
_0808697A:
	ldr r4, _08086980 @ =0x000009C4
	b _08086994
	.align 2, 0
_08086980: .4byte 0x000009C4
_08086984:
	ldr r4, _08086988 @ =0x00000BB8
	b _08086994
	.align 2, 0
_08086988: .4byte 0x00000BB8
_0808698C:
	movs r4, #0xfa
	lsls r4, r4, #4
	b _08086994
_08086992:
	ldr r4, _0808699C @ =0x00001388
_08086994:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808699C: .4byte 0x00001388

	thumb_func_start func_080869A0
func_080869A0: @ 0x080869A0
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r6, #0
	movs r5, #0
	movs r7, #0xbe
	lsls r7, r7, #3
	b _080869F2
_080869AE:
	ldr r0, [r4, #8]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r5, #0
	bl GetCow__4BarnUi
	cmp r0, #0
	beq _080869CC
	ldr r0, [r4, #8]
	adds r0, r0, r7
	adds r1, r5, #0
	bl GetCow__4BarnUi
	b _080869E4
_080869CC:
	ldr r0, [r4, #8]
	adds r0, r0, r7
	adds r1, r5, #0
	bl GetSheep__4BarnUi
	cmp r0, #0
	beq _080869F0
	ldr r0, [r4, #8]
	adds r0, r0, r7
	adds r1, r5, #0
	bl GetSheep__4BarnUi
_080869E4:
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080869F0
	adds r6, #1
_080869F0:
	adds r5, #1
_080869F2:
	ldr r0, [r4, #8]
	adds r0, r0, r7
	bl GetCapacity__C4Barn
	cmp r5, r0
	blo _080869AE
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08086A08
func_08086A08: @ 0x08086A08
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xb4
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080C85A0
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08086A40
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08086A3A
	movs r0, #0
	str r0, [r2]
_08086A3A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08086A40:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08086A60
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08086A5A
	movs r0, #1
	str r0, [r2]
_08086A5A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08086A60:
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08086A80
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08086A7A
	movs r0, #2
	str r0, [r2]
_08086A7A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08086A80:
	movs r4, #0xa9
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08086AA0
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08086A9A
	movs r0, #3
	str r0, [r2]
_08086A9A:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08086AA0:
	movs r5, #0xa9
	lsls r5, r5, #2
	adds r1, r7, r5
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08086AC0
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08086ABA
	movs r0, #4
	str r0, [r2]
_08086ABA:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08086AC0:
	movs r6, #0xa9
	lsls r6, r6, #2
	adds r1, r7, r6
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08086AE0
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08086ADA
	movs r0, #5
	str r0, [r2]
_08086ADA:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08086AE0:
	ldr r0, [r7, #8]
	ldr r1, _08086C78 @ =0x00001C38
	adds r0, r0, r1
	movs r1, #0x49
	bl func_0800F92C
	mvns r0, r0
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r4, r1, #0x1f
	ldr r0, [r7, #8]
	ldr r2, _08086C7C @ =0x00001C34
	adds r0, r0, r2
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08086B1E
	ldr r0, [r7, #8]
	ldr r3, _08086C7C @ =0x00001C34
	adds r0, r0, r3
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x78
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x49
	bne _08086B1E
	movs r4, #1
_08086B1E:
	ldr r0, [r7, #8]
	movs r5, #0xe0
	lsls r5, r5, #2
	adds r0, r0, r5
	movs r1, #0x49
	bl GetFirstSlotWith__C9ToolChestUi
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	beq _08086B36
	movs r4, #1
_08086B36:
	cmp r4, #0
	bne _08086B5A
	movs r6, #0xa9
	lsls r6, r6, #2
	adds r1, r7, r6
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08086B5A
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08086B54
	movs r0, #6
	str r0, [r2]
_08086B54:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08086B5A:
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08086B7A
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08086B74
	movs r0, #7
	str r0, [r2]
_08086B74:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08086B7A:
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r1, r7, r2
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08086B9A
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _08086B94
	movs r0, #8
	str r0, [r2]
_08086B94:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08086B9A:
	movs r3, #0
	mov sb, r3
	mov r4, sp
	adds r4, #0x7c
	str r4, [sp, #0xac]
	mov r5, sp
	adds r5, #0x20
	str r5, [sp, #0xa8]
_08086BAA:
	mov r6, sb
	lsls r1, r6, #2
	add r1, sb
	lsls r1, r1, #2
	ldr r2, _08086C80 @ =0x080FFB90
	add r0, sp, #0xc
	adds r1, r1, r2
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldm r1!, {r5, r6}
	stm r0!, {r5, r6}
	mov r0, sb
	lsls r4, r0, #1
	adds r0, r4, r0
	lsls r0, r0, #6
	add r0, sb
	lsls r5, r0, #2
	adds r1, r5, r7
	movs r2, #0xee
	lsls r2, r2, #3
	adds r1, r1, r2
	add r0, sp, #0x7c
	movs r3, #0xc
	strh r3, [r0]
	movs r0, #2
	ldr r6, [sp, #0xac]
	strh r0, [r6, #2]
	ldr r0, [sp, #0x7c]
	adds r1, #4
	movs r2, #0
	bl func_0804E7A0
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	beq _08086C1E
	cmp r0, #2
	beq _08086C1E
	adds r1, r5, r7
	movs r2, #0xee
	lsls r2, r2, #3
	adds r1, r1, r2
	ldr r2, [sp, #0x10]
	add r0, sp, #0x80
	movs r3, #0xc
	strh r3, [r0]
	movs r5, #2
	strh r5, [r0, #2]
	ldr r0, [sp, #0x80]
	adds r1, #4
	str r2, [sp]
	movs r6, #0
	str r6, [sp, #4]
	movs r2, #1
	str r2, [sp, #8]
	movs r2, #0
	movs r3, #0
	bl func_0804E958
_08086C1E:
	add r4, sb
	lsls r5, r4, #3
	adds r5, #0xd0
	adds r0, r7, #0
	bl func_08008910
	lsls r4, r4, #6
	add r4, sb
	lsls r4, r4, #2
	adds r4, r4, r7
	ldr r3, _08086C84 @ =0x00000774
	adds r4, r4, r3
	adds r6, r0, #0
	lsls r5, r5, #5
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r5, r5, r0
	add r0, sp, #0x20
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0xc0
	lsls r3, r3, #2
	bl func_08008F0C
	ldr r1, [sp, #0xa8]
	str r1, [sp, #0x9c]
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08086C88
	cmp r1, #0
	beq _08086C6A
	adds r0, r1, #0
	ldr r1, [sp, #0x9c]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08086C6A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	movs r5, #1
	add sb, r5
	b _08086D56
	.align 2, 0
_08086C78: .4byte 0x00001C38
_08086C7C: .4byte 0x00001C34
_08086C80: .4byte 0x080FFB90
_08086C84: .4byte 0x00000774
_08086C88:
	mov r8, r1
	movs r0, #1
	str r0, [sp, #0x88]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x84]
	add r1, sp, #0x88
	add r0, sp, #0x84
	cmp r4, #1
	bhs _08086CA0
	adds r0, r1, #0
_08086CA0:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08086CBE
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08086CC2
	mov r0, sl
	bl func_080D3BC0
	b _08086CC2
_08086CBE:
	movs r0, #0
	mov sl, r0
_08086CC2:
	adds r5, r0, #0
	str r5, [sp, #0xb0]
	ldr r2, [r6]
	mov ip, r5
	movs r1, #1
	add sb, r1
	cmp r2, r8
	beq _08086CEE
_08086CD2:
	mov r3, ip
	cmp r3, #0
	beq _08086CE4
	mov r0, ip
	adds r1, r2, #0
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08086CE4:
	adds r2, #0x10
	movs r4, #0x10
	add ip, r4
	cmp r2, r8
	bne _08086CD2
_08086CEE:
	mov r5, ip
	ldr r0, [sp, #0x88]
	cmp r0, #1
	bne _08086D0A
	cmp r5, #0
	beq _08086D06
	adds r0, r5, #0
	ldr r1, [sp, #0x9c]
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08086D06:
	adds r5, #0x10
	b _08086D32
_08086D0A:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _08086D30
_08086D12:
	cmp r2, #0
	beq _08086D22
	adds r0, r2, #0
	ldr r1, [sp, #0x9c]
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_08086D22:
	movs r5, #1
	rsbs r5, r5, #0
	add r8, r5
	adds r2, #0x10
	mov r0, r8
	cmp r0, #0
	bne _08086D12
_08086D30:
	adds r5, r2, #0
_08086D32:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08086D42
_08086D3C:
	adds r1, #0x10
	cmp r1, r2
	bne _08086D3C
_08086D42:
	cmp r0, #0
	beq _08086D4A
	bl free
_08086D4A:
	ldr r0, [sp, #0xb0]
	add r0, sl
	ldr r1, [sp, #0xb0]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_08086D56:
	mov r2, sb
	cmp r2, #8
	bhi _08086D5E
	b _08086BAA
_08086D5E:
	movs r2, #0
	movs r1, #0xf
	ldr r3, _08086E30 @ =0x00004354
	adds r0, r7, r3
_08086D66:
	strb r2, [r0]
	subs r0, #0x84
	subs r1, #1
	cmp r1, #0
	bge _08086D66
	adds r0, r7, #0
	bl func_08085640
	adds r5, r0, #0
	ldr r0, [r7, #0x1c]
	movs r4, #0xc
	ldrsh r1, [r7, r4]
	bl func_08075C88
	ldr r0, [r7, #0x1c]
	adds r1, r5, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r5, #0xaa
	lsls r5, r5, #2
	adds r0, r0, r5
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_08085F08
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #0xc
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _08086E34 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0xc]
	ldr r1, _08086E38 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r6, #0
	str r6, [sp, #0xa0]

	non_word_aligned_thumb_func_start sub_08086DFA
sub_08086DFA: @ 0x08086DFA
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	ldr r3, [sp, #0xc]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _08086E16
	bl _0808814C
_08086E16:
	ldr r0, [sp, #0xa0]
	cmp r0, #0
	beq _08086E3C
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	movs r0, #1
	rsbs r0, r0, #0
	bl _08088156
	.align 2, 0
_08086E30: .4byte 0x00004354
_08086E34: .4byte vtable_unk_080E5B80
_08086E38: .4byte 0x00000889
_08086E3C:
	ldr r1, _08086E54 @ =0x000006A4
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0xc
	bls _08086E4A
	bl _0808814C
_08086E4A:
	lsls r0, r0, #2
	ldr r1, _08086E58 @ =_08086E5C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08086E54: .4byte 0x000006A4
_08086E58: .4byte _08086E5C
_08086E5C: @ jump table
	.4byte _08086E90 @ case 0
	.4byte _08087764 @ case 1
	.4byte _080878FC @ case 2
	.4byte _08087AF8 @ case 3
	.4byte _08087CB0 @ case 4
	.4byte _08087E60 @ case 5
	.4byte _08087E60 @ case 6
	.4byte _08087E90 @ case 7
	.4byte _08087EC0 @ case 8
	.4byte _08087EEC @ case 9
	.4byte _08087F5C @ case 10
	.4byte _080880E4 @ case 11
	.4byte _08088124 @ case 12
_08086E90:
	ldr r0, [r7, #0x14]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	beq _08086EAA
	lsls r0, r1, #2
	adds r0, r0, r7
	movs r2, #0xaa
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_08085F08
_08086EAA:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r4, r7, r3
	ldr r1, [r4]
	adds r0, r7, #0
	bl func_080C9020
	ldr r5, _08086F00 @ =0x000006A1
	adds r0, r7, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _08086ECA
	bl sub_08087710
_08086ECA:
	add r3, sp, #0x10
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r4, r0
	ldr r4, [r0]
	lsls r1, r4, #2
	adds r1, r1, r4
	lsls r1, r1, #2
	ldr r2, _08086F04 @ =0x080FFB90
	adds r0, r3, #0
	adds r1, r1, r2
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldm r1!, {r2, r6}
	stm r0!, {r2, r6}
	ldr r0, [r3, #0x10]
	cmp r0, #1
	bne _08086EF2
	b _08087384
_08086EF2:
	cmp r0, #1
	bgt _08086F08
	cmp r0, #0
	beq _08086F18
	bl _0808814C
	.align 2, 0
_08086F00: .4byte 0x000006A1
_08086F04: .4byte 0x080FFB90
_08086F08:
	cmp r0, #2
	bne _08086F0E
	b _080870A0
_08086F0E:
	cmp r0, #3
	bne _08086F14
	b _08087428
_08086F14:
	bl _0808814C
_08086F18:
	ldr r1, [r7, #8]
	ldr r3, _08086F4C @ =0x00001AA8
	adds r0, r1, r3
	ldr r2, [r0]
	movs r3, #0
	ldr r0, [sp, #0x18]
	cmp r2, r0
	bhs _08086F2A
	movs r3, #1
_08086F2A:
	mov sl, r3
	cmp r3, #0
	beq _08086F58
	ldr r1, _08086F50 @ =0x080FFD3C
	adds r0, r7, #0
	bl func_080CABA0
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0xb4
	bl func_08050E50
	ldr r5, _08086F54 @ =0x000006A4
	adds r1, r7, r5
	bl _08087F4E
	.align 2, 0
_08086F4C: .4byte 0x00001AA8
_08086F50: .4byte 0x080FFD3C
_08086F54: .4byte 0x000006A4
_08086F58:
	movs r6, #0xbe
	lsls r6, r6, #3
	adds r0, r1, r6
	bl GetStoredBushelCount__C4Barn
	ldr r1, _08086F78 @ =0x000003E6
	cmp r0, r1
	bls _08086F84
	ldr r1, _08086F7C @ =0x080FFD5C
	adds r0, r7, #0
	bl func_080CABA0
	ldr r0, _08086F80 @ =0x000006A4
	adds r1, r7, r0
	bl _08087F4E
	.align 2, 0
_08086F78: .4byte 0x000003E6
_08086F7C: .4byte 0x080FFD5C
_08086F80: .4byte 0x000006A4
_08086F84:
	ldr r0, [r7, #8]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl GetStoredBushelCount__C4Barn
	ldr r1, _08087090 @ =0x000003E7
	subs r1, r1, r0
	str r1, [sp, #0xa4]
	ldr r0, [r7, #8]
	movs r2, #0xbe
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetStoredBushelCount__C4Barn
	add r1, sp, #0x30
	movs r2, #7
	bl func_0804EC84
	add r5, sp, #0x8c
	ldr r1, [sp, #0x10]
	adds r0, r5, #0
	bl __7ArticleUi
	ldr r3, _08087094 @ =0x00003B34
	adds r4, r7, r3
	mov r6, sl
	strb r6, [r4]
	adds r0, r5, #0
	bl GetName__C7Article
	mov sb, r0
	mov r5, sb
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _08086FF8
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _08086FE6
	adds r5, r6, #0
_08086FE6:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r0, r2, r5
	mov r3, sl
	strb r3, [r0]
_08086FF8:
	ldr r5, _08087098 @ =0x080FFD90
	mov sb, r5
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	mov r8, r6
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0808702E
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0808701C
	adds r5, r6, #0
_0808701C:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_0808702E:
	ldr r0, _0808709C @ =0x08117828
	ldr r0, [r0]
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _08087066
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _08087054
	adds r5, r6, #0
_08087054:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_08087066:
	adds r0, r4, #0
	bl strlen
	adds r3, r4, r0
	mov r8, r3
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	bne _0808707A
	b _080872FC
_0808707A:
	add r0, sp, #0x30
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _08087088
	adds r5, r6, #0
_08087088:
	mov r0, r8
	add r1, sp, #0x30
	b _080872EE
	.align 2, 0
_08087090: .4byte 0x000003E7
_08087094: .4byte 0x00003B34
_08087098: .4byte 0x080FFD90
_0808709C: .4byte 0x08117828
_080870A0:
	ldr r3, [r7, #8]
	ldr r5, _080870D4 @ =0x00001AA8
	adds r0, r3, r5
	ldr r1, [r0]
	movs r2, #0
	ldr r0, [sp, #0x18]
	cmp r1, r0
	bhs _080870B2
	movs r2, #1
_080870B2:
	cmp r2, #0
	beq _080870E0
	ldr r1, _080870D8 @ =0x080FFD3C
	adds r0, r7, #0
	bl func_080CABA0
	movs r6, #0xd2
	lsls r6, r6, #2
	adds r0, r7, r6
	movs r1, #0xb4
	bl func_08050E50
	ldr r0, _080870DC @ =0x000006A4
	adds r1, r7, r0
	bl _08087F4E
	.align 2, 0
_080870D4: .4byte 0x00001AA8
_080870D8: .4byte 0x080FFD3C
_080870DC: .4byte 0x000006A4
_080870E0:
	cmp r4, #3
	bhs _080870E8
	bl _0808814C
_080870E8:
	cmp r4, #5
	bls _080870F6
	cmp r4, #6
	bne _080870F2
	b _08087374
_080870F2:
	bl _0808814C
_080870F6:
	movs r5, #0
	ldr r1, _08087118 @ =0x00001C38
	adds r0, r3, r1
	movs r1, #0x4a
	bl func_0800F990
	adds r6, r0, #0
	ldr r0, [r7, #8]
	ldr r4, _0808711C @ =0x00001C34
	adds r0, r0, r4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08087120
	movs r5, #0x63
	b _0808715C
	.align 2, 0
_08087118: .4byte 0x00001C38
_0808711C: .4byte 0x00001C34
_08087120:
	ldr r0, [r7, #8]
	ldr r2, _08087190 @ =0x00001C34
	adds r0, r0, r2
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x8d
	strb r1, [r0]
	bl GetId__C4Tool
	movs r2, #0
	ldr r1, [sp, #0x10]
	cmp r0, r1
	bne _08087140
	movs r2, #1
_08087140:
	cmp r2, #0
	beq _0808715C
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl GetAmount__C9ToolStack
	cmp r0, #0x63
	beq _0808715C
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r5, r1, r0
_0808715C:
	ldr r0, [r7, #8]
	movs r3, #0xe0
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r1, [sp, #0x10]
	bl GetAvailableSpaceFor__C9ToolChestUi
	adds r1, r6, r5
	adds r1, r1, r0
	str r1, [sp, #0xa4]
	cmp r1, #0
	bne _0808719C
	ldr r1, _08087194 @ =0x080FFD98
	adds r0, r7, #0
	bl func_080CABA0
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	movs r1, #0xb4
	bl func_08050E50
	ldr r5, _08087198 @ =0x000006A4
	adds r1, r7, r5
	bl _08087F4E
	.align 2, 0
_08087190: .4byte 0x00001C34
_08087194: .4byte 0x080FFD98
_08087198: .4byte 0x000006A4
_0808719C:
	ldr r0, [r7, #8]
	ldr r6, _08087354 @ =0x00001C38
	adds r0, r0, r6
	ldr r1, [sp, #0x10]
	bl func_0800F9FC
	adds r6, r0, #0
	movs r0, #0
	mov r8, r0
	ldr r0, [r7, #8]
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r1, [sp, #0x10]
	bl GetAmountOf__C9ToolChestUi
	adds r4, r0, #0
	ldr r0, [r7, #8]
	ldr r5, _08087358 @ =0x00001C34
	adds r0, r0, r5
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080871FA
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x8e
	strb r1, [r0]
	bl GetId__C4Tool
	movs r2, #0
	ldr r1, [sp, #0x10]
	cmp r0, r1
	bne _080871EC
	movs r2, #1
_080871EC:
	cmp r2, #0
	beq _080871FA
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl GetAmount__C9ToolStack
	mov r8, r0
_080871FA:
	mov r2, r8
	adds r0, r6, r2
	adds r0, r0, r4
	add r1, sp, #0x24
	movs r2, #7
	bl func_0804EC84
	mov r5, sp
	adds r5, #0x8f
	ldr r1, [sp, #0x10]
	adds r0, r5, #0
	bl __4ToolUi
	ldr r3, _0808735C @ =0x00003B34
	adds r4, r7, r3
	movs r6, #0
	mov sl, r6
	mov r0, sl
	strb r0, [r4]
	adds r0, r5, #0
	bl GetName__C4Tool
	mov sb, r0
	mov r5, sb
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _0808725C
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _0808724A
	adds r5, r6, #0
_0808724A:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r0, r2, r5
	mov r3, sl
	strb r3, [r0]
_0808725C:
	ldr r5, _08087360 @ =0x080FFD90
	mov sb, r5
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	mov r8, r6
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _08087292
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _08087280
	adds r5, r6, #0
_08087280:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_08087292:
	ldr r0, _08087364 @ =0x08117828
	ldr r0, [r0]
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _080872CA
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _080872B8
	adds r5, r6, #0
_080872B8:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_080872CA:
	adds r0, r4, #0
	bl strlen
	adds r3, r4, r0
	mov r8, r3
	movs r1, #0x63
	subs r6, r1, r0
	cmp r6, #0
	beq _080872FC
	add r0, sp, #0x24
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _080872EA
	adds r5, r6, #0
_080872EA:
	mov r0, r8
	add r1, sp, #0x24
_080872EE:
	adds r2, r5, #0
	bl memcpy
	mov r6, r8
	adds r1, r6, r5
	movs r0, #0
	strb r0, [r1]
_080872FC:
	ldr r0, _08087368 @ =0x08117814
	ldr r0, [r0]
	mov r8, r0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x63
	subs r5, r1, r0
	cmp r5, #0
	beq _08087330
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08087320
	adds r4, r5, #0
_08087320:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_08087330:
	ldr r0, _0808735C @ =0x00003B34
	adds r1, r7, r0
	adds r0, r7, #0
	bl func_080CABEC
	ldr r1, _0808736C @ =0x00000684
	adds r0, r7, r1
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0xa4]
	movs r3, #5
	bl func_080CA8B4
	ldr r2, _08087370 @ =0x000006A4
	adds r1, r7, r2
	movs r0, #2
	str r0, [r1]
	bl _0808814C
	.align 2, 0
_08087354: .4byte 0x00001C38
_08087358: .4byte 0x00001C34
_0808735C: .4byte 0x00003B34
_08087360: .4byte 0x080FFD90
_08087364: .4byte 0x08117828
_08087368: .4byte 0x08117814
_0808736C: .4byte 0x00000684
_08087370: .4byte 0x000006A4
_08087374:
	ldr r3, _08087380 @ =0x000006A4
	adds r1, r7, r3
	movs r0, #3
	str r0, [r1]
	bl _0808814C
	.align 2, 0
_08087380: .4byte 0x000006A4
_08087384:
	ldr r1, [r7, #8]
	ldr r4, _080873B8 @ =0x00001AA8
	adds r0, r1, r4
	ldr r2, [r0]
	movs r3, #0
	ldr r0, [sp, #0x18]
	cmp r2, r0
	bhs _08087396
	movs r3, #1
_08087396:
	cmp r3, #0
	beq _080873C4
	ldr r1, _080873BC @ =0x080FFD3C
	adds r0, r7, #0
	bl func_080CABA0
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r7, r5
	movs r1, #0xb4
	bl func_08050E50
	ldr r6, _080873C0 @ =0x000006A4
	adds r1, r7, r6
	bl _08087F4E
	.align 2, 0
_080873B8: .4byte 0x00001AA8
_080873BC: .4byte 0x080FFD3C
_080873C0: .4byte 0x000006A4
_080873C4:
	movs r5, #0xbe
	lsls r5, r5, #3
	adds r0, r1, r5
	bl GetCapacity__C4Barn
	adds r4, r0, #0
	ldr r0, [r7, #8]
	adds r0, r0, r5
	bl CountBarnAnimals__C4Barn
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_080869A0
	subs r4, r4, r5
	cmp r4, r0
	bne _08087400
	ldr r1, _080873F8 @ =0x080FFDBC
	adds r0, r7, #0
	bl func_080CABA0
	ldr r0, _080873FC @ =0x000006A4
	adds r1, r7, r0
	bl _08087F4E
	.align 2, 0
_080873F8: .4byte 0x080FFDBC
_080873FC: .4byte 0x000006A4
_08087400:
	ldr r1, _08087420 @ =0x080FFDD4
	adds r0, r7, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0xb5
	bl func_08050E50
	ldr r2, _08087424 @ =0x000006A4
	adds r1, r7, r2
	movs r0, #4
	str r0, [r1]
	bl _0808814C
	.align 2, 0
_08087420: .4byte 0x080FFDD4
_08087424: .4byte 0x000006A4
_08087428:
	ldr r2, [sp, #0x10]
	movs r3, #1
	rsbs r3, r3, #0
	movs r1, #0xf
	ldr r4, _08087458 @ =0x00000724
	adds r0, r7, r4
_08087434:
	str r3, [r0]
	subs r0, #8
	subs r1, #1
	cmp r1, #0
	bge _08087434
	cmp r2, #7
	beq _08087444
	b _08087584
_08087444:
	ldr r0, [r7, #8]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	bl method_0800D058__C4Barn
	mov r8, r0
	movs r6, #0
	b _0808748E
	.align 2, 0
_08087458: .4byte 0x00000724
_0808745C:
	movs r0, #1
	rsbs r0, r0, #0
	cmp r8, r0
	beq _08087468
	cmp r6, r8
	beq _0808748C
_08087468:
	ldr r0, [r7, #8]
	adds r0, r0, r4
	adds r1, r6, #0
	bl GetCow__4BarnUi
	adds r5, r0, #0
	cmp r5, #0
	beq _0808748C
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808748C
	adds r0, r5, #0
	bl GetGrowthStage__C3Cow
	cmp r0, #2
	beq _0808749A
_0808748C:
	adds r6, #1
_0808748E:
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl GetCapacity__C4Barn
	cmp r6, r0
	blo _0808745C
_0808749A:
	ldr r0, [r7, #8]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	bl GetCapacity__C4Barn
	cmp r6, r0
	bne _080874C4
	ldr r1, _080874BC @ =0x080FFDF8
	adds r0, r7, #0
	bl func_080CABA0
	ldr r5, _080874C0 @ =0x000006A4
	adds r1, r7, r5
	bl _08087F4E
	.align 2, 0
_080874BC: .4byte 0x080FFDF8
_080874C0: .4byte 0x000006A4
_080874C4:
	ldr r6, _080874EC @ =0x0000072C
	adds r2, r7, r6
	movs r0, #0xe6
	lsls r0, r0, #3
	adds r1, r7, r0
	ldr r0, [r2]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r2, r0
	subs r0, r0, r1
	asrs r0, r0, #2
	ldr r1, [r2]
	subs r1, r1, r0
	str r1, [r2]
	movs r1, #0
	mov sb, r1
	movs r6, #0
	mov sl, r4
	b _08087564
	.align 2, 0
_080874EC: .4byte 0x0000072C
_080874F0:
	movs r0, #1
	rsbs r0, r0, #0
	cmp r8, r0
	beq _080874FC
	cmp r6, r8
	beq _08087562
_080874FC:
	ldr r0, [r7, #8]
	add r0, sl
	adds r1, r6, #0
	bl GetCow__4BarnUi
	adds r5, r0, #0
	cmp r5, #0
	beq _08087562
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08087562
	adds r0, r5, #0
	bl GetGrowthStage__C3Cow
	cmp r0, #2
	bne _08087562
	movs r2, #9
	ldr r3, _0808757C @ =0x0000072C
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0xf
	bhi _0808753E
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _08087538
	str r2, [r0]
_08087538:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_0808753E:
	mov r5, sb
	lsls r4, r5, #3
	ldr r1, _08087580 @ =0x000006AC
	adds r0, r7, r1
	adds r0, r0, r4
	str r6, [r0]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080868E4
	movs r2, #0xd6
	lsls r2, r2, #3
	adds r1, r7, r2
	adds r1, r1, r4
	str r0, [r1]
	movs r3, #1
	add sb, r3
_08087562:
	adds r6, #1
_08087564:
	ldr r0, [r7, #8]
	add r0, sl
	bl GetCapacity__C4Barn
	cmp r6, r0
	blo _080874F0
	ldr r0, [r7, #0x1c]
	bl func_08075DD4
	adds r0, r7, #0
	movs r1, #0x1e
	b _080876C2
	.align 2, 0
_0808757C: .4byte 0x0000072C
_08087580: .4byte 0x000006AC
_08087584:
	ldr r0, [r7, #8]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	bl method_0800D058__C4Barn
	mov r8, r0
	movs r6, #0
	b _080875C8
_08087596:
	movs r0, #1
	rsbs r0, r0, #0
	cmp r8, r0
	beq _080875A2
	cmp r6, r8
	beq _080875C6
_080875A2:
	ldr r0, [r7, #8]
	adds r0, r0, r4
	adds r1, r6, #0
	bl GetSheep__4BarnUi
	adds r5, r0, #0
	cmp r5, #0
	beq _080875C6
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080875C6
	adds r0, r5, #0
	bl GetGrowthStage__C5Sheep
	cmp r0, #1
	beq _080875D4
_080875C6:
	adds r6, #1
_080875C8:
	ldr r0, [r7, #8]
	adds r0, r0, r4
	bl GetCapacity__C4Barn
	cmp r6, r0
	blo _08087596
_080875D4:
	ldr r0, [r7, #8]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	bl GetCapacity__C4Barn
	cmp r6, r0
	bne _080875F8
	ldr r1, _080875F4 @ =0x080FFE24
	adds r0, r7, #0
	bl func_080CABA0
	adds r4, #0xb4
	bl _08087F4C
	.align 2, 0
_080875F4: .4byte 0x080FFE24
_080875F8:
	ldr r5, _08087620 @ =0x0000072C
	adds r2, r7, r5
	movs r6, #0xe6
	lsls r6, r6, #3
	adds r1, r7, r6
	ldr r0, [r2]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r2, r0
	subs r0, r0, r1
	asrs r0, r0, #2
	ldr r1, [r2]
	subs r1, r1, r0
	str r1, [r2]
	movs r0, #0
	mov sb, r0
	movs r6, #0
	mov r8, r4
	b _080876AC
	.align 2, 0
_08087620: .4byte 0x0000072C
_08087624:
	ldr r0, [r7, #8]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	bl method_0800D058__C4Barn
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	beq _08087644
	ldr r0, [r7, #8]
	add r0, r8
	bl method_0800D058__C4Barn
	cmp r6, r0
	beq _080876AA
_08087644:
	ldr r0, [r7, #8]
	add r0, r8
	adds r1, r6, #0
	bl GetSheep__4BarnUi
	adds r5, r0, #0
	cmp r5, #0
	beq _080876AA
	bl IsPregnant__C10BarnAnimal
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080876AA
	adds r0, r5, #0
	bl GetGrowthStage__C5Sheep
	cmp r0, #1
	bne _080876AA
	movs r2, #0xa
	ldr r3, _08087704 @ =0x0000072C
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0xf
	bhi _08087686
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _08087680
	str r2, [r0]
_08087680:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08087686:
	mov r5, sb
	lsls r4, r5, #3
	ldr r1, _08087708 @ =0x000006AC
	adds r0, r7, r1
	adds r0, r0, r4
	str r6, [r0]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #1
	bl func_080868E4
	movs r2, #0xd6
	lsls r2, r2, #3
	adds r1, r7, r2
	adds r1, r1, r4
	str r0, [r1]
	movs r3, #1
	add sb, r3
_080876AA:
	adds r6, #1
_080876AC:
	ldr r0, [r7, #8]
	add r0, r8
	bl GetCapacity__C4Barn
	cmp r6, r0
	blo _08087624
	ldr r0, [r7, #0x1c]
	bl func_08075DD4
	adds r0, r7, #0
	movs r1, #0x1f
_080876C2:
	bl func_0808586C
	adds r5, r0, #0
	movs r4, #0
	strh r4, [r7, #0xc]
	movs r6, #0xc9
	lsls r6, r6, #3
	adds r1, r7, r6
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075DB8
	ldr r0, [r7, #0x1c]
	adds r1, r5, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	str r4, [r7, #0x10]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	ldr r3, _0808770C @ =0x000006A4
	adds r1, r7, r3
	movs r0, #1
	str r0, [r1]
	bl _0808814C
	.align 2, 0
_08087704: .4byte 0x0000072C
_08087708: .4byte 0x000006AC
_0808770C: .4byte 0x000006A4

	thumb_func_start sub_08087710
sub_08087710: @ 0x08087710
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _08087722
	bl _0808814C
_08087722:
	movs r4, #0xd5
	lsls r4, r4, #3
	adds r0, r7, r4
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808773C
	ldr r1, _08087738 @ =0x080FFE50
	adds r0, r7, #0
	bl func_080CABA0
	b _08087744
	.align 2, 0
_08087738: .4byte 0x080FFE50
_0808773C:
	ldr r1, _0808775C @ =0x080FFE88
	adds r0, r7, #0
	bl func_080CABA0
_08087744:
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r7, r5
	movs r1, #0xb4
	bl func_08050E50
	ldr r6, _08087760 @ =0x000006A4
	adds r1, r7, r6
	movs r0, #0xb
	str r0, [r1]
	bl _0808814C
	.align 2, 0
_0808775C: .4byte 0x080FFE88
_08087760: .4byte 0x000006A4
_08087764:
	ldr r0, [r7, #0x14]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	beq _0808777E
	lsls r0, r1, #2
	adds r0, r0, r7
	movs r1, #0xe6
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_08085F08
_0808777E:
	ldr r0, [r7, #0x10]
	str r0, [r7, #0x14]
	ldr r2, _08087888 @ =0x0000072C
	adds r0, r7, r2
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_080C9020
	ldr r3, _0808788C @ =0x000006A1
	adds r0, r7, r3
	ldrb r4, [r0]
	cmp r4, #0
	bne _0808779A
	b _080878A8
_0808779A:
	ldr r5, _08087890 @ =0x00003AB4
	adds r4, r7, r5
	movs r6, #0
	mov sl, r6
	mov r0, sl
	strb r0, [r4]
	ldr r1, [r7, #0x10]
	lsls r1, r1, #3
	movs r2, #0xd6
	lsls r2, r2, #3
	adds r0, r7, r2
	adds r0, r0, r1
	ldr r0, [r0]
	add r1, sp, #0x24
	movs r2, #0
	bl func_0804EC84
	ldr r3, _08087894 @ =0x080FFE9C
	mov sb, r3
	adds r0, r4, #0
	bl strlen
	adds r5, r4, r0
	mov r8, r5
	movs r1, #0x7f
	subs r6, r1, r0
	cmp r6, #0
	beq _080877F2
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _080877E0
	adds r5, r6, #0
_080877E0:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r6, r8
	adds r0, r6, r5
	mov r1, sl
	strb r1, [r0]
_080877F2:
	adds r0, r4, #0
	bl strlen
	adds r2, r4, r0
	mov r8, r2
	movs r1, #0x7f
	subs r6, r1, r0
	cmp r6, #0
	beq _08087824
	add r0, sp, #0x24
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _08087812
	adds r5, r6, #0
_08087812:
	mov r0, r8
	add r1, sp, #0x24
	adds r2, r5, #0
	bl memcpy
	mov r3, r8
	adds r1, r3, r5
	movs r0, #0
	strb r0, [r1]
_08087824:
	ldr r5, _08087898 @ =0x080FFEA8
	mov r8, r5
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08087856
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08087846
	adds r4, r5, #0
_08087846:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_08087856:
	ldr r6, _08087890 @ =0x00003AB4
	adds r1, r7, r6
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r2, _0808789C @ =0x080FFEAC
	ldr r3, _080878A0 @ =0x080FFEB0
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r0, r4, #0
	bl func_08050E30
	adds r0, r4, #0
	movs r1, #0xb4
	bl func_08050E50
	ldr r2, _080878A4 @ =0x000006A4
	adds r1, r7, r2
	movs r0, #0xa
	str r0, [r1]
	bl _0808814C
	.align 2, 0
_08087888: .4byte 0x0000072C
_0808788C: .4byte 0x000006A1
_08087890: .4byte 0x00003AB4
_08087894: .4byte 0x080FFE9C
_08087898: .4byte 0x080FFEA8
_0808789C: .4byte 0x080FFEAC
_080878A0: .4byte 0x080FFEB0
_080878A4: .4byte 0x000006A4
_080878A8:
	ldr r3, _080878F4 @ =0x000006A3
	adds r0, r7, r3
	ldrb r0, [r0]
	cmp r0, #0
	bne _080878B6
	bl _0808814C
_080878B6:
	ldr r0, [r7, #0x1c]
	bl func_08075DD4
	adds r0, r7, #0
	bl func_08085640
	adds r5, r0, #0
	strh r4, [r7, #0xc]
	movs r6, #0xc9
	lsls r6, r6, #3
	adds r1, r7, r6
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075DB8
	ldr r0, [r7, #0x1c]
	adds r1, r5, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r3, _080878F8 @ =0x000006A4
	adds r0, r7, r3
	str r4, [r0]
	str r4, [r7, #0x10]
	bl _080880D6
	.align 2, 0
_080878F4: .4byte 0x000006A3
_080878F8: .4byte 0x000006A4
_080878FC:
	adds r0, r7, #0
	bl func_080088CC
	adds r4, r0, #0
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	bne _0808790E
	b _08087AB8
_0808790E:
	ldr r4, _08087980 @ =0x00000684
	adds r0, r7, r4
	ldr r5, [r0, #0x14]
	mov r8, r5
	bl func_080CAAF4
	add r3, sp, #0x10
	movs r6, #0xa9
	lsls r6, r6, #2
	adds r4, r7, r6
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r4, r0
	ldr r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _08087984 @ =0x080FFB90
	adds r0, r3, #0
	adds r1, r1, r2
	ldm r1!, {r2, r5, r6}
	stm r0!, {r2, r5, r6}
	ldm r1!, {r2, r5}
	stm r0!, {r2, r5}
	ldr r0, [r7, #8]
	ldr r6, _08087988 @ =0x00001AA8
	adds r0, r0, r6
	ldr r1, [r3, #8]
	mov r2, r8
	muls r2, r1, r2
	adds r1, r2, #0
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	ldr r3, _0808798C @ =0x000006A4
	adds r1, r7, r3
	movs r0, #7
	str r0, [r1]
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, #4
	adds r4, r4, r0
	ldr r4, [r4]
	cmp r4, #0
	bne _08087994
	ldr r0, [r7, #8]
	movs r4, #0xbe
	lsls r4, r4, #3
	adds r0, r0, r4
	mov r1, r8
	bl AddStoredBushels__4BarnUi
	ldr r1, _08087990 @ =0x080FFEB4
	b _08087A86
	.align 2, 0
_08087980: .4byte 0x00000684
_08087984: .4byte 0x080FFB90
_08087988: .4byte 0x00001AA8
_0808798C: .4byte 0x000006A4
_08087990: .4byte 0x080FFEB4
_08087994:
	cmp r4, #5
	bls _0808799A
	b _08087A9C
_0808799A:
	cmp r4, #3
	bhs _080879A0
	b _08087A9C
_080879A0:
	movs r4, #0
	ldr r0, [r7, #8]
	ldr r6, _080879E8 @ =0x00001C34
	adds r0, r0, r6
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080879EC
	mov r5, r8
	cmp r5, #0x63
	bls _080879BC
	movs r0, #0x63
	mov r8, r0
_080879BC:
	ldr r5, [r7, #8]
	adds r5, r5, r6
	add r6, sp, #0x24
	add r4, sp, #0x90
	ldr r1, [sp, #0x10]
	adds r0, r4, #0
	bl __4ToolUi
	ldrb r1, [r4]
	adds r0, r6, #0
	mov r2, r8
	bl __9ToolStackG4ToolUi
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #2
	bl memcpy
	movs r1, #0
	mov r8, r1
	b _08087A3E
	.align 2, 0
_080879E8: .4byte 0x00001C34
_080879EC:
	ldr r0, [r7, #8]
	ldr r2, _08087A78 @ =0x00001C34
	adds r0, r0, r2
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x91
	strb r1, [r0]
	bl GetId__C4Tool
	movs r2, #0
	ldr r1, [sp, #0x10]
	cmp r0, r1
	bne _08087A0C
	movs r2, #1
_08087A0C:
	cmp r2, #0
	beq _08087A40
	ldr r0, [r7, #8]
	adds r0, r0, r6
	bl GetAmount__C9ToolStack
	cmp r0, #0x63
	beq _08087A40
	ldr r0, [r7, #8]
	adds r0, r0, r6
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r4, r1, r0
	cmp r8, r4
	bhs _08087A2E
	mov r4, r8
_08087A2E:
	ldr r0, [r7, #8]
	adds r0, r0, r6
	adds r1, r4, #0
	bl AddAmount__9ToolStackUi
	mov r3, r8
	subs r3, r3, r4
	mov r8, r3
_08087A3E:
	movs r4, #1
_08087A40:
	mov r5, r8
	cmp r5, #0
	beq _08087A94
	ldr r0, [r7, #8]
	ldr r6, _08087A7C @ =0x00001C38
	adds r0, r0, r6
	ldr r1, [sp, #0x10]
	mov r2, r8
	bl func_0800FEC8
	adds r2, r0, #0
	cmp r8, r2
	beq _08087A5C
	movs r4, #1
_08087A5C:
	cmp r2, #0
	beq _08087A94
	ldr r0, [r7, #8]
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r1, [sp, #0x10]
	bl AddAmountOf__9ToolChestUiUi
	cmp r4, #0
	beq _08087A84
	ldr r1, _08087A80 @ =0x080FFEEC
	b _08087A86
	.align 2, 0
_08087A78: .4byte 0x00001C34
_08087A7C: .4byte 0x00001C38
_08087A80: .4byte 0x080FFEEC
_08087A84:
	ldr r1, _08087A90 @ =0x080FFF38
_08087A86:
	adds r0, r7, #0
	bl func_080CABA0
	b _08087A9C
	.align 2, 0
_08087A90: .4byte 0x080FFF38
_08087A94:
	ldr r1, _08087AB4 @ =0x080FFF84
	adds r0, r7, #0
	bl func_080CABA0
_08087A9C:
	movs r2, #0xd5
	lsls r2, r2, #3
	adds r0, r7, r2
	movs r1, #1
	strb r1, [r0]
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0xb4
	bl func_08050E50
	b _0808814C
	.align 2, 0
_08087AB4: .4byte 0x080FFF84
_08087AB8:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08087AE0
	ldr r5, _08087AD8 @ =0x00000684
	adds r0, r7, r5
	bl func_080CAAF4
	ldr r6, _08087ADC @ =0x000006A4
	adds r0, r7, r6
	str r4, [r0]
	b _080880D6
	.align 2, 0
_08087AD8: .4byte 0x00000684
_08087ADC: .4byte 0x000006A4
_08087AE0:
	ldr r0, _08087AF4 @ =0x00000684
	adds r1, r7, r0
	ldrb r0, [r1, #8]
	cmp r0, #0
	bne _08087AEC
	b _0808814C
_08087AEC:
	adds r0, r1, #0
	bl func_080CA98C
	b _0808814C
	.align 2, 0
_08087AF4: .4byte 0x00000684
_08087AF8:
	add r4, sp, #0x10
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r1, #0xaa
	lsls r1, r1, #2
	adds r0, r0, r1
	ldr r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _08087B58 @ =0x080FFB90
	adds r0, r4, #0
	adds r1, r1, r2
	ldm r1!, {r2, r3, r5}
	stm r0!, {r2, r3, r5}
	ldm r1!, {r2, r6}
	stm r0!, {r2, r6}
	ldr r0, [r7, #8]
	ldr r3, _08087B5C @ =0x00001C34
	adds r0, r0, r3
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08087B60
	ldr r5, [r7, #8]
	ldr r4, _08087B5C @ =0x00001C34
	adds r5, r5, r4
	add r6, sp, #0x24
	mov r4, sp
	adds r4, #0x92
	adds r0, r4, #0
	movs r1, #0x49
	bl __4ToolUi
	ldrb r1, [r4]
	adds r0, r6, #0
	movs r2, #1
	bl __9ToolStackG4ToolUi
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #2
	bl memcpy
	b _08087B7C
	.align 2, 0
_08087B58: .4byte 0x080FFB90
_08087B5C: .4byte 0x00001C34
_08087B60:
	ldr r0, [r7, #8]
	ldr r5, _08087B88 @ =0x00001C38
	adds r0, r0, r5
	movs r1, #0x49
	bl func_0800F990
	cmp r0, #0
	beq _08087B90
	ldr r0, [r7, #8]
	adds r0, r0, r5
	movs r1, #0x49
	movs r2, #1
	bl func_0800FEC8
_08087B7C:
	ldr r1, _08087B8C @ =0x080FFF84
	adds r0, r7, #0
	bl func_080CABA0
	b _08087BDC
	.align 2, 0
_08087B88: .4byte 0x00001C38
_08087B8C: .4byte 0x080FFF84
_08087B90:
	ldr r0, [r7, #8]
	movs r6, #0xe0
	lsls r6, r6, #2
	adds r0, r0, r6
	movs r1, #0x49
	bl GetAvailableSpaceFor__C9ToolChestUi
	cmp r0, #0
	bne _08087BC4
	ldr r1, _08087BBC @ =0x080FFD98
	adds r0, r7, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0xb4
	bl func_08050E50
	ldr r2, _08087BC0 @ =0x000006A4
	adds r1, r7, r2
	b _08087F4E
	.align 2, 0
_08087BBC: .4byte 0x080FFD98
_08087BC0: .4byte 0x000006A4
_08087BC4:
	ldr r0, [r7, #8]
	movs r3, #0xe0
	lsls r3, r3, #2
	adds r0, r0, r3
	movs r1, #0x49
	movs r2, #1
	bl AddAmountOf__9ToolChestUiUi
	ldr r1, _08087CA4 @ =0x080FFF38
	adds r0, r7, #0
	bl func_080CABA0
_08087BDC:
	ldr r0, [r7, #8]
	ldr r4, _08087CA8 @ =0x00001AA8
	adds r0, r0, r4
	ldr r1, [sp, #0x18]
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	movs r5, #0xd5
	lsls r5, r5, #3
	adds r1, r7, r5
	movs r0, #1
	strb r0, [r1]
	movs r6, #0xd2
	lsls r6, r6, #2
	adds r0, r7, r6
	movs r1, #0xb4
	bl func_08050E50
	movs r0, #0xa9
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	cmp r0, #0
	beq _08087C14
	subs r0, #1
	str r0, [r1]
_08087C14:
	ldr r0, [r1]
	cmp r0, #0
	beq _08087C1E
	subs r0, #1
	str r0, [r1]
_08087C1E:
	ldr r0, [r1]
	cmp r0, #0
	beq _08087C28
	subs r0, #1
	str r0, [r1]
_08087C28:
	movs r2, #7
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08087C42
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _08087C3C
	str r2, [r0]
_08087C3C:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08087C42:
	movs r2, #8
	movs r3, #0xa9
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, [r1]
	cmp r0, #0x27
	bhi _08087C62
	lsls r0, r0, #2
	adds r0, #4
	adds r0, r1, r0
	cmp r0, #0
	beq _08087C5C
	str r2, [r0]
_08087C5C:
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
_08087C62:
	ldr r0, [r7, #0x1c]
	bl func_08075DD4
	adds r0, r7, #0
	bl func_08085640
	adds r5, r0, #0
	movs r4, #0
	strh r4, [r7, #0xc]
	movs r6, #0xc9
	lsls r6, r6, #3
	adds r1, r7, r6
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075DB8
	ldr r0, [r7, #0x1c]
	adds r1, r5, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	ldr r3, _08087CAC @ =0x000006A4
	adds r1, r7, r3
	str r4, [r7, #0x10]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	b _08087E82
	.align 2, 0
_08087CA4: .4byte 0x080FFF38
_08087CA8: .4byte 0x00001AA8
_08087CAC: .4byte 0x000006A4
_08087CB0:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r6, [r0]
	cmp r6, #3
	beq _08087CBE
	b _0808814C
_08087CBE:
	add r3, sp, #0x10
	ldr r0, [r7, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r7
	movs r5, #0xaa
	lsls r5, r5, #2
	adds r0, r0, r5
	ldr r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _08087D70 @ =0x080FFB90
	adds r0, r3, #0
	adds r1, r1, r2
	ldm r1!, {r2, r4, r5}
	stm r0!, {r2, r4, r5}
	ldm r1!, {r2, r4}
	stm r0!, {r2, r4}
	ldr r0, [r7, #8]
	ldr r5, _08087D74 @ =0x00001AA8
	adds r0, r0, r5
	ldr r1, [r3, #8]
	bl func_0809ACC0
	adds r0, r7, #0
	bl func_080C8550
	ldr r0, [sp, #0x10]
	cmp r0, #1
	bne _08087D90
	add r1, sp, #0x2c
	movs r4, #0x25
	ldrh r2, [r1]
	ldr r3, _08087D78 @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1]
	movs r5, #0xb8
	ldrb r2, [r1, #1]
	adds r0, r6, #0
	ands r0, r2
	orrs r0, r5
	strb r0, [r1, #1]
	movs r4, #1
	ldrh r2, [r1, #2]
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	ands r6, r0
	orrs r6, r5
	strb r6, [r1, #3]
	ldrh r0, [r1, #4]
	ands r3, r0
	orrs r3, r4
	strh r3, [r1, #4]
	add r4, sp, #0x24
	movs r6, #0
	adds r0, r4, #0
	movs r2, #6
	bl memcpy
	strb r6, [r4, #6]
	add r5, sp, #0x40
	ldr r1, _08087D7C @ =0x080FFB60
	movs r0, #0xe
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #0xe
	bl __3CowPCcRC13ActorLocationUiUi
	ldr r0, [r7, #8]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r5, #0
	bl InsertCow__4BarnRC3Cow
	adds r4, r0, #0
	movs r0, #1
	rsbs r0, r0, #0
	cmp r4, r0
	bne _08087D84
	ldr r2, _08087D80 @ =0x000006A4
	adds r1, r7, r2
	b _08087E82
	.align 2, 0
_08087D70: .4byte 0x080FFB90
_08087D74: .4byte 0x00001AA8
_08087D78: .4byte 0xFFFFFC00
_08087D7C: .4byte 0x080FFB60
_08087D80: .4byte 0x000006A4
_08087D84:
	ldr r3, _08087D8C @ =0x000043D8
	adds r0, r7, r3
	str r6, [r0]
	b _08087E20
	.align 2, 0
_08087D8C: .4byte 0x000043D8
_08087D90:
	cmp r0, #2
	beq _08087D96
	b _0808814C
_08087D96:
	add r1, sp, #0x64
	movs r4, #0x25
	ldrh r2, [r1]
	ldr r3, _08087E0C @ =0xFFFFFC00
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r4
	strh r0, [r1]
	ldrb r2, [r1, #1]
	adds r0, r6, #0
	ands r0, r2
	movs r4, #8
	orrs r0, r4
	strb r0, [r1, #1]
	movs r5, #2
	ldrh r2, [r1, #2]
	adds r0, r3, #0
	ands r0, r2
	orrs r0, r5
	strh r0, [r1, #2]
	ldrb r0, [r1, #3]
	ands r6, r0
	orrs r6, r4
	strb r6, [r1, #3]
	ldrh r0, [r1, #4]
	ands r3, r0
	orrs r3, r5
	strh r3, [r1, #4]
	add r4, sp, #0x5c
	movs r5, #0
	adds r0, r4, #0
	movs r2, #6
	bl memcpy
	strb r5, [r4, #6]
	add r5, sp, #0x24
	ldr r1, _08087E10 @ =0x080FFB60
	movs r0, #0xe
	str r0, [sp]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #0xe
	bl __5SheepPCcRC13ActorLocationUiUi
	ldr r0, [r7, #8]
	movs r1, #0xbe
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r1, r5, #0
	bl InsertSheep__4BarnRC5Sheep
	adds r4, r0, #0
	movs r0, #1
	rsbs r0, r0, #0
	cmp r4, r0
	bne _08087E18
	ldr r2, _08087E14 @ =0x000006A4
	adds r1, r7, r2
	b _08087E82
	.align 2, 0
_08087E0C: .4byte 0xFFFFFC00
_08087E10: .4byte 0x080FFB60
_08087E14: .4byte 0x000006A4
_08087E18:
	ldr r3, _08087E50 @ =0x000043D8
	adds r1, r7, r3
	movs r0, #1
	str r0, [r1]
_08087E20:
	ldr r0, [sp, #0xc]
	ldr r1, _08087E54 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r5, _08087E58 @ =0x000006A4
	adds r1, r7, r5
	movs r0, #0xc
	str r0, [r1]
	ldr r6, _08087E5C @ =0x000043DC
	adds r0, r7, r6
	str r4, [r0]
	b _0808814C
	.align 2, 0
_08087E50: .4byte 0x000043D8
_08087E54: .4byte 0x00000889
_08087E58: .4byte 0x000006A4
_08087E5C: .4byte 0x000043DC
_08087E60:
	ldr r1, _08087E88 @ =0x080FFF94
	adds r0, r7, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0xb4
	bl func_08050E50
	movs r2, #0xd5
	lsls r2, r2, #3
	adds r1, r7, r2
	movs r0, #1
	strb r0, [r1]
	ldr r3, _08087E8C @ =0x000006A4
	adds r1, r7, r3
_08087E82:
	movs r0, #7
	str r0, [r1]
	b _0808814C
	.align 2, 0
_08087E88: .4byte 0x080FFF94
_08087E8C: .4byte 0x000006A4
_08087E90:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #3
	beq _08087E9E
	b _0808814C
_08087E9E:
	ldr r1, _08087EB8 @ =0x080FFFC4
	adds r0, r7, #0
	bl func_080CABA0
	movs r5, #0xd2
	lsls r5, r5, #2
	adds r0, r7, r5
	movs r1, #0xb4
	bl func_08050E50
	ldr r6, _08087EBC @ =0x000006A4
	adds r1, r7, r6
	b _08087F4E
	.align 2, 0
_08087EB8: .4byte 0x080FFFC4
_08087EBC: .4byte 0x000006A4
_08087EC0:
	movs r1, #0xd4
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #3
	beq _08087ECE
	b _0808814C
_08087ECE:
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r0, r7, r2
	bl func_08050E5C
	ldr r3, _08087EE8 @ =0x000006A4
	adds r1, r7, r3
	movs r0, #0
	str r0, [r1]
	b _0808814C
	.align 2, 0
_08087EE8: .4byte 0x000006A4
_08087EEC:
	movs r4, #0xd4
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r0, [r0]
	cmp r0, #3
	beq _08087EFA
	b _0808814C
_08087EFA:
	ldr r0, [r7, #0x1c]
	bl func_08075DD4
	adds r0, r7, #0
	bl func_08085640
	adds r5, r0, #0
	movs r4, #0
	strh r4, [r7, #0xc]
	movs r6, #0xc9
	lsls r6, r6, #3
	adds r1, r7, r6
	movs r0, #0x28
	str r0, [r1]
	ldr r0, [r7, #0x1c]
	movs r2, #0xc
	ldrsh r1, [r7, r2]
	bl func_08075DB8
	ldr r0, [r7, #0x1c]
	adds r1, r5, #0
	adds r1, #8
	lsls r1, r1, #0x13
	asrs r1, r1, #0x10
	bl func_08075E24
	str r4, [r7, #0x10]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	ldr r1, _08087F54 @ =0x080FFFC4
	adds r0, r7, #0
	bl func_080CABA0
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r1, #0xb4
	bl func_08050E50
	ldr r4, _08087F58 @ =0x000006A4
_08087F4C:
	adds r1, r7, r4
_08087F4E:
	movs r0, #8
	str r0, [r1]
	b _0808814C
	.align 2, 0
_08087F54: .4byte 0x080FFFC4
_08087F58: .4byte 0x000006A4
_08087F5C:
	movs r5, #0xd4
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r0, [r0]
	cmp r0, #3
	beq _08087F6A
	b _0808814C
_08087F6A:
	movs r6, #0xd2
	lsls r6, r6, #2
	adds r4, r7, r6
	adds r0, r4, #0
	bl func_08050DF0
	cmp r0, #1
	beq _08087F82
	cmp r0, #2
	bne _08087F80
	b _080880C8
_08087F80:
	b _0808814C
_08087F82:
	ldr r0, [r7, #0x10]
	lsls r0, r0, #3
	adds r0, r0, r7
	ldr r1, _080880AC @ =0x000006AC
	adds r0, r0, r1
	ldr r1, [r0, #4]
	ldr r0, [r0]
	add r4, sp, #0x94
	str r0, [r4]
	str r1, [r4, #4]
	ldr r0, [r7, #8]
	ldr r2, _080880B0 @ =0x00001AA8
	adds r0, r0, r2
	ldr r1, [r4, #4]
	bl func_0809ABD8
	adds r0, r7, #0
	bl func_080C8550
	ldr r0, [r7, #8]
	movs r3, #0xbe
	lsls r3, r3, #3
	adds r0, r0, r3
	ldr r1, [r4]
	bl Remove__4BarnUi
	ldr r4, _080880B4 @ =0x00003AB4
	adds r5, r7, r4
	ldr r6, _080880B8 @ =0x080FFB60
	adds r0, r6, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x7f
	bls _08087FCA
	movs r4, #0x7f
_08087FCA:
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r5, r4
	movs r6, #0
	mov sb, r6
	strb r6, [r0]
	ldr r0, _080880BC @ =0x080FFFE8
	mov r8, r0
	adds r0, r5, #0
	bl strlen
	adds r6, r5, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0808800E
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08087FFE
	adds r4, r5, #0
_08087FFE:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	mov r1, sb
	strb r1, [r0]
_0808800E:
	ldr r0, [r7, #8]
	adds r0, #0x14
	bl func_08009AF4
	mov sb, r0
	ldr r2, _080880B4 @ =0x00003AB4
	adds r4, r7, r2
	mov r8, sb
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _0808804C
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0808803C
	adds r4, r5, #0
_0808803C:
	adds r0, r6, #0
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0808804C:
	ldr r3, _080880B4 @ =0x00003AB4
	adds r4, r7, r3
	ldr r5, _080880C0 @ =0x080FFFFC
	mov r8, r5
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x7f
	subs r5, r1, r0
	cmp r5, #0
	beq _08088082
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08088072
	adds r4, r5, #0
_08088072:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_08088082:
	ldr r6, _080880B4 @ =0x00003AB4
	adds r1, r7, r6
	adds r0, r7, #0
	bl func_080CABA0
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r1, #0xb5
	bl func_08050E50
	ldr r2, _080880C4 @ =0x000006A4
	adds r1, r7, r2
	movs r0, #9
	str r0, [r1]
	movs r3, #0xd5
	lsls r3, r3, #3
	adds r1, r7, r3
	movs r0, #1
	strb r0, [r1]
	b _0808814C
	.align 2, 0
_080880AC: .4byte 0x000006AC
_080880B0: .4byte 0x00001AA8
_080880B4: .4byte 0x00003AB4
_080880B8: .4byte 0x080FFB60
_080880BC: .4byte 0x080FFFE8
_080880C0: .4byte 0x080FFFFC
_080880C4: .4byte 0x000006A4
_080880C8:
	adds r0, r4, #0
	bl func_08050E5C
	ldr r4, _080880E0 @ =0x000006A4
	adds r0, r7, r4
	movs r1, #1
	str r1, [r0]
_080880D6:
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #0x14]
	b _0808814C
	.align 2, 0
_080880E0: .4byte 0x000006A4
_080880E4:
	movs r5, #0xd4
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r0, [r0]
	cmp r0, #3
	bne _0808814C
	ldr r2, [sp, #0xc]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0808814C
	movs r6, #1
	str r6, [sp, #0xa0]
	ldr r1, _08088120 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	b _0808814C
	.align 2, 0
_08088120: .4byte 0x00000889
_08088124:
	ldr r3, [sp, #0xc]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0808814C
	ldr r1, _08088148 @ =0x000043DC
	adds r0, r7, r1
	ldr r4, [r0]
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	adds r0, r4, #0
	b _08088156
	.align 2, 0
_08088148: .4byte 0x000043DC
_0808814C:
	adds r0, r7, #0
	bl func_080C96C4
	bl sub_08086DFA
_08088156:
	add sp, #0xb4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08088168
func_08088168: @ 0x08088168
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r4, r0, #0
	adds r5, r1, #0
	mov r8, r2
	adds r6, r3, #0
	ldr r0, _080881A4 @ =vtable_unk_080E7D3C
	str r0, [r4]
	ldr r0, _080881A8 @ =0x000043E0
	bl __builtin_new
	mov r1, r8
	adds r2, r6, #0
	bl func_08085584
	str r0, [r4, #4]
	ldr r1, [r5]
	movs r0, #0
	str r0, [r5]
	str r1, [r4, #8]
	str r6, [r4, #0xc]
	mov r0, r8
	str r0, [r4, #0x10]
	adds r0, r4, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080881A4: .4byte vtable_unk_080E7D3C
_080881A8: .4byte 0x000043E0

	thumb_func_start func_080881AC
func_080881AC: @ 0x080881AC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080881E8 @ =vtable_unk_080E7D3C
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080881C8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080881C8:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080881DA
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080881DA:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080881E8: .4byte vtable_unk_080E7D3C

	thumb_func_start func_080881EC
func_080881EC: @ 0x080881EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov r8, r0
	adds r5, r1, #0
	ldr r0, [r5, #4]
	bl func_08086A08
	mov sb, r0
	movs r0, #1
	rsbs r0, r0, #0
	cmp sb, r0
	beq _08088290
	ldr r0, [r5, #4]
	bl func_08085EEC
	adds r4, r0, #0
	movs r0, #1
	mov sl, r0
	cmp r4, #0
	beq _08088220
	movs r1, #2
	mov sl, r1
_08088220:
	movs r0, #0x10
	bl __builtin_new
	adds r2, r0, #0
	ldr r3, [r5, #8]
	movs r6, #0
	str r6, [r5, #8]
	str r3, [sp, #4]
	movs r7, #1
	cmp r4, #0
	beq _08088238
	movs r7, #2
_08088238:
	add r4, sp, #4
	ldr r1, [r5, #0x10]
	ldr r0, _08088288 @ =vtable_unk_080E5D94
	str r0, [r2]
	str r6, [sp, #4]
	str r3, [r2, #4]
	str r1, [r2, #8]
	str r7, [r2, #0xc]
	str r2, [sp]
	movs r0, #0x14
	bl __builtin_new
	ldr r3, [sp]
	str r6, [sp]
	ldr r2, [r5, #0x10]
	ldr r1, _0808828C @ =vtable_unk_080E5C64
	str r1, [r0]
	str r6, [sp, #8]
	str r3, [r0, #4]
	str r2, [r0, #8]
	mov r1, sl
	str r1, [r0, #0xc]
	mov r1, sb
	strb r1, [r0, #0x10]
	str r4, [sp, #0xc]
	str r0, [sp, #0x10]
	str r6, [sp, #4]
	mov r1, r8
	str r0, [r1]
	ldr r1, [sp]
	cmp r1, #0
	beq _0808829A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
	b _0808829A
	.align 2, 0
_08088288: .4byte vtable_unk_080E5D94
_0808828C: .4byte vtable_unk_080E5C64
_08088290:
	ldr r1, [r5, #8]
	movs r0, #0
	str r0, [r5, #8]
	mov r0, r8
	str r1, [r0]
_0808829A:
	mov r0, r8
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_080882AC
func_080882AC: @ 0x080882AC
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	bl func_080CE19C
	ldr r0, _080882FC @ =vtable_unk_080E7D4C
	str r0, [r6, #4]
	adds r0, r6, #0
	adds r0, #0x98
	movs r5, #0
	strb r5, [r0]
	adds r2, r6, #0
	adds r2, #0xfc
	ldr r0, [r6, #8]
	ldr r3, _08088300 @ =0x00001C2C
	adds r1, r0, r3
	str r1, [r2]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r2, r6, r1
	adds r3, #0xc
	adds r1, r0, r3
	str r1, [r2]
	movs r1, #0x82
	lsls r1, r1, #1
	adds r4, r6, r1
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl GetFridge__9FarmHouse
	str r0, [r4]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r6, r1
	str r5, [r0]
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080882FC: .4byte vtable_unk_080E7D4C
_08088300: .4byte 0x00001C2C

	thumb_func_start func_08088304
func_08088304: @ 0x08088304
	push {lr}
	ldr r2, _08088314 @ =vtable_unk_080E7D4C
	str r2, [r0, #4]
	bl func_080E3504
	pop {r0}
	bx r0
	.align 2, 0
_08088314: .4byte vtable_unk_080E7D4C

	thumb_func_start func_08088318
func_08088318: @ 0x08088318
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r7, r1, #0
	movs r5, #0
	cmp r5, r7
	bhs _080883A2
_08088326:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r0, [r0]
	adds r1, r5, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #4
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808839C
	movs r4, #0
	add r0, sp, #4
	bl GetKind__C12RucksackItem
	cmp r0, #0
	beq _08088356
	cmp r0, #1
	beq _08088368
	b _0808837C
_08088356:
	add r4, sp, #8
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetIconId__C4Food
	b _08088378
_08088368:
	add r0, sp, #4
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0xc
	strb r1, [r0]
	bl GetIconId__C7Article
_08088378:
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_0808837C:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808838C
	movs r4, #0xb0
	lsls r4, r4, #1
_0808838C:
	ldr r0, [r6, #0x78]
	movs r1, #1
	str r1, [sp]
	adds r1, r5, #0
	ldr r2, _080883CC @ =0x086678A0
	adds r3, r4, #0
	bl func_080CB304
_0808839C:
	adds r5, #1
	cmp r5, r7
	blo _08088326
_080883A2:
	adds r4, r6, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080883B4
	b _080884E8
_080883B4:
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #5
	bls _080883C0
	b _080884E8
_080883C0:
	lsls r0, r0, #2
	ldr r1, _080883D0 @ =_080883D4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080883CC: .4byte 0x086678A0
_080883D0: .4byte _080883D4
_080883D4: @ jump table
	.4byte _080883EC @ case 0
	.4byte _08088424 @ case 1
	.4byte _08088460 @ case 2
	.4byte _08088494 @ case 3
	.4byte _080884DC @ case 4
	.4byte _080884E8 @ case 5
_080883EC:
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F20C
	add r0, sp, #4
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088416
	movs r5, #0xb0
	lsls r5, r5, #1
_08088416:
	ldr r0, [r6, #0x78]
	ldr r1, _08088420 @ =0x086678A0
	adds r2, r5, #0
	b _080884CA
	.align 2, 0
_08088420: .4byte 0x086678A0
_08088424:
	ldr r0, [r4]
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xd
	strb r1, [r0]
	bl GetIconId__C7Article
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088452
	movs r5, #0xb0
	lsls r5, r5, #1
_08088452:
	ldr r0, [r6, #0x78]
	ldr r1, _0808845C @ =0x086678A0
	adds r2, r5, #0
	b _080884CA
	.align 2, 0
_0808845C: .4byte 0x086678A0
_08088460:
	ldr r0, [r6, #8]
	ldr r2, _08088478 @ =0x00001C70
	adds r0, r0, r2
	bl GetGrowthStage__C3Dog
	cmp r0, #0
	bne _08088484
	ldr r0, [r6, #0x78]
	ldr r1, _0808847C @ =0x0858BA28
	ldr r2, _08088480 @ =0x000003DA
	b _080884CA
	.align 2, 0
_08088478: .4byte 0x00001C70
_0808847C: .4byte 0x0858BA28
_08088480: .4byte 0x000003DA
_08088484:
	ldr r0, [r6, #0x78]
	ldr r1, _08088490 @ =0x0858BA28
	movs r2, #0xdd
	lsls r2, r2, #2
	b _080884CA
	.align 2, 0
_08088490: .4byte 0x0858BA28
_08088494:
	ldr r0, [r4]
	bl func_0800F344
	adds r1, r0, #0
	ldr r0, [r6, #8]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetChicken__4CoopUi
	cmp r0, #0
	beq _080884E8
	bl GetGrowthStage__C7Chicken
	cmp r0, #0
	bne _080884C4
	ldr r0, [r6, #0x78]
	ldr r1, _080884BC @ =0x0858BA28
	ldr r2, _080884C0 @ =0x0000073D
	b _080884CA
	.align 2, 0
_080884BC: .4byte 0x0858BA28
_080884C0: .4byte 0x0000073D
_080884C4:
	ldr r0, [r6, #0x78]
	ldr r1, _080884D4 @ =0x0858BA28
	ldr r2, _080884D8 @ =0x00000734
_080884CA:
	movs r3, #1
	bl func_080CBAF0
	b _080884E8
	.align 2, 0
_080884D4: .4byte 0x0858BA28
_080884D8: .4byte 0x00000734
_080884DC:
	ldr r0, [r6, #0x78]
	ldr r1, _080884F0 @ =0x086678A0
	movs r2, #0x35
	movs r3, #1
	bl func_080CBAF0
_080884E8:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080884F0: .4byte 0x086678A0

	thumb_func_start func_080884F4
func_080884F4: @ 0x080884F4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r1
	movs r5, #0
	add r7, sp, #8
_08088504:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r0, [r0]
	mov r2, r8
	lsls r1, r2, #3
	adds r1, r1, r5
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #4
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08088558
	adds r0, r7, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	adds r0, r7, #0
	bl GetIconId__C4Food
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	add r0, sp, #4
	bl GetAmount__C9FoodStack
	ldr r1, [r6, #0x7c]
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r5, #0
	ldr r2, _08088554 @ =0x086678A0
	adds r3, r4, #0
	bl func_080CC728
	b _08088560
	.align 2, 0
_08088554: .4byte 0x086678A0
_08088558:
	ldr r0, [r6, #0x7c]
	adds r1, r5, #0
	bl func_080CCDEC
_08088560:
	adds r5, #1
	cmp r5, #7
	bls _08088504
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08088574
func_08088574: @ 0x08088574
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x94
	ldr r0, [r0]
	bl func_080CEB80
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080884F4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08088590
func_08088590: @ 0x08088590
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x94
	ldr r0, [r0]
	bl func_080CEBC0
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080884F4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_080885AC
func_080885AC: @ 0x080885AC
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	movs r7, #0
	adds r6, r5, #0
	adds r6, #0x98
	strb r7, [r6]
	cmp r1, #0
	bne _080885DA
	adds r4, r5, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808865A
	ldr r2, [r4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl func_080CF67C
	b _08088658
_080885DA:
	cmp r1, #8
	bgt _08088614
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r4, [r0]
	adds r0, r5, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp]
	mov r0, sp
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808865A
	ldr r2, [sp]
	str r2, [sp, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl func_080CFA38
	b _08088658
_08088614:
	adds r0, r5, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	adds r0, r5, #0
	movs r2, #0
	bl func_080CE184
	lsls r4, r4, #3
	adds r6, r4, r0
	movs r0, #0x82
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r0, [r4]
	adds r1, r6, #0
	bl GetFoodStackAt__6FridgeUi
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808865A
	ldr r0, [r4]
	adds r1, r6, #0
	bl GetFoodStackAt__6FridgeUi
	adds r1, r0, #0
	mov r0, sp
	bl GetFood__C9FoodStack
	mov r0, sp
	bl GetDesc__C4Food
_08088658:
	adds r7, r0, #0
_0808865A:
	cmp r7, #0
	beq _0808866E
	adds r0, r5, #0
	adds r0, #0x80
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	b _0808867C
_0808866E:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _08088684 @ =0x08100030
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
_0808867C:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08088684: .4byte 0x08100030

	thumb_func_start func_08088688
func_08088688: @ 0x08088688
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	adds r7, r0, #0
	mov r8, r1
	str r2, [sp, #0x28]
	movs r0, #1
	str r0, [sp, #0x2c]
	cmp r1, #0
	bne _080886A4
	b _08088B8C
_080886A4:
	cmp r1, #8
	ble _080886AA
	b _08088876
_080886AA:
	adds r4, r7, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	mov sb, r4
	cmp r0, #0
	beq _08088738
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	movs r1, #0
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _080886E4
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _080886E6
_080886E4:
	movs r1, #1
_080886E6:
	cmp r1, #0
	beq _080886EC
	b _08088B8C
_080886EC:
	ldr r0, [r7, #0x78]
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	movs r3, #1
	bl func_080CBDD4
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	add r5, sp, #0x10
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_0800FCE4
	mov r2, sb
	ldr r0, [r2]
	ldr r1, [sp, #0x10]
	str r1, [sp, #0x14]
	bl func_0800F418
	b _08088B8C
_08088738:
	mov r3, sb
	ldr r0, [r3]
	bl func_0800F204
	cmp r0, #5
	bls _08088746
	b _08088B8C
_08088746:
	lsls r0, r0, #2
	ldr r1, _08088750 @ =_08088754
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08088750: .4byte _08088754
_08088754: @ jump table
	.4byte _0808876C @ case 0
	.4byte _0808876C @ case 1
	.4byte _08088AC6 @ case 2
	.4byte _08088AC6 @ case 3
	.4byte _08088AC6 @ case 4
	.4byte _08088B8C @ case 5
_0808876C:
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r4, sp, #0x18
	ldr r0, [r7, #0x78]
	bl func_080CB2FC
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	movs r1, #0
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _080887A0
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _080887A2
_080887A0:
	movs r1, #1
_080887A2:
	cmp r1, #0
	bne _08088822
	ldr r0, [r7, #0x78]
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	movs r3, #1
	bl func_080CBDD4
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	movs r0, #1
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CB63C
	add r0, sp, #0x10
	mov r4, sb
	ldr r1, [r4]
	bl func_0800F294
	ldr r0, [r4]
	bl func_0800F390
	add r6, sp, #0x14
	movs r0, #0x80
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r4, #0
	bl func_0800FCE4
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x10]
	str r1, [r0]
	mov r1, sb
	ldr r0, [r1]
	ldr r1, [sp, #0x14]
	str r1, [sp, #0x24]
	bl func_0800F418
	b _08088B8C
_08088822:
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	movs r0, #1
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CB63C
	add r0, sp, #0x24
	mov r2, sb
	ldr r1, [r2]
	bl func_0800F294
	mov r3, sb
	ldr r0, [r3]
	bl func_0800F390
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x24]
	str r1, [r0]
	b _08088B8C
_08088876:
	adds r0, r7, #0
	mov r1, r8
	ldr r2, [sp, #0x28]
	bl func_080CE184
	str r0, [sp, #0x30]
	movs r1, #0x82
	lsls r1, r1, #1
	adds r1, r1, r7
	mov sl, r1
	ldr r0, [r1]
	ldr r1, [sp, #0x30]
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp, #4]
	adds r4, r7, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088978
	add r0, sp, #4
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080888B4
	b _08088B8C
_080888B4:
	ldr r5, [r4]
	add r4, sp, #8
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #9
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0xa
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	bl func_0800F3B0
	mov r2, sl
	ldr r0, [r2]
	ldr r1, [sp, #0x30]
	bl GetFoodStackAt__6FridgeUi
	movs r1, #1
	bl SubtractAmount__9FoodStackUi
	ldr r5, [r7, #0x78]
	ldr r6, _0808894C @ =0x086678A0
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	adds r0, r4, #0
	bl GetIconId__C4Food
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r6, #0
	movs r3, #1
	bl func_080CBAF0
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r0, [r0]
	ldr r3, [sp, #0x28]
	cmp r0, r3
	beq _08088920
	b _08088B8C
_08088920:
	mov r4, sl
	ldr r0, [r4]
	ldr r1, [sp, #0x30]
	bl GetFoodStackAt__6FridgeUi
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088950
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	b _08088B8C
	.align 2, 0
_0808894C: .4byte 0x086678A0
_08088950:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x30]
	bl GetFoodStackAt__6FridgeUi
	bl GetAmount__C9FoodStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	b _08088B8C
_08088978:
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #4
	ble _08088984
	b _08088B8C
_08088984:
	cmp r0, #1
	blt _0808898A
	b _08088B88
_0808898A:
	cmp r0, #0
	beq _08088990
	b _08088B8C
_08088990:
	add r2, sp, #8
	mov sb, r2
	ldr r1, [r4]
	mov r0, sb
	bl func_0800F20C
	add r0, sp, #4
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080889AA
	b _08088AD0
_080889AA:
	add r0, sp, #4
	bl GetAmount__C9FoodStack
	cmp r0, #1
	bls _080889B6
	b _08088B7C
_080889B6:
	ldr r0, [r4]
	bl func_0800F388
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08088A8C
	ldr r0, [r4]
	bl func_0800F390
	ldr r4, [r4]
	add r5, sp, #0xc
	adds r0, r5, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	ldrb r1, [r5]
	mov r0, sp
	adds r0, #0xd
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0xe
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r4, #0
	bl func_0800F3B0
	mov r4, sl
	ldr r0, [r4]
	ldr r1, [sp, #0x30]
	bl GetFoodStackAt__6FridgeUi
	adds r6, r0, #0
	add r4, sp, #0x10
	adds r0, r4, #0
	mov r1, sb
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0xc]
	str r0, [r6]
	ldr r4, [r7, #0x78]
	ldr r6, _08088A88 @ =0x086678A0
	adds r0, r5, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	adds r0, r5, #0
	bl GetIconId__C4Food
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r6, #0
	movs r3, #1
	bl func_080CBAF0
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r0, [r0]
	ldr r1, [sp, #0x28]
	cmp r0, r1
	beq _08088A5E
	b _08088B8C
_08088A5E:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, sb
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, [sp, #0x2c]
	str r2, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl func_080CC728
	b _08088B8C
	.align 2, 0
_08088A88: .4byte 0x086678A0
_08088A8C:
	mov r0, sb
	bl GetId__C4Food
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	adds r0, r4, #0
	bl GetId__C4Food
	eors r0, r5
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	bge _08088AC6
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _08088ACC @ =0x08100034
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r3, #0x84
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r4, [sp, #0x2c]
	str r4, [r0]
_08088AC6:
	movs r0, #0
	str r0, [sp, #0x2c]
	b _08088B8C
	.align 2, 0
_08088ACC: .4byte 0x08100034
_08088AD0:
	ldr r0, [r4]
	bl func_0800F388
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08088B64
	ldr r0, [r4]
	bl func_0800F390
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x30]
	bl GetFoodStackAt__6FridgeUi
	adds r6, r0, #0
	add r5, sp, #0xc
	add r4, sp, #0x10
	adds r0, r4, #0
	mov r1, sb
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0xc]
	str r0, [r6]
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r0, [r0]
	ldr r2, [sp, #0x28]
	cmp r0, r2
	bne _08088B8C
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, sb
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _08088B60 @ =0x086678A0
	ldr r0, [sp, #0x2c]
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CC728
	b _08088B8C
	.align 2, 0
_08088B60: .4byte 0x086678A0
_08088B64:
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _08088B84 @ =0x08100034
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r2, [sp, #0x2c]
	str r2, [r0]
_08088B7C:
	movs r3, #0
	str r3, [sp, #0x2c]
	b _08088B8C
	.align 2, 0
_08088B84: .4byte 0x08100034
_08088B88:
	movs r4, #0
	str r4, [sp, #0x2c]
_08088B8C:
	add r1, sp, #0x2c
	ldrb r0, [r1]
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_08088BA0
func_08088BA0: @ 0x08088BA0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x60
	adds r7, r0, #0
	str r1, [sp, #0x2c]
	mov sl, r2
	movs r0, #1
	str r0, [sp, #0x30]
	cmp r2, #0
	bne _08088BCC
	adds r0, r7, #0
	adds r0, #0x90
	ldr r0, [r0]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	b _08088D30
_08088BCC:
	ldr r1, [sp, #0x2c]
	cmp r1, #0
	beq _08088BD4
	b _08088DB4
_08088BD4:
	mov r2, sl
	cmp r2, #8
	bgt _08088BE8
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_08088688
	bl _08089AC0
_08088BE8:
	movs r3, #0xfc
	adds r3, r3, r7
	mov r8, r3
	ldr r0, [r3]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088C10
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sl
	bl func_08088688
	bl _08089AC0
_08088C10:
	mov r4, r8
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #0
	beq _08088C1E
	b _08088D3E
_08088C1E:
	mov r2, r8
	ldr r1, [r2]
	add r0, sp, #4
	bl func_0800F294
	mov r3, sp
	adds r3, #8
	str r3, [sp, #0x34]
	adds r0, r3, #0
	add r1, sp, #4
	bl GetFood__C12RucksackItem
	adds r4, r7, #0
	adds r4, #0x94
	str r4, [sp, #0x3c]
	ldr r0, [r4]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sl
	bl func_080CE184
	str r0, [sp, #0x38]
	add r6, sp, #0xc
	movs r0, #0x82
	lsls r0, r0, #1
	adds r0, r0, r7
	mov sb, r0
	ldr r0, [r0]
	ldr r1, [sp, #0x38]
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp, #0xc]
	adds r0, r6, #0
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088CF8
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08088CD6
	mov r1, r8
	ldr r0, [r1]
	bl func_0800F390
	mov r2, sb
	ldr r0, [r2]
	ldr r1, [sp, #0x38]
	bl GetFoodStackAt__6FridgeUi
	adds r6, r0, #0
	add r5, sp, #0x10
	add r4, sp, #0x14
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C12RucksackItem
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x15
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x16
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0x10]
	str r0, [r6]
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [sp, #0x34]
	bl sub_080895C2
_08088CD6:
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _08088CF4 @ =0x08100034
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r2, [sp, #0x30]
	str r2, [r0]
	bl _08089620
	.align 2, 0
_08088CF4: .4byte 0x08100034
_08088CF8:
	ldr r0, [sp, #0x34]
	bl GetId__C4Food
	adds r5, r0, #0
	add r4, sp, #0x10
	adds r0, r4, #0
	adds r1, r6, #0
	bl GetFood__C9FoodStack
	adds r0, r4, #0
	bl GetId__C4Food
	eors r0, r5
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	bge _08088D46
	adds r0, r6, #0
	bl GetAmount__C9FoodStack
	cmp r0, #1
	bne _08088D3E
	ldr r4, [sp, #0x3c]
	ldr r0, [r4]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sl
_08088D30:
	bl func_08088688
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x30]
	bl _08089AC0
_08088D3E:
	movs r0, #0
	str r0, [sp, #0x30]
	bl _08089AC0
_08088D46:
	adds r0, r6, #0
	bl GetAmount__C9FoodStack
	cmp r0, #0x63
	bne _08088D54
	bl _080895E0
_08088D54:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08088D96
	mov r2, r8
	ldr r0, [r2]
	bl func_0800F390
	mov r3, sb
	ldr r0, [r3]
	ldr r1, [sp, #0x38]
	bl GetFoodStackAt__6FridgeUi
	movs r1, #1
	bl AddAmount__9FoodStackUi
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r1, sb
	ldr r0, [r1]
	ldr r1, [sp, #0x38]
	bl _08089A0C
_08088D96:
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _08088DB0 @ =0x08100034
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r2, #0x84
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r3, [sp, #0x30]
	str r3, [r0]
	b _0808932C
	.align 2, 0
_08088DB0: .4byte 0x08100034
_08088DB4:
	ldr r0, [sp, #0x2c]
	cmp r0, #8
	ble _08088DBC
	b _0808939A
_08088DBC:
	mov r1, sl
	cmp r1, #8
	ble _08088DC4
	b _08088F8E
_08088DC4:
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r4, sp, #0x18
	ldr r5, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_080CB2E8
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	add r4, sp, #0x10
	mov r8, r4
	movs r0, #0x80
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r4, [r5]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #0x10]
	add r6, sp, #0x24
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #0x24]
	mov r0, r8
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088E50
	adds r0, r6, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088E50
	bl _08089AC0
_08088E50:
	mov r0, r8
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088EC8
	ldr r4, [r5]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x24]
	str r1, [r0]
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0x28
	bl __12RucksackItem
	ldr r0, [sp, #0x28]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	ldr r0, [sp, #0x30]
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CB63C
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	bl _08089AC0
_08088EC8:
	adds r0, r6, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088F22
	ldr r4, [r5]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0x28
	bl __12RucksackItem
	ldr r0, [sp, #0x28]
	str r0, [r4]
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x10]
	str r1, [r0]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	b _08088F6E
_08088F22:
	ldr r4, [r5]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x24]
	str r1, [r0]
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x10]
	str r1, [r0]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	ldr r0, [sp, #0x30]
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CB63C
_08088F6E:
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #8]
	ldr r3, [sp, #0xc]
	ldr r0, [sp, #0x30]
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CB63C
	bl _08089AC0
_08088F8E:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r1, r7, r1
	str r1, [sp, #0x40]
	ldr r4, [r1]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sl
	bl func_080CE184
	mov sb, r0
	add r4, sp, #8
	movs r2, #0x82
	lsls r2, r2, #1
	adds r2, r7, r2
	str r2, [sp, #0x44]
	ldr r0, [r2]
	mov r1, sb
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp, #8]
	add r0, sp, #4
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	mov r8, r4
	cmp r0, #0
	beq _080890BC
	mov r0, r8
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088FF6
	bl _08089AC0
_08088FF6:
	add r5, sp, #0xc
	adds r0, r5, #0
	mov r1, r8
	bl GetFood__C9FoodStack
	ldr r3, [sp, #0x40]
	ldr r4, [r3]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	mov r8, r0
	add r6, sp, #0x10
	add r4, sp, #0x14
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x15
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x16
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r6, #0
	bl __12RucksackItemG4Food
	ldr r0, [sp, #0x10]
	mov r4, r8
	str r0, [r4]
	ldr r1, [sp, #0x44]
	ldr r0, [r1]
	mov r1, sb
	bl GetFoodStackAt__6FridgeUi
	movs r1, #1
	bl SubtractAmount__9FoodStackUi
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	adds r0, r5, #0
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _080890A0 @ =0x086678A0
	ldr r0, [sp, #0x30]
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	bl func_080CB304
	ldr r1, [sp, #0x44]
	ldr r0, [r1]
	mov r1, sb
	bl GetFoodStackAt__6FridgeUi
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080890A4
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	bl _0808997E
	.align 2, 0
_080890A0: .4byte 0x086678A0
_080890A4:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r2, [sp, #0x44]
	ldr r0, [r2]
	mov r1, sb
	bl _08089A0C
_080890BC:
	mov r0, r8
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080891A0
	add r0, sp, #4
	bl GetKind__C12RucksackItem
	cmp r0, #0
	beq _080890D4
	b _08089620
_080890D4:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080890FC
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _080890F8 @ =0x08100034
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r4, #0x84
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r1, [sp, #0x30]
	b _0808966A
	.align 2, 0
_080890F8: .4byte 0x08100034
_080890FC:
	add r6, sp, #0xc
	adds r0, r6, #0
	add r1, sp, #4
	bl GetFood__C12RucksackItem
	ldr r3, [sp, #0x44]
	ldr r0, [r3]
	mov r1, sb
	bl GetFoodStackAt__6FridgeUi
	mov r8, r0
	add r5, sp, #0x10
	add r4, sp, #0x14
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x15
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x16
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0x10]
	mov r4, r8
	str r0, [r4]
	ldr r0, [sp, #0x40]
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	adds r0, r5, #0
	bl __12RucksackItem
	ldr r0, [sp, #0x10]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	adds r0, r6, #0
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _0808919C @ =0x086678A0
	ldr r1, [sp, #0x30]
	str r1, [sp]
	b _080895D2
	.align 2, 0
_0808919C: .4byte 0x086678A0
_080891A0:
	add r0, sp, #4
	bl GetKind__C12RucksackItem
	cmp r0, #0
	beq _080891AC
	b _0808966C
_080891AC:
	add r5, sp, #0xc
	adds r0, r5, #0
	add r1, sp, #4
	bl GetFood__C12RucksackItem
	add r4, sp, #0x10
	adds r0, r4, #0
	mov r1, r8
	bl GetFood__C9FoodStack
	adds r0, r5, #0
	bl GetId__C4Food
	adds r6, r0, #0
	adds r0, r4, #0
	bl GetId__C4Food
	cmp r6, r0
	beq _080891DE
	mov r0, r8
	bl GetAmount__C9FoodStack
	cmp r0, #1
	beq _080891DE
	b _08089620
_080891DE:
	add r0, sp, #0xc
	bl GetId__C4Food
	adds r4, r0, #0
	add r0, sp, #0x10
	bl GetId__C4Food
	cmp r4, r0
	bne _080891F2
	b _080892FC
_080891F2:
	mov r0, r8
	bl GetAmount__C9FoodStack
	str r0, [sp, #0x48]
	cmp r0, #1
	beq _08089200
	b _080892FC
_08089200:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08089228
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _08089224 @ =0x08100034
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r4, #0x84
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r1, [sp, #0x48]
	b _0808966A
	.align 2, 0
_08089224: .4byte 0x08100034
_08089228:
	movs r3, #0x82
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	mov r1, sb
	bl GetFoodStackAt__6FridgeUi
	adds r4, r0, #0
	add r0, sp, #0x14
	mov sb, r0
	add r5, sp, #0x18
	adds r0, r5, #0
	add r1, sp, #0xc
	movs r2, #3
	bl memcpy
	ldrb r1, [r5]
	movs r2, #0x19
	add r2, sp
	mov r8, r2
	ldrb r0, [r2]
	lsls r0, r0, #8
	orrs r0, r1
	mov r6, sp
	adds r6, #0x1a
	ldrb r1, [r6]
	lsls r1, r1, #0x10
	orrs r1, r0
	mov r0, sb
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0x14]
	str r0, [r4]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	adds r0, r5, #0
	add r1, sp, #0x10
	movs r2, #3
	bl memcpy
	ldrb r1, [r5]
	mov r2, r8
	ldrb r0, [r2]
	lsls r0, r0, #8
	orrs r0, r1
	ldrb r1, [r6]
	lsls r1, r1, #0x10
	orrs r1, r0
	mov r0, sb
	bl __12RucksackItemG4Food
	ldr r0, [sp, #0x14]
	str r0, [r4]
	ldr r5, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #0x10
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r6, _080892F8 @ =0x086678A0
	ldr r0, [sp, #0x48]
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl func_080CB304
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #0xc
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r1, [sp, #0x48]
	str r1, [sp]
	b _0808975C
	.align 2, 0
_080892F8: .4byte 0x086678A0
_080892FC:
	mov r0, r8
	bl GetAmount__C9FoodStack
	cmp r0, #0x63
	bne _08089308
	b _0808966C
_08089308:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08089338
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _08089334 @ =0x08100034
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r3, #0x84
	lsls r3, r3, #1
	adds r1, r7, r3
	movs r0, #1
	str r0, [r1]
_0808932C:
	movs r4, #0
	str r4, [sp, #0x30]
	b _08089AC0
	.align 2, 0
_08089334: .4byte 0x08100034
_08089338:
	movs r0, #0x82
	lsls r0, r0, #1
	adds r6, r7, r0
	ldr r0, [r6]
	mov r1, sb
	bl GetFoodStackAt__6FridgeUi
	movs r1, #1
	bl AddAmount__9FoodStackUi
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0x14
	bl __12RucksackItem
	ldr r0, [sp, #0x14]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sb
	b _08089A0C
_0808939A:
	adds r2, r7, #0
	adds r2, #0x90
	str r2, [sp, #0x50]
	ldr r0, [r2]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	bl func_080CE184
	str r0, [sp, #0x4c]
	ldr r3, [sp, #0x50]
	str r3, [sp, #0x5c]
	mov r4, sl
	cmp r4, #8
	ble _080893BE
	b _0808976C
_080893BE:
	movs r0, #0x82
	lsls r0, r0, #1
	adds r0, r0, r7
	mov sb, r0
	ldr r0, [r0]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp, #4]
	add r5, sp, #8
	movs r1, #0x80
	lsls r1, r1, #1
	adds r6, r7, r1
	ldr r4, [r6]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #8]
	add r0, sp, #4
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	mov r8, r5
	cmp r0, #0
	beq _0808940E
	mov r0, r8
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808940E
	b _08089AC0
_0808940E:
	mov r0, r8
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080894E4
	ldr r4, [r6]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r6, r0, #0
	add r5, sp, #0xc
	add r4, sp, #0x10
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	bl __12RucksackItemG4Food
	ldr r0, [sp, #0xc]
	str r0, [r6]
	mov r2, sb
	ldr r0, [r2]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	movs r1, #1
	bl SubtractAmount__9FoodStackUi
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	adds r0, r5, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	adds r0, r5, #0
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _080894E0 @ =0x086678A0
	ldr r0, [sp, #0x30]
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	bl func_080CB304
	ldr r1, [sp, #0x50]
	ldr r0, [r1]
	bl func_080CF054
	adds r1, r7, #0
	adds r1, #0x94
	ldr r1, [r1]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	beq _080894B4
	b _08089AC0
_080894B4:
	mov r2, sb
	ldr r0, [r2]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080894CA
	b _08089978
_080894CA:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r3, sb
	ldr r0, [r3]
	b _08089A0A
	.align 2, 0
_080894E0: .4byte 0x086678A0
_080894E4:
	add r0, sp, #4
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080895E6
	mov r0, r8
	bl GetKind__C12RucksackItem
	cmp r0, #0
	bne _080895E0
	mov r0, r8
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08089524
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _08089520 @ =0x08100034
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r4, #0x84
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r1, [sp, #0x30]
	b _0808966A
	.align 2, 0
_08089520: .4byte 0x08100034
_08089524:
	ldr r4, [r6]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r6, sp, #0xc
	adds r0, r6, #0
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r4]
	mov r3, sb
	ldr r0, [r3]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	adds r5, r0, #0
	add r4, sp, #0x10
	adds r0, r4, #0
	mov r1, r8
	bl GetFood__C12RucksackItem
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r6, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0xc]
	str r0, [r5]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r4, [sp, #0x50]
	ldr r0, [r4]
	bl func_080CF054
	adds r1, r7, #0
	adds r1, #0x94
	ldr r1, [r1]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	beq _080895AA
	b _08089AC0
_080895AA:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	adds r0, r6, #0
	mov r1, r8
	bl GetFood__C12RucksackItem
	adds r0, r6, #0

	non_word_aligned_thumb_func_start sub_080895C2
sub_080895C2: @ 0x080895C2
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _080895DC @ =0x086678A0
	ldr r0, [sp, #0x30]
	str r0, [sp]
_080895D2:
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CC728
	b _08089AC0
	.align 2, 0
_080895DC: .4byte 0x086678A0
_080895E0:
	movs r1, #0
	str r1, [sp, #0x30]
	b _08089AC0
_080895E6:
	mov r0, r8
	bl GetKind__C12RucksackItem
	cmp r0, #0
	bne _0808966C
	add r5, sp, #0xc
	adds r0, r5, #0
	mov r1, r8
	bl GetFood__C12RucksackItem
	add r4, sp, #0x10
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	adds r0, r4, #0
	bl GetId__C4Food
	adds r6, r0, #0
	adds r0, r5, #0
	bl GetId__C4Food
	cmp r6, r0
	beq _08089626
	add r0, sp, #4
	bl GetAmount__C9FoodStack
	cmp r0, #1
	beq _08089626
_08089620:
	movs r3, #0
	str r3, [sp, #0x30]
	b _08089AC0
_08089626:
	add r0, sp, #0x10
	bl GetId__C4Food
	adds r4, r0, #0
	add r0, sp, #0xc
	bl GetId__C4Food
	cmp r4, r0
	bne _0808963A
	b _08089AC0
_0808963A:
	add r0, sp, #4
	bl GetAmount__C9FoodStack
	str r0, [sp, #0x54]
	cmp r0, #1
	beq _08089648
	b _08089AC0
_08089648:
	mov r0, r8
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08089678
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _08089674 @ =0x08100034
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r4, #0x84
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r1, [sp, #0x54]
_0808966A:
	str r1, [r0]
_0808966C:
	movs r2, #0
	str r2, [sp, #0x30]
	b _08089AC0
	.align 2, 0
_08089674: .4byte 0x08100034
_08089678:
	movs r3, #0x82
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	adds r4, r0, #0
	add r0, sp, #0x14
	mov sb, r0
	add r5, sp, #0x18
	adds r0, r5, #0
	add r1, sp, #0xc
	movs r2, #3
	bl memcpy
	ldrb r1, [r5]
	movs r2, #0x19
	add r2, sp
	mov r8, r2
	ldrb r0, [r2]
	lsls r0, r0, #8
	orrs r0, r1
	mov r6, sp
	adds r6, #0x1a
	ldrb r1, [r6]
	lsls r1, r1, #0x10
	orrs r1, r0
	mov r0, sb
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0x14]
	str r0, [r4]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	adds r0, r5, #0
	add r1, sp, #0x10
	movs r2, #3
	bl memcpy
	ldrb r1, [r5]
	mov r2, r8
	ldrb r0, [r2]
	lsls r0, r0, #8
	orrs r0, r1
	ldrb r1, [r6]
	lsls r1, r1, #0x10
	orrs r1, r0
	mov r0, sb
	bl __12RucksackItemG4Food
	ldr r0, [sp, #0x14]
	str r0, [r4]
	ldr r5, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #0x10
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r6, _08089768 @ =0x086678A0
	ldr r0, [sp, #0x54]
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl func_080CB304
	ldr r1, [sp, #0x5c]
	ldr r0, [r1]
	bl func_080CF054
	adds r1, r7, #0
	adds r1, #0x94
	ldr r1, [r1]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	beq _0808973E
	b _08089AC0
_0808973E:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #0xc
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, [sp, #0x54]
	str r2, [sp]
_0808975C:
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl func_080CC728
	b _08089AC0
	.align 2, 0
_08089768: .4byte 0x086678A0
_0808976C:
	adds r3, r7, #0
	adds r3, #0x94
	str r3, [sp, #0x58]
	ldr r0, [r3]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sl
	bl func_080CE184
	mov r8, r0
	movs r4, #0x82
	lsls r4, r4, #1
	adds r6, r7, r4
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #8
	mov sb, r0
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp, #8]
	add r0, sp, #4
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080897BE
	mov r0, sb
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080897BE
	b _08089AC0
_080897BE:
	add r0, sp, #4
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08089854
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	ldr r1, [sp, #8]
	str r1, [r0]
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	adds r4, r0, #0
	add r1, sp, #0xc
	mov r8, r1
	mov r0, r8
	bl __9FoodStack
	ldr r0, [sp, #0xc]
	str r0, [r4]
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	ldr r2, [sp, #0x50]
	ldr r0, [r2]
	bl func_080CF054
	ldr r3, [sp, #0x58]
	ldr r1, [r3]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	beq _08089818
	b _08089AC0
_08089818:
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	mov r1, sb
	bl GetFood__C9FoodStack
	mov r0, r8
	bl GetIconId__C4Food
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, sb
	bl GetAmount__C9FoodStack
	ldr r2, _08089850 @ =0x086678A0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r3, r4, #0
	bl func_080CC728
	b _08089AC0
	.align 2, 0
_08089850: .4byte 0x086678A0
_08089854:
	mov r0, sb
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080898CC
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	adds r4, r0, #0
	add r5, sp, #0xc
	adds r0, r5, #0
	bl __9FoodStack
	ldr r0, [sp, #0xc]
	str r0, [r4]
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	ldr r1, [sp, #4]
	str r1, [r0]
	ldr r4, [r7, #0x7c]
	mov r8, r4
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r6, r0, #0
	adds r0, r5, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	adds r0, r5, #0
	bl GetIconId__C4Food
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	add r0, sp, #4
	bl GetAmount__C9FoodStack
	ldr r2, _080898C8 @ =0x086678A0
	str r0, [sp]
	mov r0, r8
	adds r1, r6, #0
	adds r3, r4, #0
	bl func_080CC728
	ldr r1, [sp, #0x50]
	ldr r0, [r1]
	bl func_080CF054
	ldr r2, [sp, #0x58]
	ldr r1, [r2]
	b _0808996E
	.align 2, 0
_080898C8: .4byte 0x086678A0
_080898CC:
	add r4, sp, #0xc
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C9FoodStack
	adds r0, r4, #0
	bl GetId__C4Food
	adds r5, r0, #0
	add r4, sp, #0x10
	adds r0, r4, #0
	mov r1, sb
	bl GetFood__C9FoodStack
	adds r0, r4, #0
	bl GetId__C4Food
	movs r1, #0
	cmp r5, r0
	bne _080898F6
	movs r1, #1
_080898F6:
	cmp r1, #0
	bne _080898FC
	b _08089A20
_080898FC:
	mov r0, sb
	bl GetAmount__C9FoodStack
	adds r4, r0, #0
	movs r5, #0x63
	subs r4, r5, r4
	add r0, sp, #4
	bl GetAmount__C9FoodStack
	cmp r4, r0
	blo _0808998E
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	adds r4, r0, #0
	add r0, sp, #0x14
	bl __9FoodStack
	ldr r0, [sp, #0x14]
	str r0, [r4]
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	adds r4, r0, #0
	add r0, sp, #4
	bl GetAmount__C9FoodStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9FoodStackUi
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	bl GetAmount__C9FoodStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	ldr r3, [sp, #0x50]
	ldr r0, [r3]
	bl func_080CF054
	ldr r4, [sp, #0x58]
	ldr r1, [r4]
_0808996E:
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	beq _08089978
	b _08089AC0
_08089978:
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
_0808997E:
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	b _08089AC0
_0808998E:
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	adds r4, r0, #0
	mov r0, sb
	bl GetAmount__C9FoodStack
	adds r1, r0, #0
	subs r1, r5, r1
	adds r0, r4, #0
	bl SubtractAmount__9FoodStackUi
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	adds r4, r0, #0
	mov r0, sb
	bl GetAmount__C9FoodStack
	adds r1, r0, #0
	subs r1, r5, r1
	adds r0, r4, #0
	bl AddAmount__9FoodStackUi
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	bl GetAmount__C9FoodStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	ldr r1, [sp, #0x50]
	ldr r0, [r1]
	bl func_080CF054
	ldr r2, [sp, #0x58]
	ldr r1, [r2]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	bne _08089AC0
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
_08089A0A:
	ldr r1, [sp, #0x4c]
_08089A0C:
	bl GetFoodStackAt__6FridgeUi
	bl GetAmount__C9FoodStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	b _08089AC0
_08089A20:
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetFoodStackAt__6FridgeUi
	ldr r1, [sp, #8]
	str r1, [r0]
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	ldr r1, [sp, #4]
	str r1, [r0]
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	add r3, sp, #0x14
	mov r8, r3
	mov r0, r8
	add r1, sp, #4
	bl GetFood__C9FoodStack
	mov r0, r8
	bl GetIconId__C4Food
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	add r0, sp, #4
	bl GetAmount__C9FoodStack
	ldr r1, _08089AD4 @ =0x086678A0
	mov sl, r1
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r2, sl
	adds r3, r4, #0
	bl func_080CC728
	ldr r2, [sp, #0x50]
	ldr r0, [r2]
	bl func_080CF054
	ldr r3, [sp, #0x58]
	ldr r1, [r3]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	bne _08089AC0
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x2c]
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	mov r1, sb
	bl GetFood__C9FoodStack
	mov r0, r8
	bl GetIconId__C4Food
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, sb
	bl GetAmount__C9FoodStack
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r2, sl
	adds r3, r4, #0
	bl func_080CC728
_08089AC0:
	add r4, sp, #0x30
	ldrb r0, [r4]
	add sp, #0x60
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08089AD4: .4byte 0x086678A0

	thumb_func_start func_08089AD8
func_08089AD8: @ 0x08089AD8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	adds r7, r0, #0
	str r1, [sp, #0x1c]
	str r2, [sp, #0x20]
	cmp r1, #0
	beq _08089AF0
	b _08089C8E
_08089AF0:
	movs r0, #0xfc
	adds r0, r0, r7
	mov sl, r0
	ldr r1, [r0]
	add r0, sp, #4
	bl func_0800F20C
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	bl func_080CE184
	mov r8, r0
	add r4, sp, #8
	movs r1, #0x82
	lsls r1, r1, #1
	adds r6, r7, r1
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp, #8]
	adds r0, r4, #0
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08089B34
	b _08089C44
_08089B34:
	add r0, sp, #0xc
	mov sb, r0
	adds r1, r4, #0
	bl GetFood__C9FoodStack
	add r0, sp, #4
	bl GetId__C4Food
	adds r4, r0, #0
	mov r0, sb
	bl GetId__C4Food
	cmp r4, r0
	bne _08089B92
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	movs r1, #1
	bl AddAmount__9FoodStackUi
	mov r1, sl
	ldr r0, [r1]
	bl func_0800F390
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	bl GetAmount__C9FoodStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	b _08089EE4
_08089B92:
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	adds r6, r0, #0
	add r5, sp, #0x10
	add r4, sp, #0x14
	adds r0, r4, #0
	add r1, sp, #4
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x15
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x16
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0x10]
	str r0, [r6]
	mov r1, sl
	ldr r0, [r1]
	bl func_0800F390
	mov r0, sl
	ldr r4, [r0]
	adds r0, r5, #0
	mov r1, sb
	movs r2, #3
	bl memcpy
	ldrb r1, [r5]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r4, #0
	bl func_0800F3B0
	ldr r4, [r7, #0x78]
	ldr r6, _08089C40 @ =0x086678A0
	mov r0, sb
	bl GetIconId__C4Food
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r6, #0
	movs r3, #1
	bl func_080CBAF0
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #4
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	b _08089EE0
	.align 2, 0
_08089C40: .4byte 0x086678A0
_08089C44:
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	adds r6, r0, #0
	add r5, sp, #0xc
	add r4, sp, #0x10
	adds r0, r4, #0
	add r1, sp, #4
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0xc]
	str r0, [r6]
	mov r1, sl
	ldr r0, [r1]
	bl func_0800F390
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	b _08089EBC
_08089C8E:
	ldr r0, [sp, #0x1c]
	cmp r0, #8
	ble _08089C96
	b _08089EF0
_08089C96:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r7
	mov sl, r1
	ldr r4, [r1]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r1, r0, #0
	add r0, sp, #4
	bl GetFood__C12RucksackItem
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	bl func_080CE184
	mov r8, r0
	add r4, sp, #8
	movs r0, #0x82
	lsls r0, r0, #1
	adds r6, r7, r0
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp, #8]
	adds r0, r4, #0
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08089CF0
	b _08089E4C
_08089CF0:
	add r1, sp, #0xc
	mov sb, r1
	mov r0, sb
	adds r1, r4, #0
	bl GetFood__C9FoodStack
	add r0, sp, #4
	bl GetId__C4Food
	adds r4, r0, #0
	mov r0, sb
	bl GetId__C4Food
	cmp r4, r0
	bne _08089D78
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	movs r1, #1
	bl AddAmount__9FoodStackUi
	mov r0, sl
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0x10
	bl __12RucksackItem
	ldr r0, [sp, #0x10]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	bl GetAmount__C9FoodStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	b _08089EE4
_08089D78:
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	adds r5, r0, #0
	add r6, sp, #0x10
	add r4, sp, #0x18
	adds r0, r4, #0
	add r1, sp, #4
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x19
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x1a
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r6, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0x10]
	str r0, [r5]
	mov r1, sl
	ldr r4, [r1]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r5, r0, #0
	add r4, sp, #0x14
	adds r0, r4, #0
	mov r1, sb
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x15
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x16
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r6, #0
	bl __12RucksackItemG4Food
	ldr r0, [sp, #0x10]
	str r0, [r5]
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, sb
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r0, _08089E48 @ =0x086678A0
	mov r8, r0
	movs r5, #1
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	mov r2, r8
	bl func_080CB304
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #4
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	mov r2, r8
	b _08089EE0
	.align 2, 0
_08089E48: .4byte 0x086678A0
_08089E4C:
	ldr r0, [r6]
	mov r1, r8
	bl GetFoodStackAt__6FridgeUi
	adds r6, r0, #0
	add r5, sp, #0xc
	add r4, sp, #0x10
	adds r0, r4, #0
	add r1, sp, #4
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0xc]
	str r0, [r6]
	mov r1, sl
	ldr r4, [r1]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	adds r0, r5, #0
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
_08089EBC:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #4
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _08089EEC @ =0x086678A0
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
_08089EE0:
	bl func_080CC728
_08089EE4:
	adds r7, #0x90
	str r7, [sp, #0x34]
	b _0808A2D8
	.align 2, 0
_08089EEC: .4byte 0x086678A0
_08089EF0:
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #0x20]
	cmp r0, r1
	bne _08089EFC
	movs r0, #0
	str r0, [sp, #0x20]
_08089EFC:
	adds r4, r7, #0
	adds r4, #0x90
	ldr r0, [r4]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	bl func_080CE184
	str r0, [sp, #0x24]
	movs r1, #0x82
	lsls r1, r1, #1
	adds r1, r1, r7
	mov sl, r1
	ldr r0, [r1]
	ldr r1, [sp, #0x24]
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp, #4]
	str r4, [sp, #0x34]
	ldr r0, [sp, #0x20]
	cmp r0, #0
	beq _08089F30
	b _0808A0D8
_08089F30:
	mov r1, sp
	adds r1, #8
	str r1, [sp, #0x28]
	movs r0, #0xfc
	adds r0, r0, r7
	mov r8, r0
	ldr r1, [r0]
	ldr r0, [sp, #0x28]
	bl func_0800F20C
	add r0, sp, #4
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808A048
	add r1, sp, #0xc
	mov sb, r1
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x24]
	bl GetFoodStackAt__6FridgeUi
	adds r1, r0, #0
	mov r0, sb
	bl GetFood__C9FoodStack
	mov r0, sb
	bl GetId__C4Food
	adds r4, r0, #0
	ldr r0, [sp, #0x28]
	bl GetId__C4Food
	cmp r4, r0
	bne _08089F7A
	b _0808A2D8
_08089F7A:
	mov r1, r8
	ldr r0, [r1]
	bl func_0800F390
	mov r0, r8
	ldr r4, [r0]
	add r5, sp, #0x10
	adds r0, r5, #0
	mov r1, sb
	movs r2, #3
	bl memcpy
	ldrb r1, [r5]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r4, #0
	bl func_0800F3B0
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x24]
	bl GetFoodStackAt__6FridgeUi
	adds r6, r0, #0
	add r4, sp, #0x14
	adds r0, r4, #0
	ldr r1, [sp, #0x28]
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x15
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x16
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0x10]
	str r0, [r6]
	ldr r4, [r7, #0x78]
	ldr r6, _0808A044 @ =0x086678A0
	mov r0, sb
	bl GetIconId__C4Food
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r6, #0
	movs r3, #1
	bl func_080CBAF0
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x34]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	beq _0808A01A
	b _0808A2D8
_0808A01A:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [sp, #0x28]
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl func_080CC728
	b _0808A2D8
	.align 2, 0
_0808A044: .4byte 0x086678A0
_0808A048:
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x24]
	bl GetFoodStackAt__6FridgeUi
	adds r6, r0, #0
	add r5, sp, #0xc
	add r4, sp, #0x10
	adds r0, r4, #0
	ldr r1, [sp, #0x28]
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0xc]
	str r0, [r6]
	mov r1, r8
	ldr r0, [r1]
	bl func_0800F390
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x34]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	beq _0808A0AA
	b _0808A2D8
_0808A0AA:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [sp, #0x28]
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _0808A0D4 @ =0x086678A0
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CC728
	b _0808A2D8
	.align 2, 0
_0808A0D4: .4byte 0x086678A0
_0808A0D8:
	mov r0, sp
	adds r0, #8
	str r0, [sp, #0x2c]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	ldr r4, [r1]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r1, r0, #0
	ldr r0, [sp, #0x2c]
	bl GetFood__C12RucksackItem
	add r0, sp, #4
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808A110
	b _0808A228
_0808A110:
	mov r0, sp
	adds r0, #0xc
	str r0, [sp, #0x30]
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x24]
	bl GetFoodStackAt__6FridgeUi
	adds r1, r0, #0
	ldr r0, [sp, #0x30]
	bl GetFood__C9FoodStack
	ldr r0, [sp, #0x30]
	bl GetId__C4Food
	adds r4, r0, #0
	ldr r0, [sp, #0x2c]
	bl GetId__C4Food
	cmp r4, r0
	bne _0808A13C
	b _0808A2D8
_0808A13C:
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	mov r8, r0
	add r1, sp, #0x10
	mov sb, r1
	add r4, sp, #0x14
	adds r0, r4, #0
	ldr r1, [sp, #0x30]
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r6, sp
	adds r6, #0x15
	ldrb r0, [r6]
	lsls r0, r0, #8
	orrs r0, r1
	mov r5, sp
	adds r5, #0x16
	ldrb r1, [r5]
	lsls r1, r1, #0x10
	orrs r1, r0
	mov r0, sb
	bl __12RucksackItemG4Food
	ldr r0, [sp, #0x10]
	mov r1, r8
	str r0, [r1]
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x24]
	bl GetFoodStackAt__6FridgeUi
	mov r8, r0
	adds r0, r4, #0
	ldr r1, [sp, #0x2c]
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	ldrb r0, [r6]
	lsls r0, r0, #8
	orrs r0, r1
	ldrb r1, [r5]
	lsls r1, r1, #0x10
	orrs r1, r0
	mov r0, sb
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0x10]
	mov r1, r8
	str r0, [r1]
	ldr r5, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [sp, #0x30]
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r0, _0808A224 @ =0x086678A0
	mov r8, r0
	movs r6, #1
	str r6, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, r8
	bl func_080CB304
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x34]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	bne _0808A2D8
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [sp, #0x2c]
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r6, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, r8
	bl func_080CC728
	b _0808A2D8
	.align 2, 0
_0808A224: .4byte 0x086678A0
_0808A228:
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x24]
	bl GetFoodStackAt__6FridgeUi
	adds r6, r0, #0
	add r5, sp, #0xc
	add r4, sp, #0x10
	adds r0, r4, #0
	ldr r1, [sp, #0x2c]
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x12
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl __9FoodStackG4FoodUi
	ldr r0, [sp, #0xc]
	str r0, [r6]
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	adds r0, r5, #0
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x20]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x34]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	bne _0808A2D8
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [sp, #0x2c]
	bl GetIconId__C4Food
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _0808A2F0 @ =0x086678A0
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CC728
_0808A2D8:
	ldr r1, [sp, #0x34]
	ldr r0, [r1]
	bl func_080CECD0
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808A2F0: .4byte 0x086678A0

	thumb_func_start func_0808A2F4
func_0808A2F4: @ 0x0808A2F4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r7, #0
	bne _0808A380
	adds r4, r5, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808A312
	b _0808A4AC
_0808A312:
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #0
	beq _0808A322
	cmp r0, #1
	beq _0808A344
	b _0808A3F6
_0808A322:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808A338 @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808A33C @ =0x08100084
	ldr r3, _0808A340 @ =0x08100088
	str r7, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	b _0808A49E
	.align 2, 0
_0808A338: .4byte 0x08117ABC
_0808A33C: .4byte 0x08100084
_0808A340: .4byte 0x08100088
_0808A344:
	ldr r0, [r4]
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x10
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808A3F6
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808A374 @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808A378 @ =0x08100084
	ldr r3, _0808A37C @ =0x08100088
	str r7, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	b _0808A49E
	.align 2, 0
_0808A374: .4byte 0x08117ABC
_0808A378: .4byte 0x08100084
_0808A37C: .4byte 0x08100088
_0808A380:
	cmp r7, #8
	bgt _0808A460
	ldr r4, [r5, #0x78]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	adds r1, r0, #0
	movs r2, #0
	ldr r0, [r1, #4]
	cmp r0, #0
	beq _0808A3A8
	ldr r0, [r1, #8]
	cmp r0, #0
	bne _0808A3AA
_0808A3A8:
	movs r2, #1
_0808A3AA:
	adds r6, r2, #0
	cmp r6, #0
	beq _0808A3B2
	b _0808A4AC
_0808A3B2:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r4, [r0]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #0xc]
	add r0, sp, #0xc
	bl GetKind__C12RucksackItem
	cmp r0, #1
	bne _0808A440
	add r0, sp, #0xc
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x11
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808A420
_0808A3F6:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808A41C @ =0x08117ADC
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #4
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	b _0808A4AC
	.align 2, 0
_0808A41C: .4byte 0x08117ADC
_0808A420:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808A434 @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808A438 @ =0x08100084
	ldr r3, _0808A43C @ =0x08100088
	str r6, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	b _0808A49E
	.align 2, 0
_0808A434: .4byte 0x08117ABC
_0808A438: .4byte 0x08100084
_0808A43C: .4byte 0x08100088
_0808A440:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808A454 @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808A458 @ =0x08100084
	ldr r3, _0808A45C @ =0x08100088
	str r6, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	b _0808A49E
	.align 2, 0
_0808A454: .4byte 0x08117ABC
_0808A458: .4byte 0x08100084
_0808A45C: .4byte 0x08100088
_0808A460:
	ldr r4, [r5, #0x7c]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CC70C
	adds r1, r0, #0
	movs r2, #0
	ldr r0, [r1, #4]
	cmp r0, #0
	beq _0808A484
	ldr r0, [r1, #8]
	cmp r0, #0
	bne _0808A486
_0808A484:
	movs r2, #1
_0808A486:
	adds r4, r2, #0
	cmp r4, #0
	bne _0808A4AC
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808A4B4 @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808A4B8 @ =0x08100084
	ldr r3, _0808A4BC @ =0x08100088
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
_0808A49E:
	bl func_08050E30
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #3
	str r0, [r1]
_0808A4AC:
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808A4B4: .4byte 0x08117ABC
_0808A4B8: .4byte 0x08100084
_0808A4BC: .4byte 0x08100088

	thumb_func_start func_0808A4C0
func_0808A4C0: @ 0x0808A4C0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r1, #0
	cmp r6, #0
	bne _0808A4DC
	adds r0, #0xfc
	ldr r0, [r0]
	bl func_0800F390
	ldr r0, [r5, #0x78]
	bl func_080CC0B4
	b _0808A552
_0808A4DC:
	cmp r6, #8
	bgt _0808A512
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r4, [r0]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	mov r0, sp
	adds r1, r4, #0
	bl func_0800FCE4
	ldr r4, [r5, #0x78]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	b _0808A552
_0808A512:
	adds r0, r5, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r5, #0
	adds r1, r6, #0
	bl func_080CE184
	adds r1, r0, #0
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r0, [r0]
	bl GetFoodStackAt__6FridgeUi
	adds r4, r0, #0
	mov r0, sp
	bl __9FoodStack
	ldr r0, [sp]
	str r0, [r4]
	ldr r4, [r5, #0x7c]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
_0808A552:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0808A55C
func_0808A55C: @ 0x0808A55C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080CE294
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	bl func_0800F5F8
	mov r8, r0
	movs r0, #0xa7
	lsls r0, r0, #2
	bl __builtin_new
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _0808A7C8 @ =0x0810008C
	str r0, [sp]
	add r4, sp, #4
	movs r0, #1
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, r8
	bl func_080CAFC4
	adds r6, r7, #0
	adds r6, #0x78
	adds r5, r0, #0
	ldr r1, [r7, #0x78]
	mov sb, r4
	cmp r5, r1
	beq _0808A5D4
	cmp r1, #0
	beq _0808A5D4
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808A5D4:
	str r5, [r6]
	ldr r0, [r7, #0x78]
	bl func_080CB090
	adds r0, r7, #0
	mov r1, r8
	bl func_08088318
	movs r0, #0xcb
	lsls r0, r0, #2
	bl __builtin_new
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _0808A7CC @ =0x08100094
	str r0, [sp]
	movs r0, #0
	mov r1, sb
	strb r0, [r1]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl func_080CC15C
	adds r5, r7, #0
	adds r5, #0x7c
	adds r4, r0, #0
	ldr r1, [r7, #0x7c]
	cmp r4, r1
	beq _0808A634
	cmp r1, #0
	beq _0808A634
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808A634:
	str r4, [r5]
	ldr r0, [r7, #0x7c]
	bl func_080CC310
	movs r0, #0xc8
	bl __builtin_new
	adds r1, r7, #0
	bl func_080CE2FC
	adds r4, r7, #0
	adds r4, #0x94
	adds r5, r0, #0
	ldr r0, [r4]
	str r4, [sp, #0x18]
	cmp r5, r0
	beq _0808A660
	cmp r0, #0
	beq _0808A660
	movs r1, #3
	bl func_080CE3DC
_0808A660:
	str r5, [r4]
	ldr r1, [sp, #0x18]
	ldr r0, [r1]
	adds r0, #0xbc
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_080884F4
	ldr r2, [sp, #0x18]
	ldr r0, [r2]
	bl func_080CE598
	movs r0, #0x8c
	bl __builtin_new
	adds r1, r7, #0
	movs r2, #1
	bl func_080CD9B0
	movs r1, #0x8c
	adds r1, r1, r7
	mov r8, r1
	mov sb, r0
	ldr r5, [r1]
	mov r6, r8
	cmp sb, r5
	beq _0808A6CA
	cmp r5, #0
	beq _0808A6CA
	ldr r0, _0808A7D0 @ =vtable_unk_080E5A28
	str r0, [r5, #0x24]
	adds r4, r5, #0
	adds r4, #0x1c
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	adds r0, r5, #0
	bl __builtin_delete
_0808A6CA:
	mov r2, sb
	mov r0, r8
	str r2, [r0]
	movs r0, #0x88
	bl __builtin_new
	adds r1, r7, #0
	bl func_080CEC00
	movs r1, #0x90
	adds r1, r1, r7
	mov r8, r1
	mov sl, r0
	ldr r5, [r1]
	mov sb, r8
	cmp sl, r5
	beq _0808A720
	cmp r5, #0
	beq _0808A720
	adds r4, r5, #0
	adds r4, #0x74
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	ldr r0, _0808A7D0 @ =vtable_unk_080E5A28
	str r0, [r5, #4]
	adds r0, r5, #0
	bl __builtin_delete
_0808A720:
	mov r2, sl
	mov r0, r8
	str r2, [r0]
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_080885AC
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #0x10
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0808A7D4 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0x14]
	ldr r1, _0808A7D8 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x14]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r1, #0
	mov r8, r1
_0808A786:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	adds r0, r7, #0
	bl func_080CE2C4
	ldr r3, [sp, #0x14]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0808A786
	mov r2, r8
	cmp r2, #0
	beq _0808A7AC
	b _0808AB1C
_0808A7AC:
	ldr r0, [r6]
	ldr r5, [r0, #4]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #4
	bhi _0808A786
	lsls r0, r0, #2
	ldr r1, _0808A7DC @ =_0808A7E0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808A7C8: .4byte 0x0810008C
_0808A7CC: .4byte 0x08100094
_0808A7D0: .4byte vtable_unk_080E5A28
_0808A7D4: .4byte vtable_unk_080E5B80
_0808A7D8: .4byte 0x00000889
_0808A7DC: .4byte _0808A7E0
_0808A7E0: @ jump table
	.4byte _0808A7F4 @ case 0
	.4byte _0808AA52 @ case 1
	.4byte _0808AA88 @ case 2
	.4byte _0808AAC6 @ case 3
	.4byte _0808AAFA @ case 4
_0808A7F4:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0808A81C
	ldr r0, [r6]
	ldr r0, [r0, #4]
	cmp r0, #9
	ble _0808A814
	cmp r0, #0xd
	bgt _0808A814
	adds r0, r7, #0
	bl func_08088590
_0808A814:
	ldr r0, [r6]
	bl func_080CDA44
	b _0808A89A
_0808A81C:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0808A840
	ldr r0, [r6]
	ldr r0, [r0, #4]
	cmp r0, #0xd
	ble _0808A838
	adds r0, r7, #0
	bl func_08088574
_0808A838:
	ldr r0, [r6]
	bl func_080CDB08
	b _0808A89A
_0808A840:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0808A856
	ldr r0, [r6]
	bl func_080CDCD0
	b _0808A89A
_0808A856:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0808A86C
	ldr r0, [r6]
	bl func_080CDC00
	b _0808A89A
_0808A86C:
	movs r4, #0
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _0808A88E
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0808A890
_0808A88E:
	movs r4, #1
_0808A890:
	cmp r4, #0
	beq _0808A8A6
	ldr r0, [r6]
	bl func_080CDD7C
_0808A89A:
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xcb
	bl func_08008B6C
	b _0808AA40
_0808A8A6:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0808A8B6
	b _0808A9CE
_0808A8B6:
	mov r2, sb
	ldr r3, [r2]
	adds r0, r3, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808A8E6
	ldr r0, [r6]
	ldr r1, [r0, #4]
	cmp r1, #8
	bgt _0808A8D6
	adds r0, r3, #0
	movs r2, #0
	bl func_080CEC84
	b _0808AA40
_0808A8D6:
	ldr r2, [sp, #0x18]
	ldr r0, [r2]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r3, #0
	bl func_080CEC84
	b _0808AA40
_0808A8E6:
	ldr r0, [r6]
	ldr r4, [r0, #4]
	adds r0, r3, #0
	bl func_080CF050
	cmp r4, r0
	bne _0808A97E
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	cmp r0, #9
	ble _0808A936
	ldr r2, [sp, #0x18]
	ldr r0, [r2]
	adds r0, #0xbc
	ldr r4, [r0]
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	beq _0808A936
	mov r2, sb
	ldr r0, [r2]
	bl func_080CF050
	adds r1, r0, #0
	ldr r0, [r6]
	ldr r2, [r0, #4]
	adds r0, r7, #0
	bl func_08088BA0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808A958
	movs r2, #0x84
	lsls r2, r2, #1
	adds r0, r7, r2
	b _0808A9BC
_0808A936:
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	adds r4, r0, #0
	mov r2, sb
	ldr r0, [r2]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r4, #0
	bl func_08088688
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808A976
_0808A958:
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_080885AC
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	mov r1, sb
	ldr r0, [r1]
	bl func_080CECD0
	b _0808AA40
_0808A976:
	movs r2, #0x84
	lsls r2, r2, #1
	adds r0, r7, r2
	b _0808A9BC
_0808A97E:
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	adds r1, r0, #0
	ldr r0, [r6]
	ldr r2, [r0, #4]
	adds r0, r7, #0
	bl func_08088BA0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808A9B6
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_080885AC
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	mov r2, sb
	ldr r0, [r2]
	bl func_080CECD0
	b _0808AA40
_0808A9B6:
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
_0808A9BC:
	ldr r0, [r0]
	cmp r0, #1
	beq _0808AA40
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	b _0808AA40
_0808A9CE:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0808AA28
	mov r2, sb
	ldr r1, [r2]
	adds r0, r1, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808A9F2
	adds r0, r1, #0
	bl func_080CECD0
	b _0808AA40
_0808A9F2:
	ldr r2, [sp, #0x14]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0808AA40
	movs r0, #1
	mov r8, r0
	ldr r1, _0808AA24 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x14]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	b _0808AA40
	.align 2, 0
_0808AA24: .4byte 0x00000889
_0808AA28:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0808AA40
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808A2F4
_0808AA40:
	ldr r0, [r6]
	ldr r1, [r0, #4]
	cmp r5, r1
	bne _0808AA4A
	b _0808A786
_0808AA4A:
	adds r0, r7, #0
	bl func_080885AC
	b _0808A786
_0808AA52:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _0808AA5E
	b _0808A786
_0808AA5E:
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808AA80 @ =0x08100084
	ldr r2, _0808AA84 @ =0x08100088
	movs r3, #0
	str r3, [sp]
	str r3, [sp, #4]
	str r3, [sp, #8]
	str r3, [sp, #0xc]
	bl func_08050E0C
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #2
	str r0, [r1]
	b _0808A786
	.align 2, 0
_0808AA80: .4byte 0x08100084
_0808AA84: .4byte 0x08100088
_0808AA88:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _0808AA94
	b _0808A786
_0808AA94:
	adds r0, r7, #0
	adds r0, #0x80
	bl func_08050DF0
	cmp r0, #1
	beq _0808AAA6
	cmp r0, #2
	beq _0808AABC
	b _0808AB06
_0808AAA6:
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	adds r1, r0, #0
	ldr r0, [r6]
	ldr r2, [r0, #4]
	adds r0, r7, #0
	bl func_08089AD8
	b _0808AB06
_0808AABC:
	mov r2, sb
	ldr r0, [r2]
	bl func_080CECD0
	b _0808AB06
_0808AAC6:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _0808AAD2
	b _0808A786
_0808AAD2:
	adds r0, r7, #0
	adds r0, #0x80
	bl func_08050DF0
	cmp r0, #1
	bne _0808AAE8
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808A4C0
_0808AAE8:
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_080885AC
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	b _0808AB16
_0808AAFA:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _0808AB06
	b _0808A786
_0808AB06:
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_080885AC
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
_0808AB16:
	movs r0, #0
	str r0, [r1]
	b _0808A786
_0808AB1C:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0808AB38
func_0808AB38: @ 0x0808AB38
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _0808AB64 @ =vtable_unk_080E7D58
	str r0, [r4]
	movs r0, #0x86
	lsls r0, r0, #1
	bl __builtin_new
	adds r1, r5, #0
	bl func_080882AC
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0808AB64: .4byte vtable_unk_080E7D58

	thumb_func_start func_0808AB68
func_0808AB68: @ 0x0808AB68
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0808ABA4 @ =vtable_unk_080E7D58
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0808AB84
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808AB84:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0808AB96
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808AB96:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808ABA4: .4byte vtable_unk_080E7D58

	thumb_func_start func_0808ABA8
func_0808ABA8: @ 0x0808ABA8
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_0808A55C
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0808ABC4
func_0808ABC4: @ 0x0808ABC4
	push {r4, r5, lr}
	adds r4, r0, #0
	bl func_080CE19C
	ldr r0, _0808AC0C @ =vtable_unk_080E7D68
	str r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x98
	movs r3, #0
	strb r3, [r0]
	adds r2, r4, #0
	adds r2, #0xfc
	ldr r1, [r4, #8]
	ldr r5, _0808AC10 @ =0x00001C34
	adds r0, r1, r5
	str r0, [r2]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r2, r4, r0
	subs r5, #8
	adds r0, r1, r5
	str r0, [r2]
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r4, r2
	adds r5, #0xc
	adds r1, r1, r5
	str r1, [r0]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r4, r1
	str r3, [r0]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0808AC0C: .4byte vtable_unk_080E7D68
_0808AC10: .4byte 0x00001C34

	thumb_func_start func_0808AC14
func_0808AC14: @ 0x0808AC14
	push {lr}
	ldr r2, _0808AC24 @ =vtable_unk_080E7D68
	str r2, [r0, #4]
	bl func_080E3504
	pop {r0}
	bx r0
	.align 2, 0
_0808AC24: .4byte vtable_unk_080E7D68

	thumb_func_start func_0808AC28
func_0808AC28: @ 0x0808AC28
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x3c
	adds r7, r0, #0
	mov sb, r1
	movs r0, #1
	str r0, [sp, #0x34]
	cmp r1, #9
	bne _0808AC42
	b _0808B158
_0808AC42:
	cmp r1, #0
	bne _0808AC48
	b _0808B158
_0808AC48:
	cmp r1, #8
	ble _0808AC4E
	b _0808AF80
_0808AC4E:
	adds r4, r7, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	mov sl, r4
	cmp r0, #0
	beq _0808ACE2
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	movs r1, #0
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0808AC88
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _0808AC8A
_0808AC88:
	movs r1, #1
_0808AC8A:
	cmp r1, #0
	beq _0808AC90
	b _0808B158
_0808AC90:
	ldr r4, [r7, #0x78]
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	bl func_080CAD14
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_080CBDD4
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	add r5, sp, #0x10
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_0800FE24
	mov r2, sl
	ldr r0, [r2]
	adds r1, r5, #0
	b _0808AF78
_0808ACE2:
	ldr r0, [r7, #0x78]
	bl func_080CB2FC
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r5, sp, #0x14
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	adds r1, r5, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r4, sp, #0x20
	mov r3, sl
	ldr r1, [r3]
	adds r0, r4, #0
	movs r2, #2
	bl memcpy
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080CE1C4
	lsls r0, r0, #0x18
	mov r8, r5
	cmp r0, #0
	beq _0808AD54
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808AD50 @ =0x08117B10
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r4, #0x84
	lsls r4, r4, #1
	adds r1, r7, r4
	movs r0, #2
	str r0, [r1]
	movs r0, #0
	str r0, [sp, #0x34]
	b _0808B158
	.align 2, 0
_0808AD50: .4byte 0x08117B10
_0808AD54:
	movs r1, #0
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _0808AD62
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	bne _0808AD64
_0808AD62:
	movs r1, #1
_0808AD64:
	cmp r1, #0
	beq _0808AD6A
	b _0808AF18
_0808AD6A:
	add r6, sp, #0x24
	movs r1, #0x82
	lsls r1, r1, #1
	adds r1, r7, r1
	str r1, [sp, #0x38]
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r0, #0
	adds r0, r6, #0
	movs r2, #2
	bl memcpy
	add r5, sp, #0x20
	adds r0, r5, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x30
	strb r1, [r0]
	bl GetId__C4Tool
	adds r4, r0, #0
	adds r0, r6, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x31
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #0
	cmp r4, r0
	bne _0808ADC0
	movs r1, #1
_0808ADC0:
	cmp r1, #0
	beq _0808AE96
	adds r0, r5, #0
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r5, r1, r0
	adds r0, r6, #0
	bl GetAmount__C9ToolStack
	cmp r5, r0
	blo _0808AE2A
	mov r2, sl
	ldr r4, [r2]
	adds r0, r6, #0
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9ToolStackUi
	ldr r3, [sp, #0x38]
	ldr r4, [r3]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	add r0, sp, #0x28
	adds r1, r4, #0
	bl func_0800FE24
	ldr r4, [r7, #0x78]
	mov r1, sl
	ldr r0, [r1]
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB9DC
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	b _0808B158
_0808AE2A:
	mov r2, sl
	ldr r0, [r2]
	adds r1, r5, #0
	bl AddAmount__9ToolStackUi
	ldr r3, [sp, #0x38]
	ldr r4, [r3]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	bl SubtractAmount__9ToolStackUi
	ldr r4, [r7, #0x78]
	mov r1, sl
	ldr r0, [r1]
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB9DC
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	ldr r2, [sp, #0x38]
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	b _0808B158
_0808AE96:
	ldr r4, [r7, #0x78]
	ldr r5, [sp, #0x18]
	ldr r6, [sp, #0x1c]
	mov r0, r8
	bl func_080CAD14
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_080CBDD4
	ldr r3, [r7, #0x78]
	mov r8, r3
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	mov r4, sl
	ldr r6, [r4]
	ldr r0, [sp, #0x38]
	ldr r5, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	add r4, sp, #0x28
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_0800FE24
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r1, [sp, #0x38]
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	add r1, sp, #0x20
	b _0808AF78
_0808AF18:
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r2, [r7, #0x78]
	mov r8, r2
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	movs r3, #0x82
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	mov r4, sl
	ldr r1, [r4]
	movs r2, #2
	bl memcpy
	ldr r5, [r4]
	add r4, sp, #0x24
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
_0808AF78:
	movs r2, #2
	bl memcpy
	b _0808B158
_0808AF80:
	movs r0, #0x80
	lsls r0, r0, #1
	adds r4, r7, r0
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B012
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CC70C
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	movs r1, #0
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0808AFBA
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _0808AFBC
_0808AFBA:
	movs r1, #1
_0808AFBC:
	cmp r1, #0
	beq _0808AFC2
	b _0808B158
_0808AFC2:
	ldr r0, [r7, #0x7c]
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	movs r3, #1
	bl func_080CD14C
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	add r5, sp, #0x10
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_0800FCE4
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	ldr r1, [sp, #0x10]
	str r1, [sp, #0x14]
	bl func_0800F418
	b _0808B158
_0808B012:
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #5
	bls _0808B01E
	b _0808B158
_0808B01E:
	lsls r0, r0, #2
	ldr r1, _0808B028 @ =_0808B02C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808B028: .4byte _0808B02C
_0808B02C: @ jump table
	.4byte _0808B044 @ case 0
	.4byte _0808B044 @ case 1
	.4byte _0808B154 @ case 2
	.4byte _0808B154 @ case 3
	.4byte _0808B154 @ case 4
	.4byte _0808B158 @ case 5
_0808B044:
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CC70C
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r4, sp, #0x10
	ldr r0, [r7, #0x7c]
	bl func_080CC720
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	movs r1, #0
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0808B078
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _0808B07A
_0808B078:
	movs r1, #1
_0808B07A:
	cmp r1, #0
	bne _0808B0FE
	ldr r0, [r7, #0x7c]
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	movs r3, #1
	bl func_080CD14C
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x14]
	ldr r3, [sp, #0x18]
	movs r0, #1
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CCA40
	add r0, sp, #0x1c
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r7, r3
	ldr r1, [r6]
	bl func_0800F294
	ldr r0, [r6]
	bl func_0800F390
	add r4, sp, #0x20
	mov r8, r4
	movs r0, #0x82
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	mov r0, r8
	adds r1, r4, #0
	bl func_0800FCE4
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x1c]
	str r1, [r0]
	ldr r0, [r6]
	ldr r1, [sp, #0x20]
	str r1, [sp, #0x2c]
	bl func_0800F418
	b _0808B158
_0808B0FE:
	ldr r0, [r7, #0x7c]
	bl func_080CD4D4
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x14]
	ldr r3, [sp, #0x18]
	movs r0, #1
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CCA40
	add r0, sp, #0x1c
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r7, r1
	ldr r1, [r4]
	bl func_0800F294
	ldr r0, [r4]
	bl func_0800F390
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x1c]
	str r1, [r0]
	b _0808B158
_0808B154:
	movs r3, #0
	str r3, [sp, #0x34]
_0808B158:
	add r4, sp, #0x34
	ldrb r0, [r4]
	add sp, #0x3c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0808B16C
func_0808B16C: @ 0x0808B16C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	adds r7, r0, #0
	mov sl, r1
	mov sb, r2
	movs r0, #1
	str r0, [sp, #0x38]
	cmp r2, #0
	beq _0808B18A
	cmp r2, #9
	bne _0808B190
_0808B18A:
	adds r0, r7, #0
	mov r1, sl
	b _0808B860
_0808B190:
	mov r1, sl
	cmp r1, #0
	beq _0808B198
	b _0808B4D0
_0808B198:
	adds r4, r7, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	str r4, [sp, #0x44]
	cmp r0, #0
	beq _0808B22E
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	movs r1, #0
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0808B1D2
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _0808B1D4
_0808B1D2:
	movs r1, #1
_0808B1D4:
	cmp r1, #0
	beq _0808B1DC
	bl _0808BA4A
_0808B1DC:
	ldr r4, [r7, #0x78]
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	bl func_080CAD14
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_080CBDD4
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	add r5, sp, #0x10
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_0800FE24
	ldr r2, [sp, #0x44]
	ldr r0, [r2]
	adds r1, r5, #0
	b _0808B4C8
_0808B22E:
	ldr r0, [r7, #0x78]
	bl func_080CB2FC
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r5, sp, #0x14
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	adds r1, r5, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r4, sp, #0x20
	ldr r3, [sp, #0x44]
	ldr r1, [r3]
	adds r0, r4, #0
	movs r2, #2
	bl memcpy
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080CE1C4
	lsls r0, r0, #0x18
	mov r8, r5
	cmp r0, #0
	beq _0808B2A0
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808B29C @ =0x08117B10
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r4, #0x84
	lsls r4, r4, #1
	adds r1, r7, r4
	movs r0, #2
	str r0, [r1]
	movs r0, #0
	str r0, [sp, #0x38]
	b _0808BA4A
	.align 2, 0
_0808B29C: .4byte 0x08117B10
_0808B2A0:
	movs r1, #0
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _0808B2AE
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	bne _0808B2B0
_0808B2AE:
	movs r1, #1
_0808B2B0:
	cmp r1, #0
	beq _0808B2B6
	b _0808B466
_0808B2B6:
	add r5, sp, #0x24
	movs r1, #0x82
	lsls r1, r1, #1
	adds r1, r1, r7
	mov sl, r1
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #2
	bl memcpy
	add r6, sp, #0x20
	adds r0, r6, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x34
	strb r1, [r0]
	bl GetId__C4Tool
	adds r4, r0, #0
	adds r0, r5, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x35
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #0
	cmp r4, r0
	bne _0808B30C
	movs r1, #1
_0808B30C:
	cmp r1, #0
	beq _0808B3E4
	adds r0, r5, #0
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r5, r1, r0
	adds r0, r6, #0
	bl GetAmount__C9ToolStack
	cmp r5, r0
	blo _0808B39A
	mov r2, sl
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r4, r0, #0
	adds r0, r6, #0
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9ToolStackUi
	ldr r3, [sp, #0x44]
	ldr r5, [r3]
	add r4, sp, #0x28
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, sl
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	b _0808BA4A
_0808B39A:
	mov r1, sl
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	bl AddAmount__9ToolStackUi
	ldr r2, [sp, #0x44]
	ldr r0, [r2]
	adds r1, r5, #0
	bl SubtractAmount__9ToolStackUi
	ldr r4, [r7, #0x78]
	ldr r3, [sp, #0x44]
	ldr r0, [r3]
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB9DC
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, sl
	b _0808B7A4
_0808B3E4:
	ldr r4, [r7, #0x78]
	ldr r5, [sp, #0x18]
	ldr r6, [sp, #0x1c]
	mov r0, r8
	bl func_080CAD14
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_080CBDD4
	ldr r1, [r7, #0x78]
	mov r8, r1
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	ldr r2, [sp, #0x44]
	ldr r6, [r2]
	mov r3, sl
	ldr r5, [r3]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	add r4, sp, #0x28
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_0800FE24
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	mov r0, sl
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	add r1, sp, #0x20
	b _0808B4C8
_0808B466:
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r1, [r7, #0x78]
	mov r8, r1
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	ldr r3, [sp, #0x44]
	ldr r1, [r3]
	movs r2, #2
	bl memcpy
	ldr r4, [sp, #0x44]
	ldr r5, [r4]
	add r4, sp, #0x24
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
_0808B4C8:
	movs r2, #2
	bl memcpy
	b _0808BA4A
_0808B4D0:
	mov r0, sl
	cmp r0, #9
	bne _0808B4D8
	b _0808B85C
_0808B4D8:
	mov r1, sl
	cmp r1, #8
	ble _0808B4E0
	b _0808B856
_0808B4E0:
	movs r2, #0x82
	lsls r2, r2, #1
	adds r2, r2, r7
	mov r8, r2
	ldr r4, [r2]
	adds r0, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r5, sp, #8
	mov r3, r8
	ldr r4, [r3]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #2
	bl memcpy
	mov r4, sp
	adds r4, #0xc
	str r4, [sp, #0x3c]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	ldr r1, [sp, #0x3c]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	mov r0, sp
	adds r0, #0x18
	str r0, [sp, #0x40]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	ldr r1, [sp, #0x40]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B580
	adds r0, r5, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B580
	b _0808BA4A
_0808B580:
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B5EE
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	movs r2, #2
	bl memcpy
	mov r1, r8
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	add r0, sp, #0x2c
	adds r1, r4, #0
	bl func_0800FE24
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r2, [r7, #0x78]
	mov r8, r2
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #0x1c]
	ldr r6, [sp, #0x20]
	ldr r0, [sp, #0x40]
	b _0808B842
_0808B5EE:
	adds r0, r5, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B64A
	mov r3, r8
	ldr r4, [r3]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	add r0, sp, #0x2c
	adds r1, r4, #0
	bl func_0800FE24
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r1, [r7, #0x78]
	mov r8, r1
	b _0808B830
_0808B64A:
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x36
	strb r1, [r0]
	bl GetId__C4Tool
	adds r4, r0, #0
	adds r0, r5, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x37
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #0
	cmp r4, r0
	bne _0808B678
	movs r1, #1
_0808B678:
	cmp r1, #0
	bne _0808B67E
	b _0808B7C8
_0808B67E:
	adds r0, r5, #0
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r5, r1, r0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	cmp r5, r0
	bls _0808B72A
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r4, r0, #0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9ToolStackUi
	mov r3, r8
	ldr r4, [r3]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r5, r0, #0
	add r4, sp, #0x2c
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	b _0808BA4A
_0808B72A:
	mov r1, r8
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	bl AddAmount__9ToolStackUi
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	bl SubtractAmount__9ToolStackUi
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r3, r8
	ldr r4, [r3]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
_0808B7A4:
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	b _0808BA4A
_0808B7C8:
	mov r1, r8
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	movs r2, #2
	bl memcpy
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	ldr r3, [r7, #0x78]
	mov r8, r3
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #0x1c]
	ldr r6, [sp, #0x20]
	ldr r0, [sp, #0x40]
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	ldr r4, [r7, #0x78]
	mov r8, r4
_0808B830:
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #0x10]
	ldr r6, [sp, #0x14]
	ldr r0, [sp, #0x3c]
_0808B842:
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	b _0808BA4A
_0808B856:
	mov r0, sl
	cmp r0, #9
	bne _0808B86C
_0808B85C:
	adds r0, r7, #0
	mov r1, sb
_0808B860:
	bl func_0808AC28
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x38]
	b _0808BA4A
_0808B86C:
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CC70C
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r4, sp, #0x10
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_080CC70C
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	add r4, sp, #0x1c
	mov r8, r4
	movs r0, #0x82
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #0x1c]
	add r6, sp, #0x20
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #0x20]
	mov r0, r8
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B8F6
	adds r0, r6, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B8F6
	b _0808BA4A
_0808B8F6:
	mov r0, r8
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B96C
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x20]
	str r1, [r0]
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0x30
	bl __12RucksackItem
	ldr r0, [sp, #0x30]
	str r0, [r4]
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x14]
	ldr r3, [sp, #0x18]
	ldr r0, [sp, #0x38]
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CCA40
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	b _0808BA4A
_0808B96C:
	adds r0, r6, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B9E2
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0x30
	bl __12RucksackItem
	ldr r0, [sp, #0x30]
	str r0, [r4]
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x1c]
	str r1, [r0]
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #8]
	ldr r3, [sp, #0xc]
	ldr r0, [sp, #0x38]
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CCA40
	b _0808BA4A
_0808B9E2:
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x20]
	str r1, [r0]
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x1c]
	str r1, [r0]
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sl
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x14]
	ldr r3, [sp, #0x18]
	ldr r0, [sp, #0x38]
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CCA40
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #8]
	ldr r3, [sp, #0xc]
	ldr r0, [sp, #0x38]
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CCA40
_0808BA4A:
	add r1, sp, #0x38
	ldrb r0, [r1]
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0808BA60
func_0808BA60: @ 0x0808BA60
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r7, #8
	bgt _0808BAA6
	cmp r7, #0
	bne _0808BA78
	ldr r0, [r5, #0x78]
	bl func_080CB2FC
	b _0808BA8C
_0808BA78:
	ldr r4, [r5, #0x78]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
_0808BA8C:
	adds r1, r0, #0
	movs r2, #0
	ldr r0, [r1, #4]
	cmp r0, #0
	beq _0808BA9C
	ldr r0, [r1, #8]
	cmp r0, #0
	bne _0808BA9E
_0808BA9C:
	movs r2, #1
_0808BA9E:
	cmp r2, #0
	beq _0808BAA4
	b _0808BC00
_0808BAA4:
	b _0808BB8A
_0808BAA6:
	cmp r7, #9
	bne _0808BB18
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BABE
	b _0808BC00
_0808BABE:
	ldr r0, [r4]
	bl func_0800F204
	adds r6, r0, #0
	cmp r6, #0
	bne _0808BACC
	b _0808BBE0
_0808BACC:
	cmp r6, #1
	bne _0808BB8A
	ldr r0, [r4]
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x10
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0
	bne _0808BB8A
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808BB0C @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808BB10 @ =0x081000A8
	ldr r3, _0808BB14 @ =0x081000AC
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl func_08050E30
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r5, r1
	str r6, [r0]
	b _0808BC00
	.align 2, 0
_0808BB0C: .4byte 0x08117ABC
_0808BB10: .4byte 0x081000A8
_0808BB14: .4byte 0x081000AC
_0808BB18:
	ldr r4, [r5, #0x7c]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CC70C
	adds r1, r0, #0
	movs r2, #0
	ldr r0, [r1, #4]
	cmp r0, #0
	beq _0808BB3C
	ldr r0, [r1, #8]
	cmp r0, #0
	bne _0808BB3E
_0808BB3C:
	movs r2, #1
_0808BB3E:
	adds r6, r2, #0
	cmp r6, #0
	bne _0808BC00
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r4, [r0]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #0xc]
	add r0, sp, #0xc
	bl GetKind__C12RucksackItem
	adds r4, r0, #0
	cmp r4, #1
	bne _0808BBE0
	add r0, sp, #0xc
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x11
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BBB4
_0808BB8A:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808BBB0 @ =0x08117ADC
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #2
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	b _0808BC00
	.align 2, 0
_0808BBB0: .4byte 0x08117ADC
_0808BBB4:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808BBD4 @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808BBD8 @ =0x081000A8
	ldr r3, _0808BBDC @ =0x081000AC
	str r6, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	bl func_08050E30
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r5, r1
	str r4, [r0]
	b _0808BC00
	.align 2, 0
_0808BBD4: .4byte 0x08117ABC
_0808BBD8: .4byte 0x081000A8
_0808BBDC: .4byte 0x081000AC
_0808BBE0:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808BC08 @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808BC0C @ =0x081000A8
	ldr r3, _0808BC10 @ =0x081000AC
	str r6, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	bl func_08050E30
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #1
	str r0, [r1]
_0808BC00:
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808BC08: .4byte 0x08117ABC
_0808BC0C: .4byte 0x081000A8
_0808BC10: .4byte 0x081000AC

	thumb_func_start func_0808BC14
func_0808BC14: @ 0x0808BC14
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	cmp r6, #9
	bne _0808BC68
	movs r0, #0x80
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #1
	bne _0808BC4E
	ldr r0, [r4]
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #4
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x35
	bne _0808BC4E
	ldr r0, [r5, #8]
	ldr r1, _0808BC64 @ =0x00001BD8
	adds r0, r0, r1
	bl func_0800ED2C
_0808BC4E:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	bl func_0800F390
	ldr r0, [r5, #0x7c]
	bl func_080CD4D4
	b _0808BCC2
	.align 2, 0
_0808BC64: .4byte 0x00001BD8
_0808BC68:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r4, [r0]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	mov r0, sp
	adds r1, r4, #0
	bl func_0800FCE4
	mov r0, sp
	bl GetKind__C12RucksackItem
	cmp r0, #1
	bne _0808BCAE
	mov r0, sp
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #5
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x35
	bne _0808BCAE
	ldr r0, [r5, #8]
	ldr r1, _0808BCCC @ =0x00001BD8
	adds r0, r0, r1
	bl func_0800ED2C
_0808BCAE:
	ldr r4, [r5, #0x7c]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
_0808BCC2:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808BCCC: .4byte 0x00001BD8

	thumb_func_start func_0808BCD0
func_0808BCD0: @ 0x0808BCD0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r5, r0, #0
	mov r8, r1
	movs r7, #0
	cmp r1, #0
	beq _0808BD42
_0808BCE2:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	adds r1, r7, #0
	bl func_0800FE18
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808BD3C
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	ldr r0, [r5, #8]
	ldr r2, _0808BD98 @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E550
	adds r1, r0, #0
	add r0, sp, #8
	strb r1, [r0]
	bl GetIconId__C4Tool
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r4, [r5, #0x78]
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r7, #0
	ldr r2, _0808BD9C @ =0x086678A0
	adds r3, r6, #0
	bl func_080CB304
_0808BD3C:
	adds r7, #1
	cmp r7, r8
	blo _0808BCE2
_0808BD42:
	adds r7, r5, #0
	adds r7, #0xfc
	ldr r0, [r7]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808BD8A
	ldr r0, [r7]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	ldr r0, [r5, #8]
	ldr r2, _0808BD98 @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #9
	strb r1, [r0]
	bl GetIconId__C4Tool
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r4, [r5, #0x78]
	ldr r5, _0808BD9C @ =0x086678A0
	ldr r0, [r7]
	bl GetAmount__C9ToolStack
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_080CBAF0
_0808BD8A:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808BD98: .4byte 0x00001BD8
_0808BD9C: .4byte 0x086678A0

	thumb_func_start func_0808BDA0
func_0808BDA0: @ 0x0808BDA0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r7, r1, #0
	movs r6, #0
	cmp r6, r7
	bhs _0808BE2A
_0808BDAE:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	adds r1, r6, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #4
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808BE24
	movs r4, #0
	add r0, sp, #4
	bl GetKind__C12RucksackItem
	cmp r0, #0
	beq _0808BDDE
	cmp r0, #1
	beq _0808BDF0
	b _0808BE04
_0808BDDE:
	add r4, sp, #8
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetIconId__C4Food
	b _0808BE00
_0808BDF0:
	add r0, sp, #4
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0xc
	strb r1, [r0]
	bl GetIconId__C7Article
_0808BE00:
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_0808BE04:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BE14
	movs r4, #0xb0
	lsls r4, r4, #1
_0808BE14:
	ldr r0, [r5, #0x7c]
	movs r1, #1
	str r1, [sp]
	adds r1, r6, #0
	ldr r2, _0808BE54 @ =0x086678A0
	adds r3, r4, #0
	bl func_080CC728
_0808BE24:
	adds r6, #1
	cmp r6, r7
	blo _0808BDAE
_0808BE2A:
	movs r2, #0x80
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BE3E
	b _0808BF80
_0808BE3E:
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #5
	bls _0808BE4A
	b _0808BF80
_0808BE4A:
	lsls r0, r0, #2
	ldr r1, _0808BE58 @ =_0808BE5C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808BE54: .4byte 0x086678A0
_0808BE58: .4byte _0808BE5C
_0808BE5C: @ jump table
	.4byte _0808BE74 @ case 0
	.4byte _0808BEB0 @ case 1
	.4byte _0808BEF0 @ case 2
	.4byte _0808BF24 @ case 3
	.4byte _0808BF74 @ case 4
	.4byte _0808BF80 @ case 5
_0808BE74:
	movs r0, #0x80
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F20C
	add r0, sp, #4
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BEA4
	movs r6, #0xb0
	lsls r6, r6, #1
_0808BEA4:
	ldr r0, [r5, #0x7c]
	ldr r1, _0808BEAC @ =0x086678A0
	adds r2, r6, #0
	b _0808BF62
	.align 2, 0
_0808BEAC: .4byte 0x086678A0
_0808BEB0:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r0, [r4]
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xd
	strb r1, [r0]
	bl GetIconId__C7Article
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BEE4
	movs r6, #0xb0
	lsls r6, r6, #1
_0808BEE4:
	ldr r0, [r5, #0x7c]
	ldr r1, _0808BEEC @ =0x086678A0
	adds r2, r6, #0
	b _0808BF62
	.align 2, 0
_0808BEEC: .4byte 0x086678A0
_0808BEF0:
	ldr r0, [r5, #8]
	ldr r2, _0808BF08 @ =0x00001C70
	adds r0, r0, r2
	bl GetGrowthStage__C3Dog
	cmp r0, #0
	bne _0808BF14
	ldr r0, [r5, #0x7c]
	ldr r1, _0808BF0C @ =0x0858BA28
	ldr r2, _0808BF10 @ =0x000003DA
	b _0808BF62
	.align 2, 0
_0808BF08: .4byte 0x00001C70
_0808BF0C: .4byte 0x0858BA28
_0808BF10: .4byte 0x000003DA
_0808BF14:
	ldr r0, [r5, #0x7c]
	ldr r1, _0808BF20 @ =0x0858BA28
	movs r2, #0xdd
	lsls r2, r2, #2
	b _0808BF62
	.align 2, 0
_0808BF20: .4byte 0x0858BA28
_0808BF24:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	bl func_0800F344
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetChicken__4CoopUi
	cmp r0, #0
	beq _0808BF80
	bl GetGrowthStage__C7Chicken
	cmp r0, #0
	bne _0808BF5C
	ldr r0, [r5, #0x7c]
	ldr r1, _0808BF54 @ =0x0858BA28
	ldr r2, _0808BF58 @ =0x0000073D
	b _0808BF62
	.align 2, 0
_0808BF54: .4byte 0x0858BA28
_0808BF58: .4byte 0x0000073D
_0808BF5C:
	ldr r0, [r5, #0x7c]
	ldr r1, _0808BF6C @ =0x0858BA28
	ldr r2, _0808BF70 @ =0x00000734
_0808BF62:
	movs r3, #1
	bl func_080CCE58
	b _0808BF80
	.align 2, 0
_0808BF6C: .4byte 0x0858BA28
_0808BF70: .4byte 0x00000734
_0808BF74:
	ldr r0, [r5, #0x7c]
	ldr r1, _0808BF88 @ =0x086678A0
	movs r2, #0x35
	movs r3, #1
	bl func_080CCE58
_0808BF80:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808BF88: .4byte 0x086678A0

	thumb_func_start func_0808BF8C
func_0808BF8C: @ 0x0808BF8C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	adds r7, r1, #0
	movs r0, #0
	mov r8, r0
	adds r5, r6, #0
	adds r5, #0x98
	mov r1, r8
	strb r1, [r5]
	cmp r7, #0
	beq _0808BFDA
	cmp r7, #9
	beq _0808C000
	cmp r7, #8
	bgt _0808C04E
	movs r0, #0x82
	lsls r0, r0, #1
	adds r0, r0, r6
	mov sb, r0
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808C086
	b _0808C01E
_0808BFDA:
	adds r4, r6, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808C086
	ldr r0, [r4]
	bl GetTool__C9ToolStack
	add r2, sp, #8
	strb r0, [r2]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r3, #1
	bl func_080CF05C
	b _0808C084
_0808C000:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r6, r1
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808C086
	ldr r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CF67C
	b _0808C084
_0808C01E:
	adds r5, r6, #0
	adds r5, #0x98
	mov r0, sb
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetTool__C9ToolStack
	mov r2, sp
	adds r2, #9
	strb r0, [r2]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r3, #0
	bl func_080CF05C
	b _0808C084
_0808C04E:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp]
	mov r0, sp
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808C086
	ldr r2, [sp]
	str r2, [sp, #4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CFA38
_0808C084:
	mov r8, r0
_0808C086:
	mov r0, r8
	cmp r0, #0
	beq _0808C09C
	adds r0, r6, #0
	adds r0, #0x80
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	b _0808C0AA
_0808C09C:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _0808C0B8 @ =0x081000B0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
_0808C0AA:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808C0B8: .4byte 0x081000B0

	thumb_func_start func_0808C0BC
func_0808C0BC: @ 0x0808C0BC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080CE294
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	bl func_0800F5F8
	mov r8, r0
	movs r0, #0xa7
	lsls r0, r0, #2
	bl __builtin_new
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _0808C2F0 @ =0x081000B4
	str r0, [sp]
	add r4, sp, #4
	movs r0, #1
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, r8
	bl func_080CAFC4
	adds r6, r7, #0
	adds r6, #0x78
	adds r5, r0, #0
	ldr r1, [r7, #0x78]
	mov sb, r4
	cmp r5, r1
	beq _0808C134
	cmp r1, #0
	beq _0808C134
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808C134:
	str r5, [r6]
	ldr r0, [r7, #0x78]
	bl func_080CB090
	adds r0, r7, #0
	mov r1, r8
	bl func_0808BCD0
	movs r0, #0xcb
	lsls r0, r0, #2
	bl __builtin_new
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _0808C2F4 @ =0x081000BC
	str r0, [sp]
	movs r0, #1
	mov r1, sb
	strb r0, [r1]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r3, r8
	bl func_080CC15C
	adds r5, r7, #0
	adds r5, #0x7c
	adds r4, r0, #0
	ldr r1, [r7, #0x7c]
	cmp r4, r1
	beq _0808C194
	cmp r1, #0
	beq _0808C194
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808C194:
	str r4, [r5]
	ldr r0, [r7, #0x7c]
	bl func_080CC310
	adds r0, r7, #0
	mov r1, r8
	bl func_0808BDA0
	movs r0, #0x8c
	bl __builtin_new
	adds r1, r7, #0
	movs r2, #1
	bl func_080CD9B0
	adds r6, r7, #0
	adds r6, #0x8c
	mov sb, r0
	ldr r5, [r6]
	mov r8, r6
	cmp sb, r5
	beq _0808C1F4
	cmp r5, #0
	beq _0808C1F4
	ldr r0, _0808C2F8 @ =vtable_unk_080E5A28
	str r0, [r5, #0x24]
	adds r4, r5, #0
	adds r4, #0x1c
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	adds r0, r5, #0
	bl __builtin_delete
_0808C1F4:
	mov r0, sb
	str r0, [r6]
	movs r0, #0x88
	bl __builtin_new
	adds r1, r7, #0
	bl func_080CEC00
	adds r6, r7, #0
	adds r6, #0x90
	mov sl, r0
	ldr r5, [r6]
	mov sb, r6
	cmp sl, r5
	beq _0808C246
	cmp r5, #0
	beq _0808C246
	adds r4, r5, #0
	adds r4, #0x74
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	ldr r0, _0808C2F8 @ =vtable_unk_080E5A28
	str r0, [r5, #4]
	adds r0, r5, #0
	bl __builtin_delete
_0808C246:
	mov r1, sl
	str r1, [r6]
	mov r2, r8
	ldr r0, [r2]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808BF8C
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #8
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0808C2FC @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0xc]
	ldr r1, _0808C300 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r0, #0
	mov sl, r0
_0808C2AC:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	adds r0, r7, #0
	bl func_080CE2C4
	ldr r3, [sp, #0xc]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0808C2AC
	mov r1, sl
	cmp r1, #0
	beq _0808C2D2
	b _0808C550
_0808C2D2:
	mov r4, r8
	ldr r0, [r4]
	ldr r6, [r0, #4]
	movs r2, #0x84
	lsls r2, r2, #1
	adds r5, r7, r2
	ldr r0, [r5]
	cmp r0, #1
	bne _0808C2E6
	b _0808C502
_0808C2E6:
	cmp r0, #1
	bgt _0808C304
	cmp r0, #0
	beq _0808C30C
	b _0808C2AC
	.align 2, 0
_0808C2F0: .4byte 0x081000B4
_0808C2F4: .4byte 0x081000BC
_0808C2F8: .4byte vtable_unk_080E5A28
_0808C2FC: .4byte vtable_unk_080E5B80
_0808C300: .4byte 0x00000889
_0808C304:
	cmp r0, #2
	bne _0808C30A
	b _0808C536
_0808C30A:
	b _0808C2AC
_0808C30C:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0808C322
	ldr r0, [r4]
	bl func_080CDA44
	b _0808C394
_0808C322:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0808C338
	ldr r0, [r4]
	bl func_080CDB08
	b _0808C394
_0808C338:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0808C34E
	ldr r0, [r4]
	bl func_080CDCD0
	b _0808C394
_0808C34E:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0808C364
	ldr r0, [r4]
	bl func_080CDC00
	b _0808C394
_0808C364:
	movs r4, #0
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _0808C386
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0808C388
_0808C386:
	movs r4, #1
_0808C388:
	cmp r4, #0
	beq _0808C3A0
	mov r1, r8
	ldr r0, [r1]
	bl func_080CDD7C
_0808C394:
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xcb
	bl func_08008B6C
	b _0808C4EE
_0808C3A0:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0808C47A
	mov r0, sb
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808C3CC
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [r0, #4]
	adds r0, r2, #0
	movs r2, #0
	bl func_080CEC84
	b _0808C4EE
_0808C3CC:
	mov r1, r8
	ldr r0, [r1]
	ldr r4, [r0, #4]
	adds r0, r2, #0
	bl func_080CF050
	cmp r4, r0
	bne _0808C406
	mov r2, r8
	ldr r0, [r2]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808AC28
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808C46E
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808BF8C
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	b _0808C464
_0808C406:
	mov r1, r8
	ldr r0, [r1]
	ldr r0, [r0, #4]
	cmp r0, #8
	bgt _0808C426
	mov r2, sb
	ldr r0, [r2]
	bl func_080CF050
	cmp r0, #8
	bgt _0808C46E
	mov r1, r8
	ldr r0, [r1]
	ldr r0, [r0, #4]
	cmp r0, #8
	ble _0808C432
_0808C426:
	mov r2, sb
	ldr r0, [r2]
	bl func_080CF050
	cmp r0, #8
	ble _0808C46E
_0808C432:
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	adds r1, r0, #0
	mov r2, r8
	ldr r0, [r2]
	ldr r2, [r0, #4]
	adds r0, r7, #0
	bl func_0808B16C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808C46E
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808BF8C
_0808C464:
	mov r2, sb
	ldr r0, [r2]
	bl func_080CECD0
	b _0808C4EE
_0808C46E:
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	b _0808C4EE
_0808C47A:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0808C4D4
	mov r0, sb
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808C49E
	adds r0, r1, #0
	bl func_080CECD0
	b _0808C4EE
_0808C49E:
	ldr r2, [sp, #0xc]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0808C4EE
	movs r1, #1
	mov sl, r1
	adds r0, r2, #0
	adds r0, #0xc
	ldr r1, _0808C4D0 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	b _0808C4EE
	.align 2, 0
_0808C4D0: .4byte 0x00000889
_0808C4D4:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0808C4EE
	mov r2, r8
	ldr r0, [r2]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808BA60
_0808C4EE:
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [r0, #4]
	cmp r6, r1
	bne _0808C4FA
	b _0808C2AC
_0808C4FA:
	adds r0, r7, #0
	bl func_0808BF8C
	b _0808C2AC
_0808C502:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _0808C50E
	b _0808C2AC
_0808C50E:
	adds r0, r7, #0
	adds r0, #0x80
	bl func_08050DF0
	cmp r0, #1
	bne _0808C524
	ldr r0, [r4]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808BC14
_0808C524:
	mov r2, r8
	ldr r0, [r2]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808BF8C
	mov r0, sl
	str r0, [r5]
	b _0808C2AC
_0808C536:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _0808C542
	b _0808C2AC
_0808C542:
	adds r0, r7, #0
	adds r1, r6, #0
	bl func_0808BF8C
	mov r1, sl
	str r1, [r5]
	b _0808C2AC
_0808C550:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0808C56C
func_0808C56C: @ 0x0808C56C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _0808C598 @ =vtable_unk_080E7D74
	str r0, [r4]
	movs r0, #0x86
	lsls r0, r0, #1
	bl __builtin_new
	adds r1, r5, #0
	bl func_0808ABC4
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0808C598: .4byte vtable_unk_080E7D74

	thumb_func_start func_0808C59C
func_0808C59C: @ 0x0808C59C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0808C5D8 @ =vtable_unk_080E7D74
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0808C5B8
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808C5B8:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0808C5CA
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808C5CA:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808C5D8: .4byte vtable_unk_080E7D74

	thumb_func_start func_0808C5DC
func_0808C5DC: @ 0x0808C5DC
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_0808C0BC
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0808C5F8
func_0808C5F8: @ 0x0808C5F8
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	bl func_080CE19C
	ldr r0, _0808C648 @ =vtable_unk_080E7D84
	str r0, [r6, #4]
	adds r0, r6, #0
	adds r0, #0x98
	movs r5, #0
	strb r5, [r0]
	adds r2, r6, #0
	adds r2, #0xfc
	ldr r0, [r6, #8]
	ldr r3, _0808C64C @ =0x00001C2C
	adds r1, r0, r3
	str r1, [r2]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r2, r6, r1
	adds r3, #0xc
	adds r1, r0, r3
	str r1, [r2]
	movs r1, #0x82
	lsls r1, r1, #1
	adds r4, r6, r1
	movs r3, #0xfa
	lsls r3, r3, #1
	adds r0, r0, r3
	bl GetShelf__9FarmHouse
	str r0, [r4]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r6, r1
	str r5, [r0]
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0808C648: .4byte vtable_unk_080E7D84
_0808C64C: .4byte 0x00001C2C

	thumb_func_start func_0808C650
func_0808C650: @ 0x0808C650
	push {lr}
	ldr r2, _0808C660 @ =vtable_unk_080E7D84
	str r2, [r0, #4]
	bl func_080E3504
	pop {r0}
	bx r0
	.align 2, 0
_0808C660: .4byte vtable_unk_080E7D84

	thumb_func_start func_0808C664
func_0808C664: @ 0x0808C664
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r7, r1, #0
	movs r5, #0
	cmp r5, r7
	bhs _0808C6EE
_0808C672:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r0, [r0]
	adds r1, r5, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #4
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808C6E8
	movs r4, #0
	add r0, sp, #4
	bl GetKind__C12RucksackItem
	cmp r0, #0
	beq _0808C6A2
	cmp r0, #1
	beq _0808C6B4
	b _0808C6C8
_0808C6A2:
	add r4, sp, #8
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetIconId__C4Food
	b _0808C6C4
_0808C6B4:
	add r0, sp, #4
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0xc
	strb r1, [r0]
	bl GetIconId__C7Article
_0808C6C4:
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_0808C6C8:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808C6D8
	movs r4, #0xb0
	lsls r4, r4, #1
_0808C6D8:
	ldr r0, [r6, #0x78]
	movs r1, #1
	str r1, [sp]
	adds r1, r5, #0
	ldr r2, _0808C718 @ =0x086678A0
	adds r3, r4, #0
	bl func_080CB304
_0808C6E8:
	adds r5, #1
	cmp r5, r7
	blo _0808C672
_0808C6EE:
	adds r4, r6, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808C700
	b _0808C834
_0808C700:
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #5
	bls _0808C70C
	b _0808C834
_0808C70C:
	lsls r0, r0, #2
	ldr r1, _0808C71C @ =_0808C720
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808C718: .4byte 0x086678A0
_0808C71C: .4byte _0808C720
_0808C720: @ jump table
	.4byte _0808C738 @ case 0
	.4byte _0808C770 @ case 1
	.4byte _0808C7AC @ case 2
	.4byte _0808C7E0 @ case 3
	.4byte _0808C828 @ case 4
	.4byte _0808C834 @ case 5
_0808C738:
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F20C
	add r0, sp, #4
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808C762
	movs r5, #0xb0
	lsls r5, r5, #1
_0808C762:
	ldr r0, [r6, #0x78]
	ldr r1, _0808C76C @ =0x086678A0
	adds r2, r5, #0
	b _0808C816
	.align 2, 0
_0808C76C: .4byte 0x086678A0
_0808C770:
	ldr r0, [r4]
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xd
	strb r1, [r0]
	bl GetIconId__C7Article
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808C79E
	movs r5, #0xb0
	lsls r5, r5, #1
_0808C79E:
	ldr r0, [r6, #0x78]
	ldr r1, _0808C7A8 @ =0x086678A0
	adds r2, r5, #0
	b _0808C816
	.align 2, 0
_0808C7A8: .4byte 0x086678A0
_0808C7AC:
	ldr r0, [r6, #8]
	ldr r2, _0808C7C4 @ =0x00001C70
	adds r0, r0, r2
	bl GetGrowthStage__C3Dog
	cmp r0, #0
	bne _0808C7D0
	ldr r0, [r6, #0x78]
	ldr r1, _0808C7C8 @ =0x0858BA28
	ldr r2, _0808C7CC @ =0x000003DA
	b _0808C816
	.align 2, 0
_0808C7C4: .4byte 0x00001C70
_0808C7C8: .4byte 0x0858BA28
_0808C7CC: .4byte 0x000003DA
_0808C7D0:
	ldr r0, [r6, #0x78]
	ldr r1, _0808C7DC @ =0x0858BA28
	movs r2, #0xdd
	lsls r2, r2, #2
	b _0808C816
	.align 2, 0
_0808C7DC: .4byte 0x0858BA28
_0808C7E0:
	ldr r0, [r4]
	bl func_0800F344
	adds r1, r0, #0
	ldr r0, [r6, #8]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetChicken__4CoopUi
	cmp r0, #0
	beq _0808C834
	bl GetGrowthStage__C7Chicken
	cmp r0, #0
	bne _0808C810
	ldr r0, [r6, #0x78]
	ldr r1, _0808C808 @ =0x0858BA28
	ldr r2, _0808C80C @ =0x0000073D
	b _0808C816
	.align 2, 0
_0808C808: .4byte 0x0858BA28
_0808C80C: .4byte 0x0000073D
_0808C810:
	ldr r0, [r6, #0x78]
	ldr r1, _0808C820 @ =0x0858BA28
	ldr r2, _0808C824 @ =0x00000734
_0808C816:
	movs r3, #1
	bl func_080CBAF0
	b _0808C834
	.align 2, 0
_0808C820: .4byte 0x0858BA28
_0808C824: .4byte 0x00000734
_0808C828:
	ldr r0, [r6, #0x78]
	ldr r1, _0808C83C @ =0x086678A0
	movs r2, #0x35
	movs r3, #1
	bl func_080CBAF0
_0808C834:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808C83C: .4byte 0x086678A0

	thumb_func_start func_0808C840
func_0808C840: @ 0x0808C840
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	adds r7, r1, #0
	movs r5, #0
_0808C84A:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r0, [r0]
	lsls r1, r7, #3
	adds r1, r1, r5
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808C8A4
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	add r0, sp, #8
	strb r1, [r0]
	bl GetIconId__C7Article
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	add r0, sp, #4
	bl GetAmount__C12ArticleStack
	ldr r1, [r6, #0x7c]
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r5, #0
	ldr r2, _0808C8A0 @ =0x086678A0
	adds r3, r4, #0
	bl func_080CC728
	b _0808C8AC
	.align 2, 0
_0808C8A0: .4byte 0x086678A0
_0808C8A4:
	ldr r0, [r6, #0x7c]
	adds r1, r5, #0
	bl func_080CCDEC
_0808C8AC:
	adds r5, #1
	cmp r5, #7
	bls _0808C84A
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0808C8BC
func_0808C8BC: @ 0x0808C8BC
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x94
	ldr r0, [r0]
	bl func_080CEB80
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0808C840
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0808C8D8
func_0808C8D8: @ 0x0808C8D8
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x94
	ldr r0, [r0]
	bl func_080CEBC0
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0808C840
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0808C8F4
func_0808C8F4: @ 0x0808C8F4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	movs r7, #0
	adds r6, r5, #0
	adds r6, #0x98
	strb r7, [r6]
	cmp r1, #0
	bne _0808C922
	adds r4, r5, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808C9A2
	ldr r2, [r4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl func_080CF67C
	b _0808C9A0
_0808C922:
	cmp r1, #8
	bgt _0808C95C
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r4, [r0]
	adds r0, r5, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp]
	mov r0, sp
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808C9A2
	ldr r2, [sp]
	str r2, [sp, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	bl func_080CFA38
	b _0808C9A0
_0808C95C:
	adds r0, r5, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	adds r0, r5, #0
	movs r2, #0
	bl func_080CE184
	lsls r4, r4, #3
	adds r6, r4, r0
	movs r0, #0x82
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r0, [r4]
	adds r1, r6, #0
	bl GetArticleStackAt__5ShelfUi
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808C9A2
	ldr r0, [r4]
	adds r1, r6, #0
	bl GetArticleStackAt__5ShelfUi
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	add r0, sp, #8
	strb r1, [r0]
	bl GetDesc__C7Article
_0808C9A0:
	adds r7, r0, #0
_0808C9A2:
	cmp r7, #0
	beq _0808C9B6
	adds r0, r5, #0
	adds r0, #0x80
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	b _0808C9C4
_0808C9B6:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808C9CC @ =0x081000D0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
_0808C9C4:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808C9CC: .4byte 0x081000D0

	thumb_func_start func_0808C9D0
func_0808C9D0: @ 0x0808C9D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	adds r7, r0, #0
	mov sb, r1
	str r2, [sp, #0x2c]
	movs r0, #1
	str r0, [sp, #0x30]
	cmp r1, #0
	bne _0808C9EC
	b _0808CEB0
_0808C9EC:
	cmp r1, #8
	ble _0808C9F2
	b _0808CBBE
_0808C9F2:
	adds r4, r7, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	mov r8, r4
	cmp r0, #0
	beq _0808CA80
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	movs r1, #0
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0808CA2C
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _0808CA2E
_0808CA2C:
	movs r1, #1
_0808CA2E:
	cmp r1, #0
	beq _0808CA34
	b _0808CEB0
_0808CA34:
	ldr r0, [r7, #0x78]
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	movs r3, #1
	bl func_080CBDD4
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	add r5, sp, #0x10
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_0800FCE4
	mov r2, r8
	ldr r0, [r2]
	ldr r1, [sp, #0x10]
	str r1, [sp, #0x14]
	bl func_0800F418
	b _0808CEB0
_0808CA80:
	mov r3, r8
	ldr r0, [r3]
	bl func_0800F204
	cmp r0, #5
	bls _0808CA8E
	b _0808CEB0
_0808CA8E:
	lsls r0, r0, #2
	ldr r1, _0808CA98 @ =_0808CA9C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808CA98: .4byte _0808CA9C
_0808CA9C: @ jump table
	.4byte _0808CAB4 @ case 0
	.4byte _0808CAB4 @ case 1
	.4byte _0808CDFE @ case 2
	.4byte _0808CDFE @ case 3
	.4byte _0808CDFE @ case 4
	.4byte _0808CEB0 @ case 5
_0808CAB4:
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r4, sp, #0x18
	ldr r0, [r7, #0x78]
	bl func_080CB2FC
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	movs r1, #0
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0808CAE8
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _0808CAEA
_0808CAE8:
	movs r1, #1
_0808CAEA:
	cmp r1, #0
	bne _0808CB6A
	ldr r0, [r7, #0x78]
	ldr r1, [sp, #8]
	ldr r2, [sp, #0xc]
	movs r3, #1
	bl func_080CBDD4
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	movs r0, #1
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CB63C
	add r0, sp, #0x10
	mov r4, r8
	ldr r1, [r4]
	bl func_0800F294
	ldr r0, [r4]
	bl func_0800F390
	add r6, sp, #0x14
	movs r0, #0x80
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r4, #0
	bl func_0800FCE4
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x10]
	str r1, [r0]
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [sp, #0x14]
	str r1, [sp, #0x24]
	bl func_0800F418
	b _0808CEB0
_0808CB6A:
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x1c]
	ldr r3, [sp, #0x20]
	movs r0, #1
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CB63C
	add r0, sp, #0x24
	mov r2, r8
	ldr r1, [r2]
	bl func_0800F294
	mov r3, r8
	ldr r0, [r3]
	bl func_0800F390
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #0x24]
	str r1, [r0]
	b _0808CEB0
_0808CBBE:
	adds r0, r7, #0
	mov r1, sb
	ldr r2, [sp, #0x2c]
	bl func_080CE184
	mov sl, r0
	movs r1, #0x82
	lsls r1, r1, #1
	adds r6, r7, r1
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	adds r4, r7, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	mov r8, r4
	cmp r0, #0
	beq _0808CCAA
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808CC02
	b _0808CEB0
_0808CC02:
	ldr r4, [r4]
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800F3E8
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	movs r1, #1
	bl SubtractAmount__12ArticleStackUi
	ldr r4, [r7, #0x78]
	ldr r5, _0808CC80 @ =0x086678A0
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	add r0, sp, #0x28
	strb r1, [r0]
	bl GetIconId__C7Article
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #1
	bl func_080CBAF0
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r0, [r0]
	ldr r2, [sp, #0x2c]
	cmp r0, r2
	beq _0808CC56
	b _0808CEB0
_0808CC56:
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808CC84
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	b _0808CEB0
	.align 2, 0
_0808CC80: .4byte 0x086678A0
_0808CC84:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	bl GetAmount__C12ArticleStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	b _0808CEB0
_0808CCAA:
	mov r3, r8
	ldr r0, [r3]
	bl func_0800F204
	cmp r0, #5
	bls _0808CCB8
	b _0808CEB0
_0808CCB8:
	lsls r0, r0, #2
	ldr r1, _0808CCC4 @ =_0808CCC8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808CCC4: .4byte _0808CCC8
_0808CCC8: @ jump table
	.4byte _0808CEAC @ case 0
	.4byte _0808CCE0 @ case 1
	.4byte _0808CEAC @ case 2
	.4byte _0808CEAC @ case 3
	.4byte _0808CEAC @ case 4
	.4byte _0808CEB0 @ case 5
_0808CCE0:
	mov r4, r8
	ldr r0, [r4]
	bl func_0800F258
	mov r6, sp
	adds r6, #0x2a
	strb r0, [r6]
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808CCFC
	b _0808CE08
_0808CCFC:
	add r0, sp, #4
	bl GetAmount__C12ArticleStack
	cmp r0, #1
	bls _0808CD0C
	movs r4, #0
	str r4, [sp, #0x30]
	b _0808CEB0
_0808CD0C:
	ldr r0, [r4]
	bl func_0800F388
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808CDC0
	ldr r0, [r4]
	bl func_0800F390
	ldr r4, [r4]
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800F3E8
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #8
	movs r2, #0x2a
	add r2, sp
	ldrb r1, [r2]
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r4, [r7, #0x78]
	ldr r6, _0808CDBC @ =0x086678A0
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x29
	strb r1, [r0]
	bl GetIconId__C7Article
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r6, #0
	movs r3, #1
	bl func_080CBAF0
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r0, [r0]
	ldr r3, [sp, #0x2c]
	cmp r0, r3
	beq _0808CD90
	b _0808CEB0
_0808CD90:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, sp
	adds r0, #0x2a
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl func_080CC728
	b _0808CEB0
	.align 2, 0
_0808CDBC: .4byte 0x086678A0
_0808CDC0:
	mov r0, sp
	adds r0, #0x2a
	bl GetId__C7Article
	adds r4, r0, #0
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x2b
	strb r1, [r0]
	bl GetId__C7Article
	eors r0, r4
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	bge _0808CDFE
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808CE04 @ =0x081000D4
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r4, #0x84
	lsls r4, r4, #1
	adds r1, r7, r4
	movs r0, #1
	str r0, [r1]
_0808CDFE:
	movs r0, #0
	str r0, [sp, #0x30]
	b _0808CEB0
	.align 2, 0
_0808CE04: .4byte 0x081000D4
_0808CE08:
	mov r1, r8
	ldr r0, [r1]
	bl func_0800F388
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808CE88
	mov r2, r8
	ldr r0, [r2]
	bl func_0800F390
	movs r3, #0x82
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #8
	ldrb r1, [r6]
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r0, [r0]
	ldr r4, [sp, #0x2c]
	cmp r0, r4
	bne _0808CEB0
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	adds r0, r6, #0
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _0808CE84 @ =0x086678A0
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CC728
	b _0808CEB0
	.align 2, 0
_0808CE84: .4byte 0x086678A0
_0808CE88:
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808CEA8 @ =0x081000D4
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #1
	str r0, [r1]
	movs r1, #0
	str r1, [sp, #0x30]
	b _0808CEB0
	.align 2, 0
_0808CEA8: .4byte 0x081000D4
_0808CEAC:
	movs r2, #0
	str r2, [sp, #0x30]
_0808CEB0:
	add r3, sp, #0x30
	ldrb r0, [r3]
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_0808CEC4
func_0808CEC4: @ 0x0808CEC4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x5c
	adds r7, r0, #0
	str r1, [sp, #0x3c]
	mov sb, r2
	movs r0, #1
	str r0, [sp, #0x40]
	cmp r2, #0
	bne _0808CEF0
	adds r0, r7, #0
	adds r0, #0x90
	ldr r0, [r0]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	b _0808D042
_0808CEF0:
	ldr r1, [sp, #0x3c]
	cmp r1, #0
	beq _0808CEF8
	b _0808D0C0
_0808CEF8:
	mov r2, sb
	cmp r2, #8
	bgt _0808CF0C
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_0808C9D0
	bl _0808DD3A
_0808CF0C:
	adds r6, r7, #0
	adds r6, #0xfc
	ldr r0, [r6]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808CF32
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sb
	bl func_0808C9D0
	bl _0808DD3A
_0808CF32:
	ldr r0, [r6]
	bl func_0800F204
	cmp r0, #1
	beq _0808CF40
	bl _0808D8A2
_0808CF40:
	ldr r1, [r6]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl GetArticle__C12RucksackItem
	add r4, sp, #0x2c
	strb r0, [r4]
	adds r0, r7, #0
	adds r0, #0x94
	str r0, [sp, #0x44]
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sb
	bl func_080CE184
	mov sl, r0
	add r5, sp, #8
	movs r1, #0x82
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	ldr r0, [r1]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #2
	bl memcpy
	adds r0, r5, #0
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D004
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808CFE4
	ldr r0, [r6]
	bl func_0800F390
	mov r2, r8
	ldr r0, [r2]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #0xc
	add r0, sp, #4
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #0x2c
	bl _0808D83C
_0808CFE4:
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808D000 @ =0x081000D4
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r2, [sp, #0x40]
	str r2, [r0]
	bl _0808D8A2
	.align 2, 0
_0808D000: .4byte 0x081000D4
_0808D004:
	adds r0, r4, #0
	bl GetId__C7Article
	adds r4, r0, #0
	adds r0, r5, #0
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x2d
	strb r1, [r0]
	bl GetId__C7Article
	eors r0, r4
	rsbs r1, r0, #0
	orrs r1, r0
	cmp r1, #0
	bge _0808D050
	adds r0, r5, #0
	bl GetAmount__C12ArticleStack
	cmp r0, #1
	beq _0808D036
	bl _0808D8EC
_0808D036:
	ldr r1, [sp, #0x44]
	ldr r0, [r1]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sb
_0808D042:
	bl func_0808C9D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x40]
	bl _0808DD3A
_0808D050:
	adds r0, r5, #0
	bl GetAmount__C12ArticleStack
	cmp r0, #0x63
	bne _0808D05E
	bl _0808D8A2
_0808D05E:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808D09E
	ldr r0, [r6]
	bl func_0800F390
	mov r1, r8
	ldr r0, [r1]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	movs r1, #1
	bl AddAmount__12ArticleStackUi
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r2, r8
	ldr r0, [r2]
	mov r1, sl
	bl _0808DC7A
_0808D09E:
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808D0BC @ =0x081000D4
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r3, #0x84
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r1, [sp, #0x40]
	str r1, [r0]
	bl _0808D8EC
	.align 2, 0
_0808D0BC: .4byte 0x081000D4
_0808D0C0:
	ldr r3, [sp, #0x3c]
	cmp r3, #8
	ble _0808D0C8
	b _0808D636
_0808D0C8:
	mov r0, sb
	cmp r0, #8
	ble _0808D0D0
	b _0808D296
_0808D0D0:
	add r4, sp, #0x10
	ldr r5, [r7, #0x78]
	adds r0, r7, #0
	adds r1, r3, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_080CB2E8
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	add r4, sp, #0x1c
	ldr r5, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_080CB2E8
	ldm r0!, {r1, r2, r3}
	stm r4!, {r1, r2, r3}
	movs r0, #0x80
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r4, [r5]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #4]
	add r6, sp, #8
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #8]
	add r0, sp, #4
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D158
	adds r0, r6, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D158
	bl _0808DD3A
_0808D158:
	add r0, sp, #4
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D1D0
	ldr r4, [r5]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #8]
	str r1, [r0]
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0x28
	bl __12RucksackItem
	ldr r0, [sp, #0x28]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x20]
	ldr r3, [sp, #0x24]
	ldr r0, [sp, #0x40]
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CB63C
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	bl _0808DD3A
_0808D1D0:
	adds r0, r6, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D22A
	ldr r4, [r5]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0x28
	bl __12RucksackItem
	ldr r0, [sp, #0x28]
	str r0, [r4]
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #4]
	str r1, [r0]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	b _0808D276
_0808D22A:
	ldr r4, [r5]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #8]
	str r1, [r0]
	ldr r4, [r5]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r1, [sp, #4]
	str r1, [r0]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x20]
	ldr r3, [sp, #0x24]
	ldr r0, [sp, #0x40]
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CB63C
_0808D276:
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, [sp, #0x14]
	ldr r3, [sp, #0x18]
	ldr r0, [sp, #0x40]
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CB63C
	bl _0808DD3A
_0808D296:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r1, r7, r1
	str r1, [sp, #0x48]
	ldr r4, [r1]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sb
	bl func_080CE184
	mov sl, r0
	add r4, sp, #8
	movs r2, #0x82
	lsls r2, r2, #1
	adds r2, r2, r7
	mov r8, r2
	ldr r0, [r2]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D3A4
	add r0, sp, #8
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D302
	bl _0808DD3A
_0808D302:
	add r0, sp, #8
	bl GetArticle__C12ArticleStack
	mov r5, sp
	adds r5, #0x2e
	strb r0, [r5]
	ldr r3, [sp, #0x48]
	ldr r4, [r3]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0xc
	ldrb r1, [r5]
	bl __12RucksackItemG7Article
	ldr r0, [sp, #0xc]
	str r0, [r4]
	mov r1, r8
	ldr r0, [r1]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	movs r1, #1
	bl SubtractAmount__12ArticleStackUi
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	adds r0, r5, #0
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _0808D388 @ =0x086678A0
	ldr r0, [sp, #0x40]
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	bl func_080CB304
	mov r1, r8
	ldr r0, [r1]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D38C
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	bl _0808DBEC
	.align 2, 0
_0808D388: .4byte 0x086678A0
_0808D38C:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r2, r8
	ldr r0, [r2]
	mov r1, sl
	bl _0808DC7A
_0808D3A4:
	add r0, sp, #8
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D45E
	add r0, sp, #4
	bl GetKind__C12RucksackItem
	cmp r0, #1
	beq _0808D3BC
	b _0808D8A2
_0808D3BC:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D3E8
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808D3E4 @ =0x081000D4
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r2, [sp, #0x40]
	str r2, [r0]
	b _0808D8A2
	.align 2, 0
_0808D3E4: .4byte 0x081000D4
_0808D3E8:
	add r0, sp, #4
	bl GetArticle__C12RucksackItem
	mov r6, sp
	adds r6, #0x2f
	strb r0, [r6]
	mov r1, r8
	ldr r0, [r1]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r4, r0, #0
	add r5, sp, #0xc
	ldrb r1, [r6]
	adds r0, r5, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #2
	bl memcpy
	ldr r2, [sp, #0x48]
	ldr r4, [r2]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	adds r0, r5, #0
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	adds r0, r6, #0
	b _0808D83C
_0808D45E:
	add r0, sp, #4
	bl GetKind__C12RucksackItem
	cmp r0, #1
	beq _0808D46A
	b _0808D85C
_0808D46A:
	add r0, sp, #4
	bl GetArticle__C12RucksackItem
	add r5, sp, #0x30
	strb r0, [r5]
	add r0, sp, #8
	bl GetArticle__C12ArticleStack
	mov r4, sp
	adds r4, #0x31
	strb r0, [r4]
	adds r0, r5, #0
	bl GetId__C7Article
	adds r6, r0, #0
	adds r0, r4, #0
	bl GetId__C7Article
	cmp r6, r0
	beq _0808D49E
	add r0, sp, #8
	bl GetAmount__C12ArticleStack
	cmp r0, #1
	beq _0808D49E
	b _0808D8EC
_0808D49E:
	add r0, sp, #0x30
	bl GetId__C7Article
	adds r4, r0, #0
	mov r0, sp
	adds r0, #0x31
	bl GetId__C7Article
	cmp r4, r0
	beq _0808D598
	add r0, sp, #8
	bl GetAmount__C12ArticleStack
	mov r8, r0
	cmp r0, #1
	bne _0808D598
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D4E8
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808D4E4 @ =0x081000D4
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r3, #0x84
	lsls r3, r3, #1
	adds r0, r7, r3
	mov r1, r8
	str r1, [r0]
	b _0808D8EC
	.align 2, 0
_0808D4E4: .4byte 0x081000D4
_0808D4E8:
	movs r3, #0x82
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #0xc
	add r0, sp, #0x30
	ldrb r1, [r0]
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r5, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_0800FCDC
	adds r5, r0, #0
	movs r2, #0x31
	add r2, sp
	ldrb r1, [r2]
	adds r0, r4, #0
	bl __12RucksackItemG7Article
	ldr r0, [sp, #0xc]
	str r0, [r5]
	ldr r5, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, sp
	adds r0, #0x31
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r6, _0808D594 @ =0x086678A0
	mov r0, r8
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl func_080CB304
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #0x30
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r1, r8
	str r1, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl func_080CC728
	b _0808DD3A
	.align 2, 0
_0808D594: .4byte 0x086678A0
_0808D598:
	add r0, sp, #8
	bl GetAmount__C12ArticleStack
	cmp r0, #0x63
	bne _0808D5A4
	b _0808D8EC
_0808D5A4:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D5D4
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808D5D0 @ =0x081000D4
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r3, #0x84
	lsls r3, r3, #1
	adds r1, r7, r3
	movs r0, #1
	str r0, [r1]
	movs r0, #0
	str r0, [sp, #0x40]
	b _0808DD3A
	.align 2, 0
_0808D5D0: .4byte 0x081000D4
_0808D5D4:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r6, r7, r1
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	movs r1, #1
	bl AddAmount__12ArticleStackUi
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0xc
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sl
	b _0808DC7A
_0808D636:
	adds r3, r7, #0
	adds r3, #0x90
	str r3, [sp, #0x50]
	ldr r0, [r3]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	bl func_080CE184
	str r0, [sp, #0x4c]
	ldr r0, [sp, #0x50]
	str r0, [sp, #0x58]
	mov r1, sb
	cmp r1, #8
	ble _0808D65A
	b _0808D9B8
_0808D65A:
	movs r2, #0x82
	lsls r2, r2, #1
	adds r2, r2, r7
	mov r8, r2
	ldr r0, [r2]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	movs r3, #0x80
	lsls r3, r3, #1
	adds r6, r7, r3
	ldr r4, [r6]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #8]
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D6AC
	add r0, sp, #8
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D6AC
	b _0808DD3A
_0808D6AC:
	add r0, sp, #8
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D76C
	ldr r4, [r6]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r5, r0, #0
	add r4, sp, #0xc
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl __12RucksackItemG7Article
	ldr r0, [sp, #0xc]
	str r0, [r5]
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	movs r1, #1
	bl SubtractAmount__12ArticleStackUi
	ldr r5, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x32
	strb r1, [r0]
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _0808D768 @ =0x086678A0
	ldr r0, [sp, #0x40]
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CB304
	ldr r1, [sp, #0x50]
	ldr r0, [r1]
	bl func_080CF054
	adds r1, r7, #0
	adds r1, #0x94
	ldr r1, [r1]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	beq _0808D73E
	b _0808DD3A
_0808D73E:
	mov r2, r8
	ldr r0, [r2]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D754
	b _0808DBE6
_0808D754:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r3, r8
	ldr r0, [r3]
	b _0808DC78
	.align 2, 0
_0808D768: .4byte 0x086678A0
_0808D76C:
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D862
	add r0, sp, #8
	bl GetKind__C12RucksackItem
	cmp r0, #1
	bne _0808D85C
	add r0, sp, #8
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D7AC
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808D7A8 @ =0x081000D4
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r2, [sp, #0x40]
	str r2, [r0]
	b _0808D8A2
	.align 2, 0
_0808D7A8: .4byte 0x081000D4
_0808D7AC:
	ldr r4, [r6]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r5]
	mov r1, r8
	ldr r0, [r1]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r0, sp, #8
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r2, [sp, #0x50]
	ldr r0, [r2]
	bl func_080CF054
	adds r1, r7, #0
	adds r1, #0x94
	ldr r1, [r1]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	beq _0808D820
	b _0808DD3A
_0808D820:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #8
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x33
	strb r1, [r0]
_0808D83C:
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _0808D858 @ =0x086678A0
	ldr r0, [sp, #0x40]
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CC728
	b _0808DD3A
	.align 2, 0
_0808D858: .4byte 0x086678A0
_0808D85C:
	movs r1, #0
	str r1, [sp, #0x40]
	b _0808DD3A
_0808D862:
	add r0, sp, #8
	bl GetKind__C12RucksackItem
	cmp r0, #1
	bne _0808D8EC
	add r0, sp, #8
	bl GetArticle__C12RucksackItem
	mov r5, sp
	adds r5, #0x35
	strb r0, [r5]
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	add r4, sp, #0x34
	strb r0, [r4]
	adds r0, r4, #0
	bl GetId__C7Article
	adds r6, r0, #0
	adds r0, r5, #0
	bl GetId__C7Article
	mov sl, r5
	mov r8, r4
	cmp r6, r0
	beq _0808D8A8
	add r0, sp, #4
	bl GetAmount__C12ArticleStack
	cmp r0, #1
	beq _0808D8A8
_0808D8A2:
	movs r3, #0
	str r3, [sp, #0x40]
	b _0808DD3A
_0808D8A8:
	mov r0, r8
	bl GetId__C7Article
	adds r4, r0, #0
	mov r0, sl
	bl GetId__C7Article
	cmp r4, r0
	bne _0808D8BC
	b _0808DD3A
_0808D8BC:
	add r0, sp, #4
	bl GetAmount__C12ArticleStack
	adds r6, r0, #0
	cmp r6, #1
	beq _0808D8CA
	b _0808DD3A
_0808D8CA:
	add r0, sp, #8
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808D8F8
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808D8F4 @ =0x081000D4
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	str r6, [r0]
_0808D8EC:
	movs r2, #0
	str r2, [sp, #0x40]
	b _0808DD3A
	.align 2, 0
_0808D8F4: .4byte 0x081000D4
_0808D8F8:
	movs r3, #0x82
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #0xc
	mov r0, sl
	ldrb r1, [r0]
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r5, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_0800FCDC
	adds r5, r0, #0
	mov r2, r8
	ldrb r1, [r2]
	adds r0, r4, #0
	bl __12RucksackItemG7Article
	ldr r0, [sp, #0xc]
	str r0, [r5]
	ldr r5, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, r8
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r0, _0808D9B4 @ =0x086678A0
	mov r8, r0
	str r6, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, r8
	bl func_080CB304
	ldr r1, [sp, #0x58]
	ldr r0, [r1]
	bl func_080CF054
	adds r1, r7, #0
	adds r1, #0x94
	ldr r1, [r1]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	beq _0808D98C
	b _0808DD3A
_0808D98C:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, sl
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r6, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, r8
	bl func_080CC728
	b _0808DD3A
	.align 2, 0
_0808D9B4: .4byte 0x086678A0
_0808D9B8:
	adds r2, r7, #0
	adds r2, #0x94
	str r2, [sp, #0x54]
	ldr r0, [r2]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sb
	bl func_080CE184
	mov sl, r0
	movs r3, #0x82
	lsls r3, r3, #1
	adds r6, r7, r3
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #8
	mov r8, r0
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	mov r0, r8
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808DA16
	mov r0, r8
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808DA16
	b _0808DD3A
_0808DA16:
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808DAB8
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	mov r1, r8
	movs r2, #2
	bl memcpy
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	bl __12ArticleStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	ldr r1, [sp, #0x50]
	ldr r0, [r1]
	bl func_080CF054
	ldr r2, [sp, #0x54]
	ldr r1, [r2]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	beq _0808DA78
	b _0808DD3A
_0808DA78:
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x36
	strb r1, [r0]
	bl GetIconId__C7Article
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, r8
	bl GetAmount__C12ArticleStack
	ldr r2, _0808DAB4 @ =0x086678A0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r3, r4, #0
	bl func_080CC728
	b _0808DD3A
	.align 2, 0
_0808DAB4: .4byte 0x086678A0
_0808DAB8:
	mov r0, r8
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808DB30
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	bl __12ArticleStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x37
	strb r1, [r0]
	bl GetIconId__C7Article
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	add r0, sp, #4
	bl GetAmount__C12ArticleStack
	ldr r2, _0808DB2C @ =0x086678A0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r3, r4, #0
	bl func_080CC728
	b _0808DBD0
	.align 2, 0
_0808DB2C: .4byte 0x086678A0
_0808DB30:
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	add r0, sp, #0x38
	strb r1, [r0]
	bl GetId__C7Article
	adds r4, r0, #0
	mov r0, r8
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x39
	strb r1, [r0]
	bl GetId__C7Article
	movs r1, #0
	cmp r4, r0
	bne _0808DB5C
	movs r1, #1
_0808DB5C:
	cmp r1, #0
	bne _0808DB62
	b _0808DC8E
_0808DB62:
	mov r0, r8
	bl GetAmount__C12ArticleStack
	adds r4, r0, #0
	movs r5, #0x63
	subs r4, r5, r4
	add r0, sp, #4
	bl GetAmount__C12ArticleStack
	cmp r4, r0
	blo _0808DBFC
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	bl __12ArticleStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r4, r0, #0
	add r0, sp, #4
	bl GetAmount__C12ArticleStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__12ArticleStackUi
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	bl GetAmount__C12ArticleStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
_0808DBD0:
	ldr r3, [sp, #0x50]
	ldr r0, [r3]
	bl func_080CF054
	ldr r2, [sp, #0x54]
	ldr r1, [r2]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	beq _0808DBE6
	b _0808DD3A
_0808DBE6:
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
_0808DBEC:
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	b _0808DD3A
_0808DBFC:
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	adds r4, r0, #0
	mov r0, r8
	bl GetAmount__C12ArticleStack
	adds r1, r0, #0
	subs r1, r5, r1
	adds r0, r4, #0
	bl SubtractAmount__12ArticleStackUi
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r4, r0, #0
	mov r0, r8
	bl GetAmount__C12ArticleStack
	adds r1, r0, #0
	subs r1, r5, r1
	adds r0, r4, #0
	bl AddAmount__12ArticleStackUi
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	bl GetAmount__C12ArticleStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	ldr r3, [sp, #0x50]
	ldr r0, [r3]
	bl func_080CF054
	ldr r2, [sp, #0x54]
	ldr r1, [r2]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	bne _0808DD3A
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
_0808DC78:
	ldr r1, [sp, #0x4c]
_0808DC7A:
	bl GetArticleStackAt__5ShelfUi
	bl GetAmount__C12ArticleStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	b _0808DD3A
_0808DC8E:
	ldr r0, [r6]
	ldr r1, [sp, #0x4c]
	bl GetArticleStackAt__5ShelfUi
	mov r1, r8
	movs r2, #2
	bl memcpy
	ldr r0, [r6]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x3a
	strb r1, [r0]
	bl GetIconId__C7Article
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	add r0, sp, #4
	bl GetAmount__C12ArticleStack
	ldr r3, _0808DD50 @ =0x086678A0
	mov sb, r3
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r2, sb
	adds r3, r4, #0
	bl func_080CC728
	ldr r1, [sp, #0x50]
	ldr r0, [r1]
	bl func_080CF054
	ldr r2, [sp, #0x54]
	ldr r1, [r2]
	adds r1, #0xbc
	ldr r1, [r1]
	cmp r0, r1
	bne _0808DD3A
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x3c]
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x3b
	strb r1, [r0]
	bl GetIconId__C7Article
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, r8
	bl GetAmount__C12ArticleStack
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r2, sb
	adds r3, r4, #0
	bl func_080CC728
_0808DD3A:
	add r3, sp, #0x40
	ldrb r0, [r3]
	add sp, #0x5c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808DD50: .4byte 0x086678A0

	thumb_func_start func_0808DD54
func_0808DD54: @ 0x0808DD54
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r7, r0, #0
	str r1, [sp, #0x18]
	str r2, [sp, #0x1c]
	cmp r1, #0
	beq _0808DD6C
	b _0808DEC6
_0808DD6C:
	movs r0, #0xfc
	adds r0, r0, r7
	mov sl, r0
	ldr r0, [r0]
	bl func_0800F258
	add r1, sp, #0x10
	mov r8, r1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	bl func_080CE184
	mov sb, r0
	movs r2, #0x82
	lsls r2, r2, #1
	adds r6, r7, r2
	ldr r0, [r6]
	mov r1, sb
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808DE94
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	movs r1, #0x11
	add r1, sp
	mov r8, r1
	strb r0, [r1]
	add r0, sp, #0x10
	bl GetId__C7Article
	adds r4, r0, #0
	mov r0, r8
	bl GetId__C7Article
	cmp r4, r0
	bne _0808DE18
	ldr r0, [r6]
	mov r1, sb
	bl GetArticleStackAt__5ShelfUi
	movs r1, #1
	bl AddAmount__12ArticleStackUi
	mov r2, sl
	ldr r0, [r2]
	bl func_0800F390
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sb
	bl GetArticleStackAt__5ShelfUi
	bl GetAmount__C12ArticleStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	b _0808E0DC
_0808DE18:
	ldr r0, [r6]
	mov r1, sb
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #8
	mov r0, sp
	ldrb r1, [r0, #0x10]
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	mov r1, sl
	ldr r0, [r1]
	bl func_0800F390
	mov r2, sl
	ldr r0, [r2]
	mov r2, r8
	ldrb r1, [r2]
	bl func_0800F3E8
	ldr r4, [r7, #0x78]
	ldr r6, _0808DE90 @ =0x086678A0
	mov r0, r8
	bl GetIconId__C7Article
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r6, #0
	movs r3, #1
	bl func_080CBAF0
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	add r0, sp, #0x10
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	b _0808E0D8
	.align 2, 0
_0808DE90: .4byte 0x086678A0
_0808DE94:
	ldr r0, [r6]
	mov r1, sb
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #8
	mov r0, r8
	ldrb r1, [r0]
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	mov r1, sl
	ldr r0, [r1]
	bl func_0800F390
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	b _0808E0B4
_0808DEC6:
	ldr r2, [sp, #0x18]
	cmp r2, #8
	ble _0808DECE
	b _0808E0E8
_0808DECE:
	movs r0, #0x80
	lsls r0, r0, #1
	adds r0, r0, r7
	mov sl, r0
	ldr r4, [r0]
	adds r0, r7, #0
	adds r1, r2, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	bl GetArticle__C12RucksackItem
	movs r1, #0x12
	add r1, sp
	mov r8, r1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	bl func_080CE184
	mov sb, r0
	movs r2, #0x82
	lsls r2, r2, #1
	adds r6, r7, r2
	ldr r0, [r6]
	mov r1, sb
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808DF30
	b _0808E05C
_0808DF30:
	add r0, sp, #4
	bl GetArticle__C12ArticleStack
	movs r1, #0x13
	add r1, sp
	mov r8, r1
	strb r0, [r1]
	mov r0, sp
	adds r0, #0x12
	bl GetId__C7Article
	adds r4, r0, #0
	mov r0, r8
	bl GetId__C7Article
	cmp r4, r0
	bne _0808DFBC
	ldr r0, [r6]
	mov r1, sb
	bl GetArticleStackAt__5ShelfUi
	movs r1, #1
	bl AddAmount__12ArticleStackUi
	mov r2, sl
	ldr r4, [r2]
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0xc
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sb
	bl GetArticleStackAt__5ShelfUi
	bl GetAmount__C12ArticleStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	b _0808E0DC
_0808DFBC:
	ldr r0, [r6]
	mov r1, sb
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #0xc
	mov r0, sp
	ldrb r1, [r0, #0x12]
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	mov r1, sl
	ldr r5, [r1]
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_0800FCDC
	adds r5, r0, #0
	mov r2, r8
	ldrb r1, [r2]
	adds r0, r4, #0
	bl __12RucksackItemG7Article
	ldr r0, [sp, #0xc]
	str r0, [r5]
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, r8
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r0, _0808E058 @ =0x086678A0
	mov r8, r0
	movs r5, #1
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	mov r2, r8
	bl func_080CB304
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, sp
	adds r0, #0x12
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r5, [sp]
	adds r0, r6, #0
	adds r1, r4, #0
	mov r2, r8
	b _0808E0D8
	.align 2, 0
_0808E058: .4byte 0x086678A0
_0808E05C:
	ldr r0, [r6]
	mov r1, sb
	bl GetArticleStackAt__5ShelfUi
	adds r4, r0, #0
	add r5, sp, #0xc
	mov r2, r8
	ldrb r1, [r2]
	adds r0, r5, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #2
	bl memcpy
	mov r0, sl
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	adds r0, r5, #0
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
_0808E0B4:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, r8
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _0808E0E4 @ =0x086678A0
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
_0808E0D8:
	bl func_080CC728
_0808E0DC:
	adds r7, #0x90
	str r7, [sp, #0x20]
	b _0808E426
	.align 2, 0
_0808E0E4: .4byte 0x086678A0
_0808E0E8:
	ldr r1, [sp, #0x18]
	ldr r2, [sp, #0x1c]
	cmp r1, r2
	bne _0808E0F4
	movs r0, #0
	str r0, [sp, #0x1c]
_0808E0F4:
	adds r4, r7, #0
	adds r4, #0x90
	ldr r0, [r4]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	bl func_080CE184
	mov sl, r0
	movs r1, #0x82
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	ldr r0, [r1]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	str r4, [sp, #0x20]
	ldr r2, [sp, #0x1c]
	cmp r2, #0
	beq _0808E12E
	b _0808E27C
_0808E12E:
	movs r0, #0xfc
	adds r0, r0, r7
	mov sb, r0
	ldr r0, [r0]
	bl func_0800F258
	mov r6, sp
	adds r6, #0x15
	strb r0, [r6]
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808E204
	mov r1, r8
	ldr r0, [r1]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	bl GetArticle__C12ArticleStack
	add r6, sp, #0x14
	strb r0, [r6]
	adds r0, r6, #0
	bl GetId__C7Article
	adds r4, r0, #0
	mov r0, sp
	adds r0, #0x15
	bl GetId__C7Article
	cmp r4, r0
	bne _0808E174
	b _0808E426
_0808E174:
	mov r2, sb
	ldr r0, [r2]
	bl func_0800F390
	mov r1, sb
	ldr r0, [r1]
	ldrb r1, [r6]
	bl func_0800F3E8
	mov r2, r8
	ldr r0, [r2]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #8
	mov r0, sp
	ldrb r1, [r0, #0x15]
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r4, [r7, #0x78]
	ldr r1, _0808E200 @ =0x086678A0
	mov r8, r1
	adds r0, r6, #0
	bl GetIconId__C7Article
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	mov r1, r8
	movs r3, #1
	bl func_080CBAF0
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r2, [sp, #0x20]
	ldr r0, [r2]
	bl func_080CF054
	cmp r4, r0
	beq _0808E1DE
	b _0808E426
_0808E1DE:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, sp
	adds r0, #0x15
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	movs r0, #1
	str r0, [sp]
	b _0808E380
	.align 2, 0
_0808E200: .4byte 0x086678A0
_0808E204:
	mov r1, r8
	ldr r0, [r1]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	add r4, sp, #8
	ldrb r1, [r6]
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	mov r2, sb
	ldr r0, [r2]
	bl func_0800F390
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x20]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	beq _0808E24C
	b _0808E426
_0808E24C:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	adds r0, r6, #0
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _0808E278 @ =0x086678A0
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CC728
	b _0808E426
	.align 2, 0
_0808E278: .4byte 0x086678A0
_0808E27C:
	movs r2, #0x80
	lsls r2, r2, #1
	adds r2, r2, r7
	mov sb, r2
	ldr r4, [r2]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	bl GetArticle__C12RucksackItem
	mov r6, sp
	adds r6, #0x17
	strb r0, [r6]
	add r0, sp, #4
	bl IsEmpty__C12ArticleStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808E390
	mov r1, r8
	ldr r0, [r1]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	bl GetArticle__C12ArticleStack
	mov r6, sp
	adds r6, #0x16
	strb r0, [r6]
	adds r0, r6, #0
	bl GetId__C7Article
	adds r4, r0, #0
	mov r0, sp
	adds r0, #0x17
	bl GetId__C7Article
	cmp r4, r0
	bne _0808E2D8
	b _0808E426
_0808E2D8:
	mov r2, sb
	ldr r4, [r2]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r5, r0, #0
	add r4, sp, #8
	ldrb r1, [r6]
	adds r0, r4, #0
	bl __12RucksackItemG7Article
	ldr r0, [sp, #8]
	str r0, [r5]
	mov r1, r8
	ldr r0, [r1]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r5, r0, #0
	mov r2, sp
	ldrb r1, [r2, #0x17]
	adds r0, r4, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r5, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	adds r0, r6, #0
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r0, _0808E38C @ =0x086678A0
	mov r8, r0
	movs r6, #1
	str r6, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, r8
	bl func_080CB304
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x20]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	bne _0808E426
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r0, sp
	adds r0, #0x17
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r6, [sp]
_0808E380:
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, r8
	bl func_080CC728
	b _0808E426
	.align 2, 0
_0808E38C: .4byte 0x086678A0
_0808E390:
	mov r2, r8
	ldr r0, [r2]
	mov r1, sl
	bl GetArticleStackAt__5ShelfUi
	adds r4, r0, #0
	add r5, sp, #8
	ldrb r1, [r6]
	adds r0, r5, #0
	movs r2, #1
	bl __12ArticleStackG7ArticleUi
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #2
	bl memcpy
	mov r0, sb
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	adds r4, r0, #0
	adds r0, r5, #0
	bl __12RucksackItem
	ldr r0, [sp, #8]
	str r0, [r4]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x1c]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x20]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	bne _0808E426
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x18]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	adds r0, r6, #0
	bl GetIconId__C7Article
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r2, _0808E440 @ =0x086678A0
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CC728
_0808E426:
	ldr r2, [sp, #0x20]
	ldr r0, [r2]
	bl func_080CECD0
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808E440: .4byte 0x086678A0

	thumb_func_start func_0808E444
func_0808E444: @ 0x0808E444
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r5, r0, #0
	adds r7, r1, #0
	cmp r7, #0
	bne _0808E4D0
	adds r4, r5, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808E462
	b _0808E648
_0808E462:
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #0
	beq _0808E472
	cmp r0, #1
	beq _0808E494
	b _0808E5FC
_0808E472:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808E488 @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808E48C @ =0x08100120
	ldr r3, _0808E490 @ =0x08100124
	str r7, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	b _0808E63A
	.align 2, 0
_0808E488: .4byte 0x08117ABC
_0808E48C: .4byte 0x08100120
_0808E490: .4byte 0x08100124
_0808E494:
	ldr r0, [r4]
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x10
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808E4B0
	b _0808E5FC
_0808E4B0:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808E4C4 @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808E4C8 @ =0x08100120
	ldr r3, _0808E4CC @ =0x08100124
	str r7, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	b _0808E63A
	.align 2, 0
_0808E4C4: .4byte 0x08117ABC
_0808E4C8: .4byte 0x08100120
_0808E4CC: .4byte 0x08100124
_0808E4D0:
	cmp r7, #8
	bgt _0808E588
	ldr r4, [r5, #0x78]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	adds r1, r0, #0
	movs r2, #0
	ldr r0, [r1, #4]
	cmp r0, #0
	beq _0808E4F8
	ldr r0, [r1, #8]
	cmp r0, #0
	bne _0808E4FA
_0808E4F8:
	movs r2, #1
_0808E4FA:
	adds r6, r2, #0
	cmp r6, #0
	beq _0808E502
	b _0808E648
_0808E502:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r4, [r0]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #0xc]
	add r0, sp, #0xc
	bl GetKind__C12RucksackItem
	cmp r0, #1
	bne _0808E568
	add r0, sp, #0xc
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x11
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808E5FC
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808E55C @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808E560 @ =0x08100120
	ldr r3, _0808E564 @ =0x08100124
	str r6, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	b _0808E63A
	.align 2, 0
_0808E55C: .4byte 0x08117ABC
_0808E560: .4byte 0x08100120
_0808E564: .4byte 0x08100124
_0808E568:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808E57C @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808E580 @ =0x08100120
	ldr r3, _0808E584 @ =0x08100124
	str r6, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	b _0808E63A
	.align 2, 0
_0808E57C: .4byte 0x08117ABC
_0808E580: .4byte 0x08100120
_0808E584: .4byte 0x08100124
_0808E588:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r4, [r0]
	adds r0, r5, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r5, #0
	adds r1, r7, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl GetArticleStackAt__5ShelfUi
	adds r1, r0, #0
	add r0, sp, #0xc
	movs r2, #2
	bl memcpy
	ldr r4, [r5, #0x7c]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CC70C
	adds r1, r0, #0
	movs r2, #0
	ldr r0, [r1, #4]
	cmp r0, #0
	beq _0808E5D8
	ldr r0, [r1, #8]
	cmp r0, #0
	bne _0808E5DA
_0808E5D8:
	movs r2, #1
_0808E5DA:
	cmp r2, #0
	bne _0808E648
	add r0, sp, #0xc
	bl GetArticle__C12ArticleStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x12
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0
	beq _0808E628
_0808E5FC:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808E624 @ =0x08117ADC
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #4
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	b _0808E648
	.align 2, 0
_0808E624: .4byte 0x08117ADC
_0808E628:
	adds r0, r5, #0
	adds r0, #0x80
	ldr r1, _0808E650 @ =0x08117ABC
	ldr r1, [r1]
	ldr r2, _0808E654 @ =0x08100120
	ldr r3, _0808E658 @ =0x08100124
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
_0808E63A:
	bl func_08050E30
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #3
	str r0, [r1]
_0808E648:
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808E650: .4byte 0x08117ABC
_0808E654: .4byte 0x08100120
_0808E658: .4byte 0x08100124

	thumb_func_start func_0808E65C
func_0808E65C: @ 0x0808E65C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r1, #0
	cmp r6, #0
	bne _0808E678
	adds r0, #0xfc
	ldr r0, [r0]
	bl func_0800F390
	ldr r0, [r5, #0x78]
	bl func_080CC0B4
	b _0808E6F4
_0808E678:
	cmp r6, #8
	bgt _0808E6AE
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r4, [r0]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	mov r0, sp
	adds r1, r4, #0
	bl func_0800FCE4
	ldr r4, [r5, #0x78]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	b _0808E6F4
_0808E6AE:
	adds r0, r5, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r5, #0
	adds r1, r6, #0
	bl func_080CE184
	adds r1, r0, #0
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r0, [r0]
	bl GetArticleStackAt__5ShelfUi
	adds r4, r0, #0
	mov r0, sp
	bl __12ArticleStack
	adds r0, r4, #0
	mov r1, sp
	movs r2, #2
	bl memcpy
	ldr r4, [r5, #0x7c]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
_0808E6F4:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start func_0808E6FC
func_0808E6FC: @ 0x0808E6FC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080CE294
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	bl func_0800F5F8
	mov r8, r0
	movs r0, #0xa7
	lsls r0, r0, #2
	bl __builtin_new
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _0808E968 @ =0x08100128
	str r0, [sp]
	add r4, sp, #4
	movs r0, #1
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, r8
	bl func_080CAFC4
	adds r6, r7, #0
	adds r6, #0x78
	adds r5, r0, #0
	ldr r1, [r7, #0x78]
	mov sb, r4
	cmp r5, r1
	beq _0808E774
	cmp r1, #0
	beq _0808E774
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808E774:
	str r5, [r6]
	ldr r0, [r7, #0x78]
	bl func_080CB090
	adds r0, r7, #0
	mov r1, r8
	bl func_0808C664
	movs r0, #0xcb
	lsls r0, r0, #2
	bl __builtin_new
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _0808E96C @ =0x08100130
	str r0, [sp]
	movs r0, #0
	mov r1, sb
	strb r0, [r1]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl func_080CC15C
	adds r5, r7, #0
	adds r5, #0x7c
	adds r4, r0, #0
	ldr r1, [r7, #0x7c]
	cmp r4, r1
	beq _0808E7D4
	cmp r1, #0
	beq _0808E7D4
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808E7D4:
	str r4, [r5]
	ldr r0, [r7, #0x7c]
	bl func_080CC310
	movs r0, #0xc8
	bl __builtin_new
	adds r1, r7, #0
	bl func_080CE2FC
	adds r4, r7, #0
	adds r4, #0x94
	adds r5, r0, #0
	ldr r0, [r4]
	str r4, [sp, #0x18]
	cmp r5, r0
	beq _0808E800
	cmp r0, #0
	beq _0808E800
	movs r1, #3
	bl func_080CE3DC
_0808E800:
	str r5, [r4]
	ldr r1, [sp, #0x18]
	ldr r0, [r1]
	adds r0, #0xbc
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_0808C840
	ldr r2, [sp, #0x18]
	ldr r0, [r2]
	bl func_080CE598
	movs r0, #0x8c
	bl __builtin_new
	adds r1, r7, #0
	movs r2, #1
	bl func_080CD9B0
	movs r1, #0x8c
	adds r1, r1, r7
	mov r8, r1
	mov sb, r0
	ldr r5, [r1]
	mov r6, r8
	cmp sb, r5
	beq _0808E86A
	cmp r5, #0
	beq _0808E86A
	ldr r0, _0808E970 @ =vtable_unk_080E5A28
	str r0, [r5, #0x24]
	adds r4, r5, #0
	adds r4, #0x1c
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	adds r0, r5, #0
	bl __builtin_delete
_0808E86A:
	mov r2, sb
	mov r0, r8
	str r2, [r0]
	movs r0, #0x88
	bl __builtin_new
	adds r1, r7, #0
	bl func_080CEC00
	movs r1, #0x90
	adds r1, r1, r7
	mov r8, r1
	mov sl, r0
	ldr r5, [r1]
	mov sb, r8
	cmp sl, r5
	beq _0808E8C0
	cmp r5, #0
	beq _0808E8C0
	adds r4, r5, #0
	adds r4, #0x74
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	ldr r0, _0808E970 @ =vtable_unk_080E5A28
	str r0, [r5, #4]
	adds r0, r5, #0
	bl __builtin_delete
_0808E8C0:
	mov r2, sl
	mov r0, r8
	str r2, [r0]
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808C8F4
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #0x10
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0808E974 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0x14]
	ldr r1, _0808E978 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x14]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r1, #0
	mov r8, r1
_0808E926:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	adds r0, r7, #0
	bl func_080CE2C4
	ldr r3, [sp, #0x14]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0808E926
	mov r2, r8
	cmp r2, #0
	beq _0808E94C
	b _0808ECBC
_0808E94C:
	ldr r0, [r6]
	ldr r5, [r0, #4]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #4
	bhi _0808E926
	lsls r0, r0, #2
	ldr r1, _0808E97C @ =_0808E980
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808E968: .4byte 0x08100128
_0808E96C: .4byte 0x08100130
_0808E970: .4byte vtable_unk_080E5A28
_0808E974: .4byte vtable_unk_080E5B80
_0808E978: .4byte 0x00000889
_0808E97C: .4byte _0808E980
_0808E980: @ jump table
	.4byte _0808E994 @ case 0
	.4byte _0808EBF2 @ case 1
	.4byte _0808EC28 @ case 2
	.4byte _0808EC66 @ case 3
	.4byte _0808EC9A @ case 4
_0808E994:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0808E9BC
	ldr r0, [r6]
	ldr r0, [r0, #4]
	cmp r0, #9
	ble _0808E9B4
	cmp r0, #0xd
	bgt _0808E9B4
	adds r0, r7, #0
	bl func_0808C8D8
_0808E9B4:
	ldr r0, [r6]
	bl func_080CDA44
	b _0808EA3A
_0808E9BC:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0808E9E0
	ldr r0, [r6]
	ldr r0, [r0, #4]
	cmp r0, #0xd
	ble _0808E9D8
	adds r0, r7, #0
	bl func_0808C8BC
_0808E9D8:
	ldr r0, [r6]
	bl func_080CDB08
	b _0808EA3A
_0808E9E0:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0808E9F6
	ldr r0, [r6]
	bl func_080CDCD0
	b _0808EA3A
_0808E9F6:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0808EA0C
	ldr r0, [r6]
	bl func_080CDC00
	b _0808EA3A
_0808EA0C:
	movs r4, #0
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _0808EA2E
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0808EA30
_0808EA2E:
	movs r4, #1
_0808EA30:
	cmp r4, #0
	beq _0808EA46
	ldr r0, [r6]
	bl func_080CDD7C
_0808EA3A:
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xcb
	bl func_08008B6C
	b _0808EBE0
_0808EA46:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0808EA56
	b _0808EB6E
_0808EA56:
	mov r2, sb
	ldr r3, [r2]
	adds r0, r3, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808EA86
	ldr r0, [r6]
	ldr r1, [r0, #4]
	cmp r1, #8
	bgt _0808EA76
	adds r0, r3, #0
	movs r2, #0
	bl func_080CEC84
	b _0808EBE0
_0808EA76:
	ldr r2, [sp, #0x18]
	ldr r0, [r2]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r3, #0
	bl func_080CEC84
	b _0808EBE0
_0808EA86:
	ldr r0, [r6]
	ldr r4, [r0, #4]
	adds r0, r3, #0
	bl func_080CF050
	cmp r4, r0
	bne _0808EB1E
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	cmp r0, #9
	ble _0808EAD6
	ldr r2, [sp, #0x18]
	ldr r0, [r2]
	adds r0, #0xbc
	ldr r4, [r0]
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	beq _0808EAD6
	mov r2, sb
	ldr r0, [r2]
	bl func_080CF050
	adds r1, r0, #0
	ldr r0, [r6]
	ldr r2, [r0, #4]
	adds r0, r7, #0
	bl func_0808CEC4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808EAF8
	movs r2, #0x84
	lsls r2, r2, #1
	adds r0, r7, r2
	b _0808EB5C
_0808EAD6:
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	adds r4, r0, #0
	mov r2, sb
	ldr r0, [r2]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r4, #0
	bl func_0808C9D0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808EB16
_0808EAF8:
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808C8F4
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	mov r1, sb
	ldr r0, [r1]
	bl func_080CECD0
	b _0808EBE0
_0808EB16:
	movs r2, #0x84
	lsls r2, r2, #1
	adds r0, r7, r2
	b _0808EB5C
_0808EB1E:
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	adds r1, r0, #0
	ldr r0, [r6]
	ldr r2, [r0, #4]
	adds r0, r7, #0
	bl func_0808CEC4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808EB56
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808C8F4
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	mov r2, sb
	ldr r0, [r2]
	bl func_080CECD0
	b _0808EBE0
_0808EB56:
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
_0808EB5C:
	ldr r0, [r0]
	cmp r0, #1
	beq _0808EBE0
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	b _0808EBE0
_0808EB6E:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _0808EBC8
	mov r2, sb
	ldr r1, [r2]
	adds r0, r1, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808EB92
	adds r0, r1, #0
	bl func_080CECD0
	b _0808EBE0
_0808EB92:
	ldr r2, [sp, #0x14]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _0808EBE0
	movs r0, #1
	mov r8, r0
	ldr r1, _0808EBC4 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x14]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	b _0808EBE0
	.align 2, 0
_0808EBC4: .4byte 0x00000889
_0808EBC8:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0808EBE0
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808E444
_0808EBE0:
	ldr r0, [r6]
	ldr r1, [r0, #4]
	cmp r5, r1
	bne _0808EBEA
	b _0808E926
_0808EBEA:
	adds r0, r7, #0
	bl func_0808C8F4
	b _0808E926
_0808EBF2:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _0808EBFE
	b _0808E926
_0808EBFE:
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808EC20 @ =0x08100120
	ldr r2, _0808EC24 @ =0x08100124
	movs r3, #0
	str r3, [sp]
	str r3, [sp, #4]
	str r3, [sp, #8]
	str r3, [sp, #0xc]
	bl func_08050E0C
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #2
	str r0, [r1]
	b _0808E926
	.align 2, 0
_0808EC20: .4byte 0x08100120
_0808EC24: .4byte 0x08100124
_0808EC28:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _0808EC34
	b _0808E926
_0808EC34:
	adds r0, r7, #0
	adds r0, #0x80
	bl func_08050DF0
	cmp r0, #1
	beq _0808EC46
	cmp r0, #2
	beq _0808EC5C
	b _0808ECA6
_0808EC46:
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	adds r1, r0, #0
	ldr r0, [r6]
	ldr r2, [r0, #4]
	adds r0, r7, #0
	bl func_0808DD54
	b _0808ECA6
_0808EC5C:
	mov r2, sb
	ldr r0, [r2]
	bl func_080CECD0
	b _0808ECA6
_0808EC66:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _0808EC72
	b _0808E926
_0808EC72:
	adds r0, r7, #0
	adds r0, #0x80
	bl func_08050DF0
	cmp r0, #1
	bne _0808EC88
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808E65C
_0808EC88:
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808C8F4
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	b _0808ECB6
_0808EC9A:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _0808ECA6
	b _0808E926
_0808ECA6:
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808C8F4
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
_0808ECB6:
	movs r0, #0
	str r0, [r1]
	b _0808E926
_0808ECBC:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0808ECD8
func_0808ECD8: @ 0x0808ECD8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _0808ED04 @ =vtable_unk_080E7D90
	str r0, [r4]
	movs r0, #0x86
	lsls r0, r0, #1
	bl __builtin_new
	adds r1, r5, #0
	bl func_0808C5F8
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0808ED04: .4byte vtable_unk_080E7D90

	thumb_func_start func_0808ED08
func_0808ED08: @ 0x0808ED08
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0808ED44 @ =vtable_unk_080E7D90
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0808ED24
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808ED24:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0808ED36
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0808ED36:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808ED44: .4byte vtable_unk_080E7D90

	thumb_func_start func_0808ED48
func_0808ED48: @ 0x0808ED48
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_0808E6FC
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0808ED64
func_0808ED64: @ 0x0808ED64
	push {r4, r5, lr}
	adds r4, r0, #0
	bl func_080CE19C
	ldr r0, _0808EDB0 @ =vtable_unk_080E7DA0
	str r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x98
	movs r3, #0
	strb r3, [r0]
	adds r2, r4, #0
	adds r2, #0xfc
	ldr r1, [r4, #8]
	ldr r5, _0808EDB4 @ =0x00001C34
	adds r0, r1, r5
	str r0, [r2]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r2, r4, r0
	adds r5, #4
	adds r0, r1, r5
	str r0, [r2]
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r4, r2
	movs r5, #0xe0
	lsls r5, r5, #2
	adds r1, r1, r5
	str r1, [r0]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r4, r1
	str r3, [r0]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0808EDB0: .4byte vtable_unk_080E7DA0
_0808EDB4: .4byte 0x00001C34

	thumb_func_start func_0808EDB8
func_0808EDB8: @ 0x0808EDB8
	push {lr}
	ldr r2, _0808EDC8 @ =vtable_unk_080E7DA0
	str r2, [r0, #4]
	bl func_080E3504
	pop {r0}
	bx r0
	.align 2, 0
_0808EDC8: .4byte vtable_unk_080E7DA0

	thumb_func_start func_0808EDCC
func_0808EDCC: @ 0x0808EDCC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r5, r0, #0
	mov r8, r1
	movs r7, #0
	cmp r1, #0
	beq _0808EE3E
_0808EDDE:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	adds r1, r7, #0
	bl func_0800FE18
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808EE38
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	ldr r0, [r5, #8]
	ldr r2, _0808EE94 @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E550
	adds r1, r0, #0
	add r0, sp, #8
	strb r1, [r0]
	bl GetIconId__C4Tool
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r4, [r5, #0x78]
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r7, #0
	ldr r2, _0808EE98 @ =0x086678A0
	adds r3, r6, #0
	bl func_080CB304
_0808EE38:
	adds r7, #1
	cmp r7, r8
	blo _0808EDDE
_0808EE3E:
	adds r7, r5, #0
	adds r7, #0xfc
	ldr r0, [r7]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808EE86
	ldr r0, [r7]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	ldr r0, [r5, #8]
	ldr r2, _0808EE94 @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #9
	strb r1, [r0]
	bl GetIconId__C4Tool
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r4, [r5, #0x78]
	ldr r5, _0808EE98 @ =0x086678A0
	ldr r0, [r7]
	bl GetAmount__C9ToolStack
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_080CBAF0
_0808EE86:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808EE94: .4byte 0x00001BD8
_0808EE98: .4byte 0x086678A0

	thumb_func_start func_0808EE9C
func_0808EE9C: @ 0x0808EE9C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r1
	movs r7, #0
_0808EEAA:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r0, [r0]
	mov r2, r8
	lsls r1, r2, #3
	adds r1, r1, r7
	bl GetToolStackAt__9ToolChestUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808EF14
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	ldr r0, [r6, #8]
	ldr r2, _0808EF0C @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E550
	adds r1, r0, #0
	add r0, sp, #8
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r5, [r6, #0x7c]
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r7, #0
	ldr r2, _0808EF10 @ =0x086678A0
	adds r3, r4, #0
	bl func_080CC728
	b _0808EF1C
	.align 2, 0
_0808EF0C: .4byte 0x00001BD8
_0808EF10: .4byte 0x086678A0
_0808EF14:
	ldr r0, [r6, #0x7c]
	adds r1, r7, #0
	bl func_080CCDEC
_0808EF1C:
	adds r7, #1
	cmp r7, #7
	bls _0808EEAA
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0808EF30
func_0808EF30: @ 0x0808EF30
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x94
	ldr r0, [r0]
	bl func_080CEB80
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0808EE9C
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0808EF4C
func_0808EF4C: @ 0x0808EF4C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x94
	ldr r0, [r0]
	bl func_080CEBC0
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0808EE9C
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0808EF68
func_0808EF68: @ 0x0808EF68
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r6, r0, #0
	adds r7, r1, #0
	movs r0, #0
	mov sb, r0
	cmp r7, #0
	bne _0808EFA6
	adds r5, r6, #0
	adds r5, #0xfc
	ldr r0, [r5]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808F048
	adds r4, r6, #0
	adds r4, #0x98
	ldr r0, [r5]
	bl GetTool__C9ToolStack
	mov r1, sp
	strb r0, [r1]
	adds r0, r6, #0
	adds r1, r4, #0
	mov r2, sp
	movs r3, #1
	b _0808F042
_0808EFA6:
	cmp r7, #9
	beq _0808F048
	cmp r7, #8
	bgt _0808EFFE
	movs r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r6
	mov r8, r1
	ldr r4, [r1]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808F048
	adds r5, r6, #0
	adds r5, #0x98
	mov r0, r8
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetTool__C9ToolStack
	mov r2, sp
	adds r2, #1
	strb r0, [r2]
	adds r0, r6, #0
	adds r1, r5, #0
	b _0808F040
_0808EFFE:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r4, [r0]
	adds r0, r6, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl GetToolStackAt__9ToolChestUi
	adds r5, r0, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808F048
	adds r4, r6, #0
	adds r4, #0x98
	adds r0, r5, #0
	bl GetTool__C9ToolStack
	mov r2, sp
	adds r2, #2
	strb r0, [r2]
	adds r0, r6, #0
	adds r1, r4, #0
_0808F040:
	movs r3, #0
_0808F042:
	bl func_080CF05C
	mov sb, r0
_0808F048:
	mov r0, sb
	cmp r0, #0
	beq _0808F05E
	adds r0, r6, #0
	adds r0, #0x80
	mov r1, sb
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	b _0808F06C
_0808F05E:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _0808F07C @ =0x08100144
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
_0808F06C:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808F07C: .4byte 0x08100144

	thumb_func_start func_0808F080
func_0808F080: @ 0x0808F080
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x44
	adds r7, r0, #0
	mov sb, r1
	str r2, [sp, #0x34]
	movs r0, #1
	str r0, [sp, #0x38]
	cmp r1, #0
	bne _0808F09C
	b _0808F766
_0808F09C:
	cmp r1, #8
	ble _0808F0A2
	b _0808F3CE
_0808F0A2:
	adds r4, r7, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	mov sl, r4
	cmp r0, #0
	beq _0808F136
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	movs r1, #0
	ldr r0, [sp, #8]
	cmp r0, #0
	beq _0808F0DC
	ldr r0, [sp, #0xc]
	cmp r0, #0
	bne _0808F0DE
_0808F0DC:
	movs r1, #1
_0808F0DE:
	cmp r1, #0
	beq _0808F0E4
	b _0808F766
_0808F0E4:
	ldr r4, [r7, #0x78]
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	bl func_080CAD14
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_080CBDD4
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	add r5, sp, #0x10
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_0800FE24
	mov r2, sl
	ldr r0, [r2]
	adds r1, r5, #0
	b _0808F6C2
_0808F136:
	ldr r0, [r7, #0x78]
	bl func_080CB2FC
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r5, sp, #0x14
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	adds r1, r5, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r4, sp, #0x20
	mov r3, sl
	ldr r1, [r3]
	adds r0, r4, #0
	movs r2, #2
	bl memcpy
	adds r0, r4, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080CE1C4
	lsls r0, r0, #0x18
	mov r8, r5
	cmp r0, #0
	beq _0808F1A8
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808F1A4 @ =0x08117B10
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r4, #0x84
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r1, [sp, #0x38]
	str r1, [r0]
	movs r2, #0
	str r2, [sp, #0x38]
	b _0808F766
	.align 2, 0
_0808F1A4: .4byte 0x08117B10
_0808F1A8:
	movs r1, #0
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _0808F1B6
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	bne _0808F1B8
_0808F1B6:
	movs r1, #1
_0808F1B8:
	cmp r1, #0
	beq _0808F1BE
	b _0808F36C
_0808F1BE:
	add r6, sp, #0x24
	movs r3, #0x80
	lsls r3, r3, #1
	adds r3, r7, r3
	str r3, [sp, #0x3c]
	ldr r4, [r3]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r0, #0
	adds r0, r6, #0
	movs r2, #2
	bl memcpy
	add r5, sp, #0x20
	adds r0, r5, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x2c
	strb r1, [r0]
	bl GetId__C4Tool
	adds r4, r0, #0
	adds r0, r6, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x2d
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #0
	cmp r4, r0
	bne _0808F214
	movs r1, #1
_0808F214:
	cmp r1, #0
	beq _0808F2EA
	adds r0, r5, #0
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r5, r1, r0
	adds r0, r6, #0
	bl GetAmount__C9ToolStack
	cmp r5, r0
	blo _0808F27E
	mov r0, sl
	ldr r4, [r0]
	adds r0, r6, #0
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9ToolStackUi
	ldr r1, [sp, #0x3c]
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	add r0, sp, #0x28
	adds r1, r4, #0
	bl func_0800FE24
	ldr r4, [r7, #0x78]
	mov r2, sl
	ldr r0, [r2]
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB9DC
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	b _0808F766
_0808F27E:
	mov r3, sl
	ldr r0, [r3]
	adds r1, r5, #0
	bl AddAmount__9ToolStackUi
	ldr r0, [sp, #0x3c]
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	bl SubtractAmount__9ToolStackUi
	ldr r4, [r7, #0x78]
	mov r1, sl
	ldr r0, [r1]
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB9DC
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	ldr r2, [sp, #0x3c]
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	b _0808F766
_0808F2EA:
	ldr r4, [r7, #0x78]
	ldr r5, [sp, #0x18]
	ldr r6, [sp, #0x1c]
	mov r0, r8
	bl func_080CAD14
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_080CBDD4
	ldr r3, [r7, #0x78]
	mov r8, r3
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	mov r4, sl
	ldr r6, [r4]
	ldr r0, [sp, #0x3c]
	ldr r5, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	add r4, sp, #0x28
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_0800FE24
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r1, [sp, #0x3c]
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	add r1, sp, #0x20
	b _0808F6C2
_0808F36C:
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r2, [r7, #0x78]
	mov r8, r2
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	mov r4, sl
	ldr r1, [r4]
	movs r2, #2
	bl memcpy
	ldr r5, [r4]
	add r4, sp, #0x24
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	b _0808F6C2
_0808F3CE:
	adds r0, r7, #0
	mov r1, sb
	ldr r2, [sp, #0x34]
	bl func_080CE184
	str r0, [sp, #0x40]
	movs r0, #0x82
	lsls r0, r0, #1
	adds r0, r0, r7
	mov sl, r0
	ldr r0, [r0]
	ldr r1, [sp, #0x40]
	bl GetToolStackAt__9ToolChestUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	movs r1, #0xfc
	adds r1, r1, r7
	mov r8, r1
	ldr r0, [r1]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808F498
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808F414
	b _0808F766
_0808F414:
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r6, r0, #0
	mov r2, r8
	ldr r0, [r2]
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	mov r3, sl
	ldr r0, [r3]
	ldr r1, [sp, #0x40]
	bl GetToolStackAt__9ToolChestUi
	adds r5, r0, #0
	add r4, sp, #8
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r0, [r7, #8]
	ldr r4, _0808F490 @ =0x00001BD8
	adds r0, r0, r4
	adds r1, r6, #0
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x2e
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r5, [r7, #0x78]
	ldr r6, _0808F494 @ =0x086678A0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	adds r3, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl func_080CBAF0
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r0, [r0]
	ldr r1, [sp, #0x34]
	cmp r0, r1
	beq _0808F48C
	b _0808F766
_0808F48C:
	b _0808F586
	.align 2, 0
_0808F490: .4byte 0x00001BD8
_0808F494: .4byte 0x086678A0
_0808F498:
	mov r2, r8
	ldr r0, [r2]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080CE1C4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808F4D4
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808F4D0 @ =0x08117B10
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r3, #0x84
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r4, [sp, #0x38]
	str r4, [r0]
	movs r0, #0
	str r0, [sp, #0x38]
	b _0808F766
	.align 2, 0
_0808F4D0: .4byte 0x08117B10
_0808F4D4:
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808F4E2
	b _0808F6D4
_0808F4E2:
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x2f
	strb r1, [r0]
	bl GetId__C4Tool
	adds r4, r0, #0
	mov r1, r8
	ldr r0, [r1]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x30
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #0
	cmp r4, r0
	bne _0808F510
	movs r1, #1
_0808F510:
	cmp r1, #0
	beq _0808F60A
	mov r2, r8
	ldr r0, [r2]
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r4, r1, r0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	cmp r4, r0
	blo _0808F59C
	mov r3, r8
	ldr r4, [r3]
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9ToolStackUi
	mov r4, sl
	ldr r0, [r4]
	ldr r1, [sp, #0x40]
	bl GetToolStackAt__9ToolChestUi
	adds r5, r0, #0
	add r4, sp, #8
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r4, [r7, #0x78]
	mov r1, r8
	ldr r0, [r1]
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB9DC
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	adds r0, r7, #0
	adds r0, #0x90
	ldr r0, [r0]
	bl func_080CF054
	cmp r4, r0
	beq _0808F586
	b _0808F766
_0808F586:
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	b _0808F766
_0808F59C:
	mov r2, r8
	ldr r0, [r2]
	adds r1, r4, #0
	bl AddAmount__9ToolStackUi
	mov r3, sl
	ldr r0, [r3]
	ldr r1, [sp, #0x40]
	bl GetToolStackAt__9ToolChestUi
	adds r1, r4, #0
	bl SubtractAmount__9ToolStackUi
	ldr r4, [r7, #0x78]
	mov r1, r8
	ldr r0, [r1]
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB9DC
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	adds r0, r7, #0
	adds r0, #0x90
	ldr r0, [r0]
	bl func_080CF054
	cmp r4, r0
	beq _0808F5E2
	b _0808F766
_0808F5E2:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r2, sl
	ldr r0, [r2]
	ldr r1, [sp, #0x40]
	bl GetToolStackAt__9ToolChestUi
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	b _0808F766
_0808F60A:
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r4, r0, #0
	mov r3, r8
	ldr r0, [r3]
	bl GetTool__C9ToolStack
	adds r6, r0, #0
	ldr r0, [r7, #8]
	ldr r1, _0808F6CC @ =0x00001BD8
	adds r0, r0, r1
	adds r1, r4, #0
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x31
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r5, [r7, #0x78]
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	adds r3, r0, #0
	adds r0, r5, #0
	ldr r1, _0808F6D0 @ =0x086678A0
	adds r2, r4, #0
	bl func_080CBAF0
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	adds r0, r7, #0
	adds r0, #0x90
	ldr r0, [r0]
	bl func_080CF054
	cmp r4, r0
	bne _0808F6A8
	ldr r0, [r7, #8]
	ldr r2, _0808F6CC @ =0x00001BD8
	adds r0, r0, r2
	adds r1, r6, #0
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x32
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r3, r8
	ldr r0, [r3]
	bl GetAmount__C9ToolStack
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	ldr r2, _0808F6D0 @ =0x086678A0
	adds r3, r4, #0
	bl func_080CC728
_0808F6A8:
	mov r4, sl
	ldr r0, [r4]
	ldr r1, [sp, #0x40]
	bl GetToolStackAt__9ToolChestUi
	mov r2, r8
	ldr r1, [r2]
	movs r2, #2
	bl memcpy
	mov r3, r8
	ldr r0, [r3]
	add r1, sp, #4
_0808F6C2:
	movs r2, #2
	bl memcpy
	b _0808F766
	.align 2, 0
_0808F6CC: .4byte 0x00001BD8
_0808F6D0: .4byte 0x086678A0
_0808F6D4:
	mov r4, r8
	ldr r0, [r4]
	bl GetTool__C9ToolStack
	adds r5, r0, #0
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	adds r0, r7, #0
	adds r0, #0x90
	ldr r0, [r0]
	bl func_080CF054
	cmp r4, r0
	bne _0808F73E
	ldr r0, [r7, #8]
	ldr r1, _0808F77C @ =0x00001BD8
	adds r0, r0, r1
	adds r1, r5, #0
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x33
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r2, r8
	ldr r0, [r2]
	bl GetAmount__C9ToolStack
	ldr r2, _0808F780 @ =0x086678A0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r3, r4, #0
	bl func_080CC728
_0808F73E:
	mov r3, sl
	ldr r0, [r3]
	ldr r1, [sp, #0x40]
	bl GetToolStackAt__9ToolChestUi
	mov r4, r8
	ldr r1, [r4]
	movs r2, #2
	bl memcpy
	ldr r5, [r4]
	add r4, sp, #8
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
_0808F766:
	add r1, sp, #0x38
	ldrb r0, [r1]
	add sp, #0x44
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808F77C: .4byte 0x00001BD8
_0808F780: .4byte 0x086678A0

	thumb_func_start func_0808F784
func_0808F784: @ 0x0808F784
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x74
	adds r7, r0, #0
	str r1, [sp, #0x48]
	mov sb, r2
	movs r0, #1
	str r0, [sp, #0x4c]
	cmp r2, #0
	bne _0808F7B0
	adds r0, r7, #0
	adds r0, #0x90
	ldr r0, [r0]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	b _0808F7C4
_0808F7B0:
	ldr r1, [sp, #0x48]
	cmp r1, #0
	beq _0808F7B8
	b _0808FA38
_0808F7B8:
	mov r2, sb
	cmp r2, #8
	bgt _0808F7D2
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
_0808F7C4:
	bl func_0808F080
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x4c]
	bl _080908B0
_0808F7D2:
	ldr r0, [r7, #0x78]
	bl func_080CB2FC
	add r1, sp, #4
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r3, sp, #0x10
	mov r8, r3
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CC70C
	mov r1, r8
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r6, sp, #0x1c
	adds r4, r7, #0
	adds r4, #0xfc
	ldr r1, [r4]
	adds r0, r6, #0
	movs r2, #2
	bl memcpy
	adds r0, r7, #0
	adds r0, #0x94
	str r0, [sp, #0x50]
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sb
	bl func_080CE184
	mov sl, r0
	add r5, sp, #0x20
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #2
	bl memcpy
	ldr r0, [r4]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	mov r8, r4
	cmp r0, #0
	beq _0808F85E
	ldr r2, [sp, #0x50]
	ldr r0, [r2]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sb
	bl func_0808F080
	bl _080908B0
_0808F85E:
	add r0, sp, #0x1c
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080CE1C4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808F898
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _0808F894 @ =0x08117B10
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r3, #0x84
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r4, [sp, #0x4c]
	str r4, [r0]
	movs r0, #0
	str r0, [sp, #0x4c]
	bl _080908B0
	.align 2, 0
_0808F894: .4byte 0x08117B10
_0808F898:
	movs r1, #0
	ldr r0, [sp, #0x14]
	cmp r0, #0
	beq _0808F8A6
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _0808F8A8
_0808F8A6:
	movs r1, #1
_0808F8A8:
	cmp r1, #0
	beq _0808F8AE
	b _0808F9EE
_0808F8AE:
	add r0, sp, #0x1c
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x34
	strb r1, [r0]
	bl GetId__C4Tool
	adds r4, r0, #0
	adds r6, r5, #0
	adds r0, r6, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x35
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #0
	cmp r4, r0
	bne _0808F8DC
	movs r1, #1
_0808F8DC:
	cmp r1, #0
	beq _0808F99C
	adds r0, r6, #0
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r4, r1, r0
	add r0, sp, #0x1c
	bl GetAmount__C9ToolStack
	cmp r4, r0
	blo _0808F956
	movs r1, #0x82
	lsls r1, r1, #1
	adds r6, r7, r1
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	adds r4, r0, #0
	add r0, sp, #0x1c
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9ToolStackUi
	mov r2, r8
	ldr r5, [r2]
	add r4, sp, #0x24
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	bl _080908B0
_0808F956:
	movs r3, #0x82
	lsls r3, r3, #1
	adds r6, r7, r3
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	adds r1, r4, #0
	bl AddAmount__9ToolStackUi
	mov r1, r8
	ldr r0, [r1]
	adds r1, r4, #0
	bl SubtractAmount__9ToolStackUi
	ldr r4, [r7, #0x78]
	mov r2, r8
	ldr r0, [r2]
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB9DC
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sl
	bl _080907D6
_0808F99C:
	mov r3, r8
	ldr r0, [r3]
	adds r1, r5, #0
	movs r2, #2
	bl memcpy
	movs r4, #0x82
	lsls r4, r4, #1
	adds r0, r7, r4
	ldr r0, [r0]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	add r1, sp, #0x1c
	movs r2, #2
	bl memcpy
	ldr r4, [r7, #0x78]
	ldr r5, [sp, #0x14]
	ldr r6, [sp, #0x18]
	add r0, sp, #0x10
	bl func_080CAD14
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_080CBDD4
	ldr r0, [r7, #0x7c]
	mov r8, r0
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	b _080900E2
_0808F9EE:
	mov r1, r8
	ldr r5, [r1]
	add r4, sp, #0x24
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	add r1, sp, #0x1c
	movs r2, #2
	bl memcpy
	ldr r0, [r7, #0x78]
	bl func_080CC0B4
	ldr r3, [r7, #0x7c]
	mov r8, r3
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #8]
	ldr r6, [sp, #0xc]
	add r0, sp, #4
	b _080900E2
_0808FA38:
	ldr r4, [sp, #0x48]
	cmp r4, #8
	ble _0808FA40
	b _080900F6
_0808FA40:
	mov r0, sb
	cmp r0, #8
	ble _0808FA48
	b _0808FDAE
_0808FA48:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	ldr r4, [r1]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r5, sp, #8
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #2
	bl memcpy
	mov r3, sp
	adds r3, #0xc
	str r3, [sp, #0x54]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	ldr r1, [sp, #0x54]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r4, sp, #0x28
	mov sl, r4
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	mov r1, sl
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808FAEA
	adds r0, r5, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808FAEA
	bl _080908B0
_0808FAEA:
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808FB58
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	movs r2, #2
	bl memcpy
	mov r1, r8
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	add r0, sp, #0x18
	adds r1, r4, #0
	bl func_0800FE24
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r2, [r7, #0x78]
	mov r8, r2
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #0x2c]
	ldr r6, [sp, #0x30]
	mov r0, sl
	b _0808FED2
_0808FB58:
	adds r0, r5, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808FBC6
	mov r3, r8
	ldr r4, [r3]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	add r0, sp, #0x18
	adds r1, r4, #0
	bl func_0800FE24
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r1, [r7, #0x78]
	mov r8, r1
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #0x10]
	ldr r6, [sp, #0x14]
	ldr r0, [sp, #0x54]
	b _0808FED2
_0808FBC6:
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x36
	strb r1, [r0]
	bl GetId__C4Tool
	adds r4, r0, #0
	adds r0, r5, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x37
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #0
	cmp r4, r0
	bne _0808FBF4
	movs r1, #1
_0808FBF4:
	cmp r1, #0
	bne _0808FBFA
	b _0808FD32
_0808FBFA:
	adds r0, r5, #0
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r5, r1, r0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	cmp r5, r0
	bls _0808FC92
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r4, r0, #0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9ToolStackUi
	mov r3, r8
	ldr r4, [r3]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r5, r0, #0
	add r4, sp, #0x18
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	b _0808FFE8
_0808FC92:
	mov r1, r8
	ldr r4, [r1]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	bl AddAmount__9ToolStackUi
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	bl SubtractAmount__9ToolStackUi
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r3, r8
	ldr r4, [r3]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	bl _080908B0
_0808FD32:
	mov r1, r8
	ldr r4, [r1]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	movs r2, #2
	bl memcpy
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	ldr r3, [r7, #0x78]
	mov r8, r3
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #0x2c]
	ldr r6, [sp, #0x30]
	mov r0, sl
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	ldr r4, [r7, #0x78]
	mov r8, r4
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #0x10]
	ldr r6, [sp, #0x14]
	ldr r0, [sp, #0x54]
	b _0808FED2
_0808FDAE:
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sb
	bl func_080CE184
	str r0, [sp, #0x58]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r0, r0, r7
	mov r8, r0
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r5, sp, #8
	movs r1, #0x82
	lsls r1, r1, #1
	adds r1, r1, r7
	mov sl, r1
	ldr r0, [r1]
	ldr r1, [sp, #0x58]
	bl GetToolStackAt__9ToolChestUi
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #2
	bl memcpy
	mov r2, sp
	adds r2, #0xc
	str r2, [sp, #0x5c]
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	ldr r1, [sp, #0x5c]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	mov r3, sp
	adds r3, #0x18
	str r3, [sp, #0x60]
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CC70C
	ldr r1, [sp, #0x60]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808FE60
	adds r0, r5, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808FE60
	bl _080908B0
_0808FE60:
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808FEE8
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	movs r2, #2
	bl memcpy
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x58]
	bl GetToolStackAt__9ToolChestUi
	adds r5, r0, #0
	add r4, sp, #0x24
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	ldr r2, [r7, #0x78]
	mov r8, r2
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #0x1c]
	ldr r6, [sp, #0x20]
	ldr r0, [sp, #0x60]
_0808FED2:
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	bl _080908B0
_0808FEE8:
	adds r0, r5, #0
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808FF38
	mov r3, sl
	ldr r0, [r3]
	ldr r1, [sp, #0x58]
	bl GetToolStackAt__9ToolChestUi
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r2, r0, #0
	add r0, sp, #0x24
	adds r1, r4, #0
	bl func_0800FE24
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	ldr r1, [r7, #0x7c]
	mov r8, r1
	b _080900D0
_0808FF38:
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x38
	strb r1, [r0]
	bl GetId__C4Tool
	adds r4, r0, #0
	adds r0, r5, #0
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x39
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #0
	cmp r4, r0
	bne _0808FF64
	movs r1, #1
_0808FF64:
	cmp r1, #0
	bne _0808FF6A
	b _08090074
_0808FF6A:
	adds r0, r5, #0
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r5, r1, r0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	cmp r5, r0
	bls _08090000
	mov r2, sl
	ldr r0, [r2]
	ldr r1, [sp, #0x58]
	bl GetToolStackAt__9ToolChestUi
	adds r4, r0, #0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9ToolStackUi
	mov r3, r8
	ldr r4, [r3]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r5, r0, #0
	add r4, sp, #0x24
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x58]
	bl GetToolStackAt__9ToolChestUi
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
_0808FFE8:
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	bl _080908B0
_08090000:
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	bl SubtractAmount__9ToolStackUi
	mov r3, sl
	ldr r0, [r3]
	ldr r1, [sp, #0x58]
	bl GetToolStackAt__9ToolChestUi
	adds r1, r5, #0
	bl AddAmount__9ToolStackUi
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	mov r1, sl
	ldr r0, [r1]
	ldr r1, [sp, #0x58]
	b _080907D6
_08090074:
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	movs r2, #2
	bl memcpy
	mov r3, sl
	ldr r0, [r3]
	ldr r1, [sp, #0x58]
	bl GetToolStackAt__9ToolChestUi
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	ldr r4, [r7, #0x78]
	mov r8, r4
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #0x1c]
	ldr r6, [sp, #0x20]
	ldr r0, [sp, #0x60]
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CB63C
	ldr r0, [r7, #0x7c]
	mov r8, r0
_080900D0:
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r5, [sp, #0x10]
	ldr r6, [sp, #0x14]
	ldr r0, [sp, #0x5c]
_080900E2:
	bl func_080CAD14
	str r0, [sp]
	mov r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl func_080CCA40
	b _080908B0
_080900F6:
	adds r1, r7, #0
	adds r1, #0x90
	str r1, [sp, #0x68]
	ldr r0, [r1]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	bl func_080CE184
	str r0, [sp, #0x64]
	mov r2, sb
	cmp r2, #8
	ble _08090116
	b _08090500
_08090116:
	movs r3, #0x82
	lsls r3, r3, #1
	adds r3, r7, r3
	str r3, [sp, #0x6c]
	ldr r0, [r3]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r4, sp, #8
	mov sl, r4
	movs r0, #0x80
	lsls r0, r0, #1
	adds r0, r0, r7
	mov r8, r0
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r0, #0
	mov r0, sl
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08090174
	mov r0, sl
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08090174
	b _080908B0
_08090174:
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08090224
	ldr r1, [sp, #0x6c]
	ldr r0, [r1]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	mov r1, sl
	movs r2, #2
	bl memcpy
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	mov r0, sl
	bl GetTool__C9ToolStack
	adds r5, r0, #0
	ldr r4, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CBA60
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r3, [sp, #0x68]
	ldr r0, [r3]
	bl func_080CF054
	cmp r4, r0
	beq _080901F0
	b _080908B0
_080901F0:
	ldr r0, [r7, #8]
	ldr r4, _08090220 @ =0x00001BD8
	adds r0, r0, r4
	adds r1, r5, #0
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x3a
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, sl
	b _080905F4
	.align 2, 0
_08090220: .4byte 0x00001BD8
_08090224:
	mov r0, sl
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080902CC
	ldr r1, [sp, #0x6c]
	ldr r0, [r1]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	ldr r0, [r7, #8]
	ldr r3, _080902C4 @ =0x00001BD8
	adds r0, r0, r3
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x3b
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	ldr r2, _080902C8 @ =0x086678A0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r3, r4, #0
	bl func_080CB304
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x68]
	ldr r0, [r1]
	b _08090750
	.align 2, 0
_080902C4: .4byte 0x00001BD8
_080902C8: .4byte 0x086678A0
_080902CC:
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x3c
	strb r1, [r0]
	bl GetId__C4Tool
	adds r4, r0, #0
	mov r0, sl
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x3d
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #0
	cmp r4, r0
	bne _080902F8
	movs r1, #1
_080902F8:
	cmp r1, #0
	bne _080902FE
	b _08090422
_080902FE:
	mov r0, sl
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r5, r1, r0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	cmp r5, r0
	bls _08090398
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r4, r0, #0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9ToolStackUi
	ldr r3, [sp, #0x6c]
	ldr r0, [r3]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x68]
	ldr r0, [r1]
	b _08090750
_08090398:
	mov r2, r8
	ldr r4, [r2]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r5, #0
	bl AddAmount__9ToolStackUi
	ldr r3, [sp, #0x6c]
	ldr r0, [r3]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	adds r1, r5, #0
	bl SubtractAmount__9ToolStackUi
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	ldr r4, [r0]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CB948
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x68]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	beq _0809040E
	b _080908B0
_0809040E:
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r2, [sp, #0x6c]
	ldr r0, [r2]
	b _080907D4
_08090422:
	mov r3, r8
	ldr r4, [r3]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	ldr r4, [sp, #0x6c]
	ldr r0, [r4]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	mov r1, sl
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r4, r0, #0
	mov r0, sl
	bl GetTool__C9ToolStack
	mov r8, r0
	ldr r0, [r7, #8]
	ldr r1, _080904F8 @ =0x00001BD8
	adds r0, r0, r1
	adds r1, r4, #0
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x3e
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, [r7, #0x78]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	ldr r2, _080904FC @ =0x086678A0
	mov sb, r2
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r3, r4, #0
	bl func_080CB304
	adds r0, r7, #0
	adds r0, #0x94
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r3, [sp, #0x68]
	ldr r0, [r3]
	bl func_080CF054
	cmp r4, r0
	beq _080904BC
	b _080908B0
_080904BC:
	ldr r0, [r7, #8]
	ldr r4, _080904F8 @ =0x00001BD8
	adds r0, r0, r4
	mov r1, r8
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x3f
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, sl
	bl GetAmount__C9ToolStack
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r2, sb
	b _08090600
	.align 2, 0
_080904F8: .4byte 0x00001BD8
_080904FC: .4byte 0x086678A0
_08090500:
	adds r0, r7, #0
	adds r0, #0x94
	str r0, [sp, #0x70]
	ldr r0, [r0]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r7, #0
	mov r1, sb
	bl func_080CE184
	mov sl, r0
	movs r1, #0x82
	lsls r1, r1, #1
	adds r6, r7, r1
	ldr r0, [r6]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r2, sp, #8
	mov r8, r2
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	adds r1, r0, #0
	mov r0, r8
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809055E
	mov r0, r8
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809055E
	b _080908B0
_0809055E:
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08090610
	ldr r0, [r6]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	mov r1, r8
	movs r2, #2
	bl memcpy
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	mov r0, r8
	bl GetTool__C9ToolStack
	adds r5, r0, #0
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	ldr r3, [sp, #0x70]
	ldr r0, [r3]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x68]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	beq _080905C8
	b _080908B0
_080905C8:
	ldr r0, [r7, #8]
	ldr r2, _08090608 @ =0x00001BD8
	adds r0, r0, r2
	adds r1, r5, #0
	bl func_0800E550
	adds r1, r0, #0
	add r0, sp, #0x40
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
_080905F4:
	bl GetAmount__C9ToolStack
	ldr r2, _0809060C @ =0x086678A0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
_08090600:
	adds r3, r4, #0
	bl func_080CC728
	b _080908B0
	.align 2, 0
_08090608: .4byte 0x00001BD8
_0809060C: .4byte 0x086678A0
_08090610:
	mov r0, r8
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080906A4
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	ldr r0, [r6]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	ldr r0, [r7, #8]
	ldr r3, _0809069C @ =0x00001BD8
	adds r0, r0, r3
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x41
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	ldr r2, _080906A0 @ =0x086678A0
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	adds r3, r4, #0
	bl func_080CC728
	ldr r4, [sp, #0x70]
	ldr r0, [r4]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x68]
	ldr r0, [r1]
	b _08090750
	.align 2, 0
_0809069C: .4byte 0x00001BD8
_080906A0: .4byte 0x086678A0
_080906A4:
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x42
	strb r1, [r0]
	bl GetId__C4Tool
	adds r4, r0, #0
	mov r0, r8
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x43
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #0
	cmp r4, r0
	bne _080906D2
	movs r1, #1
_080906D2:
	cmp r1, #0
	bne _080906D8
	b _080907EA
_080906D8:
	mov r0, r8
	bl GetAmount__C9ToolStack
	movs r1, #0x63
	subs r4, r1, r0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	cmp r4, r0
	bls _08090770
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	adds r4, r0, #0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl AddAmount__9ToolStackUi
	ldr r0, [r6]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	adds r5, r0, #0
	add r4, sp, #0xc
	adds r0, r4, #0
	bl __9ToolStack
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #2
	bl memcpy
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	ldr r2, [sp, #0x70]
	ldr r0, [r2]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r3, [sp, #0x68]
	ldr r0, [r3]
_08090750:
	bl func_080CF054
	cmp r4, r0
	beq _0809075A
	b _080908B0
_0809075A:
	ldr r4, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CCDEC
	b _080908B0
_08090770:
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	adds r1, r4, #0
	bl AddAmount__9ToolStackUi
	ldr r0, [r6]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	adds r1, r4, #0
	bl SubtractAmount__9ToolStackUi
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	ldr r4, [sp, #0x70]
	ldr r0, [r4]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x68]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	bne _080908B0
	ldr r5, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r4, r0, #0
	ldr r0, [r6]
_080907D4:
	ldr r1, [sp, #0x64]
_080907D6:
	bl GetToolStackAt__9ToolChestUi
	bl GetAmount__C9ToolStack
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl func_080CCD48
	b _080908B0
_080907EA:
	ldr r0, [r6]
	ldr r1, [sp, #0x64]
	bl GetToolStackAt__9ToolChestUi
	mov r1, r8
	movs r2, #2
	bl memcpy
	ldr r0, [r6]
	mov r1, sl
	bl GetToolStackAt__9ToolChestUi
	add r1, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r4, r0, #0
	mov r0, r8
	bl GetTool__C9ToolStack
	mov sl, r0
	ldr r0, [r7, #8]
	ldr r2, _080908C4 @ =0x00001BD8
	adds r0, r0, r2
	adds r1, r4, #0
	bl func_0800E550
	adds r1, r0, #0
	add r0, sp, #0x44
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	mov r1, sb
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	ldr r3, _080908C8 @ =0x086678A0
	mov sb, r3
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r2, sb
	adds r3, r4, #0
	bl func_080CC728
	ldr r4, [sp, #0x70]
	ldr r0, [r4]
	adds r0, #0xbc
	ldr r4, [r0]
	ldr r1, [sp, #0x68]
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	bne _080908B0
	ldr r0, [r7, #8]
	ldr r2, _080908C4 @ =0x00001BD8
	adds r0, r0, r2
	mov r1, sl
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x45
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, [r7, #0x7c]
	adds r0, r7, #0
	ldr r1, [sp, #0x48]
	movs r2, #0
	bl func_080CE184
	adds r5, r0, #0
	mov r0, r8
	bl GetAmount__C9ToolStack
	str r0, [sp]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r2, sb
	adds r3, r4, #0
	bl func_080CC728
_080908B0:
	add r3, sp, #0x4c
	ldrb r0, [r3]
	add sp, #0x74
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080908C4: .4byte 0x00001BD8
_080908C8: .4byte 0x086678A0

	thumb_func_start func_080908CC
func_080908CC: @ 0x080908CC
	push {r4, r5, r6, lr}
	sub sp, #0xc
	adds r6, r0, #0
	adds r5, r1, #0
	mov r0, sp
	bl func_080CAC70
	cmp r5, #0
	bne _080908E6
	ldr r0, [r6, #0x78]
	bl func_080CB2FC
	b _08090914
_080908E6:
	cmp r5, #8
	bgt _08090900
	ldr r4, [r6, #0x78]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CB2E8
	b _08090914
_08090900:
	ldr r4, [r6, #0x7c]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_080CC70C
_08090914:
	mov r1, sp
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	movs r1, #0
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _08090928
	ldr r0, [sp, #8]
	cmp r0, #0
	bne _0809092A
_08090928:
	movs r1, #1
_0809092A:
	cmp r1, #0
	bne _08090952
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _0809095C @ =0x08117ADC
	ldr r1, [r1]
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r6, r0
	movs r0, #1
	str r0, [r1]
	adds r0, r6, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
_08090952:
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809095C: .4byte 0x08117ADC

	thumb_func_start func_08090960
func_08090960: @ 0x08090960
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080CE294
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	bl func_0800F5F8
	mov r8, r0
	movs r0, #0xa7
	lsls r0, r0, #2
	bl __builtin_new
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _08090BC8 @ =0x08100148
	str r0, [sp]
	add r4, sp, #4
	movs r0, #1
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, r8
	bl func_080CAFC4
	adds r6, r7, #0
	adds r6, #0x78
	adds r5, r0, #0
	ldr r1, [r7, #0x78]
	mov sb, r4
	cmp r5, r1
	beq _080909D8
	cmp r1, #0
	beq _080909D8
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080909D8:
	str r5, [r6]
	ldr r0, [r7, #0x78]
	bl func_080CB090
	adds r0, r7, #0
	mov r1, r8
	bl func_0808EDCC
	movs r0, #0xcb
	lsls r0, r0, #2
	bl __builtin_new
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _08090BCC @ =0x08100150
	str r0, [sp]
	movs r0, #0
	mov r1, sb
	strb r0, [r1]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl func_080CC15C
	adds r5, r7, #0
	adds r5, #0x7c
	adds r4, r0, #0
	ldr r1, [r7, #0x7c]
	cmp r4, r1
	beq _08090A38
	cmp r1, #0
	beq _08090A38
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08090A38:
	str r4, [r5]
	ldr r0, [r7, #0x7c]
	bl func_080CC310
	movs r0, #0xc8
	bl __builtin_new
	adds r1, r7, #0
	bl func_080CE2FC
	adds r4, r7, #0
	adds r4, #0x94
	adds r5, r0, #0
	ldr r0, [r4]
	str r4, [sp, #0x10]
	cmp r5, r0
	beq _08090A64
	cmp r0, #0
	beq _08090A64
	movs r1, #3
	bl func_080CE3DC
_08090A64:
	str r5, [r4]
	ldr r1, [sp, #0x10]
	ldr r0, [r1]
	adds r0, #0xbc
	ldr r1, [r0]
	adds r0, r7, #0
	bl func_0808EE9C
	ldr r2, [sp, #0x10]
	ldr r0, [r2]
	bl func_080CE598
	movs r0, #0x8c
	bl __builtin_new
	adds r1, r7, #0
	movs r2, #1
	bl func_080CD9B0
	movs r1, #0x8c
	adds r1, r1, r7
	mov r8, r1
	mov sb, r0
	ldr r5, [r1]
	mov r6, r8
	cmp sb, r5
	beq _08090ACE
	cmp r5, #0
	beq _08090ACE
	ldr r0, _08090BD0 @ =vtable_unk_080E5A28
	str r0, [r5, #0x24]
	adds r4, r5, #0
	adds r4, #0x1c
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	adds r0, r5, #0
	bl __builtin_delete
_08090ACE:
	mov r2, sb
	mov r0, r8
	str r2, [r0]
	movs r0, #0x88
	bl __builtin_new
	adds r1, r7, #0
	bl func_080CEC00
	movs r1, #0x90
	adds r1, r1, r7
	mov r8, r1
	mov sl, r0
	ldr r5, [r1]
	mov sb, r8
	cmp sl, r5
	beq _08090B24
	cmp r5, #0
	beq _08090B24
	adds r4, r5, #0
	adds r4, #0x74
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	ldr r0, _08090BD0 @ =vtable_unk_080E5A28
	str r0, [r5, #4]
	adds r0, r5, #0
	bl __builtin_delete
_08090B24:
	mov r2, sl
	mov r0, r8
	str r2, [r0]
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808EF68
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #8
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _08090BD4 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0xc]
	ldr r1, _08090BD8 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r1, #0
	mov r8, r1
_08090B8A:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	adds r0, r7, #0
	bl func_080CE2C4
	ldr r3, [sp, #0xc]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08090B8A
	mov r2, r8
	cmp r2, #0
	beq _08090BB0
	b _08090E38
_08090BB0:
	ldr r0, [r6]
	ldr r5, [r0, #4]
	movs r0, #0x84
	lsls r0, r0, #1
	adds r4, r7, r0
	ldr r0, [r4]
	cmp r0, #0
	beq _08090BDC
	cmp r0, #1
	bne _08090BC6
	b _08090E1E
_08090BC6:
	b _08090B8A
	.align 2, 0
_08090BC8: .4byte 0x08100148
_08090BCC: .4byte 0x08100150
_08090BD0: .4byte vtable_unk_080E5A28
_08090BD4: .4byte vtable_unk_080E5B80
_08090BD8: .4byte 0x00000889
_08090BDC:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08090C04
	ldr r0, [r6]
	ldr r0, [r0, #4]
	cmp r0, #9
	ble _08090BFC
	cmp r0, #0xd
	bgt _08090BFC
	adds r0, r7, #0
	bl func_0808EF4C
_08090BFC:
	ldr r0, [r6]
	bl func_080CDA44
	b _08090C82
_08090C04:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08090C28
	ldr r0, [r6]
	ldr r0, [r0, #4]
	cmp r0, #0xd
	ble _08090C20
	adds r0, r7, #0
	bl func_0808EF30
_08090C20:
	ldr r0, [r6]
	bl func_080CDB08
	b _08090C82
_08090C28:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08090C3E
	ldr r0, [r6]
	bl func_080CDCD0
	b _08090C82
_08090C3E:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08090C54
	ldr r0, [r6]
	bl func_080CDC00
	b _08090C82
_08090C54:
	movs r4, #0
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _08090C76
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _08090C78
_08090C76:
	movs r4, #1
_08090C78:
	cmp r4, #0
	beq _08090C8E
	ldr r0, [r6]
	bl func_080CDD7C
_08090C82:
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xcb
	bl func_08008B6C
	b _08090E0C
_08090C8E:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08090D9A
	mov r1, sb
	ldr r3, [r1]
	adds r0, r3, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	bne _08090CCC
	ldr r0, [r6]
	ldr r1, [r0, #4]
	cmp r1, #8
	bgt _08090CBC
	adds r0, r3, #0
	movs r2, #0
	bl func_080CEC84
	b _08090E0C
_08090CBC:
	ldr r2, [sp, #0x10]
	ldr r0, [r2]
	adds r0, #0xbc
	ldr r2, [r0]
	adds r0, r3, #0
	bl func_080CEC84
	b _08090E0C
_08090CCC:
	ldr r0, [r6]
	ldr r4, [r0, #4]
	adds r0, r3, #0
	bl func_080CF050
	cmp r4, r0
	bne _08090D56
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	cmp r0, #9
	ble _08090D32
	ldr r2, [sp, #0x10]
	ldr r0, [r2]
	adds r0, #0xbc
	ldr r4, [r0]
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF054
	cmp r4, r0
	beq _08090D32
	mov r2, sb
	ldr r0, [r2]
	bl func_080CF050
	adds r1, r0, #0
	ldr r0, [r6]
	ldr r2, [r0, #4]
	adds r0, r7, #0
	bl func_0808F784
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08090D8E
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808EF68
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	mov r1, sb
	ldr r0, [r1]
	bl func_080CECD0
	b _08090E0C
_08090D32:
	mov r2, sb
	ldr r0, [r2]
	bl func_080CF050
	adds r4, r0, #0
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF054
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r4, #0
	bl func_0808F080
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08090D70
	b _08090D8E
_08090D56:
	mov r1, sb
	ldr r0, [r1]
	bl func_080CF050
	adds r1, r0, #0
	ldr r0, [r6]
	ldr r2, [r0, #4]
	adds r0, r7, #0
	bl func_0808F784
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08090D8E
_08090D70:
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_0808EF68
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	mov r2, sb
	ldr r0, [r2]
	bl func_080CECD0
	b _08090E0C
_08090D8E:
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	b _08090E0C
_08090D9A:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08090DF4
	mov r0, sb
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	beq _08090DBE
	adds r0, r1, #0
	bl func_080CECD0
	b _08090E0C
_08090DBE:
	ldr r2, [sp, #0xc]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08090E0C
	movs r1, #1
	mov r8, r1
	adds r0, r2, #0
	adds r0, #0xc
	ldr r1, _08090DF0 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	b _08090E0C
	.align 2, 0
_08090DF0: .4byte 0x00000889
_08090DF4:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _08090E0C
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_080908CC
_08090E0C:
	ldr r0, [r6]
	ldr r1, [r0, #4]
	cmp r5, r1
	bne _08090E16
	b _08090B8A
_08090E16:
	adds r0, r7, #0
	bl func_0808EF68
	b _08090B8A
_08090E1E:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _08090E2A
	b _08090B8A
_08090E2A:
	adds r0, r7, #0
	adds r1, r5, #0
	bl func_0808EF68
	mov r2, r8
	str r2, [r4]
	b _08090B8A
_08090E38:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_08090E54
func_08090E54: @ 0x08090E54
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _08090E80 @ =vtable_unk_080E7DAC
	str r0, [r4]
	movs r0, #0x86
	lsls r0, r0, #1
	bl __builtin_new
	adds r1, r5, #0
	bl func_0808ED64
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08090E80: .4byte vtable_unk_080E7DAC

	thumb_func_start func_08090E84
func_08090E84: @ 0x08090E84
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08090EC0 @ =vtable_unk_080E7DAC
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08090EA0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08090EA0:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _08090EB2
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08090EB2:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08090EC0: .4byte vtable_unk_080E7DAC

	thumb_func_start func_08090EC4
func_08090EC4: @ 0x08090EC4
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_08090960
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_08090EE0
func_08090EE0: @ 0x08090EE0
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	adds r1, r2, #0
	lsls r4, r3, #0x18
	lsrs r4, r4, #0x18
	bl func_080CE19C
	ldr r0, _08090F50 @ =vtable_unk_080E7DBC
	str r0, [r6, #4]
	adds r0, r6, #0
	adds r0, #0x98
	movs r3, #0
	strb r3, [r0]
	adds r2, r6, #0
	adds r2, #0xfc
	ldr r1, [r6, #8]
	ldr r7, _08090F54 @ =0x00001C34
	adds r0, r1, r7
	str r0, [r2]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r2, r6, r0
	subs r7, #8
	adds r0, r1, r7
	str r0, [r2]
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r6, r2
	adds r7, #0xc
	adds r1, r1, r7
	str r1, [r0]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r6, r1
	str r3, [r0]
	adds r2, #8
	adds r0, r6, r2
	str r3, [r0]
	movs r7, #0x88
	lsls r7, r7, #1
	adds r1, r6, r7
	ldr r0, [r5]
	str r3, [r5]
	str r0, [r1]
	movs r1, #0x8a
	lsls r1, r1, #1
	adds r0, r6, r1
	strb r4, [r0]
	adds r2, #0xc
	adds r0, r6, r2
	strb r3, [r0]
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08090F50: .4byte vtable_unk_080E7DBC
_08090F54: .4byte 0x00001C34

	thumb_func_start func_08090F58
func_08090F58: @ 0x08090F58
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r1, #0
	ldr r0, _08090FC4 @ =vtable_unk_080E7DBC
	str r0, [r6, #4]
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _08090F7A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08090F7A:
	movs r1, #0x86
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r5, [r0]
	cmp r5, #0
	beq _08090FB6
	adds r4, r5, #0
	adds r4, #0x74
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	ldr r0, _08090FC8 @ =vtable_unk_080E5A28
	str r0, [r5, #4]
	adds r0, r5, #0
	bl __builtin_delete
_08090FB6:
	adds r0, r6, #0
	adds r1, r7, #0
	bl func_080E3504
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08090FC4: .4byte vtable_unk_080E7DBC
_08090FC8: .4byte vtable_unk_080E5A28

	thumb_func_start func_08090FCC
func_08090FCC: @ 0x08090FCC
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r0, #0
	adds r7, r1, #0
	movs r5, #0
	cmp r7, #0
	beq _0809103A
_08090FDA:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r0, [r0]
	adds r1, r5, #0
	bl func_0800FE18
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08091034
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	ldr r0, [r4, #8]
	ldr r2, _0809108C @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E550
	adds r1, r0, #0
	add r0, sp, #8
	strb r1, [r0]
	bl GetIconId__C4Tool
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	ldr r1, [r4, #0x78]
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r5, #0
	ldr r2, _08091090 @ =0x086678A0
	adds r3, r6, #0
	bl func_080CB304
_08091034:
	adds r5, #1
	cmp r5, r7
	blo _08090FDA
_0809103A:
	adds r7, r4, #0
	adds r7, #0xfc
	ldr r0, [r7]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08091082
	ldr r0, [r7]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	ldr r0, [r4, #8]
	ldr r2, _0809108C @ =0x00001BD8
	adds r0, r0, r2
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #9
	strb r1, [r0]
	bl GetIconId__C4Tool
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r4, [r4, #0x78]
	ldr r5, _08091090 @ =0x086678A0
	ldr r0, [r7]
	bl GetAmount__C9ToolStack
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl func_080CBAF0
_08091082:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809108C: .4byte 0x00001BD8
_08091090: .4byte 0x086678A0

	thumb_func_start func_08091094
func_08091094: @ 0x08091094
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r7, r1, #0
	movs r6, #0
	cmp r6, r7
	bhs _0809111E
_080910A2:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	adds r1, r6, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #4
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08091118
	movs r4, #0
	add r0, sp, #4
	bl GetKind__C12RucksackItem
	cmp r0, #0
	beq _080910D2
	cmp r0, #1
	beq _080910E4
	b _080910F8
_080910D2:
	add r4, sp, #8
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetIconId__C4Food
	b _080910F4
_080910E4:
	add r0, sp, #4
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0xc
	strb r1, [r0]
	bl GetIconId__C7Article
_080910F4:
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_080910F8:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091108
	movs r4, #0xb0
	lsls r4, r4, #1
_08091108:
	ldr r0, [r5, #0x7c]
	movs r1, #1
	str r1, [sp]
	adds r1, r6, #0
	ldr r2, _08091148 @ =0x086678A0
	adds r3, r4, #0
	bl func_080CC728
_08091118:
	adds r6, #1
	cmp r6, r7
	blo _080910A2
_0809111E:
	movs r2, #0x80
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091132
	b _08091274
_08091132:
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #5
	bls _0809113E
	b _08091274
_0809113E:
	lsls r0, r0, #2
	ldr r1, _0809114C @ =_08091150
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08091148: .4byte 0x086678A0
_0809114C: .4byte _08091150
_08091150: @ jump table
	.4byte _08091168 @ case 0
	.4byte _080911A4 @ case 1
	.4byte _080911E4 @ case 2
	.4byte _08091218 @ case 3
	.4byte _08091268 @ case 4
	.4byte _08091274 @ case 5
_08091168:
	movs r0, #0x80
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F20C
	add r0, sp, #4
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091198
	movs r6, #0xb0
	lsls r6, r6, #1
_08091198:
	ldr r0, [r5, #0x7c]
	ldr r1, _080911A0 @ =0x086678A0
	adds r2, r6, #0
	b _08091256
	.align 2, 0
_080911A0: .4byte 0x086678A0
_080911A4:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r0, [r4]
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xd
	strb r1, [r0]
	bl GetIconId__C7Article
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080911D8
	movs r6, #0xb0
	lsls r6, r6, #1
_080911D8:
	ldr r0, [r5, #0x7c]
	ldr r1, _080911E0 @ =0x086678A0
	adds r2, r6, #0
	b _08091256
	.align 2, 0
_080911E0: .4byte 0x086678A0
_080911E4:
	ldr r0, [r5, #8]
	ldr r2, _080911FC @ =0x00001C70
	adds r0, r0, r2
	bl GetGrowthStage__C3Dog
	cmp r0, #0
	bne _08091208
	ldr r0, [r5, #0x7c]
	ldr r1, _08091200 @ =0x0858BA28
	ldr r2, _08091204 @ =0x000003DA
	b _08091256
	.align 2, 0
_080911FC: .4byte 0x00001C70
_08091200: .4byte 0x0858BA28
_08091204: .4byte 0x000003DA
_08091208:
	ldr r0, [r5, #0x7c]
	ldr r1, _08091214 @ =0x0858BA28
	movs r2, #0xdd
	lsls r2, r2, #2
	b _08091256
	.align 2, 0
_08091214: .4byte 0x0858BA28
_08091218:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	bl func_0800F344
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetChicken__4CoopUi
	cmp r0, #0
	beq _08091274
	bl GetGrowthStage__C7Chicken
	cmp r0, #0
	bne _08091250
	ldr r0, [r5, #0x7c]
	ldr r1, _08091248 @ =0x0858BA28
	ldr r2, _0809124C @ =0x0000073D
	b _08091256
	.align 2, 0
_08091248: .4byte 0x0858BA28
_0809124C: .4byte 0x0000073D
_08091250:
	ldr r0, [r5, #0x7c]
	ldr r1, _08091260 @ =0x0858BA28
	ldr r2, _08091264 @ =0x00000734
_08091256:
	movs r3, #1
	bl func_080CCE58
	b _08091274
	.align 2, 0
_08091260: .4byte 0x0858BA28
_08091264: .4byte 0x00000734
_08091268:
	ldr r0, [r5, #0x7c]
	ldr r1, _0809127C @ =0x086678A0
	movs r2, #0x35
	movs r3, #1
	bl func_080CCE58
_08091274:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809127C: .4byte 0x086678A0

	thumb_func_start func_08091280
func_08091280: @ 0x08091280
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	adds r7, r1, #0
	movs r0, #0
	mov r8, r0
	adds r5, r6, #0
	adds r5, #0x98
	mov r1, r8
	strb r1, [r5]
	cmp r7, #0
	beq _080912CE
	cmp r7, #9
	beq _080912F4
	cmp r7, #8
	bgt _08091342
	movs r0, #0x82
	lsls r0, r0, #1
	adds r0, r0, r6
	mov sb, r0
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809137A
	b _08091312
_080912CE:
	adds r4, r6, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809137A
	ldr r0, [r4]
	bl GetTool__C9ToolStack
	add r2, sp, #8
	strb r0, [r2]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r3, #1
	bl func_080CF05C
	b _08091378
_080912F4:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r6, r1
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809137A
	ldr r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CF67C
	b _08091378
_08091312:
	adds r5, r6, #0
	adds r5, #0x98
	mov r0, sb
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetTool__C9ToolStack
	mov r2, sp
	adds r2, #9
	strb r0, [r2]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r3, #0
	bl func_080CF05C
	b _08091378
_08091342:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp]
	mov r0, sp
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809137A
	ldr r2, [sp]
	str r2, [sp, #4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CFA38
_08091378:
	mov r8, r0
_0809137A:
	mov r0, r8
	cmp r0, #0
	beq _08091390
	adds r0, r6, #0
	adds r0, #0x80
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	b _0809139E
_08091390:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _080913AC @ =0x08100168
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
_0809139E:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080913AC: .4byte 0x08100168

	thumb_func_start func_080913B0
func_080913B0: @ 0x080913B0
	push {lr}
	sub sp, #4
	mov r0, sp
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x2f
	bgt _080913D2
	mov r0, sp
	bl GetId__C4Tool
	movs r1, #7
	ands r1, r0
	cmp r1, #5
	bne _080913D2
	movs r0, #1
	b _080913D4
_080913D2:
	movs r0, #0
_080913D4:
	add sp, #4
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_080913DC
func_080913DC: @ 0x080913DC
	push {lr}
	sub sp, #4
	mov r0, sp
	strb r1, [r0]
	bl GetId__C7Article
	cmp r0, #0x12
	beq _08091414
	mov r0, sp
	bl GetId__C7Article
	cmp r0, #0x13
	beq _08091414
	mov r0, sp
	bl GetId__C7Article
	cmp r0, #0x14
	beq _08091414
	mov r0, sp
	bl GetId__C7Article
	cmp r0, #0x15
	beq _08091414
	mov r0, sp
	bl GetId__C7Article
	cmp r0, #0x1c
	bne _08091418
_08091414:
	movs r0, #1
	b _0809141A
_08091418:
	movs r0, #0
_0809141A:
	add sp, #4
	pop {r1}
	bx r1

	thumb_func_start func_08091420
func_08091420: @ 0x08091420
	push {r4, r5, lr}
	adds r4, r1, #0
	movs r0, #7
	ands r4, r0
	movs r3, #0
	movs r5, #0
	adds r0, r2, #0
	subs r0, #0x12
	cmp r0, #0xa
	bhi _08091482
	lsls r0, r0, #2
	ldr r1, _08091440 @ =_08091444
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08091440: .4byte _08091444
_08091444: @ jump table
	.4byte _08091470 @ case 0
	.4byte _08091474 @ case 1
	.4byte _08091478 @ case 2
	.4byte _0809147C @ case 3
	.4byte _08091482 @ case 4
	.4byte _08091482 @ case 5
	.4byte _08091482 @ case 6
	.4byte _08091482 @ case 7
	.4byte _08091482 @ case 8
	.4byte _08091482 @ case 9
	.4byte _08091480 @ case 10
_08091470:
	movs r3, #1
	b _08091482
_08091474:
	movs r3, #2
	b _08091482
_08091478:
	movs r3, #3
	b _08091482
_0809147C:
	movs r3, #4
	b _08091482
_08091480:
	movs r3, #7
_08091482:
	cmp r4, r3
	bne _0809148A
	movs r5, #1
	b _08091498
_0809148A:
	cmp r4, r3
	bls _08091492
	movs r5, #2
	b _08091498
_08091492:
	cmp r4, r3
	bhs _08091498
	movs r5, #3
_08091498:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_080914A0
func_080914A0: @ 0x080914A0
	push {r4, r5, lr}
	adds r3, r1, #0
	movs r0, #7
	ands r3, r0
	movs r4, #0
	movs r5, #0
	adds r0, r2, #0
	subs r0, #0x12
	cmp r0, #0xa
	bhi _08091502
	lsls r0, r0, #2
	ldr r1, _080914C0 @ =_080914C4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080914C0: .4byte _080914C4
_080914C4: @ jump table
	.4byte _080914F0 @ case 0
	.4byte _080914F4 @ case 1
	.4byte _080914F8 @ case 2
	.4byte _080914FC @ case 3
	.4byte _08091502 @ case 4
	.4byte _08091502 @ case 5
	.4byte _08091502 @ case 6
	.4byte _08091502 @ case 7
	.4byte _08091502 @ case 8
	.4byte _08091502 @ case 9
	.4byte _08091500 @ case 10
_080914F0:
	movs r4, #1
	b _08091502
_080914F4:
	movs r4, #2
	b _08091502
_080914F8:
	movs r4, #3
	b _08091502
_080914FC:
	movs r4, #4
	b _08091502
_08091500:
	movs r4, #7
_08091502:
	cmp r3, r4
	bne _0809150A
	movs r5, #0
	b _08091522
_0809150A:
	cmp r3, r4
	bls _08091512
	movs r5, #1
	b _08091522
_08091512:
	cmp r3, r4
	bhs _08091522
	subs r5, r4, r3
	cmp r3, #6
	bne _08091522
	cmp r4, #7
	bne _08091522
	movs r5, #2
_08091522:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0809152C
func_0809152C: @ 0x0809152C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x68
	str r0, [sp, #0x40]
	adds r7, r1, #0
	adds r0, r7, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080CE294
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	bl func_0800F5F8
	mov r8, r0
	movs r0, #0xa7
	lsls r0, r0, #2
	bl __builtin_new
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _080917E4 @ =0x0810016C
	str r0, [sp]
	add r4, sp, #4
	movs r0, #1
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, r8
	bl func_080CAFC4
	adds r6, r7, #0
	adds r6, #0x78
	adds r5, r0, #0
	ldr r1, [r7, #0x78]
	mov sb, r4
	cmp r5, r1
	beq _080915A8
	cmp r1, #0
	beq _080915A8
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080915A8:
	str r5, [r6]
	ldr r0, [r7, #0x78]
	bl func_080CB090
	adds r0, r7, #0
	mov r1, r8
	bl func_08090FCC
	movs r0, #0xcb
	lsls r0, r0, #2
	bl __builtin_new
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _080917E8 @ =0x08100174
	str r0, [sp]
	movs r0, #1
	mov r1, sb
	strb r0, [r1]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r3, r8
	bl func_080CC15C
	adds r5, r7, #0
	adds r5, #0x7c
	adds r4, r0, #0
	ldr r1, [r7, #0x7c]
	cmp r4, r1
	beq _08091608
	cmp r1, #0
	beq _08091608
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08091608:
	str r4, [r5]
	ldr r0, [r7, #0x7c]
	bl func_080CC310
	adds r0, r7, #0
	mov r1, r8
	bl func_08091094
	movs r0, #0x8c
	bl __builtin_new
	adds r1, r7, #0
	movs r2, #1
	bl func_080CD9B0
	adds r6, r7, #0
	adds r6, #0x8c
	mov r8, r0
	ldr r5, [r6]
	str r6, [sp, #0x60]
	cmp r8, r5
	beq _08091668
	cmp r5, #0
	beq _08091668
	ldr r0, _080917EC @ =vtable_unk_080E5A28
	str r0, [r5, #0x24]
	adds r4, r5, #0
	adds r4, #0x1c
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	adds r0, r5, #0
	bl __builtin_delete
_08091668:
	mov r0, r8
	str r0, [r6]
	movs r0, #0x88
	bl __builtin_new
	adds r1, r7, #0
	bl func_080CEC00
	adds r6, r7, #0
	adds r6, #0x90
	mov r8, r0
	ldr r5, [r6]
	str r6, [sp, #0x64]
	cmp r8, r5
	beq _080916BA
	cmp r5, #0
	beq _080916BA
	adds r4, r5, #0
	adds r4, #0x74
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	ldr r0, _080917EC @ =vtable_unk_080E5A28
	str r0, [r5, #4]
	adds r0, r5, #0
	bl __builtin_delete
_080916BA:
	mov r1, r8
	str r1, [r6]
	movs r0, #0x88
	bl __builtin_new
	adds r1, r7, #0
	bl func_080CEC00
	movs r2, #0x86
	lsls r2, r2, #1
	adds r2, r2, r7
	mov r8, r2
	adds r6, r0, #0
	ldr r5, [r2]
	cmp r6, r5
	beq _0809170E
	cmp r5, #0
	beq _0809170E
	adds r4, r5, #0
	adds r4, #0x74
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	ldr r0, _080917EC @ =vtable_unk_080E5A28
	str r0, [r5, #4]
	adds r0, r5, #0
	bl __builtin_delete
_0809170E:
	mov r0, r8
	str r6, [r0]
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_08091280
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #0x10
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _080917F0 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0x14]
	ldr r1, _080917F4 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x14]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r2, #0
	str r2, [sp, #0x44]
	movs r0, #0
	str r0, [sp, #0x48]
	movs r1, #0x51
	str r1, [sp, #0x4c]
	movs r2, #0x5f
	str r2, [sp, #0x50]
	str r0, [sp, #0x54]
	movs r1, #0
	str r1, [sp, #0x58]
	movs r2, #0
	str r2, [sp, #0x5c]
_0809178A:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	adds r0, r7, #0
	bl func_080CE2C4
	ldr r0, [sp, #0x14]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r5, r0, #0x1f
	cmp r5, #0
	bne _0809178A
	ldr r0, [sp, #0x5c]
	cmp r0, #0
	beq _080917FC
	movs r0, #0x20
	bl __builtin_new
	movs r2, #0x88
	lsls r2, r2, #1
	adds r1, r7, r2
	ldr r3, [r1]
	str r5, [r1]
	adds r2, #4
	adds r1, r7, r2
	ldrb r4, [r1]
	ldr r2, [r7, #8]
	ldr r1, _080917F8 @ =vtable_unk_080E5E14
	str r1, [r0]
	str r5, [sp, #0x1c]
	str r3, [r0, #4]
	str r2, [r0, #8]
	movs r1, #0x51
	str r1, [r0, #0xc]
	movs r1, #0x5f
	str r1, [r0, #0x10]
	str r5, [r0, #0x14]
	str r5, [r0, #0x18]
	bl _080924F4
	.align 2, 0
_080917E4: .4byte 0x0810016C
_080917E8: .4byte 0x08100174
_080917EC: .4byte vtable_unk_080E5A28
_080917F0: .4byte vtable_unk_080E5B80
_080917F4: .4byte 0x00000889
_080917F8: .4byte vtable_unk_080E5E14
_080917FC:
	ldr r2, [sp, #0x60]
	ldr r0, [r2]
	ldr r0, [r0, #4]
	mov sb, r0
	ldr r1, [sp, #0x64]
	ldr r0, [r1]
	cmp r0, #0
	beq _08091818
	movs r2, #0x86
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	bl func_080CECE8
_08091818:
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #7
	bhi _0809178A
	lsls r0, r0, #2
	ldr r1, _08091830 @ =_08091834
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08091830: .4byte _08091834
_08091834: @ jump table
	.4byte _08091854 @ case 0
	.4byte _08091F00 @ case 1
	.4byte _08092054 @ case 2
	.4byte _08092352 @ case 3
	.4byte _08092398 @ case 4
	.4byte _08092484 @ case 5
	.4byte _080924B4 @ case 6
	.4byte _08092514 @ case 7
_08091854:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0809186C
	ldr r2, [sp, #0x60]
	ldr r0, [r2]
	bl func_080CDA44
	b _080918E4
_0809186C:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08091884
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	bl func_080CDB08
	b _080918E4
_08091884:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0809189C
	ldr r2, [sp, #0x60]
	ldr r0, [r2]
	bl func_080CDCD0
	b _080918E4
_0809189C:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080918B4
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	bl func_080CDC00
	b _080918E4
_080918B4:
	movs r4, #0
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _080918D6
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _080918D8
_080918D6:
	movs r4, #1
_080918D8:
	cmp r4, #0
	beq _080918F0
	ldr r2, [sp, #0x60]
	ldr r0, [r2]
	bl func_080CDD7C
_080918E4:
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xcb
	bl func_08008B6C
	b _08091EE8
_080918F0:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08091900
	b _08091E88
_08091900:
	ldr r0, [sp, #0x64]
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	beq _08091910
	b _08091C60
_08091910:
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	ldr r1, [r0, #4]
	cmp r1, #8
	ble _08091990
	movs r5, #1
	cmp r1, #9
	bne _08091938
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	bl func_0800F190
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r5, r1, #0x1f
	b _0809195C
_08091938:
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r4, [r0]
	adds r0, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809195C
	movs r5, #0
_0809195C:
	cmp r5, #0
	beq _08091962
	b _08091EE8
_08091962:
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _0809198C @ =0x0810017C
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #5
	b _08091EE6
	.align 2, 0
_0809198C: .4byte 0x0810017C
_08091990:
	cmp r1, #0
	beq _08091996
	b _08091AC0
_08091996:
	adds r5, r7, #0
	adds r5, #0xfc
	ldr r0, [r5]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080919A8
	b _08091EE8
_080919A8:
	ldr r0, [r5]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x34
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x2f
	bgt _08091A94
	ldr r0, [r5]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080913B0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080919FC
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _080919F8 @ =0x081001A4
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xaa
	bl func_08050E50
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #5
	b _08091EE6
	.align 2, 0
_080919F8: .4byte 0x081001A4
_080919FC:
	ldr r1, [sp, #0x64]
	ldr r0, [r1]
	ldr r2, [sp, #0x60]
	ldr r1, [r2]
	ldr r1, [r1, #4]
	movs r2, #0
	bl func_080CEC84
	ldr r0, [r5]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x35
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #7
	ands r1, r0
	cmp r1, #0
	bne _08091A54
	ldr r4, [r7, #8]
	ldr r0, _08091A50 @ =0x00001BD8
	adds r4, r4, r0
	ldr r0, [r5]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x36
	strb r1, [r0]
	bl GetId__C4Tool
	str r0, [sp, #0x4c]
	movs r1, #1
	str r1, [sp, #0x58]
	b _08091A68
	.align 2, 0
_08091A50: .4byte 0x00001BD8
_08091A54:
	ldr r0, [r5]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x37
	strb r1, [r0]
	bl GetId__C4Tool
	str r0, [sp, #0x4c]
_08091A68:
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _08091A90 @ =0x081001D4
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #5
	b _08091EE6
	.align 2, 0
_08091A90: .4byte 0x081001D4
_08091A94:
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _08091ABC @ =0x08100208
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #5
	b _08091EE6
	.align 2, 0
_08091ABC: .4byte 0x08100208
_08091AC0:
	movs r2, #0x82
	lsls r2, r2, #1
	adds r5, r7, r2
	ldr r4, [r5]
	adds r0, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091AE4
	b _08091EE8
_08091AE4:
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	ldr r6, [r0, #4]
	ldr r4, [r5]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #0x38
	strb r1, [r0]
	bl GetId__C4Tool
	cmp r0, #0x2f
	ble _08091B12
	b _08091C34
_08091B12:
	ldr r4, [r5]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080913B0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091B64
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _08091B60 @ =0x081001A4
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #5
	b _08091EE6
	.align 2, 0
_08091B60: .4byte 0x081001A4
_08091B64:
	ldr r1, [sp, #0x64]
	ldr r0, [r1]
	ldr r2, [sp, #0x60]
	ldr r1, [r2]
	ldr r1, [r1, #4]
	movs r2, #0
	bl func_080CEC84
	ldr r4, [r5]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x39
	strb r1, [r0]
	bl GetId__C4Tool
	movs r1, #7
	ands r1, r0
	cmp r1, #0
	bne _08091BE0
	ldr r4, [r7, #8]
	ldr r0, _08091BDC @ =0x00001BD8
	adds r4, r4, r0
	ldr r5, [r5]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_0800FE18
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800E550
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x3a
	strb r1, [r0]
	bl GetId__C4Tool
	str r0, [sp, #0x4c]
	movs r1, #1
	str r1, [sp, #0x58]
	b _08091C06
	.align 2, 0
_08091BDC: .4byte 0x00001BD8
_08091BE0:
	ldr r4, [r5]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x3b
	strb r1, [r0]
	bl GetId__C4Tool
	str r0, [sp, #0x4c]
_08091C06:
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _08091C30 @ =0x081001D4
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #5
	b _08091EE6
	.align 2, 0
_08091C30: .4byte 0x081001D4
_08091C34:
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _08091C5C @ =0x08100208
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #5
	b _08091EE6
	.align 2, 0
_08091C5C: .4byte 0x08100208
_08091C60:
	ldr r2, [sp, #0x60]
	ldr r0, [r2]
	ldr r4, [r0, #4]
	adds r0, r1, #0
	bl func_080CF050
	cmp r4, r0
	bne _08091C72
	b _08091EE8
_08091C72:
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	ldr r1, [r0, #4]
	cmp r1, #8
	bgt _08091CEC
	movs r5, #0
	cmp r1, #0
	bne _08091C94
	adds r0, r7, #0
	adds r0, #0xfc
	ldr r0, [r0]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08091CB8
	b _08091CBE
_08091C94:
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r4, [r0]
	adds r0, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08091CB8
	movs r5, #1
_08091CB8:
	cmp r5, #0
	bne _08091CBE
	b _08091EE8
_08091CBE:
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _08091CE8 @ =0x08100224
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #5
	b _08091EE6
	.align 2, 0
_08091CE8: .4byte 0x08100224
_08091CEC:
	cmp r1, #9
	bne _08091D90
	movs r1, #0x80
	lsls r1, r1, #1
	adds r5, r7, r1
	ldr r0, [r5]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091D04
	b _08091EE8
_08091D04:
	ldr r0, [r5]
	bl func_0800F204
	adds r6, r0, #0
	cmp r6, #1
	bne _08091D64
	ldr r0, [r5]
	bl func_0800F258
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080913DC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091D64
	movs r2, #0x86
	lsls r2, r2, #1
	adds r4, r7, r2
	ldr r0, [r4]
	bl func_080CECD0
	ldr r0, [r4]
	ldr r2, [sp, #0x60]
	ldr r1, [r2]
	ldr r1, [r1, #4]
	movs r2, #0
	bl func_080CEC84
	ldr r0, [r5]
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x3c
	strb r1, [r0]
	bl GetId__C7Article
	str r0, [sp, #0x50]
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	str r6, [r0]
	b _08091EE8
_08091D64:
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _08091D8C @ =0x08100224
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #5
	b _08091EE6
	.align 2, 0
_08091D8C: .4byte 0x08100224
_08091D90:
	movs r0, #0x82
	lsls r0, r0, #1
	adds r5, r7, r0
	ldr r4, [r5]
	adds r0, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091DB4
	b _08091EE8
_08091DB4:
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	ldr r6, [r0, #4]
	ldr r4, [r5]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	bl GetKind__C12RucksackItem
	mov r8, r0
	cmp r0, #1
	bne _08091E5A
	ldr r4, [r5]
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	adds r0, r7, #0
	bl func_080913DC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091E5A
	movs r2, #0x86
	lsls r2, r2, #1
	adds r4, r7, r2
	ldr r0, [r4]
	bl func_080CECD0
	ldr r0, [r4]
	ldr r2, [sp, #0x60]
	ldr r1, [r2]
	ldr r1, [r1, #4]
	movs r2, #0
	bl func_080CEC84
	ldr r5, [r5]
	ldr r0, [r4]
	bl func_080CF050
	adds r1, r0, #0
	adds r0, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r5, #0
	bl func_0800FCDC
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x3d
	strb r1, [r0]
	bl GetId__C7Article
	str r0, [sp, #0x50]
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc5
	bl func_08008B6C
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r7, r1
	mov r2, r8
	str r2, [r0]
	b _08091EE8
_08091E5A:
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _08091E84 @ =0x08100224
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #5
	b _08091EE6
	.align 2, 0
_08091E84: .4byte 0x08100224
_08091E88:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08091EE8
	movs r1, #0x86
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	beq _08091EB0
	adds r0, r1, #0
	bl func_080CECD0
	b _08091EE8
_08091EB0:
	ldr r2, [sp, #0x64]
	ldr r1, [r2]
	adds r0, r1, #0
	adds r0, #0x84
	ldrb r0, [r0]
	cmp r0, #0
	beq _08091ECA
	adds r0, r1, #0
	bl func_080CECD0
	movs r0, #0
	str r0, [sp, #0x58]
	b _08091EE8
_08091ECA:
	adds r4, r7, #0
	adds r4, #0x80
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	ldr r1, _08091EFC @ =0x0810026C
	adds r0, r4, #0
	bl func_08050D8C
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #7
_08091EE6:
	str r0, [r1]
_08091EE8:
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	ldr r1, [r0, #4]
	cmp sb, r1
	bne _08091EF4
	b _0809178A
_08091EF4:
	adds r0, r7, #0
	bl func_08091280
	b _0809178A
	.align 2, 0
_08091EFC: .4byte 0x0810026C
_08091F00:
	movs r4, #0
	movs r2, #1
	ldr r1, [sp, #0x4c]
	lsrs r0, r1, #3
	cmp r0, #5
	bhi _08091F4A
	lsls r0, r0, #2
	ldr r1, _08091F18 @ =_08091F1C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08091F18: .4byte _08091F1C
_08091F1C: @ jump table
	.4byte _08091F34 @ case 0
	.4byte _08091F38 @ case 1
	.4byte _08091F3C @ case 2
	.4byte _08091F40 @ case 3
	.4byte _08091F44 @ case 4
	.4byte _08091F48 @ case 5
_08091F34:
	movs r2, #1
	b _08091F4A
_08091F38:
	movs r2, #0
	b _08091F4A
_08091F3C:
	movs r2, #2
	b _08091F4A
_08091F40:
	movs r2, #3
	b _08091F4A
_08091F44:
	movs r2, #4
	b _08091F4A
_08091F48:
	movs r2, #5
_08091F4A:
	ldr r0, [sp, #0x50]
	subs r0, #0x12
	cmp r0, #0xa
	bhi _08091FA6
	lsls r0, r0, #2
	ldr r1, _08091F5C @ =_08091F60
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08091F5C: .4byte _08091F60
_08091F60: @ jump table
	.4byte _08091F8C @ case 0
	.4byte _08091F94 @ case 1
	.4byte _08091F9C @ case 2
	.4byte _08091FA4 @ case 3
	.4byte _08091FA6 @ case 4
	.4byte _08091FA6 @ case 5
	.4byte _08091FA6 @ case 6
	.4byte _08091FA6 @ case 7
	.4byte _08091FA6 @ case 8
	.4byte _08091FA6 @ case 9
	.4byte _08091FA4 @ case 10
_08091F8C:
	ldr r4, _08091F90 @ =0x00001770
	b _08091FA6
	.align 2, 0
_08091F90: .4byte 0x00001770
_08091F94:
	ldr r4, _08091F98 @ =0x00004650
	b _08091FA6
	.align 2, 0
_08091F98: .4byte 0x00004650
_08091F9C:
	ldr r4, _08091FA0 @ =0x00008CA0
	b _08091FA6
	.align 2, 0
_08091FA0: .4byte 0x00008CA0
_08091FA4:
	ldr r4, _08091FE4 @ =0x0000FFFF
_08091FA6:
	ldr r0, [r7, #8]
	ldr r1, _08091FE8 @ =0x00001BD8
	adds r0, r0, r1
	adds r1, r2, #0
	bl func_0800EB2C
	bl func_0800EF68
	cmp r4, r0
	bls _08091FF0
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _08091FEC @ =0x0810029C
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	movs r2, #0x86
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	bl func_080CECD0
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
	b _08092476
	.align 2, 0
_08091FE4: .4byte 0x0000FFFF
_08091FE8: .4byte 0x00001BD8
_08091FEC: .4byte 0x0810029C
_08091FF0:
	adds r0, r7, #0
	ldr r1, [sp, #0x4c]
	ldr r2, [sp, #0x50]
	bl func_08091420
	cmp r0, #2
	beq _08092020
	cmp r0, #2
	bhi _0809200A
	cmp r0, #1
	beq _08092012
	bl _0809178A
_0809200A:
	cmp r0, #3
	beq _0809204C
	bl _0809178A
_08092012:
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _0809201C @ =0x081002D8
	b _08092456
	.align 2, 0
_0809201C: .4byte 0x081002D8
_08092020:
	adds r4, r7, #0
	adds r4, #0x80
	ldr r1, _08092048 @ =0x08100314
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	movs r0, #1
	str r0, [sp, #0x54]
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #3
	str r0, [r1]
	bl _0809178A
	.align 2, 0
_08092048: .4byte 0x08100314
_0809204C:
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
	b _080923CC
_08092054:
	ldr r0, [sp, #0x50]
	subs r0, #0x12
	cmp r0, #0xa
	bhi _080920C0
	lsls r0, r0, #2
	ldr r1, _08092068 @ =_0809206C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08092068: .4byte _0809206C
_0809206C: @ jump table
	.4byte _08092098 @ case 0
	.4byte _080920A0 @ case 1
	.4byte _080920A6 @ case 2
	.4byte _080920B0 @ case 3
	.4byte _080920C0 @ case 4
	.4byte _080920C0 @ case 5
	.4byte _080920C0 @ case 6
	.4byte _080920C0 @ case 7
	.4byte _080920C0 @ case 8
	.4byte _080920C0 @ case 9
	.4byte _080920BC @ case 10
_08092098:
	movs r1, #0xfa
	lsls r1, r1, #2
	str r1, [sp, #0x44]
	b _080920C0
_080920A0:
	movs r2, #0xfa
	lsls r2, r2, #3
	b _080920BE
_080920A6:
	ldr r0, _080920AC @ =0x00000BB8
	str r0, [sp, #0x44]
	b _080920C0
	.align 2, 0
_080920AC: .4byte 0x00000BB8
_080920B0:
	ldr r1, _080920B8 @ =0x00001388
	str r1, [sp, #0x44]
	b _080920C0
	.align 2, 0
_080920B8: .4byte 0x00001388
_080920BC:
	ldr r2, _08092308 @ =0x0000C350
_080920BE:
	str r2, [sp, #0x44]
_080920C0:
	movs r0, #0x8c
	lsls r0, r0, #1
	adds r4, r7, r0
	movs r1, #0
	mov sb, r1
	mov r2, sb
	strb r2, [r4]
	ldr r0, _0809230C @ =0x08100350
	mov r8, r0
	adds r0, r4, #0
	bl strlen
	adds r6, r4, r0
	movs r1, #0x9f
	subs r5, r1, r0
	cmp r5, #0
	beq _08092100
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080920F0
	adds r4, r5, #0
_080920F0:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	mov r1, sb
	strb r1, [r0]
_08092100:
	add r4, sp, #0x20
	ldr r0, [sp, #0x44]
	adds r1, r4, #0
	movs r2, #0
	bl func_0804EC84
	movs r2, #0x8c
	lsls r2, r2, #1
	adds r2, r2, r7
	mov r8, r2
	mov r0, r8
	bl strlen
	mov r1, r8
	adds r1, r1, r0
	mov sb, r1
	movs r1, #0x9f
	subs r6, r1, r0
	mov sl, r4
	cmp r6, #0
	beq _0809214A
	mov r0, sl
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _08092138
	adds r5, r6, #0
_08092138:
	mov r0, sb
	mov r1, sl
	adds r2, r5, #0
	bl memcpy
	mov r2, sb
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_0809214A:
	mov r4, r8
	ldr r0, _08092310 @ =0x08100360
	mov sb, r0
	adds r0, r4, #0
	bl strlen
	adds r1, r4, r0
	mov r8, r1
	movs r1, #0x9f
	subs r6, r1, r0
	cmp r6, #0
	beq _08092182
	mov r0, sb
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _08092170
	adds r5, r6, #0
_08092170:
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	bl memcpy
	mov r2, r8
	adds r1, r2, r5
	movs r0, #0
	strb r0, [r1]
_08092182:
	ldr r0, _08092314 @ =0x08100368
	mov r8, r0
	adds r0, r4, #0
	bl strlen
	adds r4, r4, r0
	movs r1, #0x9f
	subs r6, r1, r0
	cmp r6, #0
	beq _080921B4
	mov r0, r8
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _080921A4
	adds r5, r6, #0
_080921A4:
	adds r0, r4, #0
	mov r1, r8
	adds r2, r5, #0
	bl memcpy
	adds r1, r4, r5
	movs r0, #0
	strb r0, [r1]
_080921B4:
	adds r0, r7, #0
	ldr r1, [sp, #0x4c]
	ldr r2, [sp, #0x50]
	bl func_080914A0
	str r0, [sp, #0x48]
	mov r5, sl
	adds r1, r5, #0
	movs r2, #0
	bl func_0804EC84
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r4, r7, r1
	adds r0, r4, #0
	bl strlen
	adds r2, r4, r0
	mov r8, r2
	movs r1, #0x9f
	subs r6, r1, r0
	cmp r6, #0
	beq _08092202
	adds r0, r5, #0
	bl strlen
	adds r5, r0, #0
	cmp r5, r6
	bls _080921F0
	adds r5, r6, #0
_080921F0:
	mov r0, r8
	mov r1, sl
	adds r2, r5, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r5
	movs r0, #0
	strb r0, [r1]
_08092202:
	adds r6, r4, #0
	ldr r1, _08092318 @ =0x0810037C
	mov sb, r1
	adds r0, r6, #0
	bl strlen
	adds r2, r6, r0
	mov r8, r2
	movs r1, #0x9f
	subs r5, r1, r0
	cmp r5, #0
	beq _0809223A
	mov r0, sb
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _08092228
	adds r4, r5, #0
_08092228:
	mov r0, r8
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_0809223A:
	ldr r1, _0809231C @ =0x08100388
	mov r8, r1
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x9f
	subs r5, r1, r0
	cmp r5, #0
	beq _0809226C
	mov r0, r8
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0809225C
	adds r4, r5, #0
_0809225C:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0809226C:
	ldr r0, [r7, #8]
	ldr r2, _08092320 @ =0x00001AA8
	adds r0, r0, r2
	ldr r0, [r0]
	movs r1, #0
	ldr r2, [sp, #0x44]
	cmp r0, r2
	bhs _0809227E
	movs r1, #1
_0809227E:
	cmp r1, #0
	beq _0809232C
	movs r0, #0x8c
	lsls r0, r0, #1
	adds r6, r7, r0
	ldr r1, _08092324 @ =0x08100398
	mov sb, r1
	adds r0, r6, #0
	bl strlen
	adds r2, r6, r0
	mov r8, r2
	movs r1, #0x9f
	subs r5, r1, r0
	cmp r5, #0
	beq _080922BE
	mov r0, sb
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080922AC
	adds r4, r5, #0
_080922AC:
	mov r0, r8
	mov r1, sb
	adds r2, r4, #0
	bl memcpy
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0
	strb r0, [r1]
_080922BE:
	ldr r1, _08092328 @ =0x0810039C
	mov r8, r1
	mov r4, r8
	adds r0, r6, #0
	bl strlen
	adds r6, r6, r0
	movs r1, #0x9f
	subs r5, r1, r0
	cmp r5, #0
	beq _080922F2
	adds r0, r4, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _080922E2
	adds r4, r5, #0
_080922E2:
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_080922F2:
	movs r2, #0x86
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	bl func_080CECD0
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #5
	b _08092334
	.align 2, 0
_08092308: .4byte 0x0000C350
_0809230C: .4byte 0x08100350
_08092310: .4byte 0x08100360
_08092314: .4byte 0x08100368
_08092318: .4byte 0x0810037C
_0809231C: .4byte 0x08100388
_08092320: .4byte 0x00001AA8
_08092324: .4byte 0x08100398
_08092328: .4byte 0x0810039C
_0809232C:
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #3
_08092334:
	str r0, [r1]
	adds r4, r7, #0
	adds r4, #0x80
	movs r0, #0x8c
	lsls r0, r0, #1
	adds r1, r7, r0
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	bl _0809178A
_08092352:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _08092360
	bl _0809178A
_08092360:
	adds r4, r7, #0
	adds r4, #0x80
	adds r0, r4, #0
	bl func_08050E5C
	ldr r1, _08092390 @ =0x081003DC
	ldr r2, _08092394 @ =0x081003E0
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r3, #0
	bl func_08050E0C
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #4
	str r0, [r1]
	bl _0809178A
	.align 2, 0
_08092390: .4byte 0x081003DC
_08092394: .4byte 0x081003E0
_08092398:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _080923A6
	bl _0809178A
_080923A6:
	adds r4, r7, #0
	adds r4, #0x80
	adds r0, r4, #0
	bl func_08050DF0
	cmp r0, #1
	beq _080923BC
	cmp r0, #2
	beq _08092454
	bl _0809178A
_080923BC:
	ldr r0, [sp, #0x54]
	cmp r0, #0
	beq _080923D4
	movs r1, #0
	str r1, [sp, #0x54]
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
_080923CC:
	movs r0, #2
	str r0, [r1]
	bl _0809178A
_080923D4:
	ldr r1, [sp, #0x64]
	ldr r0, [r1]
	bl func_080CF050
	cmp r0, #0
	bne _080923EE
	adds r0, r7, #0
	adds r0, #0xfc
	ldr r0, [r0]
	movs r1, #1
	bl SubtractAmount__9ToolStackUi
	b _08092416
_080923EE:
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r4, [r0]
	ldr r1, [sp, #0x64]
	ldr r0, [r1]
	bl func_080CF050
	adds r1, r0, #0
	adds r0, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	movs r1, #1
	bl SubtractAmount__9ToolStackUi
_08092416:
	ldr r2, [sp, #0x58]
	cmp r2, #0
	beq _08092424
	ldr r1, [sp, #0x4c]
	lsrs r0, r1, #3
	lsls r0, r0, #3
	str r0, [sp, #0x4c]
_08092424:
	ldr r0, [sp, #0x14]
	ldr r1, _08092450 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x14]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #6
	str r0, [r1]
	bl _0809178A
	.align 2, 0
_08092450: .4byte 0x00000889
_08092454:
	ldr r1, _08092480 @ =0x0810026C
_08092456:
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0xa8
	bl func_08050E50
	movs r1, #0x86
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	bl func_080CECD0
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
_08092476:
	movs r0, #5
	str r0, [r1]
	bl _0809178A
	.align 2, 0
_08092480: .4byte 0x0810026C
_08092484:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _08092492
	bl _0809178A
_08092492:
	adds r0, r7, #0
	adds r0, #0x80
	bl func_08050E5C
	ldr r1, [sp, #0x60]
	ldr r0, [r1]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_08091280
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #0
	str r0, [r1]
	bl _0809178A
_080924B4:
	ldr r0, [sp, #0x14]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r5, r0, #0x1f
	cmp r5, #0
	bne _08092514
	movs r0, #0x20
	bl __builtin_new
	movs r2, #0x88
	lsls r2, r2, #1
	adds r1, r7, r2
	ldr r3, [r1]
	str r5, [r1]
	adds r2, #4
	adds r1, r7, r2
	ldrb r4, [r1]
	ldr r2, [r7, #8]
	ldr r1, _08092510 @ =vtable_unk_080E5E14
	str r1, [r0]
	str r5, [sp, #0x1c]
	str r3, [r0, #4]
	str r2, [r0, #8]
	ldr r1, [sp, #0x4c]
	str r1, [r0, #0xc]
	ldr r2, [sp, #0x50]
	str r2, [r0, #0x10]
	ldr r1, [sp, #0x44]
	str r1, [r0, #0x14]
	ldr r2, [sp, #0x48]
	str r2, [r0, #0x18]
_080924F4:
	strb r4, [r0, #0x1c]
	str r5, [sp, #0x18]
	ldr r1, [sp, #0x40]
	str r0, [r1]
	ldr r1, [sp, #0x14]
	cmp r1, #0
	beq _0809255C
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
	b _0809255C
	.align 2, 0
_08092510: .4byte vtable_unk_080E5E14
_08092514:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _08092522
	bl _0809178A
_08092522:
	ldr r2, [sp, #0x14]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _08092532
	bl _0809178A
_08092532:
	movs r0, #1
	str r0, [sp, #0x5c]
	ldr r1, _08092558 @ =0x00000889
	adds r0, r2, #0
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x14]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	bl _0809178A
	.align 2, 0
_08092558: .4byte 0x00000889
_0809255C:
	ldr r0, [sp, #0x40]
	add sp, #0x68
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08092570
func_08092570: @ 0x08092570
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	adds r6, r0, #0
	adds r5, r1, #0
	mov sb, r2
	lsls r4, r3, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080925C0 @ =vtable_unk_080E7DC8
	str r0, [r6]
	ldr r0, [r5]
	movs r1, #0
	mov r8, r1
	str r1, [r5]
	str r0, [sp]
	movs r0, #0xdc
	lsls r0, r0, #1
	bl __builtin_new
	mov r1, sp
	mov r2, sb
	adds r3, r4, #0
	bl func_08090EE0
	str r0, [r6, #4]
	ldr r0, [r5]
	mov r1, r8
	str r1, [r5]
	str r0, [r6, #8]
	adds r0, r6, #0
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080925C0: .4byte vtable_unk_080E7DC8

	thumb_func_start func_080925C4
func_080925C4: @ 0x080925C4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08092600 @ =vtable_unk_080E7DC8
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080925E0
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080925E0:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _080925F2
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080925F2:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08092600: .4byte vtable_unk_080E7DC8

	thumb_func_start func_08092604
func_08092604: @ 0x08092604
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r1, [r1, #4]
	mov r0, sp
	bl func_0809152C
	ldr r2, [sp]
	mov r0, sp
	str r0, [sp, #4]
	str r2, [sp, #8]
	adds r1, r0, #0
	movs r0, #0
	str r0, [r1]
	str r2, [r4]
	ldr r1, [sp]
	cmp r1, #0
	beq _08092634
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08092634:
	adds r0, r4, #0
	add sp, #0xc
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08092640
func_08092640: @ 0x08092640
	push {r4, r5, lr}
	adds r4, r0, #0
	bl func_080CE19C
	ldr r0, _08092688 @ =vtable_unk_080E7DD8
	str r0, [r4, #4]
	adds r0, r4, #0
	adds r0, #0x98
	movs r3, #0
	strb r3, [r0]
	adds r2, r4, #0
	adds r2, #0xfc
	ldr r1, [r4, #8]
	ldr r5, _0809268C @ =0x00001C34
	adds r0, r1, r5
	str r0, [r2]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r2, r4, r0
	subs r5, #8
	adds r0, r1, r5
	str r0, [r2]
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r4, r2
	adds r5, #0xc
	adds r1, r1, r5
	str r1, [r0]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r4, r1
	str r3, [r0]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08092688: .4byte vtable_unk_080E7DD8
_0809268C: .4byte 0x00001C34

	thumb_func_start func_08092690
func_08092690: @ 0x08092690
	push {lr}
	ldr r2, _080926A0 @ =vtable_unk_080E7DD8
	str r2, [r0, #4]
	bl func_080E3504
	pop {r0}
	bx r0
	.align 2, 0
_080926A0: .4byte vtable_unk_080E7DD8

	thumb_func_start func_080926A4
func_080926A4: @ 0x080926A4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r6, r0, #0
	adds r7, r1, #0
	movs r5, #0
	cmp r5, r7
	bhs _08092708
_080926B2:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r0, [r0]
	adds r1, r5, #0
	bl func_0800FE18
	adds r1, r0, #0
	add r0, sp, #4
	movs r2, #2
	bl memcpy
	add r0, sp, #4
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08092702
	add r0, sp, #4
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	add r0, sp, #8
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	add r0, sp, #4
	bl GetAmount__C9ToolStack
	ldr r1, [r6, #0x78]
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r5, #0
	ldr r2, _08092750 @ =0x086678A0
	adds r3, r4, #0
	bl func_080CB304
_08092702:
	adds r5, #1
	cmp r5, r7
	blo _080926B2
_08092708:
	adds r7, r6, #0
	adds r7, #0xfc
	ldr r0, [r7]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08092746
	ldr r0, [r7]
	bl GetTool__C9ToolStack
	adds r1, r0, #0
	mov r0, sp
	adds r0, #9
	strb r1, [r0]
	bl GetIconId__C4Tool
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r5, [r6, #0x78]
	ldr r6, _08092750 @ =0x086678A0
	ldr r0, [r7]
	bl GetAmount__C9ToolStack
	adds r3, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl func_080CBAF0
_08092746:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08092750: .4byte 0x086678A0

	thumb_func_start func_08092754
func_08092754: @ 0x08092754
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	adds r5, r0, #0
	adds r7, r1, #0
	movs r6, #0
	cmp r6, r7
	bhs _080927DE
_08092762:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	adds r1, r6, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #4
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080927D8
	movs r4, #0
	add r0, sp, #4
	bl GetKind__C12RucksackItem
	cmp r0, #0
	beq _08092792
	cmp r0, #1
	beq _080927A4
	b _080927B8
_08092792:
	add r4, sp, #8
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetIconId__C4Food
	b _080927B4
_080927A4:
	add r0, sp, #4
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0xc
	strb r1, [r0]
	bl GetIconId__C7Article
_080927B4:
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_080927B8:
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080927C8
	movs r4, #0xb0
	lsls r4, r4, #1
_080927C8:
	ldr r0, [r5, #0x7c]
	movs r1, #1
	str r1, [sp]
	adds r1, r6, #0
	ldr r2, _08092808 @ =0x086678A0
	adds r3, r4, #0
	bl func_080CC728
_080927D8:
	adds r6, #1
	cmp r6, r7
	blo _08092762
_080927DE:
	movs r2, #0x80
	lsls r2, r2, #1
	adds r4, r5, r2
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080927F2
	b _08092934
_080927F2:
	ldr r0, [r4]
	bl func_0800F204
	cmp r0, #5
	bls _080927FE
	b _08092934
_080927FE:
	lsls r0, r0, #2
	ldr r1, _0809280C @ =_08092810
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08092808: .4byte 0x086678A0
_0809280C: .4byte _08092810
_08092810: @ jump table
	.4byte _08092828 @ case 0
	.4byte _08092864 @ case 1
	.4byte _080928A4 @ case 2
	.4byte _080928D8 @ case 3
	.4byte _08092928 @ case 4
	.4byte _08092934 @ case 5
_08092828:
	movs r0, #0x80
	lsls r0, r0, #1
	adds r4, r5, r0
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F20C
	add r0, sp, #4
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08092858
	movs r6, #0xb0
	lsls r6, r6, #1
_08092858:
	ldr r0, [r5, #0x7c]
	ldr r1, _08092860 @ =0x086678A0
	adds r2, r6, #0
	b _08092916
	.align 2, 0
_08092860: .4byte 0x086678A0
_08092864:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r0, [r4]
	bl func_0800F258
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xd
	strb r1, [r0]
	bl GetIconId__C7Article
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, [r4]
	add r0, sp, #4
	bl func_0800F294
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08092898
	movs r6, #0xb0
	lsls r6, r6, #1
_08092898:
	ldr r0, [r5, #0x7c]
	ldr r1, _080928A0 @ =0x086678A0
	adds r2, r6, #0
	b _08092916
	.align 2, 0
_080928A0: .4byte 0x086678A0
_080928A4:
	ldr r0, [r5, #8]
	ldr r2, _080928BC @ =0x00001C70
	adds r0, r0, r2
	bl GetGrowthStage__C3Dog
	cmp r0, #0
	bne _080928C8
	ldr r0, [r5, #0x7c]
	ldr r1, _080928C0 @ =0x0858BA28
	ldr r2, _080928C4 @ =0x000003DA
	b _08092916
	.align 2, 0
_080928BC: .4byte 0x00001C70
_080928C0: .4byte 0x0858BA28
_080928C4: .4byte 0x000003DA
_080928C8:
	ldr r0, [r5, #0x7c]
	ldr r1, _080928D4 @ =0x0858BA28
	movs r2, #0xdd
	lsls r2, r2, #2
	b _08092916
	.align 2, 0
_080928D4: .4byte 0x0858BA28
_080928D8:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	bl func_0800F344
	adds r1, r0, #0
	ldr r0, [r5, #8]
	movs r2, #0x82
	lsls r2, r2, #3
	adds r0, r0, r2
	bl GetChicken__4CoopUi
	cmp r0, #0
	beq _08092934
	bl GetGrowthStage__C7Chicken
	cmp r0, #0
	bne _08092910
	ldr r0, [r5, #0x7c]
	ldr r1, _08092908 @ =0x0858BA28
	ldr r2, _0809290C @ =0x0000073D
	b _08092916
	.align 2, 0
_08092908: .4byte 0x0858BA28
_0809290C: .4byte 0x0000073D
_08092910:
	ldr r0, [r5, #0x7c]
	ldr r1, _08092920 @ =0x0858BA28
	ldr r2, _08092924 @ =0x00000734
_08092916:
	movs r3, #1
	bl func_080CCE58
	b _08092934
	.align 2, 0
_08092920: .4byte 0x0858BA28
_08092924: .4byte 0x00000734
_08092928:
	ldr r0, [r5, #0x7c]
	ldr r1, _0809293C @ =0x086678A0
	movs r2, #0x35
	movs r3, #1
	bl func_080CCE58
_08092934:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809293C: .4byte 0x086678A0

	thumb_func_start func_08092940
func_08092940: @ 0x08092940
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	adds r7, r1, #0
	movs r0, #0
	mov r8, r0
	adds r5, r6, #0
	adds r5, #0x98
	mov r1, r8
	strb r1, [r5]
	cmp r7, #0
	beq _0809298E
	cmp r7, #9
	beq _080929B4
	cmp r7, #8
	bgt _08092A02
	movs r0, #0x82
	lsls r0, r0, #1
	adds r0, r0, r6
	mov sb, r0
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08092A3A
	b _080929D2
_0809298E:
	adds r4, r6, #0
	adds r4, #0xfc
	ldr r0, [r4]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08092A3A
	ldr r0, [r4]
	bl GetTool__C9ToolStack
	add r2, sp, #8
	strb r0, [r2]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r3, #1
	bl func_080CF05C
	b _08092A38
_080929B4:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r6, r1
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08092A3A
	ldr r2, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CF67C
	b _08092A38
_080929D2:
	adds r5, r6, #0
	adds r5, #0x98
	mov r0, sb
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	bl GetTool__C9ToolStack
	mov r2, sp
	adds r2, #9
	strb r0, [r2]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r3, #0
	bl func_080CF05C
	b _08092A38
_08092A02:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r7, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp]
	mov r0, sp
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08092A3A
	ldr r2, [sp]
	str r2, [sp, #4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl func_080CFA38
_08092A38:
	mov r8, r0
_08092A3A:
	mov r0, r8
	cmp r0, #0
	beq _08092A50
	adds r0, r6, #0
	adds r0, #0x80
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	b _08092A5E
_08092A50:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08092A6C @ =0x081003F0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
_08092A5E:
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08092A6C: .4byte 0x081003F0

	thumb_func_start func_08092A70
func_08092A70: @ 0x08092A70
	push {r4, r5, r6, lr}
	sub sp, #0x18
	adds r5, r0, #0
	cmp r1, #0
	bne _08092A8C
	adds r0, #0xfc
	ldr r0, [r0]
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08092A8A
	b _08092C84
_08092A8A:
	b _08092C62
_08092A8C:
	cmp r1, #8
	bgt _08092AC2
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r4, [r0]
	adds r0, r5, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FE18
	adds r1, r0, #0
	add r0, sp, #0xc
	movs r2, #2
	bl memcpy
	add r0, sp, #0xc
	bl IsEmpty__C9ToolStack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08092AC0
	b _08092C84
_08092AC0:
	b _08092C62
_08092AC2:
	cmp r1, #9
	beq _08092AC8
	b _08092C04
_08092AC8:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r0, [r4]
	bl func_0800F190
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08092ADC
	b _08092C84
_08092ADC:
	ldr r0, [r4]
	bl func_0800F204
	adds r6, r0, #0
	cmp r6, #1
	beq _08092B5C
	cmp r6, #1
	bgt _08092AF2
	cmp r6, #0
	beq _08092AF8
	b _08092C62
_08092AF2:
	cmp r6, #2
	beq _08092BDC
	b _08092C62
_08092AF8:
	ldr r0, [r4]
	bl func_0800F388
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08092B28
	adds r4, r5, #0
	adds r4, #0x80
	ldr r1, _08092B24 @ =0x081003F4
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	adds r0, r4, #0
	movs r1, #0x43
	bl func_08050E50
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r5, r2
	b _08092C80
	.align 2, 0
_08092B24: .4byte 0x081003F4
_08092B28:
	adds r4, r5, #0
	adds r4, #0x80
	ldr r1, _08092B50 @ =0x08100420
	ldr r2, _08092B54 @ =0x08100430
	ldr r3, _08092B58 @ =0x08100434
	str r6, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	adds r0, r4, #0
	bl func_08050E30
	adds r0, r4, #0
	movs r1, #0x43
	bl func_08050E50
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r5, r0
	b _08092CB8
	.align 2, 0
_08092B50: .4byte 0x08100420
_08092B54: .4byte 0x08100430
_08092B58: .4byte 0x08100434
_08092B5C:
	ldr r0, [r4]
	bl func_0800F388
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08092B8C
	adds r4, r5, #0
	adds r4, #0x80
	ldr r1, _08092B88 @ =0x081003F4
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	adds r0, r4, #0
	movs r1, #0x43
	bl func_08050E50
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r5, r2
	b _08092C80
	.align 2, 0
_08092B88: .4byte 0x081003F4
_08092B8C:
	ldr r0, [r4]
	bl func_0800F258
	adds r1, r0, #0
	add r0, sp, #0x14
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _08092C62
	adds r4, r5, #0
	adds r4, #0x80
	ldr r1, _08092BD0 @ =0x08100420
	ldr r2, _08092BD4 @ =0x08100430
	ldr r3, _08092BD8 @ =0x08100434
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r0, r4, #0
	bl func_08050E30
	adds r0, r4, #0
	movs r1, #0x43
	bl func_08050E50
	movs r1, #0x84
	lsls r1, r1, #1
	adds r0, r5, r1
	str r6, [r0]
	b _08092CBC
	.align 2, 0
_08092BD0: .4byte 0x08100420
_08092BD4: .4byte 0x08100430
_08092BD8: .4byte 0x08100434
_08092BDC:
	adds r4, r5, #0
	adds r4, #0x80
	ldr r1, _08092C00 @ =0x08100438
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	adds r0, r4, #0
	movs r1, #0x45
	bl func_08050E50
	movs r2, #0x84
	lsls r2, r2, #1
	adds r0, r5, r2
	str r6, [r0]
	b _08092C84
	.align 2, 0
_08092C00: .4byte 0x08100438
_08092C04:
	add r6, sp, #0x10
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r4, [r0]
	adds r0, r5, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [sp, #0x10]
	adds r0, r6, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08092C84
	adds r0, r6, #0
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08092C62
	adds r0, r6, #0
	bl GetKind__C12RucksackItem
	cmp r0, #0
	beq _08092C94
	adds r0, r6, #0
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0x15
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	movs r1, #1
	eors r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	beq _08092C94
_08092C62:
	adds r4, r5, #0
	adds r4, #0x80
	ldr r1, _08092C90 @ =0x081003F4
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	adds r0, r4, #0
	movs r1, #0x43
	bl func_08050E50
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r5, r0
_08092C80:
	movs r0, #2
	str r0, [r1]
_08092C84:
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0xc7
	bl func_08008B6C
	b _08092CBC
	.align 2, 0
_08092C90: .4byte 0x081003F4
_08092C94:
	adds r4, r5, #0
	adds r4, #0x80
	ldr r1, _08092CC4 @ =0x08100420
	ldr r2, _08092CC8 @ =0x08100430
	ldr r3, _08092CCC @ =0x08100434
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r0, r4, #0
	bl func_08050E30
	adds r0, r4, #0
	movs r1, #0x43
	bl func_08050E50
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r5, r2
_08092CB8:
	movs r0, #1
	str r0, [r1]
_08092CBC:
	add sp, #0x18
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08092CC4: .4byte 0x08100420
_08092CC8: .4byte 0x08100430
_08092CCC: .4byte 0x08100434

	thumb_func_start func_08092CD0
func_08092CD0: @ 0x08092CD0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r1, #0
	cmp r6, #9
	bne _08092CFC
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	bl func_0800F528
	ldr r0, [r5, #0x7c]
	ldr r1, _08092CF8 @ =0x086678A0
	movs r2, #0xb0
	lsls r2, r2, #1
	movs r3, #1
	bl func_080CCE58
	b _08092D38
	.align 2, 0
_08092CF8: .4byte 0x086678A0
_08092CFC:
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r4, [r0]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_0800FCDC
	bl TryWrap__12RucksackItem
	ldr r4, [r5, #0x7c]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	bl func_080CE184
	adds r1, r0, #0
	ldr r2, _08092D58 @ =0x086678A0
	movs r3, #0xb0
	lsls r3, r3, #1
	movs r0, #1
	str r0, [sp]
	adds r0, r4, #0
	bl func_080CC728
_08092D38:
	ldr r0, [r5, #8]
	ldr r1, _08092D5C @ =0x00001AA8
	adds r0, r0, r1
	movs r1, #0x64
	bl func_0809ACC0
	ldr r0, [r5, #8]
	ldr r1, _08092D60 @ =0x00001CD4
	adds r0, r0, r1
	movs r1, #1
	bl func_080A0A54
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08092D58: .4byte 0x086678A0
_08092D5C: .4byte 0x00001AA8
_08092D60: .4byte 0x00001CD4

	thumb_func_start func_08092D64
func_08092D64: @ 0x08092D64
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_080CE294
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	bl func_0800F5F8
	mov r8, r0
	movs r0, #0xa7
	lsls r0, r0, #2
	bl __builtin_new
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _08092FA0 @ =0x08100450
	str r0, [sp]
	add r4, sp, #4
	movs r0, #1
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	mov r3, r8
	bl func_080CAFC4
	adds r6, r7, #0
	adds r6, #0x78
	adds r5, r0, #0
	ldr r1, [r7, #0x78]
	mov sb, r4
	cmp r5, r1
	beq _08092DDC
	cmp r1, #0
	beq _08092DDC
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08092DDC:
	str r5, [r6]
	ldr r0, [r7, #0x78]
	bl func_080CB090
	adds r0, r7, #0
	mov r1, r8
	bl func_080926A4
	movs r0, #0xcb
	lsls r0, r0, #2
	bl __builtin_new
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _08092FA4 @ =0x08100458
	str r0, [sp]
	movs r0, #1
	mov r1, sb
	strb r0, [r1]
	adds r0, r5, #0
	adds r1, r4, #0
	mov r3, r8
	bl func_080CC15C
	adds r5, r7, #0
	adds r5, #0x7c
	adds r4, r0, #0
	ldr r1, [r7, #0x7c]
	cmp r4, r1
	beq _08092E3C
	cmp r1, #0
	beq _08092E3C
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08092E3C:
	str r4, [r5]
	ldr r0, [r7, #0x7c]
	bl func_080CC310
	adds r0, r7, #0
	mov r1, r8
	bl func_08092754
	movs r0, #0x8c
	bl __builtin_new
	adds r1, r7, #0
	movs r2, #1
	bl func_080CD9B0
	adds r6, r7, #0
	adds r6, #0x8c
	mov r8, r0
	ldr r5, [r6]
	mov sb, r6
	cmp r8, r5
	beq _08092E9C
	cmp r5, #0
	beq _08092E9C
	ldr r0, _08092FA8 @ =vtable_unk_080E5A28
	str r0, [r5, #0x24]
	adds r4, r5, #0
	adds r4, #0x1c
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	adds r0, r5, #0
	bl __builtin_delete
_08092E9C:
	mov r0, r8
	str r0, [r6]
	movs r0, #0x88
	bl __builtin_new
	adds r1, r7, #0
	bl func_080CEC00
	movs r1, #0x90
	adds r1, r1, r7
	mov r8, r1
	adds r6, r0, #0
	ldr r5, [r1]
	cmp r6, r5
	beq _08092EEE
	cmp r5, #0
	beq _08092EEE
	adds r4, r5, #0
	adds r4, #0x74
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007184
	subs r4, #8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007C28
	adds r0, r4, #0
	movs r1, #2
	bl func_080079E8
	ldr r0, _08092FA8 @ =vtable_unk_080E5A28
	str r0, [r5, #4]
	adds r0, r5, #0
	bl __builtin_delete
_08092EEE:
	mov r2, r8
	str r6, [r2]
	mov r1, sb
	ldr r0, [r1]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_08092940
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #8
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _08092FAC @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0xc]
	ldr r1, _08092FB0 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r2, #0
	str r2, [sp, #0x10]
	mov sl, r2
_08092F56:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	adds r0, r7, #0
	bl func_080CE2C4
	ldr r3, [sp, #0xc]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r4, r0, #0x1f
	cmp r4, #0
	bne _08092F56
	ldr r0, [sp, #0x10]
	cmp r0, #0
	beq _08092F7E
	b _08093194
_08092F7E:
	mov r6, sb
	ldr r0, [r6]
	ldr r5, [r0, #4]
	movs r1, #0x84
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	ldr r0, [r1]
	cmp r0, #1
	bne _08092F94
	b _080930B8
_08092F94:
	cmp r0, #1
	bgt _08092FB4
	cmp r0, #0
	beq _08092FBC
	b _08092F56
	.align 2, 0
_08092FA0: .4byte 0x08100450
_08092FA4: .4byte 0x08100458
_08092FA8: .4byte vtable_unk_080E5A28
_08092FAC: .4byte vtable_unk_080E5B80
_08092FB0: .4byte 0x00000889
_08092FB4:
	cmp r0, #2
	bne _08092FBA
	b _08093128
_08092FBA:
	b _08092F56
_08092FBC:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08092FD2
	ldr r0, [r6]
	bl func_080CDA44
	b _08093044
_08092FD2:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08092FE8
	ldr r0, [r6]
	bl func_080CDB08
	b _08093044
_08092FE8:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08092FFE
	ldr r0, [r6]
	bl func_080CDCD0
	b _08093044
_08092FFE:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08093014
	ldr r0, [r6]
	bl func_080CDC00
	b _08093044
_08093014:
	movs r4, #0
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _08093036
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _08093038
_08093036:
	movs r4, #1
_08093038:
	cmp r4, #0
	beq _08093050
	mov r2, sb
	ldr r0, [r2]
	bl func_080CDD7C
_08093044:
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #0xcb
	bl func_08008B6C
	b _080930A0
_08093050:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0809306C
	mov r1, sb
	ldr r0, [r1]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_08092A70
	b _080930A0
_0809306C:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080930A0
	adds r4, r7, #0
	adds r4, #0x80
	adds r0, r4, #0
	ldr r1, _080930B4 @ =0x08100460
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	adds r0, r4, #0
	movs r1, #0x43
	bl func_08050E50
	movs r2, #1
	mov sl, r2
	movs r0, #0x84
	lsls r0, r0, #1
	adds r1, r7, r0
	movs r0, #2
	str r0, [r1]
_080930A0:
	mov r1, sb
	ldr r0, [r1]
	ldr r1, [r0, #4]
	cmp r5, r1
	bne _080930AC
	b _08092F56
_080930AC:
	adds r0, r7, #0
	bl func_08092940
	b _08092F56
	.align 2, 0
_080930B4: .4byte 0x08100460
_080930B8:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _080930C4
	b _08092F56
_080930C4:
	adds r4, r7, #0
	adds r4, #0x80
	adds r0, r4, #0
	bl func_08050DF0
	adds r5, r0, #0
	cmp r5, #1
	beq _080930DA
	cmp r5, #2
	beq _08093108
	b _08092F56
_080930DA:
	adds r0, r4, #0
	ldr r1, _08093104 @ =0x08100490
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	adds r0, r4, #0
	movs r1, #0x43
	bl func_08050E50
	ldr r0, [r6]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_08092CD0
	movs r2, #1
	mov sl, r2
	movs r0, #2
	mov r1, r8
	str r0, [r1]
	b _08092F56
	.align 2, 0
_08093104: .4byte 0x08100490
_08093108:
	adds r0, r4, #0
	ldr r1, _08093124 @ =0x081004BC
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	adds r0, r4, #0
	movs r1, #0x43
	bl func_08050E50
	mov r2, r8
	str r5, [r2]
	b _08092F56
	.align 2, 0
_08093124: .4byte 0x081004BC
_08093128:
	adds r0, r7, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #3
	beq _08093134
	b _08092F56
_08093134:
	adds r0, r7, #0
	adds r0, #0x80
	bl func_08050E5C
	mov r0, sl
	cmp r0, #0
	beq _0809317C
	ldr r2, [sp, #0xc]
	ldr r1, [r2]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08093170
	movs r1, #1
	str r1, [sp, #0x10]
	adds r0, r2, #0
	adds r0, #0xc
	ldr r1, _08093178 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0xc]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
_08093170:
	mov r2, r8
	str r4, [r2]
	b _08093188
	.align 2, 0
_08093178: .4byte 0x00000889
_0809317C:
	mov r1, sb
	ldr r0, [r1]
	ldr r1, [r0, #4]
	adds r0, r7, #0
	bl func_08092940
_08093188:
	movs r2, #0x84
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #0
	str r0, [r1]
	b _08092F56
_08093194:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_080931B0
func_080931B0: @ 0x080931B0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _080931DC @ =vtable_unk_080E7DE4
	str r0, [r4]
	movs r0, #0x86
	lsls r0, r0, #1
	bl __builtin_new
	adds r1, r5, #0
	bl func_08092640
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080931DC: .4byte vtable_unk_080E7DE4

	thumb_func_start func_080931E0
func_080931E0: @ 0x080931E0
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0809321C @ =vtable_unk_080E7DE4
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _080931FC
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080931FC:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0809320E
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0809320E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809321C: .4byte vtable_unk_080E7DE4

	thumb_func_start func_08093220
func_08093220: @ 0x08093220
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_08092D64
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0809323C
func_0809323C: @ 0x0809323C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	adds r7, r0, #0
	adds r5, r1, #0
	bl func_08008444
	adds r4, r7, #0
	adds r4, #8
	adds r0, r4, #0
	bl func_0809424C
	ldr r0, _080932FC @ =vtable_unk_080E7F0C
	str r0, [r7, #8]
	adds r0, r7, #0
	adds r0, #0x38
	bl func_080D02CC
	adds r0, r4, #0
	movs r1, #0
	bl func_080E3A9C
	ldr r0, _08093300 @ =vtable_unk_080E7DF4
	str r0, [r7, #8]
	ldr r0, _08093304 @ =vtable_unk_080E7F00
	str r0, [r7, #4]
	movs r1, #0xe2
	lsls r1, r1, #1
	adds r0, r7, r1
	movs r6, #1
	str r6, [r0]
	movs r0, #0x4c
	bl __builtin_new
	adds r1, r5, #0
	bl func_080947BC
	movs r2, #0xe4
	lsls r2, r2, #1
	adds r1, r7, r2
	str r0, [r1]
	movs r1, #0xe6
	lsls r1, r1, #1
	adds r0, r7, r1
	str r5, [r0]
	add r0, sp, #0xc
	bl func_0800835C
	add r4, sp, #0x10
	adds r0, r4, #0
	bl func_0800770C
	movs r2, #0xe8
	lsls r2, r2, #1
	adds r0, r7, r2
	movs r5, #0
	str r5, [sp]
	add r1, sp, #0xc
	str r1, [sp, #4]
	str r4, [sp, #8]
	movs r1, #0
	movs r2, #0x1d
	movs r3, #0
	bl func_08050CC0
	adds r0, r4, #0
	movs r1, #2
	bl func_08007714
	add r0, sp, #0xc
	movs r1, #2
	bl func_08008364
	movs r2, #0xea
	lsls r2, r2, #1
	adds r0, r7, r2
	movs r1, #1
	bl func_08008B54
	movs r1, #0xf0
	lsls r1, r1, #1
	adds r0, r7, r1
	strb r5, [r0]
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r7, r2
	str r5, [r0]
	movs r1, #0xfb
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r6, [r0]
	adds r0, r7, #0
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080932FC: .4byte vtable_unk_080E7F0C
_08093300: .4byte vtable_unk_080E7DF4
_08093304: .4byte vtable_unk_080E7F00

	thumb_func_start func_08093308
func_08093308: @ 0x08093308
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r0, _08093358 @ =vtable_unk_080E7DF4
	str r0, [r5, #8]
	ldr r0, _0809335C @ =vtable_unk_080E7F00
	str r0, [r5, #4]
	movs r1, #0xe8
	lsls r1, r1, #1
	adds r0, r5, r1
	movs r1, #2
	bl func_08050D0C
	movs r1, #0xe4
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #0
	beq _08093334
	movs r1, #3
	bl func_08094814
_08093334:
	adds r4, r5, #0
	adds r4, #8
	ldr r0, _08093360 @ =vtable_unk_080E7F0C
	str r0, [r5, #8]
	bl func_080D02EC
	adds r0, r4, #0
	movs r1, #0
	bl func_08094268
	adds r0, r5, #0
	adds r1, r6, #0
	bl func_080086BC
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08093358: .4byte vtable_unk_080E7DF4
_0809335C: .4byte vtable_unk_080E7F00
_08093360: .4byte vtable_unk_080E7F0C

	thumb_func_start func_08093364
func_08093364: @ 0x08093364
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x5c
	adds r7, r0, #0
	bl func_08008724
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0x10
	movs r3, #0xea
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #8]
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0x10
	ldr r3, _0809355C @ =0x00001E41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	adds r0, r7, #0
	bl func_08008918
	add r2, sp, #0x10
	ldr r3, _08093560 @ =0x00001F42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	movs r4, #1
	rsbs r4, r4, #0
	ldr r0, _08093564 @ =0x0600F000
	mov r8, r0
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r4, #0
	mov r1, r8
	adds r2, r5, #0
	bl func_08008EB8
	ldr r6, _08093568 @ =0x0600F800
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r1, _0809356C @ =0x06007FE0
	movs r2, #0x80
	lsls r2, r2, #8
	movs r0, #0
	bl func_08008EB8
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #0x10
	movs r3, #0xb2
	lsls r3, r3, #5
	adds r2, r3, #0
	strh r2, [r1]
	movs r1, #0
	mov sb, r1
	strh r2, [r0]
	ldr r0, _08093570 @ =0x080F9F70
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r2, _08093574 @ =0x080F9F74
	ldr r2, [r2]
	bl func_08008E64
	ldr r0, _08093578 @ =0x00030003
	adds r1, r6, #0
	adds r2, r5, #0
	bl func_08008EB8
	ldr r0, _0809357C @ =0x080F9F78
	ldr r0, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x20
	bl func_08008E64
	ldr r0, _08093580 @ =0x03FF03FF
	mov r1, r8
	adds r2, r5, #0
	bl func_08008EB8
	movs r2, #0xe8
	lsls r2, r2, #1
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08050D5C
	adds r0, r4, #0
	movs r1, #0x38
	bl func_08050E50
	movs r3, #0xe6
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	ldr r1, _08093584 @ =0x00001CD4
	adds r0, r0, r1
	movs r1, #0x1f
	bl func_0809FE3C
	adds r1, r0, #0
	adds r0, r4, #0
	bl func_08050E68
	ldr r1, _08093588 @ =func_080D0704
	movs r0, #7
	bl func_080D100C
	movs r0, #0x80
	bl func_0800050C
	movs r0, #0
	movs r1, #0x80
	bl func_08000540
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #0x10
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	mov r2, sb
	str r2, [r4]
	str r2, [r4, #4]
	ldr r0, _0809358C @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #0x14]
	ldr r1, _08093590 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x14]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r3, #0
	str r3, [sp, #0x50]
_080934B8:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	ldr r0, [r7, #8]
	movs r1, #8
	adds r1, r1, r7
	mov sl, r1
	ldr r1, [r0, #0xc]
	mov r0, sl
	bl _call_via_r1
	movs r2, #0xe8
	lsls r2, r2, #1
	adds r2, r2, r7
	mov r8, r2
	mov r0, r8
	bl func_08050D34
	movs r3, #0xec
	lsls r3, r3, #1
	adds r1, r7, r3
	str r0, [r1]
	adds r0, r7, #0
	bl func_080088DC
	mov sb, r0
	adds r0, r7, #0
	bl func_08008920
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_0800894C
	movs r2, #0xea
	lsls r2, r2, #1
	adds r1, r7, r2
	str r4, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	mov r0, r8
	mov r1, sb
	adds r2, r6, #0
	adds r3, r5, #0
	bl func_08050D3C
	movs r3, #0xee
	lsls r3, r3, #1
	adds r1, r7, r3
	str r0, [r1]
	movs r0, #0xfb
	lsls r0, r0, #2
	adds r1, r7, r0
	ldrb r0, [r1]
	mov r2, sl
	str r2, [sp, #0x58]
	cmp r0, #0
	beq _08093626
	movs r0, #0
	strb r0, [r1]
	movs r3, #0xfa
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #8
	bhi _08093626
	lsls r0, r0, #2
	ldr r1, _08093594 @ =_08093598
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809355C: .4byte 0x00001E41
_08093560: .4byte 0x00001F42
_08093564: .4byte 0x0600F000
_08093568: .4byte 0x0600F800
_0809356C: .4byte 0x06007FE0
_08093570: .4byte 0x080F9F70
_08093574: .4byte 0x080F9F74
_08093578: .4byte 0x00030003
_0809357C: .4byte 0x080F9F78
_08093580: .4byte 0x03FF03FF
_08093584: .4byte 0x00001CD4
_08093588: .4byte func_080D0704
_0809358C: .4byte vtable_unk_080E5B80
_08093590: .4byte 0x00000889
_08093594: .4byte _08093598
_08093598: @ jump table
	.4byte _08093626 @ case 0
	.4byte _08093626 @ case 1
	.4byte _08093626 @ case 2
	.4byte _08093626 @ case 3
	.4byte _08093626 @ case 4
	.4byte _08093626 @ case 5
	.4byte _080935BC @ case 6
	.4byte _08093626 @ case 7
	.4byte _08093626 @ case 8
_080935BC:
	ldr r0, [r7, #8]
	ldr r1, [r0, #0x18]
	ldr r0, [sp, #0x58]
	bl _call_via_r1
	cmp r0, #1
	beq _080935D8
	cmp r0, #1
	ble _08093626
	cmp r0, #2
	beq _080935F4
	cmp r0, #3
	beq _08093610
	b _08093626
_080935D8:
	movs r0, #0xe8
	lsls r0, r0, #1
	adds r4, r7, r0
	ldr r1, _080935F0 @ =0x08100610
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0x38
	bl func_08050E50
	b _08093626
	.align 2, 0
_080935F0: .4byte 0x08100610
_080935F4:
	movs r1, #0xe8
	lsls r1, r1, #1
	adds r4, r7, r1
	ldr r1, _0809360C @ =0x08100638
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0x3a
	bl func_08050E50
	b _08093626
	.align 2, 0
_0809360C: .4byte 0x08100638
_08093610:
	movs r2, #0xe8
	lsls r2, r2, #1
	adds r4, r7, r2
	ldr r1, _08093640 @ =0x08100678
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0x3a
	bl func_08050E50
_08093626:
	movs r3, #0xfa
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #8
	bls _08093634
	b _08093A14
_08093634:
	lsls r0, r0, #2
	ldr r1, _08093644 @ =_08093648
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08093640: .4byte 0x08100678
_08093644: .4byte _08093648
_08093648: @ jump table
	.4byte _0809366C @ case 0
	.4byte _08093698 @ case 1
	.4byte _080936B8 @ case 2
	.4byte _080936F8 @ case 3
	.4byte _08093758 @ case 4
	.4byte _080937CA @ case 5
	.4byte _08093940 @ case 6
	.4byte _080939CC @ case 7
	.4byte _08093A14 @ case 8
_0809366C:
	movs r0, #0xe8
	lsls r0, r0, #1
	adds r4, r7, r0
	ldr r1, _08093694 @ =0x081006C4
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0x38
	bl func_08050E50
	movs r1, #1
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r7, r2
	str r1, [r0]
	movs r3, #0xfb
	lsls r3, r3, #2
	adds r0, r7, r3
	b _08093A12
	.align 2, 0
_08093694: .4byte 0x081006C4
_08093698:
	movs r1, #0xee
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #3
	beq _080936A6
	b _08093A14
_080936A6:
	movs r1, #2
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r7, r2
	str r1, [r0]
	movs r3, #0xfb
	lsls r3, r3, #2
	adds r1, r7, r3
	b _080937C4
_080936B8:
	movs r0, #0xe8
	lsls r0, r0, #1
	adds r4, r7, r0
	ldr r1, _080936EC @ =0x0810073C
	ldr r2, _080936F0 @ =0x0810058C
	ldr r3, _080936F4 @ =0x08100590
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r0, r4, #0
	bl func_08050E30
	adds r0, r4, #0
	movs r1, #0x39
	bl func_08050E50
	movs r1, #3
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r7, r2
	str r1, [r0]
	movs r3, #0xfb
	lsls r3, r3, #2
	adds r1, r7, r3
	b _080937C4
	.align 2, 0
_080936EC: .4byte 0x0810073C
_080936F0: .4byte 0x0810058C
_080936F4: .4byte 0x08100590
_080936F8:
	movs r1, #0xee
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #3
	beq _08093706
	b _08093A14
_08093706:
	movs r2, #0xe8
	lsls r2, r2, #1
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08050DF0
	adds r2, r0, #0
	cmp r2, #1
	beq _0809371E
	cmp r2, #2
	beq _08093732
	b _08093A14
_0809371E:
	movs r0, #4
	movs r3, #0xfa
	lsls r3, r3, #2
	adds r1, r7, r3
	str r0, [r1]
	movs r1, #0xfb
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r2, [r0]
	b _08093A14
_08093732:
	ldr r1, _08093754 @ =0x08100758
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0x3a
	bl func_08050E50
	movs r1, #7
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r7, r2
	str r1, [r0]
	movs r3, #0xfb
	lsls r3, r3, #2
	adds r0, r7, r3
	b _080939B8
	.align 2, 0
_08093754: .4byte 0x08100758
_08093758:
	movs r3, #0xe4
	lsls r3, r3, #1
	adds r4, r7, r3
	ldr r0, [r4]
	bl func_08094844
	ldr r0, [r4]
	bl func_080948E0
	str r0, [sp, #0x54]
	ldr r0, [r4]
	bl func_080948EC
	mov sl, r0
	ldr r0, [r4]
	bl func_080948FC
	mov sb, r0
	ldr r0, [r4]
	bl func_08094900
	mov r8, r0
	ldr r0, [r4]
	bl func_08094904
	adds r6, r0, #0
	ldr r0, [r4]
	bl func_08094908
	adds r5, r0, #0
	ldr r0, [r4]
	bl func_0809490C
	ldr r1, [r7, #8]
	mov r2, r8
	str r2, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	str r0, [sp, #0xc]
	ldr r4, [r1, #8]
	ldr r0, [sp, #0x58]
	ldr r1, [sp, #0x54]
	mov r2, sl
	mov r3, sb
	bl _call_via_r4
	movs r1, #5
	movs r3, #0xfa
	lsls r3, r3, #2
	adds r0, r7, r3
	str r1, [r0]
	movs r0, #0xfb
	lsls r0, r0, #2
	adds r1, r7, r0
_080937C4:
	movs r0, #1
	strb r0, [r1]
	b _08093A14
_080937CA:
	movs r1, #0xfb
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r6, #1
	strb r6, [r0]
	ldr r0, [r7, #8]
	ldr r1, [r0, #0x14]
	ldr r0, [sp, #0x58]
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080937E6
	b _08093A14
_080937E6:
	ldr r0, [r7, #8]
	ldr r1, [r0, #0x18]
	ldr r0, [sp, #0x58]
	bl _call_via_r1
	adds r5, r0, #0
	cmp r5, #0
	beq _080937F8
	b _0809392C
_080937F8:
	movs r2, #0xe8
	lsls r2, r2, #1
	adds r4, r7, r2
	ldr r1, _08093918 @ =0x08100790
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0x39
	bl func_08050E50
	movs r1, #7
	movs r3, #0xfa
	lsls r3, r3, #2
	adds r0, r7, r3
	str r1, [r0]
	movs r1, #0xfb
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r6, [r0]
	movs r2, #0xe2
	lsls r2, r2, #1
	adds r0, r7, r2
	str r5, [r0]
	movs r3, #0xe4
	lsls r3, r3, #1
	adds r5, r7, r3
	ldr r0, [r5]
	bl func_08094910
	movs r1, #0xe6
	lsls r1, r1, #1
	adds r4, r7, r1
	ldr r1, [r4]
	ldr r2, _0809391C @ =0x000021CC
	adds r1, r1, r2
	str r0, [r1, #4]
	ldr r0, [r5]
	bl func_0809496C
	adds r1, r0, #0
	ldr r0, [r4]
	ldr r3, _08093920 @ =0x000021D4
	adds r0, r0, r3
	adds r5, r1, #0
	adds r5, #8
	cmp r5, r1
	beq _08093862
	subs r4, r5, r1
	adds r2, r4, #0
	bl memmove
	adds r0, r0, r4
_08093862:
	add r1, sp, #0x18
	str r5, [sp, #0x18]
	str r0, [sp, #0x1c]
	adds r0, r1, #0
	movs r2, #8
	bl memcpy
	movs r0, #0xe4
	lsls r0, r0, #1
	adds r0, r0, r7
	mov sb, r0
	ldr r0, [r0]
	add r5, sp, #0x20
	adds r1, r5, #0
	bl func_08094940
	movs r1, #0xe6
	lsls r1, r1, #1
	adds r1, r1, r7
	mov r8, r1
	ldr r0, [r1]
	ldr r2, _08093924 @ =0x000021E0
	adds r6, r0, r2
	adds r0, r5, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0xe
	bls _0809389E
	movs r4, #0xe
_0809389E:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	movs r3, #0
	mov sl, r3
	strb r3, [r0]
	mov r1, sb
	ldr r0, [r1]
	add r5, sp, #0x30
	adds r1, r5, #0
	bl func_0809494C
	mov r2, r8
	ldr r0, [r2]
	ldr r3, _08093928 @ =0x000021F0
	adds r6, r0, r3
	adds r0, r5, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0xe
	bls _080938D2
	movs r4, #0xe
_080938D2:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	mov r1, sl
	strb r1, [r0]
	mov r2, sb
	ldr r0, [r2]
	add r5, sp, #0x40
	adds r1, r5, #0
	bl func_0809495C
	mov r3, r8
	ldr r0, [r3]
	movs r1, #0x88
	lsls r1, r1, #6
	adds r6, r0, r1
	adds r0, r5, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0xe
	bls _08093906
	movs r4, #0xe
_08093906:
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl memcpy
	adds r0, r6, r4
	mov r2, sl
	strb r2, [r0]
	b _08093A14
	.align 2, 0
_08093918: .4byte 0x08100790
_0809391C: .4byte 0x000021CC
_08093920: .4byte 0x000021D4
_08093924: .4byte 0x000021E0
_08093928: .4byte 0x000021F0
_0809392C:
	movs r0, #6
	movs r3, #0xfa
	lsls r3, r3, #2
	adds r1, r7, r3
	str r0, [r1]
	movs r1, #0xfb
	lsls r1, r1, #2
	adds r0, r7, r1
	strb r6, [r0]
	b _08093A14
_08093940:
	movs r2, #0xe8
	lsls r2, r2, #1
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_08050D34
	cmp r0, #3
	bne _08093A14
	ldr r0, [r7, #8]
	ldr r1, [r0, #0x18]
	ldr r0, [sp, #0x58]
	bl _call_via_r1
	cmp r0, #2
	beq _08093998
	cmp r0, #3
	bne _080939A8
	ldr r1, _08093994 @ =0x08100610
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0x38
	bl func_08050E50
	movs r1, #7
	movs r3, #0xfa
	lsls r3, r3, #2
	adds r0, r7, r3
	str r1, [r0]
	movs r0, #0xfb
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r0, #1
	strb r0, [r1]
	movs r2, #0xe2
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r0, #2
	str r0, [r1]
	b _08093A14
	.align 2, 0
_08093994: .4byte 0x08100610
_08093998:
	ldr r1, _080939C8 @ =0x08100610
	adds r0, r4, #0
	bl func_08050D8C
	adds r0, r4, #0
	movs r1, #0x38
	bl func_08050E50
_080939A8:
	movs r1, #7
	movs r3, #0xfa
	lsls r3, r3, #2
	adds r0, r7, r3
	str r1, [r0]
	movs r1, #0xfb
	lsls r1, r1, #2
	adds r0, r7, r1
_080939B8:
	movs r1, #1
	strb r1, [r0]
	movs r2, #0xe2
	lsls r2, r2, #1
	adds r0, r7, r2
	str r1, [r0]
	b _08093A14
	.align 2, 0
_080939C8: .4byte 0x08100610
_080939CC:
	movs r3, #0xee
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #3
	bne _08093A14
	bl func_080D02EC
	movs r0, #1
	str r0, [sp, #0x50]
	ldr r0, [sp, #0x14]
	ldr r1, _08093A54 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x14]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r1, #8
	movs r2, #0xfa
	lsls r2, r2, #2
	adds r0, r7, r2
	str r1, [r0]
	movs r3, #0xfb
	lsls r3, r3, #2
	adds r0, r7, r3
	add r1, sp, #0x50
	ldrb r1, [r1]
_08093A12:
	strb r1, [r0]
_08093A14:
	ldr r0, [r7, #8]
	ldr r1, [r0, #0x10]
	ldr r0, [sp, #0x58]
	bl _call_via_r1
	ldr r3, [sp, #0x14]
	ldr r1, [r3]
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	ldr r2, [sp, #0x50]
	cmp r2, #0
	bne _08093A30
	b _080934B8
_08093A30:
	cmp r0, #0
	beq _08093A36
	b _080934B8
_08093A36:
	ldr r0, [r3, #8]
	ldr r2, [r0, #0xc]
	adds r0, r3, #0
	movs r1, #3
	bl _call_via_r2
	add sp, #0x5c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08093A54: .4byte 0x00000889

	thumb_func_start func_08093A58
func_08093A58: @ 0x08093A58
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r0, _08093A84 @ =vtable_unk_080E8018
	str r0, [r4]
	movs r0, #0xfc
	lsls r0, r0, #2
	bl __builtin_new
	adds r1, r5, #0
	bl func_0809323C
	str r0, [r4, #4]
	ldr r1, [r6]
	movs r0, #0
	str r0, [r6]
	str r1, [r4, #8]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08093A84: .4byte vtable_unk_080E8018

	thumb_func_start func_08093A88
func_08093A88: @ 0x08093A88
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08093AC4 @ =vtable_unk_080E8018
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08093AA4
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08093AA4:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _08093AB6
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08093AB6:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08093AC4: .4byte vtable_unk_080E8018

	thumb_func_start func_08093AC8
func_08093AC8: @ 0x08093AC8
	ldr r0, [r0, #4]
	movs r1, #0xe2
	lsls r1, r1, #1
	adds r0, r0, r1
	ldr r0, [r0]
	bx lr

	thumb_func_start func_08093AD4
func_08093AD4: @ 0x08093AD4
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, [r4, #4]
	bl func_08093364
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
_08093AF0:
	.byte 0xFB, 0x21, 0x89, 0x00, 0x40, 0x18, 0x01, 0x21, 0x01, 0x70, 0x70, 0x47, 0x02, 0x1C, 0xFA, 0x23
	.byte 0x9B, 0x00, 0xD0, 0x18, 0x01, 0x60, 0xFB, 0x20, 0x80, 0x00, 0x11, 0x18, 0x01, 0x20, 0x08, 0x70
	.byte 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00, 0x10, 0xB5, 0x84, 0xB0, 0x01, 0x1C, 0x00, 0x24
	.byte 0xF9, 0x20, 0x80, 0x00, 0x0A, 0x18, 0x10, 0x68, 0x00, 0x28, 0x02, 0xD0, 0x01, 0x28, 0x19, 0xD0
	.byte 0x2B, 0xE0, 0xEE, 0x23, 0x5B, 0x00, 0xC8, 0x18, 0x00, 0x68, 0x03, 0x28, 0x25, 0xD1, 0x01, 0x20
	.byte 0x10, 0x60, 0xE8, 0x22, 0x52, 0x00, 0x88, 0x18, 0x04, 0x49, 0x05, 0x4A, 0x00, 0x94, 0x01, 0x94
	.byte 0x02, 0x94, 0x03, 0x94, 0x00, 0x23, 0xBD, 0xF7, 0x59, 0xF9, 0x16, 0xE0, 0x8C, 0x05, 0x10, 0x08
	.byte 0x90, 0x05, 0x10, 0x08, 0xEE, 0x23, 0x5B, 0x00, 0xC8, 0x18, 0x00, 0x68, 0x03, 0x28, 0x0C, 0xD1
	.byte 0xE8, 0x22, 0x52, 0x00, 0x88, 0x18, 0xBD, 0xF7, 0x3B, 0xF9, 0x01, 0x28, 0x02, 0xD0, 0x02, 0x28
	.byte 0x02, 0xD0, 0x02, 0xE0, 0x02, 0x24, 0x00, 0xE0, 0x03, 0x24, 0x20, 0x1C, 0x04, 0xB0, 0x10, 0xBC
	.byte 0x02, 0xBC, 0x08, 0x47, 0x30, 0xB5, 0x05, 0x1C, 0xF8, 0x21, 0x89, 0x00, 0x68, 0x18, 0x00, 0x21
	.byte 0x01, 0x60, 0xF9, 0x22, 0x92, 0x00, 0xA8, 0x18, 0x01, 0x60, 0xE8, 0x20, 0x40, 0x00, 0x2C, 0x18
	.byte 0x07, 0x49, 0x20, 0x1C, 0xBD, 0xF7, 0xEA, 0xF8, 0x20, 0x1C, 0x3A, 0x21, 0xBD, 0xF7, 0x48, 0xF9
	.byte 0xEE, 0x22, 0x52, 0x00, 0xA9, 0x18, 0x04, 0x20, 0x08, 0x60, 0x30, 0xBC, 0x01, 0xBC, 0x00, 0x47
	.byte 0xEC, 0x05, 0x10, 0x08, 0x70, 0x47, 0x00, 0x00, 0x10, 0xB5, 0x04, 0x1C, 0xE8, 0x20, 0x40, 0x00
	.byte 0x24, 0x18, 0x05, 0x49, 0x20, 0x1C, 0xBD, 0xF7, 0xD1, 0xF8, 0x20, 0x1C, 0x38, 0x21, 0xBD, 0xF7
	.byte 0x2F, 0xF9, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xD8, 0x05, 0x10, 0x08, 0x00, 0xB5, 0x74, 0xF7
	.byte 0x65, 0xFE, 0x02, 0x21, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD1, 0x00, 0x20, 0x00, 0xE0, 0x01, 0x20
	.byte 0x02, 0xBC, 0x08, 0x47, 0x10, 0xB5, 0x04, 0x1C, 0xE8, 0x20, 0x40, 0x00, 0x24, 0x18, 0x06, 0x49
	.byte 0x20, 0x1C, 0x00, 0x22, 0x00, 0x23, 0xBD, 0xF7, 0xCF, 0xF8, 0x20, 0x1C, 0x38, 0x21, 0xBD, 0xF7
	.byte 0x0F, 0xF9, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x94, 0x05, 0x10, 0x08

	thumb_func_start func_08093C3C
func_08093C3C: @ 0x08093C3C
	bx lr
	.align 2, 0
_08093C40:
	.byte 0x70, 0xB5, 0x83, 0xB0, 0x01, 0x1C, 0x00, 0x26, 0xF9, 0x20, 0x80, 0x00, 0x0C, 0x18, 0x20, 0x68
	.byte 0x00, 0x28, 0x02, 0xD0, 0x01, 0x28, 0x1B, 0xD0, 0x2D, 0xE0, 0xE8, 0x20, 0x40, 0x00, 0x0D, 0x18
	.byte 0x28, 0x1C, 0xBD, 0xF7, 0x67, 0xF8, 0x03, 0x28, 0x25, 0xD1, 0x01, 0x20, 0x20, 0x60, 0x05, 0x49
	.byte 0x05, 0x4A, 0x06, 0x4B, 0x00, 0x96, 0x01, 0x96, 0x02, 0x96, 0x28, 0x1C, 0xBD, 0xF7, 0xD8, 0xF8
	.byte 0x19, 0xE0, 0x00, 0x00, 0x88, 0x05, 0x10, 0x08, 0x8C, 0x05, 0x10, 0x08, 0x90, 0x05, 0x10, 0x08
	.byte 0xE8, 0x20, 0x40, 0x00, 0x0C, 0x18, 0x20, 0x1C, 0xBD, 0xF7, 0x4C, 0xF8, 0x03, 0x28, 0x0A, 0xD1
	.byte 0x20, 0x1C, 0xBD, 0xF7, 0xA5, 0xF8, 0x01, 0x28, 0x02, 0xD0, 0x02, 0x28, 0x02, 0xD0, 0x02, 0xE0
	.byte 0x02, 0x26, 0x00, 0xE0, 0x03, 0x26, 0x30, 0x1C, 0x03, 0xB0, 0x70, 0xBC, 0x02, 0xBC, 0x08, 0x47
	.byte 0x10, 0xB5, 0x02, 0x1C, 0xF8, 0x21, 0x89, 0x00, 0x50, 0x18, 0x00, 0x21, 0x01, 0x60, 0xF9, 0x23
	.byte 0x9B, 0x00, 0xD0, 0x18, 0x01, 0x60, 0xE8, 0x20, 0x40, 0x00, 0x14, 0x18, 0x06, 0x49, 0x20, 0x1C
	.byte 0x00, 0x22, 0x00, 0x23, 0xBD, 0xF7, 0x70, 0xF8, 0x20, 0x1C, 0x3A, 0x21, 0xBD, 0xF7, 0xB0, 0xF8
	.byte 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x58, 0x05, 0x10, 0x08, 0x10, 0xB5, 0x04, 0x1C
	.byte 0xE8, 0x20, 0x40, 0x00, 0x24, 0x18, 0x06, 0x49, 0x20, 0x1C, 0x00, 0x22, 0x00, 0x23, 0xBD, 0xF7
	.byte 0x5B, 0xF8, 0x20, 0x1C, 0x38, 0x21, 0xBD, 0xF7, 0x9B, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47
	.byte 0x40, 0x05, 0x10, 0x08, 0x10, 0xB5, 0x04, 0x1C, 0xE8, 0x20, 0x40, 0x00, 0x24, 0x18, 0x06, 0x49
	.byte 0x20, 0x1C, 0x00, 0x22, 0x00, 0x23, 0xBD, 0xF7, 0x47, 0xF8, 0x20, 0x1C, 0x38, 0x21, 0xBD, 0xF7
	.byte 0x87, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0x24, 0x05, 0x10, 0x08, 0x00, 0xB5, 0x74, 0xF7
	.byte 0xBD, 0xFD, 0x02, 0x21, 0x08, 0x40, 0x00, 0x28, 0x01, 0xD1, 0x00, 0x20, 0x00, 0xE0, 0x01, 0x20
	.byte 0x02, 0xBC, 0x08, 0x47, 0x10, 0xB5, 0x04, 0x1C, 0xE8, 0x20, 0x40, 0x00, 0x24, 0x18, 0x06, 0x49
	.byte 0x20, 0x1C, 0x00, 0x22, 0x00, 0x23, 0xBD, 0xF7, 0x27, 0xF8, 0x20, 0x1C, 0x39, 0x21, 0xBD, 0xF7
	.byte 0x67, 0xF8, 0x10, 0xBC, 0x01, 0xBC, 0x00, 0x47, 0xE0, 0x04, 0x10, 0x08, 0x00, 0xB5, 0x74, 0xF7
	.byte 0x9D, 0xFD, 0x02, 0xBC, 0x08, 0x47, 0x00, 0x00, 0x00, 0xB5, 0x74, 0xF7, 0x93, 0xFD, 0x02, 0xBC
	.byte 0x08, 0x47, 0x00, 0x00, 0xE2, 0x21, 0x49, 0x00, 0x40, 0x18, 0x00, 0x68, 0x70, 0x47, 0x00, 0x00
	.byte 0x04, 0x49, 0x01, 0x60, 0x04, 0x49, 0x41, 0x60, 0x00, 0x21, 0x81, 0x60, 0x01, 0x21, 0x41, 0x73
	.byte 0x70, 0x47, 0x00, 0x00, 0x2C, 0x81, 0x0E, 0x08, 0x9C, 0x08, 0x10, 0x08

	thumb_func_start func_08093DCC
func_08093DCC: @ 0x08093DCC
	push {lr}
	adds r2, r0, #0
	ldr r0, _08093DE8 @ =vtable_unk_080E812C
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08093DE2
	adds r0, r2, #0
	bl __builtin_delete
_08093DE2:
	pop {r0}
	bx r0
	.align 2, 0
_08093DE8: .4byte vtable_unk_080E812C

	thumb_func_start func_08093DEC
func_08093DEC: @ 0x08093DEC
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r5, r3, #0
	ldr r6, [sp, #0x14]
	ldr r7, [sp, #0x18]
	ldr r0, [r4]
	ldr r3, [r0, #0x20]
	adds r0, r4, #0
	bl _call_via_r3
	str r5, [r4, #0x14]
	str r6, [r4, #0x18]
	str r7, [r4, #0x1c]
	ldr r0, [sp, #0x1c]
	str r0, [r4, #0x20]
	ldr r0, [sp, #0x20]
	str r0, [r4, #0x24]
	ldr r0, _08093E1C @ =0x081007AC
	str r0, [r4, #8]
	movs r0, #0
	strb r0, [r4, #0xd]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08093E1C: .4byte 0x081007AC

	thumb_func_start func_08093E20
func_08093E20: @ 0x08093E20
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x24]
	adds r0, r4, #0
	bl _call_via_r1
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08093E8C
	str r1, [r4, #4]
	movs r0, #0
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r2, [r1, r0]
	cmp r2, #0
	ble _08093E54
	movs r3, #0x14
	ldrsh r0, [r1, r3]
	adds r0, r4, r0
	ldr r1, [r0]
	lsls r0, r2, #2
	adds r0, r0, r1
	subs r0, #4
	ldr r1, [r0]
	b _08093E56
_08093E54:
	ldr r1, [r1, #0x14]
_08093E56:
	ldr r0, [r4, #4]
	movs r2, #0x10
	ldrsh r0, [r0, r2]
	adds r0, r4, r0
	bl _call_via_r1
	ldr r0, [r4, #4]
	movs r3, #2
	ldrsh r2, [r0, r3]
	cmp r2, #0
	ble _08093E7E
	movs r1, #4
	ldrsh r0, [r0, r1]
	adds r0, r4, r0
	ldr r1, [r0]
	lsls r0, r2, #2
	adds r0, r0, r1
	subs r0, #4
	ldr r1, [r0]
	b _08093E80
_08093E7E:
	ldr r1, [r0, #4]
_08093E80:
	ldr r0, [r4, #4]
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, r4, r0
	bl _call_via_r1
_08093E8C:
	ldr r0, [r4, #4]
	movs r3, #0x1a
	ldrsh r2, [r0, r3]
	cmp r2, #0
	ble _08093EA8
	movs r1, #0x1c
	ldrsh r0, [r0, r1]
	adds r0, r4, r0
	ldr r1, [r0]
	lsls r0, r2, #2
	adds r0, r0, r1
	subs r0, #4
	ldr r1, [r0]
	b _08093EAA
_08093EA8:
	ldr r1, [r0, #0x1c]
_08093EAA:
	ldr r0, [r4, #4]
	movs r2, #0x18
	ldrsh r0, [r0, r2]
	adds r0, r4, r0
	bl _call_via_r1
	adds r3, r0, #0
	ldr r0, [r4, #4]
	movs r1, #0xa
	ldrsh r2, [r0, r1]
	cmp r2, #0
	ble _08093ED4
	movs r1, #0xc
	ldrsh r0, [r0, r1]
	adds r0, r4, r0
	ldr r1, [r0]
	lsls r0, r2, #2
	adds r0, r0, r1
	subs r0, #4
	ldr r2, [r0]
	b _08093ED6
_08093ED4:
	ldr r2, [r0, #0xc]
_08093ED6:
	ldr r0, [r4, #4]
	movs r1, #8
	ldrsh r0, [r0, r1]
	adds r0, r4, r0
	adds r1, r3, #0
	bl _call_via_r2
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08093EEC
func_08093EEC: @ 0x08093EEC
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #4]
	movs r1, #0x22
	ldrsh r3, [r0, r1]
	cmp r3, #0
	ble _08093F0C
	movs r1, #0x24
	ldrsh r0, [r0, r1]
	adds r0, r2, r0
	ldr r1, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	subs r0, #4
	ldr r1, [r0]
	b _08093F0E
_08093F0C:
	ldr r1, [r0, #0x24]
_08093F0E:
	ldr r0, [r2, #4]
	movs r3, #0x20
	ldrsh r0, [r0, r3]
	adds r0, r2, r0
	bl _call_via_r1
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08093F20
func_08093F20: @ 0x08093F20
	ldrb r0, [r0, #0xd]
	bx lr

	thumb_func_start func_08093F24
func_08093F24: @ 0x08093F24
	ldr r0, [r0, #0x10]
	bx lr

	thumb_func_start func_08093F28
func_08093F28: @ 0x08093F28
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x28]
	adds r0, r4, #0
	bl _call_via_r1
	ldr r0, [r4]
	ldr r1, [r0, #0x30]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08093F48
func_08093F48: @ 0x08093F48
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #1
	bne _08093F5A
	ldr r0, [r4]
	ldr r1, [r0, #0x3c]
	adds r0, r4, #0
	bl _call_via_r1
_08093F5A:
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08093FA4
	ldr r0, [r4]
	ldr r1, [r0, #0x48]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08093F84
	ldr r0, _08093F80 @ =0x081008C4
	b _08093FA2
	.align 2, 0
_08093F80: .4byte 0x081008C4
_08093F84:
	ldr r0, [r4]
	ldr r1, [r0, #0x44]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08093FA0
	movs r0, #1
	str r0, [r4, #0x10]
	ldr r0, _08093F9C @ =0x0810089C
	b _08093FA2
	.align 2, 0
_08093F9C: .4byte 0x0810089C
_08093FA0:
	ldr r0, _08093FAC @ =0x081007D4
_08093FA2:
	str r0, [r4, #8]
_08093FA4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08093FAC: .4byte 0x081007D4

	thumb_func_start func_08093FB0
func_08093FB0: @ 0x08093FB0
	push {lr}
	ldr r2, [r0]
	ldr r1, [r0, #0x14]
	ldr r1, [r1]
	ldr r3, [r2, #0x38]
	movs r2, #0
	bl _call_via_r3
	pop {r0}
	bx r0

	thumb_func_start func_08093FC4
func_08093FC4: @ 0x08093FC4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08093FF4
	ldr r0, [r4]
	ldr r1, [r0, #0x48]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08093FF0
	ldr r0, _08093FEC @ =0x081008C4
	b _08093FF2
	.align 2, 0
_08093FEC: .4byte 0x081008C4
_08093FF0:
	ldr r0, _08093FFC @ =0x081007FC
_08093FF2:
	str r0, [r4, #8]
_08093FF4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08093FFC: .4byte 0x081007FC

	thumb_func_start func_08094000
func_08094000: @ 0x08094000
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x4c]
	adds r0, r4, #0
	bl _call_via_r1
	ldr r1, [r4, #0x14]
	str r0, [r1, #8]
	ldr r0, [r4]
	ldr r1, [r0, #0x50]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094032
	ldr r0, [r4]
	ldr r3, [r0, #0x38]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl _call_via_r3
	b _08094040
_08094032:
	ldr r0, [r4]
	ldr r3, [r0, #0x38]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl _call_via_r3
_08094040:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08094048
func_08094048: @ 0x08094048
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080940B0
	ldr r0, [r4]
	ldr r1, [r0, #0x48]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094074
	ldr r0, _08094070 @ =0x081008C4
	b _080940AE
	.align 2, 0
_08094070: .4byte 0x081008C4
_08094074:
	ldr r0, [r4]
	ldr r1, [r0, #0x54]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080940A8
	ldr r0, [r4]
	ldr r1, [r0, #0x58]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809409C
	ldr r0, _08094098 @ =0x08100824
	b _080940AE
	.align 2, 0
_08094098: .4byte 0x08100824
_0809409C:
	movs r0, #1
	strb r0, [r4, #0xc]
	ldr r0, _080940A4 @ =0x0810084C
	b _080940AE
	.align 2, 0
_080940A4: .4byte 0x0810084C
_080940A8:
	movs r0, #3
	str r0, [r4, #0x10]
	ldr r0, _080940B8 @ =0x0810089C
_080940AE:
	str r0, [r4, #8]
_080940B0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080940B8: .4byte 0x0810089C
_080940BC:
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start func_080940C0
func_080940C0: @ 0x080940C0
	push {lr}
	adds r2, r0, #0
	cmp r1, #2
	beq _080940CE
	cmp r1, #3
	beq _080940D2
	b _080940DA
_080940CE:
	movs r0, #1
	b _080940D4
_080940D2:
	movs r0, #0
_080940D4:
	strb r0, [r2, #0xc]
	ldr r0, _080940E0 @ =0x0810084C
	str r0, [r2, #8]
_080940DA:
	pop {r0}
	bx r0
	.align 2, 0
_080940E0: .4byte 0x0810084C

	thumb_func_start func_080940E4
func_080940E4: @ 0x080940E4
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	beq _080940FE
	ldr r0, [r1]
	ldr r3, [r0, #0x38]
	adds r0, r1, #0
	movs r1, #0
	movs r2, #1
	bl _call_via_r3
	b _0809410C
_080940FE:
	ldr r0, [r1]
	ldr r3, [r0, #0x38]
	adds r0, r1, #0
	movs r1, #1
	movs r2, #1
	bl _call_via_r3
_0809410C:
	pop {r0}
	bx r0

	thumb_func_start func_08094110
func_08094110: @ 0x08094110
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #1
	bne _08094122
	ldr r0, [r4]
	ldr r1, [r0, #0x3c]
	adds r0, r4, #0
	bl _call_via_r1
_08094122:
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809419C
	ldr r0, [r4]
	ldr r1, [r0, #0x48]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809414C
	ldr r0, _08094148 @ =0x081008C4
	b _0809419A
	.align 2, 0
_08094148: .4byte 0x081008C4
_0809414C:
	ldr r0, [r4]
	ldr r1, [r0, #0x44]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094168
	movs r0, #1
	str r0, [r4, #0x10]
	ldr r0, _08094164 @ =0x0810089C
	b _0809419A
	.align 2, 0
_08094164: .4byte 0x0810089C
_08094168:
	ldrb r0, [r4, #0xc]
	cmp r0, #0
	bne _0809417C
	movs r0, #1
	str r0, [r4, #0x10]
	ldr r0, _08094178 @ =0x0810089C
	b _0809419A
	.align 2, 0
_08094178: .4byte 0x0810089C
_0809417C:
	ldr r0, [r4]
	ldr r1, [r0, #0x5c]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08094198
	movs r0, #2
	str r0, [r4, #0x10]
	ldr r0, _08094194 @ =0x0810089C
	b _0809419A
	.align 2, 0
_08094194: .4byte 0x0810089C
_08094198:
	ldr r0, _080941A4 @ =0x08100874
_0809419A:
	str r0, [r4, #8]
_0809419C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080941A4: .4byte 0x08100874

	thumb_func_start func_080941A8
func_080941A8: @ 0x080941A8
	push {r4, r5, lr}
	sub sp, #4
	ldr r5, [r0]
	ldr r1, [r0, #0x18]
	ldr r2, [r0, #0x1c]
	ldr r3, [r0, #0x20]
	ldr r4, [r0, #0x24]
	str r4, [sp]
	ldr r4, [r5, #0x34]
	bl _call_via_r4
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_080941C8
func_080941C8: @ 0x080941C8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080941FE
	ldr r0, [r4]
	ldr r1, [r0, #0x48]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	beq _080941F8
	ldr r0, _080941F4 @ =0x081008C4
	b _080941FC
	.align 2, 0
_080941F4: .4byte 0x081008C4
_080941F8:
	str r0, [r4, #0x10]
	ldr r0, _08094204 @ =0x0810089C
_080941FC:
	str r0, [r4, #8]
_080941FE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08094204: .4byte 0x0810089C
_08094208:
	.byte 0x00, 0xB5, 0x01, 0x21, 0x41, 0x73, 0x01, 0x68
	.byte 0xC9, 0x6A, 0x3F, 0xF0, 0x7D, 0xFB, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00
	.byte 0x70, 0x47, 0x00, 0x00, 0x00, 0xB5, 0x02, 0x1C, 0x02, 0x29, 0x02, 0xD0, 0x03, 0x29, 0x05, 0xD0
	.byte 0x08, 0xE0, 0x01, 0x48, 0x05, 0xE0, 0x00, 0x00, 0xAC, 0x07, 0x10, 0x08, 0x01, 0x20, 0x10, 0x61
	.byte 0x01, 0x48, 0x90, 0x60, 0x01, 0xBC, 0x00, 0x47, 0x9C, 0x08, 0x10, 0x08

	thumb_func_start func_0809424C
func_0809424C: @ 0x0809424C
	ldr r1, _08094260 @ =vtable_unk_080E8028
	str r1, [r0]
	ldr r1, _08094264 @ =0x081009DC
	str r1, [r0, #4]
	movs r1, #0
	str r1, [r0, #8]
	movs r1, #1
	strb r1, [r0, #0xd]
	bx lr
	.align 2, 0
_08094260: .4byte vtable_unk_080E8028
_08094264: .4byte 0x081009DC

	thumb_func_start func_08094268
func_08094268: @ 0x08094268
	push {lr}
	adds r2, r0, #0
	ldr r0, _08094284 @ =vtable_unk_080E8028
	str r0, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809427E
	adds r0, r2, #0
	bl __builtin_delete
_0809427E:
	pop {r0}
	bx r0
	.align 2, 0
_08094284: .4byte vtable_unk_080E8028

	thumb_func_start func_08094288
func_08094288: @ 0x08094288
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r5, r3, #0
	ldr r6, [sp, #0x14]
	ldr r7, [sp, #0x18]
	ldr r0, [r4]
	ldr r3, [r0, #0x20]
	adds r0, r4, #0
	bl _call_via_r3
	str r5, [r4, #0x14]
	str r6, [r4, #0x20]
	str r7, [r4, #0x24]
	ldr r0, [sp, #0x1c]
	str r0, [r4, #0x28]
	ldr r0, [sp, #0x20]
	str r0, [r4, #0x2c]
	ldr r0, _080942B8 @ =0x081008EC
	str r0, [r4, #8]
	movs r0, #0
	strb r0, [r4, #0xd]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080942B8: .4byte 0x081008EC

	thumb_func_start func_080942BC
func_080942BC: @ 0x080942BC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x24]
	adds r0, r4, #0
	bl _call_via_r1
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _08094328
	str r1, [r4, #4]
	movs r0, #0
	str r0, [r4, #8]
	movs r0, #0x12
	ldrsh r2, [r1, r0]
	cmp r2, #0
	ble _080942F0
	movs r3, #0x14
	ldrsh r0, [r1, r3]
	adds r0, r4, r0
	ldr r1, [r0]
	lsls r0, r2, #2
	adds r0, r0, r1
	subs r0, #4
	ldr r1, [r0]
	b _080942F2
_080942F0:
	ldr r1, [r1, #0x14]
_080942F2:
	ldr r0, [r4, #4]
	movs r2, #0x10
	ldrsh r0, [r0, r2]
	adds r0, r4, r0
	bl _call_via_r1
	ldr r0, [r4, #4]
	movs r3, #2
	ldrsh r2, [r0, r3]
	cmp r2, #0
	ble _0809431A
	movs r1, #4
	ldrsh r0, [r0, r1]
	adds r0, r4, r0
	ldr r1, [r0]
	lsls r0, r2, #2
	adds r0, r0, r1
	subs r0, #4
	ldr r1, [r0]
	b _0809431C
_0809431A:
	ldr r1, [r0, #4]
_0809431C:
	ldr r0, [r4, #4]
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, r4, r0
	bl _call_via_r1
_08094328:
	ldr r0, [r4, #4]
	movs r3, #0x1a
	ldrsh r2, [r0, r3]
	cmp r2, #0
	ble _08094344
	movs r1, #0x1c
	ldrsh r0, [r0, r1]
	adds r0, r4, r0
	ldr r1, [r0]
	lsls r0, r2, #2
	adds r0, r0, r1
	subs r0, #4
	ldr r1, [r0]
	b _08094346
_08094344:
	ldr r1, [r0, #0x1c]
_08094346:
	ldr r0, [r4, #4]
	movs r2, #0x18
	ldrsh r0, [r0, r2]
	adds r0, r4, r0
	bl _call_via_r1
	adds r3, r0, #0
	ldr r0, [r4, #4]
	movs r1, #0xa
	ldrsh r2, [r0, r1]
	cmp r2, #0
	ble _08094370
	movs r1, #0xc
	ldrsh r0, [r0, r1]
	adds r0, r4, r0
	ldr r1, [r0]
	lsls r0, r2, #2
	adds r0, r0, r1
	subs r0, #4
	ldr r2, [r0]
	b _08094372
_08094370:
	ldr r2, [r0, #0xc]
_08094372:
	ldr r0, [r4, #4]
	movs r1, #8
	ldrsh r0, [r0, r1]
	adds r0, r4, r0
	adds r1, r3, #0
	bl _call_via_r2
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08094388
func_08094388: @ 0x08094388
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #4]
	movs r1, #0x22
	ldrsh r3, [r0, r1]
	cmp r3, #0
	ble _080943A8
	movs r1, #0x24
	ldrsh r0, [r0, r1]
	adds r0, r2, r0
	ldr r1, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	subs r0, #4
	ldr r1, [r0]
	b _080943AA
_080943A8:
	ldr r1, [r0, #0x24]
_080943AA:
	ldr r0, [r2, #4]
	movs r3, #0x20
	ldrsh r0, [r0, r3]
	adds r0, r2, r0
	bl _call_via_r1
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_080943BC
func_080943BC: @ 0x080943BC
	ldrb r0, [r0, #0xd]
	bx lr

	thumb_func_start func_080943C0
func_080943C0: @ 0x080943C0
	ldr r0, [r0, #0x10]
	bx lr

	thumb_func_start func_080943C4
func_080943C4: @ 0x080943C4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x28]
	adds r0, r4, #0
	bl _call_via_r1
	ldr r0, [r4]
	ldr r1, [r0, #0x30]
	adds r0, r4, #0
	bl _call_via_r1
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_080943E4
func_080943E4: @ 0x080943E4
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #1
	bne _080943F6
	ldr r0, [r4]
	ldr r1, [r0, #0x3c]
	adds r0, r4, #0
	bl _call_via_r1
_080943F6:
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094440
	ldr r0, [r4]
	ldr r1, [r0, #0x48]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094420
	ldr r0, _0809441C @ =0x08100A04
	b _0809443E
	.align 2, 0
_0809441C: .4byte 0x08100A04
_08094420:
	ldr r0, [r4]
	ldr r1, [r0, #0x44]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809443C
	movs r0, #1
	str r0, [r4, #0x10]
	ldr r0, _08094438 @ =0x081009DC
	b _0809443E
	.align 2, 0
_08094438: .4byte 0x081009DC
_0809443C:
	ldr r0, _08094448 @ =0x08100914
_0809443E:
	str r0, [r4, #8]
_08094440:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08094448: .4byte 0x08100914

	thumb_func_start func_0809444C
func_0809444C: @ 0x0809444C
	push {r4, lr}
	sub sp, #4
	ldr r4, [r0]
	ldr r1, [r0, #0x14]
	adds r3, r0, #0
	adds r3, #0x18
	movs r2, #8
	str r2, [sp]
	ldr r4, [r4, #0x34]
	bl _call_via_r4
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0809446C
func_0809446C: @ 0x0809446C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809449C
	ldr r0, [r4]
	ldr r1, [r0, #0x48]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094498
	ldr r0, _08094494 @ =0x08100A04
	b _0809449A
	.align 2, 0
_08094494: .4byte 0x08100A04
_08094498:
	ldr r0, _080944A4 @ =0x0810093C
_0809449A:
	str r0, [r4, #8]
_0809449C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080944A4: .4byte 0x0810093C

	thumb_func_start func_080944A8
func_080944A8: @ 0x080944A8
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x14]
	ldr r0, [r4, #0x18]
	str r0, [r1, #8]
	ldr r0, [r4]
	ldr r1, [r0, #0x50]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080944D2
	ldr r0, [r4]
	ldr r3, [r0, #0x38]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl _call_via_r3
	b _080944E0
_080944D2:
	ldr r0, [r4]
	ldr r3, [r0, #0x38]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl _call_via_r3
_080944E0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_080944E8
func_080944E8: @ 0x080944E8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094550
	ldr r0, [r4]
	ldr r1, [r0, #0x48]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094514
	ldr r0, _08094510 @ =0x08100A04
	b _0809454E
	.align 2, 0
_08094510: .4byte 0x08100A04
_08094514:
	ldr r0, [r4]
	ldr r1, [r0, #0x54]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094548
	ldr r0, [r4]
	ldr r1, [r0, #0x58]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809453C
	ldr r0, _08094538 @ =0x08100964
	b _0809454E
	.align 2, 0
_08094538: .4byte 0x08100964
_0809453C:
	movs r0, #1
	strb r0, [r4, #0xc]
	ldr r0, _08094544 @ =0x0810098C
	b _0809454E
	.align 2, 0
_08094544: .4byte 0x0810098C
_08094548:
	movs r0, #3
	str r0, [r4, #0x10]
	ldr r0, _08094558 @ =0x081009DC
_0809454E:
	str r0, [r4, #8]
_08094550:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08094558: .4byte 0x081009DC
_0809455C:
	.byte 0x70, 0x47, 0x00, 0x00

	thumb_func_start func_08094560
func_08094560: @ 0x08094560
	push {lr}
	adds r2, r0, #0
	cmp r1, #2
	beq _0809456E
	cmp r1, #3
	beq _08094572
	b _0809457A
_0809456E:
	movs r0, #1
	b _08094574
_08094572:
	movs r0, #0
_08094574:
	strb r0, [r2, #0xc]
	ldr r0, _08094580 @ =0x0810098C
	str r0, [r2, #8]
_0809457A:
	pop {r0}
	bx r0
	.align 2, 0
_08094580: .4byte 0x0810098C

	thumb_func_start func_08094584
func_08094584: @ 0x08094584
	push {lr}
	adds r1, r0, #0
	ldrb r0, [r1, #0xc]
	cmp r0, #0
	beq _0809459E
	ldr r0, [r1]
	ldr r3, [r0, #0x38]
	adds r0, r1, #0
	movs r1, #0
	movs r2, #1
	bl _call_via_r3
	b _080945AC
_0809459E:
	ldr r0, [r1]
	ldr r3, [r0, #0x38]
	adds r0, r1, #0
	movs r1, #1
	movs r2, #1
	bl _call_via_r3
_080945AC:
	pop {r0}
	bx r0

	thumb_func_start func_080945B0
func_080945B0: @ 0x080945B0
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #1
	bne _080945C2
	ldr r0, [r4]
	ldr r1, [r0, #0x3c]
	adds r0, r4, #0
	bl _call_via_r1
_080945C2:
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809463C
	ldr r0, [r4]
	ldr r1, [r0, #0x48]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080945EC
	ldr r0, _080945E8 @ =0x08100A04
	b _0809463A
	.align 2, 0
_080945E8: .4byte 0x08100A04
_080945EC:
	ldr r0, [r4]
	ldr r1, [r0, #0x44]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094608
	movs r0, #1
	str r0, [r4, #0x10]
	ldr r0, _08094604 @ =0x081009DC
	b _0809463A
	.align 2, 0
_08094604: .4byte 0x081009DC
_08094608:
	ldrb r0, [r4, #0xc]
	cmp r0, #0
	bne _0809461C
	movs r0, #1
	str r0, [r4, #0x10]
	ldr r0, _08094618 @ =0x081009DC
	b _0809463A
	.align 2, 0
_08094618: .4byte 0x081009DC
_0809461C:
	ldr r0, [r4]
	ldr r1, [r0, #0x5c]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08094638
	movs r0, #2
	str r0, [r4, #0x10]
	ldr r0, _08094634 @ =0x081009DC
	b _0809463A
	.align 2, 0
_08094634: .4byte 0x081009DC
_08094638:
	ldr r0, _08094644 @ =0x081009B4
_0809463A:
	str r0, [r4, #8]
_0809463C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08094644: .4byte 0x081009B4

	thumb_func_start func_08094648
func_08094648: @ 0x08094648
	push {r4, r5, lr}
	sub sp, #4
	ldr r5, [r0]
	ldr r1, [r0, #0x20]
	ldr r2, [r0, #0x24]
	ldr r3, [r0, #0x28]
	ldr r4, [r0, #0x2c]
	str r4, [sp]
	ldr r4, [r5, #0x34]
	bl _call_via_r4
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08094668
func_08094668: @ 0x08094668
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809469E
	ldr r0, [r4]
	ldr r1, [r0, #0x48]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	beq _08094698
	ldr r0, _08094694 @ =0x08100A04
	b _0809469C
	.align 2, 0
_08094694: .4byte 0x08100A04
_08094698:
	str r0, [r4, #0x10]
	ldr r0, _080946A4 @ =0x081009DC
_0809469C:
	str r0, [r4, #8]
_0809469E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080946A4: .4byte 0x081009DC

	thumb_func_start func_080946A8
func_080946A8: @ 0x080946A8
	push {lr}
	movs r1, #1
	strb r1, [r0, #0xd]
	ldr r1, [r0]
	ldr r1, [r1, #0x2c]
	bl _call_via_r1
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_080946BC
func_080946BC: @ 0x080946BC
	bx lr
	.align 2, 0

	thumb_func_start func_080946C0
func_080946C0: @ 0x080946C0
	bx lr
	.align 2, 0

	thumb_func_start func_080946C4
func_080946C4: @ 0x080946C4
	push {lr}
	adds r2, r0, #0
	cmp r1, #2
	beq _080946D2
	cmp r1, #3
	beq _080946DC
	b _080946E4
_080946D2:
	ldr r0, _080946D8 @ =0x081008EC
	b _080946E2
	.align 2, 0
_080946D8: .4byte 0x081008EC
_080946DC:
	movs r0, #1
	str r0, [r2, #0x10]
	ldr r0, _080946E8 @ =0x081009DC
_080946E2:
	str r0, [r2, #8]
_080946E4:
	pop {r0}
	bx r0
	.align 2, 0
_080946E8: .4byte 0x081009DC
_080946EC:
	.byte 0x70, 0x47, 0x00, 0x00
	.byte 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47
	.byte 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00
	.byte 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00
	.byte 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47
	.byte 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00
	.byte 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00, 0x40, 0x69, 0x80, 0x68
	.byte 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00
	.byte 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00
	.byte 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47
	.byte 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00
	.byte 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00
	.byte 0x00, 0x20, 0x70, 0x47, 0x70, 0x47, 0x00, 0x00, 0x70, 0x47, 0x00, 0x00, 0x00, 0x20, 0x70, 0x47
	.byte 0x70, 0x47, 0x00, 0x00, 0x40, 0x69, 0x80, 0x68, 0x70, 0x47, 0x00, 0x00

	thumb_func_start func_080947BC
func_080947BC: @ 0x080947BC
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	str r1, [r4]
	bl func_08094904
	bl __builtin_vec_new
	str r0, [r4, #4]
	adds r0, r4, #0
	bl func_0809490C
	bl __builtin_vec_new
	str r0, [r4, #8]
	movs r3, #0
	movs r6, #1
	adds r5, r4, #0
	adds r5, #0x18
_080947E0:
	ldr r0, [r4]
	adds r2, r3, #0
	cmp r3, #0
	bge _080947EA
	adds r2, r3, #7
_080947EA:
	asrs r2, r2, #3
	lsls r1, r2, #3
	subs r1, r3, r1
	ldr r7, _08094810 @ =0x000021D4
	adds r0, r0, r7
	adds r0, r0, r2
	ldrb r0, [r0]
	asrs r0, r1
	ands r0, r6
	adds r1, r5, r3
	strb r0, [r1]
	adds r3, #1
	cmp r3, #0x30
	ble _080947E0
	adds r0, r4, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08094810: .4byte 0x000021D4

	thumb_func_start func_08094814
func_08094814: @ 0x08094814
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _08094824
	bl __builtin_vec_delete
_08094824:
	ldr r0, [r4, #8]
	cmp r0, #0
	beq _0809482E
	bl __builtin_vec_delete
_0809482E:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _0809483C
	adds r0, r4, #0
	bl __builtin_delete
_0809483C:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_08094844
func_08094844: @ 0x08094844
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	ldr r6, [r4, #4]
	ldr r0, [r4]
	ldr r2, _080948D0 @ =0x000021CC
	adds r1, r0, r2
	ldr r7, [r1]
	ldr r1, [r1, #4]
	str r1, [sp]
	adds r0, #0x14
	bl func_08009AF4
	mov sb, r0
	ldr r0, [r4]
	ldr r1, _080948D4 @ =0x00001BD8
	adds r0, r0, r1
	bl func_0800E4E0
	mov sl, r0
	ldr r0, [r4]
	ldr r2, _080948D8 @ =0x00001CD4
	adds r0, r0, r2
	bl func_080A0A04
	bl func_0809EACC
	mov r8, r0
	ldr r5, [r4]
	ldr r0, _080948DC @ =0x000021DC
	adds r5, r5, r0
	str r7, [r4, #0xc]
	ldr r1, [sp]
	str r1, [r4, #0x10]
	adds r0, r4, #0
	adds r1, r6, #0
	mov r2, sb
	bl func_08094994
	adds r1, r6, #0
	adds r1, #0xd
	adds r0, r4, #0
	mov r2, sl
	bl func_08094994
	adds r1, r6, #0
	adds r1, #0x1a
	adds r0, r4, #0
	mov r2, r8
	bl func_08094994
	adds r6, #0x27
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	movs r3, #4
	bl func_08094974
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080948D0: .4byte 0x000021CC
_080948D4: .4byte 0x00001BD8
_080948D8: .4byte 0x00001CD4
_080948DC: .4byte 0x000021DC

	thumb_func_start func_080948E0
func_080948E0: @ 0x080948E0
	ldr r0, _080948E8 @ =0x08100A98
	ldr r0, [r0]
	bx lr
	.align 2, 0
_080948E8: .4byte 0x08100A98

	thumb_func_start func_080948EC
func_080948EC: @ 0x080948EC
	ldr r0, _080948F4 @ =0x08100AA0
	ldr r0, [r0]
	bx lr
	.align 2, 0
_080948F4: .4byte 0x08100AA0
_080948F8:
	.byte 0x0C, 0x30, 0x70, 0x47

	thumb_func_start func_080948FC
func_080948FC: @ 0x080948FC
	adds r0, #0xc
	bx lr

	thumb_func_start func_08094900
func_08094900: @ 0x08094900
	ldr r0, [r0, #4]
	bx lr

	thumb_func_start func_08094904
func_08094904: @ 0x08094904
	movs r0, #0x2b
	bx lr

	thumb_func_start func_08094908
func_08094908: @ 0x08094908
	ldr r0, [r0, #8]
	bx lr

	thumb_func_start func_0809490C
func_0809490C: @ 0x0809490C
	movs r0, #0x2f
	bx lr

	thumb_func_start func_08094910
func_08094910: @ 0x08094910
	ldr r0, [r0, #0x14]
	bx lr
_08094914:
	.byte 0x00, 0xB5, 0x82, 0x68, 0x00, 0xF0, 0x72, 0xF8, 0x01, 0xBC, 0x00, 0x47
	.byte 0x00, 0xB5, 0x82, 0x68, 0x0D, 0x32, 0x00, 0xF0, 0x6B, 0xF8, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00
	.byte 0x00, 0xB5, 0x82, 0x68, 0x1A, 0x32, 0x00, 0xF0, 0x63, 0xF8, 0x01, 0xBC, 0x00, 0x47, 0x00, 0x00

	thumb_func_start func_08094940
func_08094940: @ 0x08094940
	push {lr}
	ldr r2, [r0, #8]
	bl func_08094A00
	pop {r0}
	bx r0

	thumb_func_start func_0809494C
func_0809494C: @ 0x0809494C
	push {lr}
	ldr r2, [r0, #8]
	adds r2, #0xd
	bl func_08094A00
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0809495C
func_0809495C: @ 0x0809495C
	push {lr}
	ldr r2, [r0, #8]
	adds r2, #0x1a
	bl func_08094A00
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0809496C
func_0809496C: @ 0x0809496C
	ldr r0, [r0, #8]
	adds r0, #0x27
	bx lr
	.align 2, 0

	thumb_func_start func_08094974
func_08094974: @ 0x08094974
	push {r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	movs r2, #0
	cmp r2, r3
	bhs _0809498E
_08094980:
	adds r0, r5, r2
	adds r1, r4, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, r3
	blo _08094980
_0809498E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start func_08094994
func_08094994: @ 0x08094994
	push {r4, r5, r6, r7, lr}
	adds r7, r1, #0
	adds r4, r2, #0
	movs r5, #0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080949EA
	ldr r0, _080949D4 @ =0x08100A36
	ldrb r0, [r0]
	mov ip, r0
	adds r2, r7, #0
_080949AA:
	ldrb r1, [r4]
	adds r4, #1
	movs r3, #0
	cmp r1, ip
	beq _080949C8
	ldr r6, _080949D4 @ =0x08100A36
_080949B6:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #0x60
	bhi _080949CC
	adds r0, r3, r6
	ldrb r0, [r0]
	cmp r1, r0
	bne _080949B6
_080949C8:
	cmp r3, #0x60
	bls _080949D8
_080949CC:
	movs r0, #0
	strb r0, [r2]
	b _080949EA
	.align 2, 0
_080949D4: .4byte 0x08100A36
_080949D8:
	adds r0, r3, #1
	strb r0, [r2]
	adds r2, #1
	adds r5, #1
	cmp r5, #0xb
	bhi _080949EA
	ldrb r0, [r4]
	cmp r0, #0
	bne _080949AA
_080949EA:
	cmp r5, #0xc
	bhi _080949FA
	movs r2, #0
_080949F0:
	adds r0, r7, r5
	strb r2, [r0]
	adds r5, #1
	cmp r5, #0xc
	bls _080949F0
_080949FA:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_08094A00
func_08094A00: @ 0x08094A00
	push {r4, lr}
	movs r3, #0
	ldrb r0, [r2]
	cmp r0, #0
	beq _08094A2E
	subs r0, #1
	cmp r0, #0x60
	bhi _08094A2E
	ldr r4, _08094A38 @ =0x08100A36
_08094A12:
	adds r0, r0, r4
	ldrb r0, [r0]
	strb r0, [r1]
	adds r1, #1
	adds r3, #1
	cmp r3, #0xb
	bgt _08094A2E
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r0, #0
	beq _08094A2E
	subs r0, #1
	cmp r0, #0x60
	bls _08094A12
_08094A2E:
	movs r0, #0
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08094A38: .4byte 0x08100A36

	thumb_func_start func_08094A3C
func_08094A3C: @ 0x08094A3C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov r8, r0
	adds r7, r1, #0
	ldr r0, _08094AB8 @ =0x00000814
	add r0, r8
	mov sb, r0
	movs r6, #0
_08094A50:
	lsls r1, r6, #7
	adds r1, r1, r6
	lsls r1, r1, #2
	adds r1, #4
	add r1, r8
	adds r4, r1, #4
	ldr r0, [r1]
	lsls r0, r0, #2
	adds r0, #4
	adds r5, r1, r0
	adds r0, r4, #0
	adds r1, r5, #0
	ldr r2, _08094ABC @ =func_03000C08
	bl _call_via_r2
	adds r6, #1
	cmp r4, r5
	beq _08094AA2
	movs r1, #0x7f
	mov ip, r1
_08094A78:
	ldr r0, [r4]
	mov r1, ip
	ands r0, r1
	lsls r0, r0, #3
	mov r1, sb
	adds r3, r0, r1
	ldrb r2, [r7]
	cmp r2, #0x7f
	bhi _08094A9C
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r7, r0
	ldr r1, [r3]
	str r1, [r0]
	ldrh r1, [r3, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r7]
_08094A9C:
	adds r4, #4
	cmp r4, r5
	bne _08094A78
_08094AA2:
	cmp r6, #3
	bls _08094A50
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08094AB8: .4byte 0x00000814
_08094ABC: .4byte func_03000C08

	thumb_func_start func_08094AC0
func_08094AC0: @ 0x08094AC0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	adds r4, r1, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp, #4]
	bl func_080CD578
	ldr r0, _08094E9C @ =vtable_unk_080E8230
	str r0, [r7, #4]
	adds r0, r7, #0
	adds r0, #0x8c
	str r4, [r0]
	adds r0, #4
	movs r1, #0
	bl func_08008B54
	adds r0, r7, #0
	adds r0, #0x94
	movs r1, #2
	bl func_08008B54
	adds r6, r7, #0
	adds r6, #0x98
	ldr r1, _08094EA0 @ =0x08527094
	adds r0, r6, #0
	bl func_0805E6CC
	movs r0, #0xc8
	adds r0, r0, r7
	mov r8, r0
	ldr r1, _08094EA4 @ =0x08728208
	bl func_0805E6CC
	movs r1, #0xf8
	adds r1, r1, r7
	mov sb, r1
	ldr r1, _08094EA8 @ =0x08754C0C
	mov r0, sb
	bl func_0805E6CC
	movs r2, #0x94
	lsls r2, r2, #1
	adds r2, r2, r7
	mov sl, r2
	ldr r1, _08094EAC @ =0x08754674
	mov r0, sl
	bl func_0805E6CC
	movs r3, #0xac
	lsls r3, r3, #1
	adds r0, r7, r3
	adds r1, r6, #0
	movs r2, #3
	subs r3, #0x58
	bl func_0805E824
	movs r1, #0xb6
	lsls r1, r1, #1
	adds r0, r7, r1
	movs r5, #0
	movs r4, #0
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r2, #0xc6
	lsls r2, r2, #1
	adds r0, r7, r2
	strb r5, [r0]
	movs r3, #0xc8
	lsls r3, r3, #1
	adds r0, r7, r3
	adds r1, r6, #0
	movs r2, #2
	subs r3, #0x90
	bl func_0805E824
	movs r1, #0xd2
	lsls r1, r1, #1
	adds r0, r7, r1
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r2, #0xe2
	lsls r2, r2, #1
	adds r0, r7, r2
	strb r5, [r0]
	movs r3, #0xe4
	lsls r3, r3, #1
	adds r0, r7, r3
	adds r1, r6, #0
	movs r2, #0
	subs r3, #0xc8
	bl func_0805E824
	movs r1, #0xee
	lsls r1, r1, #1
	adds r0, r7, r1
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r2, #0xfe
	lsls r2, r2, #1
	adds r0, r7, r2
	strb r5, [r0]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r7, r3
	adds r1, r6, #0
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r1, #0x85
	lsls r1, r1, #2
	adds r0, r7, r1
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r2, #0x8d
	lsls r2, r2, #2
	adds r0, r7, r2
	strb r5, [r0]
	movs r3, #0x8e
	lsls r3, r3, #2
	adds r0, r7, r3
	mov r1, r8
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r1, #0x93
	lsls r1, r1, #2
	adds r0, r7, r1
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r2, #0x9b
	lsls r2, r2, #2
	adds r0, r7, r2
	strb r5, [r0]
	movs r3, #0x9c
	lsls r3, r3, #2
	adds r0, r7, r3
	mov r1, sb
	movs r2, #1
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r1, #0xa1
	lsls r1, r1, #2
	adds r0, r7, r1
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r2, #0xa9
	lsls r2, r2, #2
	adds r0, r7, r2
	strb r5, [r0]
	movs r3, #0xaa
	lsls r3, r3, #2
	adds r0, r7, r3
	mov r1, sl
	movs r2, #0
	movs r3, #0x80
	lsls r3, r3, #1
	bl func_0805E824
	movs r1, #0xaf
	lsls r1, r1, #2
	adds r0, r7, r1
	strh r4, [r0]
	strh r4, [r0, #2]
	strh r4, [r0, #4]
	strh r4, [r0, #6]
	strh r4, [r0, #8]
	str r4, [r0, #0xc]
	strb r5, [r0, #0x10]
	strb r5, [r0, #0x11]
	str r4, [r0, #0x14]
	strb r5, [r0, #0x18]
	movs r2, #0xb7
	lsls r2, r2, #2
	adds r0, r7, r2
	strb r5, [r0]
	movs r3, #0xb8
	lsls r3, r3, #2
	adds r5, r7, r3
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r5, #4]
	movs r0, #0xba
	lsls r0, r0, #2
	adds r5, r7, r0
	adds r0, r5, #0
	bl func_08007128
	str r4, [r5, #4]
	movs r1, #0xbc
	lsls r1, r1, #2
	adds r5, r7, r1
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #2
	bl func_08007B54
	str r0, [r5, #4]
	movs r2, #0xbe
	lsls r2, r2, #2
	adds r5, r7, r2
	adds r0, r5, #0
	bl func_08007128
	adds r0, r5, #0
	bl func_0800736C
	str r0, [r5, #4]
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r5, r7, r3
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #6
	bl func_08007B54
	str r0, [r5, #4]
	movs r0, #0xc2
	lsls r0, r0, #2
	adds r5, r7, r0
	adds r0, r5, #0
	bl func_08007128
	str r4, [r5, #4]
	movs r1, #0xc4
	lsls r1, r1, #2
	adds r5, r7, r1
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r5, #4]
	movs r2, #0xc6
	lsls r2, r2, #2
	adds r5, r7, r2
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #4
	bl func_08007B54
	str r0, [r5, #4]
	movs r3, #0xc8
	lsls r3, r3, #2
	adds r5, r7, r3
	adds r0, r5, #0
	bl func_08007128
	str r4, [r5, #4]
	movs r0, #0xca
	lsls r0, r0, #2
	adds r5, r7, r0
	adds r0, r5, #0
	bl func_08007874
	adds r0, r5, #0
	movs r1, #7
	bl func_08007B54
	str r0, [r5, #4]
	movs r2, #0xcd
	lsls r2, r2, #2
	adds r1, r7, r2
	strh r4, [r1]
	ldrh r2, [r1, #0x12]
	ldr r0, _08094EB0 @ =0xFFFFF000
	ands r0, r2
	strh r0, [r1, #0x12]
	ldrb r2, [r1, #0x13]
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r2
	strb r0, [r1, #0x13]
	movs r2, #0
	movs r1, #7
	movs r3, #0xd1
	lsls r3, r3, #2
	adds r0, r7, r3
_08094D7C:
	strh r2, [r0]
	subs r0, #2
	subs r1, #1
	cmp r1, #0
	bge _08094D7C
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r0, #0
	strh r0, [r1]
	ldrh r2, [r1, #0x12]
	ldr r0, _08094EB0 @ =0xFFFFF000
	ands r0, r2
	strh r0, [r1, #0x12]
	ldrb r2, [r1, #0x13]
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r2
	strb r0, [r1, #0x13]
	movs r1, #0x8c
	adds r1, r1, r7
	mov sb, r1
	movs r2, #0
	movs r1, #7
	movs r3, #0xd6
	lsls r3, r3, #2
	adds r0, r7, r3
_08094DB2:
	strh r2, [r0]
	subs r0, #2
	subs r1, #1
	cmp r1, #0
	bge _08094DB2
	movs r0, #7
	movs r1, #1
	rsbs r1, r1, #0
_08094DC2:
	subs r0, #1
	cmp r0, r1
	bne _08094DC2
	ldr r0, _08094EB4 @ =0x00002BB0
	adds r4, r7, r0
	movs r5, #7
	movs r6, #1
	rsbs r6, r6, #0
_08094DD2:
	adds r0, r4, #0
	bl __12RucksackItem
	adds r4, #4
	subs r5, #1
	cmp r5, r6
	bne _08094DD2
	ldr r2, _08094EB8 @ =0x000033D8
	adds r1, r7, r2
	ldr r0, _08094EBC @ =vtable_unk_080E823C
	str r0, [r1]
	movs r3, #0
	mov r8, r3
	movs r2, #0
	strh r2, [r1, #4]
	mov r0, r8
	strb r0, [r1, #6]
	strb r0, [r1, #7]
	ldr r1, _08094EC0 @ =0x0000035E
	adds r0, r7, r1
	mov r3, sp
	ldrb r3, [r3, #4]
	strb r3, [r0]
	mov r5, sb
	ldr r0, [r5]
	ldr r1, _08094EC4 @ =0x00002C1A
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r3, #0xda
	lsls r3, r3, #2
	adds r0, r7, r3
	strb r1, [r0]
	movs r0, #0xcc
	lsls r0, r0, #2
	adds r4, r7, r0
	strh r2, [r4]
	ldr r0, [r5]
	movs r6, #0xfa
	lsls r6, r6, #1
	adds r0, r0, r6
	bl HasKitchenKnife__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094E34
	ldrh r0, [r4]
	movs r1, #1
	orrs r0, r1
	strh r0, [r4]
_08094E34:
	ldr r0, [r5]
	adds r0, r0, r6
	bl HasKitchenFryingPan__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094E4A
	ldrh r0, [r4]
	movs r1, #2
	orrs r0, r1
	strh r0, [r4]
_08094E4A:
	ldr r0, [r5]
	adds r0, r0, r6
	bl HasKitchenPot__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094E60
	ldrh r0, [r4]
	movs r1, #4
	orrs r0, r1
	strh r0, [r4]
_08094E60:
	ldr r0, [r5]
	adds r0, r0, r6
	bl HasKitchenMixer__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094E76
	ldrh r0, [r4]
	movs r1, #8
	orrs r0, r1
	strh r0, [r4]
_08094E76:
	ldr r0, [r5]
	adds r0, r0, r6
	bl HasKitchenWhisk__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094E8C
	ldrh r0, [r4]
	movs r1, #0x10
	orrs r0, r1
	strh r0, [r4]
_08094E8C:
	ldr r0, [r5]
	adds r0, r0, r6
	bl HasKitchenRollingPin__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	b _08094EC8
	.align 2, 0
_08094E9C: .4byte vtable_unk_080E8230
_08094EA0: .4byte 0x08527094
_08094EA4: .4byte 0x08728208
_08094EA8: .4byte 0x08754C0C
_08094EAC: .4byte 0x08754674
_08094EB0: .4byte 0xFFFFF000
_08094EB4: .4byte 0x00002BB0
_08094EB8: .4byte 0x000033D8
_08094EBC: .4byte vtable_unk_080E823C
_08094EC0: .4byte 0x0000035E
_08094EC4: .4byte 0x00002C1A
_08094EC8:
	beq _08094ED2
	ldrh r0, [r4]
	movs r1, #0x20
	orrs r0, r1
	strh r0, [r4]
_08094ED2:
	ldr r0, [r5]
	adds r0, r0, r6
	bl HasKitchenOven__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094EE8
	ldrh r0, [r4]
	movs r1, #0x40
	orrs r0, r1
	strh r0, [r4]
_08094EE8:
	ldr r0, [r5]
	adds r0, r0, r6
	bl HasKitchenSeasoningSet__C9FarmHouse
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08094F02
	ldrh r0, [r4]
	movs r2, #0xf8
	lsls r2, r2, #4
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r4]
_08094F02:
	mov r3, sb
	ldr r0, [r3]
	ldr r1, _08094F58 @ =0x00001C38
	adds r0, r0, r1
	bl func_0800F5F8
	ldr r2, _08094F5C @ =0x00002BA0
	adds r1, r7, r2
	str r0, [r1]
	ldr r3, _08094F60 @ =0x00002BB0
	adds r5, r7, r3
	movs r4, #7
_08094F1A:
	mov r0, sp
	bl __12RucksackItem
	ldr r0, [sp]
	stm r5!, {r0}
	subs r4, #1
	cmp r4, #0
	bge _08094F1A
	movs r2, #0
	movs r1, #8
	ldr r3, _08094F64 @ =0x00002BAF
	adds r0, r7, r3
_08094F32:
	strb r2, [r0]
	subs r0, #1
	subs r1, #1
	cmp r1, #0
	bge _08094F32
	ldr r0, _08094F68 @ =0x000033D0
	adds r1, r7, r0
	movs r0, #0
	strh r0, [r1]
	adds r0, r7, #0
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08094F58: .4byte 0x00001C38
_08094F5C: .4byte 0x00002BA0
_08094F60: .4byte 0x00002BB0
_08094F64: .4byte 0x00002BAF
_08094F68: .4byte 0x000033D0

	thumb_func_start func_08094F6C
func_08094F6C: @ 0x08094F6C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	mov r8, r0
	adds r4, r1, #0
	adds r0, r4, #0
	bl func_08008724
	movs r7, #0
	add r0, sp, #4
	mov sb, r0
_08094F86:
	ldr r1, _08094FA0 @ =0x000033D0
	adds r0, r4, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #7
	bls _08094F94
	b _08095176
_08094F94:
	lsls r0, r0, #2
	ldr r1, _08094FA4 @ =_08094FA8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08094FA0: .4byte 0x000033D0
_08094FA4: .4byte _08094FA8
_08094FA8: @ jump table
	.4byte _08094FC8 @ case 0
	.4byte _08095020 @ case 1
	.4byte _08095048 @ case 2
	.4byte _08095074 @ case 3
	.4byte _080950C0 @ case 4
	.4byte _080950F4 @ case 5
	.4byte _08095138 @ case 6
	.4byte _08095138 @ case 7
_08094FC8:
	ldr r1, _08095010 @ =0x0000035E
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08094FD4
	b _080950E4
_08094FD4:
	ldr r1, _08095014 @ =0x00000366
	adds r0, r4, r1
	movs r5, #0
	strb r5, [r0]
	movs r2, #0xda
	lsls r2, r2, #2
	adds r1, r4, r2
	ldrb r0, [r1]
	lsrs r3, r0, #3
	ldr r0, _08095018 @ =0x00000367
	adds r2, r4, r0
	strb r3, [r2]
	ldrb r0, [r1]
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _08094FFA
	subs r0, r3, #1
	strb r0, [r2]
_08094FFA:
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r0, r4, r2
	strb r5, [r0]
	adds r2, #1
	adds r0, r4, r2
	strb r1, [r0]
	ldr r0, _0809501C @ =0x000033D0
	adds r1, r4, r0
	b _080950B4
	.align 2, 0
_08095010: .4byte 0x0000035E
_08095014: .4byte 0x00000366
_08095018: .4byte 0x00000367
_0809501C: .4byte 0x000033D0
_08095020:
	adds r0, r4, #0
	bl func_080951B4
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _08095034
	movs r7, #1
_08095034:
	cmp r1, #1
	beq _0809503A
	b _08095176
_0809503A:
	ldr r2, _08095044 @ =0x000033D0
	adds r1, r4, r2
	movs r0, #2
	strh r0, [r1]
	b _08095176
	.align 2, 0
_08095044: .4byte 0x000033D0
_08095048:
	adds r0, r4, #0
	bl func_080958C0
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	movs r0, #1
	rsbs r0, r0, #0
	cmp r2, r0
	bne _0809505C
	movs r7, #1
_0809505C:
	cmp r2, #1
	bne _08095068
	ldr r0, _08095070 @ =0x000033D0
	adds r1, r4, r0
	movs r0, #3
	strh r0, [r1]
_08095068:
	cmp r2, #2
	beq _0809506E
	b _08095176
_0809506E:
	b _080950B0
	.align 2, 0
_08095070: .4byte 0x000033D0
_08095074:
	adds r0, r4, #0
	bl func_08095D80
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	movs r0, #1
	rsbs r0, r0, #0
	cmp r2, r0
	bne _08095088
	movs r7, #1
_08095088:
	cmp r2, #1
	bne _08095094
	ldr r0, _080950A8 @ =0x000033D0
	adds r1, r4, r0
	movs r0, #4
	strh r0, [r1]
_08095094:
	cmp r2, #2
	bne _08095176
	ldr r1, _080950AC @ =0x0000035E
	adds r0, r4, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080950B0
	movs r7, #1
	b _08095176
	.align 2, 0
_080950A8: .4byte 0x000033D0
_080950AC: .4byte 0x0000035E
_080950B0:
	ldr r2, _080950BC @ =0x000033D0
	adds r1, r4, r2
_080950B4:
	movs r0, #1
	strh r0, [r1]
	b _08095176
	.align 2, 0
_080950BC: .4byte 0x000033D0
_080950C0:
	adds r0, r4, #0
	bl func_080962F0
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	movs r0, #1
	rsbs r0, r0, #0
	cmp r2, r0
	bne _080950D4
	movs r7, #1
_080950D4:
	cmp r2, #1
	bne _080950E0
	ldr r0, _080950F0 @ =0x000033D0
	adds r1, r4, r0
	movs r0, #5
	strh r0, [r1]
_080950E0:
	cmp r2, #2
	bne _08095176
_080950E4:
	ldr r2, _080950F0 @ =0x000033D0
	adds r1, r4, r2
	movs r0, #3
	strh r0, [r1]
	b _08095176
	.align 2, 0
_080950F0: .4byte 0x000033D0
_080950F4:
	adds r0, r4, #0
	bl func_080972AC
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	movs r0, #1
	rsbs r0, r0, #0
	cmp r2, r0
	bne _08095108
	movs r7, #1
_08095108:
	cmp r2, #1
	bne _08095114
	ldr r0, _08095134 @ =0x000033D0
	adds r1, r4, r0
	movs r0, #4
	strh r0, [r1]
_08095114:
	cmp r2, #2
	bne _08095120
	ldr r0, _08095134 @ =0x000033D0
	adds r1, r4, r0
	movs r0, #3
	strh r0, [r1]
_08095120:
	cmp r2, #3
	bne _08095126
	movs r7, #1
_08095126:
	cmp r2, #4
	bne _08095176
	ldr r2, _08095134 @ =0x000033D0
	adds r1, r4, r2
	movs r0, #6
	strh r0, [r1]
	b _08095176
	.align 2, 0
_08095134: .4byte 0x000033D0
_08095138:
	ldr r0, _08095170 @ =0x000033D0
	adds r5, r4, r0
	movs r1, #0
	ldrsh r0, [r5, r1]
	movs r6, #6
	eors r0, r6
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
	adds r0, r4, #0
	bl func_08097AE4
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _0809515E
	movs r7, #1
_0809515E:
	cmp r1, #1
	bne _08095176
	movs r2, #0
	ldrsh r0, [r5, r2]
	cmp r0, #6
	bne _08095174
	movs r0, #7
	strh r0, [r5]
	b _08095176
	.align 2, 0
_08095170: .4byte 0x000033D0
_08095174:
	strh r6, [r5]
_08095176:
	cmp r7, #1
	beq _0809517C
	b _08094F86
_0809517C:
	movs r1, #0
	str r1, [sp]
	mov r0, sp
	str r0, [sp, #4]
	mov r2, sb
	str r1, [r2, #4]
	ldr r0, [sp, #4]
	str r1, [r0]
	mov r0, r8
	str r1, [r0]
	ldr r1, [sp]
	cmp r1, #0
	beq _080951A2
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080951A2:
	mov r0, r8
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_080951B4
func_080951B4: @ 0x080951B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r6, r0, #0
	movs r0, #0
	mov sb, r0
	movs r7, #0
	adds r0, r6, #0
	bl func_08008724
	movs r1, #0xba
	lsls r1, r1, #2
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r2, #0xc2
	lsls r2, r2, #2
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	adds r0, r6, #0
	bl func_0809800C
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	mov r3, sb
	str r3, [r4]
	str r3, [r4, #4]
	ldr r0, _0809527C @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #4]
	ldr r1, _08095280 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	adds r0, r6, #0
	bl func_08095580
	movs r4, #0
	mov sl, r4
_0809525C:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	adds r0, r7, #0
	cmp r0, #4
	bls _08095270
	b _08095508
_08095270:
	lsls r0, r0, #2
	ldr r1, _08095284 @ =_08095288
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809527C: .4byte vtable_unk_080E5B80
_08095280: .4byte 0x00000889
_08095284: .4byte _08095288
_08095288: @ jump table
	.4byte _0809529C @ case 0
	.4byte _080952AE @ case 1
	.4byte _080954C8 @ case 2
	.4byte _080954D2 @ case 3
	.4byte _080954F8 @ case 4
_0809529C:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080952AA
	b _08095508
_080952AA:
	movs r7, #1
	b _08095508
_080952AE:
	ldr r1, _080952FC @ =0x00000366
	adds r0, r6, r1
	ldrb r5, [r0]
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r0, r6, r2
	ldrb r0, [r0]
	mov r8, r0
	movs r4, #0
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	bne _080952DE
	adds r0, r6, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _080952E0
_080952DE:
	movs r4, #1
_080952E0:
	cmp r4, #0
	beq _08095308
	ldr r3, _080952FC @ =0x00000366
	adds r2, r6, r3
	ldr r4, _08095300 @ =0x00000367
	adds r0, r6, r4
	ldrb r1, [r2]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08095304
	adds r0, r1, #1
	strb r0, [r2]
	adds r1, r0, #0
	b _0809534A
	.align 2, 0
_080952FC: .4byte 0x00000366
_08095300: .4byte 0x00000367
_08095304:
	movs r1, #0
	b _0809534A
_08095308:
	movs r4, #0
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	bne _08095328
	adds r0, r6, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0809532A
_08095328:
	movs r4, #1
_0809532A:
	cmp r4, #0
	beq _0809535C
	ldr r3, _08095340 @ =0x00000366
	adds r1, r6, r3
	ldrb r0, [r1]
	cmp r0, #0
	beq _08095344
	subs r0, #1
	strb r0, [r1]
	adds r1, r0, #0
	b _0809534A
	.align 2, 0
_08095340: .4byte 0x00000366
_08095344:
	ldr r4, _08095354 @ =0x00000367
	adds r0, r6, r4
	ldrb r1, [r0]
_0809534A:
	ldr r2, _08095358 @ =0x00000366
	adds r0, r6, r2
	strb r1, [r0]
	movs r7, #2
	b _080953BC
	.align 2, 0
_08095354: .4byte 0x00000367
_08095358: .4byte 0x00000366
_0809535C:
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0809538C
	movs r3, #0xd9
	lsls r3, r3, #2
	adds r2, r6, r3
	ldr r4, _08095384 @ =0x00000365
	adds r0, r6, r4
	ldrb r1, [r2]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08095388
	adds r0, r1, #1
	strb r0, [r2]
	adds r1, r0, #0
	b _080953B4
	.align 2, 0
_08095384: .4byte 0x00000365
_08095388:
	movs r1, #0
	b _080953B4
_0809538C:
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080953BC
	movs r3, #0xd9
	lsls r3, r3, #2
	adds r1, r6, r3
	ldrb r0, [r1]
	cmp r0, #0
	beq _080953AE
	subs r0, #1
	strb r0, [r1]
	adds r1, r0, #0
	b _080953B4
_080953AE:
	ldr r4, _080953D4 @ =0x00000365
	adds r0, r6, r4
	ldrb r1, [r0]
_080953B4:
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r0, r6, r2
	strb r1, [r0]
_080953BC:
	ldr r3, _080953D8 @ =0x00000366
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r5, r0
	beq _080953DC
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xca
	bl func_08008B6C
	b _080953F2
	.align 2, 0
_080953D4: .4byte 0x00000365
_080953D8: .4byte 0x00000366
_080953DC:
	movs r4, #0xd9
	lsls r4, r4, #2
	adds r0, r6, r4
	ldrb r0, [r0]
	cmp r8, r0
	beq _080953F2
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xcb
	bl func_08008B6C
_080953F2:
	movs r4, #0
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08095410
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _08095412
_08095410:
	movs r4, #1
_08095412:
	cmp r4, #0
	beq _080954A6
	add r2, sp, #8
	movs r0, #0
	strh r0, [r2]
	ldrh r1, [r2, #0x12]
	ldr r0, _08095490 @ =0xFFFFF000
	ands r0, r1
	strh r0, [r2, #0x12]
	ldrb r1, [r2, #0x13]
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r1
	strb r0, [r2, #0x13]
	adds r4, r6, #0
	adds r4, #0x94
	adds r5, r2, #0
	adds r0, r6, #0
	adds r0, #0x8c
	adds r2, #2
	movs r3, #0
	add r1, sp, #0x18
_0809543E:
	strh r3, [r1]
	subs r1, #2
	cmp r1, r2
	bge _0809543E
	ldr r0, [r0]
	ldr r1, _08095494 @ =0x00002214
	adds r0, r0, r1
	ldr r2, _08095498 @ =0x00000366
	adds r1, r6, r2
	ldrb r2, [r1]
	movs r3, #0xd9
	lsls r3, r3, #2
	adds r1, r6, r3
	lsls r2, r2, #3
	ldrb r1, [r1]
	adds r2, r2, r1
	adds r1, r5, #0
	bl func_0809A970
	ldrb r1, [r5, #0x13]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0809549C
	adds r0, r4, #0
	movs r1, #0xc5
	bl func_08008B6C
	movs r4, #0xcd
	lsls r4, r4, #2
	adds r1, r6, r4
	adds r0, r5, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	movs r4, #1
	mov sb, r4
	movs r7, #3
	b _08095508
	.align 2, 0
_08095490: .4byte 0xFFFFF000
_08095494: .4byte 0x00002214
_08095498: .4byte 0x00000366
_0809549C:
	adds r0, r4, #0
	movs r1, #0xc7
	bl func_08008B6C
	b _08095508
_080954A6:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08095508
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xc6
	bl func_08008B6C
	movs r0, #1
	rsbs r0, r0, #0
	mov sb, r0
	movs r7, #3
	b _08095508
_080954C8:
	adds r0, r6, #0
	bl func_08095580
	movs r7, #1
	b _08095508
_080954D2:
	ldr r0, [sp, #4]
	ldr r1, _080954F4 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #4
	b _08095508
	.align 2, 0
_080954F4: .4byte 0x00000889
_080954F8:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08095508
	movs r1, #1
	mov sl, r1
_08095508:
	movs r2, #0xd8
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #0x10
	strh r0, [r1]
	movs r3, #0xd9
	lsls r3, r3, #2
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r0, #0x28
	ldr r4, _0809557C @ =0x00000362
	adds r1, r6, r4
	strh r0, [r1]
	adds r0, r6, #0
	bl func_080983E8
	mov r0, sl
	cmp r0, #0
	bne _08095532
	b _0809525C
_08095532:
	movs r1, #0xba
	lsls r1, r1, #2
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	movs r5, #0
	str r5, [r4, #4]
	movs r2, #0xc2
	lsls r2, r2, #2
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	str r5, [r4, #4]
	mov r4, sb
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _08095568
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08095568:
	adds r0, r4, #0
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809557C: .4byte 0x00000362

	thumb_func_start func_08095580
func_08095580: @ 0x08095580
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x70
	mov sl, r0
	add r1, sp, #0xc
	movs r0, #0
	strh r0, [r1]
	ldrh r2, [r1, #0x12]
	ldr r0, _0809563C @ =0xFFFFF000
	ands r0, r2
	strh r0, [r1, #0x12]
	ldrb r2, [r1, #0x13]
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r0, r2
	strb r0, [r1, #0x13]
	mov r0, sp
	adds r0, #0x40
	str r0, [sp, #0x60]
	adds r1, #0x14
	str r1, [sp, #0x5c]
	movs r2, #0
	movs r1, #7
	add r0, sp, #0x1c
_080955B6:
	strh r2, [r0]
	subs r0, #2
	subs r1, #1
	cmp r1, #0
	bge _080955B6
	ldr r0, _08095640 @ =0x00000366
	add r0, sl
	ldrb r0, [r0]
	lsls r0, r0, #3
	str r0, [sp, #0x58]
	ldr r1, _08095644 @ =0x00000365
	add r1, sl
	movs r0, #0
	strb r0, [r1]
	movs r6, #0
_080955D4:
	lsls r4, r6, #2
	adds r1, r4, r6
	lsls r1, r1, #6
	adds r1, r1, r6
	lsls r1, r1, #2
	add r1, sl
	add r0, sp, #0x40
	movs r2, #0x14
	strh r2, [r0]
	movs r7, #2
	ldr r3, [sp, #0x60]
	strh r7, [r3, #2]
	ldr r0, [sp, #0x40]
	movs r2, #0xdd
	lsls r2, r2, #2
	adds r1, r1, r2
	movs r2, #0
	bl func_0804E7A0
	ldr r3, [sp, #0x58]
	adds r2, r3, r6
	movs r0, #0xda
	lsls r0, r0, #2
	add r0, sl
	mov r8, r4
	adds r4, r6, #1
	str r4, [sp, #0x64]
	ldrb r0, [r0]
	cmp r2, r0
	bge _08095702
	mov r0, sl
	adds r0, #0x8c
	ldr r0, [r0]
	ldr r7, _08095648 @ =0x00002214
	adds r0, r0, r7
	add r1, sp, #0xc
	bl func_0809A970
	add r0, sp, #0xc
	ldrh r0, [r0]
	cmp r0, #0xab
	bhi _0809564C
	add r0, sp, #0xc
	ldrh r1, [r0]
	subs r1, #1
	ldr r0, [sp, #0x5c]
	bl __4FoodUi
	ldr r0, [sp, #0x5c]
	bl GetName__C4Food
	b _08095660
	.align 2, 0
_0809563C: .4byte 0xFFFFF000
_08095640: .4byte 0x00000366
_08095644: .4byte 0x00000365
_08095648: .4byte 0x00002214
_0809564C:
	add r4, sp, #0x44
	add r0, sp, #0xc
	ldrh r1, [r0]
	subs r1, #0xac
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetName__C7Article
_08095660:
	adds r2, r0, #0
	add r0, sp, #0xc
	ldrb r1, [r0, #0x13]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080956A2
	mov r0, r8
	adds r1, r0, r6
	lsls r1, r1, #6
	adds r1, r1, r6
	lsls r1, r1, #2
	add r1, sl
	add r0, sp, #0x48
	movs r3, #0x14
	strh r3, [r0]
	movs r4, #2
	strh r4, [r0, #2]
	ldr r0, [sp, #0x48]
	movs r7, #0xdd
	lsls r7, r7, #2
	adds r1, r1, r7
	str r2, [sp]
	movs r2, #0
	str r2, [sp, #4]
	movs r3, #1
	str r3, [sp, #8]
	movs r3, #0
	bl func_0804E958
	adds r4, r6, #1
	str r4, [sp, #0x64]
	b _080956F8
_080956A2:
	movs r1, #0
	ldrb r0, [r2]
	add r3, sp, #0x24
	add r7, sp, #0x4c
	adds r4, r6, #1
	str r4, [sp, #0x64]
	cmp r0, #0
	beq _080956C4
	adds r5, r3, #0
	movs r4, #0x3f
_080956B6:
	adds r0, r5, r1
	strb r4, [r0]
	adds r2, #1
	adds r1, #1
	ldrb r0, [r2]
	cmp r0, #0
	bne _080956B6
_080956C4:
	adds r0, r3, r1
	movs r1, #0
	strb r1, [r0]
	mov r2, r8
	adds r1, r2, r6
	lsls r1, r1, #6
	adds r1, r1, r6
	lsls r1, r1, #2
	add r1, sl
	add r0, sp, #0x4c
	movs r4, #0x14
	strh r4, [r0]
	movs r0, #2
	strh r0, [r7, #2]
	ldr r0, [sp, #0x4c]
	movs r2, #0xdd
	lsls r2, r2, #2
	adds r1, r1, r2
	str r3, [sp]
	movs r3, #0
	str r3, [sp, #4]
	movs r4, #1
	str r4, [sp, #8]
	movs r2, #0
	bl func_0804E958
_080956F8:
	ldr r1, _08095750 @ =0x00000365
	add r1, sl
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08095702:
	mov r0, sl
	bl func_08008910
	mov r7, r8
	adds r2, r7, r6
	lsls r1, r2, #6
	adds r1, r1, r6
	lsls r1, r1, #2
	add r1, sl
	movs r3, #0xdd
	lsls r3, r3, #2
	adds r1, r1, r3
	adds r5, r0, #0
	lsls r2, r2, #8
	ldr r4, _08095754 @ =0x06002000
	adds r2, r2, r4
	add r0, sp, #0x20
	movs r3, #0xa0
	lsls r3, r3, #3
	bl func_08008F0C
	ldr r6, [sp, #0x5c]
	mov sb, r6
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08095758
	cmp r1, #0
	beq _08095748
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_08095748:
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0809581E
	.align 2, 0
_08095750: .4byte 0x00000365
_08095754: .4byte 0x06002000
_08095758:
	str r1, [sp, #0x68]
	movs r4, #1
	str r4, [sp, #0x54]
	ldr r0, [r5]
	adds r6, r1, #0
	subs r0, r6, r0
	asrs r4, r0, #4
	str r4, [sp, #0x50]
	add r1, sp, #0x54
	add r0, sp, #0x50
	cmp r4, #1
	bhs _08095772
	adds r0, r1, #0
_08095772:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08095790
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08095794
	mov r0, r8
	bl func_080D3BC0
	b _08095794
_08095790:
	movs r0, #0
	mov r8, r0
_08095794:
	adds r4, r0, #0
	str r4, [sp, #0x6c]
	ldr r2, [r5]
	adds r3, r4, #0
	ldr r7, [sp, #0x68]
	cmp r2, r7
	beq _080957BC
_080957A2:
	cmp r3, #0
	beq _080957B2
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080957B2:
	adds r2, #0x10
	adds r3, #0x10
	ldr r0, [sp, #0x68]
	cmp r2, r0
	bne _080957A2
_080957BC:
	adds r4, r3, #0
	ldr r0, [sp, #0x54]
	cmp r0, #1
	bne _080957D8
	cmp r4, #0
	beq _080957D4
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_080957D4:
	adds r4, #0x10
	b _080957FA
_080957D8:
	adds r3, r0, #0
	adds r2, r4, #0
	cmp r3, #0
	beq _080957F8
_080957E0:
	cmp r2, #0
	beq _080957F0
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_080957F0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080957E0
_080957F8:
	adds r4, r2, #0
_080957FA:
	ldr r2, [r5, #4]
	ldr r0, [r5]
	adds r1, r0, #0
	cmp r0, r2
	beq _0809580A
_08095804:
	adds r1, #0x10
	cmp r1, r2
	bne _08095804
_0809580A:
	cmp r0, #0
	beq _08095812
	bl free
_08095812:
	ldr r0, [sp, #0x6c]
	add r0, r8
	ldr r7, [sp, #0x6c]
	str r7, [r5]
	str r4, [r5, #4]
	str r0, [r5, #0xc]
_0809581E:
	ldr r6, [sp, #0x64]
	cmp r6, #7
	bgt _08095826
	b _080955D4
_08095826:
	ldr r1, _080958A4 @ =0x00000365
	add r1, sl
	ldrb r0, [r1]
	subs r2, r0, #1
	strb r2, [r1]
	movs r3, #0xd9
	lsls r3, r3, #2
	add r3, sl
	ldrb r1, [r3]
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r1, r0
	bls _08095842
	strb r2, [r3]
_08095842:
	ldr r4, _080958A8 @ =0x00000366
	add r4, sl
	ldrb r0, [r4]
	adds r0, #1
	movs r1, #0xa
	bl __divsi3
	ldr r1, _080958AC @ =0x00000369
	add r1, sl
	strb r0, [r1]
	ldrb r0, [r4]
	adds r0, #1
	movs r1, #0xa
	bl __modsi3
	ldr r1, _080958B0 @ =0x0000036A
	add r1, sl
	strb r0, [r1]
	ldr r1, _080958B4 @ =0x0000036B
	add r1, sl
	movs r0, #0xd
	strb r0, [r1]
	ldr r4, _080958B8 @ =0x00000367
	add r4, sl
	ldrb r0, [r4]
	adds r0, #1
	movs r1, #0xa
	bl __divsi3
	movs r1, #0xdb
	lsls r1, r1, #2
	add r1, sl
	strb r0, [r1]
	ldrb r0, [r4]
	adds r0, #1
	movs r1, #0xa
	bl __modsi3
	ldr r1, _080958BC @ =0x0000036D
	add r1, sl
	strb r0, [r1]
	add sp, #0x70
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080958A4: .4byte 0x00000365
_080958A8: .4byte 0x00000366
_080958AC: .4byte 0x00000369
_080958B0: .4byte 0x0000036A
_080958B4: .4byte 0x0000036B
_080958B8: .4byte 0x00000367
_080958BC: .4byte 0x0000036D

	thumb_func_start func_080958C0
func_080958C0: @ 0x080958C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r6, r0, #0
	movs r0, #0
	mov r8, r0
	movs r7, #0
	movs r1, #1
	str r1, [sp, #0xc]
	movs r2, #0
	mov sb, r2
	adds r0, r6, #0
	bl func_08008724
	movs r3, #0xc8
	lsls r3, r3, #2
	adds r4, r6, r3
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	ldr r4, _080959A8 @ =0x00002BB0
	adds r5, r6, r4
	movs r4, #7
_080958FE:
	mov r0, sp
	bl __12RucksackItem
	ldr r0, [sp]
	stm r5!, {r0}
	subs r4, #1
	cmp r4, #0
	bge _080958FE
	movs r2, #0
	movs r1, #8
	ldr r3, _080959AC @ =0x00002BAF
	adds r0, r6, r3
_08095916:
	strb r2, [r0]
	subs r0, #1
	subs r1, #1
	cmp r1, #0
	bge _08095916
	movs r4, #0xcd
	lsls r4, r4, #2
	adds r1, r6, r4
	adds r0, r6, #0
	bl func_080989DC
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _080959B0 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp]
	ldr r1, _080959B4 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r0, _080959B8 @ =0x000033D2
	adds r1, r6, r0
	movs r0, #2
	strb r0, [r1]
	movs r1, #0
	mov sl, r1
_0809598A:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	adds r0, r7, #0
	cmp r0, #0xa
	bls _0809599E
	b _08095D10
_0809599E:
	lsls r0, r0, #2
	ldr r1, _080959BC @ =_080959C0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080959A8: .4byte 0x00002BB0
_080959AC: .4byte 0x00002BAF
_080959B0: .4byte vtable_unk_080E5B80
_080959B4: .4byte 0x00000889
_080959B8: .4byte 0x000033D2
_080959BC: .4byte _080959C0
_080959C0: @ jump table
	.4byte _080959EC @ case 0
	.4byte _08095A40 @ case 1
	.4byte _08095A90 @ case 2
	.4byte _08095AB8 @ case 3
	.4byte _08095AD8 @ case 4
	.4byte _08095B7C @ case 5
	.4byte _08095BAE @ case 6
	.4byte _08095BD4 @ case 7
	.4byte _08095C0C @ case 8
	.4byte _08095CCC @ case 9
	.4byte _08095D00 @ case 10
_080959EC:
	ldr r0, [sp]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080959FA
	b _08095D10
_080959FA:
	ldr r2, _08095A18 @ =0x0000035D
	adds r0, r6, r2
	ldrb r2, [r0]
	cmp r2, #0
	bne _08095A24
	ldr r3, _08095A1C @ =0x000033D4
	adds r0, r6, r3
	movs r1, #0
	strh r2, [r0]
	ldr r4, _08095A20 @ =0x000033D2
	adds r0, r6, r4
	strb r1, [r0]
	movs r7, #1
	b _08095D10
	.align 2, 0
_08095A18: .4byte 0x0000035D
_08095A1C: .4byte 0x000033D4
_08095A20: .4byte 0x000033D2
_08095A24:
	ldr r0, _08095A38 @ =0x000033D4
	adds r1, r6, r0
	movs r2, #0
	movs r0, #1
	strh r0, [r1]
	ldr r1, _08095A3C @ =0x000033D2
	adds r0, r6, r1
	strb r2, [r0]
	movs r7, #7
	b _08095D10
	.align 2, 0
_08095A38: .4byte 0x000033D4
_08095A3C: .4byte 0x000033D2
_08095A40:
	ldr r2, _08095A6C @ =0x000033D2
	adds r0, r6, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	beq _08095A50
	b _08095D10
_08095A50:
	ldr r3, _08095A70 @ =0x000033D3
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08095A60
	b _08095C00
_08095A60:
	cmp r0, #1
	bgt _08095A74
	cmp r0, #0
	beq _08095A7C
	b _08095D10
	.align 2, 0
_08095A6C: .4byte 0x000033D2
_08095A70: .4byte 0x000033D3
_08095A74:
	cmp r0, #2
	bne _08095A7A
	b _08095C04
_08095A7A:
	b _08095D10
_08095A7C:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08095A8C @ =0x08100AC0
	bl func_08050D8C
	movs r7, #2
	b _08095D10
	.align 2, 0
_08095A8C: .4byte 0x08100AC0
_08095A90:
	ldr r0, [sp]
	ldr r1, _08095AB4 @ =0x00000889
	adds r0, #0xc
	movs r2, #2
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #3
	b _08095D10
	.align 2, 0
_08095AB4: .4byte 0x00000889
_08095AB8:
	ldr r0, [sp]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _08095AC6
	b _08095D10
_08095AC6:
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xad
	bl func_08008B6C
	movs r0, #0x78
	mov sb, r0
	movs r7, #4
	b _08095D10
_08095AD8:
	mov r1, sb
	lsls r0, r1, #0x10
	ldr r2, _08095B74 @ =0xFFFF0000
	adds r0, r0, r2
	lsrs r3, r0, #0x10
	mov sb, r3
	cmp r0, #0
	blt _08095AEA
	b _08095D10
_08095AEA:
	adds r0, r6, #0
	bl func_08008918
	add r2, sp, #4
	movs r4, #0x82
	lsls r4, r4, #5
	adds r1, r4, #0
	strh r1, [r2]
	strh r1, [r0]
	adds r4, r6, #0
	adds r4, #0x7c
	movs r5, #0
	ldr r1, [r6, #0x7c]
	cmp r5, r1
	beq _08095B1E
	cmp r1, #0
	beq _08095B1E
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08095B1E:
	str r5, [r4]
	adds r4, r6, #0
	adds r4, #0x78
	movs r5, #0
	ldr r1, [r6, #0x78]
	cmp r5, r1
	beq _08095B42
	cmp r1, #0
	beq _08095B42
	movs r3, #0x84
	lsls r3, r3, #2
	adds r0, r1, r3
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08095B42:
	str r5, [r4]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r0, #0
	strh r0, [r1]
	movs r4, #0
	str r4, [sp, #0xc]
	ldr r0, [sp]
	ldr r1, _08095B78 @ =0x00000889
	adds r0, #0xc
	movs r2, #2
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #5
	b _08095D10
	.align 2, 0
_08095B74: .4byte 0xFFFF0000
_08095B78: .4byte 0x00000889
_08095B7C:
	ldr r0, [sp]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _08095B8A
	b _08095D10
_08095B8A:
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r1, r6, r0
	movs r2, #0xcd
	lsls r2, r2, #2
	adds r0, r6, r2
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	adds r0, r6, #0
	bl func_080975F4
	movs r0, #1
	rsbs r0, r0, #0
	mov r8, r0
	movs r7, #6
	b _08095D10
_08095BAE:
	ldr r1, _08095BCC @ =0x000033D2
	adds r0, r6, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	beq _08095BBE
	b _08095D10
_08095BBE:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08095BD0 @ =0x08100AC0
	bl func_08050D8C
	movs r7, #9
	b _08095D10
	.align 2, 0
_08095BCC: .4byte 0x000033D2
_08095BD0: .4byte 0x08100AC0
_08095BD4:
	ldr r2, _08095BF8 @ =0x000033D2
	adds r0, r6, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	beq _08095BE4
	b _08095D10
_08095BE4:
	ldr r3, _08095BFC @ =0x000033D3
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08095C00
	cmp r0, #1
	beq _08095C04
	b _08095D10
	.align 2, 0
_08095BF8: .4byte 0x000033D2
_08095BFC: .4byte 0x000033D3
_08095C00:
	movs r7, #8
	b _08095D10
_08095C04:
	movs r4, #2
	mov r8, r4
	movs r7, #9
	b _08095D10
_08095C0C:
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r1, r6, r0
	movs r2, #0xcd
	lsls r2, r2, #2
	adds r0, r6, r2
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	movs r5, #0
	ldr r0, _08095CAC @ =0x00002BB0
	adds r4, r6, r0
	movs r7, #1
_08095C28:
	movs r1, #0xd7
	lsls r1, r1, #2
	adds r0, r6, r1
	ldrb r0, [r0]
	asrs r0, r5
	eors r0, r7
	ands r0, r7
	cmp r0, #0
	beq _08095C50
	lsls r1, r5, #1
	ldr r2, _08095CB0 @ =0x0000034A
	adds r0, r6, r2
	adds r0, r0, r1
	movs r1, #0
	strh r1, [r0]
	add r0, sp, #8
	bl __12RucksackItem
	ldr r0, [sp, #8]
	str r0, [r4]
_08095C50:
	adds r4, #4
	adds r5, #1
	cmp r5, #7
	ble _08095C28
	movs r4, #0
_08095C5A:
	lsls r0, r4, #1
	ldr r3, _08095CB0 @ =0x0000034A
	adds r1, r6, r3
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r5, r4, #1
	cmp r0, #0
	bne _08095CBE
	adds r3, r5, #0
	cmp r5, #7
	bgt _08095CBE
	mov ip, r1
	movs r0, #0
	mov r8, r0
	lsls r0, r5, #1
	ldr r1, _08095CB0 @ =0x0000034A
	adds r0, r0, r1
	adds r2, r0, r6
	lsls r0, r4, #2
	adds r0, r0, r6
	ldr r1, _08095CAC @ =0x00002BB0
	adds r7, r0, r1
	lsls r0, r5, #2
	adds r0, r0, r1
	adds r4, r0, r6
_08095C8C:
	ldrh r0, [r2]
	cmp r0, #0
	beq _08095CB4
	mov r3, ip
	strh r0, [r3]
	ldr r0, [r4]
	str r0, [r7]
	mov r0, r8
	strh r0, [r2]
	add r0, sp, #4
	bl __12RucksackItem
	ldr r0, [sp, #4]
	str r0, [r4]
	b _08095CBE
	.align 2, 0
_08095CAC: .4byte 0x00002BB0
_08095CB0: .4byte 0x0000034A
_08095CB4:
	adds r2, #2
	adds r4, #4
	adds r3, #1
	cmp r3, #7
	ble _08095C8C
_08095CBE:
	adds r4, r5, #0
	cmp r4, #6
	ble _08095C5A
	movs r1, #1
	mov r8, r1
	movs r7, #9
	b _08095D10
_08095CCC:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08095CF8 @ =0x08100AC0
	bl func_08050D8C
	ldr r0, [sp]
	ldr r1, _08095CFC @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #0xa
	b _08095D10
	.align 2, 0
_08095CF8: .4byte 0x08100AC0
_08095CFC: .4byte 0x00000889
_08095D00:
	ldr r0, [sp]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08095D10
	movs r2, #1
	mov sl, r2
_08095D10:
	ldr r3, [sp, #0xc]
	cmp r3, #0
	beq _08095D30
	ldr r4, _08095D7C @ =0x00000346
	adds r0, r6, r4
	ldrh r1, [r0]
	lsls r1, r1, #0x14
	lsrs r1, r1, #0x14
	movs r2, #0xd7
	lsls r2, r2, #2
	adds r0, r6, r2
	ldrb r2, [r0]
	adds r0, r6, #0
	movs r3, #0
	bl func_08099144
_08095D30:
	adds r0, r6, #0
	bl func_080CD8A0
	adds r0, r6, #0
	bl func_08097D38
	mov r3, sl
	cmp r3, #0
	bne _08095D44
	b _0809598A
_08095D44:
	movs r0, #0xc8
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	movs r0, #0
	str r0, [r4, #4]
	mov r4, r8
	ldr r1, [sp]
	cmp r1, #0
	beq _08095D6A
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08095D6A:
	adds r0, r4, #0
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08095D7C: .4byte 0x00000346

	thumb_func_start func_08095D80
func_08095D80: @ 0x08095D80
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r6, r0, #0
	movs r0, #0
	str r0, [sp, #8]
	mov sl, r0
	adds r0, r6, #0
	bl func_08008724
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r2, #0xc2
	lsls r2, r2, #2
	adds r4, r6, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r3, #0xd2
	lsls r3, r3, #2
	adds r1, r6, r3
	adds r0, r6, #0
	bl func_08098CE8
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	ldr r0, [sp, #8]
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _08095E64 @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #4]
	ldr r1, _08095E68 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r1, #0
	mov sb, r1
	movs r2, #0
	str r2, [sp, #0xc]
	mov r8, r2
	movs r3, #0
	str r3, [sp, #0x10]
	movs r4, #1
	rsbs r4, r4, #0
	str r4, [sp, #0x14]
	ldr r0, _08095E6C @ =0x00000362
	adds r1, r6, r0
	movs r0, #0xc8
	strh r0, [r1]
	movs r1, #0
	str r1, [sp, #0x18]
_08095E44:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	mov r0, sl
	cmp r0, #6
	bls _08095E58
	b _08096278
_08095E58:
	lsls r0, r0, #2
	ldr r1, _08095E70 @ =_08095E74
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08095E64: .4byte vtable_unk_080E5B80
_08095E68: .4byte 0x00000889
_08095E6C: .4byte 0x00000362
_08095E70: .4byte _08095E74
_08095E74: @ jump table
	.4byte _08095E90 @ case 0
	.4byte _08095EA4 @ case 1
	.4byte _080960C8 @ case 2
	.4byte _080961D4 @ case 3
	.4byte _080961F8 @ case 4
	.4byte _08096240 @ case 5
	.4byte _08096268 @ case 6
_08095E90:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _08095E9E
	b _08096278
_08095E9E:
	movs r2, #1
	mov sl, r2
	b _08096278
_08095EA4:
	mov r5, sb
	ldr r7, [sp, #0xc]
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08095EC4
	cmp r5, #2
	bgt _08095EC0
	mov r0, sb
	adds r0, #1
	b _08095EE0
_08095EC0:
	movs r0, #0
	b _08095EE0
_08095EC4:
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08095EE4
	mov r3, sb
	cmp r3, #0
	ble _08095EDE
	mov r0, sb
	subs r0, #1
	b _08095EE0
_08095EDE:
	movs r0, #3
_08095EE0:
	mov sb, r0
	b _08095F10
_08095EE4:
	movs r4, #0
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08095F02
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08095F04
_08095F02:
	movs r4, #1
_08095F04:
	cmp r4, #0
	beq _08095F10
	movs r0, #1
	ldr r4, [sp, #0xc]
	eors r4, r0
	str r4, [sp, #0xc]
_08095F10:
	cmp r5, sb
	bne _08095F1A
	ldr r0, [sp, #0xc]
	cmp r7, r0
	beq _08095F24
_08095F1A:
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xcb
	bl func_08008B6C
_08095F24:
	ldr r1, [sp, #0xc]
	lsls r0, r1, #2
	mov r2, sb
	adds r7, r0, r2
	ldr r0, _08095F80 @ =0x08117838
	adds r1, r7, #1
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r2, [r1]
	movs r3, #0xd8
	lsls r3, r3, #2
	adds r0, r6, r3
	strh r2, [r0]
	ldrb r1, [r1, #1]
	ldr r4, _08095F84 @ =0x00000362
	adds r0, r6, r4
	strh r1, [r0]
	ldr r0, [sp, #0x14]
	cmp r0, r7
	beq _08095FB6
	str r7, [sp, #0x14]
	movs r1, #0xcc
	lsls r1, r1, #2
	adds r0, r6, r1
	ldrh r0, [r0]
	asrs r0, r7
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08095FAC
	cmp r7, #7
	beq _08095F8C
	movs r0, #0xb
	adds r4, r7, #0
	muls r4, r0, r4
	ldr r0, _08095F88 @ =0x08101064
	adds r4, r4, r0
	adds r5, r6, #0
	adds r5, #0x80
	adds r0, r5, #0
	movs r1, #4
	bl func_08050E98
	adds r0, r5, #0
	adds r1, r4, #0
	b _08095F9E
	.align 2, 0
_08095F80: .4byte 0x08117838
_08095F84: .4byte 0x00000362
_08095F88: .4byte 0x08101064
_08095F8C:
	ldr r5, _08095FA8 @ =0x08100DE4
	adds r4, r6, #0
	adds r4, #0x80
	adds r0, r4, #0
	movs r1, #4
	bl func_08050E98
	adds r0, r4, #0
	adds r1, r5, #0
_08095F9E:
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	b _08095FB6
	.align 2, 0
_08095FA8: .4byte 0x08100DE4
_08095FAC:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08095FFC @ =0x08100AC0
	bl func_08050D8C
_08095FB6:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08096016
	movs r2, #0xcc
	lsls r2, r2, #2
	adds r0, r6, r2
	ldrh r0, [r0]
	asrs r0, r7
	movs r4, #1
	ands r0, r4
	cmp r0, #0
	beq _08096078
	cmp r7, #7
	beq _0809600C
	ldr r0, _08096000 @ =0x0000035A
	adds r3, r6, r0
	ldrh r2, [r3]
	lsls r1, r2, #0x14
	lsrs r1, r1, #0x14
	adds r0, r4, #0
	lsls r0, r7
	eors r1, r0
	ldr r4, _08096004 @ =0x00000FFF
	adds r0, r4, #0
	ands r1, r0
	ldr r0, _08096008 @ =0xFFFFF000
	ands r0, r2
	orrs r0, r1
	strh r0, [r3]
	b _08096066
	.align 2, 0
_08095FFC: .4byte 0x08100AC0
_08096000: .4byte 0x0000035A
_08096004: .4byte 0x00000FFF
_08096008: .4byte 0xFFFFF000
_0809600C:
	movs r0, #1
	str r0, [sp, #0x10]
	movs r1, #2
	mov sl, r1
	b _08096066
_08096016:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080960A8
	ldr r2, _08096054 @ =0x0000035A
	adds r4, r6, r2
	ldrh r3, [r4]
	ldr r5, _08096058 @ =0x00000FFF
	adds r0, r5, #0
	ands r0, r3
	cmp r0, #0
	beq _08096084
	cmp r7, #7
	beq _08096078
	lsls r0, r3, #0x14
	lsrs r1, r0, #0x14
	movs r2, #1
	lsls r2, r7
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _08096060
	bics r1, r2
	ands r1, r5
	ldr r0, _0809605C @ =0xFFFFF000
	ands r0, r3
	orrs r0, r1
	b _08096064
	.align 2, 0
_08096054: .4byte 0x0000035A
_08096058: .4byte 0x00000FFF
_0809605C: .4byte 0xFFFFF000
_08096060:
	ldr r0, _08096074 @ =0xFFFFF000
	ands r0, r3
_08096064:
	strh r0, [r4]
_08096066:
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xc5
	bl func_08008B6C
	b _08096278
	.align 2, 0
_08096074: .4byte 0xFFFFF000
_08096078:
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xc7
	bl func_08008B6C
	b _08096278
_08096084:
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xc6
	bl func_08008B6C
	movs r3, #2
	str r3, [sp, #8]
	movs r4, #5
	mov sl, r4
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _080960A4 @ =0x08100AC0
	bl func_08050D8C
	b _08096278
	.align 2, 0
_080960A4: .4byte 0x08100AC0
_080960A8:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	bne _080960B8
	b _08096278
_080960B8:
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xc5
	bl func_08008B6C
	movs r0, #3
	mov sl, r0
	b _08096278
_080960C8:
	mov r4, r8
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080960E6
	cmp r4, #3
	bgt _080960E2
	mov r0, r8
	adds r0, #1
	b _08096102
_080960E2:
	movs r0, #0
	b _08096102
_080960E6:
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08096106
	mov r1, r8
	cmp r1, #0
	ble _08096100
	mov r0, r8
	subs r0, #1
	b _08096102
_08096100:
	movs r0, #4
_08096102:
	mov r8, r0
	b _08096144
_08096106:
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08096126
	movs r2, #2
	add r8, r2
	mov r3, r8
	cmp r3, #4
	ble _08096144
	movs r0, #5
	rsbs r0, r0, #0
	add r8, r0
	b _08096144
_08096126:
	adds r0, r6, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08096144
	movs r1, #2
	rsbs r1, r1, #0
	add r8, r1
	mov r2, r8
	cmp r2, #0
	bge _08096144
	movs r3, #5
	add r8, r3
_08096144:
	cmp r4, r8
	beq _08096152
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xcb
	bl func_08008B6C
_08096152:
	movs r4, #0xd8
	lsls r4, r4, #2
	adds r1, r6, r4
	movs r0, #0x90
	strh r0, [r1]
	mov r1, r8
	lsls r0, r1, #4
	adds r0, #0x18
	ldr r2, _080961C4 @ =0x00000362
	adds r1, r6, r2
	strh r0, [r1]
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080961A2
	ldr r3, _080961C8 @ =0x0000035A
	adds r4, r6, r3
	ldrh r3, [r4]
	lsls r1, r3, #0x14
	lsrs r1, r1, #0x14
	mov r2, r8
	adds r2, #7
	movs r0, #1
	lsls r0, r2
	eors r1, r0
	ldr r2, _080961CC @ =0x00000FFF
	adds r0, r2, #0
	ands r1, r0
	ldr r0, _080961D0 @ =0xFFFFF000
	ands r0, r3
	orrs r0, r1
	strh r0, [r4]
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xc5
	bl func_08008B6C
_080961A2:
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08096278
	movs r3, #0
	str r3, [sp, #0x10]
	movs r4, #1
	mov sl, r4
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xc6
	bl func_08008B6C
	b _08096278
	.align 2, 0
_080961C4: .4byte 0x00000362
_080961C8: .4byte 0x0000035A
_080961CC: .4byte 0x00000FFF
_080961D0: .4byte 0xFFFFF000
_080961D4:
	ldr r5, _080961F4 @ =0x08100DF4
	adds r4, r6, #0
	adds r4, #0x80
	adds r0, r4, #0
	movs r1, #4
	bl func_08050E98
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	movs r0, #4
	mov sl, r0
	b _08096278
	.align 2, 0
_080961F4: .4byte 0x08100DF4
_080961F8:
	movs r4, #0
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08096216
	adds r0, r6, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _08096218
_08096216:
	movs r4, #1
_08096218:
	cmp r4, #0
	beq _08096278
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xc5
	bl func_08008B6C
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _0809623C @ =0x08100AC0
	bl func_08050D8C
	movs r1, #1
	str r1, [sp, #8]
	movs r2, #5
	mov sl, r2
	b _08096278
	.align 2, 0
_0809623C: .4byte 0x08100AC0
_08096240:
	ldr r0, [sp, #4]
	ldr r1, _08096264 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r3, #6
	mov sl, r3
	b _08096278
	.align 2, 0
_08096264: .4byte 0x00000889
_08096268:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08096278
	movs r4, #1
	str r4, [sp, #0x18]
_08096278:
	ldr r4, [sp, #0x10]
	adds r0, r6, #0
	adds r1, r4, #0
	bl func_08099000
	ldr r1, _080962EC @ =0x0000035A
	adds r0, r6, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x14
	lsrs r1, r1, #0x14
	adds r0, r6, #0
	movs r2, #0
	adds r3, r4, #0
	bl func_08099144
	adds r0, r6, #0
	bl func_080CD8A0
	ldr r2, [sp, #0x18]
	cmp r2, #0
	bne _080962A4
	b _08095E44
_080962A4:
	movs r3, #0xc8
	lsls r3, r3, #2
	adds r4, r6, r3
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	movs r5, #0
	str r5, [r4, #4]
	movs r0, #0xc2
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	str r5, [r4, #4]
	ldr r4, [sp, #8]
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _080962DA
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080962DA:
	adds r0, r4, #0
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080962EC: .4byte 0x0000035A

	thumb_func_start func_080962F0
func_080962F0: @ 0x080962F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xcc
	adds r7, r0, #0
	movs r0, #0
	str r0, [sp, #0xa8]
	movs r1, #0
	str r1, [sp, #0xac]
	add r0, sp, #4
	add r2, sp, #0xa8
	ldrb r2, [r2]
	strb r2, [r0]
	add r6, sp, #0x84
	add r4, sp, #0xa8
	ldrb r4, [r4]
	strb r4, [r6]
	adds r0, r7, #0
	bl func_08008724
	movs r0, #0xba
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r4, r7, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r2, #0xc2
	lsls r2, r2, #2
	adds r4, r7, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	adds r0, r7, #0
	bl func_0809964C
	adds r0, r7, #0
	bl func_08008918
	add r1, sp, #0x8c
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008918
	adds r1, r0, #0
	ldr r0, [sp, #0xa8]
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _0809640C @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xc
	bl func_08009300
	add r5, sp, #0x90
	str r4, [r5]
	ldr r1, _08096410 @ =0x00002B90
	adds r0, r7, r1
	add r2, sp, #0xa8
	ldrb r2, [r2]
	strb r2, [r0]
	adds r0, r7, #0
	bl func_08096B88
	movs r4, #0
	str r4, [sp, #0xb0]
	movs r0, #1
	str r0, [sp, #0xb4]
	movs r1, #0
	str r1, [sp, #0xb8]
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [sp, #0xbc]
	ldr r4, _08096414 @ =0x00000362
	adds r1, r7, r4
	movs r0, #0xc8
	strh r0, [r1]
	ldr r0, [r5]
	ldr r1, _08096418 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [r5]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r0, _0809641C @ =0x000033D2
	adds r1, r7, r0
	movs r0, #2
	strb r0, [r1]
	movs r1, #0
	str r1, [sp, #0xc0]
_080963EE:
	adds r0, r7, #0
	bl func_080087C8
	adds r0, r7, #0
	bl func_080088B8
	ldr r0, [sp, #0xac]
	cmp r0, #4
	bls _08096402
	b _08096B14
_08096402:
	lsls r0, r0, #2
	ldr r1, _08096420 @ =_08096424
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809640C: .4byte vtable_unk_080E5B80
_08096410: .4byte 0x00002B90
_08096414: .4byte 0x00000362
_08096418: .4byte 0x00000889
_0809641C: .4byte 0x000033D2
_08096420: .4byte _08096424
_08096424: @ jump table
	.4byte _08096438 @ case 0
	.4byte _0809644C @ case 1
	.4byte _08096ABC @ case 2
	.4byte _08096ADC @ case 3
	.4byte _08096B04 @ case 4
_08096438:
	ldr r0, [sp, #0x90]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _08096446
	b _08096B14
_08096446:
	movs r2, #1
	str r2, [sp, #0xac]
	b _08096B14
_0809644C:
	movs r6, #0
	ldr r4, _0809648C @ =0x00002B90
	adds r5, r7, r4
_08096452:
	movs r4, #0
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	bne _08096474
	adds r0, r7, #0
	bl func_080088D4
	lsrs r0, r0, #8
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _08096476
_08096474:
	movs r4, #1
_08096476:
	cmp r4, #0
	beq _08096490
	movs r0, #0
	ldr r1, [sp, #0xb0]
	cmp r1, #3
	bgt _08096484
	movs r0, #4
_08096484:
	str r0, [sp, #0xb0]
	movs r2, #1
	str r2, [sp, #0xb4]
	b _08096544
	.align 2, 0
_0809648C: .4byte 0x00002B90
_08096490:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080964B2
	ldr r4, [sp, #0xb0]
	cmp r4, #6
	bgt _080964AA
	adds r0, r4, #0
	adds r0, #1
	b _080964AC
_080964AA:
	movs r0, #0
_080964AC:
	str r0, [sp, #0xb0]
	str r0, [sp, #0xb8]
	b _08096544
_080964B2:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080964CE
	ldr r0, [sp, #0xb0]
	cmp r0, #0
	ble _080964CA
	subs r0, #1
	b _080964AC
_080964CA:
	movs r0, #7
	b _080964AC
_080964CE:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08096554
	ldr r1, [sp, #0xb4]
	adds r1, #1
	str r1, [sp, #0xb4]
	cmp r1, #2
	ble _0809651E
	movs r2, #0
	str r2, [sp, #0xb4]
	ldr r4, [sp, #0xb0]
	cmp r4, #3
	ble _08096544
	ldr r0, _08096500 @ =0x00002B90
	adds r1, r7, r0
	ldrb r0, [r1]
	cmp r0, #7
	bhi _08096504
	adds r0, #1
	strb r0, [r1]
	b _08096506
	.align 2, 0
_08096500: .4byte 0x00002B90
_08096504:
	movs r0, #0
_08096506:
	strb r0, [r5]
	adds r0, r7, #0
	bl func_08096B88
	ldrb r0, [r5]
	cmp r0, #0
	bne _08096544
	ldr r1, [sp, #0xb0]
	str r1, [sp, #0xb8]
	movs r2, #4
	str r2, [sp, #0xb0]
	b _08096544
_0809651E:
	ldrb r0, [r5]
	cmp r0, #0
	bne _08096544
	ldr r4, [sp, #0xb4]
	cmp r4, #1
	bne _08096544
	ldr r1, _08096550 @ =0x00002BA0
	adds r0, r7, r1
	ldr r1, [r0]
	ldr r2, [sp, #0xb8]
	str r2, [sp, #0xb0]
	cmp r1, #3
	bgt _08096544
	adds r0, r2, #0
	subs r0, #4
	cmp r1, r0
	bgt _08096544
	adds r1, #3
	str r1, [sp, #0xb0]
_08096544:
	adds r0, r7, #0
	adds r0, #0x94
	movs r1, #0xcb
	bl func_08008B6C
	b _080965E4
	.align 2, 0
_08096550: .4byte 0x00002BA0
_08096554:
	adds r0, r7, #0
	bl func_080088D4
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080965E4
	ldr r4, [sp, #0xb4]
	subs r4, #1
	str r4, [sp, #0xb4]
	cmp r4, #0
	bge _080965C2
	movs r0, #2
	str r0, [sp, #0xb4]
	ldr r1, [sp, #0xb0]
	cmp r1, #3
	ble _080965DA
	ldr r2, _08096588 @ =0x00002B90
	adds r1, r7, r2
	ldrb r0, [r1]
	cmp r0, #0
	beq _0809658C
	subs r0, #1
	strb r0, [r1]
	b _0809658E
	.align 2, 0
_08096588: .4byte 0x00002B90
_0809658C:
	movs r0, #8
_0809658E:
	strb r0, [r5]
	adds r0, r7, #0
	bl func_08096B88
	ldrb r0, [r5]
	cmp r0, #0
	bne _080965BC
	ldr r4, _080965B8 @ =0x00002BA0
	adds r0, r7, r4
	ldr r1, [r0]
	ldr r0, [sp, #0xb8]
	str r0, [sp, #0xb0]
	cmp r1, #3
	bgt _080965DA
	subs r0, #4
	cmp r1, r0
	bgt _080965DA
	adds r1, #3
	str r1, [sp, #0xb0]
	b _080965DA
	.align 2, 0
_080965B8: .4byte 0x00002BA0
_080965BC:
	ldr r1, [sp, #0xb8]
	str r1, [sp, #0xb0]
	b _080965DA
_080965C2:
	ldr r2, [sp, #0xb0]
	cmp r2, #3
	ble _080965DA
	ldrb r0, [r5]
	cmp r0, #0
	bne _080965DA
	ldr r4, [sp, #0xb4]
	cmp r4, #0
	bne _080965DA
	str r2, [sp, #0xb8]
	movs r0, #4
	str r0, [sp, #0xb0]
_080965DA:
	adds r0, r7, #0
	adds r0, #0x94
	movs r1, #0xcb
	bl func_08008B6C
_080965E4:
	ldr r1, _08096620 @ =0x00002BA4
	adds r0, r7, r1
	ldr r2, [sp, #0xb4]
	adds r0, r0, r2
	ldrb r1, [r0]
	movs r0, #7
	ldr r4, [sp, #0xb0]
	subs r0, r0, r4
	asrs r1, r0
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _08096600
	movs r6, #1
_08096600:
	cmp r6, #0
	bne _08096606
	b _08096452
_08096606:
	ldr r0, [sp, #0xb4]
	cmp r0, #0
	beq _08096624
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #2
	movs r0, #3
	ldr r2, [sp, #0xb0]
	ands r0, r2
	adds r1, r1, r0
	adds r6, r1, #1
	b _08096626
	.align 2, 0
_08096620: .4byte 0x00002BA4
_08096624:
	movs r6, #0
_08096626:
	movs r0, #4
	ldr r4, [sp, #0xb0]
	ands r0, r4
	asrs r0, r0, #2
	lsls r1, r0, #4
	subs r1, r1, r0
	ldr r2, _08096694 @ =0x08117838
	lsls r3, r6, #2
	adds r2, r3, r2
	lsls r1, r1, #3
	ldrb r0, [r2]
	adds r1, r1, r0
	movs r4, #0xd8
	lsls r4, r4, #2
	adds r0, r7, r4
	strh r1, [r0]
	ldrb r1, [r2, #1]
	ldr r2, _08096698 @ =0x00000362
	adds r0, r7, r2
	strh r1, [r0]
	ldr r4, _0809669C @ =0x00002B90
	adds r5, r7, r4
	ldrb r1, [r5]
	lsls r1, r1, #3
	ldr r2, [sp, #0xb4]
	lsls r0, r2, #1
	adds r0, r0, r2
	adds r1, r1, r0
	ldr r4, [sp, #0xb0]
	adds r1, r1, r4
	ldr r0, [sp, #0xbc]
	cmp r0, r1
	bne _0809666A
	b _080967D0
_0809666A:
	str r1, [sp, #0xbc]
	cmp r2, #0
	bne _08096672
	b _080967C6
_08096672:
	add r4, sp, #0x94
	adds r0, r4, #0
	str r3, [sp, #0xc8]
	bl __12RucksackItem
	mov r8, r4
	ldr r3, [sp, #0xc8]
	ldr r1, [sp, #0xb0]
	cmp r1, #3
	ble _080966A0
	ldrb r2, [r5]
	subs r3, r6, #1
	adds r0, r7, #0
	mov r1, r8
	bl func_08096EE8
	b _080966AC
	.align 2, 0
_08096694: .4byte 0x08117838
_08096698: .4byte 0x00000362
_0809669C: .4byte 0x00002B90
_080966A0:
	adds r0, r3, r7
	ldr r2, _08096704 @ =0x00002BAC
	adds r0, r0, r2
	ldr r0, [r0]
	mov r4, r8
	str r0, [r4]
_080966AC:
	mov r0, r8
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0
	bne _080967A6
	mov r0, r8
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08096772
	ldr r5, _08096708 @ =0x08100E28
	adds r0, r5, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #7
	bls _080966D6
	movs r4, #7
_080966D6:
	add r0, sp, #0x84
	adds r1, r5, #0
	adds r2, r4, #0
	bl memcpy
	mov r0, sp
	adds r0, r0, r4
	adds r0, #0x84
	strb r6, [r0]
	mov r0, r8
	bl GetKind__C12RucksackItem
	cmp r0, #0
	bne _0809670C
	add r4, sp, #0x98
	adds r0, r4, #0
	mov r1, r8
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetName__C4Food
	b _0809671C
	.align 2, 0
_08096704: .4byte 0x00002BAC
_08096708: .4byte 0x08100E28
_0809670C:
	mov r0, r8
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0xa0
	strb r1, [r0]
	bl GetName__C7Article
_0809671C:
	adds r5, r0, #0
	bl strlen
	adds r4, r0, #0
	cmp r4, #0x7f
	bls _0809672A
	movs r4, #0x7f
_0809672A:
	add r0, sp, #4
	adds r1, r5, #0
	adds r2, r4, #0
	bl memcpy
	mov r0, sp
	adds r0, r0, r4
	adds r0, #4
	strb r6, [r0]
	add r0, sp, #0x84
	bl strlen
	mov r6, sp
	adds r6, r6, r0
	adds r6, #0x84
	movs r1, #7
	subs r5, r1, r0
	cmp r5, #0
	beq _0809676E
	add r0, sp, #4
	bl strlen
	adds r4, r0, #0
	cmp r4, r5
	bls _0809675E
	adds r4, r5, #0
_0809675E:
	adds r0, r6, #0
	add r1, sp, #4
	adds r2, r4, #0
	bl memcpy
	adds r1, r6, r4
	movs r0, #0
	strb r0, [r1]
_0809676E:
	add r5, sp, #4
	b _080967A8
_08096772:
	mov r0, r8
	bl GetKind__C12RucksackItem
	cmp r0, #0
	bne _08096790
	add r4, sp, #0x98
	adds r0, r4, #0
	mov r1, r8
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetDesc__C4Food
	adds r5, r0, #0
	b _080967A8
_08096790:
	mov r0, r8
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xa1
	strb r1, [r0]
	bl GetDesc__C7Article
	adds r5, r0, #0
	b _080967A8
_080967A6:
	movs r5, #0
_080967A8:
	cmp r5, #0
	beq _080967C6
	adds r4, r7, #0
	adds r4, #0x80
	adds r0, r4, #0
	movs r1, #4
	bl func_08050E98
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
	b _080967D0
_080967C6:
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _08096838 @ =0x08100AC0
	bl func_08050D8C
_080967D0:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080967E0
	b _08096980
_080967E0:
	ldr r0, [sp, #0xb4]
	cmp r0, #0
	bne _080967E8
	b _08096974
_080967E8:
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #2
	movs r0, #3
	ldr r2, [sp, #0xb0]
	ands r0, r2
	adds r6, r1, r0
	cmp r2, #3
	bgt _080967FC
	b _0809693E
_080967FC:
	add r5, sp, #0x94
	adds r0, r5, #0
	bl __12RucksackItem
	ldr r0, _0809683C @ =0x00002B90
	adds r4, r7, r0
	ldrb r2, [r4]
	adds r0, r7, #0
	adds r1, r5, #0
	adds r3, r6, #0
	bl func_08096EE8
	ldr r1, _08096840 @ =0x00002BA7
	adds r0, r7, r1
	ldrb r4, [r4]
	adds r0, r0, r4
	ldrb r1, [r0]
	asrs r1, r6
	movs r0, #1
	ands r1, r0
	mov r8, r5
	cmp r1, #0
	beq _0809682C
	b _08096930
_0809682C:
	movs r6, #0
	movs r2, #0x94
	adds r2, r2, r7
	mov sb, r2
	b _08096846
	.align 2, 0
_08096838: .4byte 0x08100AC0
_0809683C: .4byte 0x00002B90
_08096840: .4byte 0x00002BA7
_08096844:
	adds r6, #1
_08096846:
	cmp r6, #7
	bgt _0809692C
	lsls r4, r6, #2
	ldr r1, _080968BC @ =0x00002BB0
	adds r0, r4, r1
	adds r0, r7, r0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	mov sl, r4
	cmp r0, #0
	beq _08096844
	mov r5, r8
	adds r0, r5, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08096928
	adds r0, r5, #0
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08096924
	adds r0, r5, #0
	bl GetKind__C12RucksackItem
	cmp r0, #0
	bne _080968C4
	add r4, sp, #0x9c
	adds r0, r4, #0
	adds r1, r5, #0
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetIconId__C4Food
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	mov r2, sl
	adds r0, r2, r7
	ldr r4, _080968BC @ =0x00002BB0
	adds r0, r0, r4
	ldr r1, [r5]
	str r1, [r0]
	ldr r0, [r7, #0x78]
	ldr r2, _080968C0 @ =0x086678A0
	movs r1, #1
	str r1, [sp]
	adds r1, r6, #0
	bl func_080CB304
	adds r0, r7, #0
	adds r1, r5, #0
	bl func_08096FB4
	b _08096A80
	.align 2, 0
_080968BC: .4byte 0x00002BB0
_080968C0: .4byte 0x086678A0
_080968C4:
	mov r0, r8
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xa2
	strb r1, [r0]
	bl CanBeDiscarded__C7Article
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08096920
	mov r0, r8
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xa3
	strb r1, [r0]
	bl GetIconId__C7Article
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r0, r4, r7
	ldr r1, _08096918 @ =0x00002BB0
	adds r0, r0, r1
	mov r2, r8
	ldr r1, [r2]
	str r1, [r0]
	ldr r0, [r7, #0x78]
	ldr r2, _0809691C @ =0x086678A0
	movs r1, #1
	str r1, [sp]
	adds r1, r6, #0
	bl func_080CB304
	adds r0, r7, #0
	mov r1, r8
	bl func_08096FB4
	b _08096A80
	.align 2, 0
_08096918: .4byte 0x00002BB0
_0809691C: .4byte 0x086678A0
_08096920:
	mov r0, sb
	b _08096978
_08096924:
	mov r0, sb
	b _08096978
_08096928:
	mov r0, sb
	b _08096978
_0809692C:
	mov r0, sb
	b _08096978
_08096930:
	adds r0, r7, #0
	adds r1, r5, #0
	bl func_08097114
	adds r0, r7, #0
	adds r0, #0x94
	b _08096A82
_0809693E:
	lsls r0, r6, #2
	ldr r4, _0809696C @ =0x00002BB0
	adds r0, r0, r4
	adds r4, r7, r0
	adds r0, r4, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08096974
	adds r0, r7, #0
	adds r1, r4, #0
	bl func_08097114
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _08096970 @ =0x08100AC0
	bl func_08050D8C
	adds r0, r7, #0
	adds r0, #0x94
	b _08096A82
	.align 2, 0
_0809696C: .4byte 0x00002BB0
_08096970: .4byte 0x08100AC0
_08096974:
	adds r0, r7, #0
	adds r0, #0x94
_08096978:
	movs r1, #0xc7
	bl func_08008B6C
	b _08096B14
_08096980:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080969B0
	movs r0, #2
	str r0, [sp, #0xa8]
	movs r1, #3
	str r1, [sp, #0xac]
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, _080969AC @ =0x08100AC0
	bl func_08050D8C
	adds r0, r7, #0
	adds r0, #0x94
	movs r1, #0xc6
	bl func_08008B6C
	b _08096B14
	.align 2, 0
_080969AC: .4byte 0x08100AC0
_080969B0:
	adds r0, r7, #0
	bl func_080088CC
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	bne _080969C0
	b _08096B14
_080969C0:
	movs r5, #0
	movs r2, #0xd7
	lsls r2, r2, #2
	adds r0, r7, r2
	strb r5, [r0]
	movs r4, #0x94
	adds r4, r4, r7
	mov sb, r4
	adds r0, r2, #0
	adds r0, r0, r7
	mov r8, r0
	ldr r1, _08096A10 @ =0x00002BB0
	adds r4, r7, r1
	mov sl, r5
	add r6, sp, #0x94
	movs r2, #7
	str r2, [sp, #0xc4]
_080969E2:
	adds r0, r4, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08096A44
	adds r0, r4, #0
	bl GetKind__C12RucksackItem
	cmp r0, #0
	bne _08096A18
	adds r0, r6, #0
	adds r1, r4, #0
	bl GetFood__C12RucksackItem
	adds r0, r6, #0
	bl GetId__C4Food
	ldr r2, _08096A14 @ =0x0000034A
	adds r1, r7, r2
	add r1, sl
	adds r0, #1
	b _08096A30
	.align 2, 0
_08096A10: .4byte 0x00002BB0
_08096A14: .4byte 0x0000034A
_08096A18:
	adds r0, r4, #0
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0xa4
	strb r1, [r0]
	bl GetId__C7Article
	ldr r2, _08096A8C @ =0x0000034A
	adds r1, r7, r2
	add r1, sl
	adds r0, #0xac
_08096A30:
	strh r0, [r1]
	movs r0, #1
	lsls r0, r5
	mov r2, r8
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	movs r0, #2
	add sl, r0
	adds r5, #1
_08096A44:
	adds r4, #4
	ldr r1, [sp, #0xc4]
	subs r1, #1
	str r1, [sp, #0xc4]
	cmp r1, #0
	bge _080969E2
	cmp r5, #0
	beq _08096A94
	adds r2, r7, #0
	adds r2, #0x80
	ldr r1, _08096A90 @ =0x08100AC0
	cmp r5, #7
	bgt _08096A72
	movs r3, #0
	lsls r0, r5, #1
	ldr r4, _08096A8C @ =0x0000034A
	adds r0, r0, r4
	adds r0, r0, r7
_08096A68:
	strh r3, [r0]
	adds r0, #2
	adds r5, #1
	cmp r5, #7
	ble _08096A68
_08096A72:
	adds r0, r2, #0
	bl func_08050D8C
	movs r0, #1
	str r0, [sp, #0xa8]
	movs r1, #3
	str r1, [sp, #0xac]
_08096A80:
	mov r0, sb
_08096A82:
	movs r1, #0xc5
	bl func_08008B6C
	b _08096B14
	.align 2, 0
_08096A8C: .4byte 0x0000034A
_08096A90: .4byte 0x08100AC0
_08096A94:
	ldr r2, _08096AB4 @ =0x000033D4
	adds r1, r7, r2
	movs r2, #0
	movs r0, #0xa
	strh r0, [r1]
	ldr r4, _08096AB8 @ =0x000033D2
	adds r0, r7, r4
	strb r2, [r0]
	mov r0, sb
	movs r1, #0xc7
	bl func_08008B6C
	movs r0, #2
	str r0, [sp, #0xac]
	b _08096B14
	.align 2, 0
_08096AB4: .4byte 0x000033D4
_08096AB8: .4byte 0x000033D2
_08096ABC:
	ldr r1, _08096AD8 @ =0x000033D2
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	bne _08096B14
	movs r2, #1
	rsbs r2, r2, #0
	str r2, [sp, #0xbc]
	movs r4, #1
	str r4, [sp, #0xac]
	b _08096B14
	.align 2, 0
_08096AD8: .4byte 0x000033D2
_08096ADC:
	ldr r0, [sp, #0x90]
	ldr r1, _08096B00 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r7, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #0x90]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r0, #4
	str r0, [sp, #0xac]
	b _08096B14
	.align 2, 0
_08096B00: .4byte 0x00000889
_08096B04:
	ldr r0, [sp, #0x90]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08096B14
	movs r1, #1
	str r1, [sp, #0xc0]
_08096B14:
	adds r0, r7, #0
	bl func_08099ACC
	adds r0, r7, #0
	bl func_080CD8A0
	adds r0, r7, #0
	bl func_08097D38
	ldr r2, [sp, #0xc0]
	cmp r2, #0
	bne _08096B2E
	b _080963EE
_08096B2E:
	movs r0, #0xba
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	movs r5, #0
	str r5, [r4, #4]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r4, r7, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	str r5, [r4, #4]
	movs r2, #0xc2
	lsls r2, r2, #2
	adds r4, r7, r2
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	str r5, [r4, #4]
	ldr r4, [sp, #0xa8]
	ldr r1, [sp, #0x90]
	cmp r1, #0
	beq _08096B74
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08096B74:
	adds r0, r4, #0
	add sp, #0xcc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08096B88
func_08096B88: @ 0x08096B88
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	adds r5, r0, #0
	movs r0, #8
	mov r8, r0
	add r0, sp, #4
	bl __12RucksackItem
	ldr r1, _08096BF0 @ =0x00002B90
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08096BB2
	ldr r2, _08096BF4 @ =0x00002BA0
	adds r0, r5, r2
	ldr r0, [r0]
	mov r8, r0
_08096BB2:
	movs r6, #0
	add r3, sp, #0xc
	mov sl, r3
	cmp r6, r8
	bge _08096C4A
_08096BBC:
	ldr r4, _08096BF0 @ =0x00002B90
	adds r0, r5, r4
	ldrb r2, [r0]
	adds r0, r5, #0
	add r1, sp, #4
	adds r3, r6, #0
	bl func_08096EE8
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	add r0, sp, #4
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08096C3C
	add r0, sp, #4
	bl IsWrapped__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08096BF8
	movs r3, #0xb0
	lsls r3, r3, #1
	b _08096C28
	.align 2, 0
_08096BF0: .4byte 0x00002B90
_08096BF4: .4byte 0x00002BA0
_08096BF8:
	add r0, sp, #4
	bl GetKind__C12RucksackItem
	cmp r0, #0
	bne _08096C14
	add r4, sp, #8
	adds r0, r4, #0
	add r1, sp, #4
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetIconId__C4Food
	b _08096C24
_08096C14:
	add r0, sp, #4
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0x1c
	strb r1, [r0]
	bl GetIconId__C7Article
_08096C24:
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
_08096C28:
	ldr r0, [r5, #0x7c]
	str r7, [sp]
	adds r1, r6, #0
	ldr r2, _08096C38 @ =0x086678A0
	bl func_080CC728
	b _08096C44
	.align 2, 0
_08096C38: .4byte 0x086678A0
_08096C3C:
	ldr r0, [r5, #0x7c]
	adds r1, r6, #0
	bl func_080CCDEC
_08096C44:
	adds r6, #1
	cmp r6, r8
	blt _08096BBC
_08096C4A:
	mov r6, r8
	cmp r6, #7
	bgt _08096C60
	mov r4, r8
_08096C52:
	ldr r0, [r5, #0x7c]
	adds r1, r4, #0
	bl func_080CCDEC
	adds r4, #1
	cmp r4, #7
	ble _08096C52
_08096C60:
	ldr r7, _08096C74 @ =0x00002B90
	adds r0, r5, r7
	ldrb r0, [r0]
	cmp r0, #0
	bne _08096C7C
	ldr r1, _08096C78 @ =0x00002BA0
	adds r0, r5, r1
	ldrh r0, [r0]
	b _08096C7E
	.align 2, 0
_08096C74: .4byte 0x00002B90
_08096C78: .4byte 0x00002BA0
_08096C7C:
	movs r0, #8
_08096C7E:
	adds r4, r0, #0
	ldr r2, _08096D70 @ =0x00002B90
	adds r0, r5, r2
	ldrb r0, [r0]
	movs r1, #3
	cmp r0, #0
	bne _08096C8E
	ldr r1, _08096D74 @ =0x0000101C
_08096C8E:
	mov r8, r1
	movs r3, #0
	cmp r3, r4
	bge _08096CD6
	ldr r6, _08096D78 @ =0x0811785C
	mov sb, r6
	ldr r6, _08096D74 @ =0x0000101C
	ldr r7, _08096D7C @ =0x00002BD0
_08096C9E:
	adds r3, #1
	lsls r0, r3, #2
	add r0, sb
	ldrb r1, [r0]
	adds r1, #0xf
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r0, #1]
	adds r0, r1, #1
	lsls r0, r0, #1
	lsls r2, r2, #6
	adds r0, r0, r7
	adds r0, r2, r0
	adds r0, r0, r5
	lsls r1, r1, #1
	adds r1, r1, r7
	adds r2, r2, r1
	adds r2, r2, r5
	movs r1, #1
_08096CC4:
	strh r6, [r2]
	strh r6, [r0]
	adds r0, #0x40
	adds r2, #0x40
	subs r1, #1
	cmp r1, #0
	bge _08096CC4
	cmp r3, r4
	blt _08096C9E
_08096CD6:
	cmp r4, #7
	bhi _08096D1E
	adds r3, r4, #0
	cmp r3, #7
	bgt _08096D1E
	ldr r7, _08096D78 @ =0x0811785C
	movs r4, #3
	ldr r6, _08096D7C @ =0x00002BD0
_08096CE6:
	adds r3, #1
	lsls r0, r3, #2
	adds r0, r0, r7
	ldrb r1, [r0]
	adds r1, #0xf
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r0, #1]
	adds r0, r1, #1
	lsls r0, r0, #1
	lsls r2, r2, #6
	adds r0, r0, r6
	adds r0, r2, r0
	adds r0, r0, r5
	lsls r1, r1, #1
	adds r1, r1, r6
	adds r2, r2, r1
	adds r2, r2, r5
	movs r1, #1
_08096D0C:
	strh r4, [r2]
	strh r4, [r0]
	adds r0, #0x40
	adds r2, #0x40
	subs r1, #1
	cmp r1, #0
	bge _08096D0C
	cmp r3, #7
	ble _08096CE6
_08096D1E:
	movs r1, #0
	ldr r7, _08096D80 @ =0x00002C32
	adds r0, r5, r7
_08096D24:
	mov r2, r8
	strh r2, [r0]
	strh r2, [r0, #2]
	adds r0, #0x40
	adds r1, #1
	cmp r1, #1
	ble _08096D24
	adds r0, r5, #0
	bl func_08008910
	str r0, [sp, #0x28]
	ldr r3, _08096D7C @ =0x00002BD0
	adds r1, r5, r3
	add r0, sp, #0xc
	ldr r2, _08096D84 @ =0x0600F800
	movs r3, #0xc0
	lsls r3, r3, #2
	bl func_08008F0C
	mov sb, sl
	ldr r4, [sp, #0x28]
	ldr r1, [r4, #4]
	ldr r0, [r4, #0xc]
	cmp r1, r0
	beq _08096D88
	cmp r1, #0
	beq _08096D66
	adds r0, r1, #0
	mov r1, sb
	ldm r1!, {r2, r6, r7}
	stm r0!, {r2, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08096D66:
	ldr r3, [sp, #0x28]
	ldr r0, [r3, #4]
	adds r0, #0x10
	str r0, [r3, #4]
	b _08096E5C
	.align 2, 0
_08096D70: .4byte 0x00002B90
_08096D74: .4byte 0x0000101C
_08096D78: .4byte 0x0811785C
_08096D7C: .4byte 0x00002BD0
_08096D80: .4byte 0x00002C32
_08096D84: .4byte 0x0600F800
_08096D88:
	str r1, [sp, #0x2c]
	movs r0, #1
	str r0, [sp, #0x24]
	ldr r4, [sp, #0x28]
	ldr r1, [r4]
	ldr r6, [sp, #0x2c]
	subs r0, r6, r1
	asrs r4, r0, #4
	str r4, [sp, #0x20]
	add r2, sp, #0x24
	add r0, sp, #0x20
	cmp r4, #1
	bhs _08096DA4
	adds r0, r2, #0
_08096DA4:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08096DC6
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sl, r4
	cmp r0, #0
	bne _08096DC0
	mov r0, sl
	bl func_080D3BC0
_08096DC0:
	ldr r7, [sp, #0x28]
	ldr r1, [r7]
	b _08096DCA
_08096DC6:
	movs r0, #0
	mov sl, r0
_08096DCA:
	adds r4, r0, #0
	mov r8, r4
	adds r2, r1, #0
	mov r3, r8
	b _08096DE8
_08096DD4:
	cmp r3, #0
	beq _08096DE4
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r6, r7}
	stm r0!, {r4, r6, r7}
	ldr r1, [r1]
	str r1, [r0]
_08096DE4:
	adds r2, #0x10
	adds r3, #0x10
_08096DE8:
	ldr r0, [sp, #0x2c]
	cmp r2, r0
	bne _08096DD4
	adds r4, r3, #0
	ldr r0, [sp, #0x24]
	cmp r0, #1
	bne _08096E0A
	cmp r4, #0
	beq _08096E06
	adds r0, r4, #0
	mov r1, sb
	ldm r1!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldr r1, [r1]
	str r1, [r0]
_08096E06:
	adds r4, #0x10
	b _08096E32
_08096E0A:
	mov ip, r0
	adds r2, r4, #0
	cmp r0, #0
	beq _08096E30
_08096E12:
	cmp r2, #0
	beq _08096E22
	adds r0, r2, #0
	mov r1, sb
	ldm r1!, {r3, r4, r7}
	stm r0!, {r3, r4, r7}
	ldr r1, [r1]
	str r1, [r0]
_08096E22:
	movs r6, #1
	rsbs r6, r6, #0
	add ip, r6
	adds r2, #0x10
	mov r7, ip
	cmp r7, #0
	bne _08096E12
_08096E30:
	adds r4, r2, #0
_08096E32:
	ldr r0, [sp, #0x28]
	ldr r2, [r0, #4]
	ldr r1, [r0]
	adds r0, r1, #0
	cmp r1, r2
	beq _08096E44
_08096E3E:
	adds r0, #0x10
	cmp r0, r2
	bne _08096E3E
_08096E44:
	cmp r1, #0
	beq _08096E4E
	adds r0, r1, #0
	bl free
_08096E4E:
	mov r0, sl
	add r0, r8
	mov r1, r8
	ldr r2, [sp, #0x28]
	str r1, [r2]
	str r4, [r2, #4]
	str r0, [r2, #0xc]
_08096E5C:
	ldr r4, _08096EAC @ =0x00002B90
	adds r3, r5, r4
	ldrb r1, [r3]
	ldr r6, _08096EB0 @ =0x00000369
	adds r0, r5, r6
	movs r2, #0
	strb r1, [r0]
	ldr r7, _08096EB4 @ =0x0000036A
	adds r1, r5, r7
	movs r0, #0xd
	strb r0, [r1]
	ldr r1, _08096EB8 @ =0x0000036B
	adds r0, r5, r1
	movs r6, #8
	strb r6, [r0]
	ldr r7, _08096EBC @ =0x00002BA4
	adds r4, r5, r7
	strb r2, [r4]
	ldr r0, _08096EC0 @ =0x00002BA5
	adds r2, r5, r0
	movs r0, #0xff
	strb r0, [r2]
	adds r7, #2
	adds r1, r5, r7
	movs r0, #1
	rsbs r0, r0, #0
	strb r0, [r1]
	ldrb r0, [r3]
	cmp r0, #0
	bne _08096ED4
	strb r6, [r4]
	ldr r1, _08096EC4 @ =0x00002BA0
	adds r0, r5, r1
	ldr r0, [r0]
	cmp r0, #2
	beq _08096EC8
	cmp r0, #4
	beq _08096ECC
	b _08096ED4
	.align 2, 0
_08096EAC: .4byte 0x00002B90
_08096EB0: .4byte 0x00000369
_08096EB4: .4byte 0x0000036A
_08096EB8: .4byte 0x0000036B
_08096EBC: .4byte 0x00002BA4
_08096EC0: .4byte 0x00002BA5
_08096EC4: .4byte 0x00002BA0
_08096EC8:
	movs r0, #0xfc
	strb r0, [r2]
_08096ECC:
	ldr r2, _08096EE4 @ =0x00002BA6
	adds r1, r5, r2
	movs r0, #0xf0
	strb r0, [r1]
_08096ED4:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096EE4: .4byte 0x00002BA6

	thumb_func_start func_08096EE8
func_08096EE8: @ 0x08096EE8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r4, r0, #0
	adds r7, r1, #0
	adds r6, r2, #0
	adds r5, r3, #0
	movs r0, #0
	mov r8, r0
	cmp r6, #0
	bne _08096F36
	ldr r1, _08096F24 @ =0x00002BA0
	adds r0, r4, r1
	ldr r0, [r0]
	cmp r5, r0
	bge _08096F2C
	adds r0, r4, #0
	adds r0, #0x8c
	ldr r0, [r0]
	ldr r1, _08096F28 @ =0x00001C38
	adds r0, r0, r1
	adds r1, r5, #0
	bl func_0800FCDC
	ldr r0, [r0]
	str r0, [r7]
	movs r0, #1
	mov r8, r0
	b _08096FA4
	.align 2, 0
_08096F24: .4byte 0x00002BA0
_08096F28: .4byte 0x00001C38
_08096F2C:
	mov r0, sp
	bl __12RucksackItem
	ldr r0, [sp]
	b _08096FA2
_08096F36:
	adds r0, r4, #0
	adds r0, #0x8c
	ldr r0, [r0]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetFridge__9FarmHouse
	subs r1, r6, #1
	lsls r1, r1, #3
	adds r1, r1, r5
	bl GetFoodStackAt__6FridgeUi
	ldr r0, [r0]
	str r0, [sp]
	mov r0, sp
	bl IsEmpty__C9FoodStack
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08096F9A
	add r5, sp, #4
	add r4, sp, #8
	adds r0, r4, #0
	mov r1, sp
	bl GetFood__C9FoodStack
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #9
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0xa
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	bl __12RucksackItemG4Food
	ldr r0, [sp, #4]
	str r0, [r7]
	mov r0, sp
	bl GetAmount__C9FoodStack
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	b _08096FA4
_08096F9A:
	add r0, sp, #4
	bl __12RucksackItem
	ldr r0, [sp, #4]
_08096FA2:
	str r0, [r7]
_08096FA4:
	mov r0, r8
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08096FB4
func_08096FB4: @ 0x08096FB4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov r8, r0
	adds r5, r1, #0
	mov r0, sp
	bl __12RucksackItem
	ldr r0, _08096FEC @ =0x0000FFFF
	mov sb, r0
	adds r0, r5, #0
	bl GetKind__C12RucksackItem
	adds r6, r0, #0
	cmp r6, #0
	bne _08096FF0
	add r4, sp, #4
	adds r0, r4, #0
	adds r1, r5, #0
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetId__C4Food
	b _08097000
	.align 2, 0
_08096FEC: .4byte 0x0000FFFF
_08096FF0:
	adds r0, r5, #0
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #8
	strb r1, [r0]
	bl GetId__C7Article
_08097000:
	mov sl, r0
	movs r5, #0
	ldr r7, _08097040 @ =0x00002BA7
	add r7, r8
_08097008:
	mov r0, r8
	mov r1, sp
	movs r2, #0
	adds r3, r5, #0
	bl func_08096EE8
	mov r0, sp
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809707C
	mov r0, sp
	bl GetKind__C12RucksackItem
	cmp r0, r6
	bne _0809707C
	cmp r6, #0
	bne _08097044
	add r4, sp, #4
	adds r0, r4, #0
	mov r1, sp
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetId__C4Food
	b _08097056
	.align 2, 0
_08097040: .4byte 0x00002BA7
_08097044:
	mov r0, sp
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #9
	strb r1, [r0]
	bl GetId__C7Article
_08097056:
	cmp r0, sl
	bne _0809707C
	movs r0, #1
	lsls r0, r5
	ldrb r1, [r7]
	orrs r0, r1
	strb r0, [r7]
	mov r2, sb
	lsls r1, r2, #0x10
	asrs r0, r1, #0x10
	movs r2, #1
	rsbs r2, r2, #0
	cmp r0, r2
	bne _08097078
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	b _0809707A
_08097078:
	lsrs r0, r1, #0x10
_0809707A:
	mov sb, r0
_0809707C:
	adds r5, #1
	cmp r5, #7
	ble _08097008
	cmp r6, #0
	bne _080970FE
	movs r6, #8
_08097088:
	adds r0, r6, #0
	cmp r6, #0
	bge _08097090
	adds r0, r6, #7
_08097090:
	asrs r5, r0, #3
	lsls r0, r5, #3
	subs r7, r6, r0
	mov r0, r8
	mov r1, sp
	adds r2, r5, #0
	adds r3, r7, #0
	bl func_08096EE8
	mov r0, sp
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080970F8
	add r4, sp, #4
	adds r0, r4, #0
	mov r1, sp
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetId__C4Food
	movs r1, #0
	cmp sl, r0
	bne _080970C6
	movs r1, #1
_080970C6:
	cmp r1, #0
	beq _080970F8
	ldr r2, _080970F0 @ =0x00002BA7
	add r2, r8
	adds r2, r2, r5
	movs r0, #1
	lsls r0, r7
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	mov r0, sb
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	movs r2, #1
	rsbs r2, r2, #0
	cmp r0, r2
	bne _080970F4
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	b _080970F6
	.align 2, 0
_080970F0: .4byte 0x00002BA7
_080970F4:
	lsrs r0, r1, #0x10
_080970F6:
	mov sb, r0
_080970F8:
	adds r6, #1
	cmp r6, #0x47
	ble _08097088
_080970FE:
	mov r1, sb
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start func_08097114
func_08097114: @ 0x08097114
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov sb, r0
	adds r5, r1, #0
	mov r0, sp
	bl __12RucksackItem
	adds r0, r5, #0
	bl GetKind__C12RucksackItem
	mov r8, r0
	cmp r0, #0
	bne _08097148
	add r4, sp, #4
	adds r0, r4, #0
	adds r1, r5, #0
	bl GetFood__C12RucksackItem
	adds r0, r4, #0
	bl GetId__C4Food
	b _08097158
_08097148:
	adds r0, r5, #0
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0xc
	strb r1, [r0]
	bl GetId__C7Article
_08097158:
	mov sl, r0
	movs r4, #0
	add r6, sp, #4
	ldr r5, _0809719C @ =0x00002BA7
	add r5, sb
_08097162:
	mov r0, sb
	mov r1, sp
	movs r2, #0
	adds r3, r4, #0
	bl func_08096EE8
	mov r0, sp
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080971C0
	mov r0, sp
	bl GetKind__C12RucksackItem
	cmp r0, r8
	bne _080971C0
	mov r0, r8
	cmp r0, #0
	bne _080971A0
	adds r0, r6, #0
	mov r1, sp
	bl GetFood__C12RucksackItem
	adds r0, r6, #0
	bl GetId__C4Food
	b _080971B2
	.align 2, 0
_0809719C: .4byte 0x00002BA7
_080971A0:
	mov r0, sp
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xd
	strb r1, [r0]
	bl GetId__C7Article
_080971B2:
	cmp r0, sl
	bne _080971C0
	movs r1, #1
	lsls r1, r4
	ldrb r0, [r5]
	bics r0, r1
	strb r0, [r5]
_080971C0:
	adds r4, #1
	cmp r4, #7
	ble _08097162
	mov r1, r8
	cmp r1, #0
	bne _08097226
	movs r5, #8
	add r7, sp, #4
_080971D0:
	adds r0, r5, #0
	cmp r5, #0
	bge _080971D8
	adds r0, r5, #7
_080971D8:
	asrs r4, r0, #3
	lsls r0, r4, #3
	subs r6, r5, r0
	mov r0, sb
	mov r1, sp
	adds r2, r4, #0
	adds r3, r6, #0
	bl func_08096EE8
	mov r0, sp
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08097220
	adds r0, r7, #0
	mov r1, sp
	bl GetFood__C12RucksackItem
	adds r0, r7, #0
	bl GetId__C4Food
	movs r1, #0
	cmp sl, r0
	bne _0809720C
	movs r1, #1
_0809720C:
	cmp r1, #0
	beq _08097220
	ldr r2, _08097260 @ =0x00002BA7
	add r2, sb
	adds r2, r2, r4
	movs r1, #1
	lsls r1, r6
	ldrb r0, [r2]
	bics r0, r1
	strb r0, [r2]
_08097220:
	adds r5, #1
	cmp r5, #0x47
	ble _080971D0
_08097226:
	movs r5, #0
	ldr r4, _08097264 @ =0x00002BB0
	add r4, sb
	add r6, sp, #4
_0809722E:
	ldr r0, [r4]
	str r0, [sp]
	mov r0, sp
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08097292
	mov r0, sp
	bl GetKind__C12RucksackItem
	cmp r0, r8
	bne _08097292
	mov r0, r8
	cmp r0, #0
	bne _08097268
	adds r0, r6, #0
	mov r1, sp
	bl GetFood__C12RucksackItem
	adds r0, r6, #0
	bl GetId__C4Food
	b _0809727A
	.align 2, 0
_08097260: .4byte 0x00002BA7
_08097264: .4byte 0x00002BB0
_08097268:
	mov r0, sp
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	mov r0, sp
	adds r0, #0xe
	strb r1, [r0]
	bl GetId__C7Article
_0809727A:
	cmp r0, sl
	bne _08097292
	add r0, sp, #8
	bl __12RucksackItem
	ldr r0, [sp, #8]
	str r0, [r4]
	mov r1, sb
	ldr r0, [r1, #0x78]
	adds r1, r5, #0
	bl func_080CBA60
_08097292:
	adds r4, #4
	adds r5, #1
	cmp r5, #7
	ble _0809722E
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_080972AC
func_080972AC: @ 0x080972AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	movs r0, #0
	mov r8, r0
	movs r7, #0
	movs r1, #1
	str r1, [sp, #8]
	movs r2, #0
	mov sb, r2
	adds r0, r6, #0
	bl func_08008724
	movs r3, #0xc8
	lsls r3, r3, #2
	adds r4, r6, r3
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r1, r6, r0
	adds r0, r6, #0
	bl func_080989DC
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	mov r2, r8
	str r2, [r4]
	str r2, [r4, #4]
	ldr r0, _0809736C @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #4]
	ldr r1, _08097370 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r3, _08097374 @ =0x000033D2
	adds r1, r6, r3
	movs r0, #2
	strb r0, [r1]
	movs r0, #0
	mov sl, r0
_0809734E:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	adds r0, r7, #0
	cmp r0, #8
	bls _08097362
	b _08097584
_08097362:
	lsls r0, r0, #2
	ldr r1, _08097378 @ =_0809737C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809736C: .4byte vtable_unk_080E5B80
_08097370: .4byte 0x00000889
_08097374: .4byte 0x000033D2
_08097378: .4byte _0809737C
_0809737C: @ jump table
	.4byte _080973A0 @ case 0
	.4byte _080973CC @ case 1
	.4byte _08097414 @ case 2
	.4byte _0809743C @ case 3
	.4byte _0809745C @ case 4
	.4byte _08097500 @ case 5
	.4byte _08097526 @ case 6
	.4byte _0809754C @ case 7
	.4byte _08097574 @ case 8
_080973A0:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _080973AE
	b _08097584
_080973AE:
	ldr r2, _080973C4 @ =0x000033D4
	adds r1, r6, r2
	movs r2, #0
	movs r0, #2
	strh r0, [r1]
	ldr r3, _080973C8 @ =0x000033D2
	adds r0, r6, r3
	strb r2, [r0]
	movs r7, #1
	b _08097584
	.align 2, 0
_080973C4: .4byte 0x000033D4
_080973C8: .4byte 0x000033D2
_080973CC:
	ldr r1, _080973F0 @ =0x000033D2
	adds r0, r6, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	beq _080973DC
	b _08097584
_080973DC:
	ldr r2, _080973F4 @ =0x000033D3
	adds r0, r6, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _080973F8
	movs r7, #2
	b _08097404
	.align 2, 0
_080973F0: .4byte 0x000033D2
_080973F4: .4byte 0x000033D3
_080973F8:
	cmp r0, #0
	blt _08097404
	cmp r0, #2
	bgt _08097404
	mov r8, r0
	movs r7, #7
_08097404:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08097410 @ =0x08100AC0
	bl func_08050D8C
	b _08097584
	.align 2, 0
_08097410: .4byte 0x08100AC0
_08097414:
	ldr r0, [sp, #4]
	ldr r1, _08097438 @ =0x00000889
	adds r0, #0xc
	movs r2, #2
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #3
	b _08097584
	.align 2, 0
_08097438: .4byte 0x00000889
_0809743C:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	bge _0809744A
	b _08097584
_0809744A:
	adds r0, r6, #0
	adds r0, #0x94
	movs r1, #0xad
	bl func_08008B6C
	movs r3, #0x78
	mov sb, r3
	movs r7, #4
	b _08097584
_0809745C:
	mov r1, sb
	lsls r0, r1, #0x10
	ldr r2, _080974F8 @ =0xFFFF0000
	adds r0, r0, r2
	lsrs r3, r0, #0x10
	mov sb, r3
	cmp r0, #0
	blt _0809746E
	b _08097584
_0809746E:
	adds r0, r6, #0
	bl func_08008918
	mov r2, sp
	movs r3, #0x82
	lsls r3, r3, #5
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0]
	adds r4, r6, #0
	adds r4, #0x7c
	movs r5, #0
	ldr r1, [r6, #0x7c]
	cmp r5, r1
	beq _080974A2
	cmp r1, #0
	beq _080974A2
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080974A2:
	str r5, [r4]
	adds r4, r6, #0
	adds r4, #0x78
	movs r5, #0
	ldr r1, [r6, #0x78]
	cmp r5, r1
	beq _080974C6
	cmp r1, #0
	beq _080974C6
	movs r3, #0x84
	lsls r3, r3, #2
	adds r0, r1, r3
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080974C6:
	str r5, [r4]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r0, #0
	strh r0, [r1]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, [sp, #4]
	ldr r1, _080974FC @ =0x00000889
	adds r0, #0xc
	movs r2, #2
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #5
	b _08097584
	.align 2, 0
_080974F8: .4byte 0xFFFF0000
_080974FC: .4byte 0x00000889
_08097500:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08097584
	adds r0, r6, #0
	bl func_080975F4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #4
	mov r8, r1
	cmp r0, #3
	beq _08097522
	movs r2, #3
	mov r8, r2
_08097522:
	movs r7, #6
	b _08097584
_08097526:
	ldr r3, _08097544 @ =0x000033D2
	adds r0, r6, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	bne _08097584
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08097548 @ =0x08100AC0
	bl func_08050D8C
	movs r7, #7
	b _08097584
	.align 2, 0
_08097544: .4byte 0x000033D2
_08097548: .4byte 0x08100AC0
_0809754C:
	ldr r0, [sp, #4]
	ldr r1, _08097570 @ =0x00000889
	adds r0, #0xc
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #8
	b _08097584
	.align 2, 0
_08097570: .4byte 0x00000889
_08097574:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08097584
	movs r0, #1
	mov sl, r0
_08097584:
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _080975A4
	ldr r2, _080975F0 @ =0x0000035A
	adds r0, r6, r2
	ldrh r1, [r0]
	lsls r1, r1, #0x14
	lsrs r1, r1, #0x14
	movs r3, #0xd7
	lsls r3, r3, #2
	adds r0, r6, r3
	ldrb r2, [r0]
	adds r0, r6, #0
	movs r3, #0
	bl func_08099144
_080975A4:
	adds r0, r6, #0
	bl func_080CD8A0
	adds r0, r6, #0
	bl func_08097D38
	mov r0, sl
	cmp r0, #0
	bne _080975B8
	b _0809734E
_080975B8:
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	movs r0, #0
	str r0, [r4, #4]
	mov r4, r8
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _080975DE
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080975DE:
	adds r0, r4, #0
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080975F0: .4byte 0x0000035A

	thumb_func_start func_080975F4
func_080975F4: @ 0x080975F4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r7, r0, #0
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r7, #0
	adds r1, r4, #0
	mov r2, sp
	bl func_080977A0
	strh r0, [r4]
	adds r0, r7, #0
	adds r0, #0x8c
	ldr r0, [r0]
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	bl GetFridge__9FarmHouse
	mov sb, r0
	movs r2, #1
	rsbs r2, r2, #0
	mov sl, r2
	ldr r4, _08097670 @ =0x00002BB0
	adds r6, r7, r4
	movs r0, #7
	mov r8, r0
_08097634:
	adds r0, r6, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	adds r5, r7, #0
	adds r5, #0x8c
	cmp r0, #0
	bne _08097686
	adds r0, r7, #0
	adds r1, r6, #0
	bl func_08096FB4
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, sl
	beq _08097686
	cmp r1, #7
	bgt _08097678
	ldr r0, [r5]
	ldr r2, _08097674 @ =0x00001C38
	adds r0, r0, r2
	bl func_0800FCDC
	adds r4, r0, #0
	add r0, sp, #0x14
	bl __12RucksackItem
	ldr r0, [sp, #0x14]
	str r0, [r4]
	b _08097686
	.align 2, 0
_08097670: .4byte 0x00002BB0
_08097674: .4byte 0x00001C38
_08097678:
	subs r1, #8
	mov r0, sb
	bl GetFoodStackAt__6FridgeUi
	movs r1, #1
	bl SubtractAmount__9FoodStackUi
_08097686:
	adds r6, #4
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	mov r0, r8
	cmp r0, #0
	bge _08097634
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r1, r7, r2
	ldrh r0, [r1]
	cmp r0, #0xab
	bhi _080976F4
	add r6, sp, #0x14
	adds r1, r0, #0
	subs r1, #1
	adds r0, r6, #0
	bl __4FoodUi
	mov r0, sp
	ldrh r1, [r0, #2]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	movs r2, #4
	ldrsb r2, [r0, r2]
	adds r0, r6, #0
	bl AddBonuses__4FoodScSc
	ldr r5, [r5]
	ldr r4, _080976F0 @ =0x00001C2C
	adds r5, r5, r4
	add r4, sp, #0x18
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #3
	bl memcpy
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x19
	ldrb r0, [r0]
	lsls r0, r0, #8
	orrs r0, r1
	mov r1, sp
	adds r1, #0x1a
	ldrb r1, [r1]
	lsls r1, r1, #0x10
	orrs r1, r0
	adds r0, r5, #0
	bl func_0800F3B0
	b _0809770C
	.align 2, 0
_080976F0: .4byte 0x00001C2C
_080976F4:
	add r4, sp, #0x1c
	ldrh r1, [r1]
	subs r1, #0xac
	adds r0, r4, #0
	bl __7ArticleUi
	ldr r0, [r5]
	ldr r1, _0809773C @ =0x00001C2C
	adds r0, r0, r1
	ldrb r1, [r4]
	bl func_0800F3E8
_0809770C:
	adds r0, r7, #0
	mov r1, sp
	bl func_08097800
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	beq _0809772C
	movs r4, #0xd2
	lsls r4, r4, #2
	adds r0, r7, r4
	ldrh r1, [r0]
	ldr r4, _08097740 @ =0x000033DC
	adds r0, r7, r4
	strh r1, [r0]
_0809772C:
	cmp r2, #1
	beq _0809775C
	cmp r2, #1
	bgt _08097744
	cmp r2, #0
	beq _0809774E
	b _0809777C
	.align 2, 0
_0809773C: .4byte 0x00001C2C
_08097740: .4byte 0x000033DC
_08097744:
	cmp r2, #2
	beq _08097768
	cmp r2, #3
	beq _08097774
	b _0809777C
_0809774E:
	ldr r0, _08097758 @ =0x000033D4
	adds r1, r7, r0
	movs r0, #3
	b _0809777A
	.align 2, 0
_08097758: .4byte 0x000033D4
_0809775C:
	ldr r2, _08097764 @ =0x000033D4
	adds r1, r7, r2
	movs r0, #4
	b _0809777A
	.align 2, 0
_08097764: .4byte 0x000033D4
_08097768:
	ldr r4, _08097770 @ =0x000033D4
	adds r1, r7, r4
	movs r0, #5
	b _0809777A
	.align 2, 0
_08097770: .4byte 0x000033D4
_08097774:
	ldr r0, _08097798 @ =0x000033D4
	adds r1, r7, r0
	movs r0, #6
_0809777A:
	strh r0, [r1]
_0809777C:
	ldr r2, _0809779C @ =0x000033D2
	adds r1, r7, r2
	movs r0, #0
	strb r0, [r1]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08097798: .4byte 0x000033D4
_0809779C: .4byte 0x000033D2

	thumb_func_start func_080977A0
func_080977A0: @ 0x080977A0
	push {r4, r5, r6, lr}
	sub sp, #0x14
	adds r4, r2, #0
	mov r0, sp
	bl func_0809A58C
	adds r1, r4, #0
	mov r0, sp
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldrh r0, [r4]
	cmp r0, #0
	bne _080977F4
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	movs r3, #0
	ldr r6, _080977DC @ =0x081010E8
	ldrh r5, [r4, #6]
	adds r2, r6, #2
	adds r1, r6, #0
_080977CC:
	ldrh r0, [r1]
	ands r0, r5
	cmp r0, #0
	beq _080977E0
	ldrh r0, [r2]
	strh r0, [r4]
	b _080977EA
	.align 2, 0
_080977DC: .4byte 0x081010E8
_080977E0:
	adds r2, #4
	adds r1, #4
	adds r3, #1
	cmp r3, #7
	ble _080977CC
_080977EA:
	ldrh r0, [r4]
	cmp r0, #0
	bne _080977F4
	ldrh r0, [r6, #0x22]
	strh r0, [r4]
_080977F4:
	ldrh r0, [r4]
	add sp, #0x14
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_08097800
func_08097800: @ 0x08097800
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	adds r7, r0, #0
	mov sb, r1
	ldrh r0, [r1]
	subs r0, #0x9b
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bhi _08097860
	adds r4, r7, #0
	adds r4, #0x8c
	ldr r0, [r4]
	ldr r1, _08097858 @ =0x00002214
	adds r0, r0, r1
	mov r2, sb
	ldrh r1, [r2]
	bl func_0809AA58
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08097852
	ldr r2, [r4]
	ldr r3, _0809785C @ =0x000021C3
	adds r2, r2, r3
	ldrb r3, [r2]
	lsls r1, r3, #0x19
	lsrs r1, r1, #0x1c
	adds r1, #1
	movs r0, #0xf
	ands r1, r0
	lsls r1, r1, #3
	movs r0, #0x79
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
_08097852:
	movs r0, #0
	b _08097ACC
	.align 2, 0
_08097858: .4byte 0x00002214
_0809785C: .4byte 0x000021C3
_08097860:
	movs r4, #0
	movs r6, #0xda
	lsls r6, r6, #2
	adds r0, r7, r6
	ldrb r0, [r0]
	cmp r4, r0
	bge _08097912
	movs r0, #0x8c
	adds r0, r0, r7
	mov r8, r0
	ldr r3, _080978C8 @ =0x00002214
	movs r1, #0xd2
	lsls r1, r1, #2
	adds r6, r7, r1
	movs r2, #0xcd
	lsls r2, r2, #2
	adds r5, r7, r2
_08097882:
	mov r1, r8
	ldr r0, [r1]
	adds r0, r0, r3
	adds r1, r5, #0
	adds r2, r4, #0
	str r3, [sp, #0x28]
	bl func_0809A970
	ldrh r0, [r6]
	ldr r3, [sp, #0x28]
	ldrh r2, [r5]
	cmp r0, r2
	bne _08097904
	ldr r4, _080978CC @ =0x00000347
	adds r0, r7, r4
	ldrb r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _08097912
	mov r1, r8
	ldr r0, [r1]
	adds r0, r0, r3
	adds r1, r6, #0
	bl func_0809A9C0
	mov r2, sb
	ldrh r0, [r2]
	cmp r0, #0x50
	beq _080978D8
	cmp r0, #0x50
	bgt _080978D0
	cmp r0, #0x19
	beq _080978D8
	b _080978FA
	.align 2, 0
_080978C8: .4byte 0x00002214
_080978CC: .4byte 0x00000347
_080978D0:
	cmp r0, #0x7e
	beq _080978D8
	cmp r0, #0x8d
	bne _080978FA
_080978D8:
	mov r4, r8
	ldr r3, [r4]
	ldr r6, _08097900 @ =0x000021C3
	adds r3, r3, r6
	ldrb r2, [r3]
	lsls r0, r2, #0x19
	lsrs r0, r0, #0x1c
	adds r0, #1
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #3
	movs r4, #0x79
	rsbs r4, r4, #0
	adds r1, r4, #0
	ands r2, r1
	orrs r2, r0
	strb r2, [r3]
_080978FA:
	movs r0, #1
	b _08097ACC
	.align 2, 0
_08097900: .4byte 0x000021C3
_08097904:
	adds r4, #1
	movs r1, #0xda
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r4, r0
	blt _08097882
_08097912:
	movs r2, #0
	mov ip, r2
	add r1, sp, #0x14
	movs r3, #0xcd
	lsls r3, r3, #2
	adds r0, r7, r3
	ldm r0!, {r2, r4, r6}
	stm r1!, {r2, r4, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	movs r6, #0
	mov r8, r6
	movs r0, #0x16
	add r0, sp
	mov sl, r0
	ldr r1, _0809795C @ =0x0000034A
	adds r4, r7, r1
	adds r5, r4, #0
_08097936:
	ldrh r0, [r4]
	cmp r0, #0
	beq _08097966
	movs r2, #0
	ldrh r3, [r5]
	mov r1, sl
_08097942:
	adds r0, r1, #0
	ldrh r6, [r0]
	cmp r3, r6
	beq _08097960
	adds r1, r0, #2
	adds r2, #1
	cmp r2, #7
	ble _08097942
_08097952:
	cmp r2, #8
	bne _08097966
	movs r0, #1
	mov ip, r0
	b _08097974
	.align 2, 0
_0809795C: .4byte 0x0000034A
_08097960:
	movs r0, #0
	strh r0, [r1]
	b _08097952
_08097966:
	adds r4, #2
	adds r5, #2
	movs r1, #1
	add r8, r1
	mov r2, r8
	cmp r2, #7
	ble _08097936
_08097974:
	movs r1, #0
	mov r3, sl
	ldrh r0, [r3]
	cmp r0, #0
	beq _08097984
	movs r4, #1
	mov ip, r4
	b _08097998
_08097984:
	adds r1, #1
	cmp r1, #7
	bgt _08097998
	lsls r0, r1, #1
	add r0, sl
	ldrh r0, [r0]
	cmp r0, #0
	beq _08097984
	movs r6, #1
	mov ip, r6
_08097998:
	ldr r1, _080979BC @ =0x0000035A
	adds r0, r7, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x14
	ldr r2, _080979C0 @ =0x00000346
	adds r0, r7, r2
	ldrh r0, [r0]
	lsls r0, r0, #0x14
	cmp r1, r0
	beq _080979B0
	movs r3, #1
	mov ip, r3
_080979B0:
	mov r4, ip
	cmp r4, #0
	bne _080979C4
	movs r0, #2
	b _08097ACC
	.align 2, 0
_080979BC: .4byte 0x0000035A
_080979C0: .4byte 0x00000346
_080979C4:
	movs r6, #0xcd
	lsls r6, r6, #2
	adds r1, r7, r6
	adds r0, r7, #0
	mov r2, sp
	bl func_080977A0
	mov r0, sb
	movs r2, #2
	ldrsh r1, [r0, r2]
	mov r0, sp
	movs r3, #2
	ldrsh r0, [r0, r3]
	subs r2, r1, r0
	mov r4, sb
	movs r6, #4
	ldrsh r1, [r4, r6]
	mov r0, sp
	movs r3, #4
	ldrsh r0, [r0, r3]
	subs r1, r1, r0
	movs r3, #0
	movs r0, #0xb
	rsbs r0, r0, #0
	cmp r2, r0
	bgt _080979FC
	adds r4, r3, #0
	b _08097A38
_080979FC:
	movs r0, #6
	rsbs r0, r0, #0
	cmp r2, r0
	bgt _08097A08
	movs r4, #1
	b _08097A38
_08097A08:
	movs r0, #2
	rsbs r0, r0, #0
	cmp r2, r0
	bgt _08097A14
	movs r4, #2
	b _08097A38
_08097A14:
	movs r0, #1
	rsbs r0, r0, #0
	movs r4, #3
	cmp r2, r0
	beq _08097A38
	movs r4, #4
	cmp r2, #0
	beq _08097A38
	movs r4, #5
	cmp r2, #1
	beq _08097A38
	movs r4, #6
	cmp r2, #5
	ble _08097A38
	movs r4, #8
	cmp r2, #0xa
	bgt _08097A38
	movs r4, #7
_08097A38:
	movs r0, #0xb
	rsbs r0, r0, #0
	cmp r1, r0
	bgt _08097A4A
	movs r3, #0x11
	cmp r4, #8
	bne _08097ABE
	movs r3, #0x10
	b _08097ABE
_08097A4A:
	movs r0, #6
	rsbs r0, r0, #0
	cmp r1, r0
	bgt _08097A5C
	movs r3, #0xf
	cmp r4, #7
	bne _08097ABE
	movs r3, #0xe
	b _08097ABE
_08097A5C:
	movs r0, #2
	rsbs r0, r0, #0
	cmp r1, r0
	bgt _08097A6E
	movs r3, #0xd
	cmp r4, #6
	bne _08097ABE
	movs r3, #0xc
	b _08097ABE
_08097A6E:
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _08097A80
	movs r3, #0xb
	cmp r4, #5
	bne _08097ABE
	movs r3, #0xa
	b _08097ABE
_08097A80:
	cmp r1, #0
	bne _08097A8E
	movs r3, #9
	cmp r4, #4
	bne _08097ABE
	movs r3, #8
	b _08097ABE
_08097A8E:
	cmp r1, #1
	bne _08097A9C
	movs r3, #7
	cmp r4, #3
	bne _08097ABE
	movs r3, #6
	b _08097ABE
_08097A9C:
	cmp r1, #5
	bgt _08097AAA
	movs r3, #5
	cmp r4, #2
	bne _08097ABE
	movs r3, #4
	b _08097ABE
_08097AAA:
	cmp r1, #0xa
	bgt _08097AB8
	movs r3, #3
	cmp r4, #1
	bne _08097ABE
	movs r3, #2
	b _08097ABE
_08097AB8:
	rsbs r0, r4, #0
	orrs r0, r4
	lsrs r3, r0, #0x1f
_08097ABE:
	ldr r6, _08097ADC @ =0x000033DE
	adds r0, r7, r6
	strb r4, [r0]
	ldr r1, _08097AE0 @ =0x000033DF
	adds r0, r7, r1
	strb r3, [r0]
	movs r0, #3
_08097ACC:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08097ADC: .4byte 0x000033DE
_08097AE0: .4byte 0x000033DF

	thumb_func_start func_08097AE4
func_08097AE4: @ 0x08097AE4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r6, r0, #0
	mov r8, r1
	movs r0, #0
	mov sb, r0
	movs r7, #0
	adds r0, r6, #0
	bl func_08008724
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r4, r6, r1
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	adds r0, r4, #0
	bl func_0800736C
	str r0, [r4, #4]
	mov r2, r8
	cmp r2, #0
	bne _08097B28
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r1, r6, r0
	adds r0, r6, #0
	bl func_080989DC
	b _08097B34
_08097B28:
	movs r2, #0xcd
	lsls r2, r2, #2
	adds r1, r6, r2
	adds r0, r6, #0
	bl func_080989DC
_08097B34:
	adds r0, r6, #0
	bl func_08008918
	mov r1, sp
	movs r2, #0x3f
	strh r2, [r1]
	adds r0, #0x50
	strh r2, [r0]
	movs r0, #0x10
	bl __builtin_new
	adds r4, r0, #0
	adds r0, r6, #0
	bl func_08008918
	adds r1, r0, #0
	movs r0, #0
	str r0, [r4]
	str r0, [r4, #4]
	ldr r0, _08097BAC @ =vtable_unk_080E5B80
	str r0, [r4, #8]
	adds r5, r4, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl func_08009300
	str r4, [sp, #4]
	ldr r1, _08097BB0 @ =0x00000889
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl func_0800934C
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	ldr r0, _08097BB4 @ =0x000033D2
	adds r1, r6, r0
	movs r0, #2
	strb r0, [r1]
	movs r4, #0
_08097B90:
	adds r0, r6, #0
	bl func_080087C8
	adds r0, r6, #0
	bl func_080088B8
	adds r0, r7, #0
	cmp r0, #1
	beq _08097BFC
	cmp r0, #1
	bgt _08097BB8
	cmp r0, #0
	beq _08097BC2
	b _08097CAA
	.align 2, 0
_08097BAC: .4byte vtable_unk_080E5B80
_08097BB0: .4byte 0x00000889
_08097BB4: .4byte 0x000033D2
_08097BB8:
	cmp r0, #2
	beq _08097C66
	cmp r0, #3
	beq _08097C9C
	b _08097CAA
_08097BC2:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08097CAA
	mov r1, r8
	cmp r1, #0
	bne _08097BE0
	ldr r2, _08097BDC @ =0x000033D4
	adds r1, r6, r2
	movs r0, #8
	b _08097BE6
	.align 2, 0
_08097BDC: .4byte 0x000033D4
_08097BE0:
	ldr r0, _08097BF4 @ =0x000033D4
	adds r1, r6, r0
	movs r0, #9
_08097BE6:
	strh r0, [r1]
	ldr r2, _08097BF8 @ =0x000033D2
	adds r1, r6, r2
	movs r0, #0
	strb r0, [r1]
	movs r7, #1
	b _08097CAA
	.align 2, 0
_08097BF4: .4byte 0x000033D4
_08097BF8: .4byte 0x000033D2
_08097BFC:
	ldr r1, _08097C24 @ =0x000033D2
	adds r0, r6, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	bne _08097CAA
	ldr r2, _08097C28 @ =0x000033D3
	adds r0, r6, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	beq _08097C54
	cmp r0, #1
	bgt _08097C2C
	cmp r0, #0
	beq _08097C32
	b _08097CAA
	.align 2, 0
_08097C24: .4byte 0x000033D2
_08097C28: .4byte 0x000033D3
_08097C2C:
	cmp r0, #2
	beq _08097C5E
	b _08097CAA
_08097C32:
	adds r0, r6, #0
	adds r0, #0x8c
	ldr r0, [r0]
	ldr r1, _08097C50 @ =0x00002214
	adds r0, r0, r1
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r1, r6, r2
	bl func_0809A9C0
	movs r0, #1
	rsbs r0, r0, #0
	mov sb, r0
	movs r7, #2
	b _08097CAA
	.align 2, 0
_08097C50: .4byte 0x00002214
_08097C54:
	movs r1, #1
	rsbs r1, r1, #0
	mov sb, r1
	movs r7, #2
	b _08097CAA
_08097C5E:
	movs r2, #1
	mov sb, r2
	movs r7, #2
	b _08097CAA
_08097C66:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08097C94 @ =0x08100AC0
	bl func_08050D8C
	ldr r0, [sp, #4]
	adds r0, #0xc
	ldr r1, _08097C98 @ =0x00000889
	movs r2, #1
	movs r3, #1
	bl func_08009378
	adds r0, r6, #0
	bl func_08008940
	ldr r2, [r0, #8]
	ldr r1, [sp, #4]
	ldr r2, [r2, #0x10]
	bl _call_via_r2
	movs r7, #3
	b _08097CAA
	.align 2, 0
_08097C94: .4byte 0x08100AC0
_08097C98: .4byte 0x00000889
_08097C9C:
	ldr r0, [sp, #4]
	ldr r1, [r0]
	rsbs r0, r1, #0
	orrs r0, r1
	cmp r0, #0
	blt _08097CAA
	movs r4, #1
_08097CAA:
	mov r0, r8
	cmp r0, #0
	bne _08097CD0
	ldr r1, _08097CCC @ =0x0000035A
	adds r0, r6, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x14
	lsrs r1, r1, #0x14
	movs r2, #0xd7
	lsls r2, r2, #2
	adds r0, r6, r2
	ldrb r2, [r0]
	adds r0, r6, #0
	movs r3, #0
	bl func_08099144
	b _08097CEA
	.align 2, 0
_08097CCC: .4byte 0x0000035A
_08097CD0:
	ldr r1, _08097D34 @ =0x00000346
	adds r0, r6, r1
	ldrh r1, [r0]
	lsls r1, r1, #0x14
	lsrs r1, r1, #0x14
	movs r2, #0xd7
	lsls r2, r2, #2
	adds r0, r6, r2
	ldrb r2, [r0]
	adds r0, r6, #0
	movs r3, #0
	bl func_08099144
_08097CEA:
	adds r0, r6, #0
	bl func_080CD8A0
	adds r0, r6, #0
	bl func_08097D38
	cmp r4, #0
	bne _08097CFC
	b _08097B90
_08097CFC:
	movs r0, #0xc8
	lsls r0, r0, #2
	adds r4, r6, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080073E0
	movs r0, #0
	str r0, [r4, #4]
	mov r4, sb
	ldr r1, [sp, #4]
	cmp r1, #0
	beq _08097D22
	ldr r0, [r1, #8]
	ldr r2, [r0, #0xc]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08097D22:
	adds r0, r4, #0
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08097D34: .4byte 0x00000346

	thumb_func_start func_08097D38
func_08097D38: @ 0x08097D38
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r6, r0, #0
	adds r0, #0x88
	ldr r0, [r0]
	cmp r0, #6
	bls _08097D48
	b _08097FFE
_08097D48:
	lsls r0, r0, #2
	ldr r1, _08097D54 @ =_08097D58
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08097D54: .4byte _08097D58
_08097D58: @ jump table
	.4byte _08097FFE @ case 0
	.4byte _08097FFE @ case 1
	.4byte _08097FFE @ case 2
	.4byte _08097D74 @ case 3
	.4byte _08097FFE @ case 4
	.4byte _08097FFE @ case 5
	.4byte _08097FFE @ case 6
_08097D74:
	ldr r0, _08097D88 @ =0x000033D2
	adds r4, r6, r0
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _08097D8C
	movs r0, #3
	strb r0, [r4]
	b _08097FFE
	.align 2, 0
_08097D88: .4byte 0x000033D2
_08097D8C:
	cmp r0, #5
	bne _08097D96
	movs r0, #2
	strb r0, [r4]
	b _08097FFE
_08097D96:
	cmp r0, #4
	bne _08097E08
	adds r0, r6, #0
	adds r0, #0x80
	bl func_08050DF0
	adds r1, r0, #0
	movs r0, #3
	strb r0, [r4]
	ldr r2, _08097DD0 @ =0x000033D4
	adds r0, r6, r2
	ldrh r0, [r0]
	cmp r0, #0
	bge _08097DB4
	b _08097FFE
_08097DB4:
	cmp r0, #2
	ble _08097DC4
	cmp r0, #9
	ble _08097DBE
	b _08097FFE
_08097DBE:
	cmp r0, #8
	bge _08097DC4
	b _08097FFE
_08097DC4:
	cmp r1, #1
	bne _08097DD8
	ldr r0, _08097DD4 @ =0x000033D3
	adds r1, r6, r0
	movs r0, #0
	b _08097DF2
	.align 2, 0
_08097DD0: .4byte 0x000033D4
_08097DD4: .4byte 0x000033D3
_08097DD8:
	cmp r1, #2
	bne _08097DE8
	ldr r2, _08097DE4 @ =0x000033D3
	adds r1, r6, r2
	movs r0, #1
	b _08097DF2
	.align 2, 0
_08097DE4: .4byte 0x000033D3
_08097DE8:
	cmp r1, #3
	bne _08097DF4
	ldr r0, _08097E00 @ =0x000033D3
	adds r1, r6, r0
	movs r0, #2
_08097DF2:
	strb r0, [r1]
_08097DF4:
	ldr r2, _08097E04 @ =0x000033D2
	adds r1, r6, r2
	movs r0, #5
	strb r0, [r1]
	b _08097FFE
	.align 2, 0
_08097E00: .4byte 0x000033D3
_08097E04: .4byte 0x000033D2
_08097E08:
	cmp r0, #3
	beq _08097E0E
	b _08097FFE
_08097E0E:
	movs r0, #5
	strb r0, [r4]
	ldr r1, _08097E28 @ =0x000033D4
	adds r0, r6, r1
	ldrh r0, [r0]
	cmp r0, #0xa
	bls _08097E1E
	b _08097FFE
_08097E1E:
	lsls r0, r0, #2
	ldr r1, _08097E2C @ =_08097E30
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08097E28: .4byte 0x000033D4
_08097E2C: .4byte _08097E30
_08097E30: @ jump table
	.4byte _08097E5C @ case 0
	.4byte _08097E8C @ case 1
	.4byte _08097EB0 @ case 2
	.4byte _08097EE0 @ case 3
	.4byte _08097EFC @ case 4
	.4byte _08097F04 @ case 5
	.4byte _08097F20 @ case 6
	.4byte _08097F5C @ case 7
	.4byte _08097F80 @ case 8
	.4byte _08097FB0 @ case 9
	.4byte _08097FE4 @ case 10
_08097E5C:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08097E7C @ =0x08100E34
	ldr r2, _08097E80 @ =0x08100E48
	ldr r3, _08097E84 @ =0x08100E5C
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	bl func_08050E0C
	ldr r2, _08097E88 @ =0x000033D2
	adds r1, r6, r2
	b _08097FCC
	.align 2, 0
_08097E7C: .4byte 0x08100E34
_08097E80: .4byte 0x08100E48
_08097E84: .4byte 0x08100E5C
_08097E88: .4byte 0x000033D2
_08097E8C:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08097EA4 @ =0x08100E74
	ldr r2, _08097EA8 @ =0x08100E90
	ldr r3, _08097EAC @ =0x08100E5C
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	bl func_08050E30
	b _08097FC8
	.align 2, 0
_08097EA4: .4byte 0x08100E74
_08097EA8: .4byte 0x08100E90
_08097EAC: .4byte 0x08100E5C
_08097EB0:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08097ED0 @ =0x08100EA4
	ldr r2, _08097ED4 @ =0x08100EBC
	ldr r3, _08097ED8 @ =0x08100ED8
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	bl func_08050E0C
	ldr r2, _08097EDC @ =0x000033D2
	adds r1, r6, r2
	b _08097FCC
	.align 2, 0
_08097ED0: .4byte 0x08100EA4
_08097ED4: .4byte 0x08100EBC
_08097ED8: .4byte 0x08100ED8
_08097EDC: .4byte 0x000033D2
_08097EE0:
	ldr r5, _08097EF4 @ =0x08100EF0
	adds r4, r6, #0
	adds r4, #0x80
	adds r0, r4, #0
	movs r1, #4
	bl func_08050EBC
	ldr r0, _08097EF8 @ =0x000033D8
	adds r2, r6, r0
	b _08097F6E
	.align 2, 0
_08097EF4: .4byte 0x08100EF0
_08097EF8: .4byte 0x000033D8
_08097EFC:
	ldr r5, _08097F00 @ =0x08100F04
	b _08097F5E
	.align 2, 0
_08097F00: .4byte 0x08100F04
_08097F04:
	ldr r5, _08097F18 @ =0x08100F30
	adds r4, r6, #0
	adds r4, #0x80
	adds r0, r4, #0
	movs r1, #4
	bl func_08050EBC
	ldr r0, _08097F1C @ =0x000033D8
	adds r2, r6, r0
	b _08097F6E
	.align 2, 0
_08097F18: .4byte 0x08100F30
_08097F1C: .4byte 0x000033D8
_08097F20:
	ldr r5, _08097F4C @ =0x08100F30
	adds r4, r6, #0
	adds r4, #0x80
	adds r0, r4, #0
	movs r1, #4
	bl func_08050EBC
	ldr r1, _08097F50 @ =0x000033D8
	adds r2, r6, r1
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_08050DA0
	ldr r2, _08097F54 @ =0x000033D2
	adds r1, r6, r2
	movs r0, #3
	strb r0, [r1]
	ldr r0, _08097F58 @ =0x000033D4
	adds r1, r6, r0
	movs r0, #7
	strh r0, [r1]
	b _08097FFE
	.align 2, 0
_08097F4C: .4byte 0x08100F30
_08097F50: .4byte 0x000033D8
_08097F54: .4byte 0x000033D2
_08097F58: .4byte 0x000033D4
_08097F5C:
	ldr r5, _08097F78 @ =0x08100F44
_08097F5E:
	adds r4, r6, #0
	adds r4, #0x80
	adds r0, r4, #0
	movs r1, #4
	bl func_08050EBC
	ldr r1, _08097F7C @ =0x000033D8
	adds r2, r6, r1
_08097F6E:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_08050DA0
	b _08097FFE
	.align 2, 0
_08097F78: .4byte 0x08100F44
_08097F7C: .4byte 0x000033D8
_08097F80:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08097FA0 @ =0x08100F78
	ldr r2, _08097FA4 @ =0x08100F90
	ldr r3, _08097FA8 @ =0x08100FA4
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	bl func_08050E0C
	ldr r2, _08097FAC @ =0x000033D2
	adds r1, r6, r2
	b _08097FCC
	.align 2, 0
_08097FA0: .4byte 0x08100F78
_08097FA4: .4byte 0x08100F90
_08097FA8: .4byte 0x08100FA4
_08097FAC: .4byte 0x000033D2
_08097FB0:
	adds r0, r6, #0
	adds r0, #0x80
	ldr r1, _08097FD4 @ =0x08100FBC
	ldr r2, _08097FD8 @ =0x08100F90
	ldr r3, _08097FDC @ =0x08100FCC
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	bl func_08050E0C
_08097FC8:
	ldr r0, _08097FE0 @ =0x000033D2
	adds r1, r6, r0
_08097FCC:
	movs r0, #4
	strb r0, [r1]
	b _08097FFE
	.align 2, 0
_08097FD4: .4byte 0x08100FBC
_08097FD8: .4byte 0x08100F90
_08097FDC: .4byte 0x08100FCC
_08097FE0: .4byte 0x000033D2
_08097FE4:
	ldr r5, _08098008 @ =0x08100FE0
	adds r4, r6, #0
	adds r4, #0x80
	adds r0, r4, #0
	movs r1, #4
	bl func_08050E98
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl func_08050DC8
_08097FFE:
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08098008: .4byte 0x08100FE0

	thumb_func_start func_0809800C
func_0809800C: @ 0x0809800C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xb8
	mov sl, r0
	bl func_08008918
	add r1, sp, #0xc
	movs r4, #0
	strh r4, [r1]
	strh r4, [r0, #0x14]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x16]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x18]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1a]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1c]
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	strh r4, [r1]
	strh r4, [r0, #0x1e]
	movs r7, #0xc0
	lsls r7, r7, #0x13
	movs r2, #0x80
	lsls r2, r2, #8
	movs r0, #0
	adds r1, r7, #0
	bl func_08008EB8
	movs r6, #1
	rsbs r6, r6, #0
	ldr r0, _08098394 @ =0x0600E000
	mov r8, r0
	movs r4, #0x80
	lsls r4, r4, #4
	adds r0, r6, #0
	mov r1, r8
	adds r2, r4, #0
	bl func_08008EB8
	ldr r1, _08098398 @ =0x0600F800
	mov sb, r1
	adds r0, r6, #0
	adds r2, r4, #0
	bl func_08008EB8
	ldr r1, _0809839C @ =0x0600F000
	adds r0, r6, #0
	adds r2, r4, #0
	bl func_08008EB8
	mov r0, sl
	bl func_08008918
	add r1, sp, #0xc
	movs r3, #0xf2
	lsls r3, r3, #5
	adds r2, r3, #0
	strh r2, [r1]
	movs r5, #0
	strh r2, [r0]
	mov r0, sl
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _080983A0 @ =0x00001C43
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xe]
	mov r0, sl
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _080983A4 @ =0x00001F41
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xc]
	mov r0, sl
	bl func_08008918
	add r2, sp, #0xc
	ldr r3, _080983A8 @ =0x00001E42
	adds r1, r3, #0
	strh r1, [r2]
	strh r1, [r0, #0xa]
	ldr r0, _080983AC @ =0x080F9F70
	ldr r0, [r0]
	ldr r1, _080983B0 @ =0x080F9F74
	ldr r2, [r1]
	adds r1, r7, #0
	bl func_08008E64
	ldr r0, _080983B4 @ =0x00030003
	mov r1, r8
	adds r2, r4, #0
	bl func_08008EB8
	movs r0, #3
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	mov r0, sb
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl func_08051320
	ldr r0, _080983B8 @ =0x080F9F78
	ldr r0, [r0]
	movs r1, #0xa0
	lsls r1, r1, #0x13
	movs r2, #0x20
	bl func_08008E64
	ldr r1, _080983BC @ =0x05000040
	movs r7, #0xf8
	lsls r7, r7, #2
	adds r0, r7, #0
	strh r0, [r1]
	ldr r0, _080983C0 @ =0x05000042
	strh r5, [r0]
	adds r1, #4
	ldr r2, _080983C4 @ =0x00004218
	adds r0, r2, #0
	strh r0, [r1]
	ldr r1, _080983C8 @ =0x00002BD0
	add r1, sl
	adds r0, r6, #0
	adds r2, r4, #0
	bl func_08008EB8
	movs r5, #0x84
	lsls r5, r5, #6
	movs r1, #0
	mov r3, sp
	adds r3, #0x10
	str r3, [sp, #0xa4]
	mov r4, sp
	adds r4, #0x18
	str r4, [sp, #0xa8]
	mov r7, sp
	adds r7, #0x20
	str r7, [sp, #0xb0]
	mov r0, sp
	adds r0, #0x28
	str r0, [sp, #0xb4]
	add r2, sp, #0x30
	mov sb, r2
	movs r3, #0xae
	lsls r3, r3, #1
	add r3, sl
	str r3, [sp, #0xa0]
	mov r4, sl
	adds r4, #0xc8
	str r4, [sp, #0xac]
	ldr r7, _080983CC @ =0x00002BD4
	add r7, sl
	mov r8, r7
_08098174:
	movs r4, #0
	lsls r0, r1, #1
	adds r6, r5, #0
	adds r6, #0x28
	adds r1, #1
	mov ip, r1
	adds r1, r0, #4
	lsls r1, r1, #6
	adds r0, #5
	lsls r0, r0, #6
	adds r3, r5, #0
	adds r3, #0x14
	mov r7, r8
	adds r2, r0, r7
	add r1, r8
_08098192:
	adds r0, r5, r4
	strh r0, [r1]
	strh r3, [r2]
	adds r3, #1
	adds r2, #2
	adds r1, #2
	adds r4, #1
	cmp r4, #0x13
	ble _08098192
	lsls r0, r6, #0x10
	lsrs r5, r0, #0x10
	mov r1, ip
	cmp r1, #7
	ble _08098174
	ldr r0, _080983C8 @ =0x00002BD0
	add r0, sl
	ldr r1, _0809839C @ =0x0600F000
	movs r2, #0x80
	lsls r2, r2, #4
	bl func_08008E64
	ldr r4, _080983D0 @ =0x08750C8C
	movs r0, #0xc4
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r7, _080983D4 @ =0x06010000
	adds r1, r1, r7
	movs r2, #0xe0
	lsls r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	ldr r5, [sp, #0xa4]
	movs r0, #0
	str r0, [sp, #0x10]
	strh r0, [r5, #4]
	ldr r1, [sp, #0xa8]
	str r0, [sp, #0x18]
	strh r0, [r1, #4]
	ldr r6, [sp, #0xb0]
	str r0, [sp, #0x20]
	strh r0, [r6, #4]
	str r0, [sp, #0x28]
	ldr r1, [sp, #0xb4]
	strh r0, [r1, #4]
	movs r0, #0xac
	lsls r0, r0, #1
	add r0, sl
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0xa0]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x30
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r4, sb
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	ldm r4!, {r0, r1, r2}
	stm r5!, {r0, r1, r2}
	ldm r4!, {r0, r1, r3}
	stm r5!, {r0, r1, r3}
	ldm r4!, {r2, r3}
	stm r5!, {r2, r3}
	ldr r4, [sp, #0x20]
	movs r0, #0xba
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r5, _080983D8 @ =0x05000200
	adds r1, r0, r5
	ldr r0, [sp, #0x20]
	movs r2, #0
	cmp r0, #0
	beq _0809824A
	ldrh r2, [r6, #4]
_0809824A:
	adds r0, r4, #0
	bl func_08008E64
	mov r0, sb
	ldr r1, [sp, #0xac]
	movs r2, #0
	bl func_0805E790
	ldr r1, [sp, #0xa4]
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r4}
	stm r1!, {r2, r4}
	ldr r4, [sp, #0x20]
	movs r0, #0xbe
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r5
	ldr r0, [sp, #0x20]
	movs r2, #0
	cmp r0, #0
	beq _08098288
	ldr r3, [sp, #0xb0]
	ldrh r2, [r3, #4]
_08098288:
	adds r0, r4, #0
	bl func_08008E64
	ldr r4, [sp, #0x18]
	movs r0, #0xbc
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r0, r0, #5
	adds r1, r0, r7
	ldr r0, [sp, #0x18]
	movs r2, #0
	cmp r0, #0
	beq _080982AC
	ldr r0, [sp, #0xa8]
	ldrh r2, [r0, #4]
_080982AC:
	adds r0, r4, #0
	bl func_08008E64
	movs r0, #0xc0
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	adds r1, r1, r7
	movs r2, #0xe0
	lsls r2, r2, #3
	movs r0, #0
	bl func_08008EB8
	movs r5, #0
	add r7, sp, #0x94
	movs r1, #1
	mov r8, r1
	movs r2, #2
	mov sb, r2
	add r6, sp, #0x98
	mov r3, sp
	adds r3, #0x54
	str r3, [sp, #0x9c]
_080982E2:
	ldr r0, _080983DC @ =0x08101008
	adds r0, r5, r0
	ldrb r4, [r0]
	cmp r4, #0
	beq _0809833C
	mov r0, r8
	strh r0, [r7]
	mov r1, sb
	strh r1, [r7, #2]
	ldr r0, [r7]
	add r1, sp, #0x54
	movs r2, #0
	bl func_0804E7A0
	mov r2, r8
	strh r2, [r6]
	mov r3, sb
	strh r3, [r6, #2]
	ldr r0, [r6]
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	mov r1, r8
	str r1, [sp, #8]
	add r1, sp, #0x54
	movs r2, #0
	movs r3, #0
	bl func_0804E5AC
	movs r0, #0xc0
	lsls r0, r0, #2
	add r0, sl
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r0, r5, #1
	adds r1, r1, r0
	lsls r1, r1, #5
	ldr r2, _080983D4 @ =0x06010000
	adds r1, r1, r2
	ldr r0, [sp, #0x9c]
	movs r2, #0x40
	bl func_08008E64
_0809833C:
	adds r5, #1
	cmp r5, #0x15
	ble _080982E2
	movs r4, #0xc2
	lsls r4, r4, #2
	add r4, sl
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r3, _080983D8 @ =0x05000200
	adds r0, r0, r3
	movs r7, #0xf8
	lsls r7, r7, #2
	adds r1, r7, #0
	strh r1, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r1, _080983E0 @ =0x05000202
	adds r0, r0, r1
	movs r1, #0
	strh r1, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _080983E4 @ =0x05000204
	adds r0, r0, r2
	ldr r3, _080983C4 @ =0x00004218
	adds r1, r3, #0
	strh r1, [r0]
	add sp, #0xb8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098394: .4byte 0x0600E000
_08098398: .4byte 0x0600F800
_0809839C: .4byte 0x0600F000
_080983A0: .4byte 0x00001C43
_080983A4: .4byte 0x00001F41
_080983A8: .4byte 0x00001E42
_080983AC: .4byte 0x080F9F70
_080983B0: .4byte 0x080F9F74
_080983B4: .4byte 0x00030003
_080983B8: .4byte 0x080F9F78
_080983BC: .4byte 0x05000040
_080983C0: .4byte 0x05000042
_080983C4: .4byte 0x00004218
_080983C8: .4byte 0x00002BD0
_080983CC: .4byte 0x00002BD4
_080983D0: .4byte 0x08750C8C
_080983D4: .4byte 0x06010000
_080983D8: .4byte 0x05000200
_080983DC: .4byte 0x08101008
_080983E0: .4byte 0x05000202
_080983E4: .4byte 0x05000204

	thumb_func_start func_080983E8
func_080983E8: @ 0x080983E8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x90
	mov r8, r0
	mov r1, sp
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0xc]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x18]
	add r6, sp, #0x1c
	str r0, [sp, #0x1c]
	strh r0, [r6, #4]
	add r5, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r5, #4]
	add r1, sp, #0x2c
	str r0, [sp, #0x2c]
	strh r0, [r1, #4]
	add r1, sp, #0x34
	str r0, [sp, #0x34]
	strh r0, [r1, #4]
	ldr r1, _080986CC @ =0xFFFFFCFF
	ldr r0, [sp, #0x5c]
	ands r0, r1
	ldr r4, _080986D0 @ =0xFFFFF3FF
	ands r0, r4
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	ldr r1, _080986D4 @ =0xFFFFDFFF
	ands r0, r1
	ldr r1, _080986D8 @ =0xFFFF3FFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	ldr r1, _080986DC @ =0xF1FFFFFF
	ands r0, r1
	ldr r1, _080986E0 @ =0xEFFFFFFF
	ands r0, r1
	ldr r1, _080986E4 @ =0xDFFFFFFF
	ands r0, r1
	ldr r1, _080986E8 @ =0x3FFFFFFF
	ands r0, r1
	str r0, [sp, #0x5c]
	movs r0, #0xc2
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _080986EC @ =0xFFFF0FFF
	add r3, sp, #0x5c
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	ldr r0, _080986F0 @ =0x0000FFFF
	ands r1, r0
	ands r1, r4
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r1, r0
	str r1, [r3, #4]
	ldr r1, _080986F4 @ =0xFFFFFF00
	ldr r0, [sp, #0x5c]
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	str r0, [sp, #0x5c]
	movs r4, #0
	mov sb, r3
	add r0, sp, #0x64
	mov sl, r0
	mov r1, sp
	adds r1, #0x3c
	str r1, [sp, #0x80]
	movs r5, #0xc0
	lsls r5, r5, #2
	add r5, r8
	movs r6, #8
_080984A8:
	ldr r1, _080986F8 @ =0x000001FF
	ands r1, r6
	lsls r1, r1, #0x10
	ldr r2, _080986FC @ =0xFE00FFFF
	ldr r0, [sp, #0x5c]
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x5c]
	ldr r1, [r5, #4]
	adds r0, r5, #0
	bl func_08007D4C
	lsls r1, r4, #1
	adds r0, r0, r1
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _08098700 @ =0xFFFFFC00
	ldr r1, [sp, #0x60]
	ands r1, r2
	orrs r1, r0
	str r1, [sp, #0x60]
	mov r0, r8
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _080984F4
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp, #0x5c]
	str r0, [r1]
	mov r7, sb
	ldrh r0, [r7, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_080984F4:
	adds r6, #8
	adds r4, #1
	cmp r4, #0x15
	ble _080984A8
	ldr r1, _080986CC @ =0xFFFFFCFF
	ldr r0, [sp, #0x64]
	ands r0, r1
	ldr r4, _080986D0 @ =0xFFFFF3FF
	ands r0, r4
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	ldr r1, _080986D4 @ =0xFFFFDFFF
	ands r0, r1
	ldr r1, _080986D8 @ =0xFFFF3FFF
	ands r0, r1
	ldr r1, _080986DC @ =0xF1FFFFFF
	ands r0, r1
	ldr r1, _080986E0 @ =0xEFFFFFFF
	ands r0, r1
	ldr r1, _080986E4 @ =0xDFFFFFFF
	ands r0, r1
	ldr r1, _080986E8 @ =0x3FFFFFFF
	ands r0, r1
	str r0, [sp, #0x64]
	movs r0, #0xc2
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _080986EC @ =0xFFFF0FFF
	mov r3, sl
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	ldr r0, _080986F0 @ =0x0000FFFF
	ands r1, r0
	ands r1, r4
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r1, r0
	str r1, [r3, #4]
	ldr r1, _080986F4 @ =0xFFFFFF00
	ldr r0, [sp, #0x64]
	ands r0, r1
	movs r1, #0xc
	orrs r0, r1
	str r0, [sp, #0x64]
	movs r4, #0
	movs r5, #0xae
	lsls r5, r5, #1
	add r5, r8
	mov sb, r5
	movs r6, #0xca
	lsls r6, r6, #1
	add r6, r8
	str r6, [sp, #0x7c]
	movs r7, #0xc4
	lsls r7, r7, #2
	add r7, r8
	str r7, [sp, #0x84]
	movs r7, #0xc0
	mov r5, sl
_0809857E:
	ldr r1, _080986F8 @ =0x000001FF
	ands r1, r7
	lsls r1, r1, #0x10
	ldr r2, _080986FC @ =0xFE00FFFF
	ldr r0, [sp, #0x64]
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x64]
	ldr r0, [sp, #0x84]
	ldr r1, [r0, #4]
	bl func_08007D4C
	ldr r1, _08098704 @ =0x00000369
	add r1, r8
	adds r1, r1, r4
	ldrb r1, [r1]
	adds r1, r1, r0
	lsls r1, r1, #0x16
	lsrs r1, r1, #0x16
	ldr r2, _08098700 @ =0xFFFFFC00
	ldr r0, [r5, #4]
	ands r0, r2
	orrs r0, r1
	str r0, [r5, #4]
	mov r0, r8
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _080985D0
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp, #0x64]
	str r0, [r1]
	mov r6, sl
	ldrh r0, [r6, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_080985D0:
	adds r7, #8
	adds r4, #1
	cmp r4, #4
	ble _0809857E
	movs r5, #0xc4
	lsls r5, r5, #1
	add r5, r8
	movs r4, #0xac
	lsls r4, r4, #1
	add r4, r8
	adds r0, r4, #0
	bl func_0805E8F0
	str r0, [r5]
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	mov r7, sb
	ldr r0, [r7]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r0, [sp, #0x80]
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	ldr r0, [sp, #0x80]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r6, r7}
	stm r1!, {r2, r6, r7}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	mov r1, sp
	movs r0, #0xb6
	lsls r0, r0, #1
	add r0, r8
	ldm r0!, {r2, r6, r7}
	stm r1!, {r2, r6, r7}
	ldm r0!, {r3, r4, r6}
	stm r1!, {r3, r4, r6}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	movs r0, #8
	strh r0, [r1, #2]
	movs r4, #0xb8
	lsls r4, r4, #2
	add r4, r8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	movs r0, #0xba
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	mov r0, sp
	movs r1, #1
	movs r7, #1
	mov sb, r7
	mov r2, sb
	strh r2, [r0, #8]
	strb r1, [r0, #0x18]
	ldrb r0, [r5]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08098676
	b _080987CE
_08098676:
	mov r0, r8
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x24]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _08098696
	mov r4, sp
	ldrh r3, [r4, #0x28]
_08098696:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r5, _08098708 @ =0x06010000
	adds r2, r2, r5
	ldr r0, [sp, #0x80]
	adds r1, r7, #0
	bl func_08008F0C
	ldr r7, [sp, #0x80]
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _0809870C
	cmp r1, #0
	beq _080986C2
	adds r0, r1, #0
	adds r1, r7, #0
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080986C2:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080987CE
	.align 2, 0
_080986CC: .4byte 0xFFFFFCFF
_080986D0: .4byte 0xFFFFF3FF
_080986D4: .4byte 0xFFFFDFFF
_080986D8: .4byte 0xFFFF3FFF
_080986DC: .4byte 0xF1FFFFFF
_080986E0: .4byte 0xEFFFFFFF
_080986E4: .4byte 0xDFFFFFFF
_080986E8: .4byte 0x3FFFFFFF
_080986EC: .4byte 0xFFFF0FFF
_080986F0: .4byte 0x0000FFFF
_080986F4: .4byte 0xFFFFFF00
_080986F8: .4byte 0x000001FF
_080986FC: .4byte 0xFE00FFFF
_08098700: .4byte 0xFFFFFC00
_08098704: .4byte 0x00000369
_08098708: .4byte 0x06010000
_0809870C:
	str r1, [sp, #0x88]
	mov r5, sb
	str r5, [sp, #0x70]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x6c]
	add r1, sp, #0x70
	add r0, sp, #0x6c
	cmp r4, #1
	bhs _08098726
	adds r0, r1, #0
_08098726:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08098744
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08098748
	mov r0, sb
	bl func_080D3BC0
	b _08098748
_08098744:
	movs r0, #0
	mov sb, r0
_08098748:
	adds r5, r0, #0
	str r5, [sp, #0x8c]
	ldr r2, [r6]
	adds r3, r5, #0
	b _08098766
_08098752:
	cmp r3, #0
	beq _08098762
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_08098762:
	adds r2, #0x10
	adds r3, #0x10
_08098766:
	ldr r0, [sp, #0x88]
	cmp r2, r0
	bne _08098752
	adds r5, r3, #0
	ldr r0, [sp, #0x70]
	cmp r0, #1
	bne _08098788
	cmp r5, #0
	beq _08098784
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08098784:
	adds r5, #0x10
	b _080987AA
_08098788:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080987A8
_08098790:
	cmp r2, #0
	beq _080987A0
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080987A0:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _08098790
_080987A8:
	adds r5, r2, #0
_080987AA:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080987BA
_080987B4:
	adds r1, #0x10
	cmp r1, r2
	bne _080987B4
_080987BA:
	cmp r0, #0
	beq _080987C2
	bl free
_080987C2:
	ldr r0, [sp, #0x8c]
	add r0, sb
	ldr r7, [sp, #0x8c]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080987CE:
	mov r0, r8
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080987E4
	mov r0, sp
	ldrh r2, [r0, #0x20]
_080987E4:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
	movs r5, #0xe0
	lsls r5, r5, #1
	add r5, r8
	movs r4, #0xc8
	lsls r4, r4, #1
	add r4, r8
	adds r0, r4, #0
	bl func_0805E8F0
	str r0, [r5]
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x7c]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r4, [sp, #0x80]
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x1c
	ldm r4!, {r1, r6, r7}
	stm r0!, {r1, r6, r7}
	ldm r4!, {r2, r3, r6}
	stm r0!, {r2, r3, r6}
	ldm r4!, {r1, r7}
	stm r0!, {r1, r7}
	mov r1, sp
	movs r0, #0xd2
	lsls r0, r0, #1
	add r0, r8
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r6, r7}
	stm r1!, {r2, r6, r7}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0xe8
	strh r0, [r1]
	movs r0, #8
	strh r0, [r1, #2]
	movs r4, #0xb8
	lsls r4, r4, #2
	add r4, r8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	adds r0, #2
	strh r0, [r1, #6]
	movs r0, #0xba
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	mov r0, sp
	movs r1, #1
	movs r3, #1
	mov sb, r3
	mov r6, sb
	strh r6, [r0, #8]
	strb r1, [r0, #0x18]
	ldrb r0, [r5]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0809888C
	b _080989A8
_0809888C:
	mov r0, r8
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x24]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _080988AC
	mov r0, sp
	ldrh r3, [r0, #0x28]
_080988AC:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r1, _080988E0 @ =0x06010040
	adds r2, r2, r1
	ldr r0, [sp, #0x80]
	adds r1, r7, #0
	bl func_08008F0C
	ldr r2, [sp, #0x80]
	mov sl, r2
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _080988E4
	cmp r1, #0
	beq _080988D8
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r3, r4, r5}
	stm r0!, {r3, r4, r5}
	ldr r1, [r1]
	str r1, [r0]
_080988D8:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080989A8
	.align 2, 0
_080988E0: .4byte 0x06010040
_080988E4:
	str r1, [sp, #0x88]
	mov r7, sb
	str r7, [sp, #0x78]
	ldr r0, [r6]
	subs r0, r1, r0
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r1, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _080988FC
	adds r0, r1, #0
_080988FC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0809891A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0809891E
	mov r0, sb
	bl func_080D3BC0
	b _0809891E
_0809891A:
	movs r0, #0
	mov sb, r0
_0809891E:
	adds r5, r0, #0
	str r5, [sp, #0x8c]
	ldr r2, [r6]
	adds r3, r5, #0
	ldr r4, [sp, #0x88]
	cmp r2, r4
	beq _08098946
_0809892C:
	cmp r3, #0
	beq _0809893C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0809893C:
	adds r2, #0x10
	adds r3, #0x10
	ldr r5, [sp, #0x88]
	cmp r2, r5
	bne _0809892C
_08098946:
	adds r5, r3, #0
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _08098962
	cmp r5, #0
	beq _0809895E
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r7}
	stm r0!, {r2, r3, r7}
	ldr r1, [r1]
	str r1, [r0]
_0809895E:
	adds r5, #0x10
	b _08098984
_08098962:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08098982
_0809896A:
	cmp r2, #0
	beq _0809897A
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0809897A:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0809896A
_08098982:
	adds r5, r2, #0
_08098984:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08098994
_0809898E:
	adds r1, #0x10
	cmp r1, r2
	bne _0809898E
_08098994:
	cmp r0, #0
	beq _0809899C
	bl free
_0809899C:
	ldr r0, [sp, #0x8c]
	add r0, sb
	ldr r1, [sp, #0x8c]
	str r1, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080989A8:
	mov r0, r8
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080989BE
	mov r4, sp
	ldrh r2, [r4, #0x20]
_080989BE:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
	mov r0, r8
	bl func_0809A3E0
	add sp, #0x90
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_080989DC
func_080989DC: @ 0x080989DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x84
	adds r7, r0, #0
	mov sb, r1
	bl func_080CD620
	adds r4, r7, #0
	adds r4, #0x78
	movs r5, #0
	ldr r1, [r7, #0x78]
	cmp r5, r1
	beq _08098A12
	cmp r1, #0
	beq _08098A12
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08098A12:
	str r5, [r4]
	movs r0, #0xa7
	lsls r0, r0, #2
	bl __builtin_new
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _08098BB0 @ =0x08101020
	str r0, [sp]
	add r4, sp, #4
	movs r0, #0
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r3, #8
	bl func_080CAFC4
	adds r6, r7, #0
	adds r6, #0x78
	adds r5, r0, #0
	ldr r1, [r7, #0x78]
	str r4, [sp, #0x68]
	cmp r5, r1
	beq _08098A66
	cmp r1, #0
	beq _08098A66
	movs r3, #0x84
	lsls r3, r3, #2
	adds r0, r1, r3
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08098A66:
	str r5, [r6]
	ldr r0, [r7, #0x78]
	bl func_080CB090
	movs r4, #0
	movs r0, #0x7c
	adds r0, r0, r7
	mov r8, r0
	mov r1, sb
	adds r1, #2
	str r1, [sp, #0x70]
	add r2, sp, #0xc
	mov sl, r2
	mov r3, sp
	adds r3, #0x14
	str r3, [sp, #0x6c]
	mov r0, sp
	adds r0, #0x1c
	str r0, [sp, #0x74]
	mov r1, sp
	adds r1, #0x24
	str r1, [sp, #0x78]
	mov r2, sp
	adds r2, #0x2c
	str r2, [sp, #0x7c]
	adds r3, r7, #0
	adds r3, #0xf8
	str r3, [sp, #0x64]
	adds r0, #0x3c
	str r0, [sp, #0x60]
	adds r1, #0x10
	str r1, [sp, #0x80]
	movs r6, #1
	ldr r5, _08098BB4 @ =0x08100AC2
_08098AAA:
	movs r2, #0xcc
	lsls r2, r2, #2
	adds r0, r7, r2
	ldrh r0, [r0]
	asrs r0, r4
	ands r0, r6
	cmp r0, #0
	beq _08098AC8
	ldr r0, [r7, #0x78]
	ldrh r3, [r5]
	str r6, [sp]
	adds r1, r4, #0
	ldr r2, _08098BB8 @ =0x086678A0
	bl func_080CB304
_08098AC8:
	adds r5, #2
	adds r4, #1
	cmp r4, #7
	ble _08098AAA
	mov r4, r8
	movs r5, #0
	ldr r1, [r7, #0x7c]
	cmp r5, r1
	beq _08098AF0
	cmp r1, #0
	beq _08098AF0
	movs r3, #0x84
	lsls r3, r3, #2
	adds r0, r1, r3
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08098AF0:
	str r5, [r4]
	movs r0, #0xcb
	lsls r0, r0, #2
	bl __builtin_new
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _08098BBC @ =0x0810102C
	str r0, [sp]
	movs r0, #0
	ldr r1, [sp, #0x68]
	strb r0, [r1]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl func_080CC15C
	mov r5, r8
	adds r4, r0, #0
	ldr r1, [r7, #0x7c]
	cmp r4, r1
	beq _08098B40
	cmp r1, #0
	beq _08098B40
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08098B40:
	str r4, [r5]
	ldr r0, [r7, #0x7c]
	bl func_080CC310
	add r0, sp, #8
	bl __12RucksackItem
	ldr r3, _08098BC0 @ =0x0000035D
	adds r0, r7, r3
	movs r1, #0
	strb r1, [r0]
	movs r4, #0xd7
	lsls r4, r4, #2
	adds r0, r7, r4
	strb r1, [r0]
	mov r8, r1
	mov sb, sl
	ldr r0, _08098BC4 @ =0x00002BB0
	adds r6, r7, r0
	ldr r5, [sp, #0x70]
_08098B68:
	ldrh r0, [r5]
	cmp r0, #0
	beq _08098C44
	cmp r0, #0xab
	bhi _08098BC8
	add r4, sp, #0x10
	adds r1, r0, #0
	subs r1, #1
	adds r0, r4, #0
	bl __4FoodUi
	ldrb r1, [r4]
	mov r0, sp
	adds r0, #0x11
	ldrb r2, [r0]
	lsls r2, r2, #8
	orrs r2, r1
	adds r0, #1
	ldrb r1, [r0]
	lsls r1, r1, #0x10
	orrs r1, r2
	mov r0, sb
	bl __12RucksackItemG4Food
	ldr r0, [sp, #0xc]
	str r0, [sp, #8]
	ldrh r1, [r5]
	subs r1, #1
	mov r0, sb
	bl __4FoodUi
	mov r0, sb
	bl GetIconId__C4Food
	b _08098BF4
	.align 2, 0
_08098BB0: .4byte 0x08101020
_08098BB4: .4byte 0x08100AC2
_08098BB8: .4byte 0x086678A0
_08098BBC: .4byte 0x0810102C
_08098BC0: .4byte 0x0000035D
_08098BC4: .4byte 0x00002BB0
_08098BC8:
	ldrh r1, [r5]
	subs r1, #0xac
	add r0, sp, #0x54
	bl __7ArticleUi
	add r0, sp, #0x54
	ldrb r1, [r0]
	mov r0, sl
	bl __12RucksackItemG7Article
	ldr r0, [sp, #0xc]
	str r0, [sp, #8]
	mov r4, sp
	adds r4, #0x55
	ldrh r1, [r5]
	subs r1, #0xac
	adds r0, r4, #0
	bl __7ArticleUi
	adds r0, r4, #0
	bl GetIconId__C7Article
_08098BF4:
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldr r0, [r7, #0x7c]
	movs r4, #1
	str r4, [sp]
	mov r1, r8
	ldr r2, _08098C34 @ =0x086678A0
	bl func_080CC728
	ldr r0, [sp, #8]
	str r0, [r6]
	adds r0, r7, #0
	add r1, sp, #8
	bl func_08096FB4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	beq _08098C38
	movs r2, #0xd7
	lsls r2, r2, #2
	adds r0, r7, r2
	adds r1, r4, #0
	mov r3, r8
	lsls r1, r3
	ldrb r2, [r0]
	orrs r1, r2
	strb r1, [r0]
	b _08098C4E
	.align 2, 0
_08098C34: .4byte 0x086678A0
_08098C38:
	ldr r1, _08098C40 @ =0x0000035D
	adds r0, r7, r1
	strb r4, [r0]
	b _08098C4E
	.align 2, 0
_08098C40: .4byte 0x0000035D
_08098C44:
	mov r0, sl
	bl __12RucksackItem
	ldr r0, [sp, #0xc]
	str r0, [r6]
_08098C4E:
	adds r6, #4
	adds r5, #2
	movs r2, #1
	add r8, r2
	mov r3, r8
	cmp r3, #7
	ble _08098B68
	movs r0, #0
	str r0, [sp, #0x14]
	ldr r4, [sp, #0x6c]
	strh r0, [r4, #4]
	str r0, [sp, #0x1c]
	ldr r1, [sp, #0x74]
	strh r0, [r1, #4]
	str r0, [sp, #0x24]
	ldr r2, [sp, #0x78]
	strh r0, [r2, #4]
	str r0, [sp, #0x2c]
	ldr r3, [sp, #0x7c]
	strh r0, [r3, #4]
	ldr r0, [sp, #0x64]
	ldr r4, [r0]
	ldr r0, [sp, #0x60]
	ldr r3, [r4, #0xc]
	ldr r1, [sp, #0x64]
	movs r2, #1
	bl _call_via_r3
	ldr r0, [sp, #0x58]
	ldrh r2, [r0]
	add r0, sp, #0x34
	ldr r3, [r4, #0x10]
	ldr r1, [sp, #0x64]
	bl _call_via_r3
	ldr r0, [sp, #0x80]
	adds r1, r0, #0
	movs r2, #0x20
	bl memcpy
	ldr r1, [sp, #0x6c]
	ldr r0, [sp, #0x80]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #0x24]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _08098CE4 @ =0x05000200
	adds r1, r0, r2
	ldr r0, [sp, #0x24]
	movs r2, #0
	cmp r0, #0
	beq _08098CCE
	ldr r3, [sp, #0x78]
	ldrh r2, [r3, #4]
_08098CCE:
	adds r0, r4, #0
	bl func_08008E64
	add sp, #0x84
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098CE4: .4byte 0x05000200

	thumb_func_start func_08098CE8
func_08098CE8: @ 0x08098CE8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc4
	mov r8, r0
	bl func_080CD620
	mov r4, r8
	adds r4, #0x78
	movs r5, #0
	mov r0, r8
	ldr r1, [r0, #0x78]
	cmp r5, r1
	beq _08098D1E
	cmp r1, #0
	beq _08098D1E
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08098D1E:
	str r5, [r4]
	movs r0, #0xa7
	lsls r0, r0, #2
	bl __builtin_new
	adds r5, r0, #0
	mov r0, r8
	bl func_08008910
	adds r4, r0, #0
	mov r0, r8
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _08098FDC @ =0x08101020
	str r0, [sp]
	add r1, sp, #4
	movs r0, #0
	strb r0, [r1]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl func_080CAFC4
	mov r5, r8
	adds r5, #0x78
	adds r4, r0, #0
	mov r3, r8
	ldr r1, [r3, #0x78]
	cmp r4, r1
	beq _08098D72
	cmp r1, #0
	beq _08098D72
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08098D72:
	str r4, [r5]
	mov r3, r8
	ldr r0, [r3, #0x78]
	bl func_080CB090
	movs r4, #0
	movs r0, #0x7c
	add r0, r8
	mov sl, r0
	mov r1, sp
	adds r1, #0x14
	str r1, [sp, #0xb4]
	mov r2, sp
	adds r2, #0x1c
	str r2, [sp, #0xb8]
	mov r3, sp
	adds r3, #0x24
	str r3, [sp, #0xbc]
	mov r7, r8
	adds r7, #0xf8
	mov r0, sp
	adds r0, #0x90
	str r0, [sp, #0xa8]
	add r1, sp, #0x2c
	mov sb, r1
	mov r2, r8
	adds r2, #0xc8
	str r2, [sp, #0xa0]
	adds r3, #0x74
	str r3, [sp, #0xac]
	adds r0, #0xc
	str r0, [sp, #0xb0]
	mov r1, sp
	adds r1, #0x50
	str r1, [sp, #0xa4]
	movs r6, #1
	ldr r5, _08098FE0 @ =0x08100AC2
_08098DBC:
	movs r0, #0xcc
	lsls r0, r0, #2
	add r0, r8
	ldrh r0, [r0]
	asrs r0, r4
	ands r0, r6
	cmp r0, #0
	beq _08098DDC
	mov r2, r8
	ldr r0, [r2, #0x78]
	ldrh r3, [r5]
	str r6, [sp]
	adds r1, r4, #0
	ldr r2, _08098FE4 @ =0x086678A0
	bl func_080CB304
_08098DDC:
	adds r5, #2
	adds r4, #1
	cmp r4, #7
	ble _08098DBC
	mov r4, sl
	movs r5, #0
	mov r3, r8
	ldr r1, [r3, #0x7c]
	cmp r5, r1
	beq _08098E06
	cmp r1, #0
	beq _08098E06
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08098E06:
	str r5, [r4]
	add r1, sp, #0xc
	movs r0, #0
	str r0, [sp, #0xc]
	strh r0, [r1, #4]
	ldr r1, [sp, #0xb4]
	str r0, [sp, #0x14]
	strh r0, [r1, #4]
	ldr r5, [sp, #0xb8]
	str r0, [sp, #0x1c]
	strh r0, [r5, #4]
	str r0, [sp, #0x24]
	ldr r3, [sp, #0xbc]
	strh r0, [r3, #4]
	ldr r4, [r7]
	ldr r0, [sp, #0xa8]
	ldr r3, [r4, #0xc]
	adds r1, r7, #0
	movs r2, #1
	bl _call_via_r3
	add r0, sp, #0x90
	ldr r0, [r0]
	ldrh r2, [r0]
	add r0, sp, #0x2c
	ldr r3, [r4, #0x10]
	adds r1, r7, #0
	bl _call_via_r3
	mov r4, sb
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0xc
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	ldr r4, [sp, #0x1c]
	movs r0, #0xc8
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r6, _08098FE8 @ =0x05000200
	adds r1, r0, r6
	ldr r0, [sp, #0x1c]
	movs r2, #0
	cmp r0, #0
	beq _08098E78
	ldrh r2, [r5, #4]
_08098E78:
	adds r0, r4, #0
	bl func_08008E64
	mov r0, sb
	ldr r1, [sp, #0xa0]
	movs r2, #0
	bl func_0805E790
	add r1, sp, #0xc
	mov r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	ldr r4, [sp, #0x1c]
	movs r0, #0xbe
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	adds r1, r0, r6
	ldr r0, [sp, #0x1c]
	movs r2, #0
	cmp r0, #0
	beq _08098EB6
	ldr r0, [sp, #0xb8]
	ldrh r2, [r0, #4]
_08098EB6:
	adds r0, r4, #0
	bl func_08008E64
	ldr r4, [sp, #0x14]
	movs r0, #0xbc
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r5, _08098FEC @ =0x06010000
	adds r1, r0, r5
	ldr r0, [sp, #0x14]
	movs r2, #0
	cmp r0, #0
	beq _08098EDC
	ldr r3, [sp, #0xb4]
	ldrh r2, [r3, #4]
_08098EDC:
	adds r0, r4, #0
	bl func_08008E64
	movs r0, #0xc0
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	adds r1, r1, r5
	movs r2, #0xe0
	lsls r2, r2, #3
	movs r0, #0
	bl func_08008EB8
	movs r7, #0
	movs r4, #1
	mov sb, r4
_08098F04:
	movs r6, #0
	adds r0, r7, #0
	adds r0, #8
	lsls r1, r7, #2
	mov sl, r1
	adds r2, r7, #1
	str r2, [sp, #0xc0]
	movs r1, #0xb
	muls r0, r1, r0
	ldr r3, _08098FF0 @ =0x08101059
	adds r5, r0, r3
_08098F1A:
	ldrb r4, [r5]
	add r0, sp, #0x98
	mov r1, sb
	strh r1, [r0]
	movs r3, #2
	ldr r2, [sp, #0xac]
	strh r3, [r2, #2]
	ldr r0, [r0]
	add r1, sp, #0x50
	movs r2, #0
	bl func_0804E7A0
	add r0, sp, #0x9c
	mov r1, sb
	strh r1, [r0]
	movs r3, #2
	ldr r2, [sp, #0xb0]
	strh r3, [r2, #2]
	ldr r0, [r0]
	str r4, [sp]
	movs r4, #0
	str r4, [sp, #4]
	mov r1, sb
	str r1, [sp, #8]
	add r1, sp, #0x50
	movs r2, #0
	movs r3, #0
	bl func_0804E5AC
	movs r0, #0xc0
	lsls r0, r0, #2
	add r0, r8
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	mov r2, sl
	adds r0, r2, r7
	lsls r0, r0, #2
	adds r1, r1, r0
	lsls r0, r6, #1
	adds r1, r1, r0
	lsls r1, r1, #5
	ldr r3, _08098FEC @ =0x06010000
	adds r1, r1, r3
	ldr r0, [sp, #0xa4]
	movs r2, #0x40
	bl func_08008E64
	adds r5, #1
	adds r6, #1
	cmp r6, #9
	ble _08098F1A
	ldr r7, [sp, #0xc0]
	cmp r7, #4
	ble _08098F04
	movs r4, #0xc2
	lsls r4, r4, #2
	add r4, r8
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r1, _08098FE8 @ =0x05000200
	adds r0, r0, r1
	movs r2, #0xf8
	lsls r2, r2, #2
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r3, _08098FF4 @ =0x05000202
	adds r0, r0, r3
	movs r1, #0
	strh r1, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r4, _08098FF8 @ =0x05000204
	adds r0, r0, r4
	ldr r2, _08098FFC @ =0x00004218
	adds r1, r2, #0
	strh r1, [r0]
	add sp, #0xc4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098FDC: .4byte 0x08101020
_08098FE0: .4byte 0x08100AC2
_08098FE4: .4byte 0x086678A0
_08098FE8: .4byte 0x05000200
_08098FEC: .4byte 0x06010000
_08098FF0: .4byte 0x08101059
_08098FF4: .4byte 0x05000202
_08098FF8: .4byte 0x05000204
_08098FFC: .4byte 0x00004218

	thumb_func_start func_08099000
func_08099000: @ 0x08099000
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	bl func_0809A3E0
	cmp r4, #1
	bne _080990FA
	ldr r1, _0809910C @ =0xFFFFFCFF
	ldr r0, [sp]
	ands r0, r1
	ldr r4, _08099110 @ =0xFFFFF3FF
	ands r0, r4
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	ldr r1, _08099114 @ =0xFFFFDFFF
	ands r0, r1
	ldr r1, _08099118 @ =0xFFFF3FFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	ldr r1, _0809911C @ =0xF1FFFFFF
	ands r0, r1
	ldr r1, _08099120 @ =0xEFFFFFFF
	ands r0, r1
	ldr r1, _08099124 @ =0xDFFFFFFF
	ands r0, r1
	ldr r1, _08099128 @ =0x3FFFFFFF
	ands r0, r1
	str r0, [sp]
	movs r1, #0xc2
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _0809912C @ =0xFFFF0FFF
	ldr r1, [sp, #4]
	ands r1, r2
	orrs r1, r0
	ldr r0, _08099130 @ =0x0000FFFF
	ands r1, r0
	ands r1, r4
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r1, r0
	str r1, [sp, #4]
	movs r1, #0
	mov r4, sp
_0809907A:
	movs r5, #0
	lsls r2, r1, #4
	mov sb, r2
	lsls r0, r1, #2
	adds r2, r1, #1
	mov sl, r2
	adds r0, r0, r1
	lsls r0, r0, #2
	mov r8, r0
	movs r6, #0x98
_0809908E:
	ldr r0, _08099134 @ =0x000001FF
	ands r0, r6
	lsls r0, r0, #0x10
	ldr r2, _08099138 @ =0xFE00FFFF
	ldr r1, [sp]
	ands r1, r2
	orrs r1, r0
	mov r0, sb
	adds r0, #0x10
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0809913C @ =0xFFFFFF00
	ands r1, r2
	orrs r1, r0
	str r1, [sp]
	movs r1, #0xc0
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r1, r5, #1
	add r1, r8
	adds r0, r0, r1
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _08099140 @ =0xFFFFFC00
	ldr r1, [r4, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r4, #4]
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _080990EC
	lsls r0, r2, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r1, [sp]
	str r1, [r0]
	ldrh r1, [r4, #4]
	strh r1, [r0, #4]
	adds r0, r2, #1
	strb r0, [r3]
_080990EC:
	adds r6, #8
	adds r5, #1
	cmp r5, #9
	ble _0809908E
	mov r1, sl
	cmp r1, #4
	ble _0809907A
_080990FA:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809910C: .4byte 0xFFFFFCFF
_08099110: .4byte 0xFFFFF3FF
_08099114: .4byte 0xFFFFDFFF
_08099118: .4byte 0xFFFF3FFF
_0809911C: .4byte 0xF1FFFFFF
_08099120: .4byte 0xEFFFFFFF
_08099124: .4byte 0xDFFFFFFF
_08099128: .4byte 0x3FFFFFFF
_0809912C: .4byte 0xFFFF0FFF
_08099130: .4byte 0x0000FFFF
_08099134: .4byte 0x000001FF
_08099138: .4byte 0xFE00FFFF
_0809913C: .4byte 0xFFFFFF00
_08099140: .4byte 0xFFFFFC00

	thumb_func_start func_08099144
func_08099144: @ 0x08099144
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x80
	mov sb, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #0x6c]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp, #0x70]
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	str r3, [sp, #0x74]
	mov r1, sp
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0xc]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x18]
	add r5, sp, #0x1c
	str r0, [sp, #0x1c]
	strh r0, [r5, #4]
	add r1, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r1, #4]
	add r1, sp, #0x2c
	str r0, [sp, #0x2c]
	strh r0, [r1, #4]
	add r1, sp, #0x34
	str r0, [sp, #0x34]
	strh r0, [r1, #4]
	movs r6, #0xa8
	lsls r6, r6, #2
	add r6, sb
	movs r4, #0x9c
	lsls r4, r4, #2
	add r4, sb
	adds r0, r4, #0
	bl func_0805E8F0
	str r0, [r6]
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	movs r0, #0x9d
	lsls r0, r0, #2
	add r0, sb
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x3c
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	adds r1, r5, #0
	adds r0, r4, #0
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	mov r1, sp
	movs r0, #0xa1
	lsls r0, r0, #2
	add r0, sb
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	movs r7, #0xc6
	lsls r7, r7, #2
	add r7, sb
	ldr r1, [r7, #4]
	adds r0, r7, #0
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	movs r0, #0xc8
	lsls r0, r0, #2
	add r0, sb
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r0, #2
	strh r0, [r1, #8]
	mov r0, sp
	movs r1, #1
	strb r1, [r0, #0x18]
	ldrb r0, [r6]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0809922C
	b _0809935A
_0809922C:
	ldr r0, [sp, #0x24]
	movs r1, #0
	cmp r0, #0
	beq _08099238
	mov r2, sp
	ldrh r1, [r2, #0x28]
_08099238:
	cmp r1, #0
	bne _0809923E
	b _0809935A
_0809923E:
	mov r0, sb
	bl func_08008910
	adds r4, r0, #0
	ldr r5, [sp, #0x24]
	ldr r1, [r7, #4]
	adds r0, r7, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _0809925E
	mov r7, sp
	ldrh r3, [r7, #0x28]
_0809925E:
	adds r6, r4, #0
	lsls r2, r2, #5
	ldr r0, _08099294 @ =0x06010000
	adds r2, r2, r0
	add r0, sp, #0x3c
	adds r1, r5, #0
	bl func_08008F0C
	add r1, sp, #0x3c
	mov sl, r1
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08099298
	cmp r1, #0
	beq _0809928A
	adds r0, r1, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0809928A:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _0809935A
	.align 2, 0
_08099294: .4byte 0x06010000
_08099298:
	str r1, [sp, #0x78]
	movs r5, #1
	str r5, [sp, #0x60]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x5c]
	add r1, sp, #0x60
	add r0, sp, #0x5c
	cmp r4, #1
	bhs _080992B2
	adds r0, r1, #0
_080992B2:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _080992D0
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _080992D4
	mov r0, r8
	bl func_080D3BC0
	b _080992D4
_080992D0:
	movs r0, #0
	mov r8, r0
_080992D4:
	adds r5, r0, #0
	str r5, [sp, #0x7c]
	ldr r2, [r6]
	adds r3, r5, #0
	b _080992F2
_080992DE:
	cmp r3, #0
	beq _080992EE
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080992EE:
	adds r2, #0x10
	adds r3, #0x10
_080992F2:
	ldr r0, [sp, #0x78]
	cmp r2, r0
	bne _080992DE
	adds r5, r3, #0
	ldr r0, [sp, #0x60]
	cmp r0, #1
	bne _08099314
	cmp r5, #0
	beq _08099310
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08099310:
	adds r5, #0x10
	b _08099336
_08099314:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _08099334
_0809931C:
	cmp r2, #0
	beq _0809932C
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0809932C:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _0809931C
_08099334:
	adds r5, r2, #0
_08099336:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08099346
_08099340:
	adds r1, #0x10
	cmp r1, r2
	bne _08099340
_08099346:
	cmp r0, #0
	beq _0809934E
	bl free
_0809934E:
	ldr r0, [sp, #0x7c]
	add r0, r8
	ldr r7, [sp, #0x7c]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_0809935A:
	movs r2, #0
	mov r5, sp
	ldr r6, _08099530 @ =0x08117838
_08099360:
	ldr r1, [sp, #0x6c]
	asrs r1, r2
	movs r0, #1
	ands r1, r0
	adds r4, r2, #1
	cmp r1, #0
	beq _0809939A
	lsls r1, r4, #2
	adds r1, r1, r6
	ldrb r0, [r1]
	adds r0, #8
	strh r0, [r5]
	ldrb r0, [r1, #1]
	strh r0, [r5, #2]
	mov r0, sb
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08099392
	mov r0, sp
	ldrh r2, [r0, #0x20]
_08099392:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_0809939A:
	adds r2, r4, #0
	cmp r2, #6
	ble _08099360
	movs r0, #0xf8
	lsls r0, r0, #4
	ldr r1, [sp, #0x6c]
	ands r0, r1
	cmp r0, #0
	beq _080993DE
	mov r2, sp
	ldr r1, _08099530 @ =0x08117838
	adds r0, r1, #0
	adds r0, #0x20
	ldrb r0, [r0]
	adds r0, #8
	strh r0, [r2]
	adds r1, #0x21
	ldrb r0, [r1]
	strh r0, [r2, #2]
	mov r0, sb
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _080993D6
	mov r4, sp
	ldrh r2, [r4, #0x20]
_080993D6:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_080993DE:
	ldr r5, [sp, #0x74]
	cmp r5, #1
	beq _08099432
	movs r2, #0
	mov r5, sp
	ldr r6, _08099530 @ =0x08117838
_080993EA:
	ldr r1, [sp, #0x70]
	asrs r1, r2
	movs r0, #1
	ands r1, r0
	adds r4, r2, #1
	cmp r1, #0
	beq _08099424
	lsls r1, r4, #2
	adds r1, r1, r6
	ldrb r0, [r1]
	adds r0, #0x80
	strh r0, [r5]
	ldrb r0, [r1, #1]
	strh r0, [r5, #2]
	mov r0, sb
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0809941C
	mov r7, sp
	ldrh r2, [r7, #0x20]
_0809941C:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_08099424:
	adds r2, r4, #0
	cmp r2, #7
	ble _080993EA
	ldr r0, [sp, #0x74]
	cmp r0, #1
	beq _08099432
	b _0809963A
_08099432:
	movs r5, #0xb6
	lsls r5, r5, #2
	add r5, sb
	movs r4, #0xaa
	lsls r4, r4, #2
	add r4, sb
	adds r0, r4, #0
	bl func_0805E8F0
	str r0, [r5]
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	movs r0, #0xab
	lsls r0, r0, #2
	add r0, sb
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x3c
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x1c
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r7}
	stm r0!, {r1, r2, r7}
	ldm r4!, {r3, r7}
	stm r0!, {r3, r7}
	mov r1, sp
	movs r0, #0xaf
	lsls r0, r0, #2
	add r0, sb
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r7}
	stm r1!, {r2, r3, r7}
	ldr r0, [r0]
	str r0, [r1]
	movs r4, #0xca
	lsls r4, r4, #2
	add r4, sb
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	movs r0, #0xc8
	lsls r0, r0, #2
	add r0, sb
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r0, #2
	strh r0, [r1, #8]
	mov r0, sp
	movs r7, #1
	mov r8, r7
	mov r1, r8
	strb r1, [r0, #0x18]
	ldrb r0, [r5]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080994CA
	b _080995FA
_080994CA:
	add r1, sp, #0x24
	ldr r0, [sp, #0x24]
	movs r2, #0
	cmp r0, #0
	beq _080994D6
	ldrh r2, [r1, #4]
_080994D6:
	cmp r2, #0
	bne _080994DC
	b _080995FA
_080994DC:
	mov r0, sb
	bl func_08008910
	adds r5, r0, #0
	ldr r7, [sp, #0x24]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _080994FC
	mov r4, sp
	ldrh r3, [r4, #0x28]
_080994FC:
	adds r6, r5, #0
	lsls r2, r2, #5
	ldr r5, _08099534 @ =0x06010000
	adds r2, r2, r5
	add r0, sp, #0x3c
	adds r1, r7, #0
	bl func_08008F0C
	add r7, sp, #0x3c
	mov sl, r7
	ldr r1, [r6, #4]
	ldr r0, [r6, #0xc]
	cmp r1, r0
	beq _08099538
	cmp r1, #0
	beq _08099528
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08099528:
	ldr r0, [r6, #4]
	adds r0, #0x10
	str r0, [r6, #4]
	b _080995FA
	.align 2, 0
_08099530: .4byte 0x08117838
_08099534: .4byte 0x06010000
_08099538:
	str r1, [sp, #0x78]
	mov r5, r8
	str r5, [sp, #0x68]
	ldr r0, [r6]
	adds r7, r1, #0
	subs r0, r7, r0
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r1, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _08099552
	adds r0, r1, #0
_08099552:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08099570
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov r8, r4
	cmp r0, #0
	bne _08099574
	mov r0, r8
	bl func_080D3BC0
	b _08099574
_08099570:
	movs r0, #0
	mov r8, r0
_08099574:
	adds r5, r0, #0
	str r5, [sp, #0x7c]
	ldr r2, [r6]
	adds r3, r5, #0
	b _08099592
_0809957E:
	cmp r3, #0
	beq _0809958E
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_0809958E:
	adds r2, #0x10
	adds r3, #0x10
_08099592:
	ldr r0, [sp, #0x78]
	cmp r2, r0
	bne _0809957E
	adds r5, r3, #0
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _080995B4
	cmp r5, #0
	beq _080995B0
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_080995B0:
	adds r5, #0x10
	b _080995D6
_080995B4:
	adds r3, r0, #0
	adds r2, r5, #0
	cmp r3, #0
	beq _080995D4
_080995BC:
	cmp r2, #0
	beq _080995CC
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r4, r5, r7}
	stm r0!, {r4, r5, r7}
	ldr r1, [r1]
	str r1, [r0]
_080995CC:
	subs r3, #1
	adds r2, #0x10
	cmp r3, #0
	bne _080995BC
_080995D4:
	adds r5, r2, #0
_080995D6:
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _080995E6
_080995E0:
	adds r1, #0x10
	cmp r1, r2
	bne _080995E0
_080995E6:
	cmp r0, #0
	beq _080995EE
	bl free
_080995EE:
	ldr r0, [sp, #0x7c]
	add r0, r8
	ldr r7, [sp, #0x7c]
	str r7, [r6]
	str r5, [r6, #4]
	str r0, [r6, #0xc]
_080995FA:
	movs r4, #0
	mov r5, sp
_080995FE:
	adds r0, r4, #7
	ldr r1, [sp, #0x6c]
	asrs r1, r0
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	beq _08099634
	movs r0, #0x90
	strh r0, [r5]
	lsls r0, r4, #4
	adds r0, #0x10
	strh r0, [r5, #2]
	mov r0, sb
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0809962C
	mov r0, sp
	ldrh r2, [r0, #0x20]
_0809962C:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_08099634:
	adds r4, #1
	cmp r4, #4
	ble _080995FE
_0809963A:
	add sp, #0x80
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0809964C
func_0809964C: @ 0x0809964C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc8
	adds r7, r0, #0
	bl func_080CD620
	adds r4, r7, #0
	adds r4, #0x78
	movs r5, #0
	ldr r1, [r7, #0x78]
	cmp r5, r1
	beq _08099680
	cmp r1, #0
	beq _08099680
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08099680:
	str r5, [r4]
	movs r0, #0xa7
	lsls r0, r0, #2
	bl __builtin_new
	adds r6, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _08099740 @ =0x08101038
	str r0, [sp]
	add r4, sp, #4
	movs r0, #0
	strb r0, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r3, #8
	bl func_080CAFC4
	adds r6, r7, #0
	adds r6, #0x78
	adds r5, r0, #0
	ldr r1, [r7, #0x78]
	mov r8, r4
	cmp r5, r1
	beq _080996D4
	cmp r1, #0
	beq _080996D4
	movs r3, #0x84
	lsls r3, r3, #2
	adds r0, r1, r3
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080996D4:
	str r5, [r6]
	ldr r0, [r7, #0x78]
	bl func_080CB090
	movs r5, #0
	adds r6, r7, #0
	adds r6, #0x7c
	mov r4, sp
	adds r4, #0x10
	str r4, [sp, #0xb8]
	mov r0, sp
	adds r0, #0x18
	str r0, [sp, #0xbc]
	mov r1, sp
	adds r1, #0x20
	str r1, [sp, #0xc0]
	add r2, sp, #0x28
	mov sb, r2
	movs r3, #0xe6
	lsls r3, r3, #1
	adds r3, r7, r3
	str r3, [sp, #0xb4]
	adds r4, #0x20
	str r4, [sp, #0xc4]
	movs r0, #0xf8
	adds r0, r0, r7
	mov sl, r0
	adds r1, #0x78
	str r1, [sp, #0xac]
	adds r2, r7, #0
	adds r2, #0xc8
	str r2, [sp, #0xb0]
	ldr r3, _08099744 @ =0x00002BB0
	adds r4, r7, r3
_08099718:
	adds r0, r4, #0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809976A
	adds r0, r4, #0
	bl GetKind__C12RucksackItem
	cmp r0, #0
	bne _08099748
	add r0, sp, #0xc
	adds r1, r4, #0
	bl GetFood__C12RucksackItem
	add r0, sp, #0xc
	bl GetIconId__C4Food
	b _08099758
	.align 2, 0
_08099740: .4byte 0x08101038
_08099744: .4byte 0x00002BB0
_08099748:
	adds r0, r4, #0
	bl GetArticle__C12RucksackItem
	adds r1, r0, #0
	add r0, sp, #0x94
	strb r1, [r0]
	bl GetIconId__C7Article
_08099758:
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldr r0, [r7, #0x78]
	movs r1, #1
	str r1, [sp]
	adds r1, r5, #0
	ldr r2, _08099A94 @ =0x086678A0
	bl func_080CB304
_0809976A:
	adds r4, #4
	adds r5, #1
	cmp r5, #7
	ble _08099718
	adds r4, r6, #0
	movs r5, #0
	ldr r1, [r7, #0x7c]
	cmp r5, r1
	beq _08099792
	cmp r1, #0
	beq _08099792
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_08099792:
	str r5, [r4]
	movs r0, #0xcb
	lsls r0, r0, #2
	bl __builtin_new
	adds r5, r0, #0
	adds r0, r7, #0
	bl func_08008910
	adds r4, r0, #0
	adds r0, r7, #0
	bl func_08008940
	adds r2, r0, #0
	ldr r0, _08099A98 @ =0x08101044
	str r0, [sp]
	movs r0, #0
	mov r3, r8
	strb r0, [r3]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r3, #8
	bl func_080CC15C
	adds r5, r6, #0
	adds r4, r0, #0
	ldr r1, [r7, #0x7c]
	cmp r4, r1
	beq _080997E2
	cmp r1, #0
	beq _080997E2
	movs r2, #0x84
	lsls r2, r2, #2
	adds r0, r1, r2
	ldr r0, [r0]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_080997E2:
	str r4, [r5]
	ldr r0, [r7, #0x7c]
	bl func_080CC310
	ldr r4, _08099A9C @ =0x08750C8C
	movs r3, #0xc4
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r0, _08099AA0 @ =0x06010000
	adds r1, r1, r0
	movs r2, #0xe0
	lsls r2, r2, #1
	adds r0, r4, #0
	bl func_08008E64
	ldr r6, [sp, #0xb8]
	movs r0, #0
	str r0, [sp, #0x10]
	strh r0, [r6, #4]
	ldr r1, [sp, #0xbc]
	str r0, [sp, #0x18]
	strh r0, [r1, #4]
	ldr r1, [sp, #0xc0]
	mov r8, r1
	str r0, [sp, #0x20]
	strh r0, [r1, #4]
	str r0, [sp, #0x28]
	mov r2, sb
	strh r0, [r2, #4]
	movs r3, #0xe4
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r1, [r0]
	ldr r3, [r1]
	ldrh r2, [r0, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0xb4]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x30
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	ldr r5, [sp, #0xc4]
	adds r0, r5, #0
	adds r1, r5, #0
	movs r2, #0x20
	bl memcpy
	adds r1, r6, #0
	adds r0, r5, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #0x20]
	movs r1, #0xba
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	ldr r2, _08099AA4 @ =0x05000200
	mov sb, r2
	adds r1, r0, r2
	ldr r0, [sp, #0x20]
	movs r2, #0
	cmp r0, #0
	beq _08099882
	mov r3, r8
	ldrh r2, [r3, #4]
_08099882:
	adds r0, r4, #0
	bl func_08008E64
	mov r0, sl
	ldr r4, [r0]
	ldr r0, [sp, #0xac]
	ldr r3, [r4, #0xc]
	mov r1, sl
	movs r2, #1
	bl _call_via_r3
	add r0, sp, #0x98
	ldr r0, [r0]
	ldrh r2, [r0]
	adds r0, r5, #0
	ldr r3, [r4, #0x10]
	mov r1, sl
	bl _call_via_r3
	adds r0, r5, #0
	adds r1, r5, #0
	movs r2, #0x20
	bl memcpy
	adds r1, r6, #0
	adds r0, r5, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r4, [sp, #0x20]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	mov r2, sb
	adds r1, r0, r2
	ldr r0, [sp, #0x20]
	movs r2, #0
	cmp r0, #0
	beq _080998E2
	mov r3, r8
	ldrh r2, [r3, #4]
_080998E2:
	adds r0, r4, #0
	bl func_08008E64
	ldr r0, [sp, #0xc4]
	ldr r1, [sp, #0xb0]
	movs r2, #0
	bl func_0805E790
	ldr r1, [sp, #0xb8]
	ldr r0, [sp, #0xc4]
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r4}
	stm r1!, {r2, r4}
	ldr r4, [sp, #0x20]
	movs r3, #0xbe
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #5
	mov r2, sb
	adds r1, r0, r2
	ldr r0, [sp, #0x20]
	movs r2, #0
	cmp r0, #0
	beq _08099922
	ldr r3, [sp, #0xc0]
	ldrh r2, [r3, #4]
_08099922:
	adds r0, r4, #0
	bl func_08008E64
	ldr r4, [sp, #0x18]
	movs r1, #0xbc
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r0, r0, #5
	ldr r2, _08099AA0 @ =0x06010000
	adds r1, r0, r2
	ldr r0, [sp, #0x18]
	movs r2, #0
	cmp r0, #0
	beq _08099948
	ldr r3, [sp, #0xbc]
	ldrh r2, [r3, #4]
_08099948:
	adds r0, r4, #0
	bl func_08008E64
	movs r4, #0xc0
	lsls r4, r4, #2
	adds r0, r7, r4
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r1, r1, #5
	ldr r0, _08099AA0 @ =0x06010000
	adds r1, r1, r0
	movs r2, #0xe0
	lsls r2, r2, #3
	movs r0, #0
	bl func_08008EB8
	movs r5, #0
	add r1, sp, #0xa0
	mov r8, r1
	movs r2, #1
	mov sb, r2
	movs r3, #2
	mov sl, r3
	add r6, sp, #0xa4
	mov r4, sp
	adds r4, #0x54
	str r4, [sp, #0xa8]
_08099982:
	ldr r0, _08099AA8 @ =0x08101048
	adds r0, r5, r0
	ldrb r4, [r0]
	cmp r4, #0
	beq _080999DE
	mov r1, sb
	mov r0, r8
	strh r1, [r0]
	mov r2, sl
	strh r2, [r0, #2]
	ldr r0, [r0]
	add r1, sp, #0x54
	movs r2, #0
	bl func_0804E7A0
	mov r3, sb
	strh r3, [r6]
	mov r0, sl
	strh r0, [r6, #2]
	ldr r0, [r6]
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	mov r2, sb
	str r2, [sp, #8]
	add r1, sp, #0x54
	movs r2, #0
	movs r3, #0
	bl func_0804E5AC
	movs r3, #0xc0
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r1, [r0, #4]
	bl func_08007D4C
	adds r1, r0, #0
	lsls r0, r5, #1
	adds r1, r1, r0
	lsls r1, r1, #5
	ldr r4, _08099AA0 @ =0x06010000
	adds r1, r1, r4
	ldr r0, [sp, #0xa8]
	movs r2, #0x40
	bl func_08008E64
_080999DE:
	adds r5, #1
	cmp r5, #0x10
	ble _08099982
	movs r0, #0xc2
	lsls r0, r0, #2
	adds r4, r7, r0
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r1, _08099AA4 @ =0x05000200
	adds r0, r0, r1
	movs r2, #0xf8
	lsls r2, r2, #2
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r3, _08099AAC @ =0x05000202
	adds r0, r0, r3
	movs r1, #0
	strh r1, [r0]
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_080074C0
	lsls r0, r0, #5
	ldr r4, _08099AB0 @ =0x05000204
	adds r0, r0, r4
	ldr r2, _08099AB4 @ =0x00004218
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _08099AB8 @ =0x00030003
	ldr r4, _08099ABC @ =0x00002BD0
	adds r1, r7, r4
	movs r2, #0xc0
	lsls r2, r2, #2
	bl func_08008EB8
	movs r3, #0
	ldr r6, _08099AC0 @ =0x0811785C
	ldr r5, _08099AC4 @ =0x0000101C
_08099A3A:
	adds r3, #1
	lsls r0, r3, #2
	adds r0, r0, r6
	ldrb r1, [r0]
	ldrb r2, [r0, #1]
	adds r0, r1, #1
	lsls r0, r0, #1
	lsls r2, r2, #6
	adds r0, r0, r4
	adds r0, r2, r0
	adds r0, r0, r7
	lsls r1, r1, #1
	adds r1, r1, r4
	adds r2, r2, r1
	adds r2, r2, r7
	movs r1, #1
_08099A5A:
	strh r5, [r2]
	strh r5, [r0]
	adds r0, #0x40
	adds r2, #0x40
	subs r1, #1
	cmp r1, #0
	bge _08099A5A
	cmp r3, #7
	ble _08099A3A
	movs r3, #8
	ldr r4, _08099AC8 @ =0x00002BEC
	adds r0, r7, r4
	movs r2, #2
	movs r1, #0xb
_08099A76:
	strh r3, [r0]
	strh r2, [r0, #2]
	adds r0, #0x40
	subs r1, #1
	cmp r1, #0
	bge _08099A76
	add sp, #0xc8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08099A94: .4byte 0x086678A0
_08099A98: .4byte 0x08101044
_08099A9C: .4byte 0x08750C8C
_08099AA0: .4byte 0x06010000
_08099AA4: .4byte 0x05000200
_08099AA8: .4byte 0x08101048
_08099AAC: .4byte 0x05000202
_08099AB0: .4byte 0x05000204
_08099AB4: .4byte 0x00004218
_08099AB8: .4byte 0x00030003
_08099ABC: .4byte 0x00002BD0
_08099AC0: .4byte 0x0811785C
_08099AC4: .4byte 0x0000101C
_08099AC8: .4byte 0x00002BEC

	thumb_func_start func_08099ACC
func_08099ACC: @ 0x08099ACC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x98
	adds r7, r0, #0
	mov r1, sp
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0xc]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x18]
	add r5, sp, #0x1c
	str r0, [sp, #0x1c]
	strh r0, [r5, #4]
	add r4, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r4, #4]
	add r1, sp, #0x2c
	str r0, [sp, #0x2c]
	strh r0, [r1, #4]
	add r1, sp, #0x34
	str r0, [sp, #0x34]
	strh r0, [r1, #4]
	adds r0, r7, #0
	bl func_0809A3E0
	ldr r1, _08099C18 @ =0x00000369
	adds r0, r7, r1
	ldrb r0, [r0]
	movs r2, #0
	str r2, [sp, #0x7c]
	cmp r0, #0
	bne _08099B24
	movs r3, #0x18
	str r3, [sp, #0x7c]
_08099B24:
	ldr r1, _08099C1C @ =0xFFFFFCFF
	ldr r0, [sp, #0x5c]
	ands r0, r1
	ldr r4, _08099C20 @ =0xFFFFF3FF
	ands r0, r4
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	ldr r1, _08099C24 @ =0xFFFFDFFF
	ands r0, r1
	ldr r1, _08099C28 @ =0xFFFF3FFF
	ands r0, r1
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	ldr r1, _08099C2C @ =0xF1FFFFFF
	ands r0, r1
	ldr r1, _08099C30 @ =0xEFFFFFFF
	ands r0, r1
	ldr r1, _08099C34 @ =0xDFFFFFFF
	ands r0, r1
	ldr r1, _08099C38 @ =0x3FFFFFFF
	ands r0, r1
	str r0, [sp, #0x5c]
	movs r5, #0xc2
	lsls r5, r5, #2
	adds r0, r7, r5
	ldr r1, [r0, #4]
	bl func_080074C0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r2, _08099C3C @ =0xFFFF0FFF
	add r3, sp, #0x5c
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	ldr r0, _08099C40 @ =0x0000FFFF
	ands r1, r0
	ands r1, r4
	movs r0, #0x80
	lsls r0, r0, #3
	orrs r1, r0
	str r1, [r3, #4]
	ldr r1, _08099C44 @ =0xFFFFFF00
	ldr r0, [sp, #0x5c]
	ands r0, r1
	str r0, [sp, #0x5c]
	mov sb, r3
	ldr r6, [sp, #0x7c]
	cmp r6, #0
	beq _08099C54
	movs r4, #0
	movs r0, #0x9d
	lsls r0, r0, #2
	adds r0, r7, r0
	str r0, [sp, #0x80]
	add r1, sp, #0x3c
	mov sl, r1
	movs r2, #0xe6
	lsls r2, r2, #1
	adds r2, r7, r2
	str r2, [sp, #0x84]
	movs r3, #0x81
	lsls r3, r3, #2
	adds r3, r7, r3
	str r3, [sp, #0x88]
	subs r5, #8
	adds r5, r7, r5
	str r5, [sp, #0x8c]
	movs r6, #0xb8
	mov r8, sb
_08099BBA:
	ldr r1, _08099C48 @ =0x000001FF
	ands r1, r6
	lsls r1, r1, #0x10
	ldr r2, _08099C4C @ =0xFE00FFFF
	ldr r0, [sp, #0x5c]
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0x5c]
	ldr r0, [sp, #0x8c]
	ldr r1, [r0, #4]
	bl func_08007D4C
	lsls r1, r4, #1
	adds r0, r0, r1
	ldr r1, [sp, #0x7c]
	adds r0, r0, r1
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x16
	ldr r2, _08099C50 @ =0xFFFFFC00
	mov r3, r8
	ldr r1, [r3, #4]
	ands r1, r2
	orrs r1, r0
	str r1, [r3, #4]
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _08099C0C
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp, #0x5c]
	str r0, [r1]
	mov r5, sb
	ldrh r0, [r5, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_08099C0C:
	adds r6, #8
	adds r4, #1
	cmp r4, #3
	ble _08099BBA
	b _08099CE4
	.align 2, 0
_08099C18: .4byte 0x00000369
_08099C1C: .4byte 0xFFFFFCFF
_08099C20: .4byte 0xFFFFF3FF
_08099C24: .4byte 0xFFFFDFFF
_08099C28: .4byte 0xFFFF3FFF
_08099C2C: .4byte 0xF1FFFFFF
_08099C30: .4byte 0xEFFFFFFF
_08099C34: .4byte 0xDFFFFFFF
_08099C38: .4byte 0x3FFFFFFF
_08099C3C: .4byte 0xFFFF0FFF
_08099C40: .4byte 0x0000FFFF
_08099C44: .4byte 0xFFFFFF00
_08099C48: .4byte 0x000001FF
_08099C4C: .4byte 0xFE00FFFF
_08099C50: .4byte 0xFFFFFC00
_08099C54:
	movs r5, #0
	movs r6, #0x9d
	lsls r6, r6, #2
	adds r6, r7, r6
	str r6, [sp, #0x80]
	add r0, sp, #0x3c
	mov sl, r0
	movs r1, #0xe6
	lsls r1, r1, #1
	adds r1, r7, r1
	str r1, [sp, #0x84]
	movs r2, #0x81
	lsls r2, r2, #2
	adds r2, r7, r2
	str r2, [sp, #0x88]
	mov r4, sb
	movs r3, #0x88
	mov r8, r3
	movs r6, #0xc0
	lsls r6, r6, #2
	adds r6, r7, r6
	str r6, [sp, #0x90]
_08099C80:
	ldr r1, _08099E78 @ =0x000001FF
	adds r0, r1, #0
	mov r2, r8
	ands r2, r0
	ldrh r0, [r4, #2]
	ldr r3, _08099E7C @ =0xFFFFFE00
	adds r1, r3, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r4, #2]
	ldr r6, [sp, #0x90]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl func_08007D4C
	lsls r1, r5, #1
	adds r0, r0, r1
	ldr r1, [sp, #0x7c]
	adds r0, r0, r1
	ldr r2, _08099E80 @ =0x000003FF
	adds r1, r2, #0
	ands r0, r1
	ldrh r1, [r4, #4]
	ldr r3, _08099E84 @ =0xFFFFFC00
	adds r2, r3, #0
	ands r1, r2
	orrs r1, r0
	strh r1, [r4, #4]
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _08099CDA
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp, #0x5c]
	str r0, [r1]
	mov r6, sb
	ldrh r0, [r6, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_08099CDA:
	movs r0, #8
	add r8, r0
	adds r5, #1
	cmp r5, #0xb
	ble _08099C80
_08099CE4:
	ldr r1, _08099E88 @ =0x00000369
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08099D7C
	mov r3, sb
	ldrb r2, [r3, #3]
	movs r1, #0x3f
	adds r0, r1, #0
	ands r0, r2
	strb r0, [r3, #3]
	movs r2, #0x18
	add r0, sp, #0x5c
	strb r2, [r0]
	ldrb r0, [r3, #1]
	ands r1, r0
	strb r1, [r3, #1]
	movs r5, #0
	mov r4, sb
	movs r6, #0xd0
	mov r8, r6
	movs r0, #0xc4
	lsls r0, r0, #2
	adds r0, r7, r0
	str r0, [sp, #0x90]
_08099D16:
	ldr r1, _08099E78 @ =0x000001FF
	adds r0, r1, #0
	mov r2, r8
	ands r2, r0
	ldrh r0, [r4, #2]
	ldr r3, _08099E7C @ =0xFFFFFE00
	adds r1, r3, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r4, #2]
	ldr r6, [sp, #0x90]
	ldr r1, [r6, #4]
	adds r0, r6, #0
	bl func_08007D4C
	ldr r2, _08099E88 @ =0x00000369
	adds r1, r7, r2
	adds r1, r1, r5
	ldrb r2, [r1]
	adds r2, r2, r0
	ldr r3, _08099E80 @ =0x000003FF
	adds r0, r3, #0
	ands r2, r0
	ldrh r0, [r4, #4]
	ldr r6, _08099E84 @ =0xFFFFFC00
	adds r1, r6, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r4, #4]
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldrb r2, [r3]
	cmp r2, #0x7f
	bhi _08099D72
	lsls r1, r2, #3
	adds r1, #4
	adds r1, r3, r1
	ldr r0, [sp, #0x5c]
	str r0, [r1]
	mov r6, sb
	ldrh r0, [r6, #4]
	strh r0, [r1, #4]
	adds r0, r2, #1
	strb r0, [r3]
_08099D72:
	movs r0, #8
	add r8, r0
	adds r5, #1
	cmp r5, #2
	ble _08099D16
_08099D7C:
	movs r1, #0xa8
	lsls r1, r1, #2
	adds r5, r7, r1
	movs r2, #0x9c
	lsls r2, r2, #2
	adds r4, r7, r2
	adds r0, r4, #0
	bl func_0805E8F0
	str r0, [r5]
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x80]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sl
	mov r1, sl
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	mov r0, sl
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r4, r6}
	stm r1!, {r2, r4, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	mov r1, sp
	movs r6, #0xa1
	lsls r6, r6, #2
	adds r0, r7, r6
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldr r0, [r0]
	str r0, [r1]
	movs r6, #0xc6
	lsls r6, r6, #2
	adds r4, r7, r6
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r0, #2
	strh r0, [r1, #8]
	mov r0, sp
	movs r2, #1
	mov sb, r2
	mov r3, sb
	strb r3, [r0, #0x18]
	ldrb r0, [r5]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08099E10
	b _08099F60
_08099E10:
	ldr r0, [sp, #0x24]
	movs r1, #0
	cmp r0, #0
	beq _08099E1C
	mov r5, sp
	ldrh r1, [r5, #0x28]
_08099E1C:
	cmp r1, #0
	bne _08099E22
	b _08099F60
_08099E22:
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r6, [sp, #0x24]
	mov r8, r6
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _08099E44
	mov r0, sp
	ldrh r3, [r0, #0x28]
_08099E44:
	str r5, [sp, #0x90]
	lsls r2, r2, #5
	ldr r1, _08099E8C @ =0x06010000
	adds r2, r2, r1
	mov r0, sl
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _08099E90
	cmp r1, #0
	beq _08099E6C
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08099E6C:
	ldr r5, [sp, #0x90]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _08099F60
	.align 2, 0
_08099E78: .4byte 0x000001FF
_08099E7C: .4byte 0xFFFFFE00
_08099E80: .4byte 0x000003FF
_08099E84: .4byte 0xFFFFFC00
_08099E88: .4byte 0x00000369
_08099E8C: .4byte 0x06010000
_08099E90:
	mov r8, r1
	mov r6, sb
	str r6, [sp, #0x68]
	ldr r1, [sp, #0x90]
	ldr r0, [r1]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x64]
	add r1, sp, #0x68
	add r0, sp, #0x64
	cmp r4, #1
	bhs _08099EAC
	adds r0, r1, #0
_08099EAC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _08099ECA
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _08099ECE
	mov r0, sb
	bl func_080D3BC0
	b _08099ECE
_08099ECA:
	movs r0, #0
	mov sb, r0
_08099ECE:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r3, [sp, #0x90]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _08099EF4
_08099EDC:
	cmp r3, #0
	beq _08099EEC
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08099EEC:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _08099EDC
_08099EF4:
	adds r5, r3, #0
	ldr r0, [sp, #0x68]
	cmp r0, #1
	bne _08099F10
	cmp r5, #0
	beq _08099F0C
	adds r0, r5, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_08099F0C:
	adds r5, #0x10
	b _08099F38
_08099F10:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _08099F36
_08099F18:
	cmp r2, #0
	beq _08099F28
	adds r0, r2, #0
	add r1, sp, #0x3c
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_08099F28:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _08099F18
_08099F36:
	adds r5, r2, #0
_08099F38:
	ldr r6, [sp, #0x90]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _08099F4A
_08099F44:
	adds r1, #0x10
	cmp r1, r2
	bne _08099F44
_08099F4A:
	cmp r0, #0
	beq _08099F52
	bl free
_08099F52:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	ldr r2, [sp, #0x90]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_08099F60:
	movs r6, #0
	mov r5, sp
	ldr r3, _0809A0E4 @ =0x08117838
	mov r8, r3
_08099F68:
	lsls r0, r6, #2
	ldr r4, _0809A0E8 @ =0x00002BB0
	adds r0, r0, r4
	adds r0, r7, r0
	bl IsEmpty__C12RucksackItem
	lsls r0, r0, #0x18
	adds r4, r6, #1
	cmp r0, #0
	bne _08099FA8
	lsls r1, r4, #2
	add r1, r8
	ldrb r0, [r1]
	adds r0, #8
	strh r0, [r5]
	ldrb r0, [r1, #1]
	strh r0, [r5, #2]
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08099FA0
	mov r0, sp
	ldrh r2, [r0, #0x20]
_08099FA0:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_08099FA8:
	ldr r2, _0809A0EC @ =0x00002B90
	adds r1, r7, r2
	ldr r3, _0809A0F0 @ =0x00002BA7
	adds r0, r7, r3
	ldrb r1, [r1]
	adds r0, r0, r1
	ldrb r0, [r0]
	asrs r0, r6
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _08099FEC
	lsls r1, r4, #2
	add r1, r8
	ldrb r0, [r1]
	adds r0, #0x80
	strh r0, [r5]
	ldrb r0, [r1, #1]
	strh r0, [r5, #2]
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _08099FE4
	mov r6, sp
	ldrh r2, [r6, #0x20]
_08099FE4:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
_08099FEC:
	adds r6, r4, #0
	cmp r6, #7
	ble _08099F68
	movs r0, #0xfc
	lsls r0, r0, #1
	adds r5, r7, r0
	movs r1, #0xe4
	lsls r1, r1, #1
	adds r4, r7, r1
	adds r0, r4, #0
	bl func_0805E8F0
	str r0, [r5]
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x84]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r0, sl
	mov r1, sl
	movs r2, #0x20
	bl memcpy
	add r1, sp, #0x1c
	mov r0, sl
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r4, r6}
	stm r1!, {r2, r4, r6}
	ldm r0!, {r3, r4}
	stm r1!, {r3, r4}
	mov r1, sp
	movs r6, #0xee
	lsls r6, r6, #1
	adds r0, r7, r6
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0xe8
	strh r0, [r1]
	movs r0, #0x28
	strh r0, [r1, #2]
	movs r6, #0xb8
	lsls r6, r6, #2
	adds r4, r7, r6
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	movs r1, #0xba
	lsls r1, r1, #2
	adds r0, r7, r1
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	mov r0, sp
	movs r1, #1
	movs r2, #1
	mov sb, r2
	mov r3, sb
	strh r3, [r0, #8]
	strb r1, [r0, #0x18]
	ldrb r0, [r5]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0809A090
	b _0809A1C8
_0809A090:
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r6, [sp, #0x24]
	mov r8, r6
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _0809A0B2
	mov r0, sp
	ldrh r3, [r0, #0x28]
_0809A0B2:
	str r5, [sp, #0x90]
	lsls r2, r2, #5
	ldr r1, _0809A0F4 @ =0x06010000
	adds r2, r2, r1
	mov r0, sl
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0809A0F8
	cmp r1, #0
	beq _0809A0DA
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0809A0DA:
	ldr r5, [sp, #0x90]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0809A1C8
	.align 2, 0
_0809A0E4: .4byte 0x08117838
_0809A0E8: .4byte 0x00002BB0
_0809A0EC: .4byte 0x00002B90
_0809A0F0: .4byte 0x00002BA7
_0809A0F4: .4byte 0x06010000
_0809A0F8:
	mov r8, r1
	mov r6, sb
	str r6, [sp, #0x70]
	ldr r1, [sp, #0x90]
	ldr r0, [r1]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x6c]
	add r1, sp, #0x70
	add r0, sp, #0x6c
	cmp r4, #1
	bhs _0809A114
	adds r0, r1, #0
_0809A114:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0809A132
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0809A136
	mov r0, sb
	bl func_080D3BC0
	b _0809A136
_0809A132:
	movs r0, #0
	mov sb, r0
_0809A136:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r3, [sp, #0x90]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _0809A15C
_0809A144:
	cmp r3, #0
	beq _0809A154
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0809A154:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0809A144
_0809A15C:
	adds r5, r3, #0
	ldr r0, [sp, #0x70]
	cmp r0, #1
	bne _0809A178
	cmp r5, #0
	beq _0809A174
	adds r0, r5, #0
	add r1, sp, #0x3c
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0809A174:
	adds r5, #0x10
	b _0809A1A0
_0809A178:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0809A19E
_0809A180:
	cmp r2, #0
	beq _0809A190
	adds r0, r2, #0
	add r1, sp, #0x3c
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0809A190:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _0809A180
_0809A19E:
	adds r5, r2, #0
_0809A1A0:
	ldr r6, [sp, #0x90]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0809A1B2
_0809A1AC:
	adds r1, #0x10
	cmp r1, r2
	bne _0809A1AC
_0809A1B2:
	cmp r0, #0
	beq _0809A1BA
	bl free
_0809A1BA:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	ldr r2, [sp, #0x90]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0809A1C8:
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0809A1DE
	mov r4, sp
	ldrh r2, [r4, #0x20]
_0809A1DE:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
	movs r6, #0x8c
	lsls r6, r6, #2
	adds r5, r7, r6
	movs r0, #0x80
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r4, #0
	bl func_0805E8F0
	str r0, [r5]
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	lsls r2, r2, #2
	ldr r4, [sp, #0x88]
	ldr r0, [r4]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	mov r4, sl
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x1c
	ldm r4!, {r1, r2, r6}
	stm r0!, {r1, r2, r6}
	ldm r4!, {r1, r3, r6}
	stm r0!, {r1, r3, r6}
	ldm r4!, {r2, r3}
	stm r0!, {r2, r3}
	mov r1, sp
	movs r4, #0x85
	lsls r4, r4, #2
	adds r0, r7, r4
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	ldm r0!, {r2, r4, r6}
	stm r1!, {r2, r4, r6}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r0, #0xe8
	strh r0, [r1]
	movs r0, #0x50
	strh r0, [r1, #2]
	movs r3, #0xb8
	lsls r3, r3, #2
	adds r4, r7, r3
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	mov r1, sp
	adds r0, #2
	strh r0, [r1, #6]
	movs r6, #0xba
	lsls r6, r6, #2
	adds r0, r7, r6
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	mov r0, sp
	movs r1, #1
	movs r2, #1
	mov sb, r2
	mov r3, sb
	strh r3, [r0, #8]
	strb r1, [r0, #0x18]
	ldrb r0, [r5]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0809A286
	b _0809A3B0
_0809A286:
	adds r0, r7, #0
	bl func_08008910
	adds r5, r0, #0
	ldr r6, [sp, #0x24]
	mov r8, r6
	ldr r1, [r4, #4]
	adds r0, r4, #0
	bl func_08007D4C
	adds r2, r0, #0
	ldr r0, [sp, #0x24]
	movs r3, #0
	cmp r0, #0
	beq _0809A2A8
	mov r0, sp
	ldrh r3, [r0, #0x28]
_0809A2A8:
	str r5, [sp, #0x90]
	lsls r2, r2, #5
	ldr r1, _0809A2DC @ =0x06010040
	adds r2, r2, r1
	mov r0, sl
	mov r1, r8
	bl func_08008F0C
	ldr r1, [r5, #4]
	ldr r0, [r5, #0xc]
	cmp r1, r0
	beq _0809A2E0
	cmp r1, #0
	beq _0809A2D0
	adds r0, r1, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0809A2D0:
	ldr r5, [sp, #0x90]
	ldr r0, [r5, #4]
	adds r0, #0x10
	str r0, [r5, #4]
	b _0809A3B0
	.align 2, 0
_0809A2DC: .4byte 0x06010040
_0809A2E0:
	mov r8, r1
	mov r6, sb
	str r6, [sp, #0x78]
	ldr r1, [sp, #0x90]
	ldr r0, [r1]
	mov r2, r8
	subs r0, r2, r0
	asrs r4, r0, #4
	str r4, [sp, #0x74]
	add r1, sp, #0x78
	add r0, sp, #0x74
	cmp r4, #1
	bhs _0809A2FC
	adds r0, r1, #0
_0809A2FC:
	ldr r0, [r0]
	adds r0, r4, r0
	cmp r0, #0
	beq _0809A31A
	lsls r4, r0, #4
	adds r0, r4, #0
	bl malloc
	mov sb, r4
	cmp r0, #0
	bne _0809A31E
	mov r0, sb
	bl func_080D3BC0
	b _0809A31E
_0809A31A:
	movs r0, #0
	mov sb, r0
_0809A31E:
	adds r5, r0, #0
	str r5, [sp, #0x94]
	ldr r3, [sp, #0x90]
	ldr r2, [r3]
	adds r3, r5, #0
	cmp r2, r8
	beq _0809A344
_0809A32C:
	cmp r3, #0
	beq _0809A33C
	adds r0, r3, #0
	adds r1, r2, #0
	ldm r1!, {r4, r5, r6}
	stm r0!, {r4, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0809A33C:
	adds r2, #0x10
	adds r3, #0x10
	cmp r2, r8
	bne _0809A32C
_0809A344:
	adds r5, r3, #0
	ldr r0, [sp, #0x78]
	cmp r0, #1
	bne _0809A360
	cmp r5, #0
	beq _0809A35C
	adds r0, r5, #0
	mov r1, sl
	ldm r1!, {r2, r3, r4}
	stm r0!, {r2, r3, r4}
	ldr r1, [r1]
	str r1, [r0]
_0809A35C:
	adds r5, #0x10
	b _0809A388
_0809A360:
	mov r8, r0
	adds r2, r5, #0
	cmp r0, #0
	beq _0809A386
_0809A368:
	cmp r2, #0
	beq _0809A378
	adds r0, r2, #0
	mov r1, sl
	ldm r1!, {r3, r5, r6}
	stm r0!, {r3, r5, r6}
	ldr r1, [r1]
	str r1, [r0]
_0809A378:
	movs r4, #1
	rsbs r4, r4, #0
	add r8, r4
	adds r2, #0x10
	mov r5, r8
	cmp r5, #0
	bne _0809A368
_0809A386:
	adds r5, r2, #0
_0809A388:
	ldr r6, [sp, #0x90]
	ldr r2, [r6, #4]
	ldr r0, [r6]
	adds r1, r0, #0
	cmp r0, r2
	beq _0809A39A
_0809A394:
	adds r1, #0x10
	cmp r1, r2
	bne _0809A394
_0809A39A:
	cmp r0, #0
	beq _0809A3A2
	bl free
_0809A3A2:
	ldr r0, [sp, #0x94]
	add r0, sb
	ldr r1, [sp, #0x94]
	ldr r2, [sp, #0x90]
	str r1, [r2]
	str r5, [r2, #4]
	str r0, [r2, #0xc]
_0809A3B0:
	adds r0, r7, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0809A3C6
	mov r4, sp
	ldrh r2, [r4, #0x20]
_0809A3C6:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
	add sp, #0x98
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0809A3E0
func_0809A3E0: @ 0x0809A3E0
	push {r4, r5, r6, lr}
	sub sp, #0x5c
	adds r5, r0, #0
	mov r1, sp
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	strh r0, [r1, #2]
	strh r0, [r1, #4]
	strh r0, [r1, #6]
	strh r0, [r1, #8]
	str r0, [sp, #0xc]
	strb r2, [r1, #0x10]
	strb r2, [r1, #0x11]
	str r0, [sp, #0x14]
	strb r2, [r1, #0x18]
	add r6, sp, #0x1c
	str r0, [sp, #0x1c]
	strh r0, [r6, #4]
	add r1, sp, #0x24
	str r0, [sp, #0x24]
	strh r0, [r1, #4]
	add r1, sp, #0x2c
	str r0, [sp, #0x2c]
	strh r0, [r1, #4]
	add r1, sp, #0x34
	str r0, [sp, #0x34]
	strh r0, [r1, #4]
	movs r0, #0x8e
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl func_0805E8F0
	ldr r1, [r4]
	ldr r3, [r1]
	ldrh r2, [r4, #0xc]
	movs r4, #0x8f
	lsls r4, r4, #2
	adds r0, r5, r4
	lsls r2, r2, #2
	ldr r0, [r0]
	adds r0, r0, r2
	ldrh r2, [r0]
	add r0, sp, #0x3c
	ldr r3, [r3, #0x10]
	bl _call_via_r3
	add r4, sp, #0x3c
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl memcpy
	adds r0, r6, #0
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2, r3}
	stm r0!, {r1, r2, r3}
	ldm r4!, {r1, r2}
	stm r0!, {r1, r2}
	mov r1, sp
	movs r3, #0x93
	lsls r3, r3, #2
	adds r0, r5, r3
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	mov r1, sp
	movs r4, #0xd8
	lsls r4, r4, #2
	adds r0, r5, r4
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r2, _0809A4D0 @ =0x00000362
	adds r0, r5, r2
	ldrh r0, [r0]
	strh r0, [r1, #2]
	movs r3, #0xbc
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r1, [r0, #4]
	bl func_08007D4C
	mov r1, sp
	strh r0, [r1, #6]
	subs r4, #0x68
	adds r0, r5, r4
	ldr r1, [r0, #4]
	bl func_080074C0
	mov r1, sp
	strh r0, [r1, #4]
	movs r2, #1
	movs r0, #1
	strh r0, [r1, #8]
	mov r0, sp
	strb r2, [r0, #0x18]
	adds r0, r5, #0
	bl func_08008920
	adds r3, r0, #0
	ldr r0, [sp, #0x1c]
	adds r1, r0, #0
	movs r2, #0
	cmp r1, #0
	beq _0809A4BE
	ldrh r2, [r6, #4]
_0809A4BE:
	adds r0, r3, #0
	mov r3, sp
	bl func_0805E99C
	add sp, #0x5c
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809A4D0: .4byte 0x00000362

	thumb_func_start func_0809A4D4
func_0809A4D4: @ 0x0809A4D4
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r5, r0, #0
	mov r8, r1
	adds r6, r2, #0
	lsls r4, r3, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _0809A510 @ =vtable_unk_080E824C
	str r0, [r5]
	ldr r0, _0809A514 @ =0x000033E0
	bl __builtin_new
	adds r1, r6, #0
	adds r2, r4, #0
	bl func_08094AC0
	str r0, [r5, #4]
	mov r0, r8
	ldr r1, [r0]
	movs r0, #0
	mov r2, r8
	str r0, [r2]
	str r1, [r5, #8]
	adds r0, r5, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0809A510: .4byte vtable_unk_080E824C
_0809A514: .4byte 0x000033E0

	thumb_func_start func_0809A518
func_0809A518: @ 0x0809A518
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0809A554 @ =vtable_unk_080E824C
	str r0, [r4]
	ldr r1, [r4, #8]
	cmp r1, #0
	beq _0809A534
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0809A534:
	ldr r1, [r4, #4]
	cmp r1, #0
	beq _0809A546
	ldr r0, [r1, #4]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0809A546:
	adds r0, r4, #0
	adds r1, r5, #0
	bl func_080007EC
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809A554: .4byte vtable_unk_080E824C

	thumb_func_start func_0809A558
func_0809A558: @ 0x0809A558
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, [r4, #4]
	mov r0, sp
	bl func_08094F6C
	ldr r1, [sp]
	cmp r1, #0
	beq _0809A57A
	ldr r0, [r1]
	ldr r2, [r0, #8]
	adds r0, r1, #0
	movs r1, #3
	bl _call_via_r2
_0809A57A:
	ldr r1, [r4, #8]
	movs r0, #0
	str r0, [r4, #8]
	str r1, [r5]
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start func_0809A58C
func_0809A58C: @ 0x0809A58C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	str r0, [sp, #0x24]
	str r1, [sp, #0x28]
	ldr r0, _0809A618 @ =0x0810110C
	mov r8, r0
	add r1, sp, #0x10
	movs r0, #0
	strh r0, [r1]
	ldr r2, [sp, #0x28]
	ldrh r0, [r2, #0x12]
	lsls r0, r0, #0x14
	lsrs r0, r0, #0x14
	strh r0, [r1, #6]
	mov r3, r8
	ldrh r0, [r3]
	mov sl, r1
	cmp r0, #0
	bne _0809A5BC
	b _0809A88C
_0809A5BC:
	adds r2, #2
	str r2, [sp, #0x2c]
_0809A5C0:
	movs r0, #0
	mov r4, sl
	strh r0, [r4, #2]
	strh r0, [r4, #4]
	ldr r1, [sp, #0x28]
	ldrh r0, [r1, #0x12]
	lsls r0, r0, #0x14
	lsrs r4, r0, #0x14
	ldr r2, [sp, #0x2c]
	mov r1, sp
	movs r3, #7
_0809A5D6:
	ldrh r0, [r2]
	strh r0, [r1]
	adds r2, #2
	adds r1, #2
	subs r3, #1
	cmp r3, #0
	bge _0809A5D6
	movs r2, #0
	mov ip, r2
	mov r3, r8
	ldrh r1, [r3, #6]
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r1
	adds r5, r1, #0
	cmp r0, #0
	beq _0809A610
	movs r2, #0x42
	ands r2, r4
	cmp r2, #2
	beq _0809A60C
	movs r1, #0x40
	eors r1, r2
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	mov ip, r0
_0809A60C:
	ldr r0, _0809A61C @ =0x0000FFBD
	ands r4, r0
_0809A610:
	movs r3, #0
	movs r6, #1
	adds r1, r5, #0
	b _0809A622
	.align 2, 0
_0809A618: .4byte 0x0810110C
_0809A61C: .4byte 0x0000FFBD
_0809A620:
	adds r3, #1
_0809A622:
	cmp r3, #0xb
	bgt _0809A640
	adds r2, r6, #0
	lsls r2, r3
	ands r2, r1
	cmp r2, #0
	beq _0809A620
	adds r0, r4, #0
	ands r0, r2
	cmp r0, #0
	beq _0809A63C
	eors r4, r2
	b _0809A620
_0809A63C:
	movs r0, #1
	mov ip, r0
_0809A640:
	cmp r4, #0
	beq _0809A684
	mov r1, r8
	ldr r0, [r1, #0x10]
	cmp r0, #0
	beq _0809A67C
	adds r2, r0, #0
	ldrh r1, [r2]
	cmp r1, #0
	beq _0809A67C
	mov r3, sl
_0809A656:
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _0809A674
	eors r4, r1
	movs r0, #2
	ldrsb r0, [r2, r0]
	ldrh r1, [r3, #2]
	adds r1, r1, r0
	strh r1, [r3, #2]
	movs r0, #3
	ldrsb r0, [r2, r0]
	ldrh r1, [r3, #4]
	adds r0, r0, r1
	strh r0, [r3, #4]
_0809A674:
	adds r2, #4
	ldrh r1, [r2]
	cmp r1, #0
	bne _0809A656
_0809A67C:
	cmp r4, #0
	beq _0809A684
	movs r2, #1
	mov ip, r2
_0809A684:
	mov r3, r8
	ldr r4, [r3, #8]
	ldrh r0, [r4]
	cmp r0, #0
	bne _0809A690
	b _0809A7DC
_0809A690:
	mov r7, sp
	movs r0, #0x80
	lsls r0, r0, #8
	mov sb, r0
_0809A698:
	ldr r6, _0809A6B0 @ =0x0000FFFF
	ldrh r1, [r4]
	ldr r0, _0809A6B4 @ =0x00000201
	cmp r1, r0
	beq _0809A6F2
	cmp r1, r0
	bgt _0809A6B8
	subs r0, #1
	cmp r1, r0
	beq _0809A6CC
	b _0809A76C
	.align 2, 0
_0809A6B0: .4byte 0x0000FFFF
_0809A6B4: .4byte 0x00000201
_0809A6B8:
	ldr r0, _0809A6C8 @ =0x00000202
	cmp r1, r0
	beq _0809A718
	adds r0, #1
	cmp r1, r0
	beq _0809A73E
	b _0809A76C
	.align 2, 0
_0809A6C8: .4byte 0x00000202
_0809A6CC:
	movs r1, #0
	ldrh r0, [r7]
	subs r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bls _0809A74C
_0809A6DA:
	adds r1, #1
	cmp r1, #7
	bgt _0809A7AC
	lsls r0, r1, #1
	add r0, sp
	ldrh r0, [r0]
	subs r0, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bhi _0809A6DA
	b _0809A766
_0809A6F2:
	movs r1, #0
	ldrh r0, [r7]
	subs r0, #0x1d
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bls _0809A74C
_0809A700:
	adds r1, #1
	cmp r1, #7
	bgt _0809A7AC
	lsls r0, r1, #1
	add r0, sp
	ldrh r0, [r0]
	subs r0, #0x1d
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bhi _0809A700
	b _0809A766
_0809A718:
	movs r1, #0
	ldrh r0, [r7]
	subs r0, #0x23
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bls _0809A74C
_0809A726:
	adds r1, #1
	cmp r1, #7
	bgt _0809A7AC
	lsls r0, r1, #1
	add r0, sp
	ldrh r0, [r0]
	subs r0, #0x23
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bhi _0809A726
	b _0809A766
_0809A73E:
	movs r1, #0
	ldrh r0, [r7]
	subs r0, #0x17
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bhi _0809A750
_0809A74C:
	movs r6, #0
	b _0809A7AC
_0809A750:
	adds r1, #1
	cmp r1, #7
	bgt _0809A7AC
	lsls r0, r1, #1
	add r0, sp
	ldrh r0, [r0]
	subs r0, #0x17
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bhi _0809A750
_0809A766:
	lsls r0, r1, #0x10
	lsrs r6, r0, #0x10
	b _0809A7AC
_0809A76C:
	movs r2, #0
	ldrh r1, [r4]
	ldr r3, _0809A7A0 @ =0x00000FFF
	ands r3, r1
	mov r0, sb
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	mov r1, sp
_0809A77E:
	ldrh r0, [r1]
	cmp r0, r3
	bne _0809A7A4
	lsls r0, r2, #0x10
	lsrs r6, r0, #0x10
	cmp r5, #0
	beq _0809A7AC
	movs r2, #0x80
	lsls r2, r2, #8
_0809A790:
	adds r4, #2
	ldrh r1, [r4]
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _0809A790
	b _0809A7AC
	.align 2, 0
_0809A7A0: .4byte 0x00000FFF
_0809A7A4:
	adds r1, #2
	adds r2, #1
	cmp r2, #7
	ble _0809A77E
_0809A7AC:
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _0809A7C8
	ldrh r1, [r4]
	mov r0, sb
	ands r0, r1
	cmp r0, #0
	bne _0809A7D2
	movs r2, #1
	mov ip, r2
	b _0809A7DC
_0809A7C8:
	lsls r0, r0, #1
	mov r3, sp
	adds r1, r3, r0
	movs r0, #0
	strh r0, [r1]
_0809A7D2:
	adds r4, #2
	ldrh r0, [r4]
	cmp r0, #0
	beq _0809A7DC
	b _0809A698
_0809A7DC:
	movs r2, #0
	mov r1, sp
	movs r3, #7
_0809A7E2:
	ldrh r0, [r1]
	cmp r0, #0
	beq _0809A7F2
	lsls r0, r2, #0x10
	movs r4, #0x80
	lsls r4, r4, #9
	adds r0, r0, r4
	lsrs r2, r0, #0x10
_0809A7F2:
	adds r1, #2
	subs r3, #1
	cmp r3, #0
	bge _0809A7E2
	cmp r2, #0
	beq _0809A848
	mov r1, r8
	ldr r0, [r1, #0xc]
	cmp r0, #0
	beq _0809A848
	adds r2, r0, #0
	ldrh r0, [r2]
	cmp r0, #0
	beq _0809A848
	mov r3, sl
	movs r7, #0
_0809A812:
	movs r4, #0
	adds r6, r2, #4
	ldrh r5, [r2]
	mov r1, sp
_0809A81A:
	ldrh r0, [r1]
	cmp r0, r5
	bne _0809A838
	strh r7, [r1]
	movs r0, #2
	ldrsb r0, [r2, r0]
	ldrh r1, [r3, #2]
	adds r1, r1, r0
	strh r1, [r3, #2]
	movs r0, #3
	ldrsb r0, [r2, r0]
	ldrh r2, [r3, #4]
	adds r0, r0, r2
	strh r0, [r3, #4]
	b _0809A840
_0809A838:
	adds r1, #2
	adds r4, #1
	cmp r4, #7
	ble _0809A81A
_0809A840:
	adds r2, r6, #0
	ldrh r0, [r2]
	cmp r0, #0
	bne _0809A812
_0809A848:
	movs r2, #0
	mov r1, sp
	movs r3, #7
_0809A84E:
	ldrh r0, [r1]
	cmp r0, #0
	beq _0809A85E
	lsls r0, r2, #0x10
	movs r4, #0x80
	lsls r4, r4, #9
	adds r0, r0, r4
	lsrs r2, r0, #0x10
_0809A85E:
	adds r1, #2
	subs r3, #1
	cmp r3, #0
	bge _0809A84E
	cmp r2, #0
	beq _0809A86E
	movs r0, #1
	mov ip, r0
_0809A86E:
	mov r1, ip
	cmp r1, #0
	bne _0809A87E
	mov r2, r8
	ldrh r0, [r2]
	mov r3, sl
	strh r0, [r3]
	b _0809A88C
_0809A87E:
	movs r4, #0x14
	add r8, r4
	mov r1, r8
	ldrh r0, [r1]
	cmp r0, #0
	beq _0809A88C
	b _0809A5C0
_0809A88C:
	ldr r1, [sp, #0x24]
	mov r0, sl
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3}
	stm r1!, {r2, r3}
	ldr r0, [sp, #0x24]
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0809A8AC
func_0809A8AC: @ 0x0809A8AC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r5, r0, #0
	adds r2, r5, #0
	movs r4, #0x7f
	ldr r0, _0809A92C @ =0x0810110C
	mov sb, r0
	movs r6, #0
	ldr r1, _0809A930 @ =0xFFFFF000
	mov r8, r1
	movs r0, #0x11
	rsbs r0, r0, #0
	mov ip, r0
	movs r7, #1
	rsbs r7, r7, #0
_0809A8CE:
	strh r6, [r2]
	ldrh r1, [r2, #0x12]
	mov r0, r8
	ands r0, r1
	strh r0, [r2, #0x12]
	ldrb r1, [r2, #0x13]
	mov r0, ip
	ands r0, r1
	strb r0, [r2, #0x13]
	adds r3, r2, #0
	adds r3, #0x14
	subs r4, #1
	movs r1, #7
	adds r0, r2, #0
	adds r0, #0x10
_0809A8EC:
	strh r6, [r0]
	subs r0, #2
	subs r1, #1
	cmp r1, #0
	bge _0809A8EC
	adds r2, r3, #0
	cmp r4, r7
	bne _0809A8CE
	movs r1, #0xa0
	lsls r1, r1, #4
	adds r0, r5, r1
	movs r1, #0
	strb r1, [r0]
	ldr r2, _0809A934 @ =0x00000A01
	adds r0, r5, r2
	strb r1, [r0]
	adds r2, #1
	adds r0, r5, r2
	strb r1, [r0]
	adds r2, #1
	adds r0, r5, r2
	strb r1, [r0]
	adds r2, #1
	adds r0, r5, r2
	strb r1, [r0]
	adds r2, #1
	adds r0, r5, r2
	strb r1, [r0]
	movs r0, #0
	movs r3, #0
	mov r2, sb
	b _0809A950
	.align 2, 0
_0809A92C: .4byte 0x0810110C
_0809A930: .4byte 0xFFFFF000
_0809A934: .4byte 0x00000A01
_0809A938:
	cmp r1, r0
	beq _0809A94E
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r0, r5, r0
	strh r1, [r0]
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldrh r0, [r2]
_0809A94E:
	adds r2, #0x14
_0809A950:
	ldrh r1, [r2]
	cmp r1, #0
	bne _0809A938
	ldr r1, _0809A96C @ =0x00000A06
	adds r0, r5, r1
	strb r3, [r0]
	adds r0, r5, #0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809A96C: .4byte 0x00000A06

	thumb_func_start func_0809A970
func_0809A970: @ 0x0809A970
	push {r4, lr}
	lsls r3, r2, #2
	adds r3, r3, r2
	lsls r3, r3, #2
	adds r0, r0, r3
	ldrh r2, [r0]
	strh r2, [r1]
	ldrh r3, [r0, #0x12]
	lsls r3, r3, #0x14
	lsrs r3, r3, #0x14
	ldrh r4, [r1, #0x12]
	ldr r2, _0809A9BC @ =0xFFFFF000
	ands r2, r4
	orrs r2, r3
	strh r2, [r1, #0x12]
	ldrb r2, [r0, #0x13]
	movs r3, #0x10
	ands r3, r2
	ldrb r4, [r1, #0x13]
	movs r2, #0x11
	rsbs r2, r2, #0
	ands r2, r4
	orrs r2, r3
	strb r2, [r1, #0x13]
	adds r2, r0, #2
	adds r1, #2
	movs r3, #7
_0809A9A6:
	ldrh r0, [r2]
	strh r0, [r1]
	adds r2, #2
	adds r1, #2
	subs r3, #1
	cmp r3, #0
	bge _0809A9A6
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809A9BC: .4byte 0xFFFFF000

	thumb_func_start func_0809A9C0
func_0809A9C0: @ 0x0809A9C0
	push {r4, r5, r6, r7, lr}
	adds r2, r1, #0
	adds r3, r0, #0
	movs r1, #0
	ldr r4, _0809AA10 @ =0x00000A06
	adds r0, r3, r4
	ldrb r4, [r0]
	cmp r1, r4
	bge _0809AA22
	ldrh r5, [r2]
	ldr r7, _0809AA14 @ =0xFFFFF000
	adds r6, r2, #2
	adds r4, r0, #0
_0809A9DA:
	ldrh r0, [r3]
	cmp r0, r5
	bne _0809AA18
	ldrb r0, [r3, #0x13]
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r3, #0x13]
	ldrh r1, [r2, #0x12]
	lsls r1, r1, #0x14
	lsrs r1, r1, #0x14
	ldrh r2, [r3, #0x12]
	adds r0, r7, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #0x12]
	adds r2, r6, #0
	adds r1, r3, #2
	movs r3, #7
_0809A9FE:
	ldrh r0, [r2]
	strh r0, [r1]
	adds r2, #2
	adds r1, #2
	subs r3, #1
	cmp r3, #0
	bge _0809A9FE
	b _0809AA22
	.align 2, 0
_0809AA10: .4byte 0x00000A06
_0809AA14: .4byte 0xFFFFF000
_0809AA18:
	adds r3, #0x14
	adds r1, #1
	ldrb r0, [r4]
	cmp r1, r0
	blt _0809A9DA
_0809AA22:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0809AA28
func_0809AA28: @ 0x0809AA28
	push {lr}
	adds r1, r0, #0
	movs r3, #0
	ldr r2, _0809AA54 @ =0x00000A06
	adds r0, r1, r2
	ldrb r0, [r0]
	cmp r3, r0
	bge _0809AA4E
	adds r2, r1, #0
	adds r1, r0, #0
_0809AA3C:
	ldrb r0, [r2, #0x13]
	lsls r0, r0, #0x1b
	cmp r0, #0
	bge _0809AA46
	adds r3, #1
_0809AA46:
	adds r2, #0x14
	subs r1, #1
	cmp r1, #0
	bne _0809AA3C
_0809AA4E:
	adds r0, r3, #0
	pop {r1}
	bx r1
	.align 2, 0
_0809AA54: .4byte 0x00000A06

	thumb_func_start func_0809AA58
func_0809AA58: @ 0x0809AA58
	push {lr}
	adds r2, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r3, #0
	adds r0, r1, #0
	subs r0, #0x9b
	cmp r0, #5
	bhi _0809AAC8
	lsls r0, r0, #2
	ldr r1, _0809AA74 @ =_0809AA78
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809AA74: .4byte _0809AA78
_0809AA78: @ jump table
	.4byte _0809AA90 @ case 0
	.4byte _0809AA96 @ case 1
	.4byte _0809AAA0 @ case 2
	.4byte _0809AAA8 @ case 3
	.4byte _0809AAB0 @ case 4
	.4byte _0809AAB8 @ case 5
_0809AA90:
	movs r0, #0xa0
	lsls r0, r0, #4
	b _0809AABA
_0809AA96:
	ldr r0, _0809AA9C @ =0x00000A01
	b _0809AABA
	.align 2, 0
_0809AA9C: .4byte 0x00000A01
_0809AAA0:
	ldr r0, _0809AAA4 @ =0x00000A02
	b _0809AABA
	.align 2, 0
_0809AAA4: .4byte 0x00000A02
_0809AAA8:
	ldr r0, _0809AAAC @ =0x00000A03
	b _0809AABA
	.align 2, 0
_0809AAAC: .4byte 0x00000A03
_0809AAB0:
	ldr r0, _0809AAB4 @ =0x00000A04
	b _0809AABA
	.align 2, 0
_0809AAB4: .4byte 0x00000A04
_0809AAB8:
	ldr r0, _0809AAD0 @ =0x00000A05
_0809AABA:
	adds r1, r2, r0
	ldrb r0, [r1]
	cmp r0, #0
	bne _0809AAC8
	movs r0, #1
	strb r0, [r1]
	movs r3, #1
_0809AAC8:
	adds r0, r3, #0
	pop {r1}
	bx r1
	.align 2, 0
_0809AAD0: .4byte 0x00000A05

	thumb_func_start func_0809AAD4
func_0809AAD4: @ 0x0809AAD4
	push {lr}
	adds r1, r0, #0
	movs r3, #0
	ldr r2, _0809AB04 @ =0x00000A06
	adds r0, r1, r2
	ldrb r0, [r0]
	cmp r3, r0
	bge _0809AAFE
	adds r2, r0, #0
_0809AAE6:
	ldrh r0, [r1]
	cmp r0, #0xab
	bhi _0809AAF6
	ldrb r0, [r1, #0x13]
	lsls r0, r0, #0x1b
	cmp r0, #0
	bge _0809AAF6
	adds r3, #1
_0809AAF6:
	adds r1, #0x14
	subs r2, #1
	cmp r2, #0
	bne _0809AAE6
_0809AAFE:
	adds r0, r3, #0
	pop {r1}
	bx r1
	.align 2, 0
_0809AB04: .4byte 0x00000A06

	thumb_func_start func_0809AB08
func_0809AB08: @ 0x0809AB08
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	mov r8, r0
	adds r5, r1, #0
	mov ip, r2
	mov r0, sp
	movs r1, #0
	strh r1, [r0]
	movs r6, #0
	movs r2, #0
	ldr r1, _0809AB58 @ =0x00000A06
	adds r0, r5, r1
	ldrb r0, [r0]
	cmp r2, r0
	bge _0809AB6E
	add r4, sp, #0x14
	adds r3, r5, #0
	adds r1, r5, #0
_0809AB30:
	ldrh r0, [r3]
	cmp r0, #0xab
	bhi _0809AB5E
	ldrb r0, [r3, #0x13]
	lsls r0, r0, #0x1b
	cmp r0, #0
	bge _0809AB5E
	cmp r6, ip
	bne _0809AB5C
	adds r0, r4, #0
	bl func_0809A58C
	mov r1, sp
	adds r0, r4, #0
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	b _0809AB6E
	.align 2, 0
_0809AB58: .4byte 0x00000A06
_0809AB5C:
	adds r6, #1
_0809AB5E:
	adds r3, #0x14
	adds r1, #0x14
	adds r2, #1
	ldr r7, _0809AB88 @ =0x00000A06
	adds r0, r5, r7
	ldrb r0, [r0]
	cmp r2, r0
	blt _0809AB30
_0809AB6E:
	mov r1, r8
	mov r0, sp
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r7}
	stm r1!, {r2, r7}
	mov r0, r8
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809AB88: .4byte 0x00000A06

	thumb_func_start func_0809AB8C
func_0809AB8C: @ 0x0809AB8C
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xfa
	lsls r0, r0, #1
	str r0, [r4]
	ldrb r1, [r4, #4]
	movs r0, #2
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r4, #4]
	movs r1, #0
	str r1, [r4, #8]
	adds r0, r4, #0
	adds r0, #0xfc
	str r1, [r0]
	movs r2, #0x90
	lsls r2, r2, #1
	adds r0, r4, r2
	str r1, [r0]
	adds r2, #4
	adds r0, r4, r2
	str r1, [r0]
	adds r2, #4
	adds r0, r4, r2
	str r1, [r0]
	adds r2, #4
	adds r0, r4, r2
	str r1, [r0]
	adds r0, r4, #0
	bl func_0809AE6C
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start func_0809ABD8
func_0809ABD8: @ 0x0809ABD8
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r3, r0, #0
	adds r5, r1, #0
	adds r4, r3, #0
	adds r4, #0xfc
	movs r0, #0
	ldr r1, [r4]
	cmp r1, #0
	bne _0809ABEE
	movs r0, #1
_0809ABEE:
	cmp r0, #0
	beq _0809AC14
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	cmp r1, #3
	bhi _0809AC14
	lsls r0, r1, #3
	adds r0, #4
	adds r2, r4, r0
	cmp r2, #0
	beq _0809AC0E
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r2]
	str r1, [r2, #4]
_0809AC0E:
	ldr r0, [r4]
	adds r0, #1
	str r0, [r4]
_0809AC14:
	movs r0, #0
	ldr r1, [r3, #8]
	adds r4, r3, #0
	adds r4, #8
	cmp r1, #0
	bne _0809AC22
	movs r0, #1
_0809AC22:
	cmp r0, #0
	beq _0809AC48
	movs r0, #0
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	cmp r1, #0x1d
	bhi _0809AC48
	lsls r0, r1, #3
	adds r0, #4
	adds r2, r4, r0
	cmp r2, #0
	beq _0809AC42
	ldr r0, [sp, #8]
	ldr r1, [sp, #0xc]
	str r0, [r2]
	str r1, [r2, #4]
_0809AC42:
	ldr r0, [r3, #8]
	adds r0, #1
	str r0, [r3, #8]
_0809AC48:
	ldr r0, [r3]
	adds r1, r0, #0
	ldr r6, _0809ACB4 @ =0x3B9ACA00
	subs r0, r6, r1
	cmp r0, r5
	bls _0809AC56
	adds r0, r5, #0
_0809AC56:
	adds r1, r1, r0
	str r1, [r3]
	ldr r0, _0809ACB8 @ =0x05F5E0FF
	cmp r1, r0
	bls _0809AC68
	ldrb r0, [r3, #4]
	movs r1, #2
	orrs r0, r1
	strb r0, [r3, #4]
_0809AC68:
	ldr r0, [r3, #8]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r4, r4, r0
	adds r1, r3, #0
	adds r1, #0xfc
	ldr r0, [r1]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	ldr r2, [r4]
	subs r0, r6, r2
	cmp r0, r5
	bls _0809AC8A
	adds r0, r5, #0
_0809AC8A:
	adds r0, r2, r0
	str r0, [r4]
	ldr r2, [r1]
	subs r0, r6, r2
	cmp r0, r5
	bls _0809AC98
	adds r0, r5, #0
_0809AC98:
	adds r0, r2, r0
	str r0, [r1]
	ldr r1, [r4]
	ldr r0, _0809ACBC @ =0x0001869F
	cmp r1, r0
	bls _0809ACAC
	ldrb r0, [r3, #4]
	movs r1, #1
	orrs r0, r1
	strb r0, [r3, #4]
_0809ACAC:
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809ACB4: .4byte 0x3B9ACA00
_0809ACB8: .4byte 0x05F5E0FF
_0809ACBC: .4byte 0x0001869F

	thumb_func_start func_0809ACC0
func_0809ACC0: @ 0x0809ACC0
	push {r4, r5, lr}
	sub sp, #0x10
	mov ip, r0
	adds r4, r1, #0
	mov r3, ip
	adds r3, #0xfc
	movs r0, #0
	ldr r1, [r3]
	cmp r1, #0
	bne _0809ACD6
	movs r0, #1
_0809ACD6:
	cmp r0, #0
	beq _0809ACFC
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	cmp r1, #3
	bhi _0809ACFC
	lsls r0, r1, #3
	adds r0, #4
	adds r2, r3, r0
	cmp r2, #0
	beq _0809ACF6
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r2]
	str r1, [r2, #4]
_0809ACF6:
	ldr r0, [r3]
	adds r0, #1
	str r0, [r3]
_0809ACFC:
	movs r0, #0
	mov r2, ip
	ldr r1, [r2, #8]
	mov r3, ip
	adds r3, #8
	cmp r1, #0
	bne _0809AD0C
	movs r0, #1
_0809AD0C:
	cmp r0, #0
	beq _0809AD34
	movs r0, #0
	str r0, [sp, #8]
	str r0, [sp, #0xc]
	cmp r1, #0x1d
	bhi _0809AD34
	lsls r0, r1, #3
	adds r0, #4
	adds r2, r3, r0
	cmp r2, #0
	beq _0809AD2C
	ldr r0, [sp, #8]
	ldr r1, [sp, #0xc]
	str r0, [r2]
	str r1, [r2, #4]
_0809AD2C:
	mov r1, ip
	ldr r0, [r1, #8]
	adds r0, #1
	str r0, [r1, #8]
_0809AD34:
	mov r2, ip
	ldr r0, [r2]
	cmp r4, r0
	bls _0809AD40
	movs r0, #0
	b _0809AD96
_0809AD40:
	adds r1, r0, #0
	cmp r0, r4
	bls _0809AD48
	adds r1, r4, #0
_0809AD48:
	subs r0, r0, r1
	mov r1, ip
	str r0, [r1]
	ldr r0, [r1, #8]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r3, r3, r0
	adds r1, #0xfc
	ldr r0, [r1]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	ldr r2, [r3, #4]
	ldr r5, _0809ADA0 @ =0x3B9ACA00
	subs r0, r5, r2
	cmp r0, r4
	bls _0809AD70
	adds r0, r4, #0
_0809AD70:
	adds r0, r2, r0
	str r0, [r3, #4]
	ldr r2, [r1, #4]
	subs r0, r5, r2
	cmp r0, r4
	bls _0809AD7E
	adds r0, r4, #0
_0809AD7E:
	adds r0, r2, r0
	str r0, [r1, #4]
	ldr r1, [r3, #4]
	ldr r0, _0809ADA4 @ =0x0001869F
	cmp r1, r0
	bls _0809AD94
	mov r2, ip
	ldrb r0, [r2, #4]
	movs r1, #1
	orrs r0, r1
	strb r0, [r2, #4]
_0809AD94:
	movs r0, #1
_0809AD96:
	add sp, #0x10
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0809ADA0: .4byte 0x3B9ACA00
_0809ADA4: .4byte 0x0001869F

	thumb_func_start func_0809ADA8
func_0809ADA8: @ 0x0809ADA8
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	mov ip, r0
	mov r3, ip
	adds r3, #8
	movs r1, #0
	mov r2, ip
	ldr r0, [r2, #8]
	cmp r0, #0
	bne _0809ADBE
	movs r1, #1
_0809ADBE:
	cmp r1, #0
	bne _0809ADF6
	movs r2, #0x90
	lsls r2, r2, #1
	add r2, ip
	ldr r1, [r2]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	cmp r1, r0
	bhs _0809ADDA
	str r0, [r2]
_0809ADDA:
	movs r2, #0x92
	lsls r2, r2, #1
	add r2, ip
	ldr r1, [r2]
	mov r4, ip
	ldr r0, [r4, #8]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r0, [r0, #4]
	cmp r1, r0
	bhs _0809ADF6
	str r0, [r2]
_0809ADF6:
	mov r6, ip
	adds r6, #8
	mov r0, ip
	ldr r1, [r0, #8]
	cmp r1, #0x1d
	bls _0809AE3E
	adds r5, r6, #0
	mov r7, ip
	adds r7, #0xc
_0809AE08:
	cmp r1, #0
	beq _0809AE36
	lsls r0, r1, #3
	adds r0, #4
	adds r0, r6, r0
	mov r1, ip
	adds r1, #0x14
	cmp r1, r0
	beq _0809AE30
	adds r3, r1, #0
	adds r4, r7, #0
	subs r0, r0, r3
	asrs r2, r0, #3
	cmp r2, #0
	ble _0809AE30
_0809AE26:
	ldm r3!, {r0, r1}
	stm r4!, {r0, r1}
	subs r2, #1
	cmp r2, #0
	bgt _0809AE26
_0809AE30:
	ldr r0, [r5]
	subs r0, #1
	str r0, [r5]
_0809AE36:
	mov r2, ip
	ldr r1, [r2, #8]
	cmp r1, #0x1d
	bhi _0809AE08
_0809AE3E:
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	cmp r1, #0x1d
	bhi _0809AE62
	lsls r0, r1, #3
	adds r0, #4
	adds r2, r6, r0
	cmp r2, #0
	beq _0809AE5A
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r2]
	str r1, [r2, #4]
_0809AE5A:
	mov r4, ip
	ldr r0, [r4, #8]
	adds r0, #1
	str r0, [r4, #8]
_0809AE62:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start func_0809AE6C
func_0809AE6C: @ 0x0809AE6C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov ip, r0
	mov r3, ip
	adds r3, #8
	movs r1, #0
	mov r2, ip
	ldr r0, [r2, #8]
	cmp r0, #0
	bne _0809AE8A
	movs r1, #1
_0809AE8A:
	cmp r1, #0
	bne _0809AEC2
	movs r2, #0x90
	lsls r2, r2, #1
	add r2, ip
	ldr r1, [r2]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r0, [r0]
	cmp r1, r0
	bhs _0809AEA6
	str r0, [r2]
_0809AEA6:
	movs r2, #0x92
	lsls r2, r2, #1
	add r2, ip
	ldr r1, [r2]
	mov r4, ip
	ldr r0, [r4, #8]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r3, r0
	ldr r0, [r0, #4]
	cmp r1, r0
	bhs _0809AEC2
	str r0, [r2]
_0809AEC2:
	mov r0, ip
	adds r0, #0xfc
	movs r1, #0
	ldr r3, [r0]
	adds r6, r0, #0
	cmp r3, #0
	bne _0809AED2
	movs r1, #1
_0809AED2:
	cmp r1, #0
	bne _0809AF08
	movs r2, #0x94
	lsls r2, r2, #1
	add r2, ip
	ldr r1, [r2]
	subs r0, r3, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r6, r0
	ldr r0, [r0]
	cmp r1, r0
	bhs _0809AEEE
	str r0, [r2]
_0809AEEE:
	movs r2, #0x96
	lsls r2, r2, #1
	add r2, ip
	ldr r1, [r2]
	ldr r0, [r6]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r6, r0
	ldr r0, [r0, #4]
	cmp r1, r0
	bhs _0809AF08
	str r0, [r2]
_0809AF08:
	ldr r0, [r6]
	movs r1, #8
	add r1, ip
	mov sl, r1
	add r2, sp, #8
	mov sb, r2
	movs r4, #0xc
	add r4, ip
	mov r8, r4
	cmp r0, #3
	bls _0809AF5E
	adds r4, r6, #0
	movs r7, #0x80
	lsls r7, r7, #1
	add r7, ip
_0809AF26:
	ldr r0, [r4]
	cmp r0, #0
	beq _0809AF58
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r6, r0
	movs r1, #0x84
	lsls r1, r1, #1
	add r1, ip
	cmp r1, r0
	beq _0809AF52
	adds r3, r1, #0
	adds r5, r7, #0
	subs r0, r0, r3
	asrs r2, r0, #3
	cmp r2, #0
	ble _0809AF52
_0809AF48:
	ldm r3!, {r0, r1}
	stm r5!, {r0, r1}
	subs r2, #1
	cmp r2, #0
	bgt _0809AF48
_0809AF52:
	ldr r0, [r4]
	subs r0, #1
	str r0, [r4]
_0809AF58:
	ldr r0, [r4]
	cmp r0, #3
	bhi _0809AF26
_0809AF5E:
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	adds r1, r6, #0
	ldr r0, [r1]
	cmp r0, #3
	bhi _0809AF84
	lsls r0, r0, #3
	adds r0, #4
	adds r2, r1, r0
	cmp r2, #0
	beq _0809AF7E
	ldr r0, [sp]
	ldr r1, [sp, #4]
	str r0, [r2]
	str r1, [r2, #4]
_0809AF7E:
	ldr r0, [r6]
	adds r0, #1
	str r0, [r6]
_0809AF84:
	mov r1, sb
	movs r0, #0
	str r0, [sp, #8]
	str r0, [r1, #4]
	mov r4, sl
	movs r5, #1
	adds r6, r1, #0
	mov r1, ip
	ldr r0, [r1, #8]
	cmp r5, r0
	bls _0809AFD6
	lsls r0, r0, #3
	adds r0, #4
	mov r1, r8
	adds r0, r4, r0
	cmp r1, r0
	beq _0809AFB0
	ldr r2, [sp, #8]
	ldr r3, [sp, #0xc]
_0809AFAA:
	stm r1!, {r2, r3}
	cmp r1, r0
	bne _0809AFAA
_0809AFB0:
	ldr r1, [r4]
	lsls r0, r1, #3
	adds r0, #4
	subs r3, r5, r1
	adds r2, r4, r0
	cmp r3, #0
	beq _0809AFD2
_0809AFBE:
	cmp r2, #0
	beq _0809AFCA
	ldr r0, [r6]
	ldr r1, [r6, #4]
	str r0, [r2]
	str r1, [r2, #4]
_0809AFCA:
	subs r3, #1
	adds r2, #8
	cmp r3, #0
	bne _0809AFBE
_0809AFD2:
	str r5, [r4]
	b _0809B008
_0809AFD6:
	mov r3, r8
	movs r2, #1
	ldr r0, [sp, #8]
	ldr r1, [sp, #0xc]
_0809AFDE:
	stm r3!, {r0, r1}
	subs r2, #1
	cmp r2, #0
	bne _0809AFDE
	adds r5, r3, #0
	ldr r0, [r4]
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r4, r0
	adds r2, r0, #0
	adds r1, r5, #0
	ldr r3, [r4]
	cmp r1, r2
	beq _0809B000
_0809AFFA:
	adds r1, #8
	cmp r1, r2
	bne _0809AFFA
_0809B000:
	subs r0, r0, r5
	asrs r0, r0, #3
	subs r0, r3, r0
	str r0, [r4]
_0809B008:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start func_0809B018
func_0809B018: @ 0x0809B018
	push {lr}
	adds r3, r0, #0
	adds r3, #8
	ldr r2, [r0, #8]
	cmp r1, r2
	blo _0809B028
	adds r0, #0xc
	b _0809B032
_0809B028:
	adds r0, r1, #1
	subs r0, r2, r0
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r3, r0
_0809B032:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0809B038
func_0809B038: @ 0x0809B038
	push {lr}
	adds r3, r0, #0
	adds r3, #0xfc
	ldr r2, [r3]
	cmp r1, r2
	blo _0809B04C
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r0, r1
	b _0809B056
_0809B04C:
	adds r0, r1, #1
	subs r0, r2, r0
	lsls r0, r0, #3
	adds r0, #4
	adds r0, r3, r0
_0809B056:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0809B05C
func_0809B05C: @ 0x0809B05C
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #8
	ldr r0, [r2, #8]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	movs r0, #0x90
	lsls r0, r0, #1
	adds r3, r2, r0
	ldr r2, [r3]
	ldr r0, [r1]
	cmp r2, r0
	blo _0809B07E
	adds r1, r3, #0
_0809B07E:
	ldr r0, [r1]
	pop {r1}
	bx r1

	thumb_func_start func_0809B084
func_0809B084: @ 0x0809B084
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #8
	ldr r0, [r2, #8]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	movs r0, #0x92
	lsls r0, r0, #1
	adds r3, r2, r0
	ldr r2, [r3]
	ldr r0, [r1, #4]
	adds r1, #4
	cmp r2, r0
	blo _0809B0A8
	adds r1, r3, #0
_0809B0A8:
	ldr r0, [r1]
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start func_0809B0B0
func_0809B0B0: @ 0x0809B0B0
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0xfc
	ldr r0, [r1]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	movs r0, #0x94
	lsls r0, r0, #1
	adds r3, r2, r0
	ldr r2, [r3]
	ldr r0, [r1]
	cmp r2, r0
	blo _0809B0D2
	adds r1, r3, #0
_0809B0D2:
	ldr r0, [r1]
	pop {r1}
	bx r1

	thumb_func_start func_0809B0D8
func_0809B0D8: @ 0x0809B0D8
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0xfc
	ldr r0, [r1]
	subs r0, #1
	lsls r0, r0, #3
	adds r0, #4
	adds r1, r1, r0
	movs r0, #0x96
	lsls r0, r0, #1
	adds r3, r2, r0
	ldr r2, [r3]
	ldr r0, [r1, #4]
	adds r1, #4
	cmp r2, r0
	blo _0809B0FC
	adds r1, r3, #0
_0809B0FC:
	ldr r0, [r1]
	pop {r1}
	bx r1
	.align 2, 0
